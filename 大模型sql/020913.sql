**01二代利率_06创表_用来存放计算出来的利率.sql
-- ODPS SQL
-- **********************************************************************
-- 功能描述:
-- **
-- 创建者: 谢立英
-- 创建日期: 2020-11-10 09:25:36
-- **
-- 修改日志:
-- 修改日期          修改人          修改内容
-- **
-- **********************************************************************
DROP table lab_risk_dev.tmp_zx_rate_only_second;
CREATE TABLE  lab_risk_dev.tmp_zx_rate_only_second
(
cst_id                          string
,report_no                       string
,report_dt                       string
,id                              string
,dtrb_org                        string
,pd_cd                           string
,ctr_amt                          int
,start_dt              			 string
,mtu_dt                 		 string
,rpay_trm                         int
,grnt_mth_cd                     string
,ctr_bal                          int
,rmn_rpay_trm                     int
,shd_pay_day             		 string
,late_one_tm_rpay_dt             string
,cur_mon_shd_rpay                 int
,cur_mon_actl_rpay                int
,act_sts_cd                      string
,dtrb_org_typ_cd                 string
,rpay_frq_cd                     string
,term_months                      int
,shd_minus_start_dt    			int
,shd_minus_start_mm           int
,actl_minus_start_mm    int
,actl_minus_start_dt    int
,repay_type 					string
,irr							decimal
)
COMMENT
'征信利率结果表只算能计算的'
PARTITIONED BY
(
    dt STRING COMMENT '日期分区'
)
LIFECYCLE 3600
;
SELECT * FROM tmp_zx_rate_only_second where dt='19900305'
**01二代利率_简版征信埋点.sql
DROP TABLE IF EXISTS LAB_BIGDATA_DEV.tmp_report_visit_mon_statistics_bef;

CREATE TABLE LAB_BIGDATA_DEV.tmp_report_visit_mon_statistics_bef AS
SELECT  a.user_id
        ,a.org_id
        ,a.channel
        ,a.viewtime
        ,concat(substr(a.viewtime,1,4),substr(a.viewtime,6,2),substr(a.viewtime,9,2)) dt
        ,a.reportversion
        ,a.reporttype
        ,a.reportid
FROM    edw.ncip_zx_buriedpoint_collect a
WHERE   a.dt <= '20240930'
;
ALTER TABLE lab_bigdata_dev.tmp_report_visit_mon_statistics_bef SET COMMENT '征信埋点监测临时表';

-----------图1.1：月访问量统计、访问量趋势------
DROP TABLE IF EXISTS LAB_BIGDATA_DEV.tmp_report_visit_mon_statistics;

CREATE TABLE LAB_BIGDATA_DEV.tmp_report_visit_mon_statistics AS
SELECT  substr(dt, 1, 6) dt_mon
        ,sum(CASE
               WHEN reportversion = '1' THEN 1
               ELSE 0
             END) 简版月访问次数
        ,count(DISTINCT CASE
                          WHEN reportversion = '1' THEN user_id
                        END) 简版月访问人数
        ,count(DISTINCT CASE
                          WHEN reportversion = '1' THEN reportid
                        END) 简版月访问报告数
        ,CASE
           WHEN count(DISTINCT CASE
                                 WHEN reportversion = '1' THEN user_id
                               END) = 0 THEN 0
           ELSE sum(CASE
                      WHEN reportversion = '1' THEN 1
                      ELSE 0
                    END) / count(DISTINCT CASE
                                            WHEN reportversion = '1' THEN user_id
                                          END)
         END AS 简版月人均访问次数
        ,CASE
           WHEN count(DISTINCT CASE
                                 WHEN reportversion = '1' THEN user_id
                               END) = 0 THEN 0
           ELSE count(DISTINCT CASE
                                 WHEN reportversion = '1' THEN reportid
                               END) / count(DISTINCT CASE
                                                       WHEN reportversion = '1' THEN user_id
                                                     END)
         END AS 简版月人均访问报告数
        ,sum(CASE
               WHEN reportversion = '0' THEN 1
               ELSE 0
             END) 人行版月访问次数
        ,count(DISTINCT CASE
                          WHEN reportversion = '0' THEN user_id
                        END) 人行版月访问人数
        ,count(DISTINCT CASE
                          WHEN reportversion = '0' THEN reportid
                        END) 人行版月访问报告数
        ,CASE
           WHEN count(DISTINCT CASE
                                 WHEN reportversion = '0' THEN user_id
                               END) = 0 THEN 0
           ELSE sum(CASE
                      WHEN reportversion = '0' THEN 1
                      ELSE 0
                    END) / count(DISTINCT CASE
                                            WHEN reportversion = '0' THEN user_id
                                          END)
         END AS 人行版月人均访问次数
        ,CASE
           WHEN count(DISTINCT CASE
                                 WHEN reportversion = '0' THEN user_id
                               END) = 0 THEN 0
           ELSE count(DISTINCT CASE
                                 WHEN reportversion = '0' THEN reportid
                               END) / count(DISTINCT CASE
                                                       WHEN reportversion = '0' THEN user_id
                                                     END)
         END AS 人行版月人均访问报告数
        ,row_number() OVER ( ORDER BY substr(dt, 1, 6) DESC ) row_no
FROM    LAB_BIGDATA_DEV.tmp_report_visit_mon_statistics_bef --征信埋点采集表
WHERE   dt <= '20240930'
GROUP BY substr(dt, 1, 6);

ALTER TABLE lab_bigdata_dev.tmp_report_visit_mon_statistics SET COMMENT '埋点监测图1.1：月访问量统计、访问量趋势';


-----------图1.2：日访问量统计、访问量趋势------
DROP TABLE IF EXISTS LAB_BIGDATA_DEV.tmp_report_visit_day_statistics;

CREATE TABLE LAB_BIGDATA_DEV.tmp_report_visit_day_statistics AS
SELECT dt
        ,sum(CASE
               WHEN reportversion = '1'  THEN 1
               ELSE 0
             END) 简版日访问次数
        ,count(DISTINCT CASE
                          WHEN reportversion = '1'  THEN user_id
                        END) 简版日访问人数
        ,count(DISTINCT CASE
                          WHEN reportversion = '1'  THEN reportid
                        END) 简版日访问报告数
        ,CASE
           WHEN count(DISTINCT CASE
                                 WHEN reportversion = '1'  THEN user_id
                               END) = 0 THEN 0
           ELSE sum(CASE
                      WHEN reportversion = '1'  THEN 1
                      ELSE 0
                    END) / count(DISTINCT CASE
                                            WHEN reportversion = '1'  THEN user_id
                                          END)
         END AS 简版日人均访问次数
        ,CASE
           WHEN count(DISTINCT CASE
                                 WHEN reportversion = '1'  THEN user_id
                               END) = 0 THEN 0
           ELSE count(DISTINCT CASE
                                 WHEN reportversion = '1'  THEN reportid
                               END) / count(DISTINCT CASE
                                                       WHEN reportversion = '1'  THEN user_id
                                                     END)
         END AS 简版日人均访问报告数
        ,sum(CASE
               WHEN reportversion = '0'  THEN 1
               ELSE 0
             END) 人行版日访问次数
        ,count(DISTINCT CASE
                          WHEN reportversion = '0'  THEN user_id
                        END) 人行版日访问人数
        ,count(DISTINCT CASE
                          WHEN reportversion = '0'  THEN reportid
                        END) 人行版日访问报告数
        ,CASE
           WHEN count(DISTINCT CASE
                                 WHEN reportversion = '0'  THEN user_id
                               END) = 0 THEN 0
           ELSE sum(CASE
                      WHEN reportversion = '0'  THEN 1
                      ELSE 0
                    END) / count(DISTINCT CASE
                                            WHEN reportversion = '0'  THEN user_id
                                          END)
         END AS 人行版日人均访问次数
        ,CASE
           WHEN count(DISTINCT CASE
                                 WHEN reportversion = '0'  THEN user_id
                               END) = 0 THEN 0
           ELSE count(DISTINCT CASE
                                 WHEN reportversion = '0'  THEN reportid
                               END) / count(DISTINCT CASE
                                                       WHEN reportversion = '0'  THEN user_id
                                                     END)
         END AS 人行版日人均访问报告数
         ,row_number() OVER ( ORDER BY dt DESC ) row_no
FROM    LAB_BIGDATA_DEV.tmp_report_visit_mon_statistics_bef --征信埋点采集表
WHERE   dt <= '20240930'
group by dt
;
alter table lab_bigdata_dev.tmp_report_visit_day_statistics set comment '埋点监测图1.2：日访问量统计、访问量趋势';

-----------图2：月访问次数TOP排名 客户经理姓名------
DROP TABLE IF EXISTS LAB_BIGDATA_DEV.tmp_report_visit_mon_statistics_top;

CREATE TABLE LAB_BIGDATA_DEV.tmp_report_visit_mon_statistics_top AS
SELECT  t.org_id
        ,t6.sum_org_nm AS prm_zh_org_nm -- 主管户支行名称
        ,t.user_id
        ,t8.empe_nm    AS prm_empe_nm -- 主管户客户经理姓名
        ,sum(CASE
               WHEN reportversion = '1' THEN 1
               ELSE 0
             END) 简版月访问次数
        ,count(DISTINCT CASE
                          WHEN reportversion = '1' THEN user_id
                        END) 简版月访问人数
        ,count(DISTINCT CASE
                          WHEN reportversion = '1' THEN reportid
                        END) 简版月访问报告数
        ,CASE
           WHEN count(DISTINCT CASE
                                 WHEN reportversion = '1' THEN user_id
                               END) = 0 THEN 0
           ELSE sum(CASE
                      WHEN reportversion = '1' THEN 1
                      ELSE 0
                    END) / count(DISTINCT CASE
                                            WHEN reportversion = '1' THEN user_id
                                          END)
         END           AS 简版月人均访问次数
        ,CASE
           WHEN count(DISTINCT CASE
                                 WHEN reportversion = '1' THEN user_id
                               END) = 0 THEN 0
           ELSE count(DISTINCT CASE
                                 WHEN reportversion = '1' THEN reportid
                               END) / count(DISTINCT CASE
                                                       WHEN reportversion = '1' THEN user_id
                                                     END)
         END           AS 简版月人均访问报告数
        ,sum(CASE
               WHEN reportversion = '0' THEN 1
               ELSE 0
             END) 人行版月访问次数
        ,count(DISTINCT CASE
                          WHEN reportversion = '0' THEN user_id
                        END) 人行版月访问人数
        ,count(DISTINCT CASE
                          WHEN reportversion = '0' THEN reportid
                        END) 人行版月访问报告数
        ,CASE
           WHEN count(DISTINCT CASE
                                 WHEN reportversion = '0' THEN user_id
                               END) = 0 THEN 0
           ELSE sum(CASE
                      WHEN reportversion = '0' THEN 1
                      ELSE 0
                    END) / count(DISTINCT CASE
                                            WHEN reportversion = '0' THEN user_id
                                          END)
         END           AS 人行版月人均访问次数
        ,CASE
           WHEN count(DISTINCT CASE
                                 WHEN reportversion = '0' THEN user_id
                               END) = 0 THEN 0
           ELSE count(DISTINCT CASE
                                 WHEN reportversion = '0' THEN reportid
                               END) / count(DISTINCT CASE
                                                       WHEN reportversion = '0' THEN user_id
                                                     END)
         END           AS 人行版月人均访问报告数
FROM    LAB_BIGDATA_DEV.tmp_report_visit_mon_statistics_bef t --征信埋点采集表
LEFT JOIN    edw.dim_hr_org_sum_org_rel_dd t6
ON      t.org_id = t6.UNT_ORG_ID
AND     t6.dt = '20240930'
AND     t6.SUM_ORG_LVL = 'Z'
AND     t6.ORG_RLTN_DIM_CD = 'WD3'
AND     t6.SUM_TYP_CD = '1' --支行
LEFT JOIN    edw.dim_hr_empe_bas_inf_dd t8
ON      t.user_id = t8.empe_id
AND     t8.dt = '20240930'
WHERE   substr(t.dt,1,6) = substr('20240930',1,6)
AND     t.dt <= '20240930'
GROUP BY t.org_id , t6.sum_org_nm , t.user_id , t8.empe_nm;
alter table lab_bigdata_dev.tmp_report_visit_mon_statistics_top set comment '埋点监测图2：月访问次数TOP排名_客户经理姓名';


-----------图3：按月份、角色月访问次数统计------
DROP TABLE IF EXISTS LAB_BIGDATA_DEV.tmp_report_visit_mon_statistics_job_name;

CREATE TABLE LAB_BIGDATA_DEV.tmp_report_visit_mon_statistics_job_name AS
SELECT  t9.c_job_name AS 职位名称
        -- ,t.org_id
        -- ,t6.sum_org_nm AS prm_zh_org_nm -- 主管户支行名称
        -- ,t.user_id
        -- ,t8.empe_nm    AS prm_empe_nm -- 主管户客户经理姓名
        ,sum(CASE
               WHEN reportversion = '1' THEN 1
               ELSE 0
             END) 简版月访问次数
        ,count(DISTINCT CASE
                          WHEN reportversion = '1' THEN user_id
                        END) 简版月访问人数
        ,count(DISTINCT CASE
                          WHEN reportversion = '1' THEN reportid
                        END) 简版月访问报告数
        ,CASE
           WHEN count(DISTINCT CASE
                                 WHEN reportversion = '1' THEN user_id
                               END) = 0 THEN 0
           ELSE sum(CASE
                      WHEN reportversion = '1' THEN 1
                      ELSE 0
                    END) / count(DISTINCT CASE
                                            WHEN reportversion = '1' THEN user_id
                                          END)
         END           AS 简版月人均访问次数
        ,CASE
           WHEN count(DISTINCT CASE
                                 WHEN reportversion = '1' THEN user_id
                               END) = 0 THEN 0
           ELSE count(DISTINCT CASE
                                 WHEN reportversion = '1' THEN reportid
                               END) / count(DISTINCT CASE
                                                       WHEN reportversion = '1' THEN user_id
                                                     END)
         END           AS 简版月人均访问报告数
        ,sum(CASE
               WHEN reportversion = '0' THEN 1
               ELSE 0
             END) 人行版月访问次数
        ,count(DISTINCT CASE
                          WHEN reportversion = '0' THEN user_id
                        END) 人行版月访问人数
        ,count(DISTINCT CASE
                          WHEN reportversion = '0' THEN reportid
                        END) 人行版月访问报告数
        ,CASE
           WHEN count(DISTINCT CASE
                                 WHEN reportversion = '0' THEN user_id
                               END) = 0 THEN 0
           ELSE sum(CASE
                      WHEN reportversion = '0' THEN 1
                      ELSE 0
                    END) / count(DISTINCT CASE
                                            WHEN reportversion = '0' THEN user_id
                                          END)
         END           AS 人行版月人均访问次数
        ,CASE
           WHEN count(DISTINCT CASE
                                 WHEN reportversion = '0' THEN user_id
                               END) = 0 THEN 0
           ELSE count(DISTINCT CASE
                                 WHEN reportversion = '0' THEN reportid
                               END) / count(DISTINCT CASE
                                                       WHEN reportversion = '0' THEN user_id
                                                     END)
         END           AS 人行版月人均访问报告数
FROM    LAB_BIGDATA_DEV.tmp_report_visit_mon_statistics_bef t --征信埋点采集表
LEFT JOIN    edw.dim_hr_org_sum_org_rel_dd t6
ON      t.org_id = t6.UNT_ORG_ID
AND     t6.dt = '20240930'
AND     t6.SUM_ORG_LVL = 'Z'
AND     t6.ORG_RLTN_DIM_CD = 'WD3'
AND     t6.SUM_TYP_CD = '1' --支行
LEFT JOIN    edw.dim_hr_empe_bas_inf_dd t8
ON      t.user_id = t8.empe_id
AND     t8.dt = '20240930'
LEFT JOIN    edw.nhrm_tb_sta_emp t9
ON      t.user_id = t9.c_code
AND     t9.dt = '20240930'
WHERE   substr(t.dt, 1, 6) = substr('20240930', 1, 6)
AND     t.dt <= '20240930'
GROUP BY  t9.c_job_name;


alter table lab_bigdata_dev.tmp_report_visit_mon_statistics_job_name set comment '埋点监测图3：按月份、角色月访问次数统计';

-----------图4：电脑端、PAD端按渠道统计------
DROP TABLE IF EXISTS LAB_BIGDATA_DEV.tmp_report_visit_mon_statistics_channel;

CREATE TABLE LAB_BIGDATA_DEV.tmp_report_visit_mon_statistics_channel AS
SELECT  CASE
          WHEN channel = 'B12' THEN 'PAD'
          WHEN channel = 'M01' THEN '电脑端'
        END channel
        ,sum(CASE
               WHEN reportversion = '1' THEN 1
               ELSE 0
             END) 简版近30天访问次数
FROM    LAB_BIGDATA_DEV.tmp_report_visit_mon_statistics_bef --征信埋点采集表
WHERE   dt <= '20240930'
AND     DT >= '20240901'
GROUP BY CASE
           WHEN channel = 'B12' THEN 'PAD'
           WHEN channel = 'M01' THEN '电脑端'
         END
;
alter table lab_bigdata_dev.tmp_report_visit_mon_statistics_channel set comment '埋点监测图4：电脑端、PAD端按渠道统计';

--------图5：饼图_征信报告分类
DROP TABLE IF EXISTS LAB_BIGDATA_DEV.tmp_report_visit_statistics_reporttype;

CREATE TABLE LAB_BIGDATA_DEV.tmp_report_visit_statistics_reporttype AS
SELECT  dt
        ,user_Id
        ,CASE
           WHEN 是否简版征信 = '1' AND 是否人行版征信 = '1' THEN '同时查看简版、人行版'
           WHEN 是否简版征信 = '1' AND 是否人行版征信 = '0' THEN '仅看简版'
           WHEN 是否简版征信 = '0' AND 是否人行版征信 = '1' THEN '仅看人行版'
         END AS report_type
        ,count(1) 报告数
FROM    (
            SELECT  dt
                    ,user_id
                    ,reportid
                    ,max(CASE
                           WHEN reportversion = '1' THEN '1'
                           ELSE '0'
                         END) AS 是否简版征信
                    ,max(CASE
                           WHEN reportversion = '0' THEN '1'
                           ELSE '0'
                         END) AS 是否人行版征信
            FROM    LAB_BIGDATA_DEV.tmp_report_visit_mon_statistics_bef
            WHERE   dt <= '20240930'
            AND     DT >= '20240901'
            GROUP BY dt , user_id , reportid
        ) p
GROUP BY dt , user_Id , CASE
                          WHEN 是否简版征信 = '1' AND 是否人行版征信 = '1' THEN '同时查看简版、人行版'
                          WHEN 是否简版征信 = '1' AND 是否人行版征信 = '0' THEN '仅看简版'
                          WHEN 是否简版征信 = '0' AND 是否人行版征信 = '1' THEN '仅看人行版'
                        END;
alter table lab_bigdata_dev.tmp_report_visit_statistics_reporttype set comment '埋点监测图5：饼图_征信报告分类';

--------图6：饼图_个人企业征信报告分类
DROP TABLE IF EXISTS LAB_BIGDATA_DEV.tmp_report_visit_statistics_reporttype1;

CREATE TABLE LAB_BIGDATA_DEV.tmp_report_visit_statistics_reporttype1 AS
SELECT  CASE
          WHEN reporttype = '1' THEN '企业'
          WHEN reporttype = '0' THEN '个人'
        END AS reporttype1
        ,sum(CASE
               WHEN reportversion = '1' THEN 1
               ELSE 0
             END) 简版近30天访问次数
FROM    LAB_BIGDATA_DEV.tmp_report_visit_mon_statistics_bef
 WHERE   dt <= '20240930'
AND     DT >= '20240901'
GROUP BY CASE
           WHEN reporttype = '1' THEN '企业'
           WHEN reporttype = '0' THEN '个人'
         END
;
alter table lab_bigdata_dev.tmp_report_visit_statistics_reporttype1 set comment '图6：饼图_个人企业征信报告分类';
drop table if exists lab_bigdata_dev.tmp_report_online_info;
create table if not exists lab_bigdata_dev.tmp_report_online_info as
SELECT  '20220816' AS dt
        ,'埋点上线'    AS info
UNION ALL
SELECT  '20211110' AS dt
        ,'简版征信上线'    AS info
UNION ALL
SELECT  '20200314' AS dt
        ,'人行二代征信上线' AS info
;
alter table lab_bigdata_dev.tmp_report_online_info set comment '埋点监测图0：征信数据时间轴';
**02互金零售通缴费通分析_01零售通业务.sql
select * from lab_prtc_dev.tmp_if_retail_01
where mch_id='8201906260038504'
SELECT * FROM edw.dwd_bus_chnl_ths_smy_entr_act_di
where dt=20201108;

SELECT * FROM edw.dwd_code_library_dd  --edw.loan_code_library
where dt=20201108
and fld_nm=upper('dim_bus_chnl_ths_mch_inf_dd')
**02互金零售通缴费通分析_03码商客户清单.sql
DROP TABLE IF EXISTS lab_prtc_dev.cst_inf0;
CREATE TABLE lab_prtc_dev.cst_inf0 AS
select  t1.*,t2.idt_cd,t2.ind_bus_ind,t2.mic_entp_own_ind,t2.gdr_cd,t2.age
        ,t2.mrg_situ_cd,t2.hi_acdm_deg_cd,t2.chd_nbr,t2.fml_nbr,t2.fml_mon_inc,t2.rsd_situ_cd,t2.opr_year_nbr
from adm_cst.adm_csm_cbus_pd_hld_inf_dd	t1 --客户持有产品信息表
left join adm_cst.adm_csm_cbas_idv_bas_inf_dd	t2 --个人客户信息表
on t1.cst_id=t2.cst_id
and t2.dt=20201128
where t1.dt=20201128;


CREATE TABLE lab_prtc_dev.all_feature_ms AS
SELECT t.*,row_number() over(order by cst_id asc )rn
from lab_prtc_dev.all_feature t;

DROP TABLE IF EXISTS lab_prtc_dev.all_feature_20201027;
CREATE TABLE lab_prtc_dev.all_feature_20201027 AS
SELECT * FROM lab_prtc_dev.all_feature_ms;

DROP TABLE IF EXISTS lab_risk_dev.all_feature_ms;
CREATE TABLE lab_risk_dev.all_feature_ms AS
SELECT * FROM lab_prtc_dev.all_feature_ms
**02互金零售通缴费通分析_商城第3张表分渠道.sql
-- ODPS SQL
-- **********************************************************************
-- 功能描述:
-- **
-- 创建者: 龙彬彬
-- 创建日期: 2022-03-22 16:44:28
-- **
-- 修改日志:
-- 修改日期          修改人          修改内容
-- **
-- **********************************************************************
**03同一风险控制号去重.sql
--同一风险客户清单（数据从21年1月开始，dt从20210101开始）
DROP TABLE IF EXISTS fxb_dcbg_samerisk_apply_cst_01 PURGE;
CREATE TABLE IF NOT EXISTS fxb_dcbg_samerisk_apply_cst_01
(
    sam_rsk_ctrl_id STRING COMMENT '同一风险控制号'
    ,cst_id         STRING COMMENT '客户号'
    ,date_dt        STRING COMMENT '日期'
)
COMMENT
'同一风险控制号下客户清单'
PARTITIONED BY
(
    DT STRING COMMENT '日期分区'
)
LIFECYCLE 3600;
ALTER TABLE fxb_dcbg_samerisk_apply_cst_01 DROP IF EXISTS PARTITION ( DT <= '20240902' ) PURGE;
INSERT OVERWRITE TABLE fxb_dcbg_samerisk_apply_cst_01 PARTITION (dt = '20250228')
SELECT  DISTINCT a.sam_rsk_ctrl_id
                 ,a.cst_id
                 ,a.dt
FROM    edw.dws_cst_bas_inf_dd a -- 客户基本信息表
WHERE   a.dt = '20250228'
AND     a.cst_id <> ''
AND     a.sam_rsk_ctrl_id <> '';



--关联近5年最新一笔征信报告：个人+企业
DROP TABLE IF EXISTS fxb_dcbg_samerisk_apply_cst_02 PURGE;
CREATE TABLE IF NOT EXISTS fxb_dcbg_samerisk_apply_cst_02
(
    sam_rsk_ctrl_id STRING COMMENT '同一风险控制号'
    ,cst_id         STRING COMMENT '客户号'
    ,date_dt        STRING COMMENT '日期'
    ,report_no      STRING COMMENT '征信报告编号'
)
COMMENT
'征信负债去重_客户近6月最新征信报告'
PARTITIONED BY
(
    DT STRING COMMENT '日期分区'
)
LIFECYCLE 3600;
ALTER TABLE fxb_dcbg_samerisk_apply_cst_02 DROP IF EXISTS PARTITION ( DT <= '20240902' ) PURGE;
INSERT OVERWRITE TABLE fxb_dcbg_samerisk_apply_cst_02 PARTITION (dt = '20250228')
SELECT  t.sam_rsk_ctrl_id
        ,t.cst_id
        ,t.date_dt
        ,t.report_no
FROM    (
            SELECT  a.sam_rsk_ctrl_id
                    ,a.cst_id
                    ,a.date_dt
                    ,b.report_no
                    ,row_number() OVER ( PARTITION BY a.cst_id , a.date_dt ORDER BY b.report_dt DESC ) AS rn
            FROM    fxb_dcbg_samerisk_apply_cst_01 a
            JOIN    edw.dws_cst_ccrc_entp_ind_inf_dd b
            ON      a.cst_id = b.cst_id
            AND     b.dt = '20250228'
            AND     datediff(to_date(a.date_dt, 'yyyyMMdd'), to_date(REPLACE(b.report_dt, '-', ''), 'yyyyMMdd'), 'dd') <= 1800
            AND     datediff(to_date(a.date_dt, 'yyyyMMdd'), to_date(REPLACE(b.report_dt, '-', ''), 'yyyyMMdd'), 'dd') >= 0
            WHERE   a.cst_id  is not null
            AND     b.report_no IS NOT NULL
            AND     a.dt = '20250228'
            UNION ALL
            SELECT  a.sam_rsk_ctrl_id
                    ,a.cst_id
                    ,a.date_dt
                    ,b.report_no
                    ,row_number() OVER ( PARTITION BY a.cst_id , a.date_dt ORDER BY b.report_dt DESC ) AS rn
            FROM    fxb_dcbg_samerisk_apply_cst_01 a
            JOIN    edw.dws_cst_ccrc_idv_ind_inf_dd b
            ON      a.cst_id = b.cst_id
            AND     b.dt = '20250228'
            AND     datediff(to_date(a.date_dt, 'yyyyMMdd'), to_date(REPLACE(substr(b.report_dt, 1, 10), '-', ''), 'yyyyMMdd'), 'dd') <= 1800
            AND     datediff(to_date(a.date_dt, 'yyyyMMdd'), to_date(REPLACE(substr(b.report_dt, 1, 10), '-', ''), 'yyyyMMdd'), 'dd') >= 0
            WHERE   a.cst_id rlike '^(1|7)'
            AND     b.report_no IS NOT NULL
            AND     a.dt = '20250228'
        ) t
WHERE   t.rn = 1;



--- 形成 他行的征信报告汇总表  对私负债+对公负债+对私或有负债 +对公或有负债借贷担保不含贴现+对公或有负债担保账户
DROP TABLE IF EXISTS fxb_dcbg_samerisk_apply_cst_03 PURGE;
CREATE TABLE IF NOT EXISTS fxb_dcbg_samerisk_apply_cst_03
(
    report_id                  STRING COMMENT '报告号'
    ,record_type               STRING COMMENT '记录类型'
    ,brw_id_type               STRING COMMENT '主借款人类型'
    ,org_code                  STRING COMMENT '机构编号'
    ,org_type                  STRING COMMENT '机构类型'
    ,open_date                 STRING COMMENT '开立日期'
    ,due_date                  STRING COMMENT '到期日期'
    ,account_type              STRING COMMENT '账户类型'
    ,pd_cd                     STRING COMMENT '产品类型'
    ,loan_amt                        DECIMAL COMMENT '贷款金额'
    ,bal                       decimal COMMENT '贷款余额'
    ,grnt_mode                 STRING COMMENT '担保方式'
    ,cb_mark                   STRING COMMENT '共同借款标识'
    ,related_repayment_type    STRING COMMENT '相关还款责任'
    ,related_repayment_amt     decimal COMMENT '相关还款责任金额'
    ,ccy                       STRING COMMENT ''
    ,credit_lmt                decimal COMMENT '授信协议额度'
    ,credit_num                STRING COMMENT '授信协议编号'
    ,o_credit_amt              decimal COMMENT '授信额度类型'
    ,agm_lmt_purpose           STRING COMMENT '授信协议额度用途'
    ,loan_orgagm_atmsum        decimal COMMENT '对应该机构贷款授信协议总金额'  ---对应该机构贷款授信协议总金额
    ,card_orgagm_atmsum        decimal COMMENT '对应该机构信用卡授信协议总金额'  --对应该机构信用卡授信协议总金额
    ,ccard_amt                 decimal COMMENT '信用卡账户授信金额（剔除大额分期：本质为有场景的消费贷）' --- 信用卡账户授信金额（剔除大额分期：本质为有场景的消费贷）
    ,balance_rmb               decimal COMMENT '余额人民币'
    ,magin_ratio               decimal COMMENT '保证金比例'
    ,related_repayment_amt_rmb decimal COMMENT '相关还款责任金额人民币'
)
COMMENT
'征信负债去重_他行征信报告信息汇总表'
PARTITIONED BY
(
    DT STRING COMMENT '日期分区'
)
LIFECYCLE 3600;
ALTER TABLE fxb_dcbg_samerisk_apply_cst_03 DROP IF EXISTS PARTITION ( DT <= '@@{yyyyMMdd-1d}' ) PURGE;
INSERT OVERWRITE TABLE fxb_dcbg_samerisk_apply_cst_03 PARTITION (dt = '20250228')
SELECT  report_id
        ,'负债'                                                                                                                AS record_type -- 记录类型
        ,'1'                                                                                                                 AS brw_id_type -- 主借款人类型 1 个人 2 企业
        ,org_code                                                                                                            AS org_code -- 机构编号
        ,org_type                                                                                                            AS org_type -- 机构类型
        ,substr(REPLACE(act_start_dt, '-', ''), 1, 8)                                                                        AS open_date -- 开立日期
        ,IF(substr(REPLACE(act_mtu_dt, '-', ''), 1, 8) = '20991231', '99991231', substr(REPLACE(act_mtu_dt, '-', ''), 1, 8)) AS due_date
        ,act_typ_cd                                                                                                          AS account_type
        ,CAST(act_pd_cd AS STRING)                                                                                           AS pd_cd
        ,CAST(CASE
                WHEN loan_amt RLIKE '^(-)?[0-9]+(\.[0-9]+)?$' THEN loan_amt
              END AS DECIMAL)                                                                                                AS loan_amt --贷款发放额度 --c1+d1+r4：ctr_amt 贷款金额 r1：act_crd_lmt   账户授信额度 82：uesd_installment_money已用分期金额
        ,CAST(CASE
                WHEN bal RLIKE '^(-)?[0-9]+(\.[0-9]+)?$' THEN bal
              END AS DECIMAL)                                                                                                AS bal
        ,grnt_mth_cd                                                                                                         AS grnt_mode
        ,com_brw_ind                                                                                                         AS cb_mark
        ,''                                                                                                                  AS related_repayment_type
        ,NULL                                                                                                                AS related_repayment_amt --相关还款责任金额
        ,coalesce(act_ccy_cd, agm_ccy)                                                                                       AS ccy
        ,CAST(CASE
                WHEN agm_lmt RLIKE '^(-)?[0-9]+(\.[0-9]+)?$' THEN agm_lmt
              END AS DECIMAL)                                                                                                AS credit_lmt
        ,agm_quota_no                                                                                                        AS credit_num
        ,NULL                                                                                                                AS o_credit_amt
        ,agm_lmt_purpose                                                                                                     AS agm_lmt_purpose
        ,CAST(loan_orgagm_atmsum AS DECIMAL)                                                                                 AS loan_orgagm_atmsum ---对应该机构贷款授信协议总金额
        ,CAST(card_orgagm_atmsum AS DECIMAL)                                                                                 AS card_orgagm_atmsum --对应该机构信用卡授信协议总金额
        ,CAST(ccard_amt AS DECIMAL)                                                                                          AS ccard_amt  --- 信用卡账户授信金额（剔除大额分期：本质为有场景的消费贷）
        ,NULL                                                                                                                AS balance_rmb
        ,NULL                                                                                                                AS MAGIN_RATIO
        ,NULL                                                                                                                AS related_repayment_amt_rmb --相关还款责任金额
FROM    edw.ncip_cp_m_account_info --个人借贷账户信息
WHERE   is_self_org = 0
AND     length(org_code) <= 2
AND     acc_status_type <> 3
AND     dt <= '20250228'
AND     dt >= '20200314' -- 5年数据
UNION ALL
SELECT  report_id
        ,'或有负债'                                                                                                                AS record_type
        ,mainbor_identype                                                                                                      AS brw_id_type  --主借款人身份类别
        ,bussup_ins                                                                                                            AS org_code
        ,bussup_instype                                                                                                        AS org_type
        ,substr(REPLACE(open_date, '-', ''), 1, 8)                                                                             AS open_date
        ,IF(substr(REPLACE(expire_date, '-', ''), 1, 8) = '20991231', '99991231', substr(REPLACE(expire_date, '-', ''), 1, 8)) AS due_date
        ,account_type                                                                                                          AS account_type
        ,CAST(busi_type AS STRING)                                                                                             AS pd_cd
        ,NULL                                                                                                                  AS loan_amt
        ,CAST(CASE
                WHEN money RLIKE '^(-)?[0-9]+(\.[0-9]+)?$' THEN money
              END AS DECIMAL)                                                                                                  AS bal
        ,''                                                                                                                    AS grnt_mode
        ,''                                                                                                                    AS cb_mark
        ,reires_humtype                                                                                                        AS related_repayment_type --相关还款责任人类型
        ,CAST(CASE
                WHEN reilia_relamount RLIKE '^(-)?[0-9]+(\.[0-9]+)?$' THEN reilia_relamount
              END AS DECIMAL)                                                                                                  AS related_repayment_amt --相关还款责任金额
        ,currency                                                                                                              AS ccy
        ,NULL                                                                                                                  AS credit_lmt
        ,guacon_number                                                                                                         AS credit_num -- 保证合同号
        ,NULL                                                                                                                  AS o_credit_amt
        ,NULL                                                                                                                  AS agm_lmt_purpose
        ,NULL                                                                                                                  AS loan_orgagm_atmsum
        ,NULL                                                                                                                  AS card_orgagm_atmsum
        ,NULL                                                                                                                  AS ccard_amt
        ,CAST(CASE
                WHEN money RLIKE '^(-)?[0-9]+(\.[0-9]+)?$' THEN money
              END AS DECIMAL)                                                                                                  AS balance_rmb --余额
        ,NULL                                                                                                                  AS MAGIN_RATIO
        ,CAST(CASE
                WHEN reilia_relamount RLIKE '^(-)?[0-9]+(\.[0-9]+)?$' THEN reilia_relamount
              END AS DECIMAL)                                                                                                  AS related_repayment_amt_rmb --相关还款责任金额RMB
FROM    edw.ncip_cp_m_payliainf --个人相关还款协议表
WHERE   length(bussup_ins) <= 2
AND     dt <= '20250228'
AND     dt >= '20200314' -- 5年数据
UNION ALL
SELECT  a.report_id
        ,'负债'                                                                                                                                                            AS record_type
        ,'2'                                                                                                                                                             AS brw_id_type
        ,a.org_number                                                                                                                                                    AS org_code
        ,a.org_type                                                                                                                                                      AS org_type
        ,substr(REPLACE(coalesce(a.open_date, a.effective_date), '-', ''), 1, 8)                                                                                         AS open_date
        ,IF(substr(REPLACE(coalesce(a.due_date, a.end_date), '-', ''), 1, 8) = '20991231', '99991231', substr(REPLACE(coalesce(a.due_date, a.end_date), '-', ''), 1, 8)) AS due_date
        ,a.account_type_modify                                                                                                                                           AS account_type  -- 修正，主要对担保账户类型进行了修正
        ,CAST(substr(a.pd_cd_modify, 1, 2) AS STRING)                                                                                                                    AS pd_cd
        ,a.loan_amount                                                                                                                                                   AS loan_amt
        ,a.balance                                                                                                                                                       AS bal
        ,a.gua_mode                                                                                                                                                      AS grnt_mode
        ,a.cb_mark                                                                                                                                                       AS cb_mark  --共同借款标识/共同债务标识
        ,''                                                                                                                                                              AS related_repayment_type
        ,NULL                                                                                                                                                            AS related_repayment_amt --相关还款责任金额
        ,a.loan_currency                                                                                                                                                 AS ccy
        ,a.credit_amt_modify                                                                                                                                             AS credit_lmt   -- 授信金额 新加工，已折合成人民币
        ,a.credit_agreement_num                                                                                                                                          AS credit_num  -- 授信协议编号
        ,t1.credit_line                                                                                                                                                  AS o_credit_amt --授信额度类型
        ,NULL                                                                                                                                                            AS agm_lmt_purpose
        ,NULL                                                                                                                                                            AS loan_orgagm_atmsum
        ,NULL                                                                                                                                                            AS card_orgagm_atmsum
        ,NULL                                                                                                                                                            AS ccard_amt
        ,balance_rmb                                                                                                                                                     AS balance_rmb
        ,MAGIN_RATIO                                                                                                                                                     AS MAGIN_RATIO
        ,NULL                                                                                                                                                            AS related_repayment_amt_rmb --相关还款责任金额
FROM    edw.ncip_ce_m_account_info a --企业信贷账户信息
LEFT JOIN    edw.ncip_ed06_eccc_credit t1
ON      a.report_id = t1.report_id
AND     a.credit_number = t1.credit_agreement_num
AND     t1.dt <= '20250228'
AND     t1.dt >= '20200314' -- 5年数据
AND     a.dt = t1.dt
WHERE   a.is_self_org = 0
AND     nvl(a.account_state_modify, '1') = '1'  -- 账户活动状态修正 主要是对C1账户进行了修改
AND     a.dt <= '20250228'
AND     a.dt >= '20200314' -- 5年数据
AND     (
        CASE
          WHEN a.ACCOUNT_TYPE_MODIFY = 'G1' AND a.PD_CD_MODIFY = '11' OR a.PD_CD_MODIFY = '99' THEN 1
          ELSE 0
        END
) = 0
AND     nvl(account_type_modify, '') <> 'D2' -- 不包含贴现账户
UNION ALL
SELECT  report_id
        ,'或有负债'                                                                                                                AS record_type
        ,primary_borrow_id_type                                                                                                AS brw_id_type --主借款人身份类别
        ,bus_manager_code                                                                                                      AS org_code
        ,bus_manager_type                                                                                                      AS org_type
        ,substr(REPLACE(open_date, '-', ''), 1, 8)                                                                             AS open_date
        ,IF(substr(REPLACE(expiry_date, '-', ''), 1, 8) = '20991231', '99991231', substr(REPLACE(expiry_date, '-', ''), 1, 8)) AS due_date
        ,account_type                                                                                                          AS account_type
        ,CASE
           WHEN primary_borrow_id_type = '1' THEN CAST(bus_type_subdivision AS STRING)
           ELSE CAST(bus_type AS STRING)
         END                                                                                                                   AS pd_cd
        ,loan_amount                                                                                                           AS loan_amt
        ,balance                                                                                                               AS bal
        ,''                                                                                                                    AS grnt_mode
        ,''                                                                                                                    AS cb_mark
        ,related_repayment_type                                                                                                AS related_repayment_type
        ,related_repayment_amount                                                                                              AS related_repayment_amt  --相关还款责任金额
        ,currency                                                                                                              AS ccy
        ,credits                                                                                                               AS credit_lmt
        ,guarantee_contract_num                                                                                                AS credit_num
        ,NULL                                                                                                                  AS o_credit_amt
        ,NULL                                                                                                                  AS agm_lmt_purpose
        ,NULL                                                                                                                  AS loan_orgagm_atmsum
        ,NULL                                                                                                                  AS card_orgagm_atmsum
        ,NULL                                                                                                                  AS ccard_amt
        ,balance * nvl(b.AVG_PRC, 1)                                                                                           AS balance_rmb
        ,NULL                                                                                                                  AS MAGIN_RATIO
        ,related_repayment_amount * nvl(b.AVG_PRC, 1)                                                                          AS related_repayment_amt_rmb --相关还款责任金额
FROM    edw.ncip_ed07_ecll_loan a --企业相关还款协议表-借贷交易（不含贴现）相关还款责任明细信息
LEFT JOIN    (
                 SELECT  DECODE(CCY_CD, '156', 'CNY', '392', 'JPY', '840', 'USD', '978', 'EUR', '826', 'GBP', '344', 'HKD', 'UNKNOWN') AS CCY_CD
                         ,AVG_PRC / QUO_UNT                                                                                            AS AVG_PRC
                 FROM    EDW.DIM_BUS_COM_EXR_INF_DD
                 WHERE   DT = '20250228'
             ) B
ON      A.currency = B.CCY_CD
WHERE   a.bus_manager_type <> '00'
AND     a.dt <= '20250228'
AND     a.dt >= '20200314' -- 5年数据
UNION ALL
SELECT  report_id
        ,'担保账户或有负债'               AS record_type
        ,guarantee_branch_sum_num AS brw_id_type  --担保账户分机构汇总信息编号
        ,bus_manager_code         AS org_code
        ,bus_manager_type         AS org_type
        ,NULL                     AS open_date
        ,NULL                     AS due_date
        ,NULL                     AS account_typeaccount_type  --账户类型
        ,bus_type_subdivision     AS pd_cd
        ,NULL                     AS loan_amt
        ,balance                  AS bal
        ,''                       AS grnt_mode
        ,''                       AS cb_mark
        ,related_repayment_type   AS related_repayment_type
        ,related_repayment_amount AS related_repayment_amt --相关还款责任金额
        ,NULL                     AS ccy --该表无币种
        ,guarantee_amount         AS credit_lmt --担保金额
        ,guarantee_contract_num   AS credit_num
        ,NULL                     AS o_credit_amt
        ,NULL                     AS agm_lmt_purpose
        ,NULL                     AS loan_orgagm_atmsum
        ,NULL                     AS card_orgagm_atmsum
        ,NULL                     AS ccard_amt
        ,balance                  AS balance_rmb
        ,NULL                     AS MAGIN_RATIO
        ,related_repayment_amount AS  related_repayment_amt --人民币_rmb
FROM    EDW.NCIP_ED09_ECSG_GUA a --担保账户相关还款责任分机构汇总信息
WHERE   a.bus_manager_type <> '00'
AND     a.dt <= '20250228'
AND     a.dt >= '20200314'; -- 5年数据





-- 计算以同一风险控制号下的客户负债去重统计为例，故以行内统一风险控制号作为主键形成统一风险控制号下的客户最近一次征信报告信息。（以匹配的征信报告为例）
DROP TABLE IF EXISTS fxb_dcbg_samerisk_apply_cst_04 PURGE;
CREATE TABLE IF NOT EXISTS fxb_dcbg_samerisk_apply_cst_04
(
    sam_rsk_ctrl_id            STRING  COMMENT '同一风险控制号'
    ,cst_id                    STRING  COMMENT '客户号'
    ,date_dt                   STRING  COMMENT '日期'
    ,report_no                 STRING  COMMENT '征信报告编号'
    ,record_type               STRING  COMMENT '记录类型'
    ,brw_id_type               STRING  COMMENT '主借款人类型'
    ,org_code                  STRING  COMMENT '机构编号'
    ,org_type                  STRING  COMMENT '机构类型'
    ,open_date                 STRING  COMMENT '开立日期'
    ,due_date                  STRING  COMMENT '到期日期'
    ,account_type              STRING  COMMENT '账户类型'
    ,pd_cd                     STRING  COMMENT '产品类型'
    ,loan_amt                  DECIMAL COMMENT '贷款金额'
    ,bal                       DECIMAL COMMENT '贷款余额'
    ,grnt_mode                 STRING  COMMENT '担保方式'
    ,cb_mark                   STRING  COMMENT '共同借款标识'
    ,related_repayment_type    STRING  COMMENT '相关还款责任人类型'
    ,related_repayment_amt     DECIMAL COMMENT '相关还款责任金额'
    ,ccy                       STRING  COMMENT ''
    ,credit_lmt                DECIMAL COMMENT '授信协议额度'
    ,credit_num                STRING  COMMENT '授信协议编号'
    ,o_credit_amt              DECIMAL COMMENT '授信额度类型'
    ,agm_lmt_purpose           STRING  COMMENT '授信协议额度用途'
    ,loan_orgagm_atmsum        DECIMAL COMMENT '对应该机构贷款授信协议总金额'
    ,card_orgagm_atmsum        DECIMAL COMMENT '对应该机构信用卡授信协议总金额'
    ,ccard_amt                 DECIMAL COMMENT '信用卡账户授信金额（剔除大额分期：本质为有场景的消费贷）'
    ,balance_rmb               DECIMAL COMMENT '余额人民币'
    ,magin_ratio               DECIMAL COMMENT '保证金比例'
    ,related_repayment_amt_rmb DECIMAL COMMENT '相关还款责任金额人民币'
)
COMMENT
'征信负债去重_同一风险客户征信信息汇总'
PARTITIONED BY
(
    DT STRING COMMENT '日期分区'
)
LIFECYCLE 3600;
ALTER TABLE fxb_dcbg_samerisk_apply_cst_04 DROP IF EXISTS PARTITION ( DT <= '@@{yyyyMMdd-1d}' ) PURGE;
INSERT OVERWRITE TABLE fxb_dcbg_samerisk_apply_cst_04 PARTITION (dt = '20250228')
SELECT  a.sam_rsk_ctrl_id
        ,a.cst_id
        ,a.date_dt
        ,a.report_no
        ,t2.record_type
        ,t2.brw_id_type
        ,t2.org_code
        ,t2.org_type
        ,t2.open_date
        ,t2.due_date
        ,t2.account_type
        ,t2.pd_cd
        ,t2.loan_amt
        ,t2.bal
        ,t2.grnt_mode
        ,t2.cb_mark
        ,t2.related_repayment_type --相关还款责任人类型
        ,t2. related_repayment_amt --相关还款责任金额
        ,t2.ccy
        ,t2.credit_lmt
        ,t2.credit_num
        ,t2.o_credit_amt
        ,t2.agm_lmt_purpose
        ,t2.loan_orgagm_atmsum
        ,t2.card_orgagm_atmsum
        ,t2.ccard_amt
        ,t2.balance_rmb
        ,t2.magin_ratio
        ,t2.related_repayment_amt_rmb --相关还款责任金额人民币
FROM    fxb_dcbg_samerisk_apply_cst_02 a
JOIN    fxb_dcbg_samerisk_apply_cst_03 t2
ON      a.report_no = t2.report_id
AND     t2.dt = '20250228'
WHERE   a.dt = '20250228';




-- 去重逻辑实现 。
--- 相关还款责任数据中有account_type 为空的 删除该条件 。
DROP TABLE IF EXISTS fxb_dcbg_samerisk_apply_cst_05 PURGE;
CREATE TABLE IF NOT EXISTS fxb_dcbg_samerisk_apply_cst_05
(
    sam_rsk_ctrl_id                  STRING  COMMENT '同一风险控制号'
    ,cst_id                          STRING  COMMENT '客户号'
    ,date_dt                         STRING  COMMENT '日期'
    ,report_no                       STRING  COMMENT '征信报告编号'
    ,record_type                     STRING  COMMENT '记录类型'
    ,brw_id_type                     STRING  COMMENT '主借款人类型'
    ,org_code                        STRING  COMMENT '机构编号'
    ,org_type                        STRING  COMMENT '机构类型'
    ,open_date                       STRING  COMMENT '开立日期'
    ,due_date                        STRING  COMMENT '到期日期'
    ,account_type                    STRING  COMMENT '账户类型'
    ,pd_cd                           STRING  COMMENT '产品类型'
    ,loan_amt                        DECIMAL COMMENT '贷款金额'
    ,bal                             DECIMAL COMMENT '贷款余额'
    ,grnt_mode                       STRING  COMMENT '担保方式'
    ,cb_mark                         STRING  COMMENT '共同借款标识'
    ,related_repayment_type          STRING  COMMENT '相关还款责任人类型'
    ,related_repayment_amt           DECIMAL COMMENT '相关还款责任金额'
    ,ccy                             STRING  COMMENT ''
    ,credit_lmt                      DECIMAL COMMENT '授信协议额度'
    ,credit_num                      STRING  COMMENT '授信协议编号'
    ,o_credit_amt                    DECIMAL COMMENT '授信额度类型'
    ,agm_lmt_purpose                 STRING  COMMENT '授信协议额度用途'
    ,loan_orgagm_atmsum              DECIMAL COMMENT '对应该机构贷款授信协议总金额'
    ,card_orgagm_atmsum              DECIMAL COMMENT '对应该机构信用卡授信协议总金额'
    ,ccard_amt                       DECIMAL COMMENT '信用卡账户授信金额（剔除大额分期：本质为有场景的消费贷）'
    ,balance_rmb                     DECIMAL COMMENT '余额人民币'
    ,magin_ratio                     DECIMAL COMMENT '保证金比例'
    ,related_repayment_amt_rmb       DECIMAL COMMENT '相关还款责任金额人民币'
    ,same_lable1_loanamt             STRING  COMMENT '负债数据共同还款人去重贷款金额, 拼接 机构类型+开立日期+到期日期+业务种类+担保方式+金额'
    ,same_lable1_credit_amt          STRING  COMMENT '负债数据共同还款人去重授信金额, 拼接 机构类型+开立日期+到期日期+业务种类+担保方式+金额'
    ,same_lable2_fzloanamt_hyrltamt  STRING  COMMENT '相关还款责任类型为2-保证人 的去重情形，  , 拼接 机构管理类型+开立日期+到期日期+业务类型+金额'
    ,same_lable2_fzloanamt_hyloanamt STRING  COMMENT ''
    ,same_lable2_fzcrdamt_hycrdamt   STRING  COMMENT ''
    ,same_lable2_fzcrdamt_hyrltamt   STRING  COMMENT ''
    ,same_lable2_fzbal_hybal         STRING  COMMENT ''
    ,same_lable3_bal                 STRING  COMMENT '相关还款责任类型为共同借款人 的去重情形，  , 拼接 机构管理类型+开立日期+到期日期+业务类型+授信、金额'
    ,same_lable4_rltamt              STRING  COMMENT '相关还款责任相同记录保证人'
    ,dd_type                         STRING  COMMENT '去重类型'
)
COMMENT
'征信负债去重_去重处理结果表'
PARTITIONED BY
(
    DT STRING COMMENT '日期分区'
)
LIFECYCLE 3600;
ALTER TABLE fxb_dcbg_samerisk_apply_cst_05 DROP IF EXISTS PARTITION ( DT <= '@@{yyyyMMdd-1d}' ) PURGE;
INSERT OVERWRITE TABLE fxb_dcbg_samerisk_apply_cst_05 PARTITION (dt = '20250228')
SELECT  *
        ,CASE
           -- 去重类型1 -- 从借款人 借款金额
           WHEN record_type = '负债' AND cb_mark = '2' AND same_lable1_loanamt IS NOT NULL AND max(CASE
                                                                                                   WHEN cb_mark = '1' AND record_type = '负债' THEN 1
                                                                                                   ELSE 0
                                                                                                 END) OVER ( PARTITION BY sam_rsk_ctrl_id , date_dt,  same_lable1_loanamt ) = 1  THEN '1.1：去重从借款人-借款金额一致'
           -- 去重类型1 -- 从借款人 授信金额
           WHEN record_type = '负债' AND cb_mark = '2' AND same_lable1_credit_amt IS NOT NULL AND max(CASE
                                                                                                      WHEN cb_mark = '1' AND record_type = '负债' THEN 1
                                                                                                      ELSE 0
                                                                                                    END) OVER ( PARTITION BY sam_rsk_ctrl_id , date_dt,  same_lable1_credit_amt ) = 1   THEN '1.2：去重从借款人-授信金额一致'
		  -- 去重类型2.1：去重保证人-借贷取金额担保取责任金额 相关还款责任人类型2保证人 	:个人贷款、3保证或5组合(含保证)		企业贷款1保证4组合		 机构管理类型+开立日期+到期日期+业务类型+金额
           WHEN record_type = '或有负债' AND related_repayment_type = '2' AND same_lable2_fzloanamt_hyrltamt IS NOT NULL AND max(CASE
                                                                                                                               WHEN record_type = '负债' AND ( brw_id_type = '1' AND grnt_mode IN ( '3' , '5' ) OR brw_id_type = '2' AND grnt_mode IN ( '1' , '4' ) ) THEN 1
                                                                                                                               ELSE 0
                                                                                                                             END) OVER ( PARTITION BY sam_rsk_ctrl_id , date_dt,  same_lable2_fzloanamt_hyrltamt ) = 1
																															 THEN '2.1：去重保证人-借贷取金额担保取责任金额'
			-- 去重类型2.2：去重保证人-借贷取金额担保取金额 相关还款责任人类型2保证人 	:个人贷款、3保证或5组合(含保证)		企业贷款1保证4组合		 机构管理类型+开立日期+到期日期+业务类型+金额
           WHEN record_type = '或有负债' AND related_repayment_type = '2' AND same_lable2_fzloanamt_hyloanamt IS NOT NULL AND max(CASE
                                                                                                                                WHEN record_type = '负债' AND ( brw_id_type = '1' AND grnt_mode IN ( '3' , '5' ) OR brw_id_type = '2' AND grnt_mode IN ( '1' , '4' ) ) THEN 1
                                                                                                                                ELSE 0
                                                                                                                              END) OVER ( PARTITION BY sam_rsk_ctrl_id , date_dt,  same_lable2_fzloanamt_hyloanamt ) = 1
																															  THEN '2.2：去重保证人-借贷取金额担保取金额'
		   -- 2.3：去重保证人-借贷取授信担保取授信 相关还款责任人类型2保证人 	:个人贷款、3保证或5组合(含保证)		企业贷款1保证4组合		 机构管理类型+开立日期+到期日期+业务类型+金额
           WHEN record_type = '或有负债' AND related_repayment_type = '2' AND same_lable2_fzcrdamt_hycrdamt IS NOT NULL AND max(CASE
                                                                                                                              WHEN record_type = '负债' AND ( brw_id_type = '1' AND grnt_mode IN ( '3' , '5' ) OR brw_id_type = '2' AND grnt_mode IN ( '1' , '4' ) ) THEN 1
                                                                                                                              ELSE 0
                                                                                                                            END) OVER ( PARTITION BY sam_rsk_ctrl_id , date_dt,  same_lable2_fzcrdamt_hycrdamt ) = 1
																															THEN '2.3：去重保证人-借贷取授信担保取授信'
			-- 2.4：去重保证人-借贷取授信担保取责任金额 相关还款责任人类型2保证人 	:个人贷款、3保证或5组合(含保证)		企业贷款1保证4组合		 机构管理类型+开立日期+到期日期+业务类型+金额
           WHEN record_type = '或有负债' AND related_repayment_type = '2' AND same_lable2_fzcrdamt_hyrltamt IS NOT NULL AND max(CASE
                                                                                                                              WHEN record_type = '负债' AND ( brw_id_type = '1' AND grnt_mode IN ( '3' , '5' ) OR brw_id_type = '2' AND grnt_mode IN ( '1' , '4' ) ) THEN 1
                                                                                                                              ELSE 0
                                                                                                                            END) OVER ( PARTITION BY sam_rsk_ctrl_id , date_dt,  same_lable2_fzcrdamt_hyrltamt ) = 1
																															THEN '2.4：去重保证人-借贷取授信担保取责任金额'
			-- 2.5：去重保证人-借贷取余额担保取余额 相关还款责任人类型2保证人 	:个人贷款、3保证或5组合(含保证)		企业贷款1保证4组合		 机构管理类型+开立日期+到期日期+业务类型+金额
           WHEN record_type = '或有负债' AND related_repayment_type = '2' AND same_lable2_fzbal_hybal IS NOT NULL AND max(CASE
                                                                                                                        WHEN record_type = '负债' AND ( brw_id_type = '1' AND grnt_mode IN ( '3' , '5' ) OR brw_id_type = '2' AND grnt_mode IN ( '1' , '4' ) ) THEN 1
                                                                                                                        ELSE 0
                                                                                                                      END) OVER ( PARTITION BY sam_rsk_ctrl_id , date_dt,  same_lable2_fzbal_hybal ) = 1
																													  THEN '2.5：去重保证人-借贷取余额担保取余额'
			--	3.1-去重个人对外担保共同还款人-余额一致		个人征信、相关还款责任人类型1共同借款人	 	，在成员中找到 主借款人的贷款，		机构管理类型+开立日期+到期日期+业务类型+余额	--需和小苏确认，应该是金额	，余额不同时间点不一致
           WHEN record_type = '或有负债' AND related_repayment_type = '1' AND same_lable3_bal IS NOT NULL AND substr(cst_id, 1, 1) IN ( '1' , '7' ) AND max(CASE
                                                                                                                                                          WHEN record_type = '负债' AND cb_mark = '1' THEN 1
                                                                                                                                                          ELSE 0
                                                                                                                                                        END) OVER ( PARTITION BY sam_rsk_ctrl_id , date_dt,  same_lable3_bal ) = 1
																																						THEN '3.1-去重个人对外担保共同还款人-余额一致'
			-- 	3.2-去重企业对外担保共同还款人-金额一致 	企业征信、相关还款责任人类型1共同借款人	 	，在成员中找到 主借款人的贷款，		机构管理类型+开立日期+到期日期+业务类型+金额
           WHEN record_type = '或有负债' AND related_repayment_type = '1' AND same_lable2_fzloanamt_hyloanamt IS NOT NULL AND substr(cst_id, 1, 1) IN ( '2' , '8' ) AND max(CASE
                                                                                                                                                                          WHEN record_type = '负债' AND cb_mark = '1' THEN 1
                                                                                                                                                                          ELSE 0
                                                                                                                                                                        END) OVER ( PARTITION BY sam_rsk_ctrl_id , date_dt,  same_lable2_fzloanamt_hyloanamt ) = 1
																																										THEN '3.2-去重企业对外担保共同还款人-金额一致'
			--	3.3-去重个人对外担保共同还款人-余额一致，未找到主借人，找到从借 	 个人征信、相关还款责任人类型1共同借款人	 	，在成员中找到 从借款人的贷款，		机构管理类型+开立日期+到期日期+业务类型+余额	--需和小苏确认，应该是金额	，余额不同时间点不一致
           WHEN record_type = '或有负债' AND related_repayment_type = '1' AND same_lable3_bal IS NOT NULL AND substr(cst_id, 1, 1) IN ( '1' , '7' ) AND max(CASE
                                                                                                                                                          WHEN record_type = '负债' AND cb_mark = '2' THEN 1
                                                                                                                                                          ELSE 0
                                                                                                                                                        END) OVER ( PARTITION BY sam_rsk_ctrl_id , date_dt,  same_lable3_bal ) = 1
																																						THEN '3.3-去重个人对外担保共同还款人-余额一致，未找到主借人，找到从借'
			--3.4-去重企业对外担保共同还款人-金额一致，未找到主借人，找到从借 		 企业征信、相关还款责任人类型1共同借款人	 	，在成员中找到 从借款人的贷款，		机构管理类型+开立日期+到期日期+业务类型+金额
           WHEN record_type = '或有负债' AND related_repayment_type = '1' AND same_lable2_fzloanamt_hyloanamt IS NOT NULL AND substr(cst_id, 1, 1) IN ( '2' , '8' ) AND max(CASE
                                                                                                                                                                          WHEN record_type = '负债' AND cb_mark = '2' THEN 1
                                                                                                                                                                          ELSE 0
                                                                                                                                                                        END) OVER ( PARTITION BY sam_rsk_ctrl_id , date_dt,  same_lable2_fzloanamt_hyloanamt ) = 1
																																										THEN '3.4-去重企业对外担保共同还款人-金额一致，未找到主借人，找到从借'
           WHEN record_type = '或有负债' AND related_repayment_type = '1' AND same_lable3_bal IS NOT NULL AND substr(cst_id, 1, 1) IN ( '1' , '7' ) AND max(CASE
                                                                                                                                                          WHEN record_type = '负债' AND cb_mark = '2' THEN 1
                                                                                                                                                          ELSE 0
                                                                                                                                                        END) OVER ( PARTITION BY sam_rsk_ctrl_id , date_dt,  same_lable3_bal ) = 1
																																						THEN '3.5-去重个人对外担保共同还款人-余额一致，未找到主借、从借'  --和3.3一致，需和小苏确认
           WHEN record_type = '或有负债' AND related_repayment_type = '1' AND same_lable2_fzloanamt_hyloanamt IS NOT NULL AND substr(cst_id, 1, 1) IN ( '2' , '8' ) AND max(CASE
                                                                                                                                                                          WHEN record_type = '负债' AND cb_mark = '2' THEN 1
                                                                                                                                                                          ELSE 0
                                                                                                                                                                        END) OVER ( PARTITION BY sam_rsk_ctrl_id , date_dt,  same_lable2_fzloanamt_hyloanamt ) = 1
																																										THEN '3.6-去重企业对外担保共同还款人-金额一致，未找到主借、从借' --和3.4一致，需和小苏确认
           --相关还款责任为保证人（码值2） ，在成员间找到 相关还款责任+相关还款责任类型+机构管理类型+开立日期+到期日期+业务类型+相关还款责任金额
		   WHEN same_lable4_rltamt IS NOT NULL AND rank() OVER ( PARTITION BY sam_rsk_ctrl_id , date_dt,  same_lable4_rltamt ORDER BY cst_id ASC ) >= 2   THEN '4.1-去重疑似担保同一业务'
           ELSE NULL
         END AS dd_type
FROM    (
            SELECT  sam_rsk_ctrl_id
                    ,cst_id
                    ,date_dt
                    ,report_no
                    ,record_type
                    ,brw_id_type
                    ,org_code
                    ,org_type
                    ,open_date
                    ,due_date
                    ,account_type
                    ,pd_cd
                    ,loan_amt
                    ,bal
                    ,grnt_mode
                    ,cb_mark
                    ,related_repayment_type
                    , related_repayment_amt --相关还款责任金额
                    ,ccy
                    ,credit_lmt --授信协议额度
                    ,credit_num
                    ,o_credit_amt
                    ,agm_lmt_purpose
                    ,loan_orgagm_atmsum
                    ,card_orgagm_atmsum
                    ,ccard_amt
                    ,balance_rmb
                    ,magin_ratio
                    ,related_repayment_amt_rmb --相关还款责任金额人民币
                    -- 负债数据共同还款人去重, 拼接 机构类型+开立日期+到期日期+业务种类+担保方式+金额
                    ,CASE
                       WHEN record_type = '负债' AND org_type IS NOT NULL AND account_type IS NOT NULL AND ccy IS NOT NULL AND open_date IS NOT NULL AND due_date IS NOT NULL AND pd_cd IS NOT NULL AND grnt_mode IS NOT NULL AND loan_amt IS NOT NULL
					   THEN concat(org_type, account_type, ccy, open_date, due_date, pd_cd, grnt_mode, loan_amt)
                       ELSE NULL
                     END AS same_lable1_loanamt
                    ,CASE
                       WHEN record_type = '负债' AND org_type IS NOT NULL AND account_type IS NOT NULL AND ccy IS NOT NULL AND open_date IS NOT NULL AND due_date IS NOT NULL AND pd_cd IS NOT NULL AND grnt_mode IS NOT NULL
					   AND ( brw_id_type = '1' AND credit_lmt IS NOT NULL OR brw_id_type = '2' AND o_credit_amt IS NOT NULL ) THEN concat(org_type, account_type, ccy, open_date, due_date, pd_cd, grnt_mode, IF(brw_id_type = '1', credit_lmt, o_credit_amt))  ---授信金额，授信额度类型
                       ELSE NULL  -- brw_id_type主借款人类型1 个人 2 企业
                     END AS same_lable1_credit_amt
                    -- 用于 相关还款责任类型为2-保证人 的去重情形，  , 拼接 机构管理类型+开立日期+到期日期+业务类型+金额
                    ,CASE
                       WHEN org_type IS NOT NULL AND open_date IS NOT NULL AND due_date IS NOT NULL AND pd_cd IS NOT NULL AND ccy IS NOT NULL AND brw_id_type IS NOT NULL
					   AND ( record_type = '负债' AND loan_amt IS NOT NULL OR record_type = '或有负债' AND related_repayment_amt IS NOT NULL ) THEN concat(org_type, open_date, due_date, pd_cd, ccy, brw_id_type
					   , IF(record_type = '负债', loan_amt, related_repayment_amt))
                       ELSE NULL
                     END AS same_lable2_fzloanamt_hyrltamt
                    ,CASE
                       WHEN org_type IS NOT NULL AND open_date IS NOT NULL AND due_date IS NOT NULL AND pd_cd IS NOT NULL AND ccy IS NOT NULL AND brw_id_type IS NOT NULL
					   AND ( record_type = '负债' AND loan_amt IS NOT NULL OR record_type = '或有负债' AND loan_amt IS NOT NULL ) THEN concat(org_type, open_date, due_date, pd_cd, ccy, brw_id_type
					   , IF(record_type = '负债', loan_amt, loan_amt))
                       ELSE NULL
                     END AS same_lable2_fzloanamt_hyloanamt
                    ,CASE
                       WHEN org_type IS NOT NULL AND open_date IS NOT NULL AND due_date IS NOT NULL AND pd_cd IS NOT NULL AND ccy IS NOT NULL AND brw_id_type IS NOT NULL
					   AND ( record_type = '负债' AND ( brw_id_type = '1' AND credit_lmt IS NOT NULL OR brw_id_type = '2' AND o_credit_amt IS NOT NULL ) OR record_type = '或有负债' AND credit_lmt IS NOT NULL )
					   THEN concat(org_type, open_date, due_date, pd_cd, ccy, brw_id_type, IF(record_type = '负债', IF(brw_id_type = '1', credit_lmt, o_credit_amt), credit_lmt))
                       ELSE NULL
                     END AS same_lable2_fzcrdamt_hycrdamt
                    ,CASE
                       WHEN org_type IS NOT NULL AND open_date IS NOT NULL AND due_date IS NOT NULL AND pd_cd IS NOT NULL AND ccy IS NOT NULL AND brw_id_type IS NOT NULL
					   AND ( record_type = '负债' AND ( brw_id_type = '1' AND credit_lmt IS NOT NULL OR brw_id_type = '2' AND o_credit_amt IS NOT NULL ) OR record_type = '或有负债' AND related_repayment_amt IS NOT NULL )
					   THEN concat(org_type, open_date, due_date, pd_cd, ccy, brw_id_type, IF(record_type = '负债', IF(brw_id_type = '1', credit_lmt, o_credit_amt), related_repayment_amt))
                       ELSE NULL
                     END AS same_lable2_fzcrdamt_hyrltamt
                    ,CASE
                       WHEN org_type IS NOT NULL AND open_date IS NOT NULL AND due_date IS NOT NULL AND pd_cd IS NOT NULL AND ccy IS NOT NULL AND brw_id_type IS NOT NULL AND bal IS NOT NULL AND bal > 0
					   THEN concat(org_type, open_date, due_date, pd_cd, ccy, brw_id_type, bal)
                       ELSE NULL
                     END AS same_lable2_fzbal_hybal
                    -- 用于 相关还款责任类型为共同借款人 的去重情形，  , 拼接 机构管理类型+开立日期+到期日期+业务类型+授信、金额
                    ,CASE
                       WHEN org_type IS NOT NULL AND open_date IS NOT NULL AND due_date IS NOT NULL AND pd_cd IS NOT NULL AND brw_id_type IS NOT NULL AND ccy IS NOT NULL AND bal IS NOT NULL
					   THEN concat(org_type, open_date, due_date, pd_cd, brw_id_type, ccy, bal)
                       ELSE NULL
                     END AS same_lable3_bal
                    -- 用于 相关还款责任相同记录保证人 相关还款责任为保证人， 相关还款责任+相关还款责任类型+机构管理类型+开立日期+到期日期+业务类型+相关还款责任金额
                    ,CASE
                       WHEN org_type IS NOT NULL AND open_date IS NOT NULL AND due_date IS NOT NULL AND pd_cd IS NOT NULL AND brw_id_type IS NOT NULL AND related_repayment_amt IS NOT NULL AND ccy IS NOT NULL
					   AND record_type = '或有负债' AND related_repayment_type = '2' THEN concat(record_type, related_repayment_type, org_type, open_date, due_date, pd_cd, brw_id_type, ccy, related_repayment_amt)
                       ELSE NULL
                     END AS same_lable4_rltamt
            FROM    fxb_dcbg_samerisk_apply_cst_04 a
            WHERE   a.dt = '20250228'
        ) t;


SELECT  count(*) 账户数
        ,sum(CASE
               WHEN same_lable1_loanamt IS NOT NULL OR same_lable1_credit_amt IS NOT NULL OR same_lable2_fzloanamt_hyrltamt IS NOT NULL OR same_lable2_fzloanamt_hyloanamt IS NOT NULL OR same_lable2_fzcrdamt_hycrdamt IS NOT NULL OR same_lable2_fzcrdamt_hyrltamt IS NOT NULL OR same_lable2_fzbal_hybal IS NOT NULL OR same_lable3_bal IS NOT NULL OR same_lable4_rltamt IS NOT NULL THEN 1
             END) 被去重账户数
        ,count(DISTINCT sam_rsk_ctrl_id) 同一风险控制号数
        ,count(DISTINCT CASE
                          WHEN same_lable1_loanamt IS NOT NULL OR same_lable1_credit_amt IS NOT NULL OR same_lable2_fzloanamt_hyrltamt IS NOT NULL OR same_lable2_fzloanamt_hyloanamt IS NOT NULL OR same_lable2_fzcrdamt_hycrdamt IS NOT NULL OR same_lable2_fzcrdamt_hyrltamt IS NOT NULL OR same_lable2_fzbal_hybal IS NOT NULL OR same_lable3_bal IS NOT NULL OR same_lable4_rltamt IS NOT NULL THEN sam_rsk_ctrl_id
                        END) 被去重同一风险控制号数
FROM    fxb_dcbg_samerisk_apply_cst_05
WHERE   dt = '20250228';



SELECT  count(*) 账户数
        ,sum(CASE  WHEN dd_type IS NOT NULL THEN 1  END) 被去重账户数
        ,count(DISTINCT sam_rsk_ctrl_id) 同一风险控制号数
        ,count(DISTINCT CASE  WHEN dd_type IS NOT NULL THEN sam_rsk_ctrl_id END) 被去重同一风险控制号数
FROM    fxb_dcbg_samerisk_apply_cst_05
WHERE   dt = '20250228';


--  统计计算
DROP TABLE IF EXISTS fxb_dcbg_samerisk_apply_cst_result PURGE;
CREATE TABLE IF NOT EXISTS fxb_dcbg_samerisk_apply_cst_result
(
    sam_rsk_ctrl_id                  STRING  COMMENT '同一风险控制号'
    ,cst_id                          STRING  COMMENT '客户号'
    ,date_dt                         STRING  COMMENT '日期'
    ,report_no                       STRING  COMMENT '征信报告编号'
    ,record_type                     STRING  COMMENT '记录类型'
    ,brw_id_type                     STRING  COMMENT '主借款人类型'
    ,org_code                        STRING  COMMENT '机构编号'
    ,org_type                        STRING  COMMENT '机构类型'
    ,open_date                       STRING  COMMENT '开立日期'
    ,due_date                        STRING  COMMENT '到期日期'
    ,account_type                    STRING  COMMENT '账户类型'
    ,pd_cd                           STRING  COMMENT '产品类型'
    ,loan_amt                        DECIMAL COMMENT '贷款金额'
    ,bal                             DECIMAL COMMENT '贷款余额'
    ,grnt_mode                       STRING  COMMENT '担保方式'
    ,cb_mark                         STRING  COMMENT '共同借款标识'
    ,related_repayment_type          STRING  COMMENT '相关还款责任'
    ,related_repayment_amt           DECIMAL COMMENT '相关还款责任金额'
    ,ccy                             STRING  COMMENT ''
    ,credit_lmt                      DECIMAL COMMENT '授信协议额度'
    ,credit_num                      STRING  COMMENT '授信协议编号'
    ,o_credit_amt                    DECIMAL COMMENT '授信额度类型'
    ,agm_lmt_purpose                 STRING  COMMENT '授信协议额度用途'
    ,loan_orgagm_atmsum              DECIMAL COMMENT '对应该机构贷款授信协议总金额'
    ,card_orgagm_atmsum              DECIMAL COMMENT '对应该机构信用卡授信协议总金额'
    ,ccard_amt                       DECIMAL COMMENT '信用卡账户授信金额（剔除大额分期：本质为有场景的消费贷）'
    ,balance_rmb                     DECIMAL COMMENT '余额人民币'
    ,magin_ratio                     DECIMAL COMMENT '保证金比例'
    ,related_repayment_amt_rmb       DECIMAL COMMENT '相关还款责任金额人民币'
    ,same_lable1_loanamt             STRING  COMMENT '负债数据共同还款人去重贷款金额, 拼接 机构类型+开立日期+到期日期+业务种类+担保方式+金额'
    ,same_lable1_credit_amt          STRING  COMMENT '负债数据共同还款人去重授信金额, 拼接 机构类型+开立日期+到期日期+业务种类+担保方式+金额'
    ,same_lable2_fzloanamt_hyrltamt  STRING  COMMENT '相关还款责任类型为2-保证人 的去重情形，  , 拼接 机构管理类型+开立日期+到期日期+业务类型+金额'
    ,same_lable2_fzloanamt_hyloanamt STRING  COMMENT ''
    ,same_lable2_fzcrdamt_hycrdamt   STRING  COMMENT ''
    ,same_lable2_fzcrdamt_hyrltamt   STRING  COMMENT ''
    ,same_lable2_fzbal_hybal         STRING  COMMENT ''
    ,same_lable3_bal                 STRING  COMMENT '相关还款责任类型为共同借款人 的去重情形，  , 拼接 机构管理类型+开立日期+到期日期+业务类型+授信、金额'
    ,same_lable4_rltamt              STRING  COMMENT '相关还款责任相同记录保证人'
    ,dd_type                         STRING  COMMENT ''
    ,max_related_repayment_amt_rmb   DECIMAL COMMENT '最大相关还款责任金额人民币'
    ,sum_related_repayment_bal_rmb   DECIMAL COMMENT '合计相关还款责任金额人民币'
    ,cal_credit                      DECIMAL COMMENT ''  --授信额度借款金额
    ,cal_credit_exp                  DECIMAL COMMENT ''  --授信额度借款金额敞口
    ,cal_bal                         DECIMAL COMMENT ''  --余额
    ,cal_bal_exp                     DECIMAL COMMENT ''  ---余额敞口
)
COMMENT
'征信负债去重_统计结果汇总表'
PARTITIONED BY
(
    DT STRING COMMENT '日期分区'
)
LIFECYCLE 3600;
ALTER TABLE fxb_dcbg_samerisk_apply_cst_result DROP IF EXISTS PARTITION ( DT <= '@@{yyyyMMdd-1d}' ) PURGE;
INSERT OVERWRITE TABLE fxb_dcbg_samerisk_apply_cst_result PARTITION (dt = '20250228')
SELECT  *
        ,CASE
           WHEN dd_type IS NOT NULL                                                                                                        THEN 0
           WHEN dd_type IS NULL AND record_type = '负债' AND brw_id_type = '1' AND ( pd_cd = '82' OR account_type IN ( 'C1' , 'D1' , 'R1' , 'R4' ) ) AND pd_cd IN ( '82' )  THEN loan_amt
           WHEN dd_type IS NULL AND record_type = '负债' AND brw_id_type = '1' AND ( pd_cd = '82' OR account_type IN ( 'C1' , 'D1' , 'R1' , 'R4' ) ) AND agm_lmt_purpose IS NULL   THEN loan_amt
           WHEN dd_type IS NULL AND record_type = '负债' AND brw_id_type = '1' AND ( pd_cd = '82' OR account_type IN ( 'C1' , 'D1' , 'R1' , 'R4' ) ) AND agm_lmt_purpose IN ( '10' , '20' ) AND row_number() OVER ( PARTITION BY sam_rsk_ctrl_id,date_dt, cst_id , org_code , CASE
                                                                                                                                                                                                                                                                            WHEN dd_type IS NULL AND record_type = '负债' AND brw_id_type = '1' AND account_type IN ( 'C1' , 'D1' , 'R1' , 'R4' ) AND agm_lmt_purpose IN ( '10' , '20' ) THEN 1
                                                                                                                                                                                                                                                                            ELSE 0
                                                                                                                                                                                                                                                                          END ORDER BY loan_orgagm_atmsum DESC ) = 1      THEN loan_orgagm_atmsum
           WHEN dd_type IS NULL AND record_type = '负债' AND brw_id_type = '1' AND account_type IN ( 'R2' , 'R3' ) AND nvl(pd_cd, '') <> '82' AND row_number() OVER ( PARTITION BY sam_rsk_ctrl_id,date_dt, cst_id , org_code , CASE
                                                                                                                                                                                                                              WHEN dd_type IS NULL AND record_type = '负债' AND brw_id_type = '1' AND account_type IN ( 'R2' , 'R3' ) AND nvl(pd_cd, '') <> '82' THEN 1
                                                                                                                                                                                                                              ELSE 0
                                                                                                                                                                                                                            END ORDER BY coalesce(IF(agm_lmt_purpose IN ( '30' , '31' ), card_orgagm_atmsum, ccard_amt), 0) DESC ) = 1 THEN coalesce(IF(agm_lmt_purpose IN ( '30' , '31' ), card_orgagm_atmsum, ccard_amt), 0)
           -- 企业负债授信
           WHEN dd_type IS NULL AND record_type = '负债' AND brw_id_type = '2' AND credit_num IS NOT NULL AND row_number() OVER ( PARTITION BY sam_rsk_ctrl_id,date_dt, cst_id , CASE
                                                                                                                                                                               WHEN dd_type IS NULL AND record_type = '负债' AND brw_id_type = '2' AND credit_num IS NOT NULL THEN 1
                                                                                                                                                                               ELSE 0
                                                                                                                                                                             END ORDER BY CASE
                                                                                                                                                                                            WHEN account_type IN ( 'C1' , 'R1' , 'R4' , 'D1' , 'D2' ) THEN 1
                                                                                                                                                                                            ELSE 2
                                                                                                                                                                                          END ASC ) = 1       THEN credit_lmt
           WHEN dd_type IS NULL AND record_type = '负债' AND brw_id_type = '2' AND credit_num IS NULL                                        THEN credit_lmt
           WHEN dd_type IS NULL AND record_type = '担保账户或有负债'                                                                               THEN related_repayment_amt_rmb
           WHEN dd_type IS NULL AND record_type = '或有负债' AND max_related_repayment_amt_rmb < sum_related_repayment_bal_rmb                 THEN related_repayment_amt_rmb
           WHEN dd_type IS NULL AND record_type = '或有负债' AND max_related_repayment_amt_rmb >= sum_related_repayment_bal_rmb AND row_number() OVER ( PARTITION BY sam_rsk_ctrl_id,date_dt, cst_id , credit_num , CASE
                                                                                                                                                                                                                WHEN dd_type IS NULL AND record_type = '或有负债' THEN 1
                                                                                                                                                                                                                ELSE 0
                                                                                                                                                                                                              END ) = 1      THEN max_related_repayment_amt_rmb
           ELSE 0
         END AS cal_credit
        ,CASE
           WHEN dd_type IS NOT NULL                                                                                                        THEN 0
           WHEN dd_type IS NULL AND record_type = '负债' AND brw_id_type = '1' AND ( pd_cd = '82' OR account_type IN ( 'C1' , 'D1' , 'R1' , 'R4' ) ) AND pd_cd IN ( '82' )  THEN loan_amt
           WHEN dd_type IS NULL AND record_type = '负债' AND brw_id_type = '1' AND ( pd_cd = '82' OR account_type IN ( 'C1' , 'D1' , 'R1' , 'R4' ) ) AND agm_lmt_purpose IS NULL   THEN loan_amt
           WHEN dd_type IS NULL AND record_type = '负债' AND brw_id_type = '1' AND ( pd_cd = '82' OR account_type IN ( 'C1' , 'D1' , 'R1' , 'R4' ) ) AND agm_lmt_purpose IN ( '10' , '20' ) AND row_number() OVER ( PARTITION BY sam_rsk_ctrl_id,date_dt, cst_id , org_code , CASE
                                                                                                                                                                                                                                                                            WHEN dd_type IS NULL AND record_type = '负债' AND brw_id_type = '1' AND account_type IN ( 'C1' , 'D1' , 'R1' , 'R4' ) AND agm_lmt_purpose IN ( '10' , '20' ) THEN 1
                                                                                                                                                                                                                                                                            ELSE 0
                                                                                                                                                                                                                                                                          END ORDER BY loan_orgagm_atmsum DESC ) = 1      THEN loan_orgagm_atmsum
           WHEN dd_type IS NULL AND record_type = '负债' AND brw_id_type = '1' AND account_type IN ( 'R2' , 'R3' ) AND nvl(pd_cd, '') <> '82' AND row_number() OVER ( PARTITION BY sam_rsk_ctrl_id,date_dt, cst_id , org_code , CASE
                                                                                                                                                                                                                              WHEN dd_type IS NULL AND record_type = '负债' AND brw_id_type = '1' AND account_type IN ( 'R2' , 'R3' ) AND nvl(pd_cd, '') <> '82' THEN 1
                                                                                                                                                                                                                              ELSE 0
                                                                                                                                                                                                                            END ORDER BY coalesce(IF(agm_lmt_purpose IN ( '30' , '31' ), card_orgagm_atmsum, ccard_amt), 0) DESC ) = 1 THEN coalesce(IF(agm_lmt_purpose IN ( '30' , '31' ), card_orgagm_atmsum, ccard_amt), 0)
           -- 企业负债授信
           WHEN dd_type IS NULL AND record_type = '负债' AND brw_id_type = '2' AND credit_num IS NOT NULL AND row_number() OVER ( PARTITION BY sam_rsk_ctrl_id,date_dt, cst_id , CASE
                                                                                                                                                                               WHEN dd_type IS NULL AND record_type = '负债' AND brw_id_type = '2' AND credit_num IS NOT NULL THEN 1
                                                                                                                                                                               ELSE 0
                                                                                                                                                                             END ORDER BY CASE
                                                                                                                                                                                            WHEN account_type IN ( 'C1' , 'R1' , 'R4' , 'D1' , 'D2' ) THEN 1
                                                                                                                                                                                            ELSE 2
                                                                                                                                                                                          END ASC ) = 1       THEN credit_lmt * IF(account_type IN ( 'G1' , 'G2' , 'G3' ), ( 1 - nvl(magin_ratio, 0) / 100 ), 1)
           WHEN (dd_type IS NULL AND record_type = '负债' AND brw_id_type = '2' AND credit_num IS NULL )                                       THEN credit_lmt * IF(account_type IN ( 'G1' , 'G2' , 'G3' ), ( 1 - nvl(magin_ratio, 0) / 100 ), 1)
           WHEN (dd_type IS NULL AND record_type = '担保账户或有负债'   )                                                                             THEN related_repayment_amt_rmb
           WHEN dd_type IS NULL AND record_type = '或有负债' AND max_related_repayment_amt_rmb < sum_related_repayment_bal_rmb                 THEN related_repayment_amt_rmb
           WHEN dd_type IS NULL AND record_type = '或有负债' AND max_related_repayment_amt_rmb >= sum_related_repayment_bal_rmb AND row_number() OVER ( PARTITION BY sam_rsk_ctrl_id,date_dt, cst_id , credit_num , CASE
                                                                                                                                                                                                                WHEN dd_type IS NULL AND record_type = '或有负债' THEN 1
                                                                                                                                                                                                                ELSE 0
                                                                                                                                                                                                              END ) = 1      THEN max_related_repayment_amt_rmb
           ELSE 0
         END AS cal_credit_exp
        ,CASE
           WHEN dd_type IS NOT NULL   THEN 0
           WHEN dd_type IS NULL AND record_type = '负债' AND brw_id_type = '1'      THEN bal
           WHEN dd_type IS NULL AND record_type = '负债' AND brw_id_type = '2'      THEN balance_rmb
           WHEN dd_type IS NULL AND ( record_type = '或有负债' OR record_type = '担保账户或有负债' ) THEN balance_rmb
           ELSE 0
         END AS cal_bal
        ,CASE
           WHEN dd_type IS NOT NULL   THEN 0
           WHEN dd_type IS NULL AND record_type = '负债' AND brw_id_type = '1'      THEN bal
           WHEN dd_type IS NULL AND record_type = '负债' AND brw_id_type = '2'      THEN balance_rmb * IF(account_type IN ( 'G1' , 'G2' , 'G3' ), ( 1 - nvl(magin_ratio, 0) / 100 ), 1)
           WHEN dd_type IS NULL AND ( record_type = '或有负债' OR record_type = '担保账户或有负债' ) THEN balance_rmb
           ELSE 0
         END AS cal_bal_exp
FROM    (
            SELECT  sam_rsk_ctrl_id
                    ,cst_id
                    ,date_dt
                    ,report_no
                    ,record_type
                    ,brw_id_type
                    ,org_code
                    ,org_type
                    ,open_date
                    ,due_date
                    ,account_type
                    ,pd_cd
                    ,loan_amt
                    ,bal
                    ,grnt_mode
                    ,cb_mark
                    ,related_repayment_type
                    ,related_repayment_amt
                    ,ccy
                    ,credit_lmt --授信协议额度
                    ,credit_num
                    ,o_credit_amt
                    ,agm_lmt_purpose
                    ,loan_orgagm_atmsum
                    ,card_orgagm_atmsum
                    ,ccard_amt
                    ,balance_rmb
                    ,magin_ratio
                    ,related_repayment_amt_rmb --相关还款责任金额人民币
                    ,same_lable1_loanamt
                    ,same_lable1_credit_amt
                    ,same_lable2_fzloanamt_hyrltamt
                    ,same_lable2_fzloanamt_hyloanamt
                    ,same_lable2_fzcrdamt_hycrdamt
                    ,same_lable2_fzcrdamt_hyrltamt
                    ,same_lable2_fzbal_hybal
                    ,same_lable3_bal
                    ,same_lable4_rltamt
                    ,dd_type
                    ,max(related_repayment_amt_rmb) OVER ( PARTITION BY sam_rsk_ctrl_id,date_dt, cst_id , credit_num , CASE
                                                                                                                       WHEN dd_type IS NULL AND record_type = '或有负债' THEN 1
                                                                                                                       ELSE 0
                                                                                                                     END ) AS max_related_repayment_amt_rmb
                    ,sum(balance_rmb) OVER ( PARTITION BY sam_rsk_ctrl_id,date_dt, cst_id , credit_num , CASE
                                                                                                         WHEN dd_type IS NULL AND record_type = '或有负债' THEN 1
                                                                                                         ELSE 0
                                                                                                       END )               AS sum_related_repayment_bal_rmb
            FROM    fxb_dcbg_samerisk_apply_cst_05
            WHERE   dt = '20250228'
        ) t;






-- 负债汇总统计
DROP TABLE IF EXISTS fxb_dcbg_samerisk_apply_cst_result_all PURGE;
CREATE TABLE IF NOT EXISTS fxb_dcbg_samerisk_apply_cst_result_all
(
    sam_rsk_ctrl_id           STRING  COMMENT '同一风险控制号'
    ,cst_id                   STRING  COMMENT '客户号'
    ,date_dt                  STRING  COMMENT '日期'
    ,otherbank_bal            DECIMAL COMMENT '他行负债'
    ,otherbank_nomortgage_bal DECIMAL COMMENT '他行非按揭负债'
    ,otherbank_mortgage_bal   DECIMAL COMMENT '他行按揭负债'
    ,guarante_bal             DECIMAL COMMENT '担保余额'
)
COMMENT
'客户维度_征信负债去重统计'
PARTITIONED BY
(
    DT STRING COMMENT '日期分区'
)
LIFECYCLE 3600;
INSERT OVERWRITE TABLE fxb_dcbg_samerisk_apply_cst_result_all PARTITION (dt = '20250228')
SELECT  a.sam_rsk_ctrl_id
        ,a.cst_id
        ,a.date_dt
        ,sum(CASE
               WHEN a.record_type = '负债' THEN a.cal_bal
               ELSE 0
             END) AS samerisk_otherbank_bal
        ,sum(CASE
               WHEN a.record_type = '负债' AND a.brw_id_type = 1 AND a.pd_cd NOT IN ( '11' , '12' , '13' , '21' ) THEN a.cal_bal
               WHEN a.record_type = '负债' AND a.brw_id_type = 2     THEN a.cal_bal
               ELSE 0
             END) AS samerisk_otherbank_nomortgage_bal
        ,sum(CASE
               WHEN a.record_type = '负债' AND a.brw_id_type = 1 AND a.pd_cd IN ( '11' , '12' , '13' , '21' ) THEN a.cal_bal
               ELSE 0
             END) AS samerisk_otherbank_mortgage_bal
        ,sum(CASE
               WHEN a.record_type IN ( '或有负债' , '担保账户或有负债' ) THEN a.cal_bal
               ELSE 0
             END) AS samerisk_guarante_bal
FROM    fxb_dcbg_samerisk_apply_cst_result a -- 征信负债去重明细结果
WHERE   a.dt = '20250228'
GROUP BY a.sam_rsk_ctrl_id , a.cst_id , a.date_dt;

select count(*) 账户数,sum( case when dd_typet is not null then 1 end  ) 被去重账户数
,count(distinct sam_rsk_ctrl_id ) 同一风险控制号数
,count( distinct case when dd_type is not null then sam_rsk_ctrl_id end  ) 被去重同一风险控制号数
SELECT  avg(CASE
           WHEN dd_type IS NOT NULL   THEN 0
           WHEN dd_type IS NULL AND record_type = '负债' AND brw_id_type = '1'      THEN bal
           WHEN dd_type IS NULL AND record_type = '负债' AND brw_id_type = '2'      THEN balance_rmb
           WHEN dd_type IS NULL AND ( record_type = '或有负债' OR record_type = '担保账户或有负债' ) THEN balance_rmb
           ELSE 0
         END AS cal_bal) 去重后他行负债平均
        ,avg(CASE
           WHEN  record_type = '负债' AND brw_id_type = '1'      THEN bal
           WHEN  record_type = '负债' AND brw_id_type = '2'      THEN balance_rmb
           WHEN ( record_type = '或有负债' OR record_type = '担保账户或有负债' ) THEN balance_rmb
           ELSE 0
         END AS cal_bal) 未去重后他行负债平均

FROM    (
            SELECT  sam_rsk_ctrl_id
                    ,cst_id
                    ,date_dt
                    ,report_no
                    ,record_type
                    ,brw_id_type
                    ,org_code
                    ,org_type
                    ,open_date
                    ,due_date
                    ,account_type
                    ,pd_cd
                    ,loan_amt
                    ,bal
                    ,grnt_mode
                    ,cb_mark
                    ,related_repayment_type
                    ,related_repayment_amt
                    ,ccy
                    ,credit_lmt --授信协议额度
                    ,credit_num
                    ,o_credit_amt
                    ,agm_lmt_purpose
                    ,loan_orgagm_atmsum
                    ,card_orgagm_atmsum
                    ,ccard_amt
                    ,balance_rmb
                    ,magin_ratio
                    ,related_repayment_amt_rmb --相关还款责任金额人民币
                    ,same_lable1_loanamt
                    ,same_lable1_credit_amt
                    ,same_lable2_fzloanamt_hyrltamt
                    ,same_lable2_fzloanamt_hyloanamt
                    ,same_lable2_fzcrdamt_hycrdamt
                    ,same_lable2_fzcrdamt_hyrltamt
                    ,same_lable2_fzbal_hybal
                    ,same_lable3_bal
                    ,same_lable4_rltamt
                    ,dd_type
                    ,max(related_repayment_amt_rmb) OVER ( PARTITION BY sam_rsk_ctrl_id,date_dt, cst_id , credit_num , CASE
                                                                                                                       WHEN dd_type IS NULL AND record_type = '或有负债' THEN 1
                                                                                                                       ELSE 0
                                                                                                                     END ) AS max_related_repayment_amt_rmb
                    ,sum(balance_rmb) OVER ( PARTITION BY sam_rsk_ctrl_id,date_dt, cst_id , credit_num , CASE
                                                                                                         WHEN dd_type IS NULL AND record_type = '或有负债' THEN 1
                                                                                                         ELSE 0
                                                                                                       END )               AS sum_related_repayment_bal_rmb
            FROM    fxb_dcbg_samerisk_apply_cst_05
            WHERE   dt = '20250228'
        ) t
	GROUP BY sam_rsk_ctrl_id ;

**03跑批任务sql_01靠档转化20230707.sql
--#202012.31靠档有余额的账户,20211001开始有购买定期、大额存单、理财的客户，全量，20211001至今有购买行为的客户

drop table if exists lab_bigdata_dev.kd_month_bal_20211031; ----202012.31靠档有余额的账户
CREATE TABLE lab_bigdata_dev.kd_month_bal_20211031 as
select t.cst_id,t.dt,t.dep_act_id,t.cst_act_id,t.gl_bal
		,t5.sum_org_id	管户支行代码
		,t5.sum_org_nm 管户支行
		,case when t6.sum_org_id='580199999' then '990000000' else t6.sum_org_id end as	管户分行代码
		,case when t6.sum_org_nm='国际合作与创新部' then '浙江泰隆商业银行总行' else t6.sum_org_nm end as  管户分行
		,t2.acs_org_id 机构
		,t.opn_dt
		,t.dep_trm
		,t.mtu_dt
		,t.prod_id
from edw.dim_bus_dep_act_inf_dd   t -- 存款账户表
left join (
			select cst_act_id,mgr_id,acs_org_id
			from (
				select cst_act_id,mgr_id,acs_org_id
					 ,row_number() over(partition by cst_act_id order by mgr_rto desc,frs_ctc_ind desc) as rn
				from edw.dwd_bus_dep_cst_act_mgr_inf_dd  --客户存款账户管护信息
				where dt='@@{yyyyMMdd}'
				)
			where rn=1
			)t2
on t.cst_act_id=t2.cst_act_id

left join edw.dim_hr_org_sum_org_rel_dd t5  --支行机构表
ON      t2.acs_org_id = t5.unt_org_id
and t5.sum_org_lvl='Z'
and t5.ORG_RLTN_DIM_CD='WD3'
AND     t5.dt = '@@{yyyyMMdd}'
left join edw.dim_hr_org_sum_org_rel_dd t6 --分行机构表
ON      t2.acs_org_id = t6.unt_org_id
and t6.sum_org_lvl='F'
and t6.ORG_RLTN_DIM_CD='WD3'
AND     t6.dt ='@@{yyyyMMdd}'

where substr(t6.sum_org_id,1,4) in ('3101','3202','3301','3302','3303','3305','3306','3307','3308','3309','3310','3311','3312','9999','9900','5801','5802','3361')  --剔除村行
and t.dt ='20201231'
and t.prod_id in (
					'00201030304'	--泰隆一本通1
					,'00201030303'	--新泰隆一本通1
					,'00201030502'	--成长乐1
					,'00201030501'	--长寿乐1
					,'00201030305'	--聚财一本通1

				)  --靠档类定期存款产品码
--and t.gl_bal>0
;




----#第二步：支取情况：2021年之后的支取，要比存入早30天内 1.管户分行	管户分行代码	支取月份	靠档支取金额（支取和销户）	到期后一个月内支取金额
drop table if exists lab_bigdata_dev.kd_draw_month_20211031;
create table lab_bigdata_dev.kd_draw_month_20211031 as
SELECT  distinct
		t2.DEP_ACT_ID 靠档负债账号
		,t2.cst_act_id 靠档客户账号
		,t2.cst_id
		,t2.管户分行 支取管户分行
		,t2.管户分行代码 支取管户分行代码
		,t6.pd_nm 靠档产品名称
		,t2.opn_dt 靠档产品开户日
		,t2.dep_trm 靠档存期
		,t4.trx_dt 支取日
		,t4.dtl_seq_nbr  --流水唯一识别和dep_act_id
		,months_between(to_date(t4.trx_dt,'yyyymmdd'),to_date(t2.opn_dt,'yyyymmdd')) 支取日所处档期
		,datediff(to_date(t4.trx_dt,'yyyymmdd'),to_date(t2.mtu_dt,'yyyymmdd'),'dd') 支取日距到期日天数
		,t4.trx_amt-coalesce(t5.trx_amt,0) 支取金额
		--,t4.txt_code
		--,t4.smr_dscr
		,t4.trx_amt 支取本息和
		,t4.tlr_srl_nbr 柜员流水号 --跟踪利息，找出来，减去利息
		,t2.mtu_dt
FROM   kd_month_bal_20211031 t2 --202012.31靠档有余额的账户

----流水表找支取本息和
inner join edw.dwd_bus_dep_bal_chg_dtl_di t4 --流水表
on t2.dep_act_id=t4.dep_act_id  --靠档类账号
and t4.dt >='20210801'
and t4.crd_and_dbt_ind='D'  --减少方向
and coalesce(t4.rvsd_ind,'0')='0' and  coalesce(t4.rvs_ind,'0')='0'  --非冲正
and (t4.smr_dscr not in ('利息调整','扣回已付利息','撤销','法定机关直接扣划待支取利息') or t4.smr_dscr is null)
and t4.bal_fld_nm='DPLDGBAL'

----流水表找利息
left join edw.dwd_bus_dep_bal_chg_dtl_di t5 --流水表
on t4.dep_act_id=t5.dep_act_id  --靠档类账号
and t4.trx_dt=t5.trx_dt --交易日期一样
and t4.tlr_srl_nbr=t5.tlr_srl_nbr  --柜员流水号一样
and t5.dt >='20210801'
and t5.crd_and_dbt_ind='C'  --增加方向
and coalesce(t5.rvsd_ind,'0')='0' and  coalesce(t5.rvs_ind,'0')='0'  --非冲正

inner join edw.dim_bus_com_pd_ctlg_dd t6 --产品目录
on t2.prod_id=t6.pd_cd and t6.dt='@@{yyyyMMdd}'
;



--#第三步：转化情况：1.找出20211001之后，有购买定期、大额存单的客户  开立定期存款、大额存单的客户
drop table if exists lab_bigdata_dev.kd_new_buy_20211031;  --靠档新购买定期

create table lab_bigdata_dev.kd_new_buy_20211031 as
SELECT  t.DEP_ACT_ID 存入账号
		,T.cst_act_id 定期客户账号
		,t.opn_amt 存入金额
		,t.dt
		,t.CST_ID
		,t.dep_trm 期限
		,t.opn_dt 转化日期

		,case when t.prod_id in ('00201020100'	--个人定期
					,'00202020100'	--单位定期
					,'00201020105'	--新成长乐
					,'00201020104' --湖州泰享存
					,'00201020102'  --苏州苏乐定
					) then '定期'
			  when t.prod_id in ('00201040100'  --对私大额存单
					 ,'00202040100'  --公司大额存单
					 ) then '大额存单'
			  end as 转化产品
from edw.dim_bus_dep_act_inf_dd t  --存款账户表找定期
where  t.dt='@@{yyyyMMdd}'
and t.prod_id in (
				----定期存款产品码
					'00201020100'	--个人定期
					,'00202020100'	--单位定期
					,'00201020105'	--新成长乐
					,'00201020104' --湖州泰享存
					,'00201020102'  --苏州苏乐定

				----大额存单产品码
					 ,'00201040100'  --对私大额存单
					 ,'00202040100'  --公司大额存单

				)
and t.opn_dt >='20211001' --开户日期20211001以后
;

--#转化30天内， 建议赠送积分

drop table if exists lab_bigdata_dev.kd_change_month_30days_20211031;

create table lab_bigdata_dev.kd_change_month_30days_20211031 as
SELECT  t.靠档负债账号
		,t.靠档客户账号
		,t.cst_id
		,t.靠档产品名称
		,t.靠档产品开户日
		,t.靠档存期
		,t.支取日
		,t.支取日所处档期
		,t.支取日距到期日天数
		,t.支取金额
		-- ,t.txt_code
		-- ,t.smr_dscr
		,t.支取本息和
		,t.柜员流水号 --跟踪利息，找出来，减去利息
		,t.mtu_dt,t2.存入账号,t2.定期客户账号,t2.存入金额,t2.期限,t2.转化日期,t2.转化产品

from lab_bigdata_dev.kd_new_buy_20211031 t2 --2021年新购入定期
inner join lab_bigdata_dev.kd_draw_month_20211031 t  --支取情况表
on t.cst_id=t2.cst_id
where datediff(to_date(t2.转化日期,'yyyymmdd'),to_date(t.支取日,'yyyymmdd'),'dd')>=0 and  datediff(to_date(t2.转化日期,'yyyymmdd'),to_date(t.支取日,'yyyymmdd'),'dd')<=30 --靠档支取日期 和 转化日期 30天内
;

-- /*
-- 积分计算规则：
-- 逾期	 	1500	1500
-- （0,1Y]		1500	1500
-- （1Y,2Y]	2500	1500
-- （2Y,5Y]	3000	1500
-- 逾期判断标准：	mtu_dt<20211012
-- 	act_sts_cd非销户*
-- */
drop table if exists lab_bigdata_dev.kd_change_month_sir_20211031;

create table lab_bigdata_dev.kd_change_month_sir_20211031 as
SELECT t.*,t2.gl_bal 当前余额,t2.act_sts_cd
		,CASE
		   WHEN 转化产品 = '定期' AND t2.ACT_STS_CD <> 'C' AND t.mtu_dt <= '@@{yyyyMMdd}'                                                                                                                                                                                                    THEN 1500 * trunc(t.存入金额 / 10000)
		   WHEN 转化产品 = '定期' AND ( pmod(months_between(to_date(t.支取日, 'yyyymmdd'), to_date(t.靠档产品开户日, 'yyyymmdd')), SUBSTR(t.靠档存期, 1, 1) * 12) > 24 OR pmod(months_between(to_date(t.支取日, 'yyyymmdd'), to_date(t.靠档产品开户日, 'yyyymmdd')), SUBSTR(t.靠档存期, 1, 1) * 12) = 0 ) THEN 3000 * trunc(t.存入金额 / 10000)
		   WHEN 转化产品 = '定期' AND pmod(months_between(to_date(t.支取日, 'yyyymmdd'), to_date(t.靠档产品开户日, 'yyyymmdd')), SUBSTR(t.靠档存期, 1, 1) * 12) <= 12 AND pmod(months_between(to_date(t.支取日, 'yyyymmdd'), to_date(t.靠档产品开户日, 'yyyymmdd')), SUBSTR(t.靠档存期, 1, 1) * 12) > 0   THEN 1500 * trunc(t.存入金额 / 10000)
		   WHEN 转化产品 = '定期' AND pmod(months_between(to_date(t.支取日, 'yyyymmdd'), to_date(t.靠档产品开户日, 'yyyymmdd')), SUBSTR(t.靠档存期, 1, 1) * 12) <= 24 AND pmod(months_between(to_date(t.支取日, 'yyyymmdd'), to_date(t.靠档产品开户日, 'yyyymmdd')), SUBSTR(t.靠档存期, 1, 1) * 12) > 12  THEN 2500 * trunc(t.存入金额 / 10000)
		   WHEN 转化产品 = '大额存单'                                                                                                                                                                                                                                                           THEN 1500
		 END AS 建议赠送积分
from lab_bigdata_dev.kd_change_month_30days_20211031 t
--靠档类账号当前状态以及当前余额
left join  edw.dim_bus_dep_act_inf_dd  t2 -- 存款账户表
on t.靠档负债账号=t2.dep_act_id
and t2.dt ='@@{yyyyMMdd}'
;

--#如果多个部支保留一个
drop table if exists lab_bigdata_dev.kd_change_only_20211031;

create table lab_bigdata_dev.kd_change_only_20211031 as
select t5.sum_org_id	管户支行代码
		,t5.sum_org_nm 管户支行
		,t6.sum_org_id	管户分行代码
		,t6.sum_org_nm 管户分行
		,t2.mgr_id 管护客户经理工号
		,t2.acs_org_id 机构
		,t3.empe_nm 管户客户经理姓名
		,t.cst_id 客户号
		,t4.cst_chn_nm 客户姓名
		,t.靠档负债账号,t.靠档客户账号,t.靠档产品名称,t.靠档产品开户日,t.靠档存期,t.支取日,round(t.支取日所处档期,1) 支取日所处档期_月 ,t.当前余额,t.支取金额,t.转化产品,t.期限,t.转化日期,t.存入账号,t.定期客户账号,t.存入金额,round(t.建议赠送积分,0) 建议赠送积分


from (
				select *
				,row_number() over (partition by t.cst_id,t.存入账号,t.定期客户账号,t.存入金额,t.期限,t.转化日期,t.转化产品 order by t.建议赠送积分 desc,支取日所处档期 desc,t.支取金额 desc,t.靠档负债账号 desc) as rn

				from lab_bigdata_dev.kd_change_month_sir_20211031 t
			)t
left join (
			select cst_act_id,mgr_id,acs_org_id
			from (
				select cst_act_id,mgr_id,acs_org_id
					 ,row_number() over(partition by cst_act_id order by mgr_rto desc,frs_ctc_ind desc) as rn
				from edw.dwd_bus_dep_cst_act_mgr_inf_dd  --客户存款账户管护信息
				where dt='@@{yyyyMMdd}'
				)
			where rn=1
			)t2
on t.定期客户账号=t2.cst_act_id

left join edw.dim_hr_org_sum_org_rel_dd t5  --支行机构表
ON      t2.acs_org_id = t5.unt_org_id
and t5.sum_org_lvl='Z'
and t5.ORG_RLTN_DIM_CD='WD3'
AND     t5.dt = '@@{yyyyMMdd}'
left join edw.dim_hr_org_sum_org_rel_dd t6 --分行机构表
ON      t2.acs_org_id = t6.unt_org_id
and t6.sum_org_lvl='F'
and t6.ORG_RLTN_DIM_CD='WD3'
AND     t6.dt ='@@{yyyyMMdd}'

LEFT JOIN    edw.dws_hr_empe_inf_dd t3 --员工
ON      t2.mgr_id = t3.empe_id
AND     t3.dt = '@@{yyyyMMdd}'
left join adm_pub.adm_csm_cbas_idv_bas_inf_dd t4 --客户集市表
on t.cst_id=t4.cst_id
and t4.dt= '@@{yyyyMMdd}'
where substr(t6.sum_org_id,1,4) in ('3101','3202','3301','3302','3303','3305','3306','3307','3308','3309','3310','3311','3312','9999','9900','5801','5802','3361')  --剔除村行
and t.rn=1
;

--#理财
drop table if exists lab_bigdata_dev.lc_new_buy_detail_20211031;

create table lab_bigdata_dev.lc_new_buy_detail_20211031 as
SELECT  t.cst_id
		,t.chm_act_id
		,t.cfm_amt 确认金额
		,t.cfm_dt 理财确认日期
		,t.tacfm_srl_nbr
	   ,t2.靠档负债账号
		,t2.靠档客户账号
		 ,t2.靠档产品名称
		,t2.靠档产品开户日
		 ,t2.靠档存期
		,t2.支取日
		,t2.支取日所处档期
		,t2.支取日距到期日天数
		,t2.支取金额
		,t2.支取本息和
		-- ,t2.柜员流水号 --跟踪利息，找出来，减去利息
		,t2.mtu_dt
from edw.dwd_bus_chm_trx_cfm_dtl_di t  --理财交易
inner join lab_bigdata_dev.kd_draw_month_20211031 t2 --支取情况表
on t.cst_id=t2.cst_id
where  t.dt>='20210901'
and t.cfm_dt >= '20211001'
and t.trx_sts_cd in ('8')  --认购成功
and t.trx_cd in ('100226','100200','200208','160200')
and datediff(to_date(t.cfm_dt,'yyyymmdd'),to_date(t2.支取日,'yyyymmdd'),'dd')>=0 and  datediff(to_date(t.cfm_dt,'yyyymmdd'),to_date(t2.支取日,'yyyymmdd'),'dd')<=30 --靠档支取日期 和 转化日期 30天内
;


drop table if exists lab_bigdata_dev.lc_new_buy_20211031;

create table lab_bigdata_dev.lc_new_buy_20211031 as
select t5.sum_org_id	管户支行代码
		,t5.sum_org_nm 管户支行
		,t6.sum_org_id	管户分行代码
		,t.tacfm_srl_nbr
		,t6.sum_org_nm 管户分行
		,t2.mgr_id 管护客户经理工号
		,t2.afl_org 机构
		,t3.empe_nm 管户客户经理姓名
		,t.cst_id 客户号
		,t4.cst_chn_nm 客户姓名
,t.靠档负债账号,t.靠档客户账号,t.靠档产品名称,t.靠档产品开户日,t.靠档存期,t.支取日,round(t.支取日所处档期,1) 支取日所处档期_月,t7.gl_bal 当前余额,t.支取金额
,'理财' 转化产品,''期限,t.理财确认日期 转化日期,t.chm_act_id 存入账号,t2.chm_cst_id 客户账号,t.确认金额 存入金额,0 建议赠送积分
from lab_bigdata_dev.lc_new_buy_detail_20211031 t
left join edw.dim_bus_chm_act_inf_dd t2 --理财账户表
on t.chm_act_id=t2.chm_act_id
and t2.dt='@@{yyyyMMdd}'

left join edw.dim_hr_org_sum_org_rel_dd t5  --支行机构表
ON      t2.afl_org = t5.unt_org_id
and t5.sum_org_lvl='Z'
and t5.ORG_RLTN_DIM_CD='WD3'
AND     t5.dt = '@@{yyyyMMdd}'
left join edw.dim_hr_org_sum_org_rel_dd t6 --分行机构表
ON      t2.afl_org = t6.unt_org_id
and t6.sum_org_lvl='F'
and t6.ORG_RLTN_DIM_CD='WD3'
AND     t6.dt ='@@{yyyyMMdd}'
LEFT JOIN    edw.dws_hr_empe_inf_dd t3 --员工
ON      t2.mgr_id = t3.empe_id
AND     t3.dt = '@@{yyyyMMdd}'
left join adm_pub.adm_csm_cbas_idv_bas_inf_dd t4 --客户集市表
on t.cst_id=t4.cst_id
and t4.dt= '@@{yyyyMMdd}'

--靠档类账号当前状态以及当前余额
left join  edw.dim_bus_dep_act_inf_dd  t7 -- 存款账户表
on t.靠档负债账号=t7.dep_act_id
and t7.dt ='@@{yyyyMMdd}'
;

--#如果多个部支保留一个
drop table if exists lab_bigdata_dev.kd_change_fnc_only_20211031;

create table lab_bigdata_dev.kd_change_fnc_only_20211031 as
select `(rn2)?+.+`
from (
				select *
				,row_number() over (partition by t.客户号,t.存入金额,t.存入账号,t.tacfm_srl_nbr,t.转化日期,t.管户分行,t.管户分行代码 order by t.支取日所处档期_月 desc,t.支取金额 desc,t.靠档负债账号 desc) as rn2

				from lc_new_buy_20211031 t  --2021新转化的理财
			)t
where t.rn2=1
;

-- CREATE TABLE lab_bigdata_dev.kd_change_result_20211122 (
-- 	zh_id STRING COMMENT '管户支行代码|C55',
-- 	zh STRING COMMENT '管户支行|C155',
-- 	fh_id STRING COMMENT '管户分行代码|C55',
-- 	fh STRING COMMENT '管户分行|C155',
-- 	mgr_id STRING COMMENT '管护客户经理工号|C55',
-- 	org_id STRING COMMENT '机构|C155',
-- 	empe_nm STRING COMMENT '管户客户经理姓名|C155',
-- 	cst_id STRING COMMENT '客户号|C155',
-- 	cst_nm STRING COMMENT '客户姓名|C155',
-- 	kd_DEP_ACT_ID STRING COMMENT '靠档负债账号|C155',
-- 	kd_cst_act_id STRING COMMENT '靠档客户账号|C155',
-- 	kd_pd_nm STRING COMMENT '靠档产品名称|C155',
-- 	kd_opn_dt STRING COMMENT '靠档产品开户日|C155',
-- 	kd_dep_trm STRING COMMENT '靠档存期|C155',
-- 	kd_trx_dt STRING COMMENT '支取日|C155',
-- 	kd_zq_trm DECIMAL COMMENT '支取日所处档期_月|DECIMAL(20,6)',
-- 	gl_bal DECIMAL COMMENT '当前余额|DECIMAL(20,2)',
-- 	zq_amt DECIMAL COMMENT '支取金额|DECIMAL(20,2)',
-- 	ch_pd STRING COMMENT '转化产品|C155',
-- 	ch_trm STRING COMMENT '期限|C155',
-- 	ch_dt STRING COMMENT '转化日期|C155',
-- 	ch_DEP_ACT_ID STRING COMMENT '存入账号|C155',
-- 	ch_cst_act_id STRING COMMENT '客户账号|C155',
-- 	ch_amt DECIMAL COMMENT '存入金额|DECIMAL(20,2)',
-- 	jf DECIMAL COMMENT '建议赠送积分|DECIMAL(20,0)',
-- 	order2 BIGINT COMMENT 'order2|INTEGER'
-- )
-- COMMENT '靠档转化表_20211001至今全量'
-- PARTITIONED BY (
-- 	dt STRING COMMENT '日期分区'
-- )
-- LIFECYCLE 36000;

--#最终结果

ALTER TABLE lab_bigdata_dev.kd_change_result_20211122 DROP IF EXISTS PARTITION (dt = '@@{yyyyMMdd}');

INSERT INTO lab_bigdata_dev.kd_change_result_20211122 PARTITION (dt = '@@{yyyyMMdd}')
select 管户支行代码,管户支行,管户分行代码,管户分行,管护客户经理工号,机构,管户客户经理姓名,客户号,客户姓名,靠档负债账号,靠档客户账号,靠档产品名称,靠档产品开户日,靠档存期,支取日
	,支取日所处档期_月,当前余额,支取金额,转化产品,期限,转化日期,存入账号,客户账号,存入金额,建议赠送积分
	,ROW_NUMBER() over(order by  机构,管护客户经理工号,客户号,转化产品 , 转化日期,存入金额) order2
from (
		select `(tacfm_srl_nbr)?+.+`
		from lab_bigdata_dev.kd_change_fnc_only_20211031 t
		union all
		select t.*
		from lab_bigdata_dev.kd_change_only_20211031 t
	)t
order by 机构,管户客户经理姓名,客户号,客户账号,存入账号,转化日期,存入金额,建议赠送积分,靠档客户账号,靠档负债账号,支取金额
;
**05置换贷款_05置换贷款.sql
SELECT  T2.LOAN_AMOUNT_RMB

        ,A1 . *

FROM    edw.NCIP_ED06_ECCC_CREDIT A1 -- 授信协议信息

LEFT JOIN    edw.NCIP_CE_M_ACCOUNT_INFO t2 --报告号客户号

ON      A1.report_id = T2.report_ID

AND     T2.DT <= '@@{yyyyMMdd}'

AND     T2.DT >= '20200406'

AND     A1.DT = T2.DT

AND     a1.CREDIT_AGREEMENT_NUM = t2.CREDIT_AGREEMENT_NUM

WHERE   A1.DT <= '@@{yyyyMMdd}'

AND     A1.DT >= '20200406'

AND     coalesce(A1.CREDIT_AGREEMENT_NUM, '') <> '' -- 授信协议编号

AND     coalesce(A1.CREDIT_LINE, 0) = 0

AND     T2.LOAN_AMOUNT_RMB > 0

;





loan_amount_rmb	id	report_id	credit_agreement_num	bus_manager_type	bus_manager_code	credit_line_type	quota_cycle_flag	currency	credit_line	used_quota	credit_limit	credit_limit_number	effective_date	end_date	report_date	dt

1000000	94835e957e6d26f6017e9e6fe73c4538	2022012810071993662541	E402	11	9165	11	1	CNY	0	0	\N	\N	2021-07-02 00:00:00	2022-10-07 00:00:00	2021-10-07 00:00:00	20220128

315173	94835e957e6d26f6017e9e6fe73c4538	2022012810071993662541	E402	11	9165	11	1	CNY	0	0	\N	\N	2021-07-02 00:00:00	2022-10-07 00:00:00	2021-10-07 00:00:00	20220128

600000	94835e957e6d26f6017e9e6fe73c4538	2022012810071993662541	E402	11	9165	11	1	CNY	0	0	\N	\N	2021-07-02 00:00:00	2022-10-07 00:00:00	2021-10-07 00:00:00	20220128

266501	94835e957e6d26f6017e9e6fe73c4538	2022012810071993662541	E402	11	9165	11	1	CNY	0	0	\N	\N	2021-07-02 00:00:00	2022-10-07 00:00:00	2021-10-07 00:00:00	20220128









--查客户号

SELECT * FROM  edw.dws_cst_ccrc_idv_ind_inf_di t2 --报告号客户号

where      t2.report_no in ('2022012810071993662541'

)

AND     t2.dt= '20220128'

;



rt

SELECT  t . *

FROM    edw.NCIP_CEQ_RESULTINFO t

WHERE   t.report_id IN ( '2023040300320970184335' )

AND     t.dt IN ( '20230403'  )

;

舟山市祥弓铝业有限公司

杭州舒越汽车销售有限公司

玉环市科盛机械有限公司



;

SELECT max(digital_unscr),min(digital_unscr),max(relative_position),min(relative_position)

FROM edw.ncip_CEQ_CREDITS_RATING_PARSE_BATCH where dt<='20250409';

SELECT max(digital_unscr),min(digital_unscr),max(relative_position),min(relative_position) FROM edw. ncip_CEQ_CREDIT_RATING_QUERY_RECORD  where dt<='20250409';
**06对公利率_01对公利率还款表现.sql
CREATE TABLE IF NOT EXISTS lab_bigdata_dev.zx_ent_rate_calculate AS
SELECT  a.cst_id
        ,a.report_id            AS report_no --报告编号
        ,a.le_acc_number --借贷账户编号
        ,a.le_account_type --借贷账户类型
        ,a.bm_org_type          AS dtrb_org_typ_cd --业务管理机构类型
        ,a.bm_org_number        AS dtrb_org --业务管理机构代码
        ,a.category_max         AS pd_cd --借贷业务种类大类
        ,a.bus_category_min --借贷业务种类细分
        ,a.open_date            AS start_dt --开户日期
        ,a.currency --币种
        ,a.loan_amount          AS ctr_amt --借款金额\信用额度 取非空
        ,a.due_date             AS mtu_dt --到期日期
        ,a.gua_mode             AS grnt_mth_cd --担保方式
        ,a.balance              AS ctr_bal --余额
        ,a.last_act_repay_date  AS late_one_tm_rpay_dt --最近一次实际还款日期
        ,a.last_act_repay_total AS cur_mon_actl_rpay --最近一次实际还款总额
        ,a.last_app_repay_date  AS shd_pay_day --最近一次约定还款日期
        ,a.last_app_repay_total AS cur_mon_shd_rpay --最近一次应还总额
        ,CASE
           WHEN a.le_account_type = 'D1' THEN a.sur_month_num
           ELSE a.sur_month_num_cal
         END                    AS rmn_rpay_trm --剩余还款月数
        ,a.rn
        ,a.hkbxid --还款表现ID
        ,a.union_id --关联ID
        ,a.id --ID
        ,a.term_months          AS rpay_trm --贷款期限_月
        ,a.shd_minus_start_dt --应还款日期-开始日期天数
        ,a.shd_minus_start_mm --应还款日期-开始日期换成月数
        ,a.actl_minus_start_dt --实际还款日-开始日期换成天数
        ,a.actl_minus_start_mm --实际还款日-开始日期换成月数
        ,a.repayed_cnt --已还款期数:还款表现里的hkbxid次数
        ,a.repayed_act_cnt --已还款期数_实际还款>0
        ,a.repayed_app_cnt --已还款期数_应还额>0
FROM    lab_bigdata_dev.zx_ent_inf_importment a;



alter table lab_bigdata_dev.zx_ent_rate_calculate set comment '对公征信还款明细关键字段两期以上';

SELECT * FROM lab_bigdata_dev.zx_ent_rate_calculate where cst_id is not null order by report_no ,union_id
**07埋点_01客户号异常distinct_id.sql
--distinct_id 为5,6,7位,首次事件
SELECT  event
        ,distinct_id
        ,time
        ,event_type 行为类型
        ,biz_name 业务线名称
        ,page_name 业务页面标题
        ,a_lib --SDK类型  Android js ios 等
        ,is_log_in 是否登录
        ,system_connect 接入系统
        ,source_channel 项目名称渠道名称
        ,a_screen_name
        ,a_title
FROM    (
            SELECT  event
                    --当前事件的自定义属性
                    ,event_type --行为类型
                    ,biz_name --业务线名称
                    ,page_name --业务页面标题
                    ,click_name --点击位名称
                    ,time
                    --必测预置属性
                    ,a_lib --SDK类型  Android js ios 等
                    ,a_manufacturer --主流机型
                    ,a_network_type  --网络类型 4G 5G 2G 3G WIFI等
                    --客户标识
                    ,distinct_id --用户ID
                    ,a_device_id --设备ID
                    --公共属性
                    ,is_log_in --是否登录
                    ,parent_village --法人标识
                    ,source_channel --项目名称渠道名称
                    ,platform_type --平台类型
                    ,simple_norm --简版普通版
                    ,system_connect --接入系统
                    ,a_screen_name
                    ,a_title
                    ,ROW_NUMBER() OVER ( PARTITION BY distinct_id ORDER BY time ASC ) rn
            FROM    edw.aubs_events_ibnk
            WHERE   dt >= '20220601'
            AND     length(distinct_id) <= 8
            AND     length(distinct_id) >= 3
        ) t
WHERE   t.rn = 1
and distinct_id >'103144'
order by distinct_id
**08对公征信利率_4_对公利率余额测试.sql
--余额变化日期少的征信报告
SELECT  union_id,report_id,count(DISTINCT balance_date),  count(DISTINCT report_inform_date)
FROM    edw.ncip_ed01b_ac_pay_inf_sub
WHERE   dt >= '20230601'
--AND     balance % 10000 <> 0
--and balance_date>='2023'
GROUP BY union_id,report_id
 HAVING ( count(DISTINCT balance_date) <= 2
AND     count(DISTINCT report_inform_date) >= 4 )


edw.NCIP_ED01A_ESAL_ACC_INF A --借贷账户基本信息
LEFT JOIN    edw.DWD_CST_CCRC_ENTP_RPT_JNL_DI B --企业客户人行征信报告历史
ON      A.REPORT_ID = B.REPORT_NO
AND     B.DT <= {2}
and     b.dt>={0}
and     b.dt<={1}
LEFT JOIN    edw.NCIP_ED01B_ACC_PAY_INF C --还款表现
ON      A.ID = C.UNION_ID
AND     C.DT <= {2}
and     c.dt>={0}
and     c.dt<={1}
AND     C.DT >= '20200314';

--余额变化日期少的征信报告
SELECT  t.*
FROM    lab_bigdata_dev.zx_ent_inf_all t
inner join (
            SELECT  DISTINCT cst_id
            FROM    edw.dim_bus_loan_ctr_inf_dd
            WHERE   dt = '20240115'
            AND     apnt_mtu_dt >= '20240201'
            AND     ctr_bal > 0
        )t2
on t.cst_id=t2.cst_id
WHERE   t.union_id IN (
                        SELECT  union_id
                        FROM    edw.ncip_ed01b_ac_pay_inf_sub
                        WHERE   dt >= '20230601'
                        GROUP BY union_id , report_id
                         HAVING ( count(DISTINCT balance_date) <= 2
                        AND     count(DISTINCT report_inform_date) >= 4 )
                    )

and t.loan_amount>t.balance
order by t.due_date desc
;

--有合同 泰隆
SELECT  DISTINCT cst_id
FROM    edw.dim_bus_loan_ctr_inf_dd
WHERE   dt = '20240115'
AND     apnt_mtu_dt >= '20240201'
AND     end_dt='18991231'
and cst_id in (
    '2002603733',
'2002217880',
'2001703845',
'2604930566',
'2002508108'

)






 SELECT 20500%100,2051%100 FROM edw.ncip_ed01b_ac_pay_inf_sub where dt='20240101' ;


 --余额变化日期少的征信报告
SELECT  t.*
FROM    lab_bigdata_dev.zx_ent_inf_all t
WHERE   t.union_id IN (
                        SELECT  union_id
                        FROM    edw.ncip_ed01b_ac_pay_inf_sub  --对公征信还款表现
                        WHERE   dt >= '20230601'
                        GROUP BY union_id , report_id
                         HAVING ( count(DISTINCT balance_date) <= 2  --余额变化日期
                        AND     count(DISTINCT report_inform_date) >= 4 )  --信息报告日期
                    )

and t.loan_amount>t.balance
order by t.due_date desc
;
**08对公征信利率_对公sql部分.sql
-- ODPS SQL
-- **********************************************************************
-- 功能描述:
-- **
-- 创建者: 龙彬彬
-- 创建日期: 2024-01-16 09:15:02
-- **
-- 修改日志:
-- 修改日期          修改人          修改内容
-- **
-- **********************************************************************
**08对公征信利率_对公征信利率测试负债报告账户数最大值.sql
--SELECT  * FROM    zx_rate_result_ent_di where dt='20230601' limit 5;

--SELECT max(报告编号),min(报告编号) FROM test_20240122 ;

--对比，以大数据的利率表为主表
SELECT  t . *
        ,t2.利率 利率开发
        ,abs(coalesce(t.irr, 0) - coalesce(t2.利率, 0)) 差距
FROM    (   select cst_id,report_no,le_acc_number,le_account_type,dtrb_org_typ_cd,dtrb_org,pd_cd,bus_category_min,start_dt,currency
                    ,ctr_amt,mtu_dt,grnt_mth_cd,ctr_bal,late_one_tm_rpay_dt,cur_mon_actl_rpay,shd_pay_day,cur_mon_shd_rpay,rmn_rpay_trm
                    ,report_inform_date,hkbxid,union_id,id,term_months,rpay_trm,shd_minus_start_dt,shd_minus_start_mm,actl_minus_start_dt
                    ,actl_minus_start_mm,repayed_cnt,repayed_act_cnt,repayed_app_cnt,shd_num,act_num,repay_type
                    ,case when irr=-9999 or irr=-999 or irr='-9999' or irr='-999' then 0 else irr end as irr
            from lab_bigdata_dev.zx_rate_result_ent_di t
            WHERE  t.dt  in ('20210801','20230601','20230602','20230603','20230604','20230605','20230606','20230607','20230608','20230609','20230610')

        )t --大数据的利率表
--inner join lab_bigdata_dev.reportid_20240122 t3 on t.report_no=t3.report_id
LEFT JOIN    lab_bigdata_dev.test_20240122 t2 --开发的利率表
ON      t.report_no = t2.报告编号
AND     t.le_acc_number = t2.账户编号
where abs(coalesce(t.irr, 0) - coalesce(t2.利率, 0)) >= 0.1
ORDER BY abs(coalesce(t.irr, 0) - coalesce(t2.利率, 0)) DESC;

SELECT DISTINCT substr(报告编号,1,8) FROM lab_bigdata_dev.test_20240122;

--02对比，以开发的利率表为主表
SELECT  t2. *
        ,t.irr 利率大数据
        ,abs(coalesce(t.irr, 0) - coalesce(t2.利率, 0)) 差距
        ,start_dt,currency,b.cst_id
                    ,ctr_amt,mtu_dt,grnt_mth_cd,ctr_bal,late_one_tm_rpay_dt,cur_mon_actl_rpay,shd_pay_day,cur_mon_shd_rpay,rmn_rpay_trm
                    ,report_inform_date,term_months,rpay_trm,shd_minus_start_dt,shd_minus_start_mm,actl_minus_start_dt
                    ,actl_minus_start_mm,repayed_cnt,repayed_act_cnt,repayed_app_cnt,shd_num,act_num,repay_type
FROM    lab_bigdata_dev.test_20240122 t2 --开发的利率表
LEFT JOIN    (   select cst_id,report_no,le_acc_number,le_account_type,dtrb_org_typ_cd,dtrb_org,pd_cd,bus_category_min,start_dt,currency
                    ,ctr_amt,mtu_dt,grnt_mth_cd,ctr_bal,late_one_tm_rpay_dt,cur_mon_actl_rpay,shd_pay_day,cur_mon_shd_rpay,rmn_rpay_trm
                    ,report_inform_date,hkbxid,union_id,id,term_months,rpay_trm,shd_minus_start_dt,shd_minus_start_mm,actl_minus_start_dt
                    ,actl_minus_start_mm,repayed_cnt,repayed_act_cnt,repayed_app_cnt,shd_num,act_num,repay_type
                    ,case when irr=-9999 or irr=-999 or irr='-9999' or irr='-999' then 0 else irr end as irr
            from lab_bigdata_dev.zx_rate_result_ent_di t
            WHERE  ( t.dt like  '202306%' or t.dt like  '202108%')
        )t --大数据的利率表
ON      t.report_no = t2.报告编号
AND     t.le_acc_number = t2.账户编号
left join  edw.DWD_CST_CCRC_ENTP_RPT_JNL_DI B --企业客户人行征信报告历史
ON     t.report_no = B.REPORT_NO
and   ( b.dt like  '202306%' or b.dt like  '202108%')
where abs(coalesce(t.irr, 0) - coalesce(t2.利率, 0)) >= 0.1
ORDER BY abs(coalesce(t.irr, 0) - coalesce(t2.利率, 0)) DESC;
;

SELECT * FROM edw.DWD_CST_CCRC_ENTP_RPT_JNL_DI B --企业客户人行征信报告历史
where  B.REPORT_NO in ('2021080122335430064757','2021080123115431364788','2021080122165482264379','2021080122165482264379','2021080122165482264379','2021080122165482264379','2021080122165482264379'
,'2021080122165482264379','2021080122165482264379','2021080122165482264379','2021080122471893164351','2021080122590563264753')
and    b.dt >= '20210801'
AND    b.dt <= '20210831'
;
--
SELECT * FROM zx_rate_result_ent_di
where dt >= '20230601'
AND   dt <= '20230610'
and report_no in (
-- '2023060923063796383929','2023060513410335684229','2023060722360441983846','2023060423030537183896'
-- ,'2023060623035801384272','2023060400042463784262','2023060809110805183619'
'2023060623035801384272','2023060400042463784262','2023060809110805183619','2023060513410335684229','2023060923063796383929'
)
;

SELECT * FROM zx_ent_rate_calculate_map
where report_no in (
-- '2023060923063796383929','2023060513410335684229','2023060722360441983846','2023060423030537183896'
-- ,'2023060623035801384272','2023060400042463784262','2023060809110805183619'
--'2023060623035801384272','2023060400042463784262','2023060809110805183619','2023060513410335684229','2023060923063796383929'
'2023060100201721684563','2023060100201721684563'
)
;

 SELECT * FROM zx_ent_rate_calculate_map where report_no in (
'2023060812113191083691'
)

 SELECT min(report_no),max(report_no) FROM zx_ent_rate_calculate_map

SELECT * FROM zx_ent_rate_calculate where report_no in ('2023060812113191083691')
;

CREATE TABLE  zx_ent_test as
SELECT  *
FROM    zx_ent_rate_calculate
WHERE   report_no = '2023060809110805183619'
AND     le_acc_number = 'S7657'

;

SELECT * FROM zx_rate_result_ent_di
where dt >= '20230601'
AND   dt <= '20230610'
and report_no in (
'2023060923063796383929','2023060513410335684229','2023060722360441983846','2023060423030537183896'
,'2023060623035801384272','2023060400042463784262','2023060809110805183619',
'2023060623035801384272','2023060400042463784262','2023060809110805183619','2023060513410335684229','2023060923063796383929'
)
;


SELECT  report_id  as report_no  --报告编号
		,cst_id
        ,count(distinct case when dtrb_org_typ_cd in ('11','12','14','15') then dtrb_org  else null end)      as ZXACT_LOANACT_UNCL_OTHBANK_ORG_CNT--借贷账户_贷款账户_未关闭银行机构-非我行_机构数,放款机构类型11:商业银行,12:村镇银行,14:住房储蓄银行,15:外资银行
        ,count(distinct case when dtrb_org_typ_cd in ('24','51') then id else null end)    as             ZXACT_LOANACT_UNCL_MICFIN_ACT_CNT --借贷账户_贷款账户_未关闭小贷消金_账户数,放款机构类型24:消费金融公司 51:小额贷款公司
        ,sum(distinct case when dtrb_org_typ_cd in ('24','51') then ctr_bal else 0 end)    AS ZXACT_LOANACT_UNCL_MICFIN_BAL_SUM --借贷账户_贷款账户_未关闭小贷消金_总余额 ,放款机构类型24:消费金融公司 51:小额贷款公司
FROM    edw.dim_cst_ccrc_idv_loan_inf_dd t2
where      t2.dt='@@{yyyyMMdd}'   --系统前一天
and report_id in ('2023063000000019685125','2023063000001888485354','2023063000450962085697')
AND      t2.act_sts_cd <> '3' --3:结清的贷款
and      t2.act_typ_cd not in ('R2','R3','C1') --账户类型非贷记卡账户（R2）准贷记卡账户（R3） C1催收
and t2.dtrb_org not LIKE 'ZJTLCB%'
GROUP BY  report_id,cst_id;


select cst_id, cst_nm,intr_no from edw.dim_cst_entp_bas_inf_dd where dt='20240115'
and cst_id in (
 '2002508108',
'2002603733',
'2002217880',
'2604930566',
'2001703845'
)


SELECT * FROM edw.ncip_ed01b_ac_pay_inf_sub where dt='20230628' group by union_id

having count(distinct banlance_date)<=2 and count(disitnct report_inform_date)>=5;

SELECT * FROM lab_bigdata_dev.zx_ent_pay_inf where report_id='2023061419040233782830';

SELECT * FROM zx_ent_inf_all where report_id='2023061419040233782830';

SELECT * FROM zx_ent_rate_calculate where report_no='2023061419040233782830';


SELECT ba.report_id,count(*) cnt
FROM edw.ncip_pd01a_basicinfoseg ba

WHERE ba.report_id like '2024%'

group by ba.report_id order by cnt desc;




--未结清
SELECT  ba.report_id
        ,count(*) cnt
FROM    edw.ncip_pd01a_basicinfoseg ba
LEFT JOIN    edw.ncip_cp_m_account_info fi
ON      fi.act_id = ba.id
and fi.dt<='20241105'
and fi.dt=ba.dt
AND     fi.report_id = ba.report_id
WHERE   ( ba.ACCOUNT_TYPE IN ( 'D1' , 'R1' , 'R4' ) AND     fi.acc_status != '3' )
    OR ( ba.ACCOUNT_TYPE = 'R2' AND     ba.business_type = '82'
AND     fi.acc_status NOT IN ( '4' , '6' ) )
and ba.dt<='20241105'
GROUP BY ba.report_id
ORDER BY cnt DESC;

SELECT dt,count(*) FROM edw.ncip_pd01a_basicinfoseg ba where ba.dt<='20241105' GROUP BY  dt order by dt;

--未结清
select report_id,count(*)
from edw.dim_cst_ccrc_idv_loan_inf_dd t2
where     t2.dt='20241105'   --系统前一天
--and  substr(t2.report_id,1,8) <={3}
and  substr(t2.report_id,1,8)>='20211106'
AND ( (  t2.act_sts_cd <> '3' --3:结清的贷款 1：正常 20240827
-- and     coalesce(t2.five_ctg_cd,'') in ('','1','9')  --五级分类1正常 9未分类
and     t2.act_typ_cd IN ( 'D1' , 'R1' , 'R4' )  --账户类型非贷记卡账户（R2）准贷记卡账户（R3） C1催收
)
or  (  t2.act_sts_cd NOT IN ( '4' , '6' )  --3:结清的贷款 1：正常 20240827
-- and     coalesce(t2.five_ctg_cd,'') in ('','1','9')  --五级分类1正常 9未分类
and     t2.pd_cd IN ( '82' )  --账户类型非贷记卡账户（R2）准贷记卡账户（R3） C1催收
)
)
GROUP BY report_id
ORDER BY count(*) DESC
;



--已结清
select report_id,count(*)
from edw.dim_cst_ccrc_idv_loan_inf_dd t2
where     t2.dt='20241105'   --系统前一天
and  substr(t2.report_id,1,8)>='20211106'
AND ( (  t2.act_sts_cd = '3' --3:结清的贷款 1：正常 20240827
and     t2.act_typ_cd IN ( 'D1' , 'R1' , 'R4' )  --账户类型非贷记卡账户（R2）准贷记卡账户（R3） C1催收
)
or  (  t2.act_sts_cd = '3'  --3:结清的贷款 1：正常 20240827
and     t2.pd_cd IN ( '82' )  --账户类型非贷记卡账户（R2）准贷记卡账户（R3） C1催收
)
)
 and datediff(to_date(substr(report_id, 1, 8), 'yyyymmdd') , to_date(cls_dt, 'yyyymmdd'),'dd')<=365
  and datediff(to_date(substr(report_id, 1, 8), 'yyyymmdd') , to_date(cls_dt, 'yyyymmdd'),'dd')>=0
GROUP BY report_id
ORDER BY count(*) DESC
;


SELECT * FROM  edw.dim_cst_ccrc_idv_loan_inf_dd t2
where     t2.dt='20241105'  and report_id='2024040110083398887541'



select report_id,count(*)
from edw.dim_cst_ccrc_idv_loan_inf_dd t2
where     t2.dt='20241105'   --系统前一天
AND to_date(substr(report_id, 1, 8), 'yyyymmdd') - mtu_dt <= 365
            AND     CLOSE_DATE <= to_date(substr(report_id, 1, 8), 'yyyymmdd')
;


--未结清
select report_id,count(*)
from edw.dim_cst_ccrc_idv_loan_inf_dd t2
where     t2.dt='20241105'   --系统前一天
--and  substr(t2.report_id,1,8) <={3}
and  substr(t2.report_id,1,8)>='20211106'
AND (  t2.act_sts_cd NOT IN ( '4' , '6' ) --3:结清的贷款 1：正常 20240827
-- and     coalesce(t2.five_ctg_cd,'') in ('','1','9')  --五级分类1正常 9未分类
and     t2.act_typ_cd IN (  'R2' , 'R3' )  --账户类型非贷记卡账户（R2）准贷记卡账户（R3） C1催收
)
GROUP BY report_id
ORDER BY count(*) DESC
;

select count(DISTINCT report_id)
from edw.dim_cst_ccrc_idv_loan_inf_dd t2
where     t2.dt='20241105'   --系统前一天
--and  substr(t2.report_id,1,8) <={3}
and  substr(t2.report_id,1,8)>='20211106'
;
desc EDW.dws_cst_bas_inf_dd

--匹配客户号身份证号
SELECT distinct report_id
        ,t2.cst_id
        ,concat(t3.doc_nbr, '%')
FROM    edw.dim_cst_ccrc_idv_loan_inf_dd t2
LEFT JOIN    EDW.dws_cst_bas_inf_dd t3
ON      t2.cst_id = t3.cst_id
AND     t3.dt = '20241105'
WHERE   t2.dt = '20241105' --系统前一天
AND     t2.report_id IN ( '2022103116481027484119' , '2024072301092948185091' , '2023061515242628687216' , '2024032423201709586195' , '2023032217401979086036'
, '2023032217411194885538' , '2023072405074032786111' , '2023072405084052485194' , '2023072405084036884949' , '2023072405074055486073' , '2023072405064033885430'
, '2023072405084052685670' , '2023110914565358986319' , '2022041023574127467679' , '2023062517132938385017' , '2024102912560513084428' , '2022112808245544585140'
, '2021122121450914266355' )
**08对公征信利率_新旧利率对比_以立英为主表.sql
--对比，主要看不限定

SELECT t.*,t2.irr irr旧,abs(t.irr-t2.irr) 差距

FROM  lab_bigdata_dev.zx_rate_result_all_di_orderby_report_only t

left join lab_bigdata_dev.zx_rate_result_all_di t2

on t.report_no=t2.report_no

and t.id=t2.id

and t2.dt='20231017'

where  abs(t.irr-t2.irr)>0.3

order by t.irr desc

;



SELECT * FROM zx_rate_only_second where report_no='2023101722153570185947'

SELECT * FROM lab_bigdata_dev.zx_rate_result_all_di  where dt='20231017' and report_no='2023101708524225685544'





SELECT t.*,t2.irr irr新,abs(t.irr-t2.irr) 差距

FROM lab_bigdata_dev.zx_rate_result_all_di t

left join lab_bigdata_dev.zx_rate_result_all_di_20231017 t2

on t.report_no=t2.report_no

and t.id=t2.id

where t.dt='20231017'

and abs(t.irr-t2.irr)>0.3

and t.cst_id like '1%'

;



SELECT  *

FROM    lab_bigdata_dev.zx_rate_result_all_di

WHERE   dt = '20240731'

AND     report_no IN ( '2024073100235047585256' );







select * from edw.dim_cst_ccrc_idv_loan_inf_dd where dt='20240731'  and  report_id IN ( '2024073100235047585256' ) ; --act_id，report_id 2024073123090843484653



desc zx_rate_result_all_di;



drop table if exists irr_check;

CREATE TABLE irr_check (

	id string COMMENT '',

	REPORT_ID string COMMENT '',

	ACCOUNT_NUM string COMMENT '',

	ACCOUNT_TYPE string COMMENT '',

	ORG_CODE string COMMENT '',

	BUSINESS_TYPE string COMMENT '',

	CTR_AMT decimal COMMENT '',

	ISSUANCE_DATE string COMMENT '',

	DUE_DATE string COMMENT '',

	REPAY_PERIODS string COMMENT '',

	RATE decimal COMMENT '',

	REPAYMETHOD string COMMENT '',

	INPUT_DATE string COMMENT '',

	GUARANTEE_MODE string COMMENT '',

	ACCOUNTSTATUS string COMMENT '',

	OVERDUEAMOUNT decimal COMMENT '',

	FIVEASSORT string COMMENT '',

	REPAYMENT decimal COMMENT '',

	BALANCE decimal COMMENT ''

)

COMMENT '个人利率对比'

;







--以立英为基础

SELECT  t . *

        ,t3.rate 永杰利率

        ,CASE

           WHEN t1.rpay_mth_cd = '11'                             THEN '分期等额本息'

           WHEN t1.rpay_mth_cd = '12'                             THEN '分期等额本金' --20220729更新增加 rpay_mth_cd

           WHEN t1.rpay_mth_cd = '13'                             THEN '到期还本分期结息'

           WHEN t1.rpay_mth_cd = '21'                             THEN '到期一次还本付息'

           WHEN t1.rpay_mth_cd = '31'                             THEN '按期结息，到期还本'

           WHEN t1.rpay_mth_cd = '90'                             THEN '不区分还款方式'

           WHEN ( t1.rpay_mth_cd = '' OR t1.rpay_mth_cd IS NULL ) THEN ''

         END AS 人行还款方式

        ,round(coalesce(t3.RATE, 0), 2) - round(coalesce(t.irr, 0), 2) 差距

        ,t1.five_ctg_cd 五级分类

		,t1.act_id

FROM     zx_rate_result_all_di_small_12_0731 t

LEFT JOIN    edw.dim_cst_ccrc_idv_loan_inf_dd t1

ON      t1.report_id = t.report_no  AND     t1.id = t.id

AND     t1.dt = '20241025'



LEFT JOIN    irr_check t3

ON      t3.report_id = t1.report_id

AND     t3.ACCOUNT_NUM = t1.act_id --账户编号

inner JOIN   (select DISTINCT report_id from irr_check )  t4

ON      t4.report_id = t.report_no



WHERE       t.irr > 1

AND     coalesce(t1.cst_id, '') <> ''

AND     abs(round(coalesce(t3.RATE, 0), 2) - round(coalesce(t.irr, 0), 2)) > 0.02

-- and t1.report_id in ('2024073122135409284598',

-- '2024073123204425785058',

-- '2024073100465659884865')

ORDER BY t.cst_id;





-- SELECT * FROM zx_rate_result_all_di_small_12_test where id ='abba77505afa4a8ab123caa1923fbbf5';



create table zx_rate_result_all_di_small_12_copy as

SELECT * FROM zx_rate_result_all_di_small_12;



create table zx_rate_result_all_di_small_12_0731 as SELECT * from zx_rate_result_all_di_small_12
**11取数_01同一风险控制号.sql
create table sam_zx as
SELECT  sam_rsk_ctrl_id
		,count(DISTINCT case when rn=1 then report_no else null end) 最新征信查询日期同一天报告数
		,count(distinct cst_id) 客户数
		,count(distinct report_no) 报告数
		,count(distinct report_no)-count(DISTINCT case when rn=1 then report_no else null end) 历史查询报告数
FROM    (
			SELECT  sam_rsk_ctrl_id
					,cst_id
					,report_no
					,dense_rank() OVER ( PARTITION BY sam_rsk_ctrl_id ORDER BY substr(report_no, 1, 8) DESC ) rn --1,1,1,2
			FROM    fxb_dcbg_samerisk_apply_cst_05
			WHERE   dt = '20250228'
		) t
--where sam_rsk_ctrl_id='1000000461'
group by sam_rsk_ctrl_id
;
			SELECT  sam_rsk_ctrl_id
					,cst_id
					,report_no
					,dense_rank() OVER ( PARTITION BY sam_rsk_ctrl_id ORDER BY substr(report_no, 1, 8) DESC ) rn --1,1,1,2
			FROM    fxb_dcbg_samerisk_apply_cst_05
			WHERE   dt = '20250228'
      and  sam_rsk_ctrl_id='1000000461'
**11取数_代发工资.sql

--------------------------------------------------------------------- 新增企业团办合同信息表
--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_new purge;
--
--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_new
--(
--    ent_cst_id              STRING  COMMENT '企业客户号'
--    ,ent_cst_nm             STRING  COMMENT '企业客户名'
--    ,prm_mgr_id             STRING  COMMENT '主管户客户经理工号'
--    ,prm_mgr_nm             STRING  COMMENT '主管户客户经理名称'
--    ,tem_org_id             STRING  COMMENT '团队机构号'
--    ,tem_org_nm             STRING  COMMENT '团队机构名称'
--    ,sbr_org_nm             STRING  COMMENT '支行名称'
--    ,brc_org_nm             STRING  COMMENT '分行名称'
--    ,cst_id                 STRING  COMMENT '个人客户号'
--    ,busi_ctr_id            STRING  COMMENT '合同号'
--    ,pd_cd                  STRING  COMMENT '产品代码'
--    ,pd_nm                  STRING  COMMENT '产品名称'
--    ,ctr_amt                DECIMAL COMMENT '合同金额'
--    ,ctr_bal                DECIMAL COMMENT '合同余额'
--    ,CCY_CD                 STRING  COMMENT '币种代码'
--    ,apnt_start_dt          STRING  COMMENT '约定开始日期'
--    ,apnt_mtu_dt            STRING  COMMENT '约定到期日期'
--    ,actl_start_use_crd_lmt DECIMAL COMMENT '启用额度'
--    --,hpn_dt                 STRING  COMMENT '发生日期'
--    ,end_dt                 STRING  COMMENT '终结日期'
--    ,count_dbil_id          DECIMAL COMMENT '累计发放借据数'
--    ,sum_amt                DECIMAL COMMENT '累计发放金额'
--    ,mon_acm_prcp_bal_acml  DECIMAL COMMENT '本月本金余额月日均'
--    ,intr_rat               DECIMAL COMMENT '合同利率'
--    ,duration               bigint COMMENT  '期限'
--    ,if_shoubi              bigint COMMENT  '是否首笔'
--    ,dbil_fenzi             DECIMAL COMMENT '用信金额加权利率分子'
--    ,dbil_fenmu             DECIMAL COMMENT '用信金额加权利率分母'
--)
--COMMENT
--'企业团办新增消费性贷款合同信息表'
--PARTITIONED BY
--(
--    DT STRING COMMENT '日期分区'
--);


INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_new PARTITION (DT = '20250331')
SELECT  coalesce(T9.cst_id, '-') ent_cst_id   --企业客户号
        ,coalesce(T8.job_unt_nm, '-') ent_cst_nm    --企业客户名
        ,coalesce(T10.prm_mgr_id, '-') prm_mgr_id   --主管户客户经理工号
        ,coalesce(T10.prm_mgr_nm, '-') prm_mgr_nm   --主管户客户经理名称
        ,coalesce(T11.tem_org_id, '-') tem_org_id   --团队机构号
        ,coalesce(T11.tem_org_nm, '-') tem_org_nm   --团队名称
        ,coalesce(T11.sbr_org_nm, '-') sbr_org_nm   --支行名称
        ,coalesce(T11.brc_org_nm, '-') brc_org_nm   --分行名称
        ,T1.cst_id        --客户号
        ,T1.CTR_SERNO     --合同号
        ,T1.PRD_NO        --产品代码
        ,T17.pd_nm        --产品名称
        ,T1.ctr_amt       --合同金额
        ,T1.ctr_bal       --合同余额
        ,T1.BSN_CCY_CD    --币种代码
        ,T1.CTR_BGN_DT    --约定开始日期
        ,T1.CTR_MTU_DT    --约定到期日期
		--,COALESCE(T7.BIND_LMT,T13.SEG_LMT,T1.ctr_amt,0) * T18.AVG_PRC / T18.QUO_UNT AS CYC_REALSUM -- 实际启用金额折人民币  新信贷改造删除T9.RESERVESUM
		,CASE
          WHEN T7.BUS_CTR_ID IS NOT NULL                                        THEN T7.BIND_LMT
           WHEN T1.RVLG_TYP_CD <> '1' THEN T1.CTR_AMT    --非循环贷款，取合同金额
           ELSE T1.STRT_USE_AMT     --启用金额
         END   as   ACTL_START_USE_CRD_LMT --启用额度
        ,T1.TMT_DT     --合同终结日期
        ,COALESCE(T14.COUNT_DBIL_ID, 0) COUNT_DBIL_ID   --累计发放借据数
        ,COALESCE(T14.SUM_AMT, 0) SUM_AMT    --累计发放金额
        ,COALESCE(T14.mon_acm_prcp_bal_acml, 0) mon_acm_prcp_bal_acml   --本月本金余额月日均
        ,T1.EXEC_INTR_RAT   --合同利率
        ,CASE
           WHEN T1.TMT_DT = '18991231' THEN DATEDIFF(TO_DATE(T1.CTR_MTU_DT, 'yyyyMMdd'), TO_DATE(T1.CTR_BGN_DT, 'yyyyMMdd'), 'dd') + 1
           ELSE DATEDIFF(TO_DATE(T1.TMT_DT, 'yyyyMMdd'), TO_DATE(T1.CTR_BGN_DT, 'yyyyMMdd'), 'dd') + 1
         END AS duration    --期限
        ,CASE
           WHEN T1.HPN_TYP_CD = '010' THEN 1
           ELSE 0
         END if_shoubi      --是否首笔
        ,T14.dbil_fenzi
        ,T14.dbil_fenmu
FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD T1    --合同基础信息
LEFT JOIN    edw.dim_cst_bas_inf_dd  T2        --客户基本信息
ON      T1.cst_id = T2.cst_id
AND     T2.dt = '20250331'
LEFT JOIN    EDW.DWD_BUS_LOAN_FNC_CRD_LMT_INF_DD T7 ----随贷通授信额度信息
ON      T7.BUS_CTR_ID = t1.CTR_SERNO
AND     T7.LOAN_USG_CD = '2' --随贷通消费性贷款
AND     T7.DT = '20250331'
LEFT JOIN    edw.dim_cst_idv_bas_inf_dd   T8   --个人客户基本信息
ON      T1.cst_id = T8.cst_id
and     T8.dt = '20250331'
LEFT JOIN    edw.dim_cst_entp_bas_inf_dd T9    --企业客户基本信息
ON      T8.job_unt_nm = T9.cst_nm
AND     T9.dt = '20250331'
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd T10   --客户主管户信息
ON      T9.cst_id = T10.cst_id
AND     T10.dt = '20250331'
LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd T11   --机构树
ON      T10.prm_org_id = T11.org_id
AND     T11.dt = '20250331'
LEFT JOIN    (
                 SELECT  BUS_CTR_ID
                         ,COUNT(DBIL_ID) COUNT_DBIL_ID
                         ,SUM(AMT) SUM_AMT
                         ,SUM(mon_acm_prcp_bal_acml) / 31 AS mon_acm_prcp_bal_acml
                         ,SUM(AMT * exe_intr_rat * CASE
                                                     WHEN end_dt = '18991231' THEN DATEDIFF(TO_DATE(apnt_mtu_day, 'yyyyMMdd'), TO_DATE(dtrb_dt, 'yyyyMMdd'), 'dd') + 1
                                                     ELSE DATEDIFF(TO_DATE(end_dt, 'yyyyMMdd'), TO_DATE(dtrb_dt, 'yyyyMMdd'), 'dd') + 1
                                                   END)         AS dbil_fenzi
                         ,SUM(AMT * CASE
                                      WHEN end_dt = '18991231' THEN DATEDIFF(TO_DATE(apnt_mtu_day, 'yyyyMMdd'), TO_DATE(dtrb_dt, 'yyyyMMdd'), 'dd') + 1
                                      ELSE DATEDIFF(TO_DATE(end_dt, 'yyyyMMdd'), TO_DATE(dtrb_dt, 'yyyyMMdd'), 'dd') + 1
                                    END)                        AS dbil_fenmu
                 FROM    EDW.DWS_BUS_LOAN_DBIL_INF_DD --贷款借据信息汇总     还在使用中
                 WHERE   DT = '20250331'
                 GROUP BY BUS_CTR_ID
             ) T14
ON      T1.CTR_SERNO = T14.BUS_CTR_ID
LEFT JOIN    (
                 SELECT  A1.CTR_SERNO
                 FROM    EDW.DIM_BUS_LOAN_CTR_BSE_INF_DD A1 -- 合同基础信息
                 INNER JOIN    EDW.DWD_BUS_LOAN_PRPS_REL_DD A2 --方案关联
                 ON      A1.CTR_SERNO = A2.REL_ID
                 AND     A2.DT = '20250331'
                 INNER JOIN    EDW.DWD_BUS_LOAN_ZXT_LOAN_PRPS_APL_DD A3 --助兴通贷款方案申请
                 ON      A2.PRPS_ID = A3.PRPS_ID -- 找到重组的方案号
                 AND     A3.DT = '20250331'
                 WHERE   A1.DT = '20250331'
                 GROUP BY A1.CTR_SERNO
             ) T16 --助兴通合同
ON      T1.CTR_SERNO = T16.CTR_SERNO
LEFT JOIN    edw.DIM_BUS_LOAN_PRD_FRML_DD T17 --信贷产品信息
ON      T1.PRD_NO = T17.PRD_NO
AND     T17.dt = '20250331'
WHERE   T1.dt = '20250331'
AND     ( ( T1.PRD_NO like '200101%'   --个人消费性贷款
and     T1.PRD_NO <> '2001010101003'   --剔除 随贷通（消费）
AND     T1.TMT_DT = '18991231'
AND     T1.CTR_MTU_DT > '20250331' )
    OR ( T1.PRD_NO = '2001010101003'    --随贷通（消费）
AND     T7.lmt_sts_cd IN ( '0' , '3' , '4' ) ) ) --个人消费性贷款未到期未终结；随贷通-消费 额度状态已激活
AND     T2.LOAN_CST_TYP_CD in ( '04','08','09')  --工薪族
AND     T1.CTR_BGN_DT >= '20230701' --活动期间
AND    t1.BSN_MARK_CD NOT IN ( '01' ) --剔除员工贷款      --新码值
AND     ( T1.BSN_MARK_CD <> '04'
AND     T16.CTR_SERNO IS NULL )  --剔除重组贷款
AND     LENGTH(t8.job_unt_nm) > 3
AND     T1.CTR_STS_CD not in ( '1','3','5')  --剔除1：未生效，3	终止，5	作废
--AND     t8.OWN_EMP_ID = ''  --剔除本行员工号
;


--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_all_new purge;
--
--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_all_new
--(
--    ent_cst_id              STRING  COMMENT '企业客户号'
--    ,ent_cst_nm             STRING  COMMENT '企业客户名'
--    ,prm_mgr_id             STRING  COMMENT '主管户客户经理工号'
--    ,prm_mgr_nm             STRING  COMMENT '主管户客户经理名称'
--    ,tem_org_id             STRING  COMMENT '团队机构号'
--    ,tem_org_nm             STRING  COMMENT '团队机构名称'
--    ,sbr_org_nm             STRING  COMMENT '支行名称'
--    ,brc_org_nm             STRING  COMMENT '分行名称'
--    ,cst_id                 STRING  COMMENT '个人客户号'
--    ,busi_ctr_id            STRING  COMMENT '合同号'
--    ,pd_cd                  STRING  COMMENT '产品代码'
--    ,pd_nm                  STRING  COMMENT '产品名称'
--    ,ctr_amt                DECIMAL COMMENT '合同金额'
--    ,ctr_bal                DECIMAL COMMENT '合同余额'
--    ,CCY_CD                 STRING  COMMENT '币种代码'
--    ,apnt_start_dt          STRING  COMMENT '约定开始日期'
--    ,apnt_mtu_dt            STRING  COMMENT '约定到期日期'
--    ,actl_start_use_crd_lmt DECIMAL COMMENT '启用额度'
--    --,hpn_dt                 STRING  COMMENT '发生日期'
--    ,end_dt                 STRING  COMMENT '终结日期'
--    ,count_dbil_id          DECIMAL COMMENT '累计发放借据数'
--    ,sum_amt                DECIMAL COMMENT '累计发放金额'
--    ,mon_acm_prcp_bal_acml  DECIMAL COMMENT '本月本金余额月日均'
--    ,efe_cst_ind            STRING  COMMENT '有效户标识'
--    ,efe_crd_cst_ind        STRING  COMMENT '有效信用卡标识'
--    ,pd_hld_qty             DECIMAL COMMENT '产品持有数'
--    ,chm_bal                DECIMAL COMMENT '理财余额'
--    ,dep_bal                DECIMAL COMMENT '存款余额'
--    ,cprh_contri_cur_year   DECIMAL COMMENT '当年客户价值'
--    ,cst_val_grd            STRING  COMMENT '客户价值等级'
--    ,if_ctr_efe             STRING  COMMENT '是否消费性贷款在贷合同'
--    ,frz_sts_ind            STRING  COMMENT '是否授信状态为空'
--    ,forml_cst_ind          STRING  COMMENT '正式客户标识'
--)
--COMMENT
--'企业团办综合产效底表'
--PARTITIONED BY
--(
--    DT STRING COMMENT '日期分区'
--);

INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_all_new PARTITION (DT = '20250331')
SELECT  T0.ent_cst_id --企业客户号
        ,T0.ent_cst_nm --企业客户名称
        ,T0.prm_mgr_id --主管户客户经理工号
        ,T0.prm_mgr_nm --主管户客户经理名称
        ,T0.tem_org_id --团队机构号
        ,T0.tem_org_nm --团队名称
        ,T0.sbr_org_nm --支行名称
        ,T0.brc_org_nm --分行名称
        ,T8.cst_id --客户号
        ,T1.CTR_SERNO --合同号
        ,T1.PRD_NO --产品代码
        ,T20.PD_NM --产品名称
        ,T1.ctr_amt --合同金额
        ,T1.ctr_bal --合同余额
        ,T1.BSN_CCY_CD --币种代码
        ,T1.CTR_BGN_DT --约定开始日期
        ,T1.CTR_MTU_DT --约定到期日期
	  --  ,COALESCE(T7.BIND_LMT,T13.SEG_LMT,T1.ctr_amt,0) * T23.AVG_PRC / T23.QUO_UNT AS CYC_REALSUM -- 实际启用金额折人民币  新信贷改造删除T9.RESERVESUM
	    ,CASE
          WHEN T7.BUS_CTR_ID IS NOT NULL                                        THEN T7.BIND_LMT
           WHEN T1.RVLG_TYP_CD <> '1' THEN T1.CTR_AMT    --非循环贷款，取合同金额
           ELSE T1.STRT_USE_AMT     --启用金额
         END   as   ACTL_START_USE_CRD_LMT --启用额度
        ,T1.TMT_DT --合同终结日期
        ,COALESCE(T14.COUNT_DBIL_ID, 0) COUNT_DBIL_ID --累计发放借据数
        ,COALESCE(T14.SUM_AMT, 0) SUM_AMT --累计发放金额
        ,COALESCE(T14.mon_acm_prcp_bal_acml, 0) mon_acm_prcp_bal_acml --本月本金余额月日均
        ,decode(T15.efe_cst_ind,'1',1,'',0) efe_cst_ind --有效户标识
        ,CASE
           WHEN T21.cst_id IS NOT NULL THEN '1'
           ELSE '0'
         END efe_crd_cst_ind --有效信用卡户
        ,decode(T15.efe_dep_cst_ind, '1', 1, '', 0) + decode(T15.efe_chm_cst_ind, '1', 1, '', 0) + decode(T15.efe_insu_cst_ind, '1', 1, '', 0) + decode(T15.efe_fnd_cst_ind, '1', 1, '', 0) + decode(T15.efe_nob_met_cst_ind, '1', 1, '', 0) AS pd_hld_qty
        ,T16.chm_bal --理财余额
        ,T17.dep_bal --存款余额
        ,T18.cprh_contri_cur_year --当年客户价值
        ,T18.cst_val_grd --客户价值等级
        ,CASE
           WHEN ( T1.PRD_NO  like '200101%' and   T1.PRD_NO <> '2001010101003'  AND T1.TMT_DT = '18991231' AND T1.CTR_MTU_DT > '20250331' AND T1.CTR_STS_CD not in ( '1','3','5') ) OR ( T1.PRD_NO = '2001010101003'  AND T7.lmt_sts_cd IN ( '0' , '3' , '4' ) AND T1.CTR_STS_CD not in ( '1','3','5') ) THEN '1'
           ELSE '0'
         END if_ctr_efe --是否消费性贷款在贷合同
        ,CASE
           WHEN T1.CTR_STS_CD IS NOT NULL AND T1.CTR_STS_CD  in ( '1','3','5') THEN '1'
           WHEN T1.CTR_STS_CD IS NOT NULL AND T1.CTR_STS_CD not in ( '1','3','5') THEN '0'
         END frz_sts_ind  --授信状态是否为空
        ,decode(T19.forml_cst_ind, '1', 1, '', 0) forml_cst_ind --正式客户标识
FROM    (
            SELECT  DISTINCT ent_cst_id
                             ,ent_cst_nm
                             ,prm_mgr_id
                             ,prm_mgr_nm
                             ,tem_org_id
                             ,tem_org_nm
                             ,sbr_org_nm
                             ,brc_org_nm
            FROM    LAB_BIGDATA_DEV.phjrb_ys_qytb_bus_loan_ctr_inf_new --企业团办合同信息表
            WHERE   dt = '20250331'
        ) T0
LEFT JOIN   edw.dim_cst_idv_bas_inf_dd   T8   --个人客户基本信息
ON      t0.ent_cst_nm = t8.job_unt_nm
and     T8.dt = '20250331'
LEFT JOIN    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD T1 --合同基础信息
ON      T8.cst_id = T1.cst_id
AND     T1.dt = '20250331'
LEFT JOIN    edw.dim_cst_bas_inf_dd T2 --客户基本信息
ON      T8.cst_id = T2.cst_id
AND     T2.dt = '20250331'
LEFT JOIN    EDW.DWD_BUS_LOAN_FNC_CRD_LMT_INF_DD T7 ----随贷通授信额度信息
ON      T7.BUS_CTR_ID = t1.CTR_SERNO
AND     T7.LOAN_USG_CD = '2' --随贷通消费性贷款
AND     T7.DT = '20250331'
LEFT JOIN    (
                 SELECT  BUS_CTR_ID
                         ,COUNT(DBIL_ID) COUNT_DBIL_ID
                         ,SUM(AMT) SUM_AMT
                         ,SUM(mon_acm_prcp_bal_acml) / 31 AS mon_acm_prcp_bal_acml
                 FROM    EDW.dws_bus_loan_dbil_inf_dd --贷款借据信息汇总
                 WHERE   DT = '20250331'
                 GROUP BY BUS_CTR_ID
             ) T14
ON      T1.CTR_SERNO = T14.BUS_CTR_ID
LEFT JOIN    adm_pub.adm_csm_cbas_ind_inf_dd T15 --客户集市-基础信息-客户基础标识信息
ON      T1.cst_id = T15.cst_id
AND     T15.dt = '20250331'
LEFT JOIN    adm_pub.adm_csm_cbus_chm_inf_dd T16 --客户集市-业务信息-客户理财业务信息表
ON      T1.cst_id = T16.cst_id
AND     T16.dt = '20250331'
LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd T17 --客户集市-业务信息-客户存款业务信息表
ON      T1.cst_id = T17.cst_id
AND     T17.dt = '20250331'
LEFT JOIN    adm_pub.adm_csm_cbus_cst_val_der_ind_inf_dd T18 --客户集市-业务信息-客户价值信息-客户价值衍生指标信息
ON      T1.cst_id = T18.cst_id
AND     T18.dt = '20250330'
LEFT JOIN    adm_pub.adm_csm_cbas_mng_inf_dd T19 --客户集市-客户基础-客户管户信息
ON      T1.cst_id = T19.cst_id
AND     T19.dt = '20250331'
LEFT JOIN    edw.DIM_BUS_LOAN_PRD_FRML_DD T20 --信贷产品信息
ON      T1.PRD_NO = T20.PRD_NO
AND     T20.dt = '20250331'
LEFT JOIN    (
                 SELECT  DISTINCT cst_id
                 FROM    edw.dim_bus_crd_cr_crd_inf_dd --信用卡卡片信息
                 WHERE   dt = '20250331'
                 AND     card_sts_cd = '' --卡片状态正常
                 AND     TO_DATE(CONCAT('20', MTU_DAY, '01'), 'yyyyMMdd') >= TO_DATE(CONCAT('@@{yyyyMM}', '01'), 'yyyyMMdd')
             ) T21
ON      T1.cst_id = T21.cst_id
LEFT JOIN    (
                 SELECT  A1.CTR_SERNO
                 FROM    EDW.DIM_BUS_LOAN_CTR_BSE_INF_DD A1 -- 合同基础信息
                 INNER JOIN    EDW.DWD_BUS_LOAN_PRPS_REL_DD A2 --方案关联  还在使用中
                 ON      A1.CTR_SERNO = A2.REL_ID
                 AND     A2.DT = '20250331'
                 INNER JOIN    EDW.DWD_BUS_LOAN_ZXT_LOAN_PRPS_APL_DD A3 --助兴通贷款方案申请   还在使用中
                 ON      A2.PRPS_ID = A3.PRPS_ID -- 找到重组的方案号
                 AND     A3.DT = '20250331'
                 WHERE   A1.DT = '20250331'
                 GROUP BY A1.CTR_SERNO
             ) T22 --助兴通合同
ON      T1.CTR_SERNO = T22.CTR_SERNO
WHERE   T2.LOAN_CST_TYP_CD in ( '04','08','09') --工薪族
--剔除员工贷款、重组贷款或者包含没有合同
AND     ( (  t1.BSN_MARK_CD NOT IN ( '01' )
AND     ( T1.BSN_MARK_CD <> '04'
AND     T22.CTR_SERNO IS NULL ) )   --剔除重组贷款
    OR T1.cst_id IS NULL );


----- SHEET2 企业团办-客户清单
--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_cst_info_crd_tmp_new purge;
--
--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_cst_info_crd_tmp_new
--(
--    ent_cst_id               STRING  COMMENT '企业客户号'
--    ,ent_cst_nm              STRING  COMMENT '企业客户名'
--    ,prm_mgr_id_ent          STRING  COMMENT '企业主管户客户经理工号'
--    ,prm_mgr_nm_ent          STRING  COMMENT '企业主管户客户经理名称'
--    ,tem_org_id_ent          STRING  COMMENT '企业主管团队机构号'
--    ,tem_org_nm_ent          STRING  COMMENT '企业主管团队机构名称'
--    ,sbr_org_nm_ent          STRING  COMMENT '企业主管支行名称'
--    ,brc_org_nm_ent          STRING  COMMENT '企业主管分行名称'
--    ,cst_id                  STRING  COMMENT '个人客户号'
--    ,cst_nm                  STRING  COMMENT '个人客户名'
--    ,prm_mgr_id              STRING  COMMENT '主管户客户经理工号'
--    ,prm_mgr_nm              STRING  COMMENT '主管户客户经理名称'
--    ,tem_org_id              STRING  COMMENT '团队机构号'
--    ,tem_org_nm              STRING  COMMENT '团队机构名称'
--    ,sbr_org_nm              STRING  COMMENT '支行名称'
--    ,brc_org_nm              STRING  COMMENT '分行名称'
--    ,efe_cst_ind             STRING  COMMENT '有效户标识'
--    ,efe_crd_cst_ind         STRING  COMMENT '有效信用卡户'
--    ,efe_dep_cst_ind         STRING  COMMENT '有效存款户'
--    ,efe_chm_cst_ind         STRING  COMMENT '有效理财户'
--    ,efe_insu_cst_ind        STRING  COMMENT '有效保险户'
--    ,efe_fnd_cst_ind         STRING  COMMENT '有效基金户'
--    ,efe_nob_met_cst_ind     STRING  COMMENT '有效贵金属户'
--    ,chm_bal                 DECIMAL COMMENT '理财余额'
--	  ,chm_mon_avg             DECIMAL COMMENT '理财月日均'
--    ,dep_bal                 DECIMAL COMMENT '存款余额'
--	  ,dep_bal_mon_avg         DECIMAL COMMENT '存款余额月日均'
--	  ,insu_frs_bus_amt        DECIMAL COMMENT '保险首单保费金额'
--	  ,avg_ncr_fnd_amt_cur_mon DECIMAL COMMENT '非货币公募基金金额当月日均保有量'
--	  ,nob_met_bal_1y          DECIMAL COMMENT '近一年贵金属余额'
--    ,aum_bal                 DECIMAL COMMENT 'aum余额' --20231123
--    ,chm_bal0630             DECIMAL COMMENT '理财余额230630'
--    ,dep_bal0630             DECIMAL COMMENT '存款余额230630'
--    ,aum_bal0630             DECIMAL COMMENT 'aum余额230630' --20231123
--    ,cprh_contri_cur_year    DECIMAL COMMENT '当年客户价值'
--    ,cst_val_grd             STRING  COMMENT '客户价值等级'
--    ,forml_cst_ind           STRING  COMMENT '正式客户标识'
--    ,brc_org_id               STRING  COMMENT '分行层级机构编号'
--    ,sbr_org_id               STRING  COMMENT '支行层级机构编号'
--)
--COMMENT
--'企业团办新增信用卡客户信息表'
--PARTITIONED BY
--(
--    DT STRING COMMENT '日期分区'
--);




-----新增表字段
-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_cst_info_crd_tmp_new add  columns
--(grp_org_id               STRING  COMMENT '集团机构编号'
--,cpy_org_id               STRING  COMMENT '法人机构编号'
--);


-----新增表字段
-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_cst_info_crd_tmp_new add  columns
--(card_cnt               BIGINT  COMMENT '新增信用卡户数'
--);


INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_cst_info_crd_tmp_new  PARTITION (DT = '20250331')

SELECT  DISTINCT coalesce(T9.cst_id,'-') ent_cst_id --企业客户号
                 ,coalesce(T8.job_unt_nm,'-') ent_cst_nm --企业客户名称
                 ,coalesce(T10.prm_mgr_id,'-') prm_mgr_id_ent --企业主管户客户经理工号
                 ,coalesce(T10.prm_mgr_nm,'-') prm_mgr_nm_ent --企业主管户客户经理名称
                 ,coalesce(T11.tem_org_id,'-') tem_org_id_ent --企业团队机构号
                 ,coalesce(T11.tem_org_nm,'-') tem_org_nm_ent --企业团队名称
                 ,coalesce(T11.sbr_org_nm,'-') sbr_org_nm_ent --企业支行名称
                 ,coalesce(T11.brc_org_nm,'-') brc_org_nm_ent --企业分行名称
                 ,coalesce(T1.cst_id,'-') cst_id --客户号
                 ,coalesce(T1.cst_nm,'-') cst_nm --客户名称
                 ,coalesce(T20.prm_mgr_id,'-') prm_mgr_id --个人主管户客户经理工号
                 ,coalesce(T20.prm_mgr_nm,'-') prm_mgr_nm --个人主管户客户经理名称
                 ,coalesce(T21.tem_org_id,'-') tem_org_id --个人团队机构号
                 ,coalesce(T21.tem_org_nm,'-') tem_org_nm --个人团队名称
                 ,coalesce(T21.sbr_org_nm,'-') sbr_org_nm --个人支行名称
                 ,coalesce(T21.brc_org_nm,'-') brc_org_nm --个人分行名称
                 ,decode(T15.efe_cst_ind,'1',1,'',0) efe_cst_ind --有效户标识
                 ,'1' efe_crd_cst_ind --有效信用卡户
                 ,decode(T15.efe_dep_cst_ind, '1', 1, '', 0) efe_dep_cst_ind --有效存款户
                 ,decode(T15.efe_chm_cst_ind, '1', 1, '', 0) efe_chm_cst_ind --有效理财户
                 ,decode(T15.efe_insu_cst_ind, '1', 1, '', 0) efe_insu_cst_ind --有效保险户
                 ,decode(T15.efe_fnd_cst_ind, '1', 1, '', 0) efe_fnd_cst_ind --有效基金户
                 ,decode(T15.efe_nob_met_cst_ind, '1', 1, '', 0) efe_nob_met_cst_ind --有效贵金属户
                 ,T16.chm_bal           --理财余额
				 ,T16.chm_mon_avg       --理财月日均                                     --新增字段
                 ,T17.dep_bal           --存款余额
				 ,t17.dep_bal_mon_avg   --存款余额月日均                                 --新增字段
				 ,t28.insu_frs_bus_amt  --保险首单保费金额                               --新增字段
				 ,t29.avg_ncr_fnd_amt_cur_mon   --非货币公募基金金额当月日均保有量       --新增字段
                 ,t30.nob_met_bal_1y            --近一年贵金属余额                       --新增字段
                 ,T27.aum_bal --aum余额
                 --,T24.chm_bal chm_bal0630 --理财余额230630
                 --,T25.dep_bal dep_bal0630 --存款余额230630
                 --,T26.aum_bal aum_bal0630 --aum余额230630
				 ,T24.chm_bal_before    --消费贷合同之前理财余额    修改字段
                 ,T24.dep_bal_before    --消费贷合同之前存款余额    修改字段
                 ,T24.aum_bal_before    --消费贷合同之前aum余额     修改字段
                 ,T18.cprh_contri_cur_year --当年客户价值 年累计FTP
                 ,T18.cst_val_grd --客户价值等级
                 ,T19.forml_cst_ind --正式客户标识
				 ,coalesce(T21.brc_org_id,'-') brc_org_id   --个人分行编号
                 ,coalesce(T21.sbr_org_id,'-') sbr_org_id   --个人支行编号
				 ,coalesce(T21.grp_org_id,'-') grp_org_id
				 ,coalesce(T21.cpy_org_id,'-') cpy_org_id
                 ,t24.card_cnt          --新增信用卡户数            修改字段
FROM    (
            SELECT  DISTINCT cst_id
                             ,cst_nm
            FROM    edw.dim_bus_crd_cr_crd_inf_dd --信用卡卡片信息
            WHERE   dt = '20250331'
            AND     card_sts_cd = '' --卡片状态正常
            AND     TO_DATE(CONCAT('20', MTU_DAY, '01'), 'yyyyMMdd') >= TO_DATE(CONCAT('@@{yyyyMM}', '01'), 'yyyyMMdd')
            AND     isu_dt >= '20230701'
        ) T1
LEFT JOIN    edw.dim_cst_bas_inf_dd T2 --客户基本信息
ON      T1.cst_id = T2.cst_id
AND     T2.dt = '20250331'
LEFT JOIN    edw.dim_cst_idv_bas_inf_dd   T8   --个人客户基本信息
ON      T1.cst_id = T8.cst_id
and     T8.dt = '20250331'
LEFT JOIN    edw.dim_cst_entp_bas_inf_dd T9 --企业客户基本信息
ON      T8.job_unt_nm = T9.cst_nm
AND     T9.dt = '20250331'
--企业管户
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd T10 --客户主管户信息
ON      T9.cst_id = T10.cst_id
AND     T10.dt = '20250331'
LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd T11 --机构树
ON      T10.prm_org_id = T11.org_id
AND     T11.dt = '20250331'
--个人管户
LEFT JOIN    adm_pub.adm_csm_cbas_ind_inf_dd T15 --客户集市-基础信息-客户基础标识信息
ON      T1.cst_id = T15.cst_id
AND     T15.dt = '20250331'
LEFT JOIN    adm_pub.adm_csm_cbus_chm_inf_dd T16 --客户集市-业务信息-客户理财业务信息表
ON      T1.cst_id = T16.cst_id
AND     T16.dt = '20250331'
LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd T17 --客户集市-业务信息-客户存款业务信息表
ON      T1.cst_id = T17.cst_id
AND     T17.dt = '20250331'
LEFT JOIN    adm_pub.adm_csm_cbus_cst_val_der_ind_inf_dd T18 --客户集市-业务信息-客户价值信息-客户价值衍生指标信息
ON      T1.cst_id = T18.cst_id
AND     T18.dt = '20250330'
LEFT JOIN    adm_pub.adm_csm_cbas_mng_inf_dd T19 --客户集市-客户基础-客户管户信息
ON      T1.cst_id = T19.cst_id
AND     T19.dt = '20250331'
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd T20 --客户主管户信息
ON      T8.cst_id = T20.cst_id
AND     T20.dt = '20250331'
LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd T21 --机构树
ON      T20.prm_org_id = T21.org_id
AND     T21.dt = '20250331'
--LEFT JOIN    adm_pub.adm_csm_cbus_chm_inf_dd T24 --客户集市-业务信息-客户理财业务信息表
--ON      T1.cst_id = T24.cst_id
--AND     T24.dt = '20230630'
--LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd T25 --客户集市-业务信息-客户存款业务信息表
--ON      T1.cst_id = T25.cst_id
--AND     T25.dt = '20230630'
--LEFT JOIN    adm_pub.adm_csm_cbus_cst_fin_ast_inf_dd T26 --客户集市-业务信息-客户金融资产信息表
--ON      T1.cst_id = T26.cst_id
--AND     T26.dt = '20230630'
--LEFT JOIN    adm_pub.adm_csm_cbus_chm_inf_dd T24 --客户集市-业务信息-客户理财业务信息表
--ON      T1.cst_id = T24.cst_id
--AND     T24.dt = '20230630'
--LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd T25 --客户集市-业务信息-客户存款业务信息表
--ON      T1.cst_id = T25.cst_id
--AND     T25.dt = '20230630'
--LEFT JOIN    adm_pub.adm_csm_cbus_cst_fin_ast_inf_dd T26 --客户集市-业务信息-客户金融资产信息表
--ON      T1.cst_id = T26.cst_id
--AND     T26.dt = '20230630'
LEFT JOIN    (select   t1.cst_id
,t2.chm_bal    chm_bal_before    --消费贷合同之前理财余额
,T3.dep_bal    dep_bal_before    --消费贷合同之前存款余额
,T4.aum_bal    aum_bal_before    --消费贷合同之前aum余额
,count(distinct t5.cr_crd_card_nbr)    card_cnt  --消费贷合同之后开卡的客户数
from  (select cst_id
,min(APNT_START_DT)    min_APNT_START_DT
from  lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_new
where dt = '20250331'
group by cst_id )     t1
left  join   adm_pub.adm_csm_cbus_chm_inf_dd  T2    --客户集市-业务信息-客户理财业务信息表
ON      T1.cst_id = T2.cst_id
and   t2.dt >= '20230630'
and   t2.dt =  to_char(dateadd(to_date(t1.min_APNT_START_DT,'yyyymmdd'),-1,'dd'),'yyyymmdd')
LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd  T3 --客户集市-业务信息-客户存款业务信息表
ON      T1.cst_id = T3.cst_id
AND     T3.dt >= '20230630'
and     t3.dt =  to_char(dateadd(to_date(t1.min_APNT_START_DT,'yyyymmdd'),-1,'dd'),'yyyymmdd')
LEFT JOIN    adm_pub.adm_csm_cbus_cst_fin_ast_inf_dd T4 --客户集市-业务信息-客户金融资产信息表
ON      T1.cst_id = T4.cst_id
AND     T4.dt >= '20230630'
and     t4.dt =  to_char(dateadd(to_date(t1.min_APNT_START_DT,'yyyymmdd'),-1,'dd'),'yyyymmdd')
left  join    edw.dim_bus_crd_cr_crd_inf_dd    t5   --信用卡卡片信息
on      T1.cst_id = T5.cst_id
and     t5.dt = '20250331'
AND     t5.card_sts_cd = '' --卡片状态正常
AND     TO_DATE(CONCAT('20', t5.MTU_DAY, '01'), 'yyyyMMdd') >= TO_DATE(CONCAT('@@{yyyyMM}', '01'), 'yyyyMMdd')
AND     t5.isu_dt >= to_char(dateadd(to_date(t1.min_APNT_START_DT,'yyyymmdd'),-1,'dd'),'yyyymmdd')
group by  t1.cst_id
,t2.chm_bal
,T3.dep_bal
,T4.aum_bal  )   t24
on   T1.cst_id = T24.cst_id
LEFT JOIN    adm_pub.adm_csm_cbus_cst_fin_ast_inf_dd T27 --客户集市-业务信息-客户金融资产信息表
ON      T1.cst_id = T27.cst_id
AND     T27.dt = '20250331'
left join adm_pub.adm_csm_cbus_wlth_insu_bus_inf_dd   t28 --客户集市-业务信息-财富-保险-业务信息
on      t1.cst_id=t28.cst_id
and     t28.dt='20250331'
left join adm_pub.adm_csm_cbus_fnd_bal_inf_dd  t29    --客户集市-业务信息-财富-基金-业务信息
on       t1.cst_id=t29.cst_id
and      t29.dt='20250331'
left join adm_pub.adm_csm_cbus_wlth_nob_met_bus_inf_dd   t30  --客户集市-业务信息-财富-贵金属-业务信息
on       t1.cst_id=t30.cst_id
and      t30.dt='20250331'
WHERE   LENGTH(t8.job_unt_nm) > 3
AND     T1.cst_id <> ''
--AND     T8.own_emp_id = ''
--AND     T2.loan_cst_typ_cd = '04'
AND     T2.loan_cst_typ_cd in ( '04','08','09');


----- 企业团办新增消费贷款客户信息表

--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_cst_info_tmp_new purge;
--
--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_cst_info_tmp_new
--(
--    ent_cst_id               STRING  COMMENT '企业客户号'
--    ,ent_cst_nm              STRING  COMMENT '企业客户名'
--    ,prm_mgr_id_ent          STRING  COMMENT '企业主管户客户经理工号'
--    ,prm_mgr_nm_ent          STRING  COMMENT '企业主管户客户经理名称'
--    ,tem_org_id_ent          STRING  COMMENT '企业主管团队机构号'
--    ,tem_org_nm_ent          STRING  COMMENT '企业主管团队机构名称'
--    ,sbr_org_nm_ent          STRING  COMMENT '企业主管支行名称'
--    ,brc_org_nm_ent          STRING  COMMENT '企业主管分行名称'
--    ,cst_id                  STRING  COMMENT '个人客户号'
--    ,cst_nm                  STRING  COMMENT '个人客户名'
--    ,prm_mgr_id              STRING  COMMENT '主管户客户经理工号'
--    ,prm_mgr_nm              STRING  COMMENT '主管户客户经理名称'
--    ,tem_org_id              STRING  COMMENT '团队机构号'
--    ,tem_org_nm              STRING  COMMENT '团队机构名称'
--    ,sbr_org_nm              STRING  COMMENT '支行名称'
--    ,brc_org_nm              STRING  COMMENT '分行名称'
--    ,efe_cst_ind             STRING  COMMENT '有效户标识'
--    ,efe_crd_cst_ind         STRING  COMMENT '有效信用卡户'
--    ,efe_dep_cst_ind         STRING  COMMENT '有效存款户'
--    ,efe_chm_cst_ind         STRING  COMMENT '有效理财户'
--    ,efe_insu_cst_ind        STRING  COMMENT '有效保险户'
--    ,efe_fnd_cst_ind         STRING  COMMENT '有效基金户'
--    ,efe_nob_met_cst_ind     STRING  COMMENT '有效贵金属户'
--    ,chm_bal                 DECIMAL COMMENT '理财余额'
--	,chm_mon_avg             DECIMAL COMMENT '理财月日均'                    --新增
--    ,dep_bal                 DECIMAL COMMENT '存款余额'
--	,dep_bal_mon_avg         DECIMAL COMMENT '存款余额月日均'
--	,insu_frs_bus_amt        DECIMAL COMMENT '保险首单保费金额'
--	,avg_ncr_fnd_amt_cur_mon DECIMAL COMMENT '非货币公募基金金额当月日均保有量'
--	,nob_met_bal_1y          DECIMAL COMMENT '近一年贵金属余额'
--    ,aum_bal                 DECIMAL COMMENT 'aum余额' --20231123
--    ,chm_bal0630             DECIMAL COMMENT '理财余额230630'
--    ,dep_bal0630             DECIMAL COMMENT '存款余额230630'
--    ,aum_bal0630             DECIMAL COMMENT 'aum余额230630' --20231123
--    ,cprh_contri_cur_year    DECIMAL COMMENT '当年客户价值'
--    ,cst_val_grd             STRING  COMMENT '客户价值等级'
--    ,forml_cst_ind           STRING  COMMENT '正式客户标识'
--    ,brc_org_id               STRING  COMMENT '分行层级机构编号'
--    ,sbr_org_id               STRING  COMMENT '支行层级机构编号'
--)
--COMMENT
--'企业团办新增消费贷款客户信息表'
--PARTITIONED BY
--(
--    DT STRING COMMENT '日期分区'
--);

-----新增表字段
-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_cst_info_tmp_new add  columns
--(grp_org_id               STRING  COMMENT '集团机构编号'
--,cpy_org_id               STRING  COMMENT '法人机构编号'
--);

-----新增表字段
-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_cst_info_tmp_new add  columns
--(card_cnt               BIGINT  COMMENT '新增信用卡户数'
--);

INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_cst_info_tmp_new   PARTITION (DT = '20250331')

SELECT  DISTINCT coalesce(T9.cst_id,'-') ent_cst_id --企业客户号
                 ,coalesce(T8.job_unt_nm,'-') ent_cst_nm --企业客户名称
                 ,coalesce(T10.prm_mgr_id,'-') prm_mgr_id_ent --企业主管户客户经理工号
                 ,coalesce(T10.prm_mgr_nm,'-') prm_mgr_nm_ent --企业主管户客户经理名称
                 ,coalesce(T11.tem_org_id,'-') tem_org_id_ent --企业团队机构号
                 ,coalesce(T11.tem_org_nm,'-') tem_org_nm_ent --企业团队名称
                 ,coalesce(T11.sbr_org_nm,'-') sbr_org_nm_ent --企业支行名称
                 ,coalesce(T11.brc_org_nm,'-') brc_org_nm_ent --企业分行名称
                 ,coalesce(T1.cst_id,'-') cst_id --客户号
                 ,coalesce(T1.cst_nm,'-') cst_nm --客户名称
                 ,coalesce(T20.prm_mgr_id,'-') prm_mgr_id --个人主管户客户经理工号
                 ,coalesce(T20.prm_mgr_nm,'-') prm_mgr_nm --个人主管户客户经理名称
                 ,coalesce(T21.tem_org_id,'-') tem_org_id --个人团队机构号
                 ,coalesce(T21.tem_org_nm,'-') tem_org_nm --个人团队名称
                 ,coalesce(T21.sbr_org_nm,'-') sbr_org_nm --个人支行名称
                 ,coalesce(T21.brc_org_nm,'-') brc_org_nm --个人分行名称
                 ,decode(T15.efe_cst_ind,'1',1,'',0) efe_cst_ind --有效户标识
                 ,CASE
                    WHEN T23.cst_id is not null THEN '1'
                    ELSE '0'
                  END efe_crd_cst_ind --有效信用卡户
                 ,decode(T15.efe_dep_cst_ind, '1', 1, '', 0) efe_dep_cst_ind --有效存款户
                 ,decode(T15.efe_chm_cst_ind, '1', 1, '', 0) efe_chm_cst_ind --有效理财户
                 ,decode(T15.efe_insu_cst_ind, '1', 1, '', 0) efe_insu_cst_ind --有效保险户
                 ,decode(T15.efe_fnd_cst_ind, '1', 1, '', 0) efe_fnd_cst_ind --有效基金户
                 ,decode(T15.efe_nob_met_cst_ind, '1', 1, '', 0) efe_nob_met_cst_ind --有效贵金属户
                 ,T16.chm_bal --理财余额
				 ,T16.chm_mon_avg  --理财月日均                                         --新增字段
                 ,T17.dep_bal --存款余额
				 ,t17.dep_bal_mon_avg  --存款余额月日均                                 --新增字段
				 ,t28.insu_frs_bus_amt  --保险首单保费金额                              --新增字段
				 ,t29.avg_ncr_fnd_amt_cur_mon   --非货币公募基金金额当月日均保有量      --新增字段
                 ,t30.nob_met_bal_1y    --近一年贵金属余额                              --新增字段
                 ,T27.aum_bal --aum余额
                 ---,T24.chm_bal chm_bal0630 --理财余额230630
                 ---,T25.dep_bal dep_bal0630 --存款余额230630
                 ---,T26.aum_bal aum_bal0630 --aum余额230630
				 ,T24.chm_bal_before    --消费贷合同之前理财余额    修改字段
                 ,T24.dep_bal_before    --消费贷合同之前存款余额    修改字段
                 ,T24.aum_bal_before    --消费贷合同之前aum余额     修改字段
                 ,T18.cprh_contri_cur_year --当年客户价值 年累计FTP
                 ,T18.cst_val_grd --客户价值等级
                 ,T19.forml_cst_ind --正式客户标识
				 ,coalesce(T21.brc_org_id,'-') brc_org_id   --个人分行编号
                 ,coalesce(T21.sbr_org_id,'-') sbr_org_id   --个人支行编号
				 ,coalesce(T21.grp_org_id,'-') grp_org_id
				 ,coalesce(T21.cpy_org_id,'-') cpy_org_id
				 ,t24.card_cnt          --新增信用卡户数            修改字段
FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD T1 --合同基础信息
LEFT JOIN    edw.dim_cst_bas_inf_dd T2 --客户基本信息
ON      T1.cst_id = T2.cst_id
AND     T2.dt = '20250331'
LEFT JOIN    EDW.DWD_BUS_LOAN_FNC_CRD_LMT_INF_DD T7 ----随贷通授信额度信息
ON      T7.BUS_CTR_ID = T1.CTR_SERNO
AND     T7.LOAN_USG_CD = '2' --随贷通消费性贷款
AND     T7.DT = '20250331'
LEFT JOIN    edw.dim_cst_idv_bas_inf_dd   T8   --个人客户基本信息
ON      T1.cst_id = T8.cst_id
and     T8.dt = '20250331'
LEFT JOIN    edw.dim_cst_entp_bas_inf_dd T9 --企业客户基本信息
ON      T8.job_unt_nm = T9.cst_nm
AND     T9.dt = '20250331'
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd T10 --客户主管户信息
ON      T9.cst_id = T10.cst_id
AND     T10.dt = '20250331'
LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd T11 --机构树
ON      T10.prm_org_id = T11.org_id
AND     T11.dt = '20250331'
LEFT JOIN    adm_pub.adm_csm_cbas_ind_inf_dd T15 --客户集市-基础信息-客户基础标识信息
ON      T1.cst_id = T15.cst_id
AND     T15.dt = '20250331'
LEFT JOIN    adm_pub.adm_csm_cbus_chm_inf_dd T16 --客户集市-业务信息-客户理财业务信息表
ON      T1.cst_id = T16.cst_id
AND     T16.dt = '20250331'
LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd T17 --客户集市-业务信息-客户存款业务信息表
ON      T1.cst_id = T17.cst_id
AND     T17.dt = '20250331'
LEFT JOIN    adm_pub.adm_csm_cbus_cst_val_der_ind_inf_dd T18 --客户集市-业务信息-客户价值信息-客户价值衍生指标信息
ON      T1.cst_id = T18.cst_id
AND     T18.dt = '20250330'
LEFT JOIN    adm_pub.adm_csm_cbas_mng_inf_dd T19 --客户集市-客户基础-客户管户信息
ON      T1.cst_id = T19.cst_id
AND     T19.dt = '20250331'
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd T20 --客户主管户信息
ON      T1.cst_id = T20.cst_id
AND     T20.dt = '20250331'
LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd T21 --机构树
ON      T20.prm_org_id = T21.org_id
AND     T21.dt = '20250331'
LEFT JOIN    (
                 SELECT  A1.CTR_SERNO
                 FROM    EDW.DIM_BUS_LOAN_CTR_BSE_INF_DD A1 -- 合同基础信息
                 INNER JOIN    EDW.DWD_BUS_LOAN_PRPS_REL_DD A2 --方案关联
                 ON      A1.CTR_SERNO = A2.REL_ID
                 AND     A2.DT = '20250331'
                 INNER JOIN    EDW.DWD_BUS_LOAN_ZXT_LOAN_PRPS_APL_DD A3 --助兴通贷款方案申请
                 ON      A2.PRPS_ID = A3.PRPS_ID -- 找到重组的方案号
                 AND     A3.DT = '20250331'
                 WHERE   A1.DT = '20250331'
                 GROUP BY A1.CTR_SERNO
             )   T22   --助兴通合同
ON      T1.CTR_SERNO = T22.CTR_SERNO
LEFT JOIN    (
                 SELECT  DISTINCT cst_id
                 FROM    edw.dim_bus_crd_cr_crd_inf_dd --信用卡卡片信息
                 WHERE   dt = '20250331'
                 AND     card_sts_cd = '' --卡片状态正常
                 AND     TO_DATE(CONCAT('20', MTU_DAY, '01'), 'yyyyMMdd') >= TO_DATE(CONCAT('@@{yyyyMM}', '01'), 'yyyyMMdd') --未到期
             ) T23
ON      T1.cst_id = T23.cst_id
--LEFT JOIN    adm_pub.adm_csm_cbus_chm_inf_dd T24 --客户集市-业务信息-客户理财业务信息表
--ON      T1.cst_id = T24.cst_id
--AND     T24.dt = '20230630'
--LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd T25 --客户集市-业务信息-客户存款业务信息表
--ON      T1.cst_id = T25.cst_id
--AND     T25.dt = '20230630'
--LEFT JOIN    adm_pub.adm_csm_cbus_cst_fin_ast_inf_dd T26 --客户集市-业务信息-客户金融资产信息表
--ON      T1.cst_id = T26.cst_id
--AND     T26.dt = '20230630'
LEFT JOIN    (select   t1.cst_id
,t2.chm_bal    chm_bal_before    --消费贷合同之前理财余额
,T3.dep_bal    dep_bal_before    --消费贷合同之前存款余额
,T4.aum_bal    aum_bal_before    --消费贷合同之前aum余额
,count(distinct t5.cr_crd_card_nbr)    card_cnt  --消费贷合同之后开卡的客户数
from  (select cst_id
,min(APNT_START_DT)    min_APNT_START_DT
from  lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_new
where dt = '20250331'
group by cst_id )     t1
left  join   adm_pub.adm_csm_cbus_chm_inf_dd  T2    --客户集市-业务信息-客户理财业务信息表
ON      T1.cst_id = T2.cst_id
and   t2.dt >= '20230630'
and   t2.dt =  to_char(dateadd(to_date(t1.min_APNT_START_DT,'yyyymmdd'),-1,'dd'),'yyyymmdd')
LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd  T3 --客户集市-业务信息-客户存款业务信息表
ON      T1.cst_id = T3.cst_id
AND     T3.dt >= '20230630'
and     t3.dt =  to_char(dateadd(to_date(t1.min_APNT_START_DT,'yyyymmdd'),-1,'dd'),'yyyymmdd')
LEFT JOIN    adm_pub.adm_csm_cbus_cst_fin_ast_inf_dd T4 --客户集市-业务信息-客户金融资产信息表
ON      T1.cst_id = T4.cst_id
AND     T4.dt >= '20230630'
and     t4.dt =  to_char(dateadd(to_date(t1.min_APNT_START_DT,'yyyymmdd'),-1,'dd'),'yyyymmdd')
left  join    edw.dim_bus_crd_cr_crd_inf_dd    t5   --信用卡卡片信息
on      T1.cst_id = T5.cst_id
and     t5.dt = '20250331'
AND     t5.card_sts_cd = '' --卡片状态正常
AND     TO_DATE(CONCAT('20', t5.MTU_DAY, '01'), 'yyyyMMdd') >= TO_DATE(CONCAT('@@{yyyyMM}', '01'), 'yyyyMMdd')
AND     t5.isu_dt >= to_char(dateadd(to_date(t1.min_APNT_START_DT,'yyyymmdd'),-1,'dd'),'yyyymmdd')
group by  t1.cst_id
,t2.chm_bal
,T3.dep_bal
,T4.aum_bal  )   t24
on   T1.cst_id = T24.cst_id
LEFT JOIN    adm_pub.adm_csm_cbus_cst_fin_ast_inf_dd T27 --客户集市-业务信息-客户金融资产信息表
ON      T1.cst_id = T27.cst_id
AND     T27.dt = '20250331'
left join adm_pub.adm_csm_cbus_wlth_insu_bus_inf_dd   t28 --客户集市-业务信息-财富-保险-业务信息
on      t1.cst_id=t28.cst_id
and     t28.dt='20250331'
left join adm_pub.adm_csm_cbus_fnd_bal_inf_dd  t29    --客户集市-业务信息-财富-基金-业务信息
on       t1.cst_id=t29.cst_id
and      t29.dt='20250331'
left join adm_pub.adm_csm_cbus_wlth_nob_met_bus_inf_dd   t30  --客户集市-业务信息-财富-贵金属-业务信息
on       t1.cst_id=t30.cst_id
and      t30.dt='20250331'
WHERE   T1.dt = '20250331'
AND     ( ( T1.PRD_NO like '200101%'   --个人消费性贷款
and     T1.PRD_NO <> '2001010101003'   --剔除 随贷通（消费）
AND     T1.TMT_DT = '18991231'
AND     T1.CTR_MTU_DT > '20250331' )
    OR ( T1.PRD_NO = '2001010101003'    --随贷通（消费）
--AND     T1.CPT_USG_CD LIKE '02%'  --贷款用途
AND     T7.lmt_sts_cd IN ( '0' , '3' , '4' ) ) ) --个人消费性贷款未到期未终结；随贷通-消费 额度状态已激活
AND     T2.LOAN_CST_TYP_CD in ( '04','08','09')   --工薪族
AND     T1.CTR_BGN_DT >= '20230701' --活动期间
AND     T1.BSN_MARK_CD NOT IN ( '01' )  --剔除员工贷款
AND     ( T1.BSN_MARK_CD <> '04'
AND     T22.CTR_SERNO IS NULL ) --剔除重组贷款
AND     LENGTH(t8.job_unt_nm) > 3
AND     T1.CTR_STS_CD not in ( '1','3','5')  --剔除1：未生效，3	终止，5	作废
--AND     t8.OWN_EMP_ID = ''   --剔除本行员工号
;


----2024年
--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_2024_new purge;
--
--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_2024_new
--(
--    ent_cst_id              STRING  COMMENT '企业客户号'
--    ,ent_cst_nm             STRING  COMMENT '企业客户名'
--    ,prm_mgr_id             STRING  COMMENT '主管户客户经理工号'
--    ,prm_mgr_nm             STRING  COMMENT '主管户客户经理名称'
--    ,tem_org_id             STRING  COMMENT '团队机构号'
--    ,tem_org_nm             STRING  COMMENT '团队机构名称'
--    ,sbr_org_nm             STRING  COMMENT '支行名称'
--    ,brc_org_nm             STRING  COMMENT '分行名称'
--    ,cst_id                 STRING  COMMENT '个人客户号'
--    ,busi_ctr_id            STRING  COMMENT '合同号'
--    ,pd_cd                  STRING  COMMENT '产品代码'
--    ,pd_nm                  STRING  COMMENT '产品名称'
--    ,ctr_amt                DECIMAL COMMENT '合同金额'
--    ,ctr_bal                DECIMAL COMMENT '合同余额'
--    ,CCY_CD                 STRING  COMMENT '币种代码'
--    ,apnt_start_dt          STRING  COMMENT '约定开始日期'
--    ,apnt_mtu_dt            STRING  COMMENT '约定到期日期'
--    ,actl_start_use_crd_lmt DECIMAL COMMENT '启用额度'
--    --,hpn_dt                 STRING  COMMENT '发生日期'
--    ,end_dt                 STRING  COMMENT '终结日期'
--    ,count_dbil_id          DECIMAL COMMENT '累计发放借据数'
--    ,sum_amt                DECIMAL COMMENT '累计发放金额'
--    ,mon_acm_prcp_bal_acml  DECIMAL COMMENT '本月本金余额月日均'
--    ,intr_rat               DECIMAL COMMENT '合同利率'
--    ,duration               DECIMAL COMMENT '期限'
--    ,if_shoubi              DECIMAL COMMENT '是否首笔'
--    ,dbil_fenzi             DECIMAL COMMENT '用信金额加权利率分子'
--    ,dbil_fenmu             DECIMAL COMMENT '用信金额加权利率分母'
--)
--COMMENT
--'企业团办新增消费性贷款合同信息表_2024'
--PARTITIONED BY
--(
--    DT STRING COMMENT '日期分区'
--);


INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_2024_new PARTITION (DT = '20250331')
SELECT  coalesce(T9.cst_id, '-') ent_cst_id --企业客户号
        ,coalesce(T8.job_unt_nm, '-') ent_cst_nm --企业客户名
        ,coalesce(T10.prm_mgr_id, '-') prm_mgr_id --主管户客户经理工号
        ,coalesce(T10.prm_mgr_nm, '-') prm_mgr_nm --主管户客户经理名称
        ,coalesce(T11.tem_org_id, '-') tem_org_id --团队机构号
        ,coalesce(T11.tem_org_nm, '-') tem_org_nm --团队名称
        ,coalesce(T11.sbr_org_nm, '-') sbr_org_nm --支行名称
        ,coalesce(T11.brc_org_nm, '-') brc_org_nm --分行名称
        ,T1.cst_id --客户号
        ,t1.CTR_SERNO --合同号
        ,T1.PRD_NO --产品代码
        ,T17.PD_NM --产品名称
        ,T1.ctr_amt --合同金额
        ,T1.ctr_bal --合同余额
        ,T1.BSN_CCY_CD --币种代码
        ,T1.CTR_BGN_DT --约定开始日期
        ,T1.CTR_MTU_DT --约定到期日期
		 --,COALESCE(T7.BIND_LMT,T13.SEG_LMT,T1.ctr_amt,0) * T18.AVG_PRC / T18.QUO_UNT AS CYC_REALSUM -- 实际启用金额折人民币  新信贷改造删除T9.RESERVESUM
		,CASE
          WHEN T7.BUS_CTR_ID IS NOT NULL                                        THEN T7.BIND_LMT
           WHEN T1.RVLG_TYP_CD <> '1' THEN T1.CTR_AMT    --非循环贷款，取合同金额
           ELSE T1.STRT_USE_AMT     --启用金额
         END   as   ACTL_START_USE_CRD_LMT --启用额度
        ,T1.TMT_DT --合同终结日期
        ,COALESCE(T14.COUNT_DBIL_ID, 0) COUNT_DBIL_ID --累计发放借据数
        ,COALESCE(T14.SUM_AMT, 0) SUM_AMT --累计发放金额
        ,COALESCE(T14.mon_acm_prcp_bal_acml, 0) mon_acm_prcp_bal_acml --本月本金余额月日均
        ,T1.EXEC_INTR_RAT --合同利率
        ,CASE
           WHEN T1.TMT_DT = '18991231' THEN DATEDIFF(TO_DATE(T1.CTR_MTU_DT, 'yyyyMMdd'), TO_DATE(T1.CTR_BGN_DT, 'yyyyMMdd'), 'dd') + 1
           ELSE DATEDIFF(TO_DATE(T1.TMT_DT, 'yyyyMMdd'), TO_DATE(T1.CTR_BGN_DT, 'yyyyMMdd'), 'dd') + 1
         END AS duration --期限
        ,CASE
           WHEN T1.HPN_TYP_CD = '010' THEN 1
           ELSE 0
         END if_shoubi  --是否首笔
        ,T14.dbil_fenzi
        ,T14.dbil_fenmu
FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD T1 --合同基础信息
LEFT JOIN    edw.dim_cst_bas_inf_dd T2 --客户基本信息
ON      T1.cst_id = T2.cst_id
AND     T2.dt = '20250331'
LEFT JOIN    EDW.DWD_BUS_LOAN_FNC_CRD_LMT_INF_DD T7 ----随贷通授信额度信息
ON      T7.BUS_CTR_ID = t1.CTR_SERNO
AND     T7.LOAN_USG_CD = '2' --随贷通消费性贷款
AND     T7.DT = '20250331'
LEFT JOIN    edw.dim_cst_idv_bas_inf_dd   T8   --个人客户基本信息
ON      T1.cst_id = T8.cst_id
and     T8.dt = '20250331'
LEFT JOIN    edw.dim_cst_entp_bas_inf_dd T9 --企业客户基本信息
ON      T8.job_unt_nm = T9.cst_nm
AND     T9.dt = '20250331'
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd T10 --客户主管户信息
ON      T9.cst_id = T10.cst_id
AND     T10.dt = '20250331'
LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd T11 --机构树
ON      T10.prm_org_id = T11.org_id
AND     T11.dt = '20250331'
LEFT JOIN    (
                 SELECT  BUS_CTR_ID
                         ,COUNT(DBIL_ID) COUNT_DBIL_ID
                         ,SUM(AMT) SUM_AMT
                         ,SUM(mon_acm_prcp_bal_acml) / 31 AS mon_acm_prcp_bal_acml
                         ,SUM(AMT * exe_intr_rat * CASE
                                                     WHEN end_dt = '18991231' THEN DATEDIFF(TO_DATE(apnt_mtu_day, 'yyyyMMdd'), TO_DATE(dtrb_dt, 'yyyyMMdd'), 'dd') + 1
                                                     ELSE DATEDIFF(TO_DATE(end_dt, 'yyyyMMdd'), TO_DATE(dtrb_dt, 'yyyyMMdd'), 'dd') + 1
                                                   END)         AS dbil_fenzi
                         ,SUM(AMT * CASE
                                      WHEN end_dt = '18991231' THEN DATEDIFF(TO_DATE(apnt_mtu_day, 'yyyyMMdd'), TO_DATE(dtrb_dt, 'yyyyMMdd'), 'dd') + 1
                                      ELSE DATEDIFF(TO_DATE(end_dt, 'yyyyMMdd'), TO_DATE(dtrb_dt, 'yyyyMMdd'), 'dd') + 1
                                    END)                        AS dbil_fenmu
                 FROM    EDW.dws_bus_loan_dbil_inf_dd --贷款借据信息汇总
                 WHERE   DT = '20250331'
                 GROUP BY BUS_CTR_ID
             ) T14
ON      t1.CTR_SERNO = T14.BUS_CTR_ID
LEFT JOIN    (
                 SELECT  A1.CTR_SERNO
                 FROM    EDW.DIM_BUS_LOAN_CTR_BSE_INF_DD A1 -- 合同基础信息
                 INNER JOIN    EDW.DWD_BUS_LOAN_PRPS_REL_DD A2 --方案关联
                 ON      A1.CTR_SERNO = A2.REL_ID
                 AND     A2.DT = '20250331'
                 INNER JOIN    EDW.DWD_BUS_LOAN_ZXT_LOAN_PRPS_APL_DD A3 --助兴通贷款方案申请
                 ON      A2.PRPS_ID = A3.PRPS_ID -- 找到重组的方案号
                 AND     A3.DT = '20250331'
                 WHERE   A1.DT = '20250331'
                 GROUP BY A1.CTR_SERNO
             ) T16 --助兴通合同
ON      t1.CTR_SERNO = T16.CTR_SERNO
LEFT JOIN    edw.DIM_BUS_LOAN_PRD_FRML_DD T17 --信贷产品信息
ON      T1.PRD_NO = T17.PRD_NO
AND     T17.dt = '20250331'
WHERE   T1.dt = '20250331'
AND     ( ( T1.PRD_NO like '200101%'   --个人消费性贷款
and     T1.PRD_NO <> '2001010101003'   --剔除 随贷通（消费）
AND     T1.TMT_DT = '18991231'
AND     T1.CTR_MTU_DT > '20250331' )
    OR ( T1.PRD_NO = '2001010101003'    --随贷通（消费）
--AND     T1.CPT_USG_CD LIKE '02%'  --贷款用途
AND     T7.lmt_sts_cd IN ( '0' , '3' , '4' ) ) ) --个人消费性贷款未到期未终结；随贷通-消费 额度状态已激活   0:正常,3:未激活,4:止付
AND    T2.LOAN_CST_TYP_CD in ( '04','08','09')   --工薪族
AND     T1.CTR_BGN_DT >= '20240101'   --活动期间
AND     T1.BSN_MARK_CD NOT IN ( '01' ) --剔除员工贷款
AND     ( T1.BSN_MARK_CD <> '04'    --04:重组业务
AND     T16.CTR_SERNO IS NULL ) --剔除重组贷款
AND     LENGTH(t8.job_unt_nm) > 3
AND     T1.CTR_STS_CD not in ( '1','3','5');  --剔除1：未生效，3	终止，5	作废


----- 2024年新增的消费贷款客户信息表

--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_cst_info_tmp_2024_new purge;
--
--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_cst_info_tmp_2024_new
--(
--    ent_cst_id               STRING  COMMENT '企业客户号'
--    ,ent_cst_nm              STRING  COMMENT '企业客户名'
--    ,prm_mgr_id_ent          STRING  COMMENT '企业主管户客户经理工号'
--    ,prm_mgr_nm_ent          STRING  COMMENT '企业主管户客户经理名称'
--    ,tem_org_id_ent          STRING  COMMENT '企业主管团队机构号'
--    ,tem_org_nm_ent          STRING  COMMENT '企业主管团队机构名称'
--    ,sbr_org_nm_ent          STRING  COMMENT '企业主管支行名称'
--    ,brc_org_nm_ent          STRING  COMMENT '企业主管分行名称'
--    ,cst_id                  STRING  COMMENT '个人客户号'
--    ,cst_nm                  STRING  COMMENT '个人客户名'
--    ,prm_mgr_id              STRING  COMMENT '主管户客户经理工号'
--    ,prm_mgr_nm              STRING  COMMENT '主管户客户经理名称'
--    ,tem_org_id              STRING  COMMENT '团队机构号'
--    ,tem_org_nm              STRING  COMMENT '团队机构名称'
--    ,sbr_org_nm              STRING  COMMENT '支行名称'
--    ,brc_org_nm              STRING  COMMENT '分行名称'
--    ,efe_cst_ind             STRING  COMMENT '有效户标识'
--    ,efe_crd_cst_ind         STRING  COMMENT '有效信用卡户'
--    ,efe_dep_cst_ind         STRING  COMMENT '有效存款户'
--    ,efe_chm_cst_ind         STRING  COMMENT '有效理财户'
--    ,efe_insu_cst_ind        STRING  COMMENT '有效保险户'
--    ,efe_fnd_cst_ind         STRING  COMMENT '有效基金户'
--    ,efe_nob_met_cst_ind     STRING  COMMENT '有效贵金属户'
--    ,chm_bal                 DECIMAL COMMENT '理财余额'
--    ,dep_bal                 DECIMAL COMMENT '存款余额'
--    ,aum_bal                 DECIMAL COMMENT 'aum余额' --20231123
--    ,chm_bal0630             DECIMAL COMMENT '理财余额230630'
--    ,dep_bal0630             DECIMAL COMMENT '存款余额230630'
--    ,aum_bal0630             DECIMAL COMMENT 'aum余额230630' --20231123
--    ,cprh_contri_cur_year    DECIMAL COMMENT '当年客户价值'
--    ,cst_val_grd             STRING  COMMENT '客户价值等级'
--    ,forml_cst_ind           STRING  COMMENT '正式客户标识'
--    ,brc_org_id               STRING  COMMENT '分行层级机构编号'
--    ,sbr_org_id               STRING  COMMENT '支行层级机构编号'
--)
--COMMENT
--'企业团办新增消费贷款客户信息表_2024'
--PARTITIONED BY
--(
--    DT STRING COMMENT '日期分区'
--);

-----新增表字段
-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_cst_info_tmp_2024_new add  columns
--(grp_org_id               STRING  COMMENT '集团机构编号'
--,cpy_org_id               STRING  COMMENT '法人机构编号'
--);



INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_cst_info_tmp_2024_new   PARTITION (DT = '20250331')

SELECT  DISTINCT coalesce(T9.cst_id,'-') ent_cst_id --企业客户号
                 ,coalesce(T8.job_unt_nm,'-') ent_cst_nm --企业客户名称
                 ,coalesce(T10.prm_mgr_id,'-') prm_mgr_id_ent --企业主管户客户经理工号
                 ,coalesce(T10.prm_mgr_nm,'-') prm_mgr_nm_ent --企业主管户客户经理名称
                 ,coalesce(T11.tem_org_id,'-') tem_org_id_ent --企业团队机构号
                 ,coalesce(T11.tem_org_nm,'-') tem_org_nm_ent --企业团队名称
                 ,coalesce(T11.sbr_org_nm,'-') sbr_org_nm_ent --企业支行名称
                 ,coalesce(T11.brc_org_nm,'-') brc_org_nm_ent --企业分行名称
                 ,coalesce(T1.cst_id,'-') cst_id --客户号
                 ,coalesce(T1.cst_nm,'-') cst_nm --客户名称
                 ,coalesce(T20.prm_mgr_id,'-') prm_mgr_id --个人主管户客户经理工号
                 ,coalesce(T20.prm_mgr_nm,'-') prm_mgr_nm --个人主管户客户经理名称
                 ,coalesce(T21.tem_org_id,'-') tem_org_id --个人团队机构号
                 ,coalesce(T21.tem_org_nm,'-') tem_org_nm --个人团队名称
                 ,coalesce(T21.sbr_org_nm,'-') sbr_org_nm --个人支行名称
                 ,coalesce(T21.brc_org_nm,'-') brc_org_nm --个人分行名称
                 ,decode(T15.efe_cst_ind,'1',1,'',0) efe_cst_ind --有效户标识
                 ,CASE
                    WHEN T23.cst_id is not null THEN '1'
                    ELSE '0'
                  END efe_crd_cst_ind --有效信用卡户
                 ,decode(T15.efe_dep_cst_ind, '1', 1, '', 0) efe_dep_cst_ind --有效存款户
                 ,decode(T15.efe_chm_cst_ind, '1', 1, '', 0) efe_chm_cst_ind --有效理财户
                 ,decode(T15.efe_insu_cst_ind, '1', 1, '', 0) efe_insu_cst_ind --有效保险户
                 ,decode(T15.efe_fnd_cst_ind, '1', 1, '', 0) efe_fnd_cst_ind --有效基金户
                 ,decode(T15.efe_nob_met_cst_ind, '1', 1, '', 0) efe_nob_met_cst_ind --有效贵金属户
                 ,T16.chm_bal --理财余额
                 ,T17.dep_bal --存款余额
                 ,T27.aum_bal --aum余额
                 --,T24.chm_bal chm_bal0630 --理财余额230630
                 --,T25.dep_bal dep_bal0630 --存款余额230630
                 --,T26.aum_bal aum_bal0630 --aum余额230630
				 ,T24.chm_bal_before    --消费贷合同之前理财余额    修改字段
                 ,T24.dep_bal_before    --消费贷合同之前存款余额    修改字段
                 ,T24.aum_bal_before    --消费贷合同之前aum余额     修改字段
                 ,T18.cprh_contri_cur_year --当年客户价值 年累计FTP
                 ,T18.cst_val_grd --客户价值等级
                 ,T19.forml_cst_ind --正式客户标识
				 ,coalesce(T21.brc_org_id,'-') brc_org_id   --个人分行编号
                 ,coalesce(T21.sbr_org_id,'-') sbr_org_id   --个人支行编号
				 ,coalesce(T21.grp_org_id,'-') grp_org_id
				 ,coalesce(T21.cpy_org_id,'-') cpy_org_id
				 --,t24.card_cnt          --新增信用卡户数            修改字段
FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD T1 --合同基础信息
LEFT JOIN    edw.dim_cst_bas_inf_dd T2 --客户基本信息
ON      T1.cst_id = T2.cst_id
AND     T2.dt = '20250331'
LEFT JOIN    EDW.DWD_BUS_LOAN_FNC_CRD_LMT_INF_DD T7 ----随贷通授信额度信息
ON      T7.BUS_CTR_ID = T1.CTR_SERNO
AND     T7.LOAN_USG_CD = '2' --随贷通消费性贷款
AND     T7.DT = '20250331'
LEFT JOIN    edw.dim_cst_idv_bas_inf_dd   T8   --个人客户基本信息
ON      T1.cst_id = T8.cst_id
and     T8.dt = '20250331'
LEFT JOIN    edw.dim_cst_entp_bas_inf_dd T9 --企业客户基本信息
ON      T8.job_unt_nm = T9.cst_nm
AND     T9.dt = '20250331'
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd T10 --客户主管户信息
ON      T9.cst_id = T10.cst_id
AND     T10.dt = '20250331'
LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd T11 --机构树
ON      T10.prm_org_id = T11.org_id
AND     T11.dt = '20250331'
LEFT JOIN    adm_pub.adm_csm_cbas_ind_inf_dd T15 --客户集市-基础信息-客户基础标识信息
ON      T1.cst_id = T15.cst_id
AND     T15.dt = '20250331'
LEFT JOIN    adm_pub.adm_csm_cbus_chm_inf_dd T16 --客户集市-业务信息-客户理财业务信息表
ON      T1.cst_id = T16.cst_id
AND     T16.dt = '20250331'
LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd T17 --客户集市-业务信息-客户存款业务信息表
ON      T1.cst_id = T17.cst_id
AND     T17.dt = '20250331'
LEFT JOIN    adm_pub.adm_csm_cbus_cst_val_der_ind_inf_dd T18 --客户集市-业务信息-客户价值信息-客户价值衍生指标信息
ON      T1.cst_id = T18.cst_id
AND     T18.dt = '20250330'
LEFT JOIN    adm_pub.adm_csm_cbas_mng_inf_dd T19 --客户集市-客户基础-客户管户信息
ON      T1.cst_id = T19.cst_id
AND     T19.dt = '20250331'
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd T20 --客户主管户信息
ON      T1.cst_id = T20.cst_id
AND     T20.dt = '20250331'
LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd T21 --机构树
ON      T20.prm_org_id = T21.org_id
AND     T21.dt = '20250331'
LEFT JOIN    (
                 SELECT  A1.CTR_SERNO
                 FROM    EDW.DIM_BUS_LOAN_CTR_BSE_INF_DD A1 -- 合同基础信息
                 INNER JOIN    EDW.DWD_BUS_LOAN_PRPS_REL_DD A2 --方案关联
                 ON      A1.CTR_SERNO = A2.REL_ID
                 AND     A2.DT = '20250331'
                 INNER JOIN    EDW.DWD_BUS_LOAN_ZXT_LOAN_PRPS_APL_DD A3 --助兴通贷款方案申请
                 ON      A2.PRPS_ID = A3.PRPS_ID -- 找到重组的方案号
                 AND     A3.DT = '20250331'
                 WHERE   A1.DT = '20250331'
                 GROUP BY A1.CTR_SERNO
             ) T22 --助兴通合同
ON      T1.CTR_SERNO = T22.CTR_SERNO
LEFT JOIN    (
                 SELECT  DISTINCT cst_id
                 FROM    edw.dim_bus_crd_cr_crd_inf_dd --信用卡卡片信息
                 WHERE   dt = '20250331'
                 AND     card_sts_cd = '' --卡片状态正常
                 AND     TO_DATE(CONCAT('20', MTU_DAY, '01'), 'yyyyMMdd') >= TO_DATE(CONCAT('@@{yyyyMM}', '01'), 'yyyyMMdd') --未到期
             ) T23
ON      T1.cst_id = T23.cst_id
--LEFT JOIN    adm_pub.adm_csm_cbus_chm_inf_dd T24 --客户集市-业务信息-客户理财业务信息表
--ON      T1.cst_id = T24.cst_id
--AND     T24.dt = '20230630'
--LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd T25 --客户集市-业务信息-客户存款业务信息表
--ON      T1.cst_id = T25.cst_id
--AND     T25.dt = '20230630'
--LEFT JOIN    adm_pub.adm_csm_cbus_cst_fin_ast_inf_dd T26 --客户集市-业务信息-客户金融资产信息表
--ON      T1.cst_id = T26.cst_id
--AND     T26.dt = '20230630'
LEFT JOIN    (select   t1.cst_id
,t2.chm_bal    chm_bal_before    --消费贷合同之前理财余额
,T3.dep_bal    dep_bal_before    --消费贷合同之前存款余额
,T4.aum_bal    aum_bal_before    --消费贷合同之前aum余额
--,count(distinct t5.cr_crd_card_nbr)    card_cnt  --消费贷合同之后开卡的客户数
from  (select cst_id
,min(APNT_START_DT)    min_APNT_START_DT
from  lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_2024_new
where dt = '20250331'
group by cst_id )     t1
left  join   adm_pub.adm_csm_cbus_chm_inf_dd  T2    --客户集市-业务信息-客户理财业务信息表
ON      T1.cst_id = T2.cst_id
and   t2.dt >= '20230630'
and   t2.dt =  to_char(dateadd(to_date(t1.min_APNT_START_DT,'yyyymmdd'),-1,'dd'),'yyyymmdd')
LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd  T3 --客户集市-业务信息-客户存款业务信息表
ON      T1.cst_id = T3.cst_id
AND     T3.dt >= '20230630'
and     t3.dt =  to_char(dateadd(to_date(t1.min_APNT_START_DT,'yyyymmdd'),-1,'dd'),'yyyymmdd')
LEFT JOIN    adm_pub.adm_csm_cbus_cst_fin_ast_inf_dd T4 --客户集市-业务信息-客户金融资产信息表
ON      T1.cst_id = T4.cst_id
AND     T4.dt >= '20230630'
and     t4.dt =  to_char(dateadd(to_date(t1.min_APNT_START_DT,'yyyymmdd'),-1,'dd'),'yyyymmdd')
--left  join    edw.dim_bus_crd_cr_crd_inf_dd    t5   --信用卡卡片信息
--on      T1.cst_id = T5.cst_id
--and     t5.dt = '20250331'
--AND     t5.card_sts_cd = '' --卡片状态正常
--AND     TO_DATE(CONCAT('20', t5.MTU_DAY, '01'), 'yyyyMMdd') >= TO_DATE(CONCAT('@@{yyyyMM}', '01'), 'yyyyMMdd')
--AND     t5.isu_dt >= to_char(dateadd(to_date(t1.min_APNT_START_DT,'yyyymmdd'),-1,'dd'),'yyyymmdd')
group by  t1.cst_id
,t2.chm_bal
,T3.dep_bal
,T4.aum_bal  )   t24
on   T1.cst_id = T24.cst_id
LEFT JOIN    adm_pub.adm_csm_cbus_cst_fin_ast_inf_dd T27 --客户集市-业务信息-客户金融资产信息表
ON      T1.cst_id = T27.cst_id
AND     T27.dt = '20250331'
WHERE   T1.dt = '20250331'
AND     ( ( T1.PRD_NO like '200101%'   --个人消费性贷款
and     T1.PRD_NO <> '2001010101003'   --剔除 随贷通（消费）
AND     T1.TMT_DT = '18991231'
AND     T1.CTR_MTU_DT > '20250331' )
    OR ( T1.PRD_NO = '2001010101003'    --随贷通（消费）
--AND     T1.CPT_USG_CD LIKE '02%'  --贷款用途
AND     T7.lmt_sts_cd IN ( '0' , '3' , '4' ) ) ) --个人消费性贷款未到期未终结；随贷通-消费 额度状态已激活
AND     T2.LOAN_CST_TYP_CD in ( '04','08','09')  --工薪族
AND     T1.CTR_BGN_DT >= '20240101' --活动期间
AND     T1.BSN_MARK_CD NOT IN ( '01' )  --剔除员工贷款
AND     ( T1.BSN_MARK_CD <> '04'
AND     T22.CTR_SERNO IS NULL ) --剔除重组贷款
AND     LENGTH(t8.job_unt_nm) > 3
AND     T1.CTR_STS_CD not in ( '1','3','5')    --剔除1：未生效，3	终止，5	作废
--AND     t8.OWN_EMP_ID = ''   --剔除本行员工号
;

----20230701-20231231新增的消费贷客户，不管是否到期，结清

DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_cst_20230701_20231231 purge;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_cst_20230701_20231231  as

SELECT  DISTINCT  coalesce(T1.cst_id,'-') cst_id --客户号
                 ,coalesce(T1.cst_nm,'-') cst_nm --客户名称
FROM    edw.dim_bus_loan_ctr_inf_dd T1 --信贷合同信息
LEFT JOIN    edw.DIM_CST_BAS_INF_DD T2 --客户基本信息
ON      T1.cst_id = T2.cst_id
AND     T2.dt = '20231231'
LEFT JOIN    EDW.DWD_BUS_LOAN_REL_APL_INF_DD T3 -- 信贷业务关联申请信息
ON      T3.APL_SRL_NBR = T1.BUSI_APL_ID -- 申请流水号
AND     T3.REL_OBJ_TYP = 'EntryForm' -- 关联类型为进件
AND     T3.DT = '20231231'
LEFT JOIN    EDW.DWD_BUS_LOAN_ENTR_FORM_DD T4 -- 信贷业务进件单信息
ON      T4.APL_SRL_NBR = T3.REL_OBJ_ID -- 进件流水号
AND     T4.DT = '20231231'
LEFT JOIN    edw.dwd_bus_loan_apl_rel_dd T5 --进件单关联信息
ON      T4.apl_srl_nbr = T5.xudai_lst_srl_nbr
AND     T5.OBJ_TYP = 'OnlineBusiness'
AND     T5.DT = '20231231'
LEFT JOIN    edw.loan_entryform_business T6 --个税贷进件业务信息表
ON      T5.OBJ_ID = T6.serialno
AND     T6.DT = '20231231'
LEFT JOIN    EDW.DWD_BUS_LOAN_FNC_CRD_LMT_INF_DD T7 ----随贷通授信额度信息
ON      T7.BUS_CTR_ID = T1.BUSI_CTR_ID
AND     T7.LOAN_USG_CD = '2' --随贷通消费性贷款
AND     T7.DT = '20231231'
LEFT JOIN    edw.dim_cst_idv_bas_inf_dd   T8   --个人客户基本信息
ON      T1.cst_id = T8.cst_id
and     T8.dt = '20250331'
LEFT JOIN    (
                 SELECT  A1.BUSI_CTR_ID
                 FROM    EDW.DIM_BUS_LOAN_CTR_INF_DD A1 -- 信贷合同信息
                 INNER JOIN    EDW.DWD_BUS_LOAN_PRPS_REL_DD A2 --方案关联
                 ON      A1.BUSI_CTR_ID = A2.REL_ID
                 AND     A2.DT = '20231231'
                 INNER JOIN    EDW.DWD_BUS_LOAN_ZXT_LOAN_PRPS_APL_DD A3 --助兴通贷款方案申请
                 ON      A2.PRPS_ID = A3.PRPS_ID -- 找到重组的方案号
                 AND     A3.DT = '20231231'
                 WHERE   A1.DT = '20231231'
                 GROUP BY A1.BUSI_CTR_ID
             ) T22 --助兴通合同
ON      T1.BUSI_CTR_ID = T22.BUSI_CTR_ID
WHERE   T1.dt = '20231231'
AND     (  T1.pd_cd LIKE '201050101%'
    OR ( T1.pd_cd LIKE '2010503%'
AND     T1.loan_usg_cd LIKE '02%' ) ) --个人消费性贷款未到期未终结；随贷通-消费 额度状态已激活
AND     ( ( T2.LOAN_CST_TYP_CD in ( '04','08','09')
AND     T6.qrcodetype IN ( '1' , '4' ,'5' ) )
    OR ( T2.LOAN_CST_TYP_CD in ( '04','08','09')
AND     T6.qrcodetype IS NULL ) ) --工薪族
AND     T1.apnt_start_dt >= '20230701' --活动期间
and     T1.apnt_start_dt <= '20231231'
AND     T1.bus_cd NOT IN ( 'A' , 'B' , 'H' , 'I' , 'O' , 'P' ) --剔除员工贷款
AND     ( T1.bus_cd <> 'J'
AND     T22.BUSI_CTR_ID IS NULL ) --剔除重组贷款
AND     LENGTH(t8.job_unt_nm) > 3
AND     T1.frz_sts_cd <> '';



--SHEET2-客户清单
--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet2 PURGE;

--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet2
--(
--     cst_id                 STRING  COMMENT '个人客户号'
--    ,cst_nm                 STRING  COMMENT '个人客户名'
--    ,prm_mgr_id             STRING  COMMENT '主管户客户经理工号'
--    ,prm_mgr_nm             STRING  COMMENT '主管户客户经理名称'
--    ,tem_org_id             STRING  COMMENT '团队机构号'
--    ,tem_org_nm             STRING  COMMENT '团队机构名称'
--    ,sbr_org_nm             STRING  COMMENT '支行名称'
--    ,brc_org_nm             STRING  COMMENT '分行名称'
--    ,ent_cst_id             STRING  COMMENT '企业客户号'
--    ,ent_cst_nm             STRING  COMMENT '企业客户名'
--    ,prm_mgr_id_ent         STRING  COMMENT '企业主管户客户经理工号'
--    ,prm_mgr_nm_ent         STRING  COMMENT '企业主管户客户经理名称'
--    ,tem_org_id_ent         STRING  COMMENT '企业主管团队机构号'
--    ,tem_org_nm_ent         STRING  COMMENT '企业主管团队机构名称'
--    ,sbr_org_nm_ent         STRING  COMMENT '企业主管支行名称'
--    ,brc_org_nm_ent         STRING  COMMENT '企业主管分行名称'
--    ,ctr_amt                DECIMAL COMMENT '新增消费贷款合同金额合计'
--    ,actl_start_use_crd_lmt DECIMAL COMMENT '新增消费贷款启用额度合计'
--    ,ctr_bal                DECIMAL COMMENT '新增消费贷款合同余额合计'
--    ,mon_acm_prcp_bal_acml  DECIMAL COMMENT '本金余额月日均'
--    ,if_loan_xf             STRING  COMMENT '是否持有消费贷款'
--    ,efe_crd_cst_ind        STRING  COMMENT '是否有效信用卡户'
--    ,efe_dep_cst_ind        STRING  COMMENT '是否有效存款户'
--    ,efe_chm_cst_ind        STRING  COMMENT '是否有效理财户'
--    ,efe_insu_cst_ind       STRING  COMMENT '是否有效保险户'
--    ,efe_fnd_cst_ind        STRING  COMMENT '是否有效基金户'
--    ,efe_nob_met_cst_ind    STRING  COMMENT '是否有效贵金属户'
--    ,ctr_bal_all            DECIMAL COMMENT '消费贷款合同余额总计'
--    ,dep_bal                DECIMAL COMMENT '存款余额'
--    ,chm_bal                DECIMAL COMMENT '理财余额'
--    ,dep_bal_add            DECIMAL COMMENT '新增存款余额'
--    ,chm_bal_add            DECIMAL COMMENT '新增理财余额'
--    ,cst_val_grd            STRING  COMMENT '客户价值等级'
--    ,cprh_contri_cur_year   DECIMAL COMMENT '当年客户价值'
--    ,loan_start_dt          STRING  COMMENT '最早消费贷款开始日期'
--    ,crd_isu_dt             STRING  COMMENT '最早信用卡发卡日期'
--    ,dep_opn_dt             STRING  COMMENT '最早存款开户日期'
--    ,chm_trx_dt             STRING  COMMENT '最早购买理财日期'
--    ,insu_dt                STRING  COMMENT '最早保险投保日期'
--    ,fund_dt                STRING  COMMENT '最早购买基金日期'
--    ,nob_dt                 STRING  COMMENT '最早购买贵金属日期'
--    ,if_shoudaihu          DECIMAL  COMMENT '是否首贷户'
--    ,ctr_fenzi             DECIMAL  COMMENT '授信金额加权利率分子'
--    ,ctr_fenmu             DECIMAL  COMMENT '授信金额加权利率分母'
--    ,dbil_fenzi            DECIMAL  COMMENT '用信金额加权利率分子'
--    ,dbil_fenmu            DECIMAL  COMMENT '用信金额加权利率分母'
--    ,aum_bal               DECIMAL  COMMENT 'aum余额'
--    ,aum_bal_add           DECIMAL  COMMENT '新增aum余额'
--    ,max_apnt_start_dt     STRING  COMMENT '最新一笔消费贷合同开始日期'
--    ,is_cur_year_new_cst   STRING  COMMENT '是否本年新增客户'
--    ,brc_org_id            STRING  COMMENT '分行层级机构编号'
--    ,sbr_org_id            STRING  COMMENT '支行层级机构编号'
--)
--COMMENT
--'企业团办_SHEET2-客户清单'
--PARTITIONED BY
--(
--    DT STRING COMMENT '日期分区'
--);



-----新增表字段
-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet2 add  columns
--(grp_org_id               STRING  COMMENT '集团机构编号'
--,cpy_org_id               STRING  COMMENT '法人机构编号'
--);

-----新增表字段
-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet2 add  columns
--(card_cnt               BIGINT  COMMENT '新增信用卡户数'
--);

INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet2 PARTITION (DT = '20250331')
SELECT  DISTINCT T1.cst_id
        ,T1.cst_nm
        ,T1.prm_mgr_id
        ,T1.prm_mgr_nm
        ,T1.tem_org_id
        ,T1.tem_org_nm
        ,T1.sbr_org_nm
        ,T1.brc_org_nm
        ,T1.ent_cst_id
        ,T1.ent_cst_nm
        ,T1.prm_mgr_id_ent
        ,T1.prm_mgr_nm_ent
        ,T1.tem_org_id_ent
        ,T1.tem_org_nm_ent
        ,T1.sbr_org_nm_ent
        ,T1.brc_org_nm_ent
        ,T2.ctr_amt
        ,T2.actl_start_use_crd_lmt
        ,T2.ctr_bal
        ,T2.mon_acm_prcp_bal_acml
        ,CASE WHEN T3.cst_id is not null then '1' else '0' end if_loan_xf
        ,T1.efe_crd_cst_ind
        ,T1.efe_dep_cst_ind
        ,T1.efe_chm_cst_ind
        ,T1.efe_insu_cst_ind
        ,T1.efe_fnd_cst_ind
        ,T1.efe_nob_met_cst_ind
        ,T3.ctr_bal ctr_bal_all
        ,T1.dep_bal
        ,T1.chm_bal
        ,coalesce(T1.dep_bal, 0) - coalesce(T1.dep_bal0630, 0) dep_bal_add
        ,coalesce(T1.chm_bal, 0) - coalesce(T1.chm_bal0630, 0) chm_bal_add
        ,T1.cst_val_grd
        ,T1.cprh_contri_cur_year
        ,'' loan_start_dt
        ,'' crd_isu_dt
        ,'' dep_opn_dt
        ,'' chm_trx_dt
        ,'' insu_dt
        ,'' fund_dt
        ,'' nob_dt
        ,CASE
                    WHEN coalesce(T2.if_shoubi, 0) > 0 THEN '1'
                    ELSE '0'
                  END if_shoudaihu
        ,T2.ctr_fenzi
        ,T2.ctr_fenmu
        ,T2.dbil_fenzi
        ,T2.dbil_fenmu
        ,T1.aum_bal
        ,coalesce(T1.aum_bal, 0) - coalesce(T1.aum_bal0630, 0) aum_bal_add
		,t2.max_apnt_start_dt    --最新一笔消费贷合同开始日期   --修改 新增
		,case when  t4.cst_id  is not null  then '是'  else  '否'  end  as  is_cur_year_new_cst     --是否本年新增客户
		,t1.brc_org_id               --分行层级机构编号
        ,t1.sbr_org_id               --支行层级机构编号
		,t1.grp_org_id
		,t1.cpy_org_id
		,t1.card_cnt
FROM    (
            SELECT     a.*
            FROM    lab_bigdata_dev.phjrb_ys_qytb_cst_info_tmp_new a     --企业团办新增消费贷款客户信息表
			where  dt = '20250331'
            UNION
            SELECT     b.*
            FROM    lab_bigdata_dev.phjrb_ys_qytb_cst_info_crd_tmp_new b   --企业团办新增信用卡客户信息表
			where  dt = '20250331'
        ) T1
LEFT JOIN    (
                 SELECT  cst_id
                         ,sum(ctr_amt) ctr_amt
                         ,sum(actl_start_use_crd_lmt) actl_start_use_crd_lmt
                         ,round(sum(ctr_bal), 2) ctr_bal
                         ,round(sum(mon_acm_prcp_bal_acml), 2) mon_acm_prcp_bal_acml
                         ,sum(ctr_amt * intr_rat * duration) ctr_fenzi
                         ,sum(ctr_amt * duration) ctr_fenmu
                         ,sum(dbil_fenzi) dbil_fenzi
                         ,sum(dbil_fenmu) dbil_fenmu
                         ,sum(if_shoubi) if_shoubi
						 ,max(apnt_start_dt)    max_apnt_start_dt    --最新一笔消费贷合同开始日期   --修改 新增
                 FROM    lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_new    --企业团办新增消费性贷款合同信息表
                 WHERE   dt = '20250331'
                 GROUP BY cst_id
             ) T2
ON      T1.cst_id = T2.cst_id
LEFT JOIN    (
                 SELECT  cst_id
                         ,sum(ctr_bal) ctr_bal
                 FROM    lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_all_new   --企业团办综合产效底表
                 WHERE   dt = '20250331'
                 AND     if_ctr_efe = '1' --消费性贷款在贷合同
                 AND     frz_sts_ind = '0' --授信状态不为空
                 GROUP BY cst_id
             ) T3
ON      T1.cst_id = T3.cst_id
left join (select   distinct  t1.cst_id
from lab_bigdata_dev.phjrb_ys_qytb_cst_info_tmp_2024_new   t1    ----2024年新增的消费贷款客户
left join lab_bigdata_dev.phjrb_ys_qytb_bus_loan_cst_20230701_20231231    t2     ----20230701-20231231新增的消费贷客户
on  t1.cst_id = t2.cst_id
where  t1.dt = '20250331'
and  t2.cst_id is null )    t4   --筛选出所有2024年新增的客户
on   t1.cst_id = t4.cst_id
where     t1.ent_cst_nm  not in (select distinct   ent_cst_nm
from   (
            SELECT     a.*
            FROM    lab_bigdata_dev.phjrb_ys_qytb_cst_info_tmp_new a     --企业团办新增消费贷款客户信息表
			where  dt = '20250331'
            UNION
            SELECT     b.*
            FROM    lab_bigdata_dev.phjrb_ys_qytb_cst_info_crd_tmp_new b   --企业团办新增信用卡客户信息表
			where  dt = '20250331'
        ) T1
where  ( length(ent_cst_nm) < 4   --小于4个字符
or  (ent_cst_nm REGEXP '[^0-9.]') = false   --为纯数字
or  ent_cst_nm  rlike '个体|退休|在家|单位|自由职业|家庭主妇|人人可贷|泰隆'   --企业名称包含这些
or  ent_cst_nm is null
or  ent_cst_nm = '')  )   --剔除企业名称不规范的客户
 ;



--SHEET4 企业清单和客户清单合并

--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4 PURGE;
--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4
--(
--    cst_id                          STRING  COMMENT '个人客户号'
--    ,cst_nm                         STRING  COMMENT '个人客户名'
--    ,prm_mgr_id                     STRING  COMMENT '主管户客户经理工号'
--    ,prm_mgr_nm                     STRING  COMMENT '主管户客户经理名称'
--    ,tem_org_id                     STRING  COMMENT '团队机构号'
--    ,tem_org_nm                     STRING  COMMENT '团队机构名称'
--    ,sbr_org_nm                     STRING  COMMENT '支行名称'
--    ,brc_org_nm                     STRING  COMMENT '分行名称'
--    ,ent_cst_id                     STRING  COMMENT '企业客户号'
--    ,ent_cst_nm                     STRING  COMMENT '企业客户名'
--    ,prm_mgr_id_ent                 STRING  COMMENT '企业主管户客户经理工号'
--    ,prm_mgr_nm_ent                 STRING  COMMENT '企业主管户客户经理名称'
--    ,tem_org_id_ent                 STRING  COMMENT '企业主管团队机构号'
--   ,tem_org_nm_ent                 STRING  COMMENT '企业主管团队机构名称'
--    ,sbr_org_nm_ent                 STRING  COMMENT '企业主管支行名称'
--    ,brc_org_nm_ent                 STRING  COMMENT '企业主管分行名称'
--    ,ctr_amt                        DECIMAL COMMENT '新增消费贷款合同金额合计'
--    ,actl_start_use_crd_lmt         DECIMAL COMMENT '新增消费贷款启用额度合计'
--    ,ctr_bal                        DECIMAL COMMENT '新增消费贷款合同余额合计'
--    ,mon_acm_prcp_bal_acml          DECIMAL COMMENT '本金余额月日均'
--    ,if_loan_xf                     STRING  COMMENT '是否持有消费贷款'
--    ,efe_crd_cst_ind                STRING  COMMENT '是否有效信用卡户'
--    ,efe_dep_cst_ind                STRING  COMMENT '是否有效存款户'
--    ,efe_chm_cst_ind                STRING  COMMENT '是否有效理财户'
--    ,efe_insu_cst_ind               STRING  COMMENT '是否有效保险户'
--    ,efe_fnd_cst_ind                STRING  COMMENT '是否有效基金户'
--    ,efe_nob_met_cst_ind            STRING  COMMENT '是否有效贵金属户'
--    ,ctr_bal_all                    DECIMAL COMMENT '消费贷款合同余额总计'
--    ,dep_bal                        DECIMAL COMMENT '存款余额'
--    ,chm_bal                        DECIMAL COMMENT '理财余额'
--    ,dep_bal_add                    DECIMAL COMMENT '新增存款余额'
--    ,chm_bal_add                    DECIMAL COMMENT '新增理财余额'
--    ,cst_val_grd                    DECIMAL COMMENT '客户价值等级'
--    ,cprh_contri_cur_year           DECIMAL COMMENT '当年客户价值'
--    ,loan_start_dt                  STRING  COMMENT '最早消费贷款开始日期'
--    ,crd_isu_dt                     STRING  COMMENT '最早信用卡发卡日期'
--    ,dep_opn_dt                     STRING  COMMENT '最早存款开户日期'
--    ,chm_trx_dt                     STRING  COMMENT '最早购买理财日期'
--    ,insu_dt                        STRING  COMMENT '最早保险投保日期'
--    ,fund_dt                        STRING  COMMENT '最早购买基金日期'
--    ,nob_dt                         STRING  COMMENT '最早购买贵金属日期'
--    ,brc_grp_cst_num                DECIMAL COMMENT '分行_企业授信客户数统计'
--    ,brc_grp_mon_acm_prcp_bal_acml  DECIMAL COMMENT '分行_企业本金余额月日均'
--   ,brc_grp_actl_start_use_crd_lmt DECIMAL COMMENT '分行_企业本金启用额度'
--    ,rn_brc_grp                     STRING  COMMENT '排序_分行_企业'
--    ,pd_hld_qty_sum_brc             STRING  COMMENT '汇总产品持有数_分行'
--    ,sbr_grp_cst_num                DECIMAL COMMENT '支行_企业授信客户数统计'
--    ,sbr_grp_mon_acm_prcp_bal_acml  DECIMAL COMMENT '支行_企业本金余额月日均'
--    ,sbr_grp_actl_start_use_crd_lmt DECIMAL COMMENT '支行_企业本金启用额度'
--    ,rn_sbr_grp                     STRING  COMMENT '排序_支行_企业'
--    ,pd_hld_qty_sum_sbr             STRING  COMMENT '汇总产品持有数_支行'
--    ,tem_grp_cst_num                DECIMAL COMMENT '团队_企业授信客户数统计'
--    ,tem_grp_mon_acm_prcp_bal_acml  DECIMAL COMMENT '团队_企业本金余额月日均'
--    ,tem_grp_actl_start_use_crd_lmt DECIMAL COMMENT '团队_企业本金启用额度'
--    ,rn_tem_grp                     STRING  COMMENT '排序_团队_企业'
--    ,pd_hld_qty_sum_tem             STRING  COMMENT '汇总产品持有数_团队'
--    ,mgr_grp_cst_num                DECIMAL COMMENT '客户经理_企业授信客户数统计'
--    ,mgr_grp_mon_acm_prcp_bal_acml  DECIMAL COMMENT '客户经理_企业本金余额月日均'
--    ,mgr_grp_actl_start_use_crd_lmt DECIMAL COMMENT '客户经理_企业本金启用额度'
--    ,rn_mgr_grp                     STRING  COMMENT '排序_客户经理_企业'
--    ,pd_hld_qty_sum_mgr             STRING  COMMENT '汇总产品持有数_客户经理'
--    ,brc_grp_cst_num2               DECIMAL COMMENT '分行_企业新增授信客户数统计含信用卡'
--    ,sbr_grp_cst_num2               DECIMAL COMMENT '支行_企业新增授信客户数统计含信用卡'
--    ,tem_grp_cst_num2               DECIMAL COMMENT '团队_企业新增授信客户数统计含信用卡'
--    ,mgr_grp_cst_num2               DECIMAL COMMENT '客户经理_企业新增授信客户数统计含信用卡'
--    ,brc_grp_card_cst_num           DECIMAL COMMENT '分行_企业新增信用卡客户数统计'
--    ,sbr_grp_card_cst_num           DECIMAL COMMENT '支行_企业新增信用卡客户数统计'
--    ,tem_grp_card_cst_num           DECIMAL COMMENT '团队_企业新增信用卡客户数统计'
--    ,mgr_grp_card_cst_num           DECIMAL COMMENT '客户经理_企业新增信用卡客户数统计'
--    ,brc_grp_pure_card_cst_num      DECIMAL COMMENT '分行_企业新增纯信用卡客户数统计'
--    ,sbr_grp_pure_card_cst_num      DECIMAL COMMENT '支行_企业新增纯信用卡客户数统计'
--    ,tem_grp_pure_card_cst_num      DECIMAL COMMENT '团队_企业新增纯信用卡客户数统计'
--    ,mgr_grp_pure_card_cst_num      DECIMAL COMMENT '客户经理_企业新增纯信用卡客户数统计'
--    ,brc_grp_ctr_bal                DECIMAL COMMENT '分行_企业新增消费贷款余额'
--    ,sbr_grp_ctr_bal                DECIMAL COMMENT '支行_企业新增消费贷款余额'
--    ,tem_grp_ctr_bal                DECIMAL COMMENT '团队_企业新增消费贷款余额'
--    ,mgr_grp_ctr_bal                DECIMAL COMMENT '客户经理_企业新增消费贷款余额'
--    ,yongxin_rate_mth_avg_brc       DECIMAL COMMENT '月日均用信率_分行'
--    ,pd_hld_qty_avg_brc             DECIMAL COMMENT '客均产品持有数_分行'
--    ,pltbxm_jl_brc                  DECIMAL COMMENT '批量团办项目奖励_分行'
--    ,pd_hld_qty_avg_jcxs_brc        DECIMAL COMMENT '平均产品持有数加成系数_分行'
--    ,yongxin_rate_mth_avg_sbr       DECIMAL COMMENT '月日均用信率_支行'
--    ,pd_hld_qty_avg_sbr             DECIMAL COMMENT '客均产品持有数_支行'
--    ,pltbxm_jl_sbr                  DECIMAL COMMENT '批量团办项目奖励_支行'
--    ,pd_hld_qty_avg_jcxs_sbr        DECIMAL COMMENT '平均产品持有数加成系数_支行'
--    ,yongxin_rate_mth_avg_tem       DECIMAL COMMENT '月日均用信率_团队'
--    ,pd_hld_qty_avg_tem             DECIMAL COMMENT '客均产品持有数_团队'
--    ,pltbxm_jl_tem                  DECIMAL COMMENT '批量团办项目奖励_团队'
--    ,pd_hld_qty_avg_jcxs_tem        DECIMAL COMMENT '平均产品持有数加成系数_团队'
--    ,yongxin_rate_mth_avg_mgr       DECIMAL COMMENT '月日均用信率_客户经理'
--    ,pd_hld_qty_avg_mgr             DECIMAL COMMENT '客均产品持有数_客户经理'
--    ,pltbxm_jl_mgr                  DECIMAL COMMENT '批量团办项目奖励_客户经理'
--    ,pd_hld_qty_avg_jcxs_mgr        DECIMAL COMMENT '平均产品持有数加成系数_客户经理'
--    ,brc_ctr_fenzi                  DECIMAL COMMENT '分行_企业授信金额加权利率分子'
--    ,brc_ctr_fenmu                  DECIMAL COMMENT '分行_企业授信金额加权利率分母'
--    ,sbr_ctr_fenzi                  DECIMAL COMMENT '支行_企业授信金额加权利率分子'
--    ,sbr_ctr_fenmu                  DECIMAL COMMENT '支行_企业授信金额加权利率分母'
--    ,tem_ctr_fenzi                  DECIMAL COMMENT '团队_企业授信金额加权利率分子'
--    ,tem_ctr_fenmu                  DECIMAL COMMENT '团队_企业授信金额加权利率分母'
--    ,mgr_ctr_fenzi                  DECIMAL COMMENT '客户经理_企业授信金额加权利率分子'
--    ,mgr_ctr_fenmu                  DECIMAL COMMENT '客户经理_企业授信金额加权利率分母'
--    ,brc_dbil_fenzi                 DECIMAL COMMENT '分行_企业用信金额加权利率分子'
--    ,brc_dbil_fenmu                 DECIMAL COMMENT '分行_企业用信金额加权利率分母'
--    ,sbr_dbil_fenzi                 DECIMAL COMMENT '支行_企业用信金额加权利率分子'
--    ,sbr_dbil_fenmu                 DECIMAL COMMENT '支行_企业用信金额加权利率分母'
--    ,tem_dbil_fenzi                 DECIMAL COMMENT '团队_企业用信金额加权利率分子'
--    ,tem_dbil_fenmu                 DECIMAL COMMENT '团队_企业用信金额加权利率分母'
--    ,mgr_dbil_fenzi                 DECIMAL COMMENT '客户经理_企业用信金额加权利率分子'
--    ,mgr_dbil_fenmu                 DECIMAL COMMENT '客户经理_企业用信金额加权利率分母'
--    ,brc_aum                        DECIMAL COMMENT '分行_企业aum'
--    ,brc_aum_add                    DECIMAL COMMENT '分行_企业aum_add'
--    ,sbr_aum                        DECIMAL COMMENT '支行_企业aum'
--    ,sbr_aum_add                    DECIMAL COMMENT '支行_企业aum_add'
--    ,tem_aum                        DECIMAL COMMENT '团队_企业aum'
--    ,tem_aum_add                    DECIMAL COMMENT '团队_企业aum_add'
--    ,mgr_aum                        DECIMAL COMMENT '客户经理_企业aum'
--    ,mgr_aum_add                    DECIMAL COMMENT '客户经理_企业aum_add'
--    ,if_jiandang                    STRING  COMMENT '是否建档'
--    ,forml_cst_ind                  STRING  COMMENT '正式客户标识'
--    ,brc_grp_ctr_amt                DECIMAL COMMENT '分行_企业新增消费贷款金额'
--    ,sbr_grp_ctr_amt                DECIMAL COMMENT '支行_企业新增消费贷款金额'
--    ,tem_grp_ctr_amt                DECIMAL COMMENT '团队_企业新增消费贷款金额'
--    ,mgr_grp_ctr_amt                DECIMAL COMMENT '客户经理_企业新增消费贷款金额'
--    ,brc_org_id               STRING  COMMENT '分行层级机构编号'
--    ,sbr_org_id               STRING  COMMENT '支行层级机构编号'
--)
--COMMENT
--'企业团办_SHEET4-企业清单2'
--PARTITIONED BY
--(
--    DT STRING COMMENT '日期分区'
--);

-----新增表字段
-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet4 add  columns
--(grp_org_id               STRING  COMMENT '集团机构编号'
--,cpy_org_id               STRING  COMMENT '法人机构编号'
--);

-----新增表字段
-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet4 add  columns
--(brc_grp_card_cnt               STRING  COMMENT '分行_企业新增信用卡户数'
--,sbr_grp_card_cnt               STRING  COMMENT '支行_企业新增信用卡户数'
--,tem_grp_card_cnt               STRING  COMMENT '团队_企业新增信用卡户数'
--,mgr_grp_card_cnt               STRING  COMMENT '客户经理_企业新增信用卡户数'
--);



INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4 PARTITION (DT = '20250331')
SELECT  distinct  cst_id
        ,cst_nm
        ,prm_mgr_id
        ,prm_mgr_nm
        ,tem_org_id
        ,tem_org_nm
        ,sbr_org_nm
        ,brc_org_nm
        ,ent_cst_id
        ,ent_cst_nm
        ,prm_mgr_id_ent
        ,prm_mgr_nm_ent
        ,tem_org_id_ent
        ,tem_org_nm_ent
        ,sbr_org_nm_ent
        ,brc_org_nm_ent
        ,ctr_amt
        ,actl_start_use_crd_lmt
        ,ctr_bal
        ,mon_acm_prcp_bal_acml
        ,if_loan_xf
        ,efe_crd_cst_ind
        ,efe_dep_cst_ind
        ,efe_chm_cst_ind
        ,efe_insu_cst_ind
        ,efe_fnd_cst_ind
        ,efe_nob_met_cst_ind
        ,ctr_bal ctr_bal_all
        ,dep_bal
        ,chm_bal
        ,dep_bal_add
        ,chm_bal_add
        ,cst_val_grd
        ,cprh_contri_cur_year
        ,loan_start_dt
        ,crd_isu_dt
        ,dep_opn_dt
        ,chm_trx_dt
        ,insu_dt
        ,fund_dt
        ,nob_dt
        ,brc_grp_cst_num
        ,brc_grp_mon_acm_prcp_bal_acml
        ,brc_grp_actl_start_use_crd_lmt
        ,rn_brc_grp
        ,pd_hld_qty_sum_brc
        ,sbr_grp_cst_num                       --支行_企业授信客户数统计
        ,sbr_grp_mon_acm_prcp_bal_acml         --支行_企业本金余额月日均
        ,sbr_grp_actl_start_use_crd_lmt        --支行_企业本金启用额度
        ,rn_sbr_grp                            --排序_支行_企业
        ,pd_hld_qty_sum_sbr                    --汇总产品持有数_支行
        ,tem_grp_cst_num                       --团队_企业授信客户数统计
        ,tem_grp_mon_acm_prcp_bal_acml         --团队_企业本金余额月日均
        ,tem_grp_actl_start_use_crd_lmt        --团队_企业本金启用额度
        ,rn_tem_grp                            --排序_团队_企业
        ,pd_hld_qty_sum_tem                    --汇总产品持有数_团队
        ,mgr_grp_cst_num                       --客户经理_企业授信客户数统计
        ,mgr_grp_mon_acm_prcp_bal_acml         --客户经理_企业本金余额月日均
        ,mgr_grp_actl_start_use_crd_lmt        --客户经理_企业本金启用额度
        ,rn_mgr_grp --排序_客户经理_企业
        ,pd_hld_qty_sum_mgr --汇总产品持有数_客户经理
        ,brc_grp_cst_num2 --分行_企业新增授信客户数统计含信用卡
        ,sbr_grp_cst_num2 --支行_企业新增授信客户数统计含信用卡
        ,tem_grp_cst_num2 --团队_企业新增授信客户数统计含信用卡
        ,mgr_grp_cst_num2 --客户经理_企业新增授信客户数统计含信用卡
        ,brc_grp_card_cst_num --分行_企业新增信用卡客户数统计
        ,sbr_grp_card_cst_num --支行_企业新增信用卡客户数统计
        ,tem_grp_card_cst_num --团队_企业新增信用卡客户数统计
        ,mgr_grp_card_cst_num --客户经理_企业新增信用卡客户数统计
        ,brc_grp_pure_card_cst_num --分行_企业新增纯信用卡客户数统计
        ,sbr_grp_pure_card_cst_num --支行_企业新增纯信用卡客户数统计
        ,tem_grp_pure_card_cst_num --团队_企业新增纯信用卡客户数统计
        ,mgr_grp_pure_card_cst_num --客户经理_企业新增纯信用卡客户数统计
        ,brc_grp_ctr_bal --分行_企业新增消费贷款余额
        ,sbr_grp_ctr_bal --支行_企业新增消费贷款余额
        ,tem_grp_ctr_bal --团队_企业新增消费贷款余额
        ,mgr_grp_ctr_bal --客户经理_企业新增消费贷款余额
        ,CASE
           WHEN a.brc_grp_actl_start_use_crd_lmt > 0 THEN a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt
           ELSE 0
         END yongxin_rate_mth_avg_brc
        ,CASE
           WHEN a.brc_grp_cst_num > 0 THEN a.pd_hld_qty_sum_brc / a.brc_grp_cst_num
           ELSE 0
         END pd_hld_qty_avg_brc
        ,CASE
           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt = 0     THEN 200
           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt < 0.10  THEN 500
           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt < 0.30  THEN 800
           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt < 0.50  THEN 1000
           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1    THEN 1200
           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt = 0    THEN 300
           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt < 0.10 THEN 600
           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt < 0.30 THEN 1500
           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt < 0.50 THEN 2000 --1011update
           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1   THEN 2400 --1011update
           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt = 0    THEN 400
           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt < 0.10 THEN 800
           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt < 0.30 THEN 2000
           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt < 0.50 THEN 4000 --1011update
           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1   THEN 4500 --1011update
           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt = 0                               THEN 500
           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt < 0.10                            THEN 1000
           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt < 0.30                            THEN 3000
           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt < 0.50                            THEN 6000 --1011update
           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1                              THEN 7000 --1011update
           ELSE 0
         END pltbxm_jl_brc --批量团办项目奖励_分行
        ,CASE
           WHEN a.brc_grp_cst_num > 0 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num >= 1 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num < 1.2   THEN 1
           WHEN a.brc_grp_cst_num > 0 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num >= 1.2 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num < 1.5 THEN 1.2
           WHEN a.brc_grp_cst_num > 0 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num >= 1.5 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num < 2   THEN 1.5
           WHEN a.brc_grp_cst_num > 0 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num >= 2                                                      THEN 1.8
           ELSE 0
         END pd_hld_qty_avg_jcxs_brc --平均产品持有数加成系数_分行
        ,CASE
           WHEN a.sbr_grp_actl_start_use_crd_lmt > 0 THEN a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt
           ELSE 0
         END yongxin_rate_mth_avg_sbr
        ,CASE
           WHEN a.sbr_grp_cst_num > 0 THEN a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num
           ELSE 0
         END pd_hld_qty_avg_sbr
        ,CASE
           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt = 0     THEN 200
           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt < 0.10  THEN 500
           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt < 0.30  THEN 800
           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt < 0.50  THEN 1000
           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1    THEN 1200
           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt = 0    THEN 300
           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt < 0.10 THEN 600
           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt < 0.30 THEN 1500
           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt < 0.50 THEN 2000
           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1   THEN 2400
           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt = 0    THEN 400
           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt < 0.10 THEN 800
           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt < 0.30 THEN 2000
           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt < 0.50 THEN 4000
           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1   THEN 4500
           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt = 0                               THEN 500
           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt < 0.10                            THEN 1000
           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt < 0.30                            THEN 3000
           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt < 0.50                            THEN 6000
           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1                              THEN 7000
           ELSE 0
         END pltbxm_jl_sbr --批量团办项目奖励_支行
        ,CASE
           WHEN a.sbr_grp_cst_num > 0 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num >= 1 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num < 1.2   THEN 1
           WHEN a.sbr_grp_cst_num > 0 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num >= 1.2 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num < 1.5 THEN 1.2
           WHEN a.sbr_grp_cst_num > 0 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num >= 1.5 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num < 2   THEN 1.5
           WHEN a.sbr_grp_cst_num > 0 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num >= 2                                                      THEN 1.8
           ELSE 0
         END pd_hld_qty_avg_jcxs_sbr --平均产品持有数加成系数_支行
        ,CASE
           WHEN a.tem_grp_actl_start_use_crd_lmt > 0 THEN a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt
           ELSE 0
         END yongxin_rate_mth_avg_tem
        ,CASE
           WHEN a.tem_grp_cst_num > 0 THEN a.pd_hld_qty_sum_tem / a.tem_grp_cst_num
           ELSE 0
         END pd_hld_qty_avg_tem
        ,CASE
           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt = 0     THEN 200
           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt < 0.10  THEN 500
           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt < 0.30  THEN 800
           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt < 0.50  THEN 1000
           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1    THEN 1200
           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt = 0    THEN 300
           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt < 0.10 THEN 600
           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt < 0.30 THEN 1500
           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt < 0.50 THEN 2000
           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1   THEN 2400
           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt = 0    THEN 400
           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt < 0.10 THEN 800
           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt < 0.30 THEN 2000
           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt < 0.50 THEN 4000
           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1   THEN 4500
           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt = 0                               THEN 500
           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt < 0.10                            THEN 1000
           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt < 0.30                            THEN 3000
           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt < 0.50                            THEN 6000
           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1                              THEN 7000
           ELSE 0
         END pltbxm_jl_tem --批量团办项目奖励_团队
        ,CASE
           WHEN a.tem_grp_cst_num > 0 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num >= 1 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num < 1.2   THEN 1
           WHEN a.tem_grp_cst_num > 0 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num >= 1.2 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num < 1.5 THEN 1.2
           WHEN a.tem_grp_cst_num > 0 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num >= 1.5 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num < 2   THEN 1.5
           WHEN a.tem_grp_cst_num > 0 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num >= 2                                                      THEN 1.8
           ELSE 0
         END pd_hld_qty_avg_jcxs_tem --平均产品持有数加成系数_团队
        ,CASE
           WHEN a.mgr_grp_actl_start_use_crd_lmt > 0 THEN a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt
           ELSE 0
         END yongxin_rate_mth_avg_mgr
        ,CASE
           WHEN a.mgr_grp_cst_num > 0 THEN a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num
           ELSE 0
         END pd_hld_qty_avg_mgr
        ,CASE
           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt = 0     THEN 200
           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt < 0.10  THEN 500
           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt < 0.30  THEN 800
           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt < 0.50  THEN 1000
           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1    THEN 1200
           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt = 0    THEN 300
           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt < 0.10 THEN 600
           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt < 0.30 THEN 1500
           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt < 0.50 THEN 2000
           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1   THEN 2400
           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt = 0    THEN 400
           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt < 0.10 THEN 800
           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt < 0.30 THEN 2000
           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt < 0.50 THEN 4000
           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1   THEN 4500
           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt = 0                               THEN 500
           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt < 0.10                            THEN 1000
           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt < 0.30                            THEN 3000
           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt < 0.50                            THEN 6000
           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1                              THEN 7000
           ELSE 0
         END pltbxm_jl_mgr --批量团办项目奖励_客户经理
        ,CASE
           WHEN a.mgr_grp_cst_num > 0 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num >= 1 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num < 1.2   THEN 1
           WHEN a.mgr_grp_cst_num > 0 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num >= 1.2 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num < 1.5 THEN 1.2
           WHEN a.mgr_grp_cst_num > 0 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num >= 1.5 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num < 2   THEN 1.5
           WHEN a.mgr_grp_cst_num > 0 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num >= 2                                                      THEN 1.8
           ELSE 0
         END pd_hld_qty_avg_jcxs_mgr --平均产品持有数加成系数_客户经理
        ,brc_ctr_fenzi --分行_企业授信金额加权利率分子
        ,brc_ctr_fenmu --分行_企业授信金额加权利率分母
        ,sbr_ctr_fenzi --支行_企业授信金额加权利率分子
        ,sbr_ctr_fenmu --支行_企业授信金额加权利率分母
        ,tem_ctr_fenzi --团队_企业授信金额加权利率分子
        ,tem_ctr_fenmu --团队_企业授信金额加权利率分母
        ,mgr_ctr_fenzi --客户经理_企业授信金额加权利率分子
        ,mgr_ctr_fenmu --客户经理_企业授信金额加权利率分母
        ,brc_dbil_fenzi --分行_企业用信金额加权利率分子
        ,brc_dbil_fenmu --分行_企业用信金额加权利率分母
        ,sbr_dbil_fenzi --支行_企业用信金额加权利率分子
        ,sbr_dbil_fenmu --支行_企业用信金额加权利率分母
        ,tem_dbil_fenzi --团队_企业用信金额加权利率分子
        ,tem_dbil_fenmu --团队_企业用信金额加权利率分母
        ,mgr_dbil_fenzi --客户经理_企业用信金额加权利率分子
        ,mgr_dbil_fenmu --客户经理_企业用信金额加权利率分母
        ,brc_aum --分行_企业aum
        ,brc_aum_add --分行_企业aum_add
        ,sbr_aum --支行_企业aum
        ,sbr_aum_add --支行_企业aum_add
        ,tem_aum --团队_企业aum
        ,tem_aum_add --团队_企业aum_add
        ,mgr_aum --客户经理_企业aum
        ,mgr_aum_add --客户经理_企业aum_add
        ,if_jiandang
        ,forml_cst_ind
        ,brc_grp_ctr_amt
        ,sbr_grp_ctr_amt
        ,tem_grp_ctr_amt
        ,mgr_grp_ctr_amt
		,brc_org_id               --分行层级机构编号
        ,sbr_org_id               --支行层级机构编号
		,grp_org_id               --集团机构编号
		,cpy_org_id               --法人机构编号
		,brc_grp_card_cnt         --分行_企业新增信用卡户数
		,sbr_grp_card_cnt         --支行_企业新增信用卡户数
		,tem_grp_card_cnt         --团队_企业新增信用卡户数
		,mgr_grp_card_cnt         --客户经理_企业新增信用卡户数
FROM    (
            SELECT  T1.cst_id
                    ,T1.cst_nm
                    ,T1.prm_mgr_id
                    ,T1.prm_mgr_nm
                    ,T1.tem_org_id
                    ,T1.tem_org_nm
                    ,T1.sbr_org_nm
                    ,T1.brc_org_nm
				          	,T1.brc_org_id               --分行层级机构编号
                    ,T1.sbr_org_id               --支行层级机构编号
				            ,T1.grp_org_id               --集团机构编号
		                ,T1.cpy_org_id               --法人机构编号
                    ,T1.ent_cst_id
                    ,T1.ent_cst_nm
                    ,T1.prm_mgr_id_ent
                    ,T1.prm_mgr_nm_ent
                    ,T1.tem_org_id_ent
                    ,T1.tem_org_nm_ent
                    ,T1.sbr_org_nm_ent
                    ,T1.brc_org_nm_ent
                    ,T1.ctr_amt
                    ,T1.actl_start_use_crd_lmt
                    ,T1.ctr_bal
                    ,T1.mon_acm_prcp_bal_acml
                    ,T1.if_loan_xf
                    ,T1.efe_crd_cst_ind
                    ,T1.efe_dep_cst_ind
                    ,T1.efe_chm_cst_ind
                    ,T1.efe_insu_cst_ind
                    ,T1.efe_fnd_cst_ind
                    ,T1.efe_nob_met_cst_ind
                    ,T1.ctr_bal ctr_bal_all
                    ,T1.dep_bal
                    ,T1.chm_bal
                    ,T1.dep_bal_add
                    ,T1.chm_bal_add
                    ,T1.cst_val_grd
                    ,T1.cprh_contri_cur_year
                    ,T1.loan_start_dt
                    ,T1.crd_isu_dt
                    ,T1.dep_opn_dt
                    ,T1.chm_trx_dt
                    ,T1.insu_dt
                    ,T1.fund_dt
                    ,T1.nob_dt
                    ,count(DISTINCT CASE
                                      WHEN t1.ctr_amt > 0 THEN t1.cst_id
                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) brc_grp_cst_num --分行_企业授信客户数统计
                    ,coalesce(sum(t1.mon_acm_prcp_bal_acml) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_mon_acm_prcp_bal_acml --分行_企业本金余额月日均
                    ,coalesce(sum(t1.actl_start_use_crd_lmt) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_actl_start_use_crd_lmt --分行_企业本金启用额度
                    ,row_number() OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) rn_brc_grp --排序_分行_企业
                    ,sum(CASE
                           WHEN coalesce(t1.ctr_amt, 0) > 0 THEN 1 + T1.efe_crd_cst_ind + T1.efe_dep_cst_ind + T1.efe_chm_cst_ind + T1.efe_insu_cst_ind + T1.efe_fnd_cst_ind + T1.efe_nob_met_cst_ind
                           ELSE 0
                         END) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) pd_hld_qty_sum_brc --汇总产品持有数_分行
                    ,count(DISTINCT CASE
                                      WHEN t1.ctr_amt > 0 THEN t1.cst_id
                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) sbr_grp_cst_num --支行_企业授信客户数统计
                    ,coalesce(sum(t1.mon_acm_prcp_bal_acml) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_mon_acm_prcp_bal_acml --支行_企业本金余额月日均
                    ,coalesce(sum(t1.actl_start_use_crd_lmt) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_actl_start_use_crd_lmt --支行_企业本金启用额度
                    ,row_number() OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) rn_sbr_grp --排序_支行_企业
                    ,sum(CASE
                           WHEN coalesce(t1.ctr_amt, 0) > 0 THEN 1 + T1.efe_crd_cst_ind + T1.efe_dep_cst_ind + T1.efe_chm_cst_ind + T1.efe_insu_cst_ind + T1.efe_fnd_cst_ind + T1.efe_nob_met_cst_ind
                           ELSE 0
                         END) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) pd_hld_qty_sum_sbr --汇总产品持有数_支行
                    ,count(DISTINCT CASE
                                      WHEN t1.ctr_amt > 0 THEN t1.cst_id
                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) tem_grp_cst_num --团队_企业授信客户数统计
                    ,coalesce(sum(t1.mon_acm_prcp_bal_acml) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_mon_acm_prcp_bal_acml --团队_企业本金余额月日均
                    ,coalesce(sum(t1.actl_start_use_crd_lmt) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_actl_start_use_crd_lmt --团队_企业本金启用额度
                    ,row_number() OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) rn_tem_grp --排序_团队_企业
                    ,sum(CASE
                           WHEN coalesce(t1.ctr_amt, 0) > 0 THEN 1 + T1.efe_crd_cst_ind + T1.efe_dep_cst_ind + T1.efe_chm_cst_ind + T1.efe_insu_cst_ind + T1.efe_fnd_cst_ind + T1.efe_nob_met_cst_ind
                           ELSE 0
                         END) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) pd_hld_qty_sum_tem --汇总产品持有数_团队
                    ,count(DISTINCT CASE
                                      WHEN t1.ctr_amt > 0 THEN t1.cst_id
                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) mgr_grp_cst_num --客户经理_企业授信客户数统计
                    ,coalesce(sum(t1.mon_acm_prcp_bal_acml) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_mon_acm_prcp_bal_acml --客户经理_企业本金余额月日均
                    ,coalesce(sum(t1.actl_start_use_crd_lmt) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_actl_start_use_crd_lmt --客户经理_企业本金启用额度
                    ,row_number() OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) rn_mgr_grp --排序_客户经理_企业
                    ,sum(CASE
                           WHEN coalesce(t1.ctr_amt, 0) > 0 THEN 1 + T1.efe_crd_cst_ind + T1.efe_dep_cst_ind + T1.efe_chm_cst_ind + T1.efe_insu_cst_ind + T1.efe_fnd_cst_ind + T1.efe_nob_met_cst_ind
                           ELSE 0
                         END) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) pd_hld_qty_sum_mgr --汇总产品持有数_客户经理
                    ,count(DISTINCT t1.cst_id) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) brc_grp_cst_num2 --分行_企业新增授信客户数统计含信用卡
                    ,count(DISTINCT t1.cst_id) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) sbr_grp_cst_num2 --支行_企业新增授信客户数统计含信用卡
                    ,count(DISTINCT t1.cst_id) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) tem_grp_cst_num2 --团队_企业新增授信客户数统计含信用卡
                    ,count(DISTINCT t1.cst_id) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) mgr_grp_cst_num2 --客户经理_企业新增授信客户数统计含信用卡
                    ,coalesce(t2.brc_grp_card_cst_num, 0) brc_grp_card_cst_num --分行_企业新增信用卡客户数统计
                    ,coalesce(t2.sbr_grp_card_cst_num, 0) sbr_grp_card_cst_num --支行_企业新增信用卡客户数统计
                    ,coalesce(t2.tem_grp_card_cst_num, 0) tem_grp_card_cst_num --团队_企业新增信用卡客户数统计
                    ,coalesce(t2.mgr_grp_card_cst_num, 0) mgr_grp_card_cst_num --客户经理_企业新增信用卡客户数统计
                    ,count(DISTINCT CASE
                                      WHEN coalesce(t1.ctr_amt, 0) = 0 AND t1.efe_crd_cst_ind = '1' THEN t1.cst_id
                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) brc_grp_pure_card_cst_num --分行_企业新增纯信用卡客户数统计
                    ,count(DISTINCT CASE
                                      WHEN coalesce(t1.ctr_amt, 0) = 0 AND t1.efe_crd_cst_ind = '1' THEN t1.cst_id
                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) sbr_grp_pure_card_cst_num --支行_企业新增纯信用卡客户数统计
                    ,count(DISTINCT CASE
                                      WHEN coalesce(t1.ctr_amt, 0) = 0 AND t1.efe_crd_cst_ind = '1' THEN t1.cst_id
                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) tem_grp_pure_card_cst_num --团队_企业新增纯信用卡客户数统计
                    ,count(DISTINCT CASE
                                      WHEN coalesce(t1.ctr_amt, 0) = 0 AND t1.efe_crd_cst_ind = '1' THEN t1.cst_id
                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) mgr_grp_pure_card_cst_num --客户经理_企业新增纯信用卡客户数统计
                    ,coalesce(sum(t1.ctr_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_ctr_bal --分行_企业新增消费贷款余额
                    ,coalesce(sum(t1.ctr_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_ctr_bal --支行_企业新增消费贷款余额
                    ,coalesce(sum(t1.ctr_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_ctr_bal --团队_企业新增消费贷款余额
                    ,coalesce(sum(t1.ctr_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_ctr_bal  --客户经理_企业新增消费贷款余额
                    --20231211update
                    ,coalesce(sum(t1.ctr_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_ctr_fenzi --分行_企业授信金额加权利率分子
                    ,coalesce(sum(t1.ctr_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_ctr_fenmu --分行_企业授信金额加权利率分母
                    ,coalesce(sum(t1.ctr_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_ctr_fenzi --支行_企业授信金额加权利率分子
                    ,coalesce(sum(t1.ctr_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_ctr_fenmu --支行_企业授信金额加权利率分母
                    ,coalesce(sum(t1.ctr_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_ctr_fenzi --团队_企业授信金额加权利率分子
                    ,coalesce(sum(t1.ctr_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_ctr_fenmu --团队_企业授信金额加权利率分母
                    ,coalesce(sum(t1.ctr_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_ctr_fenzi --客户经理_企业授信金额加权利率分子
                    ,coalesce(sum(t1.ctr_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_ctr_fenmu --客户经理_企业授信金额加权利率分母
                    ,coalesce(sum(t1.dbil_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_dbil_fenzi --分行_企业用信金额加权利率分子
                    ,coalesce(sum(t1.dbil_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_dbil_fenmu --分行_企业用信金额加权利率分母
                    ,coalesce(sum(t1.dbil_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_dbil_fenzi --支行_企业用信金额加权利率分子
                    ,coalesce(sum(t1.dbil_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_dbil_fenmu --支行_企业用信金额加权利率分母
                    ,coalesce(sum(t1.dbil_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_dbil_fenzi --团队_企业用信金额加权利率分子
                    ,coalesce(sum(t1.dbil_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_dbil_fenmu --团队_企业用信金额加权利率分母
                    ,coalesce(sum(t1.dbil_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_dbil_fenzi --客户经理_企业用信金额加权利率分子
                    ,coalesce(sum(t1.dbil_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_dbil_fenmu --客户经理_企业用信金额加权利率分母
                    ,coalesce(sum(t1.aum_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_aum --分行_企业aum
                    ,coalesce(sum(t1.aum_bal_add) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_aum_add --分行_企业aum_add
                    ,coalesce(sum(t1.aum_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_aum --支行_企业aum
                    ,coalesce(sum(t1.aum_bal_add) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_aum_add --支行_企业aum_add
                    ,coalesce(sum(t1.aum_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_aum --团队_企业aum
                    ,coalesce(sum(t1.aum_bal_add) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_aum_add --团队_企业aum_add
                    ,coalesce(sum(t1.aum_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_aum --客户经理_企业aum
                    ,coalesce(sum(t1.aum_bal_add) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_aum_add --客户经理_企业aum_add
                    , CASE WHEN t1 . ent_cst_id <> '-' THEN '1'
                    ELSE '0'
                    END as if_jiandang
                    , CASE WHEN t1 . ent_cst_id = '-'  THEN '0'
                    ELSE decode ( t3 . forml_cst_ind , '1' , 1 , '' , 0 )
                    END as forml_cst_ind --是否正式客户标识
                    ,coalesce(sum(t1.ctr_amt) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_ctr_amt --分行_企业新增消费贷款金额
                    ,coalesce(sum(t1.ctr_amt) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_ctr_amt --支行_企业新增消费贷款金额
                    ,coalesce(sum(t1.ctr_amt) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_ctr_amt --团队_企业新增消费贷款金额
                    ,coalesce(sum(t1.ctr_amt) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_ctr_amt --客户经理_企业新增消费贷款金额
					,coalesce(sum(t1.card_cnt) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_card_cnt --分行_企业新增信用卡户数
                    ,coalesce(sum(t1.card_cnt) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_card_cnt --支行_企业新增信用卡户数
                    ,coalesce(sum(t1.card_cnt) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_card_cnt --团队_企业新增信用卡户数
                    ,coalesce(sum(t1.card_cnt) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_card_cnt --客户经理_企业新增信用卡户数
            FROM    lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet2 t1
            LEFT JOIN    (
                             SELECT  cst_id
                                     ,ent_cst_nm
                                     ,brc_org_nm
                                     ,sbr_org_nm
                                     ,tem_org_nm
                                     ,count(DISTINCT cst_id) OVER ( PARTITION BY ent_cst_nm , brc_org_nm ) brc_grp_card_cst_num --分行_企业新增信用卡客户数统计
                                     ,count(DISTINCT cst_id) OVER ( PARTITION BY ent_cst_nm , sbr_org_nm ) sbr_grp_card_cst_num --支行_企业新增信用卡客户数统计
                                     ,count(DISTINCT cst_id) OVER ( PARTITION BY ent_cst_nm , tem_org_nm ) tem_grp_card_cst_num --团队_企业新增信用卡客户数统计
                                     ,count(DISTINCT cst_id) OVER ( PARTITION BY ent_cst_nm , prm_mgr_id ) mgr_grp_card_cst_num --客户经理_企业新增信用卡客户数统计
                             FROM    lab_bigdata_dev.phjrb_ys_qytb_cst_info_crd_tmp_new   --新增信用卡客户信息表
							 where  dt = '20250331'
                         ) t2
            ON      t1.cst_id = t2.cst_id
            AND     t1.brc_org_nm = t2.brc_org_nm
            AND     t1.sbr_org_nm = t2.sbr_org_nm
            AND     t1.tem_org_nm = t2.tem_org_nm
            LEFT JOIN    adm_pub.adm_csm_cbas_mng_inf_dd t3 --客户集市-客户基础-客户管户信息
            ON      t1.ent_cst_id = t3.cst_id
            AND     t3.dt = '20250331'
            WHERE   t1.dt = '20250331'
        ) a;


--SHEET4 企业清单和客户清单合并&mdash;&mdash;修改

--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp PURGE;
--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp
--(
--    cst_id                               STRING  COMMENT '个人客户号'
--    ,cst_nm                              STRING  COMMENT '个人客户名'
--    ,prm_mgr_id                          STRING  COMMENT '主管户客户经理工号'
--    ,prm_mgr_nm                          STRING  COMMENT '主管户客户经理名称'
--    ,tem_org_id                          STRING  COMMENT '团队机构号'
--    ,tem_org_nm                          STRING  COMMENT '团队机构名称'
--    ,sbr_org_nm                          STRING  COMMENT '支行名称'
--    ,brc_org_nm                          STRING  COMMENT '分行名称'
--    ,ent_cst_id                          STRING  COMMENT '企业客户号'
--    ,ent_cst_nm                          STRING  COMMENT '企业客户名'
--    ,prm_mgr_id_ent                      STRING  COMMENT '企业主管户客户经理工号'
--    ,prm_mgr_nm_ent                      STRING  COMMENT '企业主管户客户经理名称'
--    ,tem_org_id_ent                      STRING  COMMENT '企业主管团队机构号'
--    ,tem_org_nm_ent                      STRING  COMMENT '企业主管团队机构名称'
--    ,sbr_org_nm_ent                      STRING  COMMENT '企业主管支行名称'
--    ,brc_org_nm_ent                      STRING  COMMENT '企业主管分行名称'
--    ,ctr_amt                             DECIMAL COMMENT '新增消费贷款合同金额合计'
--    ,actl_start_use_crd_lmt              DECIMAL COMMENT '新增消费贷款启用额度合计'
--    ,ctr_bal                             DECIMAL COMMENT '新增消费贷款合同余额合计'
--    ,mon_acm_prcp_bal_acml               DECIMAL COMMENT '本金余额月日均'
--    ,if_loan_xf                          STRING  COMMENT '是否持有消费贷款'
--    ,efe_crd_cst_ind                     STRING  COMMENT '是否有效信用卡户'
--    ,efe_dep_cst_ind                     STRING  COMMENT '是否有效存款户'
--    ,efe_chm_cst_ind                     STRING  COMMENT '是否有效理财户'
--    ,efe_insu_cst_ind                    STRING  COMMENT '是否有效保险户'
--    ,efe_fnd_cst_ind                     STRING  COMMENT '是否有效基金户'
--    ,efe_nob_met_cst_ind                 STRING  COMMENT '是否有效贵金属户'
--    ,ctr_bal_all                         DECIMAL COMMENT '消费贷款合同余额总计'
--    ,dep_bal                             DECIMAL COMMENT '存款余额'
--    ,chm_bal                             DECIMAL COMMENT '理财余额'
--    ,dep_bal_add                         DECIMAL COMMENT '新增存款余额'
--    ,chm_bal_add                         DECIMAL COMMENT '新增理财余额'
--    ,cst_val_grd                         DECIMAL COMMENT '客户价值等级'
--    ,cprh_contri_cur_year                DECIMAL COMMENT '当年客户价值'
--    ,loan_start_dt                       STRING  COMMENT '最早消费贷款开始日期'
--    ,crd_isu_dt                          STRING  COMMENT '最早信用卡发卡日期'
--    ,dep_opn_dt                          STRING  COMMENT '最早存款开户日期'
--    ,chm_trx_dt                          STRING  COMMENT '最早购买理财日期'
--    ,insu_dt                             STRING  COMMENT '最早保险投保日期'
--    ,fund_dt                             STRING  COMMENT '最早购买基金日期'
--    ,nob_dt                              STRING  COMMENT '最早购买贵金属日期'
--    ,brc_grp_cst_num                     DECIMAL COMMENT '分行_企业授信客户数统计'
--    ,brc_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '分行_企业本金余额月日均'
--    ,brc_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '分行_企业本金启用额度'
--    ,rn_brc_grp                          STRING  COMMENT '排序_分行_企业'
--    ,pd_hld_qty_sum_brc                  STRING  COMMENT '汇总产品持有数_分行'
--    ,sbr_grp_cst_num                     DECIMAL COMMENT '支行_企业授信客户数统计'
--    ,sbr_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '支行_企业本金余额月日均'
--    ,sbr_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '支行_企业本金启用额度'
--    ,rn_sbr_grp                          STRING  COMMENT '排序_支行_企业'
--    ,pd_hld_qty_sum_sbr                  STRING  COMMENT '汇总产品持有数_支行'
--    ,tem_grp_cst_num                     DECIMAL COMMENT '团队_企业授信客户数统计'
--    ,tem_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '团队_企业本金余额月日均'
--    ,tem_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '团队_企业本金启用额度'
--    ,rn_tem_grp                          STRING  COMMENT '排序_团队_企业'
--    ,pd_hld_qty_sum_tem                  STRING  COMMENT '汇总产品持有数_团队'
--    ,mgr_grp_cst_num                     DECIMAL COMMENT '客户经理_企业授信客户数统计'
--    ,mgr_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '客户经理_企业本金余额月日均'
--    ,mgr_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '客户经理_企业本金启用额度'
--    ,rn_mgr_grp                          STRING  COMMENT '排序_客户经理_企业'
--    ,pd_hld_qty_sum_mgr                  STRING  COMMENT '汇总产品持有数_客户经理'
--    ,brc_grp_cst_num2                    DECIMAL COMMENT '分行_企业新增授信客户数统计含信用卡'
--    ,sbr_grp_cst_num2                    DECIMAL COMMENT '支行_企业新增授信客户数统计含信用卡'
--    ,tem_grp_cst_num2                    DECIMAL COMMENT '团队_企业新增授信客户数统计含信用卡'
--    ,mgr_grp_cst_num2                    DECIMAL COMMENT '客户经理_企业新增授信客户数统计含信用卡'
--    ,brc_grp_card_cst_num                DECIMAL COMMENT '分行_企业新增信用卡客户数统计'
--    ,sbr_grp_card_cst_num                DECIMAL COMMENT '支行_企业新增信用卡客户数统计'
--    ,tem_grp_card_cst_num                DECIMAL COMMENT '团队_企业新增信用卡客户数统计'
--    ,mgr_grp_card_cst_num                DECIMAL COMMENT '客户经理_企业新增信用卡客户数统计'
--    ,brc_grp_pure_card_cst_num           DECIMAL COMMENT '分行_企业新增纯信用卡客户数统计'
--    ,sbr_grp_pure_card_cst_num           DECIMAL COMMENT '支行_企业新增纯信用卡客户数统计'
--    ,tem_grp_pure_card_cst_num           DECIMAL COMMENT '团队_企业新增纯信用卡客户数统计'
--    ,mgr_grp_pure_card_cst_num           DECIMAL COMMENT '客户经理_企业新增纯信用卡客户数统计'
--    ,brc_grp_ctr_bal                     DECIMAL COMMENT '分行_企业新增消费贷款余额'
--    ,sbr_grp_ctr_bal                     DECIMAL COMMENT '支行_企业新增消费贷款余额'
--    ,tem_grp_ctr_bal                     DECIMAL COMMENT '团队_企业新增消费贷款余额'
--    ,mgr_grp_ctr_bal                     DECIMAL COMMENT '客户经理_企业新增消费贷款余额'
--    ,yongxin_rate_mth_avg_brc            DECIMAL COMMENT '月日均用信率_分行'
--    ,pd_hld_qty_avg_brc                  DECIMAL COMMENT '客均产品持有数_分行'
--    ,pltbxm_jl_brc                       DECIMAL COMMENT '批量团办项目奖励_分行'
--    ,pd_hld_qty_avg_jcxs_brc             DECIMAL COMMENT '平均产品持有数加成系数_分行'
--    ,yongxin_rate_mth_avg_sbr            DECIMAL COMMENT '月日均用信率_支行'
--    ,pd_hld_qty_avg_sbr                  DECIMAL COMMENT '客均产品持有数_支行'
--    ,pltbxm_jl_sbr                       DECIMAL COMMENT '批量团办项目奖励_支行'
--    ,pd_hld_qty_avg_jcxs_sbr             DECIMAL COMMENT '平均产品持有数加成系数_支行'
--    ,yongxin_rate_mth_avg_tem            DECIMAL COMMENT '月日均用信率_团队'
--    ,pd_hld_qty_avg_tem                  DECIMAL COMMENT '客均产品持有数_团队'
--    ,pltbxm_jl_tem                       DECIMAL COMMENT '批量团办项目奖励_团队'
--    ,pd_hld_qty_avg_jcxs_tem             DECIMAL COMMENT '平均产品持有数加成系数_团队'
--    ,yongxin_rate_mth_avg_mgr            DECIMAL COMMENT '月日均用信率_客户经理'
--    ,pd_hld_qty_avg_mgr                  DECIMAL COMMENT '客均产品持有数_客户经理'
--    ,pltbxm_jl_mgr                       DECIMAL COMMENT '批量团办项目奖励_客户经理'
--    ,pd_hld_qty_avg_jcxs_mgr             DECIMAL COMMENT '平均产品持有数加成系数_客户经理'
--    ,brc_ctr_fenzi                       DECIMAL COMMENT '分行_企业授信金额加权利率分子'
--    ,brc_ctr_fenmu                       DECIMAL COMMENT '分行_企业授信金额加权利率分母'
--    ,sbr_ctr_fenzi                       DECIMAL COMMENT '支行_企业授信金额加权利率分子'
--    ,sbr_ctr_fenmu                       DECIMAL COMMENT '支行_企业授信金额加权利率分母'
--    ,tem_ctr_fenzi                       DECIMAL COMMENT '团队_企业授信金额加权利率分子'
--    ,tem_ctr_fenmu                       DECIMAL COMMENT '团队_企业授信金额加权利率分母'
--    ,mgr_ctr_fenzi                       DECIMAL COMMENT '客户经理_企业授信金额加权利率分子'
--    ,mgr_ctr_fenmu                       DECIMAL COMMENT '客户经理_企业授信金额加权利率分母'
--    ,brc_dbil_fenzi                      DECIMAL COMMENT '分行_企业用信金额加权利率分子'
--    ,brc_dbil_fenmu                      DECIMAL COMMENT '分行_企业用信金额加权利率分母'
--    ,sbr_dbil_fenzi                      DECIMAL COMMENT '支行_企业用信金额加权利率分子'
--    ,sbr_dbil_fenmu                      DECIMAL COMMENT '支行_企业用信金额加权利率分母'
--    ,tem_dbil_fenzi                      DECIMAL COMMENT '团队_企业用信金额加权利率分子'
--    ,tem_dbil_fenmu                      DECIMAL COMMENT '团队_企业用信金额加权利率分母'
--    ,mgr_dbil_fenzi                      DECIMAL COMMENT '客户经理_企业用信金额加权利率分子'
--    ,mgr_dbil_fenmu                      DECIMAL COMMENT '客户经理_企业用信金额加权利率分母'
--    ,brc_aum                             DECIMAL COMMENT '分行_企业aum'
--    ,brc_aum_add                         DECIMAL COMMENT '分行_企业aum_add'
--    ,sbr_aum                             DECIMAL COMMENT '支行_企业aum'
--    ,sbr_aum_add                         DECIMAL COMMENT '支行_企业aum_add'
--    ,tem_aum                             DECIMAL COMMENT '团队_企业aum'
--    ,tem_aum_add                         DECIMAL COMMENT '团队_企业aum_add'
--    ,mgr_aum                             DECIMAL COMMENT '客户经理_企业aum'
--    ,mgr_aum_add                         DECIMAL COMMENT '客户经理_企业aum_add'
--    ,if_jiandang                         STRING  COMMENT '是否建档'
--    ,forml_cst_ind                       STRING  COMMENT '正式客户标识'
--    ,brc_grp_ctr_amt                     DECIMAL COMMENT '分行_企业新增消费贷款金额'
--    ,sbr_grp_ctr_amt                     DECIMAL COMMENT '支行_企业新增消费贷款金额'
--    ,tem_grp_ctr_amt                     DECIMAL COMMENT '团队_企业新增消费贷款金额'
--    ,mgr_grp_ctr_amt                     DECIMAL COMMENT '客户经理_企业新增消费贷款金额'
--    ,brc_grp_loan_dep_cst_num            DECIMAL COMMENT '分行_企业新增信贷客户中存款客户数统计'
--    ,sbr_grp_loan_dep_cst_num            DECIMAL COMMENT '支行_企业新增信贷客户中存款客户数统计'
--    ,tem_grp_loan_dep_cst_num            DECIMAL COMMENT '团队_企业新增信贷客户中存款客户数统计'
--    ,mgr_grp_loan_dep_cst_num            DECIMAL COMMENT '客户经理_企业新增信贷客户中存款客户数统计'
--    ,brc_grp_loan_chm_cst_num            DECIMAL COMMENT '分行_企业新增信贷客户中理财客户数统计'
--    ,sbr_grp_loan_chm_cst_num            DECIMAL COMMENT '支行_企业新增信贷客户中理财客户数统计'
--    ,tem_grp_loan_chm_cst_num            DECIMAL COMMENT '团队_企业新增信贷客户中理财客户数统计'
--    ,mgr_grp_loan_chm_cst_num            DECIMAL COMMENT '客户经理_企业新增信贷客户中理财客户数统计'
--    ,brc_grp_loan_insu_cst_num           DECIMAL COMMENT '分行_企业新增信贷客户中保险客户数统计'
--    ,sbr_grp_loan_insu_cst_num           DECIMAL COMMENT '支行_企业新增信贷客户中保险客户数统计'
--    ,tem_grp_loan_insu_cst_num           DECIMAL COMMENT '团队_企业新增信贷客户中保险客户数统计'
--    ,mgr_grp_loan_insu_cst_num           DECIMAL COMMENT '客户经理_企业新增信贷客户中保险客户数统计'
--    ,brc_grp_loan_fnd_cst_num            DECIMAL COMMENT '分行_企业新增信贷客户中基金客户数统计'
--    ,sbr_grp_loan_fnd_cst_num            DECIMAL COMMENT '支行_企业新增信贷客户中基金客户数统计'
--    ,tem_grp_loan_fnd_cst_num            DECIMAL COMMENT '团队_企业新增信贷客户中基金客户数统计'
--    ,mgr_grp_loan_fnd_cst_num            DECIMAL COMMENT '客户经理_企业新增信贷客户中基金客户数统计'
--    ,brc_grp_loan_nob_met_cst_num        DECIMAL COMMENT '分行_企业新增信贷客户中贵金属客户数统计'
--    ,sbr_grp_loan_nob_met_cst_num        DECIMAL COMMENT '支行_企业新增信贷客户中贵金属客户数统计'
--    ,tem_grp_loan_nob_met_cst_num        DECIMAL COMMENT '团队_企业新增信贷客户中贵金属客户数统计'
--    ,mgr_grp_loan_nob_met_cst_num        DECIMAL COMMENT '客户经理_企业新增信贷客户中贵金属客户数统计'
--    ,brc_org_id                          STRING  COMMENT '分行层级机构编号'
--    ,sbr_org_id                          STRING  COMMENT '支行层级机构编号'
--)
--COMMENT
--'企业团办_SHEET4-企业清单2'
--PARTITIONED BY
--(
--    DT STRING COMMENT '日期分区'
--);


-----新增表字段
-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet4_tmp add  columns
--(grp_org_id               STRING  COMMENT '集团机构编号'
--,cpy_org_id               STRING  COMMENT '法人机构编号'
--);


-----新增表字段
-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet4_tmp add  columns
--(brc_grp_card_cnt               STRING  COMMENT '分行_企业新增信用卡户数'
--,sbr_grp_card_cnt               STRING  COMMENT '支行_企业新增信用卡户数'
--,tem_grp_card_cnt               STRING  COMMENT '团队_企业新增信用卡户数'
--,mgr_grp_card_cnt               STRING  COMMENT '客户经理_企业新增信用卡户数'
--);


INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp PARTITION (DT = '20250331')
SELECT  cst_id
        ,cst_nm
        ,prm_mgr_id
        ,prm_mgr_nm
        ,tem_org_id
        ,tem_org_nm
        ,sbr_org_nm
        ,brc_org_nm
        ,ent_cst_id
        ,ent_cst_nm
        ,prm_mgr_id_ent
        ,prm_mgr_nm_ent
        ,tem_org_id_ent
        ,tem_org_nm_ent
        ,sbr_org_nm_ent
        ,brc_org_nm_ent
        ,ctr_amt
        ,actl_start_use_crd_lmt
        ,ctr_bal
        ,mon_acm_prcp_bal_acml
        ,if_loan_xf
        ,efe_crd_cst_ind
        ,efe_dep_cst_ind
        ,efe_chm_cst_ind
        ,efe_insu_cst_ind
        ,efe_fnd_cst_ind
        ,efe_nob_met_cst_ind
        ,ctr_bal_all
        ,dep_bal
        ,chm_bal
        ,dep_bal_add
        ,chm_bal_add
        ,cst_val_grd
        ,cprh_contri_cur_year
        ,loan_start_dt
        ,crd_isu_dt
        ,dep_opn_dt
        ,chm_trx_dt
        ,insu_dt
        ,fund_dt
        ,nob_dt
        ,brc_grp_cst_num
        ,brc_grp_mon_acm_prcp_bal_acml
        ,brc_grp_actl_start_use_crd_lmt
        ,rn_brc_grp
        ,pd_hld_qty_sum_brc
        ,sbr_grp_cst_num                 --支行_企业授信客户数统计
        ,sbr_grp_mon_acm_prcp_bal_acml   --支行_企业本金余额月日均
        ,sbr_grp_actl_start_use_crd_lmt  --支行_企业本金启用额度
        ,rn_sbr_grp                      --排序_支行_企业
        ,pd_hld_qty_sum_sbr              --汇总产品持有数_支行
        ,tem_grp_cst_num                 --团队_企业授信客户数统计
        ,tem_grp_mon_acm_prcp_bal_acml   --团队_企业本金余额月日均
        ,tem_grp_actl_start_use_crd_lmt  --团队_企业本金启用额度
        ,rn_tem_grp                      --排序_团队_企业
        ,pd_hld_qty_sum_tem              --汇总产品持有数_团队
        ,mgr_grp_cst_num                 --客户经理_企业授信客户数统计
        ,mgr_grp_mon_acm_prcp_bal_acml   --客户经理_企业本金余额月日均
        ,mgr_grp_actl_start_use_crd_lmt  --客户经理_企业本金启用额度
        ,rn_mgr_grp                      --排序_客户经理_企业
        ,pd_hld_qty_sum_mgr              --汇总产品持有数_客户经理
        ,brc_grp_cst_num2                --分行_企业新增授信客户数统计含信用卡
        ,sbr_grp_cst_num2                --支行_企业新增授信客户数统计含信用卡
        ,tem_grp_cst_num2                --团队_企业新增授信客户数统计含信用卡
        ,mgr_grp_cst_num2                --客户经理_企业新增授信客户数统计含信用卡
        ,brc_grp_card_cst_num            --分行_企业新增信用卡客户数统计
        ,sbr_grp_card_cst_num            --支行_企业新增信用卡客户数统计
        ,tem_grp_card_cst_num            --团队_企业新增信用卡客户数统计
        ,mgr_grp_card_cst_num            --客户经理_企业新增信用卡客户数统计
        ,brc_grp_pure_card_cst_num       --分行_企业新增纯信用卡客户数统计
        ,sbr_grp_pure_card_cst_num       --支行_企业新增纯信用卡客户数统计
        ,tem_grp_pure_card_cst_num       --团队_企业新增纯信用卡客户数统计
        ,mgr_grp_pure_card_cst_num       --客户经理_企业新增纯信用卡客户数统计
        ,brc_grp_ctr_bal                 --分行_企业新增消费贷款余额
        ,sbr_grp_ctr_bal                 --支行_企业新增消费贷款余额
        ,tem_grp_ctr_bal                 --团队_企业新增消费贷款余额
        ,mgr_grp_ctr_bal                 --客户经理_企业新增消费贷款余额
        ,CASE
           WHEN a.brc_grp_actl_start_use_crd_lmt > 0 THEN a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt
           ELSE 0
         END yongxin_rate_mth_avg_brc    --月日均用信率_分行
        ,CASE
           WHEN a.brc_grp_cst_num > 0 THEN a.pd_hld_qty_sum_brc / a.brc_grp_cst_num
           ELSE 0
         END pd_hld_qty_avg_brc          --客均产品持有数_分行
        ,CASE
		   WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml < 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1  THEN 200
           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.10  THEN 500
           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.30  THEN 800
           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.50  THEN 1000
           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1    THEN 1200

		   WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml < 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1    THEN 400
           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.10 THEN 800
           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.30 THEN 1500
           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.50 THEN 2000 --1011update
           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1   THEN 2400 --1011update

		   WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml < 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1 THEN 600
           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.10 THEN 1500
           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.30 THEN 2500
           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.50 THEN 4000 --1011update
           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1   THEN 4500 --1011update

		   WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml < 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1                               THEN 800
           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.10                            THEN 1800
           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.30                            THEN 3500
           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.50                            THEN 6000 --1011update
           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1                              THEN 7000 --1011update
           ELSE 0
         END  pltbxm_jl_brc --批量团办项目奖励_分行
        ,CASE
           WHEN a.brc_grp_cst_num > 0 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num >= 1 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num < 1.2   THEN 1
           WHEN a.brc_grp_cst_num > 0 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num >= 1.2 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num < 1.5 THEN 1.2
           WHEN a.brc_grp_cst_num > 0 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num >= 1.5 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num < 2   THEN 1.6
           WHEN a.brc_grp_cst_num > 0 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num >= 2                                                      THEN 2
           ELSE 0
         END pd_hld_qty_avg_jcxs_brc  --平均产品持有数加成系数_分行
        ,CASE
           WHEN a.sbr_grp_actl_start_use_crd_lmt > 0 THEN a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt
           ELSE 0
         END  yongxin_rate_mth_avg_sbr   --月日均用信率_支行
        ,CASE
           WHEN a.sbr_grp_cst_num > 0 THEN a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num
           ELSE 0
         END pd_hld_qty_avg_sbr      --客均产品持有数_支行
        ,CASE
		   WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml < 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1  THEN 200
           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.10  THEN 500
           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.30  THEN 800
           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.50  THEN 1000
           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1    THEN 1200

		   WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml < 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1 THEN 400
           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.10 THEN 800
           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.30 THEN 1500
           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.50 THEN 2000
           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1   THEN 2400

		   WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml < 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1 THEN 600
           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.10 THEN 1500
           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.30 THEN 2500
           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.50 THEN 4000
           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1   THEN 4500

		   WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml < 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1                            THEN 800
           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.10                            THEN 1800
           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.30                            THEN 3500
           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.50                            THEN 6000
           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1                              THEN 7000
           ELSE 0
         END pltbxm_jl_sbr            --批量团办项目奖励_支行
        ,CASE
           WHEN a.sbr_grp_cst_num > 0 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num >= 1 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num < 1.2   THEN 1
           WHEN a.sbr_grp_cst_num > 0 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num >= 1.2 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num < 1.5 THEN 1.2
           WHEN a.sbr_grp_cst_num > 0 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num >= 1.5 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num < 2   THEN 1.6
           WHEN a.sbr_grp_cst_num > 0 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num >= 2                                                      THEN 2
           ELSE 0
         END pd_hld_qty_avg_jcxs_sbr  --平均产品持有数加成系数_支行
        ,CASE
           WHEN a.tem_grp_actl_start_use_crd_lmt > 0 THEN a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt
           ELSE 0
         END yongxin_rate_mth_avg_tem    --月日均用信率_团队
        ,CASE
           WHEN a.tem_grp_cst_num > 0 THEN a.pd_hld_qty_sum_tem / a.tem_grp_cst_num
           ELSE 0
         END pd_hld_qty_avg_tem          --客均产品持有数_团队
        ,CASE
		   WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml < 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1  THEN 200
           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.10  THEN 500
           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.30  THEN 800
           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.50  THEN 1000
           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1    THEN 1200

           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml < 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1    THEN 400
           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.10 THEN 800
           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.30 THEN 1500
           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.50 THEN 2000
           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1   THEN 2400

           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml < 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1    THEN 600
           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.10 THEN 1500
           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.30 THEN 2500
           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.50 THEN 4000
           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1   THEN 4500
           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml < 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1                               THEN 800
           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.10                            THEN 1800
           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.30                            THEN 3500
           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.50                            THEN 6000
           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1                              THEN 7000
           ELSE 0
         END pltbxm_jl_tem        --批量团办项目奖励_团队
        ,CASE
           WHEN a.tem_grp_cst_num > 0 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num >= 1 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num < 1.2   THEN 1
           WHEN a.tem_grp_cst_num > 0 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num >= 1.2 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num < 1.5 THEN 1.2
           WHEN a.tem_grp_cst_num > 0 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num >= 1.5 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num < 2   THEN 1.6
           WHEN a.tem_grp_cst_num > 0 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num >= 2                                                      THEN 2
           ELSE 0
         END pd_hld_qty_avg_jcxs_tem --平均产品持有数加成系数_团队
        ,CASE
           WHEN a.mgr_grp_actl_start_use_crd_lmt > 0 THEN a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt
           ELSE 0
         END yongxin_rate_mth_avg_mgr    --月日均用信率_客户经理
        ,CASE
           WHEN a.mgr_grp_cst_num > 0 THEN a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num
           ELSE 0
         END pd_hld_qty_avg_mgr      --客均产品持有数_客户经理
        ,CASE
           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml < 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1     THEN 200
           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.10  THEN 500
           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.30  THEN 800
           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.50  THEN 1000
           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1    THEN 1200

           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml < 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1    THEN 400
           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.10 THEN 800
           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.30 THEN 1500
           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.50 THEN 2000
           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1   THEN 2400

           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml < 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1    THEN 600
           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.10 THEN 1500
           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.30 THEN 2500
           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.50 THEN 4000
           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1   THEN 4500

           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml < 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1                               THEN 800
           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.10                            THEN 1800
           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.30                            THEN 3500
           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.50                            THEN 6000
           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1                               THEN 7000
           ELSE 0
         END pltbxm_jl_mgr --批量团办项目奖励_客户经理
        ,CASE
           WHEN a.mgr_grp_cst_num > 0 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num >= 1 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num < 1.2   THEN 1
           WHEN a.mgr_grp_cst_num > 0 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num >= 1.2 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num < 1.5 THEN 1.2
           WHEN a.mgr_grp_cst_num > 0 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num >= 1.5 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num < 2   THEN 1.6
           WHEN a.mgr_grp_cst_num > 0 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num >= 2                                                      THEN 2
           ELSE 0
         END pd_hld_qty_avg_jcxs_mgr --平均产品持有数加成系数_客户经理
        ,brc_ctr_fenzi --分行_企业授信金额加权利率分子
        ,brc_ctr_fenmu --分行_企业授信金额加权利率分母
        ,sbr_ctr_fenzi --支行_企业授信金额加权利率分子
        ,sbr_ctr_fenmu --支行_企业授信金额加权利率分母
        ,tem_ctr_fenzi --团队_企业授信金额加权利率分子
        ,tem_ctr_fenmu --团队_企业授信金额加权利率分母
        ,mgr_ctr_fenzi --客户经理_企业授信金额加权利率分子
        ,mgr_ctr_fenmu --客户经理_企业授信金额加权利率分母
        ,brc_dbil_fenzi --分行_企业用信金额加权利率分子
        ,brc_dbil_fenmu --分行_企业用信金额加权利率分母
        ,sbr_dbil_fenzi --支行_企业用信金额加权利率分子
        ,sbr_dbil_fenmu --支行_企业用信金额加权利率分母
        ,tem_dbil_fenzi --团队_企业用信金额加权利率分子
        ,tem_dbil_fenmu --团队_企业用信金额加权利率分母
        ,mgr_dbil_fenzi --客户经理_企业用信金额加权利率分子
        ,mgr_dbil_fenmu --客户经理_企业用信金额加权利率分母
        ,brc_aum --分行_企业aum
        ,brc_aum_add --分行_企业aum_add
        ,sbr_aum --支行_企业aum
        ,sbr_aum_add --支行_企业aum_add
        ,tem_aum --团队_企业aum
        ,tem_aum_add --团队_企业aum_add
        ,mgr_aum --客户经理_企业aum
        ,mgr_aum_add --客户经理_企业aum_add
        ,if_jiandang    --是否建档客户
        ,forml_cst_ind  --是否正式客户标识
        ,brc_grp_ctr_amt                            --分行_企业新增消费贷款金额
        ,sbr_grp_ctr_amt                            --支行_企业新增消费贷款金额
        ,tem_grp_ctr_amt                            --团队_企业新增消费贷款金额
        ,mgr_grp_ctr_amt                            --客户经理_企业新增消费贷款金额
		,brc_grp_loan_dep_cst_num                   --分行_企业新增信贷客户中存款客户数统计
		,sbr_grp_loan_dep_cst_num                   --支行_企业新增信贷客户中存款客户数统计
		,tem_grp_loan_dep_cst_num                   --团队_企业新增信贷客户中存款客户数统计
		,mgr_grp_loan_dep_cst_num                   --客户经理_企业新增信贷客户中存款客户数统计
		,brc_grp_loan_chm_cst_num                   --分行_企业新增信贷客户中理财客户数统计
		,sbr_grp_loan_chm_cst_num                   --支行_企业新增信贷客户中理财客户数统计
		,tem_grp_loan_chm_cst_num                   --团队_企业新增信贷客户中理财客户数统计
		,mgr_grp_loan_chm_cst_num                   --客户经理_企业新增信贷客户中理财客户数统计
		,brc_grp_loan_insu_cst_num                  --分行_企业新增信贷客户中保险客户数统计
		,sbr_grp_loan_insu_cst_num                  --支行_企业新增信贷客户中保险客户数统计
		,tem_grp_loan_insu_cst_num                  --团队_企业新增信贷客户中保险客户数统计
		,mgr_grp_loan_insu_cst_num                  --客户经理_企业新增信贷客户中保险客户数统计
		,brc_grp_loan_fnd_cst_num                   --分行_企业新增信贷客户中基金客户数统计
		,sbr_grp_loan_fnd_cst_num                   --支行_企业新增信贷客户中基金客户数统计
		,tem_grp_loan_fnd_cst_num                   --团队_企业新增信贷客户中基金客户数统计
		,mgr_grp_loan_fnd_cst_num                   --客户经理_企业新增信贷客户中基金客户数统计
		,brc_grp_loan_nob_met_cst_num               --分行_企业新增信贷客户中贵金属客户数统计
		,sbr_grp_loan_nob_met_cst_num               --支行_企业新增信贷客户中贵金属客户数统计
		,tem_grp_loan_nob_met_cst_num               --团队_企业新增信贷客户中贵金属客户数统计
		,mgr_grp_loan_nob_met_cst_num               --客户经理_企业新增信贷客户中贵金属客户数统计
		,brc_org_id               --分行层级机构编号
        ,sbr_org_id               --支行层级机构编号
		,grp_org_id               --集团机构编号
		,cpy_org_id               --法人机构编号
		,brc_grp_card_cnt         --分行_企业新增信用卡户数
		,sbr_grp_card_cnt         --支行_企业新增信用卡户数
		,tem_grp_card_cnt         --团队_企业新增信用卡户数
		,mgr_grp_card_cnt         --客户经理_企业新增信用卡户数
FROM    (
            SELECT  T1.cst_id
                    ,T1.cst_nm
                    ,T1.prm_mgr_id
                    ,T1.prm_mgr_nm
                    ,T1.tem_org_id
                    ,T1.tem_org_nm
                    ,T1.sbr_org_nm
                    ,T1.brc_org_nm
					,T1.brc_org_id               --分行层级机构编号
                    ,T1.sbr_org_id               --支行层级机构编号
					,T1.grp_org_id               --集团机构编号
		            ,T1.cpy_org_id               --法人机构编号
                    ,T1.ent_cst_id
                    ,T1.ent_cst_nm
                    ,T1.prm_mgr_id_ent
                    ,T1.prm_mgr_nm_ent
                    ,T1.tem_org_id_ent
                    ,T1.tem_org_nm_ent
                    ,T1.sbr_org_nm_ent
                    ,T1.brc_org_nm_ent
                    ,T1.ctr_amt
                    ,T1.actl_start_use_crd_lmt
                    ,T1.ctr_bal
                    ,T1.mon_acm_prcp_bal_acml
                    ,T1.if_loan_xf
                    ,T1.efe_crd_cst_ind
                    ,T1.efe_dep_cst_ind
                    ,T1.efe_chm_cst_ind
                    ,T1.efe_insu_cst_ind
                    ,T1.efe_fnd_cst_ind
                    ,T1.efe_nob_met_cst_ind
                    ,T1.ctr_bal_all
                    ,T1.dep_bal
                    ,T1.chm_bal
                    ,T1.dep_bal_add
                    ,T1.chm_bal_add
                    ,T1.cst_val_grd
                    ,T1.cprh_contri_cur_year
                    ,T1.loan_start_dt
                    ,T1.crd_isu_dt
                    ,T1.dep_opn_dt
                    ,T1.chm_trx_dt
                    ,T1.insu_dt
                    ,T1.fund_dt
                    ,T1.nob_dt
                    ,count(DISTINCT CASE
                                      WHEN t1.ctr_amt > 0 THEN t1.cst_id
                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) brc_grp_cst_num --分行_企业授信客户数统计
                    ,coalesce(sum(t1.mon_acm_prcp_bal_acml) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_mon_acm_prcp_bal_acml --分行_企业本金余额月日均
                    ,coalesce(sum(t1.actl_start_use_crd_lmt) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_actl_start_use_crd_lmt --分行_企业本金启用额度
                    ,row_number() OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) rn_brc_grp --排序_分行_企业
                    ,sum(CASE
                           WHEN coalesce(t1.ctr_amt, 0) > 0 THEN 1 + T1.efe_crd_cst_ind + T1.efe_dep_cst_ind + T1.efe_chm_cst_ind + T1.efe_insu_cst_ind + T1.efe_fnd_cst_ind + T1.efe_nob_met_cst_ind
                           ELSE 0
                         END) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) pd_hld_qty_sum_brc --汇总产品持有数_分行
                    ,count(DISTINCT CASE
                                      WHEN t1.ctr_amt > 0 THEN t1.cst_id
                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) sbr_grp_cst_num --支行_企业授信客户数统计
                    ,coalesce(sum(t1.mon_acm_prcp_bal_acml) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_mon_acm_prcp_bal_acml --支行_企业本金余额月日均
                    ,coalesce(sum(t1.actl_start_use_crd_lmt) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_actl_start_use_crd_lmt --支行_企业本金启用额度
                    ,row_number() OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) rn_sbr_grp --排序_支行_企业
                    ,sum(CASE
                           WHEN coalesce(t1.ctr_amt, 0) > 0 THEN 1 + T1.efe_crd_cst_ind + T1.efe_dep_cst_ind + T1.efe_chm_cst_ind + T1.efe_insu_cst_ind + T1.efe_fnd_cst_ind + T1.efe_nob_met_cst_ind
                           ELSE 0
                         END) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) pd_hld_qty_sum_sbr --汇总产品持有数_支行
                    ,count(DISTINCT CASE
                                      WHEN t1.ctr_amt > 0 THEN t1.cst_id
                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) tem_grp_cst_num --团队_企业授信客户数统计
                    ,coalesce(sum(t1.mon_acm_prcp_bal_acml) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_mon_acm_prcp_bal_acml --团队_企业本金余额月日均
                    ,coalesce(sum(t1.actl_start_use_crd_lmt) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_actl_start_use_crd_lmt --团队_企业本金启用额度
                    ,row_number() OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) rn_tem_grp --排序_团队_企业
                    ,sum(CASE
                           WHEN coalesce(t1.ctr_amt, 0) > 0 THEN 1 + T1.efe_crd_cst_ind + T1.efe_dep_cst_ind + T1.efe_chm_cst_ind + T1.efe_insu_cst_ind + T1.efe_fnd_cst_ind + T1.efe_nob_met_cst_ind
                           ELSE 0
                         END) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) pd_hld_qty_sum_tem --汇总产品持有数_团队
                    ,count(DISTINCT CASE
                                      WHEN t1.ctr_amt > 0 THEN t1.cst_id
                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) mgr_grp_cst_num --客户经理_企业授信客户数统计
                    ,coalesce(sum(t1.mon_acm_prcp_bal_acml) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_mon_acm_prcp_bal_acml --客户经理_企业本金余额月日均
                    ,coalesce(sum(t1.actl_start_use_crd_lmt) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_actl_start_use_crd_lmt --客户经理_企业本金启用额度
                    ,row_number() OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) rn_mgr_grp --排序_客户经理_企业
                    ,sum(CASE
                           WHEN coalesce(t1.ctr_amt, 0) > 0 THEN 1 + T1.efe_crd_cst_ind + T1.efe_dep_cst_ind + T1.efe_chm_cst_ind + T1.efe_insu_cst_ind + T1.efe_fnd_cst_ind + T1.efe_nob_met_cst_ind
                           ELSE 0
                         END) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) pd_hld_qty_sum_mgr --汇总产品持有数_客户经理
                    ,count(DISTINCT t1.cst_id) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) brc_grp_cst_num2 --分行_企业新增授信客户数统计含信用卡
                    ,count(DISTINCT t1.cst_id) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) sbr_grp_cst_num2 --支行_企业新增授信客户数统计含信用卡
                    ,count(DISTINCT t1.cst_id) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) tem_grp_cst_num2 --团队_企业新增授信客户数统计含信用卡
                    ,count(DISTINCT t1.cst_id) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) mgr_grp_cst_num2 --客户经理_企业新增授信客户数统计含信用卡
                    ,coalesce(t2.brc_grp_card_cst_num, 0) brc_grp_card_cst_num --分行_企业新增信用卡客户数统计
                    ,coalesce(t2.sbr_grp_card_cst_num, 0) sbr_grp_card_cst_num --支行_企业新增信用卡客户数统计
                    ,coalesce(t2.tem_grp_card_cst_num, 0) tem_grp_card_cst_num --团队_企业新增信用卡客户数统计
                    ,coalesce(t2.mgr_grp_card_cst_num, 0) mgr_grp_card_cst_num --客户经理_企业新增信用卡客户数统计
                    ,count(DISTINCT CASE
                                      WHEN coalesce(t1.ctr_amt, 0) = 0 AND t1.efe_crd_cst_ind = '1' THEN t1.cst_id
                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) brc_grp_pure_card_cst_num --分行_企业新增纯信用卡客户数统计
                    ,count(DISTINCT CASE
                                      WHEN coalesce(t1.ctr_amt, 0) = 0 AND t1.efe_crd_cst_ind = '1' THEN t1.cst_id
                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) sbr_grp_pure_card_cst_num --支行_企业新增纯信用卡客户数统计
                    ,count(DISTINCT CASE
                                      WHEN coalesce(t1.ctr_amt, 0) = 0 AND t1.efe_crd_cst_ind = '1' THEN t1.cst_id
                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) tem_grp_pure_card_cst_num --团队_企业新增纯信用卡客户数统计
                    ,count(DISTINCT CASE
                                      WHEN coalesce(t1.ctr_amt, 0) = 0 AND t1.efe_crd_cst_ind = '1' THEN t1.cst_id
                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) mgr_grp_pure_card_cst_num --客户经理_企业新增纯信用卡客户数统计
                    ,coalesce(sum(t1.ctr_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_ctr_bal  --分行_企业新增消费贷款余额
                    ,coalesce(sum(t1.ctr_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_ctr_bal  --支行_企业新增消费贷款余额
                    ,coalesce(sum(t1.ctr_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_ctr_bal  --团队_企业新增消费贷款余额
                    ,coalesce(sum(t1.ctr_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_ctr_bal  --客户经理_企业新增消费贷款余额
                    --20231211update
                    ,coalesce(sum(t1.ctr_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_ctr_fenzi --分行_企业授信金额加权利率分子
                    ,coalesce(sum(t1.ctr_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_ctr_fenmu --分行_企业授信金额加权利率分母
                    ,coalesce(sum(t1.ctr_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_ctr_fenzi --支行_企业授信金额加权利率分子
                    ,coalesce(sum(t1.ctr_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_ctr_fenmu --支行_企业授信金额加权利率分母
                    ,coalesce(sum(t1.ctr_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_ctr_fenzi --团队_企业授信金额加权利率分子
                    ,coalesce(sum(t1.ctr_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_ctr_fenmu --团队_企业授信金额加权利率分母
                    ,coalesce(sum(t1.ctr_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_ctr_fenzi --客户经理_企业授信金额加权利率分子
                    ,coalesce(sum(t1.ctr_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_ctr_fenmu --客户经理_企业授信金额加权利率分母
                    ,coalesce(sum(t1.dbil_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_dbil_fenzi --分行_企业用信金额加权利率分子
                    ,coalesce(sum(t1.dbil_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_dbil_fenmu --分行_企业用信金额加权利率分母
                    ,coalesce(sum(t1.dbil_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_dbil_fenzi --支行_企业用信金额加权利率分子
                    ,coalesce(sum(t1.dbil_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_dbil_fenmu --支行_企业用信金额加权利率分母
                    ,coalesce(sum(t1.dbil_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_dbil_fenzi --团队_企业用信金额加权利率分子
                    ,coalesce(sum(t1.dbil_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_dbil_fenmu --团队_企业用信金额加权利率分母
                    ,coalesce(sum(t1.dbil_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_dbil_fenzi --客户经理_企业用信金额加权利率分子
                    ,coalesce(sum(t1.dbil_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_dbil_fenmu --客户经理_企业用信金额加权利率分母
                    ,coalesce(sum(t1.aum_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0)     brc_aum     --分行_企业aum
                    ,coalesce(sum(t1.aum_bal_add) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_aum_add --分行_企业aum_add
                    ,coalesce(sum(t1.aum_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0)     sbr_aum     --支行_企业aum
                    ,coalesce(sum(t1.aum_bal_add) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_aum_add --支行_企业aum_add
                    ,coalesce(sum(t1.aum_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0)     tem_aum     --团队_企业aum
                    ,coalesce(sum(t1.aum_bal_add) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_aum_add --团队_企业aum_add
                    ,coalesce(sum(t1.aum_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0)     mgr_aum     --客户经理_企业aum
                    ,coalesce(sum(t1.aum_bal_add) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_aum_add --客户经理_企业aum_add
                    ,CASE
                       WHEN t1.ent_cst_id <> '-' THEN '1'
                       ELSE '0'
                     END if_jiandang --是否建档客户
                    ,CASE
                       WHEN t1.ent_cst_id = '-' THEN '0'
                       ELSE decode(t3.forml_cst_ind, '1', 1, '', 0)
                     END forml_cst_ind  --是否正式客户标识
                    --20231226update
                    ,coalesce(sum(t1.ctr_amt) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_ctr_amt --分行_企业新增消费贷款金额
                    ,coalesce(sum(t1.ctr_amt) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_ctr_amt --支行_企业新增消费贷款金额
                    ,coalesce(sum(t1.ctr_amt) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_ctr_amt --团队_企业新增消费贷款金额
                    ,coalesce(sum(t1.ctr_amt) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_ctr_amt --客户经理_企业新增消费贷款金额
					,coalesce(sum(t1.card_cnt) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_card_cnt --分行_企业新增信用卡户数
                    ,coalesce(sum(t1.card_cnt) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_card_cnt --支行_企业新增信用卡户数
                    ,coalesce(sum(t1.card_cnt) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_card_cnt --团队_企业新增信用卡户数
                    ,coalesce(sum(t1.card_cnt) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_card_cnt --客户经理_企业新增信用卡户数
					,coalesce(t4.brc_grp_loan_dep_cst_num,0)         brc_grp_loan_dep_cst_num                --分行_企业新增信贷客户中存款客户数统计
					,coalesce(t4.sbr_grp_loan_dep_cst_num,0)         sbr_grp_loan_dep_cst_num                --支行_企业新增信贷客户中存款客户数统计
					,coalesce(t4.tem_grp_loan_dep_cst_num,0)         tem_grp_loan_dep_cst_num                --团队_企业新增信贷客户中存款客户数统计
					,coalesce(t4.mgr_grp_loan_dep_cst_num,0)         mgr_grp_loan_dep_cst_num                --客户经理_企业新增信贷客户中存款客户数统计
					,coalesce(t4.brc_grp_loan_chm_cst_num,0)         brc_grp_loan_chm_cst_num                --分行_企业新增信贷客户中理财客户数统计
					,coalesce(t4.sbr_grp_loan_chm_cst_num,0)         sbr_grp_loan_chm_cst_num                --支行_企业新增信贷客户中理财客户数统计
					,coalesce(t4.tem_grp_loan_chm_cst_num,0)         tem_grp_loan_chm_cst_num                --团队_企业新增信贷客户中理财客户数统计
					,coalesce(t4.mgr_grp_loan_chm_cst_num,0)         mgr_grp_loan_chm_cst_num                --客户经理_企业新增信贷客户中理财客户数统计
					,coalesce(t4.brc_grp_loan_insu_cst_num,0)        brc_grp_loan_insu_cst_num               --分行_企业新增信贷客户中保险客户数统计
					,coalesce(t4.sbr_grp_loan_insu_cst_num,0)        sbr_grp_loan_insu_cst_num               --支行_企业新增信贷客户中保险客户数统计
					,coalesce(t4.tem_grp_loan_insu_cst_num,0)        tem_grp_loan_insu_cst_num               --团队_企业新增信贷客户中保险客户数统计
					,coalesce(t4.mgr_grp_loan_insu_cst_num,0)        mgr_grp_loan_insu_cst_num               --客户经理_企业新增信贷客户中保险客户数统计
					,coalesce(t4.brc_grp_loan_fnd_cst_num,0)         brc_grp_loan_fnd_cst_num                --分行_企业新增信贷客户中基金客户数统计
					,coalesce(t4.sbr_grp_loan_fnd_cst_num,0)         sbr_grp_loan_fnd_cst_num                --支行_企业新增信贷客户中基金客户数统计
					,coalesce(t4.tem_grp_loan_fnd_cst_num,0)         tem_grp_loan_fnd_cst_num                --团队_企业新增信贷客户中基金客户数统计
					,coalesce(t4.mgr_grp_loan_fnd_cst_num,0)         mgr_grp_loan_fnd_cst_num                --客户经理_企业新增信贷客户中基金客户数统计
					,coalesce(t4.brc_grp_loan_nob_met_cst_num,0)     brc_grp_loan_nob_met_cst_num            --分行_企业新增信贷客户中贵金属客户数统计
					,coalesce(t4.sbr_grp_loan_nob_met_cst_num,0)     sbr_grp_loan_nob_met_cst_num            --支行_企业新增信贷客户中贵金属客户数统计
					,coalesce(t4.tem_grp_loan_nob_met_cst_num,0)     tem_grp_loan_nob_met_cst_num            --团队_企业新增信贷客户中贵金属客户数统计
					,coalesce(t4.mgr_grp_loan_nob_met_cst_num,0)     mgr_grp_loan_nob_met_cst_num            --客户经理_企业新增信贷客户中贵金属客户数统计
FROM    lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet2 t1
LEFT JOIN     (SELECT  DISTINCT T1.*
FROM  (
                             SELECT  cst_id
                                     ,ent_cst_nm
                                     ,brc_org_nm
                                     ,sbr_org_nm
                                     ,tem_org_nm
									 ,prm_mgr_id
                                     ,count(DISTINCT cst_id) OVER ( PARTITION BY ent_cst_nm , brc_org_nm ) brc_grp_card_cst_num --分行_企业新增信用卡客户数统计
                                     ,count(DISTINCT cst_id) OVER ( PARTITION BY ent_cst_nm , sbr_org_nm ) sbr_grp_card_cst_num --支行_企业新增信用卡客户数统计
                                     ,count(DISTINCT cst_id) OVER ( PARTITION BY ent_cst_nm , tem_org_nm ) tem_grp_card_cst_num --团队_企业新增信用卡客户数统计
                                     ,count(DISTINCT cst_id) OVER ( PARTITION BY ent_cst_nm , prm_mgr_id ) mgr_grp_card_cst_num --客户经理_企业新增信用卡客户数统计
                             FROM    lab_bigdata_dev.phjrb_ys_qytb_cst_info_crd_tmp_new --新增信用卡客户信息表
							 where   dt = '20250331'
                         ) t1 )  T2
            ON      t1.cst_id = t2.cst_id
			AND     T1.ent_cst_nm = T2.ent_cst_nm
            AND     t1.brc_org_nm = t2.brc_org_nm
            AND     t1.sbr_org_nm = t2.sbr_org_nm
            AND     t1.tem_org_nm = t2.tem_org_nm
			and     t1.prm_mgr_id = t2.prm_mgr_id
            LEFT JOIN    adm_pub.adm_csm_cbas_mng_inf_dd t3 --客户集市-客户基础-客户管户信息
            ON      t1.ent_cst_id = t3.cst_id
            AND     t3.dt = '20250331'
			left  join   (select distinct t1.*
		from 	( SELECT  cst_id
,ent_cst_id
,ent_cst_nm
,brc_org_nm
,sbr_org_nm
,tem_org_nm
,prm_mgr_id
,prm_mgr_nm
,count(distinct case when dep_bal_mon_avg >='5000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , brc_org_nm ) brc_grp_loan_dep_cst_num --分行_企业新增信贷客户中存款客户数统计
,count(distinct case when dep_bal_mon_avg >='5000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , sbr_org_nm ) sbr_grp_loan_dep_cst_num  --支行_企业新增信贷客户中存款客户数统计
,count(distinct case when dep_bal_mon_avg >='5000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , tem_org_nm ) tem_grp_loan_dep_cst_num --团队_企业新增信贷客户中存款客户数统计
,count(distinct case when dep_bal_mon_avg >='5000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , prm_mgr_id ) mgr_grp_loan_dep_cst_num --客户经理_企业新增信贷客户中存款客户数统计
,count(distinct case when chm_mon_avg>='5000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , brc_org_nm ) brc_grp_loan_chm_cst_num --分行_企业新增信贷客户中理财客户数统计
,count(distinct case when chm_mon_avg>='5000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , sbr_org_nm ) sbr_grp_loan_chm_cst_num  --支行_企业新增信贷客户中理财客户数统计
,count(distinct case when chm_mon_avg>='5000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , tem_org_nm ) tem_grp_loan_chm_cst_num --团队_企业新增信贷客户中理财客户数统计
,count(distinct case when chm_mon_avg>='5000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , prm_mgr_id ) mgr_grp_loan_chm_cst_num --客户经理_企业新增信贷客户中理财客户数统计
,count(distinct case when insu_frs_bus_amt>='5000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , brc_org_nm ) brc_grp_loan_insu_cst_num --分行_企业新增信贷客户中保险客户数统计
,count(distinct case when insu_frs_bus_amt>='5000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , sbr_org_nm ) sbr_grp_loan_insu_cst_num  --支行_企业新增信贷客户中保险客户数统计
,count(distinct case when insu_frs_bus_amt>='5000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , tem_org_nm ) tem_grp_loan_insu_cst_num --团队_企业新增信贷客户中保险客户数统计
,count(distinct case when insu_frs_bus_amt>='5000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , prm_mgr_id ) mgr_grp_loan_insu_cst_num --客户经理_企业新增信贷客户中保险客户数统计
,count(distinct case when avg_ncr_fnd_amt_cur_mon>='1000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , brc_org_nm ) brc_grp_loan_fnd_cst_num --分行_企业新增信贷客户中基金客户数统计
,count(distinct case when avg_ncr_fnd_amt_cur_mon>='1000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , sbr_org_nm ) sbr_grp_loan_fnd_cst_num  --支行_企业新增信贷客户中基金客户数统计
,count(distinct case when avg_ncr_fnd_amt_cur_mon>='1000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , tem_org_nm ) tem_grp_loan_fnd_cst_num --团队_企业新增信贷客户中基金客户数统计
,count(distinct case when avg_ncr_fnd_amt_cur_mon>='1000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , prm_mgr_id ) mgr_grp_loan_fnd_cst_num --客户经理_企业新增信贷客户中基金客户数统计
,count(distinct case when nob_met_bal_1y>='500' then cst_id end) OVER ( PARTITION BY ent_cst_nm , brc_org_nm ) brc_grp_loan_nob_met_cst_num --分行_企业新增信贷客户中贵金属客户数统计
,count(distinct case when nob_met_bal_1y>='500' then cst_id end) OVER ( PARTITION BY ent_cst_nm , sbr_org_nm ) sbr_grp_loan_nob_met_cst_num  --支行_企业新增信贷客户中贵金属客户数统计
,count(distinct case when nob_met_bal_1y>='500' then cst_id end) OVER ( PARTITION BY ent_cst_nm , tem_org_nm ) tem_grp_loan_nob_met_cst_num --团队_企业新增信贷客户中贵金属客户数统计
,count(distinct case when nob_met_bal_1y>='500' then cst_id end) OVER ( PARTITION BY ent_cst_nm , prm_mgr_id ) mgr_grp_loan_nob_met_cst_num --客户经理_企业新增信贷客户中贵金属客户数统计
FROM    lab_bigdata_dev.phjrb_ys_qytb_cst_info_tmp_new     --企业团办新增消费贷款客户信息表
where  dt = '20250331'
)  t1
)  T4
ON      t1.cst_id = t4.cst_id
AND     T1.ent_cst_nm = T4.ent_cst_nm
AND     t1.brc_org_nm = t4.brc_org_nm
AND     t1.sbr_org_nm = t4.sbr_org_nm
AND     t1.tem_org_nm = t4.tem_org_nm
and     t1.prm_mgr_id = t4.prm_mgr_id
WHERE   t1.dt = '20250331'
	      ) a;



----汇总
--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_01 PURGE;
--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_01
--(
--    cst_id                               STRING  COMMENT '个人客户号'
--    ,cst_nm                              STRING  COMMENT '个人客户名'
--    ,prm_mgr_id                          STRING  COMMENT '主管户客户经理工号'
--    ,prm_mgr_nm                          STRING  COMMENT '主管户客户经理名称'
--    ,tem_org_id                          STRING  COMMENT '团队机构号'
--    ,tem_org_nm                          STRING  COMMENT '团队机构名称'
--    ,sbr_org_nm                          STRING  COMMENT '支行名称'
--    ,brc_org_nm                          STRING  COMMENT '分行名称'
--    ,ent_cst_id                          STRING  COMMENT '企业客户号'
--    ,ent_cst_nm                          STRING  COMMENT '企业客户名'
--    ,prm_mgr_id_ent                      STRING  COMMENT '企业主管户客户经理工号'
--    ,prm_mgr_nm_ent                      STRING  COMMENT '企业主管户客户经理名称'
--    ,tem_org_id_ent                      STRING  COMMENT '企业主管团队机构号'
--    ,tem_org_nm_ent                      STRING  COMMENT '企业主管团队机构名称'
--    ,sbr_org_nm_ent                      STRING  COMMENT '企业主管支行名称'
--    ,brc_org_nm_ent                      STRING  COMMENT '企业主管分行名称'
--    ,ctr_amt                             DECIMAL COMMENT '新增消费贷款合同金额合计'
--    ,actl_start_use_crd_lmt              DECIMAL COMMENT '新增消费贷款启用额度合计'
--    ,ctr_bal                             DECIMAL COMMENT '新增消费贷款合同余额合计'
--    ,mon_acm_prcp_bal_acml               DECIMAL COMMENT '本金余额月日均'
--    ,if_loan_xf                          STRING  COMMENT '是否持有消费贷款'
--    ,efe_crd_cst_ind                     STRING  COMMENT '是否有效信用卡户'
--    ,efe_dep_cst_ind                     STRING  COMMENT '是否有效存款户'
--    ,efe_chm_cst_ind                     STRING  COMMENT '是否有效理财户'
--    ,efe_insu_cst_ind                    STRING  COMMENT '是否有效保险户'
--    ,efe_fnd_cst_ind                     STRING  COMMENT '是否有效基金户'
--    ,efe_nob_met_cst_ind                 STRING  COMMENT '是否有效贵金属户'
--    ,ctr_bal_all                         DECIMAL COMMENT '消费贷款合同余额总计'
--    ,dep_bal                             DECIMAL COMMENT '存款余额'
--    ,chm_bal                             DECIMAL COMMENT '理财余额'
--    ,dep_bal_add                         DECIMAL COMMENT '新增存款余额'
--    ,chm_bal_add                         DECIMAL COMMENT '新增理财余额'
--    ,cst_val_grd                         DECIMAL COMMENT '客户价值等级'
--    ,cprh_contri_cur_year                DECIMAL COMMENT '当年客户价值'
--    ,loan_start_dt                       STRING  COMMENT '最早消费贷款开始日期'
--    ,crd_isu_dt                          STRING  COMMENT '最早信用卡发卡日期'
--    ,dep_opn_dt                          STRING  COMMENT '最早存款开户日期'
--    ,chm_trx_dt                          STRING  COMMENT '最早购买理财日期'
--    ,insu_dt                             STRING  COMMENT '最早保险投保日期'
--    ,fund_dt                             STRING  COMMENT '最早购买基金日期'
--    ,nob_dt                              STRING  COMMENT '最早购买贵金属日期'
--    ,brc_grp_cst_num                     DECIMAL COMMENT '分行_企业授信客户数统计'
--    ,brc_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '分行_企业本金余额月日均'
--    ,brc_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '分行_企业本金启用额度'
--    ,rn_brc_grp                          STRING  COMMENT '排序_分行_企业'
--    ,pd_hld_qty_sum_brc                  STRING  COMMENT '汇总产品持有数_分行'
--    ,sbr_grp_cst_num                     DECIMAL COMMENT '支行_企业授信客户数统计'
--    ,sbr_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '支行_企业本金余额月日均'
--    ,sbr_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '支行_企业本金启用额度'
--    ,rn_sbr_grp                          STRING  COMMENT '排序_支行_企业'
--    ,pd_hld_qty_sum_sbr                  STRING  COMMENT '汇总产品持有数_支行'
--    ,tem_grp_cst_num                     DECIMAL COMMENT '团队_企业授信客户数统计'
--    ,tem_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '团队_企业本金余额月日均'
--    ,tem_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '团队_企业本金启用额度'
--    ,rn_tem_grp                          STRING  COMMENT '排序_团队_企业'
--    ,pd_hld_qty_sum_tem                  STRING  COMMENT '汇总产品持有数_团队'
--    ,mgr_grp_cst_num                     DECIMAL COMMENT '客户经理_企业授信客户数统计'
--    ,mgr_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '客户经理_企业本金余额月日均'
--    ,mgr_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '客户经理_企业本金启用额度'
--    ,rn_mgr_grp                          STRING  COMMENT '排序_客户经理_企业'
--    ,pd_hld_qty_sum_mgr                  STRING  COMMENT '汇总产品持有数_客户经理'
--    ,brc_grp_cst_num2                    DECIMAL COMMENT '分行_企业新增授信客户数统计含信用卡'
--    ,sbr_grp_cst_num2                    DECIMAL COMMENT '支行_企业新增授信客户数统计含信用卡'
--    ,tem_grp_cst_num2                    DECIMAL COMMENT '团队_企业新增授信客户数统计含信用卡'
--    ,mgr_grp_cst_num2                    DECIMAL COMMENT '客户经理_企业新增授信客户数统计含信用卡'
--    ,brc_grp_card_cst_num                DECIMAL COMMENT '分行_企业新增信用卡客户数统计'
--    ,sbr_grp_card_cst_num                DECIMAL COMMENT '支行_企业新增信用卡客户数统计'
--    ,tem_grp_card_cst_num                DECIMAL COMMENT '团队_企业新增信用卡客户数统计'
--    ,mgr_grp_card_cst_num                DECIMAL COMMENT '客户经理_企业新增信用卡客户数统计'
--    ,brc_grp_pure_card_cst_num           DECIMAL COMMENT '分行_企业新增纯信用卡客户数统计'
--    ,sbr_grp_pure_card_cst_num           DECIMAL COMMENT '支行_企业新增纯信用卡客户数统计'
--    ,tem_grp_pure_card_cst_num           DECIMAL COMMENT '团队_企业新增纯信用卡客户数统计'
--    ,mgr_grp_pure_card_cst_num           DECIMAL COMMENT '客户经理_企业新增纯信用卡客户数统计'
--    ,brc_grp_ctr_bal                     DECIMAL COMMENT '分行_企业新增消费贷款余额'
--    ,sbr_grp_ctr_bal                     DECIMAL COMMENT '支行_企业新增消费贷款余额'
--    ,tem_grp_ctr_bal                     DECIMAL COMMENT '团队_企业新增消费贷款余额'
--    ,mgr_grp_ctr_bal                     DECIMAL COMMENT '客户经理_企业新增消费贷款余额'
--    ,yongxin_rate_mth_avg_brc            DECIMAL COMMENT '月日均用信率_分行'
--    ,pd_hld_qty_avg_brc                  DECIMAL COMMENT '客均产品持有数_分行'
--    ,pltbxm_jl_brc                       DECIMAL COMMENT '批量团办项目奖励_分行'
--    ,pd_hld_qty_avg_jcxs_brc             DECIMAL COMMENT '平均产品持有数加成系数_分行'
--    ,yongxin_rate_mth_avg_sbr            DECIMAL COMMENT '月日均用信率_支行'
--    ,pd_hld_qty_avg_sbr                  DECIMAL COMMENT '客均产品持有数_支行'
--    ,pltbxm_jl_sbr                       DECIMAL COMMENT '批量团办项目奖励_支行'
--    ,pd_hld_qty_avg_jcxs_sbr             DECIMAL COMMENT '平均产品持有数加成系数_支行'
--    ,yongxin_rate_mth_avg_tem            DECIMAL COMMENT '月日均用信率_团队'
--    ,pd_hld_qty_avg_tem                  DECIMAL COMMENT '客均产品持有数_团队'
--    ,pltbxm_jl_tem                       DECIMAL COMMENT '批量团办项目奖励_团队'
--    ,pd_hld_qty_avg_jcxs_tem             DECIMAL COMMENT '平均产品持有数加成系数_团队'
--    ,yongxin_rate_mth_avg_mgr            DECIMAL COMMENT '月日均用信率_客户经理'
--    ,pd_hld_qty_avg_mgr                  DECIMAL COMMENT '客均产品持有数_客户经理'
--    ,pltbxm_jl_mgr                       DECIMAL COMMENT '批量团办项目奖励_客户经理'
--    ,pd_hld_qty_avg_jcxs_mgr             DECIMAL COMMENT '平均产品持有数加成系数_客户经理'
--    ,brc_ctr_fenzi                       DECIMAL COMMENT '分行_企业授信金额加权利率分子'
--    ,brc_ctr_fenmu                       DECIMAL COMMENT '分行_企业授信金额加权利率分母'
--    ,sbr_ctr_fenzi                       DECIMAL COMMENT '支行_企业授信金额加权利率分子'
--    ,sbr_ctr_fenmu                       DECIMAL COMMENT '支行_企业授信金额加权利率分母'
--    ,tem_ctr_fenzi                       DECIMAL COMMENT '团队_企业授信金额加权利率分子'
--    ,tem_ctr_fenmu                       DECIMAL COMMENT '团队_企业授信金额加权利率分母'
--    ,mgr_ctr_fenzi                       DECIMAL COMMENT '客户经理_企业授信金额加权利率分子'
--    ,mgr_ctr_fenmu                       DECIMAL COMMENT '客户经理_企业授信金额加权利率分母'
--    ,brc_dbil_fenzi                      DECIMAL COMMENT '分行_企业用信金额加权利率分子'
--    ,brc_dbil_fenmu                      DECIMAL COMMENT '分行_企业用信金额加权利率分母'
--    ,sbr_dbil_fenzi                      DECIMAL COMMENT '支行_企业用信金额加权利率分子'
--    ,sbr_dbil_fenmu                      DECIMAL COMMENT '支行_企业用信金额加权利率分母'
--    ,tem_dbil_fenzi                      DECIMAL COMMENT '团队_企业用信金额加权利率分子'
--    ,tem_dbil_fenmu                      DECIMAL COMMENT '团队_企业用信金额加权利率分母'
--    ,mgr_dbil_fenzi                      DECIMAL COMMENT '客户经理_企业用信金额加权利率分子'
--    ,mgr_dbil_fenmu                      DECIMAL COMMENT '客户经理_企业用信金额加权利率分母'
--    ,brc_aum                             DECIMAL COMMENT '分行_企业aum'
--    ,brc_aum_add                         DECIMAL COMMENT '分行_企业aum_add'
--    ,sbr_aum                             DECIMAL COMMENT '支行_企业aum'
--    ,sbr_aum_add                         DECIMAL COMMENT '支行_企业aum_add'
--    ,tem_aum                             DECIMAL COMMENT '团队_企业aum'
--    ,tem_aum_add                         DECIMAL COMMENT '团队_企业aum_add'
--    ,mgr_aum                             DECIMAL COMMENT '客户经理_企业aum'
--    ,mgr_aum_add                         DECIMAL COMMENT '客户经理_企业aum_add'
--    ,if_jiandang                         STRING  COMMENT '是否建档'
--    ,forml_cst_ind                       STRING  COMMENT '正式客户标识'
--    ,brc_grp_ctr_amt                     DECIMAL COMMENT '分行_企业新增消费贷款金额'
--    ,sbr_grp_ctr_amt                     DECIMAL COMMENT '支行_企业新增消费贷款金额'
--    ,tem_grp_ctr_amt                     DECIMAL COMMENT '团队_企业新增消费贷款金额'
--    ,mgr_grp_ctr_amt                     DECIMAL COMMENT '客户经理_企业新增消费贷款金额'
--    ,brc_grp_loan_dep_cst_num            DECIMAL COMMENT '分行_企业新增信贷客户中存款客户数统计'
--    ,sbr_grp_loan_dep_cst_num            DECIMAL COMMENT '支行_企业新增信贷客户中存款客户数统计'
--    ,tem_grp_loan_dep_cst_num            DECIMAL COMMENT '团队_企业新增信贷客户中存款客户数统计'
--    ,mgr_grp_loan_dep_cst_num            DECIMAL COMMENT '客户经理_企业新增信贷客户中存款客户数统计'
--    ,brc_grp_loan_chm_cst_num            DECIMAL COMMENT '分行_企业新增信贷客户中理财客户数统计'
--    ,sbr_grp_loan_chm_cst_num            DECIMAL COMMENT '支行_企业新增信贷客户中理财客户数统计'
--    ,tem_grp_loan_chm_cst_num            DECIMAL COMMENT '团队_企业新增信贷客户中理财客户数统计'
--    ,mgr_grp_loan_chm_cst_num            DECIMAL COMMENT '客户经理_企业新增信贷客户中理财客户数统计'
--    ,brc_grp_loan_insu_cst_num           DECIMAL COMMENT '分行_企业新增信贷客户中保险客户数统计'
--    ,sbr_grp_loan_insu_cst_num           DECIMAL COMMENT '支行_企业新增信贷客户中保险客户数统计'
--    ,tem_grp_loan_insu_cst_num           DECIMAL COMMENT '团队_企业新增信贷客户中保险客户数统计'
--    ,mgr_grp_loan_insu_cst_num           DECIMAL COMMENT '客户经理_企业新增信贷客户中保险客户数统计'
--    ,brc_grp_loan_fnd_cst_num            DECIMAL COMMENT '分行_企业新增信贷客户中基金客户数统计'
--    ,sbr_grp_loan_fnd_cst_num            DECIMAL COMMENT '支行_企业新增信贷客户中基金客户数统计'
--    ,tem_grp_loan_fnd_cst_num            DECIMAL COMMENT '团队_企业新增信贷客户中基金客户数统计'
--    ,mgr_grp_loan_fnd_cst_num            DECIMAL COMMENT '客户经理_企业新增信贷客户中基金客户数统计'
--    ,brc_grp_loan_nob_met_cst_num        DECIMAL COMMENT '分行_企业新增信贷客户中贵金属客户数统计'
--    ,sbr_grp_loan_nob_met_cst_num        DECIMAL COMMENT '支行_企业新增信贷客户中贵金属客户数统计'
--    ,tem_grp_loan_nob_met_cst_num        DECIMAL COMMENT '团队_企业新增信贷客户中贵金属客户数统计'
--    ,mgr_grp_loan_nob_met_cst_num        DECIMAL COMMENT '客户经理_企业新增信贷客户中贵金属客户数统计'
--    ,mgr_dbil_rate                       DECIMAL COMMENT '客户经理加权平均用信利率'
--    ,mgr_ctr_rate                        DECIMAL COMMENT '客户经理加权平均授信利率'
--    ,zhesuanhou_mgr_grp_cst_num          DECIMAL COMMENT '折算后_客户经理_企业新增授信客户数统计'
--    ,mgr_grp_project_num                 DECIMAL COMMENT '客户经理_企业新增项目数(5比1折算后)'
--    ,mgr_tbxmjj                          DECIMAL COMMENT '团办项目奖金_客户经理'
--    ,tem_dbil_rate                       DECIMAL COMMENT '团队加权平均用信利率'
--    ,tem_ctr_rate                        DECIMAL COMMENT '团队加权平均授信利率'
--    ,zhesuanhou_tem_grp_cst_num          DECIMAL COMMENT '折算后_团队_企业新增授信客户数统计'
--    ,tem_grp_project_num                 DECIMAL COMMENT '团队_企业新增项目数(5比1折算后)'
--    ,tem_tbxmjj                          DECIMAL COMMENT '团办项目奖金_团队'
--    ,sbr_dbil_rate                       DECIMAL COMMENT '支行加权平均用信利率'
--    ,sbr_ctr_rate                        DECIMAL COMMENT '支行加权平均授信利率'
--    ,zhesuanhou_sbr_grp_cst_num          DECIMAL COMMENT '折算后_支行_企业新增授信客户数统计 '
--    ,sbr_grp_project_num                 DECIMAL COMMENT '支行_企业新增项目数(5比1折算后)'
--    ,sbr_tbxmjj                          DECIMAL COMMENT '团办项目奖金_支行'
--    ,brc_dbil_rate                       DECIMAL COMMENT '分行加权平均用信利率'
--    ,brc_ctr_rate                        DECIMAL COMMENT '分行加权平均授信利率'
--    ,zhesuanhou_brc_grp_cst_num          DECIMAL COMMENT '折算后_分行_企业新增授信客户数统计'
--    ,brc_grp_project_num                 DECIMAL COMMENT '分行_企业新增项目数(5比1折算后)'
--    ,brc_tbxmjj                          DECIMAL COMMENT '团办项目奖金_分行'
--    ,brc_org_id               STRING  COMMENT '分行层级机构编号'
--    ,sbr_org_id               STRING  COMMENT '支行层级机构编号'
--)
-- COMMENT
-- '企业团办_SHEET4-企业清单2_汇总01'
-- PARTITIONED BY
-- (
--     DT STRING COMMENT '日期分区'
-- );



-----新增表字段
-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_01 add  columns
--(grp_org_id               STRING  COMMENT '集团机构编号'
--,cpy_org_id               STRING  COMMENT '法人机构编号'
--);

-----新增表字段
-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_01 add  columns
--(brc_grp_card_cnt               STRING  COMMENT '分行_企业新增信用卡户数'
--,sbr_grp_card_cnt               STRING  COMMENT '支行_企业新增信用卡户数'
--,tem_grp_card_cnt               STRING  COMMENT '团队_企业新增信用卡户数'
--,mgr_grp_card_cnt               STRING  COMMENT '客户经理_企业新增信用卡户数'
--);

INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_01 PARTITION (DT = '20250331')
select  t1.cst_id                           	 --个人客户号
 ,t1.cst_nm                                      --个人客户名
 ,t1.prm_mgr_id                                  --主管户客户经理工号
 ,t1.prm_mgr_nm                                  --主管户客户经理名称
 ,t1.tem_org_id                                  --团队机构号
 ,t1.tem_org_nm                                  --团队机构名称
 ,t1.sbr_org_nm                                  --支行名称
 ,t1.brc_org_nm                                  --分行名称
 ,t1.ent_cst_id                                  --企业客户号
 ,t1.ent_cst_nm                                  --企业客户名
 ,t1.prm_mgr_id_ent                              --企业主管户客户经理工号
 ,t1.prm_mgr_nm_ent                              --企业主管户客户经理名称
 ,t1.tem_org_id_ent                              --企业主管团队机构号
 ,t1.tem_org_nm_ent                              --企业主管团队机构名称
 ,t1.sbr_org_nm_ent                              --企业主管支行名称
 ,t1.brc_org_nm_ent                              --企业主管分行名称
 ,t1.ctr_amt                                     --新增消费贷款合同金额合计
 ,t1.actl_start_use_crd_lmt                      --新增消费贷款启用额度合计
 ,t1.ctr_bal                                     --新增消费贷款合同余额合计
 ,t1.mon_acm_prcp_bal_acml                       --本金余额月日均
 ,t1.if_loan_xf                                  --是否持有消费贷款
 ,t1.efe_crd_cst_ind                             --是否有效信用卡户
 ,t1.efe_dep_cst_ind                             --是否有效存款户
 ,t1.efe_chm_cst_ind                             --是否有效理财户
 ,t1.efe_insu_cst_ind                            --是否有效保险户
 ,t1.efe_fnd_cst_ind                             --是否有效基金户
 ,t1.efe_nob_met_cst_ind                         --是否有效贵金属户
 ,t1.ctr_bal_all                                 --消费贷款合同余额总计
 ,t1.dep_bal                                     --存款余额
 ,t1.chm_bal                                     --理财余额
 ,t1.dep_bal_add                                 --新增存款余额
 ,t1.chm_bal_add                                 --新增理财余额
 ,t1.cst_val_grd                                 --客户价值等级
 ,t1.cprh_contri_cur_year                        --当年客户价值
 ,t1.loan_start_dt                               --最早消费贷款开始日期
 ,t1.crd_isu_dt                                  --最早信用卡发卡日期
 ,t1.dep_opn_dt                                  --最早存款开户日期
 ,t1.chm_trx_dt                                  --最早购买理财日期
 ,t1.insu_dt                                     --最早保险投保日期
 ,t1.fund_dt                                     --最早购买基金日期
 ,t1.nob_dt                                      --最早购买贵金属日期
 ,t1.brc_grp_cst_num                             --分行_企业授信客户数统计
 ,t1.brc_grp_mon_acm_prcp_bal_acml               --分行_企业本金余额月日均
 ,t1.brc_grp_actl_start_use_crd_lmt              --分行_企业本金启用额度
 ,t1.rn_brc_grp                                  --排序_分行_企业
 ,t1.pd_hld_qty_sum_brc                          --汇总产品持有数_分行
 ,t1.sbr_grp_cst_num                             --支行_企业授信客户数统计
 ,t1.sbr_grp_mon_acm_prcp_bal_acml               --支行_企业本金余额月日均
 ,t1.sbr_grp_actl_start_use_crd_lmt              --支行_企业本金启用额度
 ,t1.rn_sbr_grp                                  --排序_支行_企业
 ,t1.pd_hld_qty_sum_sbr                          --汇总产品持有数_支行
 ,t1.tem_grp_cst_num                             --团队_企业授信客户数统计
 ,t1.tem_grp_mon_acm_prcp_bal_acml               --团队_企业本金余额月日均
 ,t1.tem_grp_actl_start_use_crd_lmt              --团队_企业本金启用额度
 ,t1.rn_tem_grp                                  --排序_团队_企业
 ,t1.pd_hld_qty_sum_tem                          --汇总产品持有数_团队
 ,t1.mgr_grp_cst_num                             --客户经理_企业授信客户数统计
 ,t1.mgr_grp_mon_acm_prcp_bal_acml               --客户经理_企业本金余额月日均
 ,t1.mgr_grp_actl_start_use_crd_lmt              --客户经理_企业本金启用额度
 ,t1.rn_mgr_grp                                  --排序_客户经理_企业
 ,t1.pd_hld_qty_sum_mgr                          --汇总产品持有数_客户经理
 ,t1.brc_grp_cst_num2                            --分行_企业新增授信客户数统计含信用卡
 ,t1.sbr_grp_cst_num2                            --支行_企业新增授信客户数统计含信用卡
 ,t1.tem_grp_cst_num2                            --团队_企业新增授信客户数统计含信用卡
 ,t1.mgr_grp_cst_num2                            --客户经理_企业新增授信客户数统计含信用卡
 ,t1.brc_grp_card_cst_num                        --分行_企业新增信用卡客户数统计
 ,t1.sbr_grp_card_cst_num                        --支行_企业新增信用卡客户数统计
 ,t1.tem_grp_card_cst_num                        --团队_企业新增信用卡客户数统计
 ,t1.mgr_grp_card_cst_num                        --客户经理_企业新增信用卡客户数统计
 ,t1.brc_grp_pure_card_cst_num                   --分行_企业新增纯信用卡客户数统计
 ,t1.sbr_grp_pure_card_cst_num                   --支行_企业新增纯信用卡客户数统计
 ,t1.tem_grp_pure_card_cst_num                   --团队_企业新增纯信用卡客户数统计
 ,t1.mgr_grp_pure_card_cst_num                   --客户经理_企业新增纯信用卡客户数统计
 ,t1.brc_grp_ctr_bal                             --分行_企业新增消费贷款余额
 ,t1.sbr_grp_ctr_bal                             --支行_企业新增消费贷款余额
 ,t1.tem_grp_ctr_bal                             --团队_企业新增消费贷款余额
 ,t1.mgr_grp_ctr_bal                             --客户经理_企业新增消费贷款余额
 ,t1.yongxin_rate_mth_avg_brc                    --月日均用信率_分行
 ,t1.pd_hld_qty_avg_brc                          --客均产品持有数_分行
 ,t1.pltbxm_jl_brc                               --批量团办项目奖励_分行
 ,t1.pd_hld_qty_avg_jcxs_brc                     --平均产品持有数加成系数_分行
 ,t1.yongxin_rate_mth_avg_sbr                    --月日均用信率_支行
 ,t1.pd_hld_qty_avg_sbr                          --客均产品持有数_支行
 ,t1.pltbxm_jl_sbr                               --批量团办项目奖励_支行
 ,t1.pd_hld_qty_avg_jcxs_sbr                     --平均产品持有数加成系数_支行
 ,t1.yongxin_rate_mth_avg_tem                    --月日均用信率_团队
 ,t1.pd_hld_qty_avg_tem                          --客均产品持有数_团队
 ,t1.pltbxm_jl_tem                               --批量团办项目奖励_团队
 ,t1.pd_hld_qty_avg_jcxs_tem                     --平均产品持有数加成系数_团队
 ,t1.yongxin_rate_mth_avg_mgr                    --月日均用信率_客户经理
 ,t1.pd_hld_qty_avg_mgr                          --客均产品持有数_客户经理
 ,t1.pltbxm_jl_mgr                               --批量团办项目奖励_客户经理
 ,t1.pd_hld_qty_avg_jcxs_mgr                     --平均产品持有数加成系数_客户经理
 ,t1.brc_ctr_fenzi                               --分行_企业授信金额加权利率分子
 ,t1.brc_ctr_fenmu                               --分行_企业授信金额加权利率分母
 ,t1.sbr_ctr_fenzi                               --支行_企业授信金额加权利率分子
 ,t1.sbr_ctr_fenmu                               --支行_企业授信金额加权利率分母
 ,t1.tem_ctr_fenzi                               --团队_企业授信金额加权利率分子
 ,t1.tem_ctr_fenmu                               --团队_企业授信金额加权利率分母
 ,t1.mgr_ctr_fenzi                               --客户经理_企业授信金额加权利率分子
 ,t1.mgr_ctr_fenmu                               --客户经理_企业授信金额加权利率分母
 ,t1.brc_dbil_fenzi                              --分行_企业用信金额加权利率分子
 ,t1.brc_dbil_fenmu                              --分行_企业用信金额加权利率分母
 ,t1.sbr_dbil_fenzi                              --支行_企业用信金额加权利率分子
 ,t1.sbr_dbil_fenmu                              --支行_企业用信金额加权利率分母
 ,t1.tem_dbil_fenzi                              --团队_企业用信金额加权利率分子
 ,t1.tem_dbil_fenmu                              --团队_企业用信金额加权利率分母
 ,t1.mgr_dbil_fenzi                              --客户经理_企业用信金额加权利率分子
 ,t1.mgr_dbil_fenmu                              --客户经理_企业用信金额加权利率分母
 ,t1.brc_aum                                     --分行_企业aum
 ,t1.brc_aum_add                                 --分行_企业aum_add
 ,t1.sbr_aum                                     --支行_企业aum
 ,t1.sbr_aum_add                                 --支行_企业aum_add
 ,t1.tem_aum                                     --团队_企业aum
 ,t1.tem_aum_add                                 --团队_企业aum_add
 ,t1.mgr_aum                                     --客户经理_企业aum
 ,t1.mgr_aum_add                                 --客户经理_企业aum_add
 ,t1.if_jiandang                                 --是否建档
 ,t1.forml_cst_ind                               --正式客户标识
 ,t1.brc_grp_ctr_amt                             --分行_企业新增消费贷款金额
 ,t1.sbr_grp_ctr_amt                             --支行_企业新增消费贷款金额
 ,t1.tem_grp_ctr_amt                             --团队_企业新增消费贷款金额
 ,t1.mgr_grp_ctr_amt                             --客户经理_企业新增消费贷款金额
,t1.brc_grp_loan_dep_cst_num                     --分行_企业新增信贷客户中存款客户数统计
,t1.sbr_grp_loan_dep_cst_num                     --支行_企业新增信贷客户中存款客户数统计
,t1.tem_grp_loan_dep_cst_num                     --团队_企业新增信贷客户中存款客户数统计
,t1.mgr_grp_loan_dep_cst_num                     --客户经理_企业新增信贷客户中存款客户数统计
,t1.brc_grp_loan_chm_cst_num                     --分行_企业新增信贷客户中理财客户数统计
,t1.sbr_grp_loan_chm_cst_num                     --支行_企业新增信贷客户中理财客户数统计
,t1.tem_grp_loan_chm_cst_num                     --团队_企业新增信贷客户中理财客户数统计
,t1.mgr_grp_loan_chm_cst_num                     --客户经理_企业新增信贷客户中理财客户数统计
,t1.brc_grp_loan_insu_cst_num                    --分行_企业新增信贷客户中保险客户数统计
,t1.sbr_grp_loan_insu_cst_num                    --支行_企业新增信贷客户中保险客户数统计
,t1.tem_grp_loan_insu_cst_num                    --团队_企业新增信贷客户中保险客户数统计
,t1.mgr_grp_loan_insu_cst_num                    --客户经理_企业新增信贷客户中保险客户数统计
,t1.brc_grp_loan_fnd_cst_num                     --分行_企业新增信贷客户中基金客户数统计
,t1.sbr_grp_loan_fnd_cst_num                     --支行_企业新增信贷客户中基金客户数统计
,t1.tem_grp_loan_fnd_cst_num                     --团队_企业新增信贷客户中基金客户数统计
,t1.mgr_grp_loan_fnd_cst_num                     --客户经理_企业新增信贷客户中基金客户数统计
,t1.brc_grp_loan_nob_met_cst_num                 --分行_企业新增信贷客户中贵金属客户数统计
,t1.sbr_grp_loan_nob_met_cst_num                 --支行_企业新增信贷客户中贵金属客户数统计
,t1.tem_grp_loan_nob_met_cst_num                 --团队_企业新增信贷客户中贵金属客户数统计
,t1.mgr_grp_loan_nob_met_cst_num                 --客户经理_企业新增信贷客户中贵金属客户数统计
------客户经理
,case when t1.mgr_dbil_fenmu > 0 then t1.mgr_dbil_fenzi/t1.mgr_dbil_fenmu  else '' end   as  mgr_dbil_rate                      --客户经理加权平均用信利率
,case when t1.mgr_ctr_fenmu > 0 then t1.mgr_ctr_fenzi/t1.mgr_ctr_fenmu else ''     end   as  mgr_ctr_rate                       --客户经理加权平均授信利率
,case when t1.mgr_grp_cst_num2 > 0 and t1.mgr_grp_pure_card_cst_num/t1.mgr_grp_cst_num2 > 0.3 then  t1.mgr_grp_cst_num2-t1.mgr_grp_pure_card_cst_num + round(t1.mgr_grp_cst_num2*0.3) else t1.mgr_grp_cst_num2 end   as  zhesuanhou_mgr_grp_cst_num                                                                                                  --折算后_客户经理_企业新增授信客户数统计
,case when  (case when t1.mgr_grp_cst_num2 > 0 and t1.mgr_grp_pure_card_cst_num/t1.mgr_grp_cst_num2 > 0.3 then  t1.mgr_grp_cst_num2-t1.mgr_grp_pure_card_cst_num + round(t1.mgr_grp_cst_num2*0.3) else t1.mgr_grp_cst_num2 end) >= 10 then floor(case when t1.mgr_grp_cst_num2 > 0 and t1.mgr_grp_pure_card_cst_num/t1.mgr_grp_cst_num2 > 0.3 then  t1.mgr_grp_cst_num2-t1.mgr_grp_pure_card_cst_num + round(t1.mgr_grp_cst_num2*0.3) else t1.mgr_grp_cst_num2 end /5)       when (case when t1.mgr_grp_cst_num2 > 0 and t1.mgr_grp_pure_card_cst_num/t1.mgr_grp_cst_num2 > 0.3 then  t1.mgr_grp_cst_num2-t1.mgr_grp_pure_card_cst_num + round(t1.mgr_grp_cst_num2*0.3) else t1.mgr_grp_cst_num2 end) >=3 then 1  ELSE 0 END	  as  mgr_grp_project_num    --客户经理_企业新增项目数(5比1折算后)
,t1.pltbxm_jl_mgr*t1.pd_hld_qty_avg_jcxs_mgr    as    mgr_tbxmjj                                                                 --团办项目奖金_客户经理

------团队
,case when t1.tem_dbil_fenmu > 0 then t1.tem_dbil_fenzi/t1.tem_dbil_fenmu  else '' end   as  tem_dbil_rate                      --团队加权平均用信利率
,case when t1.tem_ctr_fenmu > 0 then t1.tem_ctr_fenzi/t1.tem_ctr_fenmu else ''     end   as  tem_ctr_rate                       --团队加权平均授信利率
,case when t1.tem_grp_cst_num2 > 0 and  t1.tem_grp_pure_card_cst_num/t1.tem_grp_cst_num2 > 0.3 then  t1.tem_grp_cst_num2-t1.tem_grp_pure_card_cst_num + round(t1.tem_grp_cst_num2*0.3)  else t1.tem_grp_cst_num2 end     as     zhesuanhou_tem_grp_cst_num       --折算后_团队_企业新增授信客户数统计
,case when  (case when t1.tem_grp_cst_num2 > 0 and t1.tem_grp_pure_card_cst_num/t1.tem_grp_cst_num2 > 0.3 then  t1.tem_grp_cst_num2-t1.tem_grp_pure_card_cst_num + round(t1.tem_grp_cst_num2*0.3) else t1.tem_grp_cst_num2 end) >= 10 then floor(case when t1.tem_grp_cst_num2 > 0 and t1.tem_grp_pure_card_cst_num/t1.tem_grp_cst_num2 > 0.3 then  t1.tem_grp_cst_num2-t1.tem_grp_pure_card_cst_num + round(t1.tem_grp_cst_num2*0.3) else t1.tem_grp_cst_num2 end /5)       when (case when t1.tem_grp_cst_num2 > 0 and t1.tem_grp_pure_card_cst_num/t1.tem_grp_cst_num2 > 0.3 then  t1.tem_grp_cst_num2-t1.tem_grp_pure_card_cst_num + round(t1.tem_grp_cst_num2*0.3) else t1.tem_grp_cst_num2 end) >=3 then 1  ELSE 0 END  as  tem_grp_project_num    --团队_企业新增项目数(5比1折算后)
,t1.pltbxm_jl_tem*t1.pd_hld_qty_avg_jcxs_tem    as   tem_tbxmjj                                                                 --团办项目奖金_团队

------支行
,case when t1.sbr_dbil_fenmu > 0 then t1.sbr_dbil_fenzi/t1.sbr_dbil_fenmu  else '' end   as  sbr_dbil_rate                      --支行加权平均用信利率
,case when t1.sbr_ctr_fenmu > 0 then t1.sbr_ctr_fenzi/t1.sbr_ctr_fenmu else ''     end   as  sbr_ctr_rate                       --支行加权平均授信利率
,case when t1.sbr_grp_cst_num2 > 0 and  t1.sbr_grp_pure_card_cst_num/t1.sbr_grp_cst_num2 > 0.3 then  t1.sbr_grp_cst_num2-t1.sbr_grp_pure_card_cst_num + round(t1.sbr_grp_cst_num2*0.3)  else t1.sbr_grp_cst_num2 end     as     zhesuanhou_sbr_grp_cst_num       --折算后_支行_企业新增授信客户数统计
,case when  (case when t1.sbr_grp_cst_num2 > 0 and t1.sbr_grp_pure_card_cst_num/t1.sbr_grp_cst_num2 > 0.3 then  t1.sbr_grp_cst_num2-t1.sbr_grp_pure_card_cst_num + round(t1.sbr_grp_cst_num2*0.3) else t1.sbr_grp_cst_num2 end) >= 10 then floor(case when t1.sbr_grp_cst_num2 > 0 and t1.sbr_grp_pure_card_cst_num/t1.sbr_grp_cst_num2 > 0.3 then  t1.sbr_grp_cst_num2-t1.sbr_grp_pure_card_cst_num + round(t1.sbr_grp_cst_num2*0.3) else t1.sbr_grp_cst_num2 end /5)       when (case when t1.sbr_grp_cst_num2 > 0 and t1.sbr_grp_pure_card_cst_num/t1.sbr_grp_cst_num2 > 0.3 then  t1.sbr_grp_cst_num2-t1.sbr_grp_pure_card_cst_num + round(t1.sbr_grp_cst_num2*0.3) else t1.sbr_grp_cst_num2 end) >=3 then 1  ELSE 0 END  as  sbr_grp_project_num    --支行_企业新增项目数(5比1折算后)
,t1.pltbxm_jl_sbr*t1.pd_hld_qty_avg_jcxs_sbr    as   sbr_tbxmjj     --团办项目奖金_支行

------分行
,case when t1.brc_dbil_fenmu > 0 then t1.brc_dbil_fenzi/t1.brc_dbil_fenmu  else '' end   as  brc_dbil_rate                      --分行加权平均用信利率
,case when t1.brc_ctr_fenmu > 0 then t1.brc_ctr_fenzi/t1.brc_ctr_fenmu else ''     end   as  brc_ctr_rate                       --分行加权平均授信利率
,case when t1.brc_grp_cst_num2 > 0 and  t1.brc_grp_pure_card_cst_num/t1.brc_grp_cst_num2 > 0.3 then  t1.brc_grp_cst_num2-t1.brc_grp_pure_card_cst_num + round(t1.brc_grp_cst_num2*0.3)  else t1.brc_grp_cst_num2 end     as     zhesuanhou_brc_grp_cst_num       --折算后_分行_企业新增授信客户数统计
,case when  (case when t1.brc_grp_cst_num2 > 0 and t1.brc_grp_pure_card_cst_num/t1.brc_grp_cst_num2 > 0.3 then  t1.brc_grp_cst_num2-t1.brc_grp_pure_card_cst_num + round(t1.brc_grp_cst_num2*0.3) else t1.brc_grp_cst_num2 end) >= 10 then floor(case when t1.brc_grp_cst_num2 > 0 and t1.brc_grp_pure_card_cst_num/t1.brc_grp_cst_num2 > 0.3 then  t1.brc_grp_cst_num2-t1.brc_grp_pure_card_cst_num + round(t1.brc_grp_cst_num2*0.3) else t1.brc_grp_cst_num2 end /5)       when (case when t1.brc_grp_cst_num2 > 0 and t1.brc_grp_pure_card_cst_num/t1.brc_grp_cst_num2 > 0.3 then  t1.brc_grp_cst_num2-t1.brc_grp_pure_card_cst_num + round(t1.brc_grp_cst_num2*0.3) else t1.brc_grp_cst_num2 end) >=3 then 1  ELSE 0 END  as  brc_grp_project_num    --分行_企业新增项目数(5比1折算后)
,t1.pltbxm_jl_brc*t1.pd_hld_qty_avg_jcxs_brc    as   brc_tbxmjj     --团办项目奖金_分行
,t1.brc_org_id               --分行层级机构编号
,t1.sbr_org_id               --支行层级机构编号
,t1.grp_org_id               --集团机构编号
,t1.cpy_org_id               --法人机构编号
,t1.brc_grp_card_cnt         --分行_企业新增信用卡户数
,t1.sbr_grp_card_cnt         --支行_企业新增信用卡户数
,t1.tem_grp_card_cnt         --团队_企业新增信用卡户数
,t1.mgr_grp_card_cnt         --客户经理_企业新增信用卡户数
from   lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp     t1
where   t1.dt = '20250331'
;



----2023年修改版&mdash;&mdash;最终结果汇总
--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_02  PURGE;
--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_02
--(   cst_id                               STRING  COMMENT '个人客户号'
--    ,cst_nm                              STRING  COMMENT '个人客户名'
--    ,ent_cst_nm                          STRING  COMMENT '企业客户名'
--    ,brc_org_nm                          STRING  COMMENT '分行名称'
--    ,rn_brc_grp                          STRING  COMMENT '排序_分行_企业'
--    ,brc_tbxmjj_last_jidu                DECIMAL COMMENT '分行_累计已发放奖励'
--    ,brc_tbxmjj_diff                     DECIMAL COMMENT '分行_本季待发放奖励'
--    ,if_jiandang                         STRING  COMMENT '是否建档'
--    ,forml_cst_ind                       STRING  COMMENT '正式客户标识'
--    ,brc_grp_cst_num                     DECIMAL COMMENT '分行_企业授信客户数统计'
--    ,brc_grp_ctr_amt                     DECIMAL COMMENT '分行_企业新增消费贷款金额'
--    ,brc_grp_ctr_bal                     DECIMAL COMMENT '分行_企业新增消费贷款余额'
--    ,brc_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '分行_企业本金余额月日均'
--    ,brc_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '分行_企业本金启用额度'
--    ,yongxin_rate_mth_avg_brc            DECIMAL COMMENT '月日均用信率_分行'
--    ,pd_hld_qty_avg_brc                  DECIMAL COMMENT '客均产品持有数_分行'
--    ,pltbxm_jl_brc                       DECIMAL COMMENT '批量团办项目奖励_分行'
--    ,pd_hld_qty_avg_jcxs_brc             DECIMAL COMMENT '平均产品持有数加成系数_分行'
--    ,brc_tbxmjj                          DECIMAL COMMENT '团办项目奖金_分行'
--    ,zhesuanhou_brc_grp_cst_num          DECIMAL COMMENT '折算后_分行_企业新增授信客户数统计'
--    ,brc_grp_project_num                 DECIMAL COMMENT '分行_企业新增项目数(5比1折算后)'
--    ,brc_ctr_rate                        DECIMAL COMMENT '分行加权平均授信利率'
--    ,brc_dbil_rate                       DECIMAL COMMENT '分行加权平均用信利率'
--    ,brc_aum                             DECIMAL COMMENT '分行_企业aum'
--    ,brc_aum_add                         DECIMAL COMMENT '分行_企业aum_add'
--    ,brc_grp_loan_dep_cst_num            DECIMAL COMMENT '分行_企业新增信贷客户中存款客户数统计'
--    ,brc_grp_loan_chm_cst_num            DECIMAL COMMENT '分行_企业新增信贷客户中理财客户数统计'
--    ,brc_grp_loan_insu_cst_num           DECIMAL COMMENT '分行_企业新增信贷客户中保险客户数统计'
--    ,brc_grp_loan_fnd_cst_num            DECIMAL COMMENT '分行_企业新增信贷客户中基金客户数统计'
--    ,brc_grp_loan_nob_met_cst_num        DECIMAL COMMENT '分行_企业新增信贷客户中贵金属客户数统计'
--    ,sbr_org_nm                          STRING  COMMENT '支行名称'
--    ,rn_sbr_grp                          STRING  COMMENT '排序_支行_企业'
--    ,sbr_tbxmjj_last_jidu                DECIMAL COMMENT '支行_累计已发放奖励'
--    ,sbr_tbxmjj_diff                     DECIMAL COMMENT '支行_本季待发放奖励'
--    ,sbr_grp_cst_num                     DECIMAL COMMENT '支行_企业授信客户数统计'
--    ,sbr_grp_ctr_amt                     DECIMAL COMMENT '支行_企业新增消费贷款金额'
--    ,sbr_grp_ctr_bal                     DECIMAL COMMENT '支行_企业新增消费贷款余额'
--    ,sbr_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '支行_企业本金余额月日均'
--    ,sbr_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '支行_企业本金启用额度'
--    ,yongxin_rate_mth_avg_sbr            DECIMAL COMMENT '月日均用信率_支行'
--    ,pd_hld_qty_avg_sbr                  DECIMAL COMMENT '客均产品持有数_支行'
--    ,pltbxm_jl_sbr                       DECIMAL COMMENT '批量团办项目奖励_支行'
--    ,pd_hld_qty_avg_jcxs_sbr             DECIMAL COMMENT '平均产品持有数加成系数_支行'
--    ,sbr_tbxmjj                          DECIMAL COMMENT '团办项目奖金_支行'
--    ,zhesuanhou_sbr_grp_cst_num          DECIMAL COMMENT '折算后_支行_企业新增授信客户数统计 '
--    ,sbr_grp_project_num                 DECIMAL COMMENT '支行_企业新增项目数(5比1折算后)'
--    ,sbr_ctr_rate                        DECIMAL COMMENT '支行加权平均授信利率'
--    ,sbr_dbil_rate                       DECIMAL COMMENT '支行加权平均用信利率'
--    ,sbr_aum                             DECIMAL COMMENT '支行_企业aum'
--    ,sbr_aum_add                         DECIMAL COMMENT '支行_企业aum_add'
--    ,sbr_grp_loan_dep_cst_num            DECIMAL COMMENT '支行_企业新增信贷客户中存款客户数统计'
--    ,sbr_grp_loan_chm_cst_num            DECIMAL COMMENT '支行_企业新增信贷客户中理财客户数统计'
--    ,sbr_grp_loan_insu_cst_num           DECIMAL COMMENT '支行_企业新增信贷客户中保险客户数统计'
--    ,sbr_grp_loan_fnd_cst_num            DECIMAL COMMENT '支行_企业新增信贷客户中基金客户数统计'
--    ,sbr_grp_loan_nob_met_cst_num        DECIMAL COMMENT '支行_企业新增信贷客户中贵金属客户数统计'
--    ,tem_org_id                          STRING  COMMENT '团队机构号'
--    ,tem_org_nm                          STRING  COMMENT '团队机构名称'
--    ,rn_tem_grp                          STRING  COMMENT '排序_团队_企业'
--    ,tem_tbxmjj_last_jidu                DECIMAL COMMENT '团队_累计已发放奖励'
--    ,tem_tbxmjj_diff                     DECIMAL COMMENT '团队_本季待发放奖励'
--    ,tem_grp_cst_num                     DECIMAL COMMENT '团队_企业授信客户数统计'
--    ,tem_grp_ctr_amt                     DECIMAL COMMENT '团队_企业新增消费贷款金额'
--    ,tem_grp_ctr_bal                     DECIMAL COMMENT '团队_企业新增消费贷款余额'
--    ,tem_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '团队_企业本金余额月日均'
--    ,tem_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '团队_企业本金启用额度'
--    ,yongxin_rate_mth_avg_tem            DECIMAL COMMENT '月日均用信率_团队'
--    ,pd_hld_qty_avg_tem                  DECIMAL COMMENT '客均产品持有数_团队'
--    ,pltbxm_jl_tem                       DECIMAL COMMENT '批量团办项目奖励_团队'
--    ,pd_hld_qty_avg_jcxs_tem             DECIMAL COMMENT '平均产品持有数加成系数_团队'
--    ,tem_tbxmjj                          DECIMAL COMMENT '团办项目奖金_团队'
--    ,zhesuanhou_tem_grp_cst_num          DECIMAL COMMENT '折算后_团队_企业新增授信客户数统计'
--    ,tem_grp_project_num                 DECIMAL COMMENT '团队_企业新增项目数(5比1折算后)'
--    ,tem_ctr_rate                        DECIMAL COMMENT '团队加权平均授信利率'
--    ,tem_dbil_rate                       DECIMAL COMMENT '团队加权平均用信利率'
--    ,tem_aum                             DECIMAL COMMENT '团队_企业aum'
--    ,tem_aum_add                         DECIMAL COMMENT '团队_企业aum_add'
--    ,tem_grp_loan_dep_cst_num            DECIMAL COMMENT '团队_企业新增信贷客户中存款客户数统计'
--    ,tem_grp_loan_chm_cst_num            DECIMAL COMMENT '团队_企业新增信贷客户中理财客户数统计'
--    ,tem_grp_loan_insu_cst_num           DECIMAL COMMENT '团队_企业新增信贷客户中保险客户数统计'
--    ,tem_grp_loan_fnd_cst_num            DECIMAL COMMENT '团队_企业新增信贷客户中基金客户数统计'
--    ,tem_grp_loan_nob_met_cst_num        DECIMAL COMMENT '团队_企业新增信贷客户中贵金属客户数统计'
--    ,prm_mgr_id                          STRING  COMMENT '主管户客户经理工号'
--    ,prm_mgr_nm                          STRING  COMMENT '主管户客户经理名称'
--    ,rn_mgr_grp                          STRING  COMMENT '排序_客户经理_企业'
--    ,mgr_tbxmjj_last_jidu                DECIMAL COMMENT '客户经理_累计已发放奖励'
--    ,mgr_tbxmjj_diff                     DECIMAL COMMENT '客户经理_本季待发放奖励'
--    ,mgr_grp_cst_num                     DECIMAL COMMENT '客户经理_企业授信客户数统计'
--    ,mgr_grp_ctr_amt                     DECIMAL COMMENT '客户经理_企业新增消费贷款金额'
--    ,mgr_grp_ctr_bal                     DECIMAL COMMENT '客户经理_企业新增消费贷款余额'
--    ,mgr_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '客户经理_企业本金余额月日均'
--    ,mgr_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '客户经理_企业本金启用额度'
--    ,yongxin_rate_mth_avg_mgr            DECIMAL COMMENT '月日均用信率_客户经理'
--    ,pd_hld_qty_avg_mgr                  DECIMAL COMMENT '客均产品持有数_客户经理'
--    ,pltbxm_jl_mgr                       DECIMAL COMMENT '批量团办项目奖励_客户经理'
--    ,pd_hld_qty_avg_jcxs_mgr             DECIMAL COMMENT '平均产品持有数加成系数_客户经理'
--    ,mgr_tbxmjj                          DECIMAL COMMENT '团办项目奖金_客户经理'
--    ,zhesuanhou_mgr_grp_cst_num          DECIMAL COMMENT '折算后_客户经理_企业新增授信客户数统计'
--    ,mgr_grp_project_num                 DECIMAL COMMENT '客户经理_企业新增项目数(5比1折算后)'
--    ,mgr_ctr_rate                        DECIMAL COMMENT '客户经理加权平均授信利率'
--    ,mgr_dbil_rate                       DECIMAL COMMENT '客户经理加权平均用信利率'
--    ,mgr_aum                             DECIMAL COMMENT '客户经理_企业aum'
--    ,mgr_aum_add                         DECIMAL COMMENT '客户经理_企业aum_add'
--    ,mgr_grp_loan_dep_cst_num            DECIMAL COMMENT '客户经理_企业新增信贷客户中存款客户数统计'
--    ,mgr_grp_loan_chm_cst_num            DECIMAL COMMENT '客户经理_企业新增信贷客户中理财客户数统计'
--    ,mgr_grp_loan_insu_cst_num           DECIMAL COMMENT '客户经理_企业新增信贷客户中保险客户数统计'
--    ,mgr_grp_loan_fnd_cst_num            DECIMAL COMMENT '客户经理_企业新增信贷客户中基金客户数统计'
--    ,mgr_grp_loan_nob_met_cst_num        DECIMAL COMMENT '客户经理_企业新增信贷客户中贵金属客户数统计'
--    ,brc_org_id                          STRING  COMMENT '分行层级机构编号'
--    ,sbr_org_id                          STRING  COMMENT '支行层级机构编号'
--)
-- COMMENT
-- '企业团办_SHEET4-企业清单2_汇总02'
-- PARTITIONED BY
-- (
--     DT STRING COMMENT '日期分区'
-- );

-----新增表字段
-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_02 add  columns
--(grp_org_id               STRING  COMMENT '集团机构编号'
--,cpy_org_id               STRING  COMMENT '法人机构编号'
--);


-----新增表字段
-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_02 add  columns
--(brc_grp_card_cnt               STRING  COMMENT '分行_企业新增信用卡户数'
--,sbr_grp_card_cnt               STRING  COMMENT '支行_企业新增信用卡户数'
--,tem_grp_card_cnt               STRING  COMMENT '团队_企业新增信用卡户数'
--,mgr_grp_card_cnt               STRING  COMMENT '客户经理_企业新增信用卡户数'
--);

INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_02 PARTITION (DT = '20250331')
select distinct  t1.cst_id                            --个人客户号
,t1.cst_nm                             --个人客户名
,t1.ent_cst_nm                         -- 企业客户名
,t1.brc_org_nm                         --分行名称
,t1.rn_brc_grp                         --排序_分行_企业
,nvl(t2.brc_tbxmjj,0)   as    brc_tbxmjj_last_jidu                -- 分行_累计已发放奖励
,case when   nvl(t1.brc_tbxmjj,0) > nvl(t2.brc_tbxmjj,0)  and (nvl(t1.brc_grp_cst_num,0) > nvl(t2.brc_grp_cst_num,0) or nvl(t1.yongxin_rate_mth_avg_brc,0) > nvl(t2.yongxin_rate_mth_avg_brc,0)  or nvl(t1.pd_hld_qty_avg_brc,0) > nvl(t2.pd_hld_qty_avg_brc,0))  then  round((nvl(t1.brc_tbxmjj,0) - nvl(t2.brc_tbxmjj,0)),0)  else  0  end  as   brc_tbxmjj_diff                      -- 分行_本季待发放奖励
,t1.if_jiandang                        -- 是否建档
,t1.forml_cst_ind                      -- 正式客户标识
,t1.brc_grp_cst_num                    -- 分行_企业授信客户数统计
,t1.brc_grp_ctr_amt                    -- 分行_企业新增消费贷款金额
,t1.brc_grp_ctr_bal                    -- 分行_企业新增消费贷款余额
,t1.brc_grp_mon_acm_prcp_bal_acml      -- 分行_企业本金余额月日均
,t1.brc_grp_actl_start_use_crd_lmt     -- 分行_企业本金启用额度
,t1.yongxin_rate_mth_avg_brc           -- 月日均用信率_分行
,t1.pd_hld_qty_avg_brc                 -- 客均产品持有数_分行
,t1.pltbxm_jl_brc                      -- 批量团办项目奖励_分行
,t1.pd_hld_qty_avg_jcxs_brc            -- 平均产品持有数加成系数_分行
,t1.brc_tbxmjj                         -- 团办项目奖金_分行
,t1.zhesuanhou_brc_grp_cst_num         -- 折算后_分行_企业新增授信客户数统计
,t1.brc_grp_project_num                -- 分行_企业新增项目数(5比1折算后)
,t1.brc_ctr_rate                       -- 分行加权平均授信利率
,t1.brc_dbil_rate                      -- 分行加权平均用信利率
,t1.brc_aum                            -- 分行_企业aum
,t1.brc_aum_add                        -- 分行_企业aum_add
,t1.brc_grp_loan_dep_cst_num           --分行_企业新增信贷客户中存款客户数统计
,t1.brc_grp_loan_chm_cst_num           --分行_企业新增信贷客户中理财客户数统计
,t1.brc_grp_loan_insu_cst_num          --分行_企业新增信贷客户中保险客户数统计
,t1.brc_grp_loan_fnd_cst_num           --分行_企业新增信贷客户中基金客户数统计
,t1.brc_grp_loan_nob_met_cst_num       --分行_企业新增信贷客户中贵金属客户数统计
,t1.sbr_org_nm                          --支行名称
,t1.rn_sbr_grp                          --排序_支行_企业
,nvl(t3.sbr_tbxmjj,0)   as    sbr_tbxmjj_last_jidu     --20231231已发放奖金_支行
,case when   nvl(t1.sbr_tbxmjj,0) > nvl(t3.sbr_tbxmjj,0)  and (nvl(t1.sbr_grp_cst_num,0) > nvl(t3.sbr_grp_cst_num,0) or nvl(t1.yongxin_rate_mth_avg_sbr,0) > nvl(t3.yongxin_rate_mth_avg_sbr,0)  or nvl(t1.pd_hld_qty_avg_sbr,0) > nvl(t3.pd_hld_qty_avg_sbr,0))  then  round((nvl(t1.sbr_tbxmjj,0) - nvl(t3.sbr_tbxmjj,0)),0)  else  0  end  as   sbr_tbxmjj_diff      --本季待发放奖励_支行
,t1.sbr_grp_cst_num                     --支行_企业授信客户数统计
,t1.sbr_grp_ctr_amt                     --支行_企业新增消费贷款金额
,t1.sbr_grp_ctr_bal                     --支行_企业新增消费贷款余额
,t1.sbr_grp_mon_acm_prcp_bal_acml       --支行_企业本金余额月日均
,t1.sbr_grp_actl_start_use_crd_lmt      --支行_企业本金启用额度
,t1.yongxin_rate_mth_avg_sbr            --月日均用信率_支行
,t1.pd_hld_qty_avg_sbr                  --客均产品持有数_支行
,t1.pltbxm_jl_sbr                       --批量团办项目奖励_支行
,t1.pd_hld_qty_avg_jcxs_sbr             --平均产品持有数加成系数_支行
,t1.sbr_tbxmjj                          --团办项目奖金_支行
,t1.zhesuanhou_sbr_grp_cst_num          --折算后_支行_企业新增授信客户数统计
,t1.sbr_grp_project_num                 --支行_企业新增项目数(5比1折算后)
,t1.sbr_ctr_rate                        --支行加权平均授信利率
,t1.sbr_dbil_rate                       --支行加权平均用信利率
,t1.sbr_aum                             --支行_企业aum
,t1.sbr_aum_add                         --支行_企业aum_add
,t1.sbr_grp_loan_dep_cst_num            --支行_企业新增信贷客户中存款客户数统计
,t1.sbr_grp_loan_chm_cst_num            --支行_企业新增信贷客户中理财客户数统计
,t1.sbr_grp_loan_insu_cst_num           --支行_企业新增信贷客户中保险客户数统计
,t1.sbr_grp_loan_fnd_cst_num            --支行_企业新增信贷客户中基金客户数统计
,t1.sbr_grp_loan_nob_met_cst_num        --支行_企业新增信贷客户中贵金属客户数统计
,t1.tem_org_id                          --团队机构号
,t1.tem_org_nm                          --团队机构名称
,rn_tem_grp                             --排序_团队_企业
,nvl(t4.tem_tbxmjj,0)   as    tem_tbxmjj_last_jidu     --20231231已发放奖金_团队
,case when   nvl(t1.tem_tbxmjj,0) > nvl(t4.tem_tbxmjj,0)  and (nvl(t1.tem_grp_cst_num,0) > nvl(t4.tem_grp_cst_num,0) or nvl(t1.yongxin_rate_mth_avg_tem,0) > nvl(t4.yongxin_rate_mth_avg_tem,0)  or nvl(t1.pd_hld_qty_avg_tem,0) > nvl(t4.pd_hld_qty_avg_tem,0))  then  round((nvl(t1.tem_tbxmjj,0) - nvl(t4.tem_tbxmjj,0)),0)  else  0  end  as   tem_tbxmjj_diff      --本季待发放奖励_团队
,t1.tem_grp_cst_num                     --团队_企业授信客户数统计
,t1.tem_grp_ctr_amt                     --团队_企业新增消费贷款金额
,t1.tem_grp_ctr_bal                     --团队_企业新增消费贷款余额
,t1.tem_grp_mon_acm_prcp_bal_acml       --团队_企业本金余额月日均
,t1.tem_grp_actl_start_use_crd_lmt      --团队_企业本金启用额度
,t1.yongxin_rate_mth_avg_tem            --月日均用信率_团队
,t1.pd_hld_qty_avg_tem                  --客均产品持有数_团队
,t1.pltbxm_jl_tem                       --批量团办项目奖励_团队
,t1.pd_hld_qty_avg_jcxs_tem             --平均产品持有数加成系数_团队
,t1.tem_tbxmjj                          --团办项目奖金_团队
,t1.zhesuanhou_tem_grp_cst_num          --折算后_团队_企业新增授信客户数统计
,t1.tem_grp_project_num                 --团队_企业新增项目数(5比1折算后)
,t1.tem_ctr_rate                        --团队加权平均授信利率
,t1.tem_dbil_rate                       --团队加权平均用信利率
,t1.tem_aum                             --团队_企业aum
,t1.tem_aum_add                         --团队_企业aum_add
,t1.tem_grp_loan_dep_cst_num            --团队_企业新增信贷客户中存款客户数统计
,t1.tem_grp_loan_chm_cst_num            --团队_企业新增信贷客户中理财客户数统计
,t1.tem_grp_loan_insu_cst_num           --团队_企业新增信贷客户中保险客户数统计
,t1.tem_grp_loan_fnd_cst_num            --团队_企业新增信贷客户中基金客户数统计
,t1.tem_grp_loan_nob_met_cst_num        --团队_企业新增信贷客户中贵金属客户数统计
,t1.prm_mgr_id                          --主管户客户经理工号
,t1.prm_mgr_nm                            --主管户客户经理名称
,t1.rn_mgr_grp                            --排序_客户经理_企业
,nvl(t5.mgr_tbxmjj,0)   as    mgr_tbxmjj_last_jidu    --20231231已发放奖金_客户经理
,case when   nvl(t1.mgr_tbxmjj,0) > nvl(t5.mgr_tbxmjj,0)  and (nvl(t1.mgr_grp_cst_num,0) > nvl(t5.mgr_grp_cst_num,0) or nvl(t1.yongxin_rate_mth_avg_mgr,0) > nvl(t5.yongxin_rate_mth_avg_mgr,0)  or nvl(t1.pd_hld_qty_avg_mgr,0) > nvl(t5.pd_hld_qty_avg_mgr,0))  then  round((nvl(t1.mgr_tbxmjj,0) - nvl(t5.mgr_tbxmjj,0)),0)  else  0  end  as   mgr_tbxmjj_diff      --本季待发放奖励_客户经理
,t1.mgr_grp_cst_num                     --客户经理_企业授信客户数统计
,t1.mgr_grp_ctr_amt                     --客户经理_企业新增消费贷款金额
,t1.mgr_grp_ctr_bal                     --客户经理_企业新增消费贷款余额
,t1.mgr_grp_mon_acm_prcp_bal_acml       --客户经理_企业本金余额月日均
,t1.mgr_grp_actl_start_use_crd_lmt      --客户经理_企业本金启用额度
,t1.yongxin_rate_mth_avg_mgr            --月日均用信率_客户经理
,t1.pd_hld_qty_avg_mgr                  --客均产品持有数_客户经理
,t1.pltbxm_jl_mgr                       --批量团办项目奖励_客户经理
,t1.pd_hld_qty_avg_jcxs_mgr             --平均产品持有数加成系数_客户经理
,t1.mgr_tbxmjj                          --团办项目奖金_客户经理
,t1.zhesuanhou_mgr_grp_cst_num          --折算后_客户经理_企业新增授信客户数统计
,t1.mgr_grp_project_num                 --客户经理_企业新增项目数(5比1折算后)
,t1.mgr_ctr_rate                        --客户经理加权平均授信利率
,t1.mgr_dbil_rate                       --客户经理加权平均用信利率
,t1.mgr_aum                             --客户经理_企业aum
,t1.mgr_aum_add                         --客户经理_企业aum_add
,t1.mgr_grp_loan_dep_cst_num            --客户经理_企业新增信贷客户中存款客户数统计
,t1.mgr_grp_loan_chm_cst_num            --客户经理_企业新增信贷客户中理财客户数统计
,t1.mgr_grp_loan_insu_cst_num           --客户经理_企业新增信贷客户中保险客户数统计
,t1.mgr_grp_loan_fnd_cst_num            --客户经理_企业新增信贷客户中基金客户数统计
,t1.mgr_grp_loan_nob_met_cst_num        --客户经理_企业新增信贷客户中贵金属客户数统计
,t1.brc_org_id                          --分行层级机构编号
,t1.sbr_org_id                          --支行层级机构编号
,t1.grp_org_id                          --集团机构编号
,t1.cpy_org_id                          --法人机构编号
,t1.brc_grp_card_cnt                    --分行_企业新增信用卡户数
,t1.sbr_grp_card_cnt                    --支行_企业新增信用卡户数
,t1.tem_grp_card_cnt                    --团队_企业新增信用卡户数
,t1.mgr_grp_card_cnt                    --客户经理_企业新增信用卡户数
from  lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_01  t1
left join (select  distinct  ent_cst_nm                     --企业客户名
        ,brc_org_nm                                  --分行名称
		,brc_tbxmjj                     -- 团办项目奖金_分行
		,brc_grp_cst_num                -- 分行_企业授信客户数统计
		,yongxin_rate_mth_avg_brc       -- 月日均用信率_分行
		,pd_hld_qty_avg_brc             -- 客均产品持有数_分行
from   lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_01
where  dt = to_char(dateadd(DATETRUNC(TO_DATE('20250331', 'yyyymmdd'), 'Q'), -1,'dd'),'yyyymmdd')    --上季度最后一天
)  t2
ON      t1.ent_cst_nm = t2.ent_cst_nm
AND     t1.brc_org_nm = t2.brc_org_nm
left join (select  distinct  ent_cst_nm                     --企业客户名
        ,sbr_org_nm                                  --支行名称
		,sbr_tbxmjj                     -- 团办项目奖金_支行
		,sbr_grp_cst_num                -- 支行_企业授信客户数统计
		,yongxin_rate_mth_avg_sbr       -- 月日均用信率_支行
		,pd_hld_qty_avg_sbr             -- 客均产品持有数_支行
from   lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_01
where  dt = to_char(dateadd(DATETRUNC(TO_DATE('20250331', 'yyyymmdd'), 'Q'), -1,'dd'),'yyyymmdd')    --上季度最后一天
)  t3
ON      t1.ent_cst_nm = t3.ent_cst_nm
AND     t1.sbr_org_nm = t3.sbr_org_nm
left join (select  distinct  ent_cst_nm                     --企业客户名
        ,tem_org_nm                                  --团队机构名称
        ,tem_org_id                                  --团队机构号
		,tem_tbxmjj                       --团办项目奖金_团队
		,tem_grp_cst_num                  --团队_企业授信客户数统计
		,yongxin_rate_mth_avg_tem         --月日均用信率_团队
		,pd_hld_qty_avg_tem               --客均产品持有数_团队
from   lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_01
where  dt = to_char(dateadd(DATETRUNC(TO_DATE('20250331', 'yyyymmdd'), 'Q'), -1,'dd'),'yyyymmdd')    --上季度最后一天
)  t4
ON      t1.ent_cst_nm = t4.ent_cst_nm
AND     t1.tem_org_nm = t4.tem_org_nm
left join (select  distinct  ent_cst_nm                     --企业客户名
        ,prm_mgr_nm                                  --主管户客户经理名称
 		,prm_mgr_id                                  --主管户客户经理工号
		,mgr_tbxmjj                       --团办项目奖金_客户经理
		,mgr_grp_cst_num                  --客户经理_企业授信客户数统计
		,yongxin_rate_mth_avg_mgr         --月日均用信率_客户经理
		,pd_hld_qty_avg_mgr               --客均产品持有数_客户经理
from   lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_01
where  dt = to_char(dateadd(DATETRUNC(TO_DATE('20250331', 'yyyymmdd'), 'Q'), -1,'dd'),'yyyymmdd')    --上季度最后一天
)  t5
ON      t1.ent_cst_nm = t5.ent_cst_nm
AND     t1.prm_mgr_nm = t5.prm_mgr_nm
where  t1.dt = '20250331'
;




--20230701-20231231新增的截止到最新日期未到期未结清的消费贷款客户'  更新后：31636，更新前：36024
DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_wdq_wjq_20231231 purge;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_wdq_wjq_20231231    as
SELECT  DISTINCT coalesce(T9.cst_id,'-') ent_cst_id --企业客户号
                 ,coalesce(T8.job_unt_nm,'-') ent_cst_nm --企业客户名称
                 ,coalesce(T1.cst_id,'-') cst_id --客户号
                 ,coalesce(T1.cst_nm,'-') cst_nm --客户名称
                 ,coalesce(T20.prm_mgr_id,'-') prm_mgr_id --个人主管户客户经理工号
                 ,coalesce(T20.prm_mgr_nm,'-') prm_mgr_nm --个人主管户客户经理名称
                 ,coalesce(T21.tem_org_id,'-') tem_org_id --个人团队机构号
                 ,coalesce(T21.tem_org_nm,'-') tem_org_nm --个人团队名称
                 ,coalesce(T21.sbr_org_nm,'-') sbr_org_nm --个人支行名称
                 ,coalesce(T21.brc_org_nm,'-') brc_org_nm --个人分行名称
FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD T1 --合同基础信息
LEFT JOIN    edw.dim_cst_bas_inf_dd T2 --客户基本信息
ON      T1.cst_id = T2.cst_id
AND     T2.dt = '20250331'
LEFT JOIN    EDW.DWD_BUS_LOAN_FNC_CRD_LMT_INF_DD T7 ----随贷通授信额度信息
ON      T7.BUS_CTR_ID = T1.CTR_SERNO
AND     T7.LOAN_USG_CD = '2' --随贷通消费性贷款
AND     T7.DT = '20250331'
LEFT JOIN    edw.dim_cst_idv_bas_inf_dd   T8   --个人客户基本信息
ON      T1.cst_id = T8.cst_id
and     T8.dt = '20250331'
LEFT JOIN    edw.dim_cst_entp_bas_inf_dd T9 --企业客户基本信息
ON      T8.job_unt_nm = T9.cst_nm
AND     T9.dt = '20250331'
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd T20 --客户主管户信息
ON      T1.cst_id = T20.cst_id
AND     T20.dt = '20250331'
LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd T21 --机构树
ON      T20.prm_org_id = T21.org_id
AND     T21.dt = '20250331'
LEFT JOIN    (
                 SELECT  A1.CTR_SERNO
                 FROM    EDW.DIM_BUS_LOAN_CTR_BSE_INF_DD A1 -- 合同基础信息
                 INNER JOIN    EDW.DWD_BUS_LOAN_PRPS_REL_DD A2 --方案关联
                 ON      A1.CTR_SERNO = A2.REL_ID
                 AND     A2.DT = '20250331'
                 INNER JOIN    EDW.DWD_BUS_LOAN_ZXT_LOAN_PRPS_APL_DD A3 --助兴通贷款方案申请
                 ON      A2.PRPS_ID = A3.PRPS_ID -- 找到重组的方案号
                 AND     A3.DT = '20250331'
                 WHERE   A1.DT = '20250331'
                 GROUP BY A1.CTR_SERNO
             ) T22 --助兴通合同
ON      T1.CTR_SERNO = T22.CTR_SERNO
WHERE   T1.dt = '20250331'
AND     ( ( T1.PRD_NO like '200101%'   --个人消费性贷款
and     T1.PRD_NO <> '2001010101003'   --剔除 随贷通（消费）
AND     T1.TMT_DT = '18991231'
AND     T1.CTR_MTU_DT > '20250331' )
    OR ( T1.PRD_NO = '2001010101003'    --随贷通（消费）
AND     T7.lmt_sts_cd IN ( '0' , '3' , '4' ) ) ) --个人消费性贷款未到期未终结；随贷通-消费 额度状态已激活
AND     T2.LOAN_CST_TYP_CD in ( '04','08','09')  --工薪族
AND     T1.CTR_BGN_DT >= '20230701'
and     T1.CTR_BGN_DT <= '20231231'  --活动期间
AND     T1.BSN_MARK_CD NOT IN ( '01' )  --剔除员工贷款
AND     ( T1.BSN_MARK_CD <> '04'
AND     T22.CTR_SERNO IS NULL ) --剔除重组贷款
AND     LENGTH(t8.job_unt_nm) > 3
AND     T1.CTR_STS_CD not in ( '1','3','5')    --剔除1：未生效，3	终止，5	作废
;


--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_cst_cnt_wdq_wjq_20231231 purge;

--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_cst_cnt_wdq_wjq_20231231
--(
--    ent_cst_id              STRING  COMMENT '企业客户号'
--    ,ent_cst_nm             STRING  COMMENT '企业客户名'
--    ,prm_mgr_id             STRING  COMMENT '个人主管户客户经理工号'
--    ,prm_mgr_nm             STRING  COMMENT '个人主管户客户经理名称'
--    ,tem_org_id             STRING  COMMENT '个人团队机构号'
--    ,tem_org_nm             STRING  COMMENT '个人团队名称'
--    ,sbr_org_nm             STRING  COMMENT '个人支行名称'
--    ,brc_org_nm             STRING  COMMENT '个人分行名称'
--    ,brc_grp_cst_num        BIGINT  COMMENT '分行_企业授信客户数统计'
--    ,sbr_grp_cst_num        BIGINT  COMMENT '支行_企业授信客户数统计'
--    ,tem_grp_cst_num        BIGINT  COMMENT '团队_企业授信客户数统计'
--    ,mgr_grp_cst_num        BIGINT  COMMENT '客户经理_企业授信客户数统计'
--)
--COMMENT
--'各层级截止20231231新增到当前日期未到期未终结消费贷款客户数'
--;

INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bus_loan_cst_cnt_wdq_wjq_20231231
 select  distinct  t2.ent_cst_id --企业客户号
        ,t2.ent_cst_nm --企业客户名
	    	,t2.prm_mgr_id --主管户客户经理工号
        ,t2.prm_mgr_nm --主管户客户经理名称
        ,t2.tem_org_id --团队机构号
        ,t2.tem_org_nm --团队名称
        ,t2.sbr_org_nm --支行名称
        ,t2.brc_org_nm --分行名称
		,t2.brc_grp_cst_num       --分行_企业授信客户数统计
		,t2.sbr_grp_cst_num       --支行_企业授信客户数统计
		,t2.tem_grp_cst_num       --团队_企业授信客户数统计
		,t2.mgr_grp_cst_num       --客户经理_企业授信客户数统计
from  (select   t1.ent_cst_id --企业客户号
        ,t1.ent_cst_nm --企业客户名
        ,t1.prm_mgr_id --主管户客户经理工号
        ,t1.prm_mgr_nm --主管户客户经理名称
        ,t1.tem_org_id --团队机构号
        ,t1.tem_org_nm --团队名称
        ,t1.sbr_org_nm --支行名称
        ,t1.brc_org_nm --分行名称
        ,T1.cst_id  --客户号
        ,t1.cst_nm  --客户名称
,count(DISTINCT  t1.cst_id)  OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) brc_grp_cst_num --分行_企业授信客户数统计
,count(DISTINCT  t1.cst_id)  OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) sbr_grp_cst_num --支行_企业授信客户数统计
,count(DISTINCT  t1.cst_id)  OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) tem_grp_cst_num --团队_企业授信客户数统计
,count(DISTINCT  t1.cst_id)  OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) mgr_grp_cst_num --客户经理_企业授信客户数统计
from   lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_wdq_wjq_20231231		t1
 )  t2
 ;



------2024年企业团办综合产效底表
--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_all_2024_new purge;
--
--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_all_2024_new
--(
--    ent_cst_id              STRING  COMMENT '企业客户号'
--    ,ent_cst_nm             STRING  COMMENT '企业客户名'
--    ,prm_mgr_id             STRING  COMMENT '主管户客户经理工号'
--    ,prm_mgr_nm             STRING  COMMENT '主管户客户经理名称'
--    ,tem_org_id             STRING  COMMENT '团队机构号'
--    ,tem_org_nm             STRING  COMMENT '团队机构名称'
--    ,sbr_org_nm             STRING  COMMENT '支行名称'
--    ,brc_org_nm             STRING  COMMENT '分行名称'
--    ,cst_id                 STRING  COMMENT '个人客户号'
--    ,busi_ctr_id            STRING  COMMENT '合同号'
--    ,pd_cd                  STRING  COMMENT '产品代码'
--    ,pd_nm                  STRING  COMMENT '产品名称'
--    ,ctr_amt                DECIMAL COMMENT '合同金额'
--    ,ctr_bal                DECIMAL COMMENT '合同余额'
--    ,CCY_CD                 STRING  COMMENT '币种代码'
--    ,apnt_start_dt          STRING  COMMENT '约定开始日期'
--    ,apnt_mtu_dt            STRING  COMMENT '约定到期日期'
--    ,actl_start_use_crd_lmt DECIMAL COMMENT '启用额度'
--    --,hpn_dt                 STRING  COMMENT '发生日期'
--    ,end_dt                 STRING  COMMENT '终结日期'
--    ,count_dbil_id          DECIMAL COMMENT '累计发放借据数'
--    ,sum_amt                DECIMAL COMMENT '累计发放金额'
--    ,mon_acm_prcp_bal_acml  DECIMAL COMMENT '本月本金余额月日均'
--    ,efe_cst_ind            STRING  COMMENT '有效户标识'
--    ,efe_crd_cst_ind        STRING  COMMENT '有效信用卡标识'
--    ,pd_hld_qty             DECIMAL COMMENT '产品持有数'
--    ,chm_bal                DECIMAL COMMENT '理财余额'
--    ,dep_bal                DECIMAL COMMENT '存款余额'
--    ,cprh_contri_cur_year   DECIMAL COMMENT '当年客户价值'
--    ,cst_val_grd            STRING  COMMENT '客户价值等级'
--    ,if_ctr_efe             STRING  COMMENT '是否消费性贷款在贷合同'
--    ,frz_sts_ind            STRING  COMMENT '是否授信状态为空'
--    ,forml_cst_ind          STRING  COMMENT '正式客户标识'
--)
--COMMENT
--'2024_企业团办综合产效底表'
--PARTITIONED BY
--(
--    DT STRING COMMENT '日期分区'
--);



INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_all_2024_new PARTITION (DT = '20250331')
SELECT  T0.ent_cst_id --企业客户号
        ,T0.ent_cst_nm --企业客户名称
        ,T0.prm_mgr_id --主管户客户经理工号
        ,T0.prm_mgr_nm --主管户客户经理名称
        ,T0.tem_org_id --团队机构号
        ,T0.tem_org_nm --团队名称
        ,T0.sbr_org_nm --支行名称
        ,T0.brc_org_nm --分行名称
        ,T8.cst_id --客户号
        ,t1.CTR_SERNO --合同号
        ,T1.PRD_NO --产品代码
        ,T20.PD_NM --产品名称
        ,T1.ctr_amt --合同金额
        ,T1.ctr_bal --合同余额
        ,T1.BSN_CCY_CD --币种代码
        ,T1.CTR_BGN_DT --约定开始日期
        ,T1.CTR_MTU_DT --约定到期日期
		--,COALESCE(T7.BIND_LMT,T13.SEG_LMT,T1.ctr_amt,0) * T23.AVG_PRC / T23.QUO_UNT AS CYC_REALSUM -- 实际启用金额折人民币  新信贷改造
       ,CASE
          WHEN T7.BUS_CTR_ID IS NOT NULL                                        THEN T7.BIND_LMT
           WHEN T1.RVLG_TYP_CD <> '1' THEN T1.CTR_AMT    --非循环贷款，取合同金额
           ELSE T1.STRT_USE_AMT     --启用金额
         END   as   ACTL_START_USE_CRD_LMT --启用额度
        ,T1.TMT_DT --合同终结日期
        ,COALESCE(T14.COUNT_DBIL_ID, 0) COUNT_DBIL_ID --累计发放借据数
        ,COALESCE(T14.SUM_AMT, 0) SUM_AMT --累计发放金额
        ,COALESCE(T14.mon_acm_prcp_bal_acml, 0) mon_acm_prcp_bal_acml --本月本金余额月日均
        --,T15.efe_cst_ind --有效户标识
        ,decode(T15.efe_cst_ind,'1',1,'',0) efe_cst_ind --有效户标识
        ,CASE
           WHEN T21.cst_id IS NOT NULL THEN '1'
           ELSE '0'
         END efe_crd_cst_ind --有效信用卡户
        ,decode(T15.efe_dep_cst_ind, '1', 1, '', 0) + decode(T15.efe_chm_cst_ind, '1', 1, '', 0) + decode(T15.efe_insu_cst_ind, '1', 1, '', 0) + decode(T15.efe_fnd_cst_ind, '1', 1, '', 0) + decode(T15.efe_nob_met_cst_ind, '1', 1, '', 0) AS pd_hld_qty
        ,T16.chm_bal --理财余额
        ,T17.dep_bal --存款余额
        ,T18.cprh_contri_cur_year  --当年客户价值
        ,T18.cst_val_grd  --客户价值等级
	   ,CASE
           WHEN ( T1.PRD_NO  like '200101%' and   T1.PRD_NO <> '2001010101003'  AND T1.TMT_DT = '18991231' AND T1.CTR_MTU_DT > '20250331' AND T1.CTR_STS_CD not in ( '1','3','5') ) OR ( T1.PRD_NO = '2001010101003'  AND T7.lmt_sts_cd IN ( '0' , '3' , '4' ) AND T1.CTR_STS_CD not in ( '1','3','5') ) THEN '1'
           ELSE '0'
         END if_ctr_efe --是否消费性贷款在贷合同
        ,CASE
           WHEN T1.CTR_STS_CD IS NOT NULL AND T1.CTR_STS_CD  in ( '1','3','5') THEN '1'
           WHEN T1.CTR_STS_CD IS NOT NULL AND T1.CTR_STS_CD not in ( '1','3','5') THEN '0'
         END frz_sts_ind --授信状态是否为空
        ,decode(T19.forml_cst_ind, '1', 1, '', 0) forml_cst_ind --正式客户标识
FROM    (
            SELECT  DISTINCT ent_cst_id
                             ,ent_cst_nm
                             ,prm_mgr_id
                             ,prm_mgr_nm
                             ,tem_org_id
                             ,tem_org_nm
                             ,sbr_org_nm
                             ,brc_org_nm
            FROM    LAB_BIGDATA_DEV.phjrb_ys_qytb_bus_loan_ctr_inf_2024_new --企业团办合同信息表
            WHERE   dt = '20250331'
        ) T0
LEFT JOIN    edw.dim_cst_idv_bas_inf_dd   T8   --个人客户基本信息
ON      T0.ent_cst_nm = T8.job_unt_nm
and     T8.dt = '20250331'
LEFT JOIN    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD T1 --合同基础信息
ON      T8.cst_id = T1.cst_id
AND     T1.dt = '20250331'
LEFT JOIN    edw.dim_cst_bas_inf_dd T2 --客户基本信息
ON      T8.cst_id = T2.cst_id
AND     T2.dt = '20250331'
LEFT JOIN    EDW.DWD_BUS_LOAN_FNC_CRD_LMT_INF_DD T7 ----随贷通授信额度信息
ON      T7.BUS_CTR_ID = t1.CTR_SERNO
AND     T7.LOAN_USG_CD = '2' --随贷通消费性贷款
AND     T7.DT = '20250331'
LEFT JOIN    (
                 SELECT  BUS_CTR_ID
                         ,COUNT(DBIL_ID) COUNT_DBIL_ID
                         ,SUM(AMT) SUM_AMT
                         ,SUM(mon_acm_prcp_bal_acml) / 31 AS mon_acm_prcp_bal_acml
                 FROM    EDW.dws_bus_loan_dbil_inf_dd --贷款借据信息汇总
                 WHERE   DT = '20250331'
                 GROUP BY BUS_CTR_ID
             ) T14
ON      t1.CTR_SERNO = T14.BUS_CTR_ID
LEFT JOIN    adm_pub.adm_csm_cbas_ind_inf_dd T15 --客户集市-基础信息-客户基础标识信息
ON      T1.cst_id = T15.cst_id
AND     T15.dt = '20250331'
LEFT JOIN    adm_pub.adm_csm_cbus_chm_inf_dd T16 --客户集市-业务信息-客户理财业务信息表
ON      T1.cst_id = T16.cst_id
AND     T16.dt = '20250331'
LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd T17 --客户集市-业务信息-客户存款业务信息表
ON      T1.cst_id = T17.cst_id
AND     T17.dt = '20250331'
LEFT JOIN    adm_pub.adm_csm_cbus_cst_val_der_ind_inf_dd T18 --客户集市-业务信息-客户价值信息-客户价值衍生指标信息
ON      T1.cst_id = T18.cst_id
AND     T18.dt = '20250330'
LEFT JOIN    adm_pub.adm_csm_cbas_mng_inf_dd T19 --客户集市-客户基础-客户管户信息
ON      T1.cst_id = T19.cst_id
AND     T19.dt = '20250331'
LEFT JOIN    edw.DIM_BUS_LOAN_PRD_FRML_DD T20 --信贷产品信息
ON      T1.PRD_NO = T20.PRD_NO
AND     T20.dt = '20250331'
LEFT JOIN    (
                 SELECT  DISTINCT cst_id
                 FROM    edw.dim_bus_crd_cr_crd_inf_dd --信用卡卡片信息
                 WHERE   dt = '20250331'
                 AND     card_sts_cd = '' --卡片状态正常
                 AND     TO_DATE(CONCAT('20', MTU_DAY, '01'), 'yyyyMMdd') >= TO_DATE(CONCAT('@@{yyyyMM}', '01'), 'yyyyMMdd')
             ) T21
ON      T1.cst_id = T21.cst_id
LEFT JOIN    (
                 SELECT  A1.CTR_SERNO
                 FROM    EDW.DIM_BUS_LOAN_CTR_BSE_INF_DD A1 -- 合同基础信息
                 INNER JOIN    EDW.DWD_BUS_LOAN_PRPS_REL_DD A2 --方案关联
                 ON      A1.CTR_SERNO = A2.REL_ID
                 AND     A2.DT = '20250331'
                 INNER JOIN    EDW.DWD_BUS_LOAN_ZXT_LOAN_PRPS_APL_DD A3 --助兴通贷款方案申请
                 ON      A2.PRPS_ID = A3.PRPS_ID -- 找到重组的方案号
                 AND     A3.DT = '20250331'
                 WHERE   A1.DT = '20250331'
                 GROUP BY A1.CTR_SERNO
             ) T22 --助兴通合同
ON      t1.CTR_SERNO = T22.CTR_SERNO
WHERE    T2.LOAN_CST_TYP_CD in ( '04','08','09')   --工薪族
--剔除员工贷款、重组贷款或者包含没有合同
AND     ( ( T1.BSN_MARK_CD NOT IN ( '01' )   --剔除员工贷款
AND     ( T1.BSN_MARK_CD <> '04'
AND     T22.CTR_SERNO IS NULL ) )  --剔除重组贷款
    OR T1.cst_id IS NULL );


--SHEET2-2024年客户清单
--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet2_2024 PURGE;

--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet2_2024
--(
--    cst_id                  STRING  COMMENT '个人客户号'
--    ,cst_nm                 STRING  COMMENT '个人客户名'
--    ,prm_mgr_id             STRING  COMMENT '主管户客户经理工号'
--    ,prm_mgr_nm             STRING  COMMENT '主管户客户经理名称'
--    ,tem_org_id             STRING  COMMENT '团队机构号'
--    ,tem_org_nm             STRING  COMMENT '团队机构名称'
--    ,sbr_org_nm             STRING  COMMENT '支行名称'
--    ,brc_org_nm             STRING  COMMENT '分行名称'
--    ,ent_cst_id             STRING  COMMENT '企业客户号'
--    ,ent_cst_nm             STRING  COMMENT '企业客户名'
--    ,prm_mgr_id_ent         STRING  COMMENT '企业主管户客户经理工号'
--    ,prm_mgr_nm_ent         STRING  COMMENT '企业主管户客户经理名称'
--    ,tem_org_id_ent         STRING  COMMENT '企业主管团队机构号'
--    ,tem_org_nm_ent         STRING  COMMENT '企业主管团队机构名称'
--    ,sbr_org_nm_ent         STRING  COMMENT '企业主管支行名称'
--    ,brc_org_nm_ent         STRING  COMMENT '企业主管分行名称'
--    ,ctr_amt                DECIMAL COMMENT '新增消费贷款合同金额合计'
--    ,actl_start_use_crd_lmt DECIMAL COMMENT '新增消费贷款启用额度合计'
--    ,ctr_bal                DECIMAL COMMENT '新增消费贷款合同余额合计'
--    ,mon_acm_prcp_bal_acml  DECIMAL COMMENT '本金余额月日均'
--    ,if_loan_xf             STRING  COMMENT '是否持有消费贷款'
--    ,efe_crd_cst_ind        STRING  COMMENT '是否有效信用卡户'
--    ,efe_dep_cst_ind        STRING  COMMENT '是否有效存款户'
--    ,efe_chm_cst_ind        STRING  COMMENT '是否有效理财户'
--    ,efe_insu_cst_ind       STRING  COMMENT '是否有效保险户'
--    ,efe_fnd_cst_ind        STRING  COMMENT '是否有效基金户'
--    ,efe_nob_met_cst_ind    STRING  COMMENT '是否有效贵金属户'
--    ,ctr_bal_all            DECIMAL COMMENT '消费贷款合同余额总计'
--    ,dep_bal                DECIMAL COMMENT '存款余额'
--    ,chm_bal                DECIMAL COMMENT '理财余额'
--    ,dep_bal_add            DECIMAL COMMENT '新增存款余额'
--    ,chm_bal_add            DECIMAL COMMENT '新增理财余额'
--    ,cst_val_grd            STRING  COMMENT '客户价值等级'
--    ,cprh_contri_cur_year   DECIMAL COMMENT '当年客户价值'
--    ,loan_start_dt          STRING  COMMENT '最早消费贷款开始日期'
--    ,crd_isu_dt             STRING  COMMENT '最早信用卡发卡日期'
--    ,dep_opn_dt             STRING  COMMENT '最早存款开户日期'
--    ,chm_trx_dt             STRING  COMMENT '最早购买理财日期'
--    ,insu_dt                STRING  COMMENT '最早保险投保日期'
--    ,fund_dt                STRING  COMMENT '最早购买基金日期'
--    ,nob_dt                 STRING  COMMENT '最早购买贵金属日期'
--    ,if_shoubi              DECIMAL COMMENT '是否首笔'
--    ,ctr_fenzi              DECIMAL COMMENT '授信金额加权利率分子'
--    ,ctr_fenmu              DECIMAL COMMENT '授信金额加权利率分母'
--    ,dbil_fenzi             DECIMAL COMMENT '用信金额加权利率分子'
--    ,dbil_fenmu             DECIMAL COMMENT '用信金额加权利率分母'
--    ,aum_bal                DECIMAL COMMENT 'aum余额'
--    ,aum_bal_add            DECIMAL COMMENT '新增aum余额'
--    ,brc_org_id               STRING  COMMENT '分行层级机构编号'
--    ,sbr_org_id               STRING  COMMENT '支行层级机构编号'
--)
--COMMENT
--'企业团办_SHEET2-客户清单_2024'
--PARTITIONED BY
--(
--    DT STRING COMMENT '日期分区'
--);

-----新增表字段
-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet2_2024 add  columns
--(	grp_org_id               STRING  COMMENT '集团机构编号'
-- ,cpy_org_id               STRING  COMMENT '法人机构编号'
--);




INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet2_2024 PARTITION (DT = '20250331')
SELECT  DISTINCT T1.cst_id
        ,T1.cst_nm
        ,T1.prm_mgr_id
        ,T1.prm_mgr_nm
        ,T1.tem_org_id
        ,T1.tem_org_nm
        ,T1.sbr_org_nm
        ,T1.brc_org_nm
        ,T1.ent_cst_id
        ,T1.ent_cst_nm
        ,T1.prm_mgr_id_ent
        ,T1.prm_mgr_nm_ent
        ,T1.tem_org_id_ent
        ,T1.tem_org_nm_ent
        ,T1.sbr_org_nm_ent
        ,T1.brc_org_nm_ent
        ,T2.ctr_amt
        ,T2.actl_start_use_crd_lmt
        ,T2.ctr_bal
        ,T2.mon_acm_prcp_bal_acml
        ,CASE WHEN T3.cst_id is not null then '1' else '0' end if_loan_xf
        ,T1.efe_crd_cst_ind
        ,T1.efe_dep_cst_ind
        ,T1.efe_chm_cst_ind
        ,T1.efe_insu_cst_ind
        ,T1.efe_fnd_cst_ind
        ,T1.efe_nob_met_cst_ind
        ,T3.ctr_bal ctr_bal_all
        ,T1.dep_bal
        ,T1.chm_bal
        ,coalesce(T1.dep_bal, 0) - coalesce(T1.dep_bal0630, 0) dep_bal_add
        ,coalesce(T1.chm_bal, 0) - coalesce(T1.chm_bal0630, 0) chm_bal_add
        ,T1.cst_val_grd
        ,T1.cprh_contri_cur_year
        ,'' loan_start_dt
        ,'' crd_isu_dt
        ,'' dep_opn_dt
        ,'' chm_trx_dt
        ,'' insu_dt
        ,'' fund_dt
        ,'' nob_dt
        ,CASE
                    WHEN coalesce(T2.if_shoubi, 0) > 0 THEN '1'
                    ELSE '0'
                  END if_shoudaihu
        ,T2.ctr_fenzi
        ,T2.ctr_fenmu
        ,T2.dbil_fenzi
        ,T2.dbil_fenmu
        ,T1.aum_bal
        ,coalesce(T1.aum_bal, 0) - coalesce(T1.aum_bal0630, 0) aum_bal_add
		,t1.brc_org_id               --分行层级机构编号
        ,t1.sbr_org_id               --支行层级机构编号
		,t1.grp_org_id               --集团机构编号
		,t1.cpy_org_id               --法人机构编号
		--,t1.card_cnt                 --新增信用卡户数
FROM   lab_bigdata_dev.phjrb_ys_qytb_cst_info_tmp_2024_new   T1     --企业团办新增消费贷款客户信息表
LEFT JOIN    (
                 SELECT  cst_id
                         ,sum(ctr_amt) ctr_amt
                         ,sum(actl_start_use_crd_lmt) actl_start_use_crd_lmt
                         ,round(sum(ctr_bal), 2) ctr_bal
                         ,round(sum(mon_acm_prcp_bal_acml), 2) mon_acm_prcp_bal_acml
                         ,sum(ctr_amt * intr_rat * duration) ctr_fenzi
                         ,sum(ctr_amt * duration) ctr_fenmu
                         ,sum(dbil_fenzi) dbil_fenzi
                         ,sum(dbil_fenmu) dbil_fenmu
                         ,sum(if_shoubi) if_shoubi
                 FROM    lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_2024_new    --企业团办新增消费性贷款合同信息表
                 WHERE   dt = '20250331'
                 GROUP BY cst_id
             ) T2
ON      T1.cst_id = T2.cst_id
LEFT JOIN    (
                 SELECT  cst_id
                         ,sum(ctr_bal) ctr_bal
                 FROM    lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_all_2024_new   --企业团办综合产效底表
                 WHERE   dt = '20250331'
                 AND     if_ctr_efe = '1' --消费性贷款在贷合同
                 AND     frz_sts_ind = '0' --授信状态不为空
                 GROUP BY cst_id
             ) T3
ON      T1.cst_id = T3.cst_id
left join lab_bigdata_dev.phjrb_ys_qytb_bus_loan_cst_20230701_20231231    t4     ----20230701-20231231新增的消费贷客户
on  t1.cst_id = t4.cst_id
where  t1.dt = '20250331'
and   t1.ent_cst_nm not in (select  ent_cst_nm
from  lab_bigdata_dev.phjrb_ys_qytb_cst_info_tmp_2024_new
where  dt = '20250331'
and ( length(ent_cst_nm) < 4   --小于4个字符
or  (ent_cst_nm REGEXP '[^0-9.]') = false   --为纯数字
or  ent_cst_nm  rlike '个体|退休|在家|单位|自由职业|家庭主妇|人人可贷|泰隆'   --企业名称包含这些
or  ent_cst_nm is null
or  ent_cst_nm = '')  )
and   t4.cst_id is  null    --剔除20230701-20231231新增的消费贷客户
;


----SHEET4 2024年企业清单和客户清单合并

--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_2024 PURGE;
--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_2024
--(
--    cst_id                               STRING  COMMENT '个人客户号'
--    ,cst_nm                              STRING  COMMENT '个人客户名'
--    ,prm_mgr_id                          STRING  COMMENT '主管户客户经理工号'
--    ,prm_mgr_nm                          STRING  COMMENT '主管户客户经理名称'
--    ,tem_org_id                          STRING  COMMENT '团队机构号'
--    ,tem_org_nm                          STRING  COMMENT '团队机构名称'
--    ,sbr_org_nm                          STRING  COMMENT '支行名称'
--    ,brc_org_nm                          STRING  COMMENT '分行名称'
--    ,ent_cst_id                          STRING  COMMENT '企业客户号'
--    ,ent_cst_nm                          STRING  COMMENT '企业客户名'
--    ,prm_mgr_id_ent                      STRING  COMMENT '企业主管户客户经理工号'
--    ,prm_mgr_nm_ent                      STRING  COMMENT '企业主管户客户经理名称'
--    ,tem_org_id_ent                      STRING  COMMENT '企业主管团队机构号'
--    ,tem_org_nm_ent                      STRING  COMMENT '企业主管团队机构名称'
--    ,sbr_org_nm_ent                      STRING  COMMENT '企业主管支行名称'
--    ,brc_org_nm_ent                      STRING  COMMENT '企业主管分行名称'
--    ,ctr_amt                             DECIMAL COMMENT '新增消费贷款合同金额合计'
--    ,actl_start_use_crd_lmt              DECIMAL COMMENT '新增消费贷款启用额度合计'
--    ,ctr_bal                             DECIMAL COMMENT '新增消费贷款合同余额合计'
--    ,mon_acm_prcp_bal_acml               DECIMAL COMMENT '本金余额月日均'
--    ,if_loan_xf                          STRING  COMMENT '是否持有消费贷款'
--    ,efe_crd_cst_ind                     STRING  COMMENT '是否有效信用卡户'
--    ,efe_dep_cst_ind                     STRING  COMMENT '是否有效存款户'
--    ,efe_chm_cst_ind                     STRING  COMMENT '是否有效理财户'
--    ,efe_insu_cst_ind                    STRING  COMMENT '是否有效保险户'
--    ,efe_fnd_cst_ind                     STRING  COMMENT '是否有效基金户'
--    ,efe_nob_met_cst_ind                 STRING  COMMENT '是否有效贵金属户'
--    ,ctr_bal_all                         DECIMAL COMMENT '消费贷款合同余额总计'
--    ,dep_bal                             DECIMAL COMMENT '存款余额'
--    ,chm_bal                             DECIMAL COMMENT '理财余额'
--    ,dep_bal_add                         DECIMAL COMMENT '新增存款余额'
--    ,chm_bal_add                         DECIMAL COMMENT '新增理财余额'
--    ,cst_val_grd                         DECIMAL COMMENT '客户价值等级'
--    ,cprh_contri_cur_year                DECIMAL COMMENT '当年客户价值'
--    ,loan_start_dt                       STRING  COMMENT '最早消费贷款开始日期'
--    ,crd_isu_dt                          STRING  COMMENT '最早信用卡发卡日期'
--    ,dep_opn_dt                          STRING  COMMENT '最早存款开户日期'
--    ,chm_trx_dt                          STRING  COMMENT '最早购买理财日期'
--    ,insu_dt                             STRING  COMMENT '最早保险投保日期'
--    ,fund_dt                             STRING  COMMENT '最早购买基金日期'
--    ,nob_dt                              STRING  COMMENT '最早购买贵金属日期'
--    ,brc_grp_cst_num                     DECIMAL COMMENT '分行_企业授信客户数统计'
--    ,brc_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '分行_企业本金余额月日均'
--    ,brc_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '分行_企业本金启用额度'
--    ,rn_brc_grp                          STRING  COMMENT '排序_分行_企业'
--    ,pd_hld_qty_sum_brc                  STRING  COMMENT '汇总产品持有数_分行'
--    ,sbr_grp_cst_num                     DECIMAL COMMENT '支行_企业授信客户数统计'
--    ,sbr_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '支行_企业本金余额月日均'
--    ,sbr_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '支行_企业本金启用额度'
--    ,rn_sbr_grp                          STRING  COMMENT '排序_支行_企业'
--    ,pd_hld_qty_sum_sbr                  STRING  COMMENT '汇总产品持有数_支行'
--    ,tem_grp_cst_num                     DECIMAL COMMENT '团队_企业授信客户数统计'
--    ,tem_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '团队_企业本金余额月日均'
--    ,tem_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '团队_企业本金启用额度'
--    ,rn_tem_grp                          STRING  COMMENT '排序_团队_企业'
--    ,pd_hld_qty_sum_tem                  STRING  COMMENT '汇总产品持有数_团队'
--    ,mgr_grp_cst_num                     DECIMAL COMMENT '客户经理_企业授信客户数统计'
--    ,mgr_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '客户经理_企业本金余额月日均'
--    ,mgr_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '客户经理_企业本金启用额度'
--    ,rn_mgr_grp                          STRING  COMMENT '排序_客户经理_企业'
--    ,pd_hld_qty_sum_mgr                  STRING  COMMENT '汇总产品持有数_客户经理'
--    ,brc_grp_ctr_bal                     DECIMAL COMMENT '分行_企业新增消费贷款余额'
--    ,sbr_grp_ctr_bal                     DECIMAL COMMENT '支行_企业新增消费贷款余额'
--    ,tem_grp_ctr_bal                     DECIMAL COMMENT '团队_企业新增消费贷款余额'
--    ,mgr_grp_ctr_bal                     DECIMAL COMMENT '客户经理_企业新增消费贷款余额'
--    ,yongxin_rate_mth_avg_brc            DECIMAL COMMENT '月日均用信率_分行'
--    ,pd_hld_qty_avg_brc                  DECIMAL COMMENT '客均产品持有数_分行'
--    ,pltbxm_jl_brc                       DECIMAL COMMENT '批量团办项目奖励_分行'
--    ,pd_hld_qty_avg_jcxs_brc             DECIMAL COMMENT '平均产品持有数加成系数_分行'
--    ,yongxin_rate_mth_avg_sbr            DECIMAL COMMENT '月日均用信率_支行'
--    ,pd_hld_qty_avg_sbr                  DECIMAL COMMENT '客均产品持有数_支行'
--    ,pltbxm_jl_sbr                       DECIMAL COMMENT '批量团办项目奖励_支行'
--    ,pd_hld_qty_avg_jcxs_sbr             DECIMAL COMMENT '平均产品持有数加成系数_支行'
--    ,yongxin_rate_mth_avg_tem            DECIMAL COMMENT '月日均用信率_团队'
--    ,pd_hld_qty_avg_tem                  DECIMAL COMMENT '客均产品持有数_团队'
--    ,pltbxm_jl_tem                       DECIMAL COMMENT '批量团办项目奖励_团队'
--    ,pd_hld_qty_avg_jcxs_tem             DECIMAL COMMENT '平均产品持有数加成系数_团队'
--    ,yongxin_rate_mth_avg_mgr            DECIMAL COMMENT '月日均用信率_客户经理'
--    ,pd_hld_qty_avg_mgr                  DECIMAL COMMENT '客均产品持有数_客户经理'
--    ,pltbxm_jl_mgr                       DECIMAL COMMENT '批量团办项目奖励_客户经理'
--    ,pd_hld_qty_avg_jcxs_mgr             DECIMAL COMMENT '平均产品持有数加成系数_客户经理'
--    ,brc_ctr_fenzi                       DECIMAL COMMENT '分行_企业授信金额加权利率分子'
--    ,brc_ctr_fenmu                       DECIMAL COMMENT '分行_企业授信金额加权利率分母'
--    ,sbr_ctr_fenzi                       DECIMAL COMMENT '支行_企业授信金额加权利率分子'
--    ,sbr_ctr_fenmu                       DECIMAL COMMENT '支行_企业授信金额加权利率分母'
--    ,tem_ctr_fenzi                       DECIMAL COMMENT '团队_企业授信金额加权利率分子'
--    ,tem_ctr_fenmu                       DECIMAL COMMENT '团队_企业授信金额加权利率分母'
--    ,mgr_ctr_fenzi                       DECIMAL COMMENT '客户经理_企业授信金额加权利率分子'
--    ,mgr_ctr_fenmu                       DECIMAL COMMENT '客户经理_企业授信金额加权利率分母'
--    ,brc_dbil_fenzi                      DECIMAL COMMENT '分行_企业用信金额加权利率分子'
--    ,brc_dbil_fenmu                      DECIMAL COMMENT '分行_企业用信金额加权利率分母'
--    ,sbr_dbil_fenzi                      DECIMAL COMMENT '支行_企业用信金额加权利率分子'
--    ,sbr_dbil_fenmu                      DECIMAL COMMENT '支行_企业用信金额加权利率分母'
--    ,tem_dbil_fenzi                      DECIMAL COMMENT '团队_企业用信金额加权利率分子'
--    ,tem_dbil_fenmu                      DECIMAL COMMENT '团队_企业用信金额加权利率分母'
--    ,mgr_dbil_fenzi                      DECIMAL COMMENT '客户经理_企业用信金额加权利率分子'
--    ,mgr_dbil_fenmu                      DECIMAL COMMENT '客户经理_企业用信金额加权利率分母'
--    ,brc_aum                             DECIMAL COMMENT '分行_企业aum'
--    ,brc_aum_add                         DECIMAL COMMENT '分行_企业aum_add'
--    ,sbr_aum                             DECIMAL COMMENT '支行_企业aum'
--    ,sbr_aum_add                         DECIMAL COMMENT '支行_企业aum_add'
--    ,tem_aum                             DECIMAL COMMENT '团队_企业aum'
--    ,tem_aum_add                         DECIMAL COMMENT '团队_企业aum_add'
--    ,mgr_aum                             DECIMAL COMMENT '客户经理_企业aum'
--    ,mgr_aum_add                         DECIMAL COMMENT '客户经理_企业aum_add'
--    ,if_jiandang                         STRING  COMMENT '是否建档'
--    ,forml_cst_ind                       STRING  COMMENT '正式客户标识'
--    ,brc_grp_ctr_amt                     DECIMAL COMMENT '分行_企业新增消费贷款金额'
--    ,sbr_grp_ctr_amt                     DECIMAL COMMENT '支行_企业新增消费贷款金额'
--    ,tem_grp_ctr_amt                     DECIMAL COMMENT '团队_企业新增消费贷款金额'
--    ,mgr_grp_ctr_amt                     DECIMAL COMMENT '客户经理_企业新增消费贷款金额'
--    ,brc_org_id                          STRING  COMMENT '分行层级机构编号'
--    ,sbr_org_id                          STRING  COMMENT '支行层级机构编号'
--)
--COMMENT
--'企业团办_SHEET4-企业清单2-2024'
--PARTITIONED BY
--(
--    DT STRING COMMENT '日期分区'
--);

-----新增表字段
-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet4_tmp_2024 add  columns
--(	grp_org_id               STRING  COMMENT '集团机构编号'
-- ,cpy_org_id               STRING  COMMENT '法人机构编号'
--);



INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_2024 PARTITION (DT = '20250331')
SELECT  cst_id
        ,cst_nm
        ,prm_mgr_id
        ,prm_mgr_nm
        ,tem_org_id
        ,tem_org_nm
        ,sbr_org_nm
        ,brc_org_nm
        ,ent_cst_id
        ,ent_cst_nm
        ,prm_mgr_id_ent
        ,prm_mgr_nm_ent
        ,tem_org_id_ent
        ,tem_org_nm_ent
        ,sbr_org_nm_ent
        ,brc_org_nm_ent
        ,ctr_amt
        ,actl_start_use_crd_lmt
        ,ctr_bal
        ,mon_acm_prcp_bal_acml
        ,if_loan_xf
        ,efe_crd_cst_ind
        ,efe_dep_cst_ind
        ,efe_chm_cst_ind
        ,efe_insu_cst_ind
        ,efe_fnd_cst_ind
        ,efe_nob_met_cst_ind
        ,ctr_bal_all
        ,dep_bal
        ,chm_bal
        ,dep_bal_add
        ,chm_bal_add
        ,cst_val_grd
        ,cprh_contri_cur_year
        ,loan_start_dt
        ,crd_isu_dt
        ,dep_opn_dt
        ,chm_trx_dt
        ,insu_dt
        ,fund_dt
        ,nob_dt
        ,brc_grp_cst_num
        ,brc_grp_mon_acm_prcp_bal_acml
        ,brc_grp_actl_start_use_crd_lmt
        ,rn_brc_grp
        ,pd_hld_qty_sum_brc
        ,sbr_grp_cst_num                 --支行_企业授信客户数统计
        ,sbr_grp_mon_acm_prcp_bal_acml   --支行_企业本金余额月日均
        ,sbr_grp_actl_start_use_crd_lmt  --支行_企业本金启用额度
        ,rn_sbr_grp                      --排序_支行_企业
        ,pd_hld_qty_sum_sbr              --汇总产品持有数_支行
        ,tem_grp_cst_num                 --团队_企业授信客户数统计
        ,tem_grp_mon_acm_prcp_bal_acml   --团队_企业本金余额月日均
        ,tem_grp_actl_start_use_crd_lmt  --团队_企业本金启用额度
        ,rn_tem_grp                      --排序_团队_企业
        ,pd_hld_qty_sum_tem              --汇总产品持有数_团队
        ,mgr_grp_cst_num                 --客户经理_企业授信客户数统计
        ,mgr_grp_mon_acm_prcp_bal_acml   --客户经理_企业本金余额月日均
        ,mgr_grp_actl_start_use_crd_lmt  --客户经理_企业本金启用额度
        ,rn_mgr_grp                      --排序_客户经理_企业
        ,pd_hld_qty_sum_mgr              --汇总产品持有数_客户经理
        ,brc_grp_ctr_bal                 --分行_企业新增消费贷款余额
        ,sbr_grp_ctr_bal                 --支行_企业新增消费贷款余额
        ,tem_grp_ctr_bal                 --团队_企业新增消费贷款余额
        ,mgr_grp_ctr_bal                 --客户经理_企业新增消费贷款余额
        ,CASE
           WHEN a.brc_grp_actl_start_use_crd_lmt > 0 THEN a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt
           ELSE 0
         END yongxin_rate_mth_avg_brc    --月日均用信率_分行
        ,CASE
           WHEN a.brc_grp_cst_num > 0 THEN a.pd_hld_qty_sum_brc / a.brc_grp_cst_num
           ELSE 0
         END pd_hld_qty_avg_brc          --客均产品持有数_分行
        ,CASE
           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml < 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1     THEN 200
           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.10  THEN 500
           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.30  THEN 800
           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.50  THEN 1000
           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1    THEN 1200
           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml < 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1    THEN 400
           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.10 THEN 800
           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.30 THEN 1500
           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.50 THEN 2000 --1011update
           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1   THEN 2400 --1011update
           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml < 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1    THEN 600
           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.10 THEN 1500
           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.30 THEN 2500
           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.50 THEN 4000 --1011update
           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1   THEN 4500 --1011update
           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml < 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1                               THEN 800
           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.10                            THEN 1800
           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.30                            THEN 3500
           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.50                            THEN 6000 --1011update
           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1                              THEN 7000 --1011update
           ELSE 0
         END  pltbxm_jl_brc --批量团办项目奖励_分行
        ,CASE
           WHEN a.brc_grp_cst_num > 0 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num >= 1 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num < 1.2   THEN 1
           WHEN a.brc_grp_cst_num > 0 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num >= 1.2 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num < 1.5 THEN 1.2
           WHEN a.brc_grp_cst_num > 0 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num >= 1.5 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num < 2   THEN 1.6
           WHEN a.brc_grp_cst_num > 0 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num >= 2                                                      THEN 2
           ELSE 0
         END pd_hld_qty_avg_jcxs_brc  --平均产品持有数加成系数_分行
        ,CASE
           WHEN a.sbr_grp_actl_start_use_crd_lmt > 0 THEN a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt
           ELSE 0
         END  yongxin_rate_mth_avg_sbr   --月日均用信率_支行
        ,CASE
           WHEN a.sbr_grp_cst_num > 0 THEN a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num
           ELSE 0
         END pd_hld_qty_avg_sbr      --客均产品持有数_支行
        ,CASE
           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml < 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1     THEN 200
           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.10  THEN 500
           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.30  THEN 800
           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.50  THEN 1000
           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1    THEN 1200

           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml < 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1    THEN 400
           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.10 THEN 800
           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.30 THEN 1500
           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.50 THEN 2000
           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1   THEN 2400

           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml < 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1    THEN 600
           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.10 THEN 1500
           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.30 THEN 2500
           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.50 THEN 4000
           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1   THEN 4500

           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml < 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1                               THEN 800
           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.10                            THEN 1800
           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.30                            THEN 3500
           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.50                            THEN 6000
           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1                              THEN 7000
           ELSE 0
         END pltbxm_jl_sbr            --批量团办项目奖励_支行
        ,CASE
           WHEN a.sbr_grp_cst_num > 0 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num >= 1 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num < 1.2   THEN 1
           WHEN a.sbr_grp_cst_num > 0 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num >= 1.2 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num < 1.5 THEN 1.2
           WHEN a.sbr_grp_cst_num > 0 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num >= 1.5 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num < 2   THEN 1.6
           WHEN a.sbr_grp_cst_num > 0 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num >= 2                                                      THEN 2
           ELSE 0
         END pd_hld_qty_avg_jcxs_sbr  --平均产品持有数加成系数_支行
        ,CASE
           WHEN a.tem_grp_actl_start_use_crd_lmt > 0 THEN a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt
           ELSE 0
         END yongxin_rate_mth_avg_tem    --月日均用信率_团队
        ,CASE
           WHEN a.tem_grp_cst_num > 0 THEN a.pd_hld_qty_sum_tem / a.tem_grp_cst_num
           ELSE 0
         END pd_hld_qty_avg_tem          --客均产品持有数_团队
        ,CASE
           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml < 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1     THEN 200
           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.10  THEN 500
           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.30  THEN 800
           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.50  THEN 1000
           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1    THEN 1200

           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml < 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1    THEN 400
           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.10 THEN 800
           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.30 THEN 1500
           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.50 THEN 2000
           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1   THEN 2400

           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml < 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1    THEN 600
           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.10 THEN 1500
           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.30 THEN 2500
           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.50 THEN 4000
           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1   THEN 4500
           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml < 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1                               THEN 800
           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.10                            THEN 1800
           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.30                            THEN 3500
           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.50                            THEN 6000
           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1                              THEN 7000
           ELSE 0
         END pltbxm_jl_tem        --批量团办项目奖励_团队
        ,CASE
           WHEN a.tem_grp_cst_num > 0 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num >= 1 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num < 1.2   THEN 1
           WHEN a.tem_grp_cst_num > 0 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num >= 1.2 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num < 1.5 THEN 1.2
           WHEN a.tem_grp_cst_num > 0 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num >= 1.5 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num < 2   THEN 1.6
           WHEN a.tem_grp_cst_num > 0 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num >= 2                                                      THEN 2
           ELSE 0
         END pd_hld_qty_avg_jcxs_tem --平均产品持有数加成系数_团队
        ,CASE
           WHEN a.mgr_grp_actl_start_use_crd_lmt > 0 THEN a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt
           ELSE 0
         END yongxin_rate_mth_avg_mgr    --月日均用信率_客户经理
        ,CASE
           WHEN a.mgr_grp_cst_num > 0 THEN a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num
           ELSE 0
         END pd_hld_qty_avg_mgr      --客均产品持有数_客户经理
        ,CASE
           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml < 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1     THEN 200
           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.10  THEN 500
           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.30  THEN 800
           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.50  THEN 1000
           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1    THEN 1200

           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml < 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1    THEN 400
           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.10 THEN 800
           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.30 THEN 1500
           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.50 THEN 2000
           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1   THEN 2400

           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml < 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1    THEN 600
           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.10 THEN 1500
           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.30 THEN 2500
           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.50 THEN 4000
           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1   THEN 4500

           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml < 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1                               THEN 800
           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.10                            THEN 1800
           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.30                            THEN 3500
           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.50                            THEN 6000
           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1                              THEN 7000
           ELSE 0
         END pltbxm_jl_mgr --批量团办项目奖励_客户经理
        ,CASE
           WHEN a.mgr_grp_cst_num > 0 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num >= 1 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num < 1.2   THEN 1
           WHEN a.mgr_grp_cst_num > 0 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num >= 1.2 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num < 1.5 THEN 1.2
           WHEN a.mgr_grp_cst_num > 0 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num >= 1.5 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num < 2   THEN 1.6
           WHEN a.mgr_grp_cst_num > 0 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num >= 2                                                      THEN 2
           ELSE  0
         END pd_hld_qty_avg_jcxs_mgr --平均产品持有数加成系数_客户经理
        ,brc_ctr_fenzi --分行_企业授信金额加权利率分子
        ,brc_ctr_fenmu --分行_企业授信金额加权利率分母
        ,sbr_ctr_fenzi --支行_企业授信金额加权利率分子
        ,sbr_ctr_fenmu --支行_企业授信金额加权利率分母
        ,tem_ctr_fenzi --团队_企业授信金额加权利率分子
        ,tem_ctr_fenmu --团队_企业授信金额加权利率分母
        ,mgr_ctr_fenzi --客户经理_企业授信金额加权利率分子
        ,mgr_ctr_fenmu --客户经理_企业授信金额加权利率分母
        ,brc_dbil_fenzi --分行_企业用信金额加权利率分子
        ,brc_dbil_fenmu --分行_企业用信金额加权利率分母
        ,sbr_dbil_fenzi --支行_企业用信金额加权利率分子
        ,sbr_dbil_fenmu --支行_企业用信金额加权利率分母
        ,tem_dbil_fenzi --团队_企业用信金额加权利率分子
        ,tem_dbil_fenmu --团队_企业用信金额加权利率分母
        ,mgr_dbil_fenzi --客户经理_企业用信金额加权利率分子
        ,mgr_dbil_fenmu --客户经理_企业用信金额加权利率分母
        ,brc_aum --分行_企业aum
        ,brc_aum_add --分行_企业aum_add
        ,sbr_aum --支行_企业aum
        ,sbr_aum_add --支行_企业aum_add
        ,tem_aum --团队_企业aum
        ,tem_aum_add --团队_企业aum_add
        ,mgr_aum --客户经理_企业aum
        ,mgr_aum_add --客户经理_企业aum_add
        ,if_jiandang    --是否建档客户
        ,forml_cst_ind  --是否正式客户标识
        ,brc_grp_ctr_amt                            --分行_企业新增消费贷款金额
        ,sbr_grp_ctr_amt                            --支行_企业新增消费贷款金额
        ,tem_grp_ctr_amt                            --团队_企业新增消费贷款金额
        ,mgr_grp_ctr_amt                            --客户经理_企业新增消费贷款金额
		,brc_org_id               --分行层级机构编号
        ,sbr_org_id               --支行层级机构编号
		,grp_org_id               --集团机构编号
		,cpy_org_id               --法人机构编号
		--,brc_grp_card_cnt
		--,sbr_grp_card_cnt
		--,tem_grp_card_cnt
		--,mgr_grp_card_cnt
FROM    (
            SELECT  T1.cst_id
                    ,T1.cst_nm
                    ,T1.prm_mgr_id
                    ,T1.prm_mgr_nm
                    ,T1.tem_org_id
                    ,T1.tem_org_nm
                    ,T1.sbr_org_nm
                    ,T1.brc_org_nm
					,T1.brc_org_id               --分行层级机构编号
                    ,T1.sbr_org_id               --支行层级机构编号
                    ,T1.grp_org_id               --集团机构编号
		            ,T1.cpy_org_id               --法人机构编号
                    ,T1.ent_cst_id
                    ,T1.ent_cst_nm
                    ,T1.prm_mgr_id_ent
                    ,T1.prm_mgr_nm_ent
                    ,T1.tem_org_id_ent
                    ,T1.tem_org_nm_ent
                    ,T1.sbr_org_nm_ent
                    ,T1.brc_org_nm_ent
                    ,T1.ctr_amt
                    ,T1.actl_start_use_crd_lmt
                    ,T1.ctr_bal
                    ,T1.mon_acm_prcp_bal_acml
                    ,T1.if_loan_xf
                    ,T1.efe_crd_cst_ind
                    ,T1.efe_dep_cst_ind
                    ,T1.efe_chm_cst_ind
                    ,T1.efe_insu_cst_ind
                    ,T1.efe_fnd_cst_ind
                    ,T1.efe_nob_met_cst_ind
                    ,T1.ctr_bal_all   --这里之前写的是ctr_bal    ctr_bal_all
                    ,T1.dep_bal
                    ,T1.chm_bal
                    ,T1.dep_bal_add
                    ,T1.chm_bal_add
                    ,T1.cst_val_grd
                    ,T1.cprh_contri_cur_year
                    ,T1.loan_start_dt
                    ,T1.crd_isu_dt
                    ,T1.dep_opn_dt
                    ,T1.chm_trx_dt
                    ,T1.insu_dt
                    ,T1.fund_dt
                    ,T1.nob_dt
                    ,count(DISTINCT  t1.cst_id)  OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) brc_grp_cst_num --分行_企业授信客户数统计
                    ,coalesce(sum(t1.mon_acm_prcp_bal_acml) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_mon_acm_prcp_bal_acml --分行_企业本金余额月日均
                    ,coalesce(sum(t1.actl_start_use_crd_lmt) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_actl_start_use_crd_lmt --分行_企业本金启用额度
                    ,row_number() OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) rn_brc_grp --排序_分行_企业
                    ,sum(CASE
                           WHEN coalesce(t1.ctr_amt, 0) > 0 THEN 1 + T1.efe_crd_cst_ind + T1.efe_dep_cst_ind + T1.efe_chm_cst_ind + T1.efe_insu_cst_ind + T1.efe_fnd_cst_ind + T1.efe_nob_met_cst_ind
                           ELSE 0
                         END) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) pd_hld_qty_sum_brc --汇总产品持有数_分行
                    ,count(DISTINCT  t1.cst_id)  OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) sbr_grp_cst_num --支行_企业授信客户数统计
                    ,coalesce(sum(t1.mon_acm_prcp_bal_acml) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_mon_acm_prcp_bal_acml --支行_企业本金余额月日均
                    ,coalesce(sum(t1.actl_start_use_crd_lmt) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_actl_start_use_crd_lmt --支行_企业本金启用额度
                    ,row_number() OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) rn_sbr_grp --排序_支行_企业
                    ,sum(CASE
                           WHEN coalesce(t1.ctr_amt, 0) > 0 THEN 1 + T1.efe_crd_cst_ind + T1.efe_dep_cst_ind + T1.efe_chm_cst_ind + T1.efe_insu_cst_ind + T1.efe_fnd_cst_ind + T1.efe_nob_met_cst_ind
                           ELSE 0
                         END) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) pd_hld_qty_sum_sbr --汇总产品持有数_支行
                    ,count(DISTINCT  t1.cst_id)  OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) tem_grp_cst_num --团队_企业授信客户数统计
                    ,coalesce(sum(t1.mon_acm_prcp_bal_acml) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_mon_acm_prcp_bal_acml --团队_企业本金余额月日均
                    ,coalesce(sum(t1.actl_start_use_crd_lmt) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_actl_start_use_crd_lmt --团队_企业本金启用额度
                    ,row_number() OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) rn_tem_grp --排序_团队_企业
                    ,sum(CASE
                           WHEN coalesce(t1.ctr_amt, 0) > 0 THEN 1 + T1.efe_crd_cst_ind + T1.efe_dep_cst_ind + T1.efe_chm_cst_ind + T1.efe_insu_cst_ind + T1.efe_fnd_cst_ind + T1.efe_nob_met_cst_ind
                           ELSE 0
                         END) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) pd_hld_qty_sum_tem --汇总产品持有数_团队
                    ,count(DISTINCT  t1.cst_id)  OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) mgr_grp_cst_num --客户经理_企业授信客户数统计
                    ,coalesce(sum(t1.mon_acm_prcp_bal_acml) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_mon_acm_prcp_bal_acml --客户经理_企业本金余额月日均
                    ,coalesce(sum(t1.actl_start_use_crd_lmt) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_actl_start_use_crd_lmt --客户经理_企业本金启用额度
                    ,row_number() OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) rn_mgr_grp --排序_客户经理_企业
                    ,sum(CASE
                           WHEN coalesce(t1.ctr_amt, 0) > 0 THEN 1 + T1.efe_crd_cst_ind + T1.efe_dep_cst_ind + T1.efe_chm_cst_ind + T1.efe_insu_cst_ind + T1.efe_fnd_cst_ind + T1.efe_nob_met_cst_ind
                           ELSE 0
                         END) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) pd_hld_qty_sum_mgr --汇总产品持有数_客户经理
                    ,coalesce(sum(t1.ctr_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_ctr_bal  --分行_企业新增消费贷款余额
                    ,coalesce(sum(t1.ctr_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_ctr_bal  --支行_企业新增消费贷款余额
                    ,coalesce(sum(t1.ctr_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_ctr_bal  --团队_企业新增消费贷款余额
                    ,coalesce(sum(t1.ctr_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_ctr_bal  --客户经理_企业新增消费贷款余额
                    --20231211update
                    ,coalesce(sum(t1.ctr_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_ctr_fenzi --分行_企业授信金额加权利率分子
                    ,coalesce(sum(t1.ctr_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_ctr_fenmu --分行_企业授信金额加权利率分母
                    ,coalesce(sum(t1.ctr_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_ctr_fenzi --支行_企业授信金额加权利率分子
                    ,coalesce(sum(t1.ctr_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_ctr_fenmu --支行_企业授信金额加权利率分母
                    ,coalesce(sum(t1.ctr_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_ctr_fenzi --团队_企业授信金额加权利率分子
                    ,coalesce(sum(t1.ctr_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_ctr_fenmu --团队_企业授信金额加权利率分母
                    ,coalesce(sum(t1.ctr_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_ctr_fenzi --客户经理_企业授信金额加权利率分子
                    ,coalesce(sum(t1.ctr_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_ctr_fenmu --客户经理_企业授信金额加权利率分母
                    ,coalesce(sum(t1.dbil_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_dbil_fenzi --分行_企业用信金额加权利率分子
                    ,coalesce(sum(t1.dbil_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_dbil_fenmu --分行_企业用信金额加权利率分母
                    ,coalesce(sum(t1.dbil_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_dbil_fenzi --支行_企业用信金额加权利率分子
                    ,coalesce(sum(t1.dbil_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_dbil_fenmu --支行_企业用信金额加权利率分母
                    ,coalesce(sum(t1.dbil_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_dbil_fenzi --团队_企业用信金额加权利率分子
                    ,coalesce(sum(t1.dbil_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_dbil_fenmu --团队_企业用信金额加权利率分母
                    ,coalesce(sum(t1.dbil_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_dbil_fenzi --客户经理_企业用信金额加权利率分子
                    ,coalesce(sum(t1.dbil_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_dbil_fenmu --客户经理_企业用信金额加权利率分母
                    ,coalesce(sum(t1.aum_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0)     brc_aum     --分行_企业aum
                    ,coalesce(sum(t1.aum_bal_add) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_aum_add --分行_企业aum_add
                    ,coalesce(sum(t1.aum_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0)     sbr_aum     --支行_企业aum
                    ,coalesce(sum(t1.aum_bal_add) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_aum_add --支行_企业aum_add
                    ,coalesce(sum(t1.aum_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0)     tem_aum     --团队_企业aum
                    ,coalesce(sum(t1.aum_bal_add) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_aum_add --团队_企业aum_add
                    ,coalesce(sum(t1.aum_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0)     mgr_aum     --客户经理_企业aum
                    ,coalesce(sum(t1.aum_bal_add) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_aum_add --客户经理_企业aum_add
                    ,CASE
                       WHEN t1.ent_cst_id <> '-' THEN '1'
                       ELSE '0'
                     END if_jiandang --是否建档客户
                    ,CASE
                       WHEN t1.ent_cst_id = '-' THEN '0'
                       ELSE decode(t3.forml_cst_ind, '1', 1, '', 0)
                     END forml_cst_ind  --是否正式客户标识
                    --20231226update
                    ,coalesce(sum(t1.ctr_amt) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_ctr_amt --分行_企业新增消费贷款金额
                    ,coalesce(sum(t1.ctr_amt) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_ctr_amt --支行_企业新增消费贷款金额
                    ,coalesce(sum(t1.ctr_amt) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_ctr_amt --团队_企业新增消费贷款金额
                    ,coalesce(sum(t1.ctr_amt) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_ctr_amt --客户经理_企业新增消费贷款金额
					--,coalesce(sum(t1.card_cnt) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_card_cnt --分行_企业新增信用卡户数
                    --,coalesce(sum(t1.card_cnt) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_card_cnt --支行_企业新增信用卡户数
                    --,coalesce(sum(t1.card_cnt) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_card_cnt --团队_企业新增信用卡户数
                    --,coalesce(sum(t1.card_cnt) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_card_cnt --客户经理_企业新增信用卡户数
FROM    lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet2_2024 t1
LEFT JOIN    adm_pub.adm_csm_cbas_mng_inf_dd t3 --客户集市-客户基础-客户管户信息
ON      t1.ent_cst_id = t3.cst_id
AND     t3.dt = '20250331'
WHERE   t1.dt = '20250331'
)  a
;


---2024年汇总
--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_2024 PURGE;
--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_2024
--(    cst_id                              STRING  COMMENT '个人客户号'
--    ,cst_nm                              STRING  COMMENT '个人客户名'
--    ,ent_cst_nm                          STRING  COMMENT '企业客户名'
--    ,brc_org_nm                          STRING  COMMENT '分行名称'
--    ,rn_brc_grp                          STRING  COMMENT '排序_分行_企业'
--    ,if_jiandang                         STRING  COMMENT '是否建档'
--    ,forml_cst_ind                       STRING  COMMENT '正式客户标识'
--    ,brc_grp_cst_num_20231231            DECIMAL COMMENT '2023年末分行_企业新增授信客户数统计'
--    ,brc_grp_cst_num                     DECIMAL COMMENT '分行_企业2024年新增授信客户数统计'
--    , brc_grp_project_num                DECIMAL COMMENT '分行_企业新增项目数(3比1折算后)'
--    ,brc_grp_ctr_amt                     DECIMAL COMMENT '分行_企业新增消费贷款金额'
--    ,brc_grp_ctr_bal                     DECIMAL COMMENT '分行_企业新增消费贷款余额'
--    ,brc_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '分行_企业本金余额月日均'
--    ,brc_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '分行_企业本金启用额度'
--    ,yongxin_rate_mth_avg_brc            DECIMAL COMMENT '月日均用信率_分行'
--    ,brc_ctr_rate                        DECIMAL COMMENT '分行加权平均授信利率'
--    ,brc_dbil_rate                       DECIMAL COMMENT '分行加权平均用信利率'
--    ,sbr_org_nm                          STRING  COMMENT '支行名称'
--    ,rn_sbr_grp                          STRING  COMMENT '排序_支行_企业'
--    ,sbr_grp_cst_num_20231231            DECIMAL COMMENT '2023年末支行_企业新增授信客户数统计'
--    ,sbr_grp_cst_num                     DECIMAL COMMENT '支行_企业2024年新增授信客户数统计'
--    ,sbr_grp_project_num                 DECIMAL COMMENT '支行_企业新增项目数(3比1折算后)'
--    ,sbr_grp_ctr_amt                     DECIMAL COMMENT '支行_企业新增消费贷款金额'
--    ,sbr_grp_ctr_bal                     DECIMAL COMMENT '支行_企业新增消费贷款余额'
--    ,sbr_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '支行_企业本金余额月日均'
--    ,sbr_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '支行_企业本金启用额度'
--    ,yongxin_rate_mth_avg_sbr            DECIMAL COMMENT '月日均用信率_支行'
--    ,sbr_ctr_rate                        DECIMAL COMMENT '支行加权平均授信利率'
--    ,sbr_dbil_rate                       DECIMAL COMMENT '支行加权平均用信利率'
--    ,tem_org_id                          STRING  COMMENT '团队机构号'
--    ,tem_org_nm                          STRING  COMMENT '团队机构名称'
--    ,rn_tem_grp                          STRING  COMMENT '排序_团队_企业'
--    ,tem_grp_cst_num_20231231            DECIMAL COMMENT '2023年末团队_企业新增授信客户数统计'
--    ,tem_grp_cst_num                     DECIMAL COMMENT '团队_企业2024年新增授信客户数统计'
--    ,tem_grp_project_num                 DECIMAL COMMENT '团队_企业新增项目数(3比1折算后)'
--    ,tem_grp_ctr_amt                     DECIMAL COMMENT '团队_企业新增消费贷款金额'
--    ,tem_grp_ctr_bal                     DECIMAL COMMENT '团队_企业新增消费贷款余额'
--    ,tem_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '团队_企业本金余额月日均'
--    ,tem_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '团队_企业本金启用额度'
--    ,yongxin_rate_mth_avg_tem            DECIMAL COMMENT '月日均用信率_团队'
--    ,tem_ctr_rate                        DECIMAL COMMENT '团队加权平均授信利率'
--    ,tem_dbil_rate                       DECIMAL COMMENT '团队加权平均用信利率'
--    ,prm_mgr_id                          STRING  COMMENT '主管户客户经理工号'
--    ,prm_mgr_nm                          STRING  COMMENT '主管户客户经理名称'
--    ,rn_mgr_grp                          STRING  COMMENT '排序_客户经理_企业'
--    ,mgr_grp_cst_num_20231231            DECIMAL COMMENT '2023年末客户经理_企业新增授信客户数统计'
--    ,mgr_grp_cst_num                     DECIMAL COMMENT '客户经理_企业2024年新增授信客户数统计'
--    ,mgr_grp_project_num                 DECIMAL COMMENT '客户经理_企业新增项目数(3比1折算后)'
--    ,mgr_grp_ctr_amt                     DECIMAL COMMENT '客户经理_企业新增消费贷款金额'
--    ,mgr_grp_ctr_bal                     DECIMAL COMMENT '客户经理_企业新增消费贷款余额'
--    ,mgr_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '客户经理_企业本金余额月日均'
--    ,mgr_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '客户经理_企业本金启用额度'
--    ,yongxin_rate_mth_avg_mgr            DECIMAL COMMENT '月日均用信率_客户经理'
--    ,mgr_dbil_rate                       DECIMAL COMMENT '客户经理加权平均用信利率'
--    ,mgr_ctr_rate                        DECIMAL COMMENT '客户经理加权平均授信利率'
--    ,brc_org_id                          STRING  COMMENT '分行层级机构编号'
--    ,sbr_org_id                          STRING  COMMENT '支行层级机构编号'
--)
-- COMMENT
-- '企业团办_SHEET4-企业清单2_汇总_2024'
-- PARTITIONED BY
-- (
--     DT STRING COMMENT '日期分区'
-- );

-----新增表字段
-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_2024 add  columns
--(grp_org_id               STRING  COMMENT '集团机构编号'
--,cpy_org_id               STRING  COMMENT '法人机构编号'
--);




INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_2024 PARTITION (DT = '20250331')
select distinct   t1.cst_id                             --个人客户号
,t1.cst_nm                                --个人客户名
,t1.ent_cst_nm                          --企业客户名
,t1.brc_org_nm                          --分行名称
,t1.rn_brc_grp                          --排序_分行_企业
,t1.if_jiandang                         --是否建档
,t1.forml_cst_ind                       --正式客户标识
,t2.brc_grp_cst_num as brc_grp_cst_num_20231231            --2023年末分行_企业新增授信客户数统计
,t1.brc_grp_cst_num                     --分行_企业2024年新增授信客户数统计
,floor((case when nvl(t1.brc_grp_cst_num,0) <= 2  and  nvl(t2.brc_grp_cst_num,0) <= 2 then  (nvl(t1.brc_grp_cst_num,0) + nvl(t2.brc_grp_cst_num,0))
       when nvl(t1.brc_grp_cst_num,0) >= 3  then   nvl(t1.brc_grp_cst_num,0)  else 0 end)/3)  as   brc_grp_project_num               --分行_企业新增项目数(3比1折算后)
,t1.brc_grp_ctr_amt                     --分行_企业新增消费贷款金额
,t1.brc_grp_ctr_bal                     --分行_企业新增消费贷款余额
,t1.brc_grp_mon_acm_prcp_bal_acml       --分行_企业本金余额月日均
,t1.brc_grp_actl_start_use_crd_lmt      --分行_企业本金启用额度
,t1.yongxin_rate_mth_avg_brc            --月日均用信率_分行
,case when t1.brc_ctr_fenmu > 0 then t1.brc_ctr_fenzi/t1.brc_ctr_fenmu else ''     end   as  brc_ctr_rate                           --分行加权平均授信利率
,case when t1.brc_dbil_fenmu > 0 then t1.brc_dbil_fenzi/t1.brc_dbil_fenmu  else '' end   as  brc_dbil_rate                        --分行加权平均用信利率
,t1.sbr_org_nm                         --支行名称
,t1.rn_sbr_grp                            --排序_支行_企业
,t3.sbr_grp_cst_num   as  sbr_grp_cst_num_20231231           --2023年末支行_企业新增授信客户数统计
,t1.sbr_grp_cst_num                    --支行_企业2024年新增授信客户数统计
,floor((case when nvl(t1.sbr_grp_cst_num,0) <= 2  and  nvl(t3.sbr_grp_cst_num,0) <= 2 then  nvl(t1.sbr_grp_cst_num,0) + nvl(t3.sbr_grp_cst_num,0)
       when nvl(t1.sbr_grp_cst_num,0) >= 3  then   nvl(t1.sbr_grp_cst_num,0)  else 0 end)/3)  as      sbr_grp_project_num                 --支行_企业新增项目数(3比1折算后)
,t1.sbr_grp_ctr_amt                    --支行_企业新增消费贷款金额
,t1.sbr_grp_ctr_bal                    --支行_企业新增消费贷款余额
,t1.sbr_grp_mon_acm_prcp_bal_acml      --支行_企业本金余额月日均
,t1.sbr_grp_actl_start_use_crd_lmt     --支行_企业本金启用额度
,t1.yongxin_rate_mth_avg_sbr           --月日均用信率_支行
,case when t1.sbr_ctr_fenmu > 0 then t1.sbr_ctr_fenzi/t1.sbr_ctr_fenmu else ''     end   as  sbr_ctr_rate                       --支行加权平均授信利率
,case when t1.sbr_dbil_fenmu > 0 then t1.sbr_dbil_fenzi/t1.sbr_dbil_fenmu  else '' end   as  sbr_dbil_rate                      --支行加权平均用信利率
,t1.tem_org_id                          --团队机构号
,t1.tem_org_nm                          --团队机构名称
,t1.rn_tem_grp                          --排序_团队_企业
,t4.tem_grp_cst_num  as  tem_grp_cst_num_20231231            --2023年末团队_企业新增授信客户数统计
,t1.tem_grp_cst_num                     --团队_企业2024年新增授信客户数统计
,floor((case when nvl(t1.tem_grp_cst_num,0) <= 2  and  nvl(t4.tem_grp_cst_num,0) <= 2 then  (nvl(t1.tem_grp_cst_num,0) + nvl(t4.tem_grp_cst_num ,0))
       when nvl(t1.tem_grp_cst_num,0) >= 3  then   nvl(t1.tem_grp_cst_num,0)  else 0 end)/3)  as     tem_grp_project_num                  --团队_企业新增项目数(3比1折算后)
,t1.tem_grp_ctr_amt                     --团队_企业新增消费贷款金额
,t1.tem_grp_ctr_bal                     --团队_企业新增消费贷款余额
,t1.tem_grp_mon_acm_prcp_bal_acml       --团队_企业本金余额月日均
,t1.tem_grp_actl_start_use_crd_lmt      --团队_企业本金启用额度
,t1.yongxin_rate_mth_avg_tem            --月日均用信率_团队
,case when t1.tem_ctr_fenmu > 0 then t1.tem_ctr_fenzi/t1.tem_ctr_fenmu else ''     end   as  tem_ctr_rate                         --团队加权平均授信利率
,case when t1.tem_dbil_fenmu > 0 then t1.tem_dbil_fenzi/t1.tem_dbil_fenmu  else '' end   as  tem_dbil_rate                       --团队加权平均用信利率
,t1.prm_mgr_id                          --主管户客户经理工号
,t1.prm_mgr_nm                          --主管户客户经理名称
,t1.rn_mgr_grp                          --排序_客户经理_企业
,t5.mgr_grp_cst_num as  mgr_grp_cst_num_20231231            --2023年末客户经理_企业新增授信客户数统计
,t1.mgr_grp_cst_num                     --客户经理_企业2024年新增授信客户数统计
,floor((case when nvl(t1.mgr_grp_cst_num,0) <= 2  and  nvl(t5.mgr_grp_cst_num,0) <=2  then  (nvl(t1.mgr_grp_cst_num,0) + nvl(t5.mgr_grp_cst_num,0))
       when nvl(t1.mgr_grp_cst_num,0) >= 3  then   nvl(t1.mgr_grp_cst_num,0) else 0 end)/3)  as      mgr_grp_project_num                   --客户经理_企业新增项目数(3比1折算后)
,t1.mgr_grp_ctr_amt                     --客户经理_企业新增消费贷款金额
,t1.mgr_grp_ctr_bal                     --客户经理_企业新增消费贷款余额
,t1.mgr_grp_mon_acm_prcp_bal_acml       --客户经理_企业本金余额月日均
,t1.mgr_grp_actl_start_use_crd_lmt      --客户经理_企业本金启用额度
,t1.yongxin_rate_mth_avg_mgr            --月日均用信率_客户经理
,case when t1.mgr_dbil_fenmu > 0 then t1.mgr_dbil_fenzi/t1.mgr_dbil_fenmu  else '' end   as  mgr_dbil_rate                       --客户经理加权平均用信利率
,case when t1.mgr_ctr_fenmu > 0 then t1.mgr_ctr_fenzi/t1.mgr_ctr_fenmu else ''     end   as  mgr_ctr_rate                       --客户经理加权平均授信利率
,t1.brc_org_id               --分行层级机构编号
,t1.sbr_org_id               --支行层级机构编号
,t1.grp_org_id               --集团机构编号
,t1.cpy_org_id               --法人机构编号
from   lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_2024     t1
left  join  (select  distinct  t2.ent_cst_nm            --企业客户名
		,t2.brc_org_nm            --分行名称
		,t2.brc_grp_cst_num       --分行_企业授信客户数统计
from   lab_bigdata_dev.phjrb_ys_qytb_bus_loan_cst_cnt_wdq_wjq_20231231   t2		 )   t2
ON      t1.ent_cst_nm = t2.ent_cst_nm
AND     t1.brc_org_nm = t2.brc_org_nm
left  join  (select  distinct  t2.ent_cst_nm            --企业客户名
		,t2.sbr_org_nm            --支行名称
		,t2.sbr_grp_cst_num       --支行_企业授信客户数统计
from   lab_bigdata_dev.phjrb_ys_qytb_bus_loan_cst_cnt_wdq_wjq_20231231   t2		 )   t3
ON      t1.ent_cst_nm = t3.ent_cst_nm
AND     t1.sbr_org_nm = t3.sbr_org_nm
left  join  (select  distinct  t2.ent_cst_nm            --企业客户名
		,t2.tem_org_nm            --团队机构名称
		,t2.tem_grp_cst_num       --团队_企业授信客户数统计
from   lab_bigdata_dev.phjrb_ys_qytb_bus_loan_cst_cnt_wdq_wjq_20231231   t2		 )   t4
ON      t1.ent_cst_nm = t4.ent_cst_nm
AND     t1.tem_org_nm = t4.tem_org_nm
left  join  (select  distinct  t2.ent_cst_nm            --企业客户名
		,t2.prm_mgr_nm            --主管户客户经理名称
		,t2.mgr_grp_cst_num       --客户经理_企业授信客户数统计
from   lab_bigdata_dev.phjrb_ys_qytb_bus_loan_cst_cnt_wdq_wjq_20231231   t2		 )   t5
ON      t1.ent_cst_nm = t5.ent_cst_nm
AND     t1.prm_mgr_nm = t5.prm_mgr_nm
where t1.dt = '20250331'
;
**12烟火商户-行业分析_01行业分析.sql
SELECT * FROM ent_idv_hangye_forml_cst_ind_bao;



SELECT * FROM ent_idv_hangye_forml_cst_ind_gs_1
**12烟火商户-行业分析_a烟火商户贷款优先级排序.sql
select COUNT(DISTINCT 统一社会信用代码) 市场主体数
 , count(DISTINCT case when 名称相似度=1    or (名称相似度>0.4 and 地址相似度>0.4 and 工商名称 not like '%副食品%' and 工商名称 not like '%综合经营部%') then 统一社会信用代码 end ) 匹配成功数100及4040以上
 , count(DISTINCT case when 名称相似度=1    or (名称相似度>0.5 and 地址相似度>0.5 and 工商名称 not like '%副食品%' and 工商名称 not like '%综合经营部%') then 统一社会信用代码 end ) 匹配成功数100及5050以上
  , count(DISTINCT case when 名称相似度=1   or (名称相似度>0.6 and 地址相似度>0.6 and 工商名称 not like '%副食品%' and 工商名称 not like '%综合经营部%') then 统一社会信用代码 end ) 匹配成功数100及6060以上
from ac_gs_find_gd t ;

市场主体数	匹配成功数100及4040以上	匹配成功数100及5050以上	匹配成功数100及6060以上
1822006	41092	36329	34878




 台州市椒江喜牛家餐饮店
丽水市莲都区畲湘情怀民宿客栈
诸暨市顺旺基快餐店
庆元县吴春莲早餐店
龙泉市八都镇御园民宿客栈
上海市浦东新区周浦镇蔓俪宾馆
磐安县碗筷鱼菜馆


select *
from ac_gs_find_gd t
where 高德名称 like '%小菜一碟%'；

DROP TABLE IF EXISTS lab_bigdata_dev.gs_1years;

CREATE TABLE lab_bigdata_dev.gs_1years AS
SELECT  b.col_2  AS 一级行业
        ,c.col_2 AS 二级行业
        ,d.col_2 AS 三级行业
        ,e.col_2 AS 四级行业
        ,a . *

FROM    (
            SELECT  enttype --企业类型
                    ,esdate --	成立日期
                    ,socialcreditcode --统一社会信用代码
                    ,entname --	企业名称
                    ,address --注册地址
                    ,regcapital --注册资金
                    ,industrycode --国民经济行业类型
                    ,industryname --国民经济行业名称
                   ,industryphycode --国民经济行业类型
                    ,industryphyname --国民经济行业名称
                    ,concat(a.industryphycode, a.industrycode)                            AS code
                    ,provincecode --省代码
                    ,citycode --	城市代码
                    ,entstatuscode --企业状态码值
                    --,cd_val_dscr --城市
					,case when cd_val_dscr='上海市－市辖区' then '上海' else substr(cd_val_dscr,5,2) end as 城市  --江苏省－苏州
                    ,ROW_NUMBER() OVER ( PARTITION BY socialcreditcode ORDER BY dt DESC ) AS rk
            FROM    edw.nout_gs_label_total_sub AS a --企业标签总表
            LEFT JOIN    EDW.DWD_CODE_LIBRARY AS b
            ON      a.citycode = b.cd_val
            AND     fld_nm = upper('countrycode')
            AND     tbl_nm = 'PREPAREAPPLY_INFO'
            WHERE   a.dt >= '00000'
            AND     a.enttype in ( '个体工商户' ,'农民专业合作社','一般法人企业','非法人企业')
            AND     REPLACE(esdate, '-', '') <= '20230531'
        ) AS a
LEFT JOIN    qbi_file_20240307_08_40_12 AS b --国民经济行业分类代码表
ON      trim(a.industryphycode) = trim(b.col_1)
AND     length(b.col_1) = '1'
AND     b.pt <> ''
LEFT JOIN    qbi_file_20240307_08_40_12 AS c --国民经济行业分类代码表
ON      trim(substr(a.code, 1, 3)) = trim(c.col_1)
AND     length(c.col_1) = '3'
AND     c.pt <> ''
LEFT JOIN    qbi_file_20240307_08_40_12 AS d --国民经济行业分类代码表
ON      trim(substr(a.code, 1, 4)) = trim(d.col_1)
AND     length(d.col_1) = '4'
AND     d.pt <> ''
LEFT JOIN    qbi_file_20240307_08_40_12 AS e --国民经济行业分类代码表
ON      trim(a.code) = trim(e.col_1)
AND     length(e.col_1) = '5'
AND     e.pt <> ''
WHERE   a.rk = '1'
and a.entstatuscode = '1'
;
SELECT * FROM gs_1years
SELECT * FROM industry_score
**12烟火商户-行业分析_宠物行业.sql
CREATE TABLE LAB_BIGDATA_DEV.yanhuo_new_loan as
select t.*
	,t2.行业景气指数 -- 行业景气指数_1至100分_分越高行业越景气
	,t2.四级个体户总量 -- 该城市四级行业的个体户数量
	,gs.客户号
	,dbit.2023行业用款高峰期所属月份
	--,dbit.行业用款高峰期所属月份
	,zx.他行授信金额
	,zx.他行贷款余额
	,zx.他行贷款机构数
	,zx.最近一次征信查询日期
	,zx.最近一次征信分
	,zx.小贷消金的贷款余额
from lab_bigdata_dev.gs_1years t  --成立时间<=20230531，在营，个体户及企业的工商名单
left join lab_bigdata_dev.industry_score t2 --行业景气分
on t.城市=t2.city
and t.code=t2.code

left join lab_bigdata_dev.loan_cst_gs loan --贷款客户（未结清，或者近3年有合同的客户清单）名下的企业都得剔除
on t.socialcreditcode=loan.统一社会信用代码

left join app_rpt.FCT_THS_MCH_INF_CESHI mch --泰惠收商户信息表 非泰惠收商户
on t.socialcreditcode=mch.mcht_licn_no
AND     mch.dt = '@@{yyyyMMdd}'

left join lab_bigdata_dev.cst_gs gs --关联用：客户号，统一社会信用代码
on t.socialcreditcode=gs.统一社会信用代码

left join lab_bigdata_dev.bad_cst_id_all badt  --有客户号的坏客户
on gs.客户号=badt.cst_id
left join LAB_BIGDATA_DEV.GUANXISHU_ZHISHITUPU_GS_FY_DROP_LIST GS_FY  --潜在客户的法院工商坏客户
on t.entname=GS_FY.drop_name  --企业名称

left join lab_bigdata_dev.industry_4ji_loan dbit --关联字段用：行业用款高峰期
on t.code=dbit.cd_val

left join lab_bigdata_dev.other_zx_analy zx --对私对公征信汇总
on gs.客户号=zx.客户号
where t2.行业景气指数>=60
and t2.四级个体户总量>=30
and loan.统一社会信用代码 is null  --贷款客户（未结清，或者近3年有合同的客户清单）名下的企业都得剔除
and mch.mcht_licn_no is null  ----非泰惠收商户
and coalesce(badt.bad,0)<>'1'   --有客户号的坏客户, 0 或者空
and coalesce(GS_FY.drop_name,'')=''    --潜在客户的法院工商坏客户
;

SELECT count(*) FROM yanhuo_new_loan; --4096247

SELECT * FROM LAB_BIGDATA_DEV.gaode_shanghu limit 10;

SELECT DISTINCT cityname FROM LAB_BIGDATA_DEV.gaode_shanghu;

drop table gaode_shaoxing_shanghu;
CREATE TABLE if not exists lab_bigdata_dev.gaode_shaoxing_shanghu
(
        id	            STRING
        ,parent	        STRING
        ,name	        STRING
        ,address	     STRING
        ,location	    STRING
        ,type	        STRING
        ,typecode	    STRING
        ,pname	        STRING
        ,pcode	        STRING
        ,cityname	    STRING
        ,citycode	    STRING
        ,adname	        STRING
        ,adcode	        STRING
        ,business	    STRING
        ,children	    STRING
        ,navi	        STRING
        ,photos	        STRING
        ,COM_ID	        STRING  COMMENT '客户号'
        ,子社区	    STRING  COMMENT '子社区'
        ,版块	        STRING  COMMENT '版块'
        ,综合社区	    STRING  COMMENT '综合社区'
)
;

SELECT * FROM gaode_shaoxing_shanghu ;


create table if not exists lab_bigdata_dev.gjj_shaoxingdiqu_shanghu_zishequ as
select    a.id
        ,parent
        ,name
        ,address
        ,location
        ,type
        ,typecode
        ,pname
        ,pcode
        ,cityname
        ,citycode
        ,adname
        ,adcode
        ,business
        ,children
        ,navi
        ,photos
        ,COM_ID
        ,子社区
        ,版块
        ,综合社区
		,get_json_object(a.business ,'$.tel') as 电话
		,e.sbr_org_id as 支行机构编号
		,e.sbr_org_nm as 支行机构名称
		,c.com_vindicate_id as 主维护人编号
		,d.empe_nm as 主维护人姓名
from lab_bigdata_dev.gaode_shaoxing_shanghu as a
left join edw.xwdt_xw_community as c --社区信息表
    on substr(a.子社区,1,INSTR(a.子社区,'-')-1)=c.com_code
    and c.dt='@@{yyyyMMdd}'
    and (c.com_code<>'' or c.com_code is not null)
left join edw.dws_hr_empe_inf_dd as d --员工汇总信息
    on c.com_vindicate_id=d.empe_id
    and d.dt='@@{yyyyMMdd}'
left join edw.dim_hr_org_mng_org_tree_dd as e
    on c.org_id=e.org_id
    and e.dt='@@{yyyyMMdd}'
;
**12烟火商户-行业分析_行业信贷.sql
select distinct t.cst_id
				,一级行业
				,二级行业
				,三级行业
				,四级行业
				,code
				,他行机构数
				,机构均授信
				,机构均贷款余额
				,机构均授信_信用
				,机构均授信_保证
				,征信总信贷授信_剔除房贷_车贷_抵押贷
				,coalesce(征信总信贷授信_剔除房贷_车贷_抵押贷,0)+coalesce(t.bind_amt,0) as 行内外总信贷授信_剔除房贷_车贷_抵押贷
				,征信总信贷授信_信用
				,征信总信贷授信_保证
				,笔均授信
				,笔均授信_信用
				,笔均授信_保证
				,他行机构最大授信
				,机构最大的授信信用
				,机构最大的授信保证
				,单笔授信最大值
				,笔最大的授信信用
				,笔最大的授信保证
				,t.bind_amt    -- 我行授信_信用保证
				,ctr_bal      -- 我行贷款余额_信用保证
				,INTR_fenzi  --利率分子
				,intr_fenmu
				,22年他行平均利率
				,23年他行平均利率
				,case when 22年他行平均利率>0  and 23年他行平均利率>0 then 23年他行平均利率-22年他行平均利率 end as 他行平均利率下降幅度
				,2023年个人我行平均利率
				,我行用信率
				,ctr_amt_other
				,CTR_BAL_other
				,续贷价格下降幅度
				,eva_万元
				,ftp_万元
				,是否流失客户
				,case when t2.cst_id is not null then 1 else 0 end as cst_eff --我行信贷户未结清
				,case when his_ln.cst_id is not null then 1 else 0 end as cst_his_ln --我行历史有信贷合作的客户数
				,t3.2022年行内外总信贷授信
		from lab_bigdata_dev.ent_idv_zhengxin_geti t
		left join lab_bigdata_dev.ent_idv_ln_cst t2
		on t.cst_id=t2.cst_id
		left join (SELECT  DISTINCT t.cst_id
					FROM    edw.dim_bus_loan_ctr_inf_dd t
					WHERE   t.dt = '20231231') his_ln
		on t.cst_id=his_ln.cst_id
		left join whole_loan_amt2022 t3
		on t.cst_id=t3.cst_id
		inner join (select socialcreditcode from lab_bigdata_dev.ent_idv_hangye_forml_cst_ind_gs where enttype in ( '一般法人企业','非法人企业') ) gs
		on t.creditcode_all =gs.socialcreditcode
**12烟火商户-行业分析_行业分析工商.sql
select distinct cst_id

				,一级行业

				,二级行业

				,三级行业

				,四级行业

				,code

				,新发生风险贷款率

				,全量风险贷款率

				,近一年新发生风险贷款

				,贷款余额

				,风险贷款余额

				,是否征信逾期

		from lab_bigdata_dev.ent_idv_hangyehuizong_all t

		inner join (select socialcreditcode from lab_bigdata_dev.ent_idv_hangye_forml_cst_ind_gs where enttype in ( '一般法人企业','非法人企业') ) gs

		on t.creditcode_all =gs.socialcreditcode
**12烟火商户-行业分析_行业逾期.sql
drop table if exists lab_bigdata_dev.industry_anly;
CREATE TABLE lab_bigdata_dev.industry_anly AS
select
	t.一级行业
	,t.二级行业
	,t.三级行业
	,t.四级行业
	,t.code
	,四级企业总量
	,2022年新注册企业数增长情况 as 2022年新注册企业数量
	,2023年新注册企业数增长情况 as 2023年新注册企业数量
	,2023年注销的企业数量


	,四级行业占全体企业占比
	,四级行业占所属一级行业占比
	,2022年新注册企业数占所属一级行业占比
	,2023年新注册企业数占所属一级行业占比
	,2023年新注册企业数占所属四级行业占比
	,2023年注销企业数占所属一级行业占比
	,2023年注销企业数占所属四级行业占比
	,case when coalesce(2023年新注册企业数占所属四级行业占比,0) is not null or coalesce(2023年注销企业数占所属四级行业占比,0) is not null  then coalesce(2023年新注册企业数占所属四级行业占比,0)-coalesce(2023年注销企业数占所属四级行业占比,0) end as 2023年净增企业数占所属四级行业占比
	,t2.我行历史有信贷合作的客户数


	,t.近3年主营业务收入增长率
	,t.近3年资产总额增长率
	,t.近3年人数增长率
	,t.2023年主营业务收入
	,t.2022年主营业务收入
	,t.2023年资产总额
	,t.2022年资产总额
	,t.2023年人数
	,t.2022年人数

	,t2.我行信贷客户数
	,case when 四级企业总量>0 then t2.我行信贷客户数/四级企业总量 end as 我行信贷覆盖度
	,户均我行授信_信用保证
	,我行授信_信用保证
	,户均贷款余额_信用保证
	,贷款余额_信用保证
    ,2023年个人我行平均利率
	,行业我行平均利率
	,我行用信率
	,续贷价格下降幅度
	,户均eva_万元
	,户均ftp_万元
	,流失率
	,户均征信总信贷授信_剔除房贷_车贷_抵押贷
	,征信总信贷授信_剔除房贷_车贷_抵押贷
	,户均征信总信贷授信_信用
	,户均征信总信贷授信_保证
	,22年他行平均利率
	,23年他行平均利率
	,征信他行贷款余额
	,户均征信他行贷款余额
	,他行循环贷用信率
	,户均他行机构数
	,户均他行机构最大授信
	,户均机构最大的授信信用
	,户均机构最大的授信保证
	,机构均授信
	,机构均贷款余额
	,机构均授信_信用
	,机构均授信_保证
	,笔均授信
	,笔均授信_信用
	,笔均授信_保证
	,单笔授信最大值
	,笔最大的授信信用
	,笔最大的授信保证

	,近一年新发生风险贷款率
	,全量风险贷款率
	,逾期客户占比
	,近一年新发生风险贷款
	,贷款余额
	,风险贷款余额

	,他行平均利率下降幅度
	,行内外循环贷用信率
	,行内外信用保证类总信贷授信增长率


from lab_bigdata_dev.ent_idv_hangye_forml_cst_ind_gs_1 t
left join ent_idv_zhengxin_ln t2
on t.code=t2.code
left join ent_idv_zhengxin_yq t3
on t.code=t3.code
where coalesce(t.code,'nullnull')<>'nullnull'
and coalesce(t.code,'')<>''
;
**13负债报告_历史负债报告初始化.sql
/*
1.近一年已结清清单（含是否续贷）
1.1 续贷相关字段
先根据账户中间表获取是否续贷、续贷担保变化、结清前是否逾期,根据账务ID(ACT_ID)进行分组统计的
1.2 字段取值
根据账务ID关联借贷账户基本信息表(pd01a_basicinfoseg),loan_amount取账户中间表LOAN_AMT,close_date取账户中间表CLOSE_DATE,特殊交易类型先根据借贷账户基本信息关联pd01f_speinfseg,再关联pd01f_speinfsegsub,
取到对应账户的特殊交易信息sub数组后,根据特殊交易发生日期倒序,倒序后取数组第一个中的特殊交易类型,其余字段取基本信息中的
1.3 代码截图
1.3.1根据账户中间表获取是否续贷、续贷担保变化、结清前是否逾期,根据账务ID(ACT_ID)进行分组统计
1.3.2保存近一年已结清数据
基本信息、特殊交易类型
*/

DROP TABLE IF EXISTS ncip_CPQ_SIM_SETTLED_ACCOUNT_INFO;
create table ncip_CPQ_SIM_SETTLED_ACCOUNT_INFO
(
	id             STRING COMMENT 'id无实际意义',
	report_id      STRING COMMENT '报告编号',
	account_num    STRING COMMENT '账户编号',
	account_type   STRING COMMENT '账户类型',
	loan_amount   decimal COMMENT '借款金额',
	org_code       STRING COMMENT '机构代码',
	business_type  STRING COMMENT '业务种类',
	issuance_date  STRING COMMENT '起始日期',
	due_date       STRING COMMENT '到期日期',
	repay_periods  BIGINT COMMENT '还款期数',
	input_date     STRING COMMENT '录入日期',
	guarantee_mode STRING COMMENT '担保方式',
	loan_flag       STRING COMMENT '共同借款标志',
	close_date      STRING COMMENT '关闭日期',
	special_type    STRING COMMENT '特殊交易类型',
	org_type       STRING COMMENT '业务管理机构类型',
	IS_RENEWAL_LOAN   STRING COMMENT '是否续贷,2-续贷 1-合同未到期 0-未知',
	RENEWAL_LOAN_GUAR_CHANGE   STRING COMMENT '续贷担保变化,4-担保不变 3-担保变弱 2-担保变强 1-合同未到期 0-未知',
	SETTLED_BEFORE_OVER     STRING COMMENT '结清前是否逾期 1-是 2-否',
	REPAY_METHOD    STRING COMMENT '还款方式'
)
comment '个人近1年已结清贷款账户明细'
PARTITIONED BY
(
    DT STRING COMMENT '日期分区'
)
LIFECYCLE 36000;

--关联,一对多
DROP TABLE IF EXISTS xudai_zx;

CREATE TABLE xudai_zx AS
SELECT  t.REPORT_ID
		,t.act_typ_cd --账户类型
		,t.ctr_amt  --贷款金额
		,t.dtrb_org_code --机构代码
		,t.act_pd_cd  --产品
		,t.act_start_dt --开立日期
		,t.grnt_mth_cd --担保方式
		,t.close_date --关闭日期
		,t.org_type --机构类型
        ,t.agm_end_time
        ,t.agm_no
        , t2.CRD_START_DT 后一笔授信日期优先发放日期其次授信协议日期
		,T2.ACT_START_DT 后一笔账户开立日期
		,T2.AGM_START_DT 后一笔授信协议生效日期
        ,t2.five_ctg 后一笔五级分类代码
        ,t2.GRNT_MTH_CD 后一笔担保方式代码
        ,T2.ctr_amt 后一笔贷款金额优先授信协议额度其次贷款发放金额
		,T2.agm_lmt 后一笔授信协议额度
		, T2.loan_amt 后一笔贷款发放金额
        ,t2.act_id 后一笔账户编号
        ,t2.agm_no 后一笔授信协议编号
        ,t2.org_code 后一笔机构代码优先发放日期其次授信协议日期
		,T2.ACT_TYP_CD 后一笔账户类型
		,t.ACT_ID
--已结清为主表
FROM    (
            SELECT  *
            FROM    edw.NCIP_CP_M_ACCOUNT_INFO
            WHERE   dt='@@{yyyyMMdd}'
            AND     ( ACT_PD_CD = '82'     OR act_typ_cd IN ( 'D1' , 'R1' , 'R4' ) ) --贷款账户或大额分期卡
            AND     replace(substr(CLOSE_DATE,1,10),'-','') >= to_char(DATEADD(to_date(substr(report_id, 1, 8), 'yyyymmdd'), - 365, 'dd'), 'yyyymmdd') --关闭日期近365天
            AND     replace(substr(CLOSE_DATE,1,10),'-','') <= substr(report_id, 1, 8)
            AND     LAST_ACC_STATUS = '3' --已结清

        ) t --已结清为主表
--关联： 近373天新发放的贷款+授信协议, 匹配成功条件：机构相同,时间间隔0至31天。
LEFT JOIN    (
               SELECT  t2.CRD_START_DT ----授信日期,优先发放日期、其次授信协议日期,已转码
						,T2.ACT_START_DT ---- 账户开立日期
						,T2.AGM_START_DT ---- 授信协议生效日期
						,t2.five_ctg --五级分类代码
						,t2.GRNT_MTH_CD --担保方式代码

						,COALESCE(T2.agm_lmt, T2.loan_amt) AS ctr_amt ----贷款金额优先授信协议额度,其次贷款发放金额
						,T2.agm_lmt --授信协议额度
						, T2.loan_amt --贷款发放金额
						,t2.act_id --账户编号
						,t2.agm_no --授信协议编号
						,t2.report_id
						,t2.org_code --机构代码优先发放日期、其次授信协议日期
						,T2.ACT_TYP_CD  --

				FROM    edw.NCIP_CP_M_ACCOUNT_INFO t2
				WHERE   CRD_START_DT >= to_char(DATEADD(to_date(substr(report_id, 1, 8), 'yyyymmdd'), - 373, 'dd'), 'yyyymmdd') ---- 授信日期-报告日期373天以内,优先发放日期、其次授信协议日期
				AND     ( AGM_LMT_PURPOSE IN ( '10' , '20' )    OR ACT_PD_CD = '82'    OR act_typ_cd IN ( 'D1' , 'R1' , 'R4' ) ) --用途贷款
				AND     dt='@@{yyyyMMdd}'

             ) T2
ON      t.report_id = t2.report_id
AND     t.org_code = t2.org_code --机构相同
AND     datediff(to_date(replace(substr(t.CLOSE_DATE,1,10),'-','') , 'yyyymmdd'), to_date(replace(substr(t2.CRD_START_DT,1,10),'-',''), 'yyyymmdd')) <= 1
AND     datediff(to_date(replace(substr(t2.CRD_START_DT,1,10),'-',''), 'yyyymmdd'), to_date(replace(substr(t.CLOSE_DATE,1,10),'-',''), 'yyyymmdd')) <= 31
ORDER BY t.report_id , t.CLOSE_DATE
;

/*
是否续贷	是否续贷：如果该笔合同,关闭日期后31天内或关闭日期前1天内,在同一家机构,有新发放的贷款或者授信协议,则为续贷；反之为否。
续贷类型	续贷类型：该笔合同续贷的基础上,如果授信金额、担保方式一致、续贷前无逾期,则为常规续贷；否则为非常规续贷。续贷额度变化：原额续贷或未知, 续贷担保变化：不变未知, 续贷前是否逾期：否, 则为常规续贷。

续贷担保变化	续贷担保变化：该笔合同续贷的基础上,如果：
1.续贷的担保方式强于旧合同的担保方式,则担保变强；
2.续贷的担保方式弱于旧合同的担保方式,则担保变弱；
3.续贷的担保方式=旧合同的担保方式,则担保不变；
4.无法判断,则未知

强：1质押 2抵押
中：3保证 7农户联保
弱：4信用/免担保
备注：5组合(含保证) 6组合(不含保证) 比 4信用/免担保 强
备注：&ldquo;5组合(含保证) 6组合(不含保证) 9其他&rdquo; 无法与&ldquo;1质押 2抵押 3保证 7农户联保&rdquo; 判

续贷前是否逾期	续贷前是否逾期：该笔合同续贷的基础上,如果：
1.账户关闭日期前3期的还款记录有逾期,则逾期结清后续贷
2.账户关闭日期前3期的还款记录无逾期,则否
*/
--打续贷标签
drop TABLE if EXISTS  xudai_zx_danbao;
create table xudai_zx_danbao AS
SELECT   t.REPORT_ID
		,t.act_typ_cd --账户类型
		,t.ctr_amt  --贷款金额
		,t.dtrb_org_code --机构代码
		,t.act_pd_cd  --产品
		,t.act_start_dt --开立日期
		,t.grnt_mth_cd --担保方式
		,t.close_date --关闭日期
		,t.org_type --机构类型
		,后一笔授信日期优先发放日期其次授信协议日期
		,后一笔账户开立日期
		,后一笔授信协议生效日期
        ,后一笔五级分类代码
        ,后一笔担保方式代码
        ,后一笔贷款金额优先授信协议额度其次贷款发放金额
		,后一笔授信协议额度
		,后一笔贷款发放金额
        ,后一笔授信协议编号
        ,后一笔机构代码优先发放日期其次授信协议日期
		,后一笔账户类型
		--是否续贷
		,case  when  replace(substr(t.agm_end_time,1,10),'-','') >substr(report_id, 1, 8) then 2    --授信协议未到期
				when 后一笔授信日期优先发放日期其次授信协议日期 is not null then	1
			  else 0 end as 是否续贷   -- 2合同未到期 1续贷 0未知
		--续贷担保变化
		,case
			  when (replace(substr(t.agm_end_time,1,10),'-','')<=substr(report_id, 1, 8)  or  t.agm_no is null ) and t.grnt_mth_cd=t.后一笔担保方式代码 then '4'  --授信协议已到期 4担保不变 3担保变弱 2担保变强 1合同未到期 0--
			  when (replace(substr(t.agm_end_time,1,10),'-','')<=substr(report_id, 1, 8)  or  t.agm_no is null ) and (t.grnt_mth_cd in ('1','2') and t.后一笔担保方式代码 in ('1','2') or t.grnt_mth_cd in ('3','7') and t.后一笔担保方式代码 in ('3','7') ) then '4'  --授信协议已到期
			  when (replace(substr(t.agm_end_time,1,10),'-','')<=substr(report_id, 1, 8)  or  t.agm_no is null ) and (t.grnt_mth_cd in ('1','2') and t.后一笔担保方式代码 in ('3','7','4') or t.grnt_mth_cd in ('3','7','5','6') and t.后一笔担保方式代码 in ('4') ) then '3' --授信协议已到期
			  when (replace(substr(t.agm_end_time,1,10),'-','')<=substr(report_id, 1, 8)  or  t.agm_no is null ) and (t.grnt_mth_cd in ('4') and t.后一笔担保方式代码 in ('1','2','3','7','5','6') or t.grnt_mth_cd in ('3','7') and t.后一笔担保方式代码 in ('1','2') ) then '2' --授信协议已到期
			  when replace(substr(t.agm_end_time,1,10),'-','') >substr(report_id, 1, 8) then '1'  --授信协议未到期
			  else 0 end as 续贷担保变化
			 ,t.ACT_ID
FROM   xudai_zx t
;

--结果表：打续贷标签单一
drop table if exists xudai_zx_danbao_result;
CREATE TABLE xudai_zx_danbao_result AS
SELECT
		t.REPORT_ID
		,t.act_typ_cd --账户类型
		,t.ctr_amt  --贷款金额
		,t.dtrb_org_code --机构代码
		,t.act_pd_cd  --产品
		,t.act_start_dt --开立日期
		,t.grnt_mth_cd --担保方式
		,t.close_date --关闭日期
		,t.org_type --机构类型
        --是否续贷
        ,CASE max(是否续贷)
           WHEN 2 THEN '合同未到期'
           WHEN 1 THEN '续贷'
           WHEN 0 THEN '--'
         END AS 是否续贷标签
        --续贷担保变化
        ,CASE
           WHEN max(续贷担保变化) = 4 THEN '担保不变'
           WHEN max(续贷担保变化) = 3 THEN '担保变弱'
           WHEN max(续贷担保变化) = 2 THEN '担保变强'
           WHEN max(续贷担保变化) = 1 THEN '合同未到期'
           WHEN max(续贷担保变化) = 0 THEN '--'
         END AS 续贷担保变化标签
		 ,t.ACT_ID
--4担保不变 3担保变弱 2担保变强 1合同未到期 0--
FROM    xudai_zx_danbao t
GROUP BY 是否续贷 , 续贷担保变化, t.REPORT_ID
		,t.act_typ_cd --账户类型
		,t.ctr_amt  --贷款金额
		,t.dtrb_org_code --机构代码
		,t.act_pd_cd  --产品
		,t.act_start_dt --开立日期
		,t.grnt_mth_cd --担保方式
		,t.close_date --关闭日期
		,t.org_type --机构类型
		,t.ACT_ID
;
--SELECT * FROM xudai_zx_danbao_result where REPORT_ID='2024112000401550684247';

--结果表：打标签 逾期
drop table if exists yuqi_zx_xudai;
create table yuqi_zx_xudai AS
select
	t.REPORT_ID
		,t.act_typ_cd --账户类型
		,t.ctr_amt  --贷款金额
		,t.dtrb_org_code --机构代码
		,t.act_pd_cd  --产品
		,t.act_start_dt --开立日期
		,t.grnt_mth_cd --担保方式
		,t.close_date --关闭日期
		,t.org_type --机构类型
	,case when max(t2.overdue_money )>0 then '逾期' else '--' end as 是否逾期
	,t.ACT_ID
from  edw.NCIP_CP_M_ACCOUNT_INFO t
left join edw.NCIP_CP_M_REPAYSTAT60  t2
on t.ID_60M_SUB=t2.UNION_ID
and t2.dt='@@{yyyyMMdd}'
and datediff(to_date(replace(substr(t.CLOSE_DATE,1,10),'-',''),'yyyymmdd'),to_date(concat(replace(t2.month_id,'-',''),'01'),'yyyymmdd'),'mm') <=3  --只看3个月
--已结清的账户
WHERE   t.dt='@@{yyyyMMdd}'
AND     ( t.ACT_PD_CD = '82'     OR t.act_typ_cd IN ( 'D1' , 'R1' , 'R4' ) ) --贷款账户或大额分期卡
AND     replace(substr(t.CLOSE_DATE,1,10),'-','') >= to_char(DATEADD(to_date(substr(t.report_id, 1, 8), 'yyyymmdd'), - 365, 'dd'), 'yyyymmdd') --关闭日期近365天
AND     replace(substr(t.CLOSE_DATE,1,10),'-','') <= substr(t.report_id, 1, 8)
AND     t.LAST_ACC_STATUS = '3' --已结清
group by t.REPORT_ID
		,t.act_typ_cd --账户类型
		,t.ctr_amt  --贷款金额
		,t.dtrb_org_code --机构代码
		,t.act_pd_cd  --产品
		,t.act_start_dt --开立日期
		,t.grnt_mth_cd --担保方式
		,t.close_date --关闭日期
		,t.org_type --机构类型
		,t.ACT_ID
		;

INSERT overwrite TABLE ncip_CPQ_SIM_SETTLED_ACCOUNT_INFO partition (dt)
select
	t1.ACT_ID             --账户ID 待定
	,t1.report_id      --报告编号
	,a.account_num    --账户编号
	,t1.ACT_TYP_CD   --账户类型
	,t1.LOAN_AMT        --借款金额/授信金额
	,t1.DTRB_ORG_CODE       --机构代码
	,t1.ACT_PD_CD  --业务种类
	,replace(substr(t1.ACT_START_DT,1,10),'-','/')  --起始日期 --改：原 - 替换为 /
	,to_char(to_date(t1.ACT_MTU_DT,'yyyymmdd'),'yyyy/mm/dd')      --到期日期 --改：原 - 替换为 /
	,t1.RPAY_TRM  --还款期数
	,substr(t1.report_id,1,8)     --录入日期
	,t1.GRNT_MTH_CD --担保方式
	,t1.COM_BRW_IND       --共同借款标志
	,t1.CLOSE_DATE      --关闭日期
	,t5.special_tranum--特殊交易 --特殊交易类型 待定  --改：	special_type    STRING COMMENT '特殊交易类型',这个字段加上对应表结构
	,t1.DTRB_ORG_TYP_CD       --业务管理机构类型
	,t3.是否续贷标签 --'是否续贷,2-续贷 1-合同未到期 0-未知',
	,t3.续贷担保变化标签 --'续贷担保变化,4-担保不变 3-担保变弱 2-担保变强 1-合同未到期 0-未知',
	,t4.是否逾期 --'结清前是否逾期 1-是 2-否',
	,t1.RPAY_MTH_CD ---- 还款方式
	,t1.dt
from edw.NCIP_CP_M_ACCOUNT_INFO t1  -- di表
left join edw.NCIP_PD01A_BASICINFOSEG A ----借款账户信息-基本信息
ON      t1.DT = A.DT
AND     A.ID = t1.ACT_ID
left join xudai_zx_danbao_result t3
on t1.ACT_ID=t3.ACT_ID  and t1.report_id=t3.report_id
left join yuqi_zx_xudai t4
on t1.ACT_ID=t4.ACT_ID  and t1.report_id=t4.report_id
left join edw.ncip_pd01f_speinfseg t5 --特殊交易信息段 union_id --20240827修改
	on t1.ACT_ID=t5.union_id
and t5.dt='@@{yyyyMMdd}'
where t1.dt='@@{yyyyMMdd}'
and   (T1.LAST_ACC_STATUS='3' and  T1.ACT_TYP_CD  IN ( 'D1' , 'R1' , 'R4' ) ) ----最新账户状态未结清 这边不用展示大额专项分期款,因为82无结清的状态
and COALESCE(t1.ACT_ID,'')<>''  --账务ID非空
;

/*
2.未结清贷款账户清单
2.1获取月利率
根据报告编号查询CPQ_ACCOUNT_CALCULATE表数据,对查询到的数据进行分组,先根据账户编号,如果账户编号为空,则根据表中关键字段组合分组(account_type+org_code+business_type+ctr_amt+issuance_date+due_date+guarantee_mode+repayment+balance),
其中开立日期、到期日期会格式化,yyyy-MM-dd
2.2对借贷账户数据进行筛选
	1.如果账户类型为D1-非循环贷账户 R1-循环贷账户 R4-循环额度下分账户,并且账户状态(取最新表现中的)不为3
	2.如果账户类型为R2,业务类型为82,并且账户状态(取最新表现中的)不为4、6
	3.符合以上两个其中一个,则数据符合条件
2.3对符合条件的数据进行处理
2.3.1 ctr_amt 授信金额
	1.业务种类为82取大额专项分期信息段第一条已用分期金额
	2.账户类型为C1、D1、R4取借款金额,借款金额为空的话,值处理为0
	3.账户类型为R1取账户授信额度,账户授信额度为空的话,值处理为0
2.3.2 accountstatus 账户状态
如果账户状态(最新表现)为3、4、5,账户状态取最新表现中的,否则取最新一次月度的
2.3.3 rate 月利率
根据借贷账户信息匹配CPQ_ACCOUNT_CALCULATE分组后的数据
CPQ_ACCOUNT_CALCULATE
	1.ctr_amt取值逻辑,如果账户类型为D1或R4,取基本信息loan_amount,如果账户类型为R1取基本信息 account_quota
	2.repayment取值逻辑,取最近一次月度表现中的repayment
	3.balance取值逻辑,取最新表现中的balance
	4.其余字段取基本信息
	5.月利率取分组中月利率值最大的
2.3.4  agreement_sign 授信协议标识
根据基本信息中agreement_num匹配pd02a_creditbasicmessage agreement_sign
3.3.5 无需处理的字段取值
fiveassort、balance、close_date取最新表现中的
overdue_period、overdueamount、repayment取最近一次月度表现中的
其余字段取基本信息中的
*/
--待定中间表是di 还是 dd
DROP TABLE IF EXISTS ncip_CPQ_SIM_ACCOUNT_MONTH_RATE;
create table ncip_CPQ_SIM_ACCOUNT_MONTH_RATE
(
  id             STRING COMMENT 'id无实际意义',
  report_id      STRING COMMENT '报告编号',
  account_num    STRING COMMENT '账户编号',
  account_type   STRING COMMENT '账户类型',
  org_code       STRING COMMENT '机构代码',
  business_type  STRING COMMENT '业务种类',
  ctr_amt        decimal COMMENT '借款金额/授信金额',
  issuance_date  STRING COMMENT '起始日期',
  due_date       STRING COMMENT '到期日期',
  repay_periods  BIGINT COMMENT '还款期数',
  rate           decimal COMMENT '利率（计算得到）',
  repaymethod    STRING COMMENT '还款方式（计算得到）',
  input_date     STRING COMMENT '录入日期',
  guarantee_mode STRING COMMENT '担保方式',
  accountstatus  STRING COMMENT '账户状态',
  overdueamount  decimal COMMENT '逾期金额',
  fiveassort     STRING COMMENT '五级分类',
  repayment      decimal COMMENT '本月应还款',
  balance        decimal COMMENT '贷款余额',
  loan_flag       STRING COMMENT '共同借款标志',
  close_date      STRING COMMENT '关闭日期',
  overdue_period  BIGINT COMMENT '当前逾期期数',
  org_type       STRING COMMENT '业务管理机构类型',
  agreement_sign STRING COMMENT '授信协议标识'
)
comment '未结清贷款账户明细单元表'
PARTITIONED BY
(
    DT STRING COMMENT '日期分区'
)
LIFECYCLE 36000;

INSERT overwrite TABLE ncip_CPQ_SIM_ACCOUNT_MONTH_RATE partition (dt)
select
	t1.ACT_ID             --账户ID 待定
	,t1.report_id      --报告编号
	,a.account_num    --账户编号
	,t1.ACT_TYP_CD   --账户类型
	,t1.DTRB_ORG_CODE       --机构代码
	,t1.ACT_PD_CD  --业务种类
	,t1.LOAN_AMT        --借款金额/授信金额
	,replace(substr(t1.ACT_START_DT,1,10),'-','/')  --起始日期  --改：原 - 替换为 /
	,to_char(to_date(t1.ACT_MTU_DT,'yyyymmdd'),'yyyy/mm/dd')      --到期日期  --改：原 - 替换为 /
	,t1.RPAY_TRM  --还款期数
	,t7.rate           --利率（计算得到）
	,t7.repaymethod    --还款方式（计算得到）
	,substr(t1.report_id,1,8)     --录入日期
	,t1.GRNT_MTH_CD --担保方式
	,t1.ACC_STATUS  --账户状态
	,t1.RECENT_OVD_AMT  --逾期金额
	,t1.FIVE_CTG     --五级分类
	,t1.RECENT_CUR_MON_SHD_RPAY      --本月应还款
	,t1.BAL        --贷款余额
	,t1.COM_BRW_IND       --共同借款标志
	,t1.CLOSE_DATE      --关闭日期
	,t1.RECENT_OVD_PER  --当前逾期期数
	,t1.DTRB_ORG_TYP_CD       --业务管理机构类型
	,g.agreement_sign --授信协议标识
	,t1.dt
from edw.NCIP_CP_M_ACCOUNT_INFO t1    -- di表
left join edw.NCIP_PD01A_BASICINFOSEG A ----借款账户信息-基本信息 --di
ON      t1.DT = A.DT
AND     A.ID = t1.ACT_ID
left join edw.ncip_cpq_account_calculate T7 --个人客户账户利率表
ON      COALESCE(T1.REPORT_ID) = T7.REPORT_ID
AND     T7.ACCOUNT_NUM = a.ACCOUNT_NUM
AND     T7.DT = T1.DT
AND     T7.DT = '@@{yyyyMMdd}'
AND     T7.DT >= '20200314'
left join edw.NCIP_PD02A_CREDITBASICMESSAGE G  --改： 新增 --di
    on t1.report_id=g.REPORT_ID
    and t1.agm_no=g.agreement_no
    and G.DT = '@@{yyyyMMdd}'
    AND G.DT >= '20200314'
where t1.dt= '@@{yyyyMMdd}'
and (   (T1.LAST_ACC_STATUS<>'3' and  T1.ACT_TYP_CD  IN ( 'D1' , 'R1' , 'R4' ) ) ----最新账户状态未结清
	 or (T1.LAST_ACC_STATUS not in ('4','6') and   T1.ACT_PD_CD = '82') ----最新账户状态 4销户 6未激活
	)
and COALESCE(t1.ACT_ID,'')<>''  --账务ID非空

;

/*3.贷记卡账户明细
3.1数据筛选
	1.账户类型为R2或R3,并且业务类型不为82,账户状态(优先取最新表现中的,最新表现取到的为空取最近一次月度表现)不为4 不为6
	2.如果外币余额=0且有人民币账户,二者属于同一个授信协议,则不展示外币账户,只展示人民币账户
3.2数据处理
3.2.1 account_quota 授信金额
优先取account_quota,如果account_quota账户授信额度如果为空或者0,取借款账户信息-大额专项分期信息数组中的第一个的uesd_installment_money
3.2.2  acc_status 账户状态
优先取最新表现中的,最新表现取到的为空取最近一次月度表现
3.2.3 balance 余额
取最新表现中的
3.2.4 agreement_sign 授信协议标识
根据授信协议编号匹配授信协议pd02a_creditbasicmessage 中的授信协议标识
3.2.5 字段取最近一次月度表现中的
前置条件,对应账户的最近一次月度表现不为空
	1.是否最低还款
	如果本月实还款<=本月应还款*1.5 且本月实还款>0,则为最低还款
	2.repayment、actual_repayment、remaining_period、usage_quota取最近一次月度表现中的
3.2.6 其余字段取基本信息中的
*/
DROP TABLE IF EXISTS ncip_CPQ_SIM_CREDIT_ACCOUNT_DETAIL;
create table ncip_CPQ_SIM_CREDIT_ACCOUNT_DETAIL
(
  id             STRING COMMENT 'id无实际意义',
  org_code       STRING COMMENT '机构代码',
  org_type       STRING COMMENT '业务管理机构类型',
  account_quota  decimal COMMENT '授信金额',
  currency		 STRING COMMENT '账户币种',
  issuance_date  STRING COMMENT '开立日期',
  acc_status  STRING COMMENT '账户状态',
  business_type  STRING COMMENT '业务种类',
  account_type   STRING COMMENT '账户类型',
  account_num    STRING COMMENT '账户编号',
  report_id      STRING COMMENT '报告编号',
  repayment      decimal COMMENT '本月应还款',
  actual_repayment decimal COMMENT '本月实还款',
  is_minimum_repay STRING COMMENT '是否最低还款',
  remaining_period  BIGINT COMMENT '剩余分期数',
  usage_quota decimal COMMENT '最近6个月平均使用额度',
  balance        decimal COMMENT '余额',
  agreement_sign STRING COMMENT '授信协议标识'
)
comment '贷记卡账户明细单元表'
PARTITIONED BY
(
    DT STRING COMMENT '日期分区'
)
LIFECYCLE 36000;

INSERT overwrite table ncip_CPQ_SIM_CREDIT_ACCOUNT_DETAIL partition  (dt)
select
	t1.ACT_ID             --id无实际意义 待定
	,t1.DTRB_ORG_CODE       --机构代码
	,t1.DTRB_ORG_TYP_CD       --业务管理机构类型
	,case when COALESCE(A.ACCOUNT_QUOTA,0)=0 then J.UESD_INSTALLMENT_MONEY else A.ACCOUNT_QUOTA end as  account_quota  --改：
	,t1.ACT_CCY_CD ----账户币种
	,replace(substr(t1.ACT_START_DT,1,10),'-','/')  --开立日期  --改：原 - 替换为 /
	,t1.ACC_STATUS  --账户状态
	,t1.ACT_PD_CD  --业务种类
	,t1.ACT_TYP_CD   --账户类型
	,a.account_num    --账户编号
	,t1.report_id      --报告编号
	,t1.RECENT_CUR_MON_SHD_RPAY      --本月应还款
	,t1.RECENT_CUR_MON_ACTL_RPAY ----本月实还款
	--如果本月实还款<=本月应还款*1.5 且本月实还款>0,则为最低还款
	,case when t1.RECENT_CUR_MON_ACTL_RPAY<=1.5*t1.RECENT_CUR_MON_SHD_RPAY  and t1.RECENT_CUR_MON_ACTL_RPAY>0 then '是' else null end as is_minimum_repay --是否最低还款
	,t1.RECENT_RMN_RPAY_TRM ----剩余还款期数
	,T1.R2_RECENT_SIX_MON_AVG_USE_LMT ----最近6个月平均使用额度
	,t1.BAL        --贷款余额
	,g.agreement_sign --授信协议标识
	,t1.dt
from edw.NCIP_CP_M_ACCOUNT_INFO t1
left join edw.NCIP_PD01A_BASICINFOSEG A ----借款账户信息-基本信息
ON      t1.DT = A.DT
AND     A.ID = t1.ACT_ID
left join edw.NCIP_PD02A_CREDITBASICMESSAGE G --改： 新增
    on t1.report_id=g.REPORT_ID
    and t1.agm_no=g.agreement_no
    and G.DT = '@@{yyyyMMdd}'
    AND G.DT >= '20200314'
LEFT JOIN    edw.NCIP_PD01H_INSTALMENT F ---大额专项分期信息 --改： 新增
ON      F.DT = A.DT
AND     A.ID = F.UNION_ID
AND     F.DT = '@@{yyyyMMdd}'
AND     F.DT >= '20200501'
LEFT JOIN   edw.NCIP_PD01H_INSTALMENTSUB J ---大额专项分期信息段sub --改： 新增
ON      J.DT = '@@{yyyyMMdd}'
AND     F.ID = J.UNION_ID
where  t1.dt= '@@{yyyyMMdd}'
and   (T1.ACC_STATUS not in ('4','6') and  T1.ACT_TYP_CD  IN ( 'R2' , 'R3' ) and T1.ACT_PD_CD <> '82' ) ----最新账户状态 4销户 6未激活
--1.如果外币余额=0且有人民币账户,二者属于同一个授信协议,则不展示外币账户,只展示人民币账户
and ( t1.ACT_CCY_CD='CNY' or t1.BAL>0 or COALESCE(g.agreement_sign,'')='')--外币、余额=0、授信协议不为空 的逆运算
and COALESCE(t1.ACT_ID,'')<>''  --账务ID非空

;
/*
4.查询记录（是否办理成功）
1.获取对应报告ph01_record表数据,取到数据后进行循环,IS_DEAL_SUCCESS需逻辑处理,其余字段直接取ph01_record表中的
2.是否办理逻辑
1.查询记录信息单元-查询原因为&ldquo;贷款审批&rdquo;或&ldquo;信用卡审批&rdquo;,遍历信贷交易信息明细-借款账户信息-基本信息段,对应机构情况下(查询记录信息单元-查询机构=借款账户信息-基本信息段-业务管理机构代码),
如果有（查询日期减信贷交易信息明细-借款账户信息-基本信息段-开立时间<=180）开立时间在180天以内的记录就算申请成功
2.遍历授信协议信息-管理机构,如果有（查询日期减授信协议信息-生效日期<=180）开立时间在180天以内的记录就算申请成功
3.查询原因为：&ldquo;担保资格审查&rdquo;,遍历信贷交易信息明细-相关还款责任信息,
判断条件：
1.（查询日期减相关还款责任信息段-开立时间<=180）开立时间在180天以内
2.相关还款责任信息段-业务管理机构长度小于等于2并且查询记录信息单元-查询机构=相关还款责任信息单元-业务管理机构代码
或者
相关还款责任信息段-业务管理机构长度大于2并且查询记录信息单元-查询机构长度=相关还款责任信息单元-业务管理机构代码长度
*/
DROP TABLE IF EXISTS ncip_CPQ_SIM_QUERY_RECORDS;
create table ncip_CPQ_SIM_QUERY_RECORDS
(
  id             STRING COMMENT 'id无实际意义',
  report_id      STRING COMMENT '报告编号',
  query_date    STRING COMMENT '查询日期',
  query_org_type STRING COMMENT '查询机构类型',
  query_org      STRING COMMENT '查询机构',
  query_reason   STRING COMMENT '查询原因',
  IS_DEAL_SUCCESS   STRING COMMENT '是否办理成功'
)
comment '查询记录信息'
PARTITIONED BY
(
    DT STRING COMMENT '日期分区'
)
LIFECYCLE 36000;
INSERT overwrite table ncip_CPQ_SIM_QUERY_RECORDS partition (dt)
select
	t2.act_id             --id无实际意义 待定  --改：原t1.act_id 修改为 t2.act_id
	,t1.report_id
	,t1.query_date
	,t1.QUERY_ORG_TYP_CD --查询机构类型
  ,t1.QUERY_ORG     --查询机构
  ,t1.query_reason  --查询原因
  ,case when max(
      case when t1.query_reason in ('02','03') and  datediff(to_date(T2.CRD_START_DT,'yyyymmdd'),to_date(t1.query_date,'yyyymmdd'),'dd') BETWEEN 0 and 180  and ((t1.QUERY_ORG_TYP_CD=t2.ORG_CODE) or (t1.IS_SELF_ORG='1' and t2.IS_SELF_ORG='1')) then 1 --是否办理成功 02贷款审批  03信用卡审批 账户开立日期/授信协议生效日期
	   when t1.query_reason in ('08') and  datediff(to_date(T3.open_date,'yyyymmdd'),to_date(t1.query_date,'yyyymmdd'),'dd') BETWEEN 0 and 180  and ((t1.QUERY_ORG_TYP_CD=t3.bussup_ins) or (t1.IS_SELF_ORG='1' and LENGTH(t3.bussup_instype) > 2)) then 1  --是否办理成功 08担保资格审查
	   else 0 end) =1 then 1 else 0 end IS_DEAL_SUCCESS --是否办理成功
  ,t1.dt
from edw.NCIP_CP_M_RECORD t1
left join edw.NCIP_CP_M_ACCOUNT_INFO t2  --中间表  di表
on t1.report_id=t2.REPORT_ID
and t2.dt= '@@{yyyyMMdd}'
left join edw.NCIP_CP_M_PAYLIAINF  t3  --担保账户  --改 这个位置数据多对多 di表
on t1.report_id=t3.REPORT_ID
and t3.dt= '@@{yyyyMMdd}'
where t1.dt= '@@{yyyyMMdd}'
group by
	t2.act_id
	,t1.report_id
	,t1.query_date
	,t1.QUERY_ORG_TYP_CD --查询机构类型
  ,t1.QUERY_ORG     --查询机构
  ,t1.query_reason  --查询原因
  ,t1.dt
;
**13负债报告_四个表_续贷_提额.sql
select distinct report_id,cst_id  from  edw.dim_cst_ccrc_idv_loan_inf_di  where dt='20240326' and report_id in (
  '2024032609292659485578')


  SELECT * FROM edw.ncip_CPQ_SIM_ACCOUNT_MONTH_RATE where dt='20241225' limit 1000
**13负债报告_四个表对比.sql
--以生产为主表，总行

SELECT t.*
,t2.id          id无实际意义
,t2.report_id     报告编号
,t2.account_num   账户编号
,t2.account_type  账户类型
,t2.org_code      机构代码
,t2.business_type 业务种类
,t2.ctr_amt        借款金额
,t2.issuance_date 起始日期
,t2.due_date      到期日期
,t2.repay_periods   还款期数
,t2.rate           利率
,t2.repaymethod   还款方式
,t2.input_date    录入日期
,t2.guarantee_mode 担保方式
,t2.accountstatus 账户状态
,t2.overdueamount  逾期金额
,t2.fiveassort    五级分类
,t2.repayment      本月应还款
,t2.balance        贷款余额
,t2.loan_flag      共同借款标志
,t2.close_date     关闭日期
,t2.overdue_period   当前逾期期数
,t2.org_type      业务管理机构类型
,t2.agreement_sign 授信协议标识
  FROM ncip_CPQ_SIM_ACCOUNT_MONTH_RATE_1128 t
left join ncip_CPQ_SIM_ACCOUNT_MONTH_RATE t2
on t.report_id=t2.report_id
and t.account_num=t2.account_num
and dt='20241128'
where  (
coalesce(t.account_type,-999)<>coalesce(t2.account_type,-999)
or coalesce(t.org_code,-999)<>coalesce(t2.org_code,-999)
or coalesce(t.account_type,-999)<>coalesce(t2.account_type,-999)
or coalesce(t.business_type,-999)<>coalesce(t2.business_type,-999)
or coalesce(t.account_type,-999)<>coalesce(t2.account_type,-999)
or coalesce(t.ctr_amt,-999)<>coalesce(t2.ctr_amt,-999)
or coalesce(t.issuance_date,-999)<>coalesce(t2.issuance_date,-999)
or coalesce(t.due_date,-999)<>coalesce(t2.due_date,-999)
or coalesce(t.repay_periods,-999)<>coalesce(t2.repay_periods,-999)
or coalesce(t.rate,-999)<>coalesce(t2.rate,-999)
or coalesce(t.repaymethod,-999)<>coalesce(t2.repaymethod,-999)
or coalesce(t.guarantee_mode,-999)<>coalesce(t2.guarantee_mode,-999)
or coalesce(t.accountstatus,-999)<>coalesce(t2.accountstatus,-999)
or coalesce(t.overdueamount,-999)<>coalesce(t2.overdueamount,-999)
or coalesce(t.fiveassort,-999)<>coalesce(t2.fiveassort,-999)
or coalesce(t.repayment,-999)<>coalesce(t2.repayment,-999)
or coalesce(t.balance,-999)<>coalesce(t2.balance,-999)
or coalesce(t.loan_flag,-999)<>coalesce(t2.loan_flag,-999)
or coalesce(t.close_date,-999)<>coalesce(t2.close_date,-999)
or coalesce(t.overdue_period,-999)<>coalesce(t2.overdue_period,-999)
or coalesce(t.org_type,-999)<>coalesce(t2.org_type,-999)
or coalesce(t.agreement_sign,-999)<>coalesce(t2.agreement_sign,-999)
)
and t.account_num<>-999
and t2.org_code<>'NA'
;
--2以生产为主表，村行
SELECT t.*
,t2.id          id无实际意义
,t2.report_id     报告编号
,t2.account_num   账户编号
,t2.account_type  账户类型
,t2.org_code      机构代码
,t2.business_type 业务种类
,t2.ctr_amt        借款金额
,t2.issuance_date 起始日期
,t2.due_date      到期日期
,t2.repay_periods   还款期数
,t2.rate           利率
,t2.repaymethod   还款方式
,t2.input_date    录入日期
,t2.guarantee_mode 担保方式
,t2.accountstatus 账户状态
,t2.overdueamount  逾期金额
,t2.fiveassort    五级分类
,t2.repayment      本月应还款
,t2.balance        贷款余额
,t2.loan_flag      共同借款标志
,t2.close_date     关闭日期
,t2.overdue_period   当前逾期期数
,t2.org_type      业务管理机构类型
,t2.agreement_sign 授信协议标识
  FROM ncip_CPQ_SIM_ACCOUNT_MONTH_RATE_1128 t
left join ncip_CPQ_SIM_ACCOUNT_MONTH_RATE t2
on t.report_id=t2.report_id
and coalesce(t.org_code,-999)=coalesce(t2.org_code,-999)
and coalesce(t.account_type,-999)=coalesce(t2.account_type,-999)
and coalesce(t.business_type,-999)=coalesce(t2.business_type,-999)
and coalesce(t.ctr_amt,-999)=coalesce(t2.ctr_amt,-999)
and coalesce(t.issuance_date,-999)=coalesce(t2.issuance_date,-999)
and coalesce(t.due_date,-999)=coalesce(t2.due_date,-999)
and coalesce(t.guarantee_mode,-999)=coalesce(t2.guarantee_mode,-999)
and coalesce(t.repayment,-999)=coalesce(t2.repayment,-999)
and coalesce(t.balance,-999)=coalesce(t2.balance,-999)
and dt='20241128'
where  (
coalesce(t.account_type,-999)<>coalesce(t2.account_type,-999)
or coalesce(t.org_code,-999)<>coalesce(t2.org_code,-999)
or coalesce(t.account_type,-999)<>coalesce(t2.account_type,-999)
or coalesce(t.business_type,-999)<>coalesce(t2.business_type,-999)
or coalesce(t.account_type,-999)<>coalesce(t2.account_type,-999)
or coalesce(t.ctr_amt,-999)<>coalesce(t2.ctr_amt,-999)
or coalesce(t.issuance_date,-999)<>coalesce(t2.issuance_date,-999)
or coalesce(t.due_date,-999)<>coalesce(t2.due_date,-999)
or coalesce(t.repay_periods,-999)<>coalesce(t2.repay_periods,-999)
or coalesce(t.rate,-999)<>coalesce(t2.rate,-999)
or coalesce(t.repaymethod,-999)<>coalesce(t2.repaymethod,-999)
or coalesce(t.guarantee_mode,-999)<>coalesce(t2.guarantee_mode,-999)
or coalesce(t.accountstatus,-999)<>coalesce(t2.accountstatus,-999)
or coalesce(t.overdueamount,-999)<>coalesce(t2.overdueamount,-999)
or coalesce(t.fiveassort,-999)<>coalesce(t2.fiveassort,-999)
or coalesce(t.repayment,-999)<>coalesce(t2.repayment,-999)
or coalesce(t.balance,-999)<>coalesce(t2.balance,-999)
or coalesce(t.loan_flag,-999)<>coalesce(t2.loan_flag,-999)
or coalesce(t.close_date,-999)<>coalesce(t2.close_date,-999)
or coalesce(t.overdue_period,-999)<>coalesce(t2.overdue_period,-999)
or coalesce(t.org_type,-999)<>coalesce(t2.org_type,-999)
or coalesce(t.agreement_sign,-999)<>coalesce(t2.agreement_sign,-999)
)
and coalesce(t.account_num,-999) =-999

;



SELECT * FROM ncip_CPQ_SIM_ACCOUNT_MONTH_RATE t2
where dt='20241128'
and report_id>='2024112823291787785187'
and account_num>='30072'
and report_id in
('2024112800001044085463'
,'2024112800001208584399'
)
order by report_id,ACCOUNT_NUM;

SELECT  DISTINCT t.cst_id
                 ,report_id
               --  ,t2.prm_org_nm
FROM    edw.dim_cst_ccrc_entp_loan_inf_dd t
LEFT JOIN    adm_pub.adm_csm_cbas_mng_inf_dd t2
ON      t.cst_id = t2.cst_id and t2.dt='20241202'
where t.dt='20241202' and SUBSTR(report_id, 1,8) >='20231121' and SUBSTR(report_id, 1,8) >='20230915'
--  and t.report_id in (
-- --'2024112800372481585364' --7005856218
-- '2024120208271088086578' --续贷客户
-- )
AND T2.prm_mgr_id='028995'
;
--龚老师的信贷客户 1608267673	2024101523113190785498


SELECT * FROM edw.NCIP_PD01A_BASICINFOSEG A  where dt='20241128' and report_id='2024112800372481585364';

SELECT * FROM  EDW.NCIP_PD01B_FIRINFSEG C ----最新表现信息段
 where dt='20241128' and report_id='2024112823540993385254' and union_id ='381bce3d8cf5478ba48902cb1f31d441';

 SELECT * FROM EDW.NCIP_PD01C_MONTH_INFORMATION E ----最近一次月度表现信息
  where dt='20241128' and report_id='2024112823540993385254' and union_id ='381bce3d8cf5478ba48902cb1f31d441';

  SELECT * FROM ncip_CPQ_SIM_ACCOUNT_MONTH_RATE
  where dt='20241128' and report_id in ('2024112823363258185171'
,'2024112823314721985484'
,'2024112823423234585182'
,'2024112823540993385254'
)
;
SELECT * FROM ncip_CPQ_SIM_ACCOUNT_MONTH_RATE where dt='20241202' ;


SELECT dt,count(*) FROM ncip_CPQ_SIM_ACCOUNT_MONTH_RATE where dt='20240101' GROUP BY  dt order by dt;

--村行授信协议排查
SELECT * FROM edw.NCIP_PD01A_BASICINFOSEG where  report_id='2024112800372481585364' and dt='20241128'  and org_code='RV';  --400000 20240119

未结清贷款：
村行的授信协议标识，数仓这边是空，张舒非空 例子 7005856218 2024112800372481585364 RV   400000 20240119;

SELECT distinct close_date FROM edw.ncip_CPQ_SIM_ACCOUNT_MONTH_RATE where dt<='20241202'
;

SELECT * FROM edw.ncip_cpq_account_calculate where dt='20241202' limit 5
**13负债报告_四个表对比_已结清.sql
DROP TABLE IF EXISTS ncip_CPQ_SIM_ACCOUNT_MONTH_RATE_copy;
create table ncip_CPQ_SIM_ACCOUNT_MONTH_RATE_copy
(
  id             STRING COMMENT 'id无实际意义',
  report_id      STRING COMMENT '报告编号',
  account_num    STRING COMMENT '账户编号',
  account_type   STRING COMMENT '账户类型',
  org_code       STRING COMMENT '机构代码',
  business_type  STRING COMMENT '业务种类',
  ctr_amt        decimal COMMENT '借款金额/授信金额',
  issuance_date  STRING COMMENT '起始日期',
  due_date       STRING COMMENT '到期日期',
  repay_periods  BIGINT COMMENT '还款期数',
  rate           decimal COMMENT '利率（计算得到）',
  repaymethod    STRING COMMENT '还款方式（计算得到）',
  input_date     STRING COMMENT '录入日期',
  guarantee_mode STRING COMMENT '担保方式',
  accountstatus  STRING COMMENT '账户状态',
  overdueamount  decimal COMMENT '逾期金额',
  fiveassort     STRING COMMENT '五级分类',
  repayment      decimal COMMENT '本月应还款',
  balance        decimal COMMENT '贷款余额',
  loan_flag       STRING COMMENT '共同借款标志',
  close_date      STRING COMMENT '关闭日期',
  overdue_period  BIGINT COMMENT '当前逾期期数',
  org_type       STRING COMMENT '业务管理机构类型',
  agreement_sign STRING COMMENT '授信协议标识'
)
comment '未结清贷款账户明细单元表'
PARTITIONED BY
(
    DT STRING COMMENT '日期分区'
)
LIFECYCLE 36000;
INSERT OVERWRITE TABLE ncip_CPQ_SIM_ACCOUNT_MONTH_RATE_copy PARTITION (dt)
select * from ncip_CPQ_SIM_ACCOUNT_MONTH_RATE_basic where dt>='20200314';



select t.id
		,t.report_id
		,t.account_num
		,t.account_type
		,t.org_code
		,t.business_type
		,t.ctr_amt
		,case when length(split_part(issuance_date,'/',2))=1 and length(split_part(issuance_date,'/',3))=1 then concat(split_part(issuance_date,'/',1),'-0',split_part(issuance_date,'/',2),'-0',split_part(issuance_date,'/',3),' 00:00:00')
			  when length(split_part(issuance_date,'/',2))=1 and length(split_part(issuance_date,'/',3))=2 then concat(split_part(issuance_date,'/',1),'-0',split_part(issuance_date,'/',2),'-',split_part(issuance_date,'/',3),' 00:00:00')
			  when length(split_part(issuance_date,'/',2))=2 and length(split_part(issuance_date,'/',3))=1 then concat(split_part(issuance_date,'/',1),'-',split_part(issuance_date,'/',2),'-0',split_part(issuance_date,'/',3),' 00:00:00')
			  when length(split_part(issuance_date,'/',2))=2 and length(split_part(issuance_date,'/',3))=2 then concat(split_part(issuance_date,'/',1),'-',split_part(issuance_date,'/',2),'-',split_part(issuance_date,'/',3),' 00:00:00')
			  end as issuance_date  --要转
		,case when length(split_part(due_date,'/',2))=1 and length(split_part(due_date,'/',3))=1 then concat(split_part(due_date,'/',1),'-0',split_part(due_date,'/',2),'-0',split_part(due_date,'/',3),' 00:00:00')
			  when length(split_part(due_date,'/',2))=1 and length(split_part(due_date,'/',3))=2 then concat(split_part(due_date,'/',1),'-0',split_part(due_date,'/',2),'-',split_part(due_date,'/',3),' 00:00:00')
			  when length(split_part(due_date,'/',2))=2 and length(split_part(due_date,'/',3))=1 then concat(split_part(due_date,'/',1),'-',split_part(due_date,'/',2),'-0',split_part(due_date,'/',3),' 00:00:00')
			  when length(split_part(due_date,'/',2))=2 and length(split_part(due_date,'/',3))=2 then concat(split_part(due_date,'/',1),'-',split_part(due_date,'/',2),'-',split_part(due_date,'/',3),' 00:00:00')
			  end as due_date  --要转  --要转
		,t.repay_periods
		,t.rate
		,t.repaymethod
		,t.input_date
		,t.guarantee_mode
		,t.accountstatus
		,t.overdueamount
		,t.fiveassort
		,t.repayment
		,t.balance
		,t.loan_flag
		,t.close_date
		,t.overdue_period
		,t.org_type
		,t.agreement_sign
		,t.dt
from ncip_CPQ_SIM_ACCOUNT_MONTH_RATE_copy t where dt='20240314' limit 1000;



SELECT * FROM lab_bigdata.ncip_CPQ_SIM_ACCOUNT_MONTH_RATE where dt='20240314' limit 1000;

SELECT dt,count(*) FROM lab_bigdata_dev.ncip_CPQ_SIM_ACCOUNT_MONTH_RATE where dt>='20241121'  group by dt order by dt ;
**13负债报告_四个表对比_未结清贷款.sql
--以数仓为主表，总行

SELECT t2.id          id无实际意义
,t2.report_id     报告编号
,t2.account_num   账户编号
,t2.account_type  账户类型
,t2.org_code      机构代码
,t2.business_type 业务种类
,t2.ctr_amt        借款金额
,t2.issuance_date 起始日期
,t2.due_date      到期日期
,t2.repay_periods   还款期数
,t2.rate           利率
,t2.repaymethod   还款方式
,t2.input_date    录入日期
,t2.guarantee_mode 担保方式
,t2.accountstatus 账户状态
,t2.overdueamount  逾期金额
,t2.fiveassort    五级分类
,t2.repayment      本月应还款
,t2.balance        贷款余额
,t2.loan_flag      共同借款标志
,t2.close_date     关闭日期
,t2.overdue_period   当前逾期期数
,t2.org_type      业务管理机构类型
,t2.agreement_sign 授信协议标识
,t.*
  FROM ncip_CPQ_SIM_ACCOUNT_MONTH_RATE t2
left join ncip_CPQ_SIM_ACCOUNT_MONTH_RATE_1128 t
on t.report_id=t2.report_id
and t.account_num=t2.account_num
where  dt='20241128'
 and (
coalesce(t.account_type,-999)<>coalesce(t2.account_type,-999)
or coalesce(t.org_code,-999)<>coalesce(t2.org_code,-999)
or coalesce(t.account_type,-999)<>coalesce(t2.account_type,-999)
or coalesce(t.business_type,-999)<>coalesce(t2.business_type,-999)
or coalesce(t.account_type,-999)<>coalesce(t2.account_type,-999)
or coalesce(t.ctr_amt,-999)<>coalesce(t2.ctr_amt,-999)
or coalesce(trim(REPLACE(REPLACE(substr(t.issuance_date,1,10), '-', '/'), '/0', '/')),-999)<>coalesce(t2.issuance_date,-999)
or coalesce(trim(REPLACE(REPLACE(substr(t.due_date,1,10), '-', '/'), '/0', '/')),-999)<>coalesce(t2.due_date,-999)
or coalesce(t.repay_periods,-999)<>coalesce(t2.repay_periods,-999)
or coalesce(t.rate,-999)<>coalesce(t2.rate,-999)
or coalesce(t.repaymethod,-999)<>coalesce(t2.repaymethod,-999)
or coalesce(t.guarantee_mode,-999)<>coalesce(t2.guarantee_mode,-999)
or coalesce(t.accountstatus,-999)<>coalesce(t2.accountstatus,-999)
or coalesce(t.overdueamount,-999)<>coalesce(t2.overdueamount,-999)
or coalesce(t.fiveassort,-999)<>coalesce(t2.fiveassort,-999)
or coalesce(t.repayment,-999)<>coalesce(t2.repayment,-999)
or coalesce(t.balance,-999)<>coalesce(t2.balance,-999)
or coalesce(t.loan_flag,-999)<>coalesce(t2.loan_flag,-999)
or coalesce(t.close_date,-999)<>coalesce(t2.close_date,-999)
or coalesce(t.overdue_period,-999)<>coalesce(t2.overdue_period,-999)
or coalesce(t.org_type,-999)<>coalesce(t2.org_type,-999)
or coalesce(t.agreement_sign,-999)<>coalesce(t2.agreement_sign,-999)
)

and t2.org_code<>'NA'
and coalesce(t2.account_num,-999) <>-999

;


--以数仓为主表，村行

SELECT t2.id          id无实际意义
,t2.report_id     报告编号
,t2.account_num   账户编号
,t2.account_type  账户类型
,t2.org_code      机构代码
,t2.business_type 业务种类
,t2.ctr_amt        借款金额
,t2.issuance_date 起始日期
,t2.due_date      到期日期
,t2.repay_periods   还款期数
,t2.rate           利率
,t2.repaymethod   还款方式
,t2.input_date    录入日期
,t2.guarantee_mode 担保方式
,t2.accountstatus 账户状态
,t2.overdueamount  逾期金额
,t2.fiveassort    五级分类
,t2.repayment      本月应还款
,t2.balance        贷款余额
,t2.loan_flag      共同借款标志
,t2.close_date     关闭日期
,t2.overdue_period   当前逾期期数
,t2.org_type      业务管理机构类型
,t2.agreement_sign 授信协议标识
,t.*
  FROM ncip_CPQ_SIM_ACCOUNT_MONTH_RATE t2
left join ncip_CPQ_SIM_ACCOUNT_MONTH_RATE_1128 t
on t.report_id=t2.report_id
and coalesce(t.org_code,-999)=coalesce(t2.org_code,-999)
and coalesce(t.account_type,-999)=coalesce(t2.account_type,-999)
and coalesce(t.business_type,-999)=coalesce(t2.business_type,-999)
and coalesce(t.ctr_amt,-999)=coalesce(t2.ctr_amt,-999)
and coalesce(t.issuance_date,-999)=coalesce(t2.issuance_date,-999)
and coalesce(t.due_date,-999)=coalesce(t2.due_date,-999)
and coalesce(t.guarantee_mode,-999)=coalesce(t2.guarantee_mode,-999)
and coalesce(t.repayment,-999)=coalesce(t2.repayment,-999)
and coalesce(t.balance,-999)=coalesce(t2.balance,-999)

where dt='20241128'
and (
coalesce(t.account_type,-999)<>coalesce(t2.account_type,-999)
or coalesce(t.org_code,-999)<>coalesce(t2.org_code,-999)
or coalesce(t.account_type,-999)<>coalesce(t2.account_type,-999)
or coalesce(t.business_type,-999)<>coalesce(t2.business_type,-999)
or coalesce(t.account_type,-999)<>coalesce(t2.account_type,-999)
or coalesce(t.ctr_amt,-999)<>coalesce(t2.ctr_amt,-999)
or coalesce(t.issuance_date,-999)<>coalesce(t2.issuance_date,-999)
or coalesce(t.due_date,-999)<>coalesce(t2.due_date,-999)
or coalesce(t.repay_periods,-999)<>coalesce(t2.repay_periods,-999)
or coalesce(t.rate,-999)<>coalesce(t2.rate,-999)
or coalesce(t.repaymethod,-999)<>coalesce(t2.repaymethod,-999)
or coalesce(t.guarantee_mode,-999)<>coalesce(t2.guarantee_mode,-999)
or coalesce(t.accountstatus,-999)<>coalesce(t2.accountstatus,-999)
or coalesce(t.overdueamount,-999)<>coalesce(t2.overdueamount,-999)
or coalesce(t.fiveassort,-999)<>coalesce(t2.fiveassort,-999)
or coalesce(t.repayment,-999)<>coalesce(t2.repayment,-999)
or coalesce(t.balance,-999)<>coalesce(t2.balance,-999)
or coalesce(t.loan_flag,-999)<>coalesce(t2.loan_flag,-999)
or coalesce(t.close_date,-999)<>coalesce(t2.close_date,-999)
or coalesce(t.overdue_period,-999)<>coalesce(t2.overdue_period,-999)
or coalesce(t.org_type,-999)<>coalesce(t2.org_type,-999)
or coalesce(t.agreement_sign,-999)<>coalesce(t2.agreement_sign,-999)
)

and t2.org_code<>'NA'
and coalesce(t2.account_num,-999) =-999

;

--回溯

INSERT OVERWRITE TABLE ncip_CPQ_SIM_ACCOUNT_MONTH_RATE PARTITION (dt)
SELECT  A.ID --账户ID 待定
        ,A.report_id --报告编号
        ,a.account_num --账户编号
        ,A.ACCOUNT_TYPE   AS ACT_TYP_CD --账户类型代码
        ,A.ORG_CODE       AS DTRB_ORG_CODE --发放机构代码
        ,A.BUSINESS_TYPE  AS ACT_PD_CD --业务产品种类代码
        ,CASE
           WHEN A.ACCOUNT_TYPE IN ( 'C1' , 'D1' , 'R4' ) THEN A.LOAN_AMOUNT
           WHEN A.ACCOUNT_TYPE IN ( 'R1' )               THEN A.ACCOUNT_QUOTA
           WHEN A.BUSINESS_TYPE IN ( '82' )               THEN J.UESD_INSTALLMENT_MONEY ----已用分期金额 ---大额分期：本质为有场景的消费贷
         END              AS LOAN_AMT ----贷款账户发放金额
        ,CASE
           WHEN A.ISSUANCE_DATE IS NULL OR TRIM(A.ISSUANCE_DATE) = '' THEN NULL
           ELSE REPLACE(TO_CHAR(A.ISSUANCE_DATE, 'yyyy/mm/dd'), '/0', '/')
         END              AS ACT_START_DT --账户开立日期 2020-09-07 00:00:00	 转为2020/9/7
        ,CASE
           WHEN A.DUE_DATE IS NULL OR TRIM(A.DUE_DATE) = '' THEN NULL
           ELSE REPLACE(TO_CHAR(A.DUE_DATE, 'yyyy/mm/dd'), '/0', '/')
         END              AS ACT_MTU_DT ---- 贷款结束日期
        ,A.REPAY_PERIODS  AS RPAY_TRM ---- 还款期数
        ,t7.rate --利率（计算得到）
        ,A.REPAY_METHOD              AS RPAY_MTH_CD ---- 还款方式
        ,substr(A.report_id, 1, 8) --录入日期
        ,A.GUARANTEE_MODE AS GRNT_MTH_CD ---- 担保方式
        ,CASE
           WHEN C.ACC_STATUS IN ( '3' , '4' , '5' ) THEN C.ACC_STATUS
           ELSE E.ACCOUNT_STATUS
         END              AS ACC_STATUS --账户状态 3结清  4呆账  5转出
        ,E.OVERDUE_AMOUNT AS RECENT_OVD_AMT ----逾期金额
        ,C.FIVE_ASSORT --五级分类
        ,E.REPAYMENT ----本月应还款
        ,C.BALANCE        AS LAST_CTR_BAL ---- 最新贷款余额
        ,A.LOAN_FLAG      AS COM_BRW_IND ---- 共同借款标志
        ,C.CLOSE_DATE     AS CLOSE_DATE ---- 关闭日期
        ,E.OVERDUE_PERIOD AS RECENT_OVD_PER ----当前逾期期数
        ,A.ORG_TYPE       AS DTRB_ORG_TYP_CD --发放机构类型
        ,g.agreement_sign --授信协议标识
        ,A.dt
FROM    edw.NCIP_PD01A_BASICINFOSEG A ----借款账户信息-基本信息 --di
LEFT JOIN    EDW.NCIP_PD01B_FIRINFSEG C ----最新表现信息段
ON      C.DT = A.DT
AND     A.ID = C.UNION_ID
AND     C.DT <= '20241202'
AND     C.DT >= '20200314'

LEFT JOIN    EDW.NCIP_PD01C_MONTH_INFORMATION E ----最近一次月度表现信息
ON      E.DT = A.DT
AND     A.ID = E.UNION_ID
AND     E.DT <= '20241202'
AND     E.DT >= '20200314'

left join edw.ncip_cpq_account_calculate T7 --个人客户账户利率表
ON      COALESCE(A.REPORT_ID) = T7.REPORT_ID
AND     T7.ACCOUNT_NUM = a.ACCOUNT_NUM
AND     T7.DT = A.DT
AND     T7.DT <= '20241202'
AND     T7.DT >= '20200314'
left join edw.NCIP_PD02A_CREDITBASICMESSAGE G  --改： 新增 --di
on A.report_id=g.REPORT_ID
and     G.DT = A.DT
    and A.AGREEMENT_NUM=g.agreement_no
    and G.DT <= '20241202'
    AND G.DT >= '20200314'

LEFT JOIN    EDW.NCIP_PD01H_INSTALMENT F ---大额专项分期信息
ON      F.DT = A.DT
AND     A.ID = F.UNION_ID
AND     F.DT <= '20241202'
AND     F.DT >= '20200314'
LEFT JOIN    EDW.NCIP_PD01H_INSTALMENTSUB J ---大额专项分期信息段sub
on      F.ID = J.UNION_ID
and J.DT = A.DT
and      J.DT <= '20241202'

where a.dt<= '20241202'
and (   (coalesce(C.ACC_STATUS,'')<>'3' and coalesce(E.ACCOUNT_STATUS,'')<>'3' and  A.ACCOUNT_TYPE  IN ( 'D1' , 'R1' , 'R4' ) ) ----最新账户状态未结清
	 or (coalesce(C.ACC_STATUS,'') not in ('4','6') and coalesce(E.ACCOUNT_STATUS,'')  not in ('4','6') and   A.BUSINESS_TYPE = '82') ----最新账户状态 4销户 6未激活
	)
and a.account_num is not null
union
select
	A.id
	,A.report_id
	,A.account_num
	,A.act_typ_cd
	,A.dtrb_org_code
	,A.act_pd_cd
	,A.loan_amt
	,A.act_start_dt
	,A.act_mtu_dt
	,A.rpay_trm
	,t7.rate
	,A.rpay_mth_cd
	,A.input_date
	,A.grnt_mth_cd
	,A.acc_status
	,A.recent_ovd_amt
	,A.five_assort
	,A.repayment
	,A.last_ctr_bal
	,A.com_brw_ind
	,A.close_date
	,A.recent_ovd_per
	,A.dtrb_org_typ_cd
	,A.agreement_sign
	,A.dt
from (
		SELECT  A.ID --账户ID 待定
				,A.report_id --报告编号
				,a.account_num --账户编号
				,A.ACCOUNT_TYPE   AS ACT_TYP_CD --账户类型代码
				,A.ORG_CODE       AS DTRB_ORG_CODE --发放机构代码
				,A.BUSINESS_TYPE  AS ACT_PD_CD --业务产品种类代码
				,CASE
				   WHEN A.ACCOUNT_TYPE IN ( 'C1' , 'D1' , 'R4' ) THEN A.LOAN_AMOUNT
				   WHEN A.ACCOUNT_TYPE IN ( 'R1' )               THEN A.ACCOUNT_QUOTA
				   WHEN A.BUSINESS_TYPE IN ( '82' )               THEN J.UESD_INSTALLMENT_MONEY ----已用分期金额 ---大额分期：本质为有场景的消费贷
				 END              AS LOAN_AMT ----贷款账户发放金额
				,CASE
				   WHEN A.ISSUANCE_DATE IS NULL OR TRIM(A.ISSUANCE_DATE) = '' THEN NULL
				   ELSE REPLACE(TO_CHAR(A.ISSUANCE_DATE, 'yyyy/mm/dd'), '/0', '/')
				 END              AS ACT_START_DT --账户开立日期 2020-09-07 00:00:00	 转为2020/9/7
				,CASE
				   WHEN A.DUE_DATE IS NULL OR TRIM(A.DUE_DATE) = '' THEN NULL
				   ELSE REPLACE(TO_CHAR(A.DUE_DATE, 'yyyy/mm/dd'), '/0', '/')
				 END              AS ACT_MTU_DT ---- 贷款结束日期
				,A.REPAY_PERIODS  AS RPAY_TRM ---- 还款期数
				--,t7.rate --利率（计算得到）
				,A.REPAY_METHOD              AS RPAY_MTH_CD ---- 还款方式
				,substr(A.report_id, 1, 8) input_date --录入日期
				,A.GUARANTEE_MODE AS GRNT_MTH_CD ---- 担保方式
				,CASE
				   WHEN C.ACC_STATUS IN ( '3' , '4' , '5' ) THEN C.ACC_STATUS
				   ELSE E.ACCOUNT_STATUS
				 END              AS ACC_STATUS --账户状态 3结清  4呆账  5转出
				,E.OVERDUE_AMOUNT AS RECENT_OVD_AMT ----逾期金额
				,C.FIVE_ASSORT --五级分类
				,E.REPAYMENT ----本月应还款
				,C.BALANCE        AS LAST_CTR_BAL ---- 最新贷款余额
				,A.LOAN_FLAG      AS COM_BRW_IND ---- 共同借款标志
				,C.CLOSE_DATE     AS CLOSE_DATE ---- 关闭日期
				,E.OVERDUE_PERIOD AS RECENT_OVD_PER ----当前逾期期数
				,A.ORG_TYPE       AS DTRB_ORG_TYP_CD --发放机构类型
				,g.agreement_sign --授信协议标识
				,A.dt
		FROM    edw.NCIP_PD01A_BASICINFOSEG A ----借款账户信息-基本信息 --di
		LEFT JOIN    EDW.NCIP_PD01B_FIRINFSEG C ----最新表现信息段
		ON      C.DT = A.DT
		AND     A.ID = C.UNION_ID
		AND     C.DT <= '20241202'
		AND     C.DT >= '20200314'

		LEFT JOIN    EDW.NCIP_PD01C_MONTH_INFORMATION E ----最近一次月度表现信息
		ON      E.DT = A.DT
		AND     A.ID = E.UNION_ID
		AND     E.DT <= '20241202'
		AND     E.DT >= '20200314'


		left join edw.NCIP_PD02A_CREDITBASICMESSAGE G  --改： 新增 --di
			on A.report_id=g.REPORT_ID
			and g.DT = A.DT
			and A.AGREEMENT_NUM=g.agreement_no
			and G.DT <= '20241202'
			AND G.DT >= '20200314'

		LEFT JOIN    EDW.NCIP_PD01H_INSTALMENT F ---大额专项分期信息
		ON      F.DT = A.DT
		AND     A.ID = F.UNION_ID
		AND     F.DT <= '20241202'
		AND     F.DT >= '20200314'
		LEFT JOIN    EDW.NCIP_PD01H_INSTALMENTSUB J ---大额专项分期信息段sub
		ON     J.DT = A.DT
		AND     F.ID = J.UNION_ID
		AND     J.DT <= '20241202'
		AND     J.DT >= '20200314'
		where a.dt<= '20241202'
		and (   (coalesce(C.ACC_STATUS,'')<>'3' and coalesce(E.ACCOUNT_STATUS,'')<>'3' and  A.ACCOUNT_TYPE  IN ( 'D1' , 'R1' , 'R4' ) ) ----最新账户状态未结清
			 or (coalesce(C.ACC_STATUS,'') not in ('4','6') and coalesce(E.ACCOUNT_STATUS,'')  not in ('4','6') and   A.BUSINESS_TYPE = '82') ----最新账户状态 4销户 6未激活
			)
		and a.account_num is  null
)A
left join edw.ncip_cpq_account_calculate T7 --个人客户账户利率表  村行ACCOUNT_NUM为空，用这些字段匹配account_type+org_code+business_type+ctr_amt+issuance_date+due_date+guarantee_mode+repayment+balance
ON      trim(COALESCE(A.REPORT_ID)) = trim(T7.REPORT_ID)
AND     trim(t7.account_type) = trim(A.act_typ_cd)
and trim(t7.org_code)=trim(A.dtrb_org_code)
and trim(t7.business_type)=trim(A.act_pd_cd) and t7.ctr_amt=A.loan_amt
and     trim(REPLACE(REPLACE(substr(t7.issuance_date,1,10), '-', '/'), '/0', '/')) =trim(A.act_start_dt)
and   trim(t7.guarantee_mode)=trim(A.GRNT_MTH_CD) and t7.repayment=A.repayment
and      trim(REPLACE(REPLACE(substr(t7.due_date,1,10), '-', '/'), '/0', '/'))=trim(A.act_mtu_dt)
and t7.balance=A.last_ctr_bal
AND     T7.DT = A.DT
AND     T7.DT <= '20241202'
AND     T7.DT >= '20200314'
;


create table ncip_CPQ_SIM_ACCOUNT_MONTH_RATE_copy as select * from ncip_CPQ_SIM_ACCOUNT_MONTH_RATE where dt>='20200314';
**13负债报告_并发量.sql
--工作时间，同一秒最多查询量（并发量）
SELECT  substr(report_id, 1, 14)
        ,count(DISTINCT report_id)
FROM    edw.dim_cst_ccrc_idv_loan_inf_dd
WHERE   dt = '20241106'
and substr(report_id, 9, 4)<='1810'
and substr(report_id, 9, 4)>='0800'
GROUP BY substr(report_id, 1, 14)
ORDER BY count(DISTINCT report_id) DESC
;
--最高49并发
desc edw.dwd_cst_ccrc_idv_rpt_jnl_his_dd;



--工作时间，同一秒最多查询量（并发量）
select avg(cnt) from (
SELECT  substr(report_id, 1, 14) report_dt
        ,count(DISTINCT report_id) cnt
FROM    edw.dim_cst_ccrc_idv_loan_inf_dd
WHERE   dt = '20241106'
and substr(report_id, 9, 4)<='1810'
and substr(report_id, 9, 4)>='0800'
GROUP BY substr(report_id, 1, 14)
)t
;

--历史查询
SELECT * FROM edw.dwd_cst_ccrc_idv_rpt_jnl_his_dd where dt='20241106' and  substr(report_no, 1, 14)='20200605174552';

SELECT DISTINCT report_id FROM edw.dim_cst_ccrc_idv_loan_inf_dd where dt='20241106' and  substr(report_id, 1, 14)='20200605174552';

SELECT DISTINCT report_id ,cst_id FROM edw.dim_cst_ccrc_idv_loan_inf_dd where dt='20241106' and  substr(report_id, 1, 14)='20200605174552';
**13负债报告_续贷担保编号.sql
-- ODPS SQL
-- **********************************************************************
-- 功能描述:
-- **
-- 创建者: 龙彬彬
-- 创建日期: 2024-11-10 12:53:54
-- **
-- 修改日志:
-- 修改日期          修改人          修改内容
-- **
-- **********************************************************************

SELECT * FROM xudai_zx_danbao where report_id='2024073100401550684247';


SELECT  DISTINCT report_id
FROM    edw.dim_cst_ccrc_idv_loan_inf_dd
WHERE   dt = '20241109'
and cst_id like '7%'
AND     report_id in  ('2024073100010239084921','2024073100032325984326','2024073100032325984326 ');

SELECT * FROM edw.ncip_cp_m_account_info where dt >='20240101'  and rate_month_cal>1 and report_id in (
    SELECT  DISTINCT report_id
FROM    edw.dim_cst_ccrc_idv_loan_inf_dd
WHERE   dt = '20241109'
and cst_id like '7%'
)
**14对公负债报告_01代表客户.sql
SELECT DISTINCT t.report_id ,t2.cst_id, concat(t3.doc_nbr,'%'),t3.cst_chn_nm
FROM edw.ncip_EB01B_ESTN_UNCRE_PUB t
LEFT JOIN  edw.dws_cst_ccrc_entp_ind_inf_di t2
on t.report_id=t2.report_no
and t2.dt>='20230101'
left join edw.dws_cst_bas_inf_dd t3
on t2.cst_id=t3.cst_id
and t3.dt='20241120'
where t.dt>='20230101' and t.ADS_RECORD_NUM>1 and enforce_record_num>1 --强制执行
--and judg_record_num>1 and not_ct_account_num>1;

SELECT cst_id,doc_nbr,cst_chn_nm FROM  edw.dws_cst_bas_inf_dd where dt='20241015' and cst_id in (
'1044624421'
--,'1730388392'
)

SELECT * FROM edw.dim_cst_ccrc_entp_pyf_ctg_dtl_dd where dt='20241213' and crd_rpt_id='2024072522414480181689';

SELECT * FROM edw.NCIP_CE_M_INFO_SMY where dt='20240725' and report_id='2024072522414480181689';
SELECT * FROM TMP_ADM_PBLC_CST_CRDT_ENTP_CST_IDX_DD_02  where  report_id='2024072522414480181689';

SELECT * FROM edw.dim_cst_ccrc_entp_grnt_act_bas_inf_dd where dt='20240725' and rpt_id='2024072522414480181689';

SELECT * FROM edw.DIM_CST_CCRC_ENTP_GRNT_DUTY_INF_DD where dt='20240725' and rpt_id='2024072522414480181689';

SELECT * FROM  edw.DIM_CST_CCRC_ENTP_DBT_LIB_SMY_DTL_DD  where dt='20240725' and crd_rpt_id='2024072522414480181689';
**14对公负债报告_对公指标测试.sql
-- shangzhijun_dev@zjtlcb.com/abc@12345 公共集市， 表名 ADM_PBLC_CST_CRDT_ENTP_CST_IDX_DD ，没有任何前缀
-- http://admin.ant.res.tlb.cloud/#/cloudauth/login?goto=http%3A%2F%2Fcap.ant.res.tlb.cloud%2Flogin.htm%3Fcallback%3Dhttp%253A%252F%252Fdatago.ant.res.tlb.cloud%252Findex.htm
-- ODPS SQL
-- **********************************************************************
-- 功能描述:
-- **
-- 创建者: 巫龙杰
-- 创建日期: 2024-09-26 17:10:29
-- **
-- 修改日志:
-- 修改日期          修改人          修改内容
-- 20241225       陈建钢           对 DC_EXCLD_DCNT_NOT_SETL_BAL 进行增加  ASS_QUAL_SORT = '0' 取合计数
-- 20241230       陈建钢           替换成模型
-- **
-- **********************************************************************
CREATE TABLE IF NOT EXISTS lab_bigdata_dev.ADM_PBLC_CST_CRDT_ENTP_CST_IDX_DD
(
    LGP_ID                                          STRING  COMMENT '法人编号|C4'
    ,CRDT_RPT_NO                                    STRING  COMMENT '征信报告编号|C32'
    ,CST_ID                                         STRING  COMMENT '客户号|C10'
    ,ENTP_CRDT_TOT_LBL                              DECIMAL COMMENT '企业征信总负债(指标Z060401_0119)|DECIMAL'
    ,DC_EXCLD_DCNT_NOT_SETL_BAL                     DECIMAL COMMENT '借贷不含贴现未结清余额(指标Z060401_0120)|DECIMAL'
    ,REL_RPAY_RSPBL_BAL                             DECIMAL COMMENT '相关还款责任余额(指标Z060401_0121)|DECIMAL'
    ,DC_NON_DCNT_NOT_SETL_ORG_NUM_CNT               BIGINT  COMMENT '借贷不含贴现未结清机构数计数(指标Z060401_0122)|BIGINT'
    ,CR_LOAN_NON_DCNT_NOT_SETL_BNK_FACL_MAX_AMT     DECIMAL COMMENT '信用信贷不含贴现未结清银行授信最大金额(指标Z060401_0123)|DECIMAL'
    ,GRNTE_LOAN_NON_DCNT_NOT_SETL_BNK_FACL_MAX_AMT  DECIMAL COMMENT '保证信贷不含贴现未结清银行授信最大金额(指标Z060401_0124)|DECIMAL'
    ,MORT_LOAN_DCNT_NOT_SETL_BNK_FACL_MAX_AMT       DECIMAL COMMENT '抵押信贷不含贴现未结清银行授信最大金额(指标Z060401_0125)|DECIMAL'
    ,CR_LOAN_NON_DCNT_NOT_SETL_BNK_FACL_AVG_AMT     DECIMAL COMMENT '信用信贷不含贴现未结清银行授信平均金额(指标Z060401_0126)|DECIMAL'
    ,GRNTE_LOAN_NON_DCNT_NOT_SETL_BNK_FACL_AVG_AMT  DECIMAL COMMENT '保证信贷不含贴现未结清银行授信平均金额(指标Z060401_0127)|DECIMAL'
    ,MORT_LOAN_DCNT_NOT_SETL_BNK_FACL_AVG_AMT       DECIMAL COMMENT '抵押信贷不含贴现未结清银行授信平均金额(指标Z060401_0128)|DECIMAL'
    ,MDM_LNG_TERM_BRW_MNY_NON_DCNT_NOT_SETL_ORG_NUM BIGINT  COMMENT '中长期借款不含贴现未结清机构数(指标Z060401_0129)|BIGINT'
    ,SHT_TERM_DC_NON_DCNT_NOT_SETL_ORG_NUM          BIGINT  COMMENT '短期借贷不含贴现未结清机构数(指标Z060401_0130)|BIGINT'
    ,RVLG_OVDR_NON_DCNT_NOT_SETL_ORG_NUM            BIGINT  COMMENT '循环透支不含贴现未结清机构数(指标Z060401_0131)|BIGINT'
    ,GRNT_TRX_NOT_SETL_EPSR_AMT                     DECIMAL COMMENT '担保交易未结清敞口金额(指标Z060401_0132)|DECIMAL'
    ,BNK_ACCP_DRF_NOT_SETL_EPSR_AMT                 DECIMAL COMMENT '银行承兑汇票未结清敞口金额(指标Z060401_0133)|DECIMAL'
    ,LC_NOT_SETL_EPSR_AMT                           DECIMAL COMMENT '信用证未结清敞口金额(指标Z060401_0134)|DECIMAL'
    ,BNK_GRNT_LTR_NOT_SETL_EPSR_AMT                 DECIMAL COMMENT '银行保函未结清敞口金额(指标Z060401_0135)|DECIMAL'
    ,OTH_GRNT_NOT_SETL_EPSR_AMT                     DECIMAL COMMENT '其他担保未结清敞口金额(指标Z060401_0136)|DECIMAL'
    ,LOAN_OVD_EXCD_ONE_MON_AMT                      DECIMAL COMMENT '信贷逾期超过一个月金额(指标Z040101_0136)|DECIMAL'
    ,REL_RPAY_RSPBL_OVD_EXCD_ONE_MON_AMT            DECIMAL COMMENT '相关还款责任逾期超过一个月金额(指标Z040101_0137)|DECIMAL'
    ,L60M_LOAN_OVD_EXCD_ONE_MON_ACT_NUM             BIGINT  COMMENT '近60个月信贷逾期超过一个月账户数(指标Z040101_0138)|BIGINT'
    ,L60M_LOAN_OVD_EXCD_ONE_MON_PERD_NUM_MAX_VAL    BIGINT  COMMENT '近60个月信贷逾期超过一个月期数最大值(指标Z040101_0139)|BIGINT'
    ,LOAN_LVL5_NON_NORM_BAL                         DECIMAL COMMENT '信贷五级非正常余额(指标Z040101_0140)|DECIMAL'
    ,REL_RPAY_RSPBL_LVL5_NON_NORM_BAL               DECIMAL COMMENT '相关还款责任五级非正常余额(指标Z040101_0141)|DECIMAL'
)
COMMENT
'企业征信指标'
PARTITIONED BY
(
    DT STRING COMMENT '日期分区'
)
LIFECYCLE 36000;

DROP TABLE IF EXISTS lab_bigdata_dev.TMP_ADM_PBLC_NCIP_CE_M_ACCOUNT_INFO_01;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.TMP_ADM_PBLC_NCIP_CE_M_ACCOUNT_INFO_01
(
    CREDIT_AGREEMENT_NUM STRING  COMMENT '授信金额对应的授信协议编号'
    ,CREDIT_AMT_MODIFY   DECIMAL COMMENT '授信金额_新加工'
    ,REPORT_ID           STRING  COMMENT '报告编号'
    ,ORG_NUMBER          STRING  COMMENT '业务管理机构代码'
    ,GUA_MODE            STRING  COMMENT '业务管理机构代码'
);

INSERT INTO lab_bigdata_dev.TMP_ADM_PBLC_NCIP_CE_M_ACCOUNT_INFO_01
-- 加工授信金额
SELECT  DISTINCT CREDIT_AGREEMENT_NUM --授信金额对应的授信协议编号
                 ,CAST(CREDIT_AMT_MODIFY AS DECIMAL) --授信金额_新加工
                 ,REPORT_ID --报告编号
                 ,ORG_NUMBER --业务管理机构代码
                 ,GUA_MODE --担保方式/反担保方式
FROM    edw.NCIP_CE_M_ACCOUNT_INFO --企业征信账户信息
WHERE   DT >= '20240101'
AND     ACCOUNT_STATE_MODIFY = '1' --未结清
AND     ORG_TYPE_BANK_FG = '1' --银行机构
AND     COALESCE(CREDIT_AGREEMENT_NUM, '') <> ''  --针对有授信协议的要进行去重
--剔除贴现
AND     ACCOUNT_TYPE_MODIFY <> 'D2'
UNION ALL
SELECT  CREDIT_AGREEMENT_NUM --授信金额对应的授信协议编号
        ,CAST(CREDIT_AMT_MODIFY AS DECIMAL) --授信金额_新加工
        ,REPORT_ID --报告编号
        ,ORG_NUMBER --业务管理机构代码
        ,GUA_MODE --担保方式/反担保方式  0-信用/免担保 1-保证 2-质押 3-抵押 4-组合
FROM    edw.NCIP_CE_M_ACCOUNT_INFO --企业征信账户信息
WHERE   DT >= '20240101'
AND     ACCOUNT_STATE_MODIFY = '1' --未结清
AND     ORG_TYPE_BANK_FG = '1' --银行机构
AND     COALESCE(CREDIT_AGREEMENT_NUM, '') = ''  --针对有授信协议的要进行去重
--剔除贴现
AND     ACCOUNT_TYPE_MODIFY <> 'D2';

DROP TABLE IF EXISTS lab_bigdata_dev.TMP_ADM_PBLC_CST_CRDT_ENTP_CST_IDX_DD_01;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.TMP_ADM_PBLC_CST_CRDT_ENTP_CST_IDX_DD_01
(
    REPORT_ID                                      STRING  COMMENT '报告编号'
    ,CR_LOAN_NON_DCNT_NOT_SETL_BNK_FACL_MAX_AMT    DECIMAL COMMENT '信用信贷不含贴现未结清银行授信最大金额(指标Z060401_0123)|DECIMAL'
    ,GRNTE_LOAN_NON_DCNT_NOT_SETL_BNK_FACL_MAX_AMT DECIMAL COMMENT '保证信贷不含贴现未结清银行授信最大金额(指标Z060401_0124)|DECIMAL'
    ,MORT_LOAN_DCNT_NOT_SETL_BNK_FACL_MAX_AMT      DECIMAL COMMENT '抵押信贷不含贴现未结清银行授信最大金额(指标Z060401_0125)|DECIMAL'
    ,CR_LOAN_NON_DCNT_NOT_SETL_BNK_FACL_AVG_AMT    DECIMAL COMMENT '信用信贷不含贴现未结清银行授信平均金额(指标Z060401_0126)|DECIMAL'
    ,GRNTE_LOAN_NON_DCNT_NOT_SETL_BNK_FACL_AVG_AMT DECIMAL COMMENT '保证信贷不含贴现未结清银行授信平均金额(指标Z060401_0127)|DECIMAL'
    ,MORT_LOAN_DCNT_NOT_SETL_BNK_FACL_AVG_AMT      DECIMAL COMMENT '抵押信贷不含贴现未结清银行授信平均金额(指标Z060401_0128)|DECIMAL'
);

INSERT INTO lab_bigdata_dev.TMP_ADM_PBLC_CST_CRDT_ENTP_CST_IDX_DD_01
SELECT  REPORT_ID
        ,MAX(CR_FACL)    AS CR_LOAN_NON_DCNT_NOT_SETL_BNK_FACL_MAX_AMT -- 信用信贷不含贴现未结清银行授信最大金额
        ,MAX(GRNTE_FACL) AS GRNTE_LOAN_NON_DCNT_NOT_SETL_BNK_FACL_MAX_AMT --保证信贷不含贴现未结清银行授信最大金额
        ,MAX(MORT_FACL)  AS MORT_LOAN_DCNT_NOT_SETL_BNK_FACL_MAX_AMT --抵押信贷不含贴现未结清银行授信最大金额
        ,CASE
           WHEN COALESCE(COUNT(CR_IND), 0) = 0 THEN NULL
           ELSE SUM(CR_FACL) / COUNT(CR_IND)
         END             AS CR_LOAN_NON_DCNT_NOT_SETL_BNK_FACL_AVG_AMT -- 信用信贷不含贴现未结清银行授信平均金额
        ,CASE
           WHEN COALESCE(COUNT(GRNTE_IND), 0) = 0 THEN NULL
           ELSE SUM(GRNTE_FACL) / COUNT(GRNTE_IND)
         END             AS GRNTE_LOAN_NON_DCNT_NOT_SETL_BNK_FACL_AVG_AMT --保证信贷不含贴现未结清银行授信平均金额
        ,CASE
           WHEN COALESCE(COUNT(MORT_IND), 0) = 0 THEN NULL
           ELSE SUM(MORT_FACL) / COUNT(MORT_IND)
         END             AS MORT_LOAN_DCNT_NOT_SETL_BNK_FACL_AVG_AMT --抵押信贷不含贴现未结清银行授信平均金额
FROM    (
            SELECT  REPORT_ID --报告编号
                    ,ORG_NUMBER --业务管理机构代码
                    ,SUM(CASE --  0-信用/免担保 1-保证 2-质押 3-抵押 4-组合
                           WHEN GUA_MODE = '0' THEN COALESCE(CREDIT_AMT_MODIFY, 0)
                           ELSE 0
                         END) AS CR_FACL --信用类授信
                    ,SUM(CASE --1-保证
                           WHEN GUA_MODE = '1' THEN COALESCE(CREDIT_AMT_MODIFY, 0)
                           ELSE 0
                         END) AS GRNTE_FACL --保证类授信
                    ,SUM(CASE --2-质押 3-抵押
                           WHEN GUA_MODE IN ( '2' , '3' ) THEN COALESCE(CREDIT_AMT_MODIFY, 0)
                           ELSE 0
                         END) AS MORT_FACL -- 抵押类授信
                    ,MAX(CASE -- 0-信用/免担保
                           WHEN GUA_MODE = '0' THEN 1
                           ELSE NULL
                         END) AS CR_IND -- 信用标志
                    ,MAX(CASE -- 0-信用/免担保
                           WHEN GUA_MODE = '1' THEN 1
                           ELSE NULL
                         END) AS GRNTE_IND --保证标志
                    ,MAX(CASE -- 0-信用/免担保
                           WHEN GUA_MODE IN ( '2' , '3' ) THEN 1
                           ELSE NULL
                         END) AS MORT_IND --抵押标志
            FROM    lab_bigdata_dev.TMP_ADM_PBLC_NCIP_CE_M_ACCOUNT_INFO_01
            GROUP BY REPORT_ID , ORG_NUMBER
        ) T1
GROUP BY REPORT_ID;

DROP TABLE IF EXISTS lab_bigdata_dev.TMP_ADM_PBLC_CST_CRDT_ENTP_CST_IDX_DD_02;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.TMP_ADM_PBLC_CST_CRDT_ENTP_CST_IDX_DD_02
(
    REPORT_ID                                       STRING
    ,CST_ID                                         STRING  COMMENT '客户号'
    ,DC_EXCLD_DCNT_NOT_SETL_BAL                     DECIMAL COMMENT '借贷不含贴现未结清余额(指标Z060401_0120)|DECIMAL'
    ,REL_RPAY_RSPBL_BAL                             DECIMAL COMMENT '相关还款责任余额(指标Z060401_0121)|DECIMAL'
    ,DC_NON_DCNT_NOT_SETL_ORG_NUM_CNT               BIGINT  COMMENT '借贷不含贴现未结清机构数计数(指标Z060401_0122)|BIGINT'
    ,MDM_LNG_TERM_BRW_MNY_NON_DCNT_NOT_SETL_ORG_NUM BIGINT  COMMENT '中长期借款不含贴现未结清机构数(指标Z060401_0129)|BIGINT'
    ,SHT_TERM_DC_NON_DCNT_NOT_SETL_ORG_NUM          BIGINT  COMMENT '短期借贷不含贴现未结清机构数(指标Z060401_0130)|BIGINT'
    ,RVLG_OVDR_NON_DCNT_NOT_SETL_ORG_NUM            BIGINT  COMMENT '循环透支不含贴现未结清机构数(指标Z060401_0131)|BIGINT'
    ,BNK_ACCP_DRF_NOT_SETL_EPSR_AMT                 DECIMAL COMMENT '银行承兑汇票未结清敞口金额(指标Z060401_0133)|DECIMAL'
    ,LC_NOT_SETL_EPSR_AMT                           DECIMAL COMMENT '信用证未结清敞口金额(指标Z060401_0134)|DECIMAL'
    ,BNK_GRNT_LTR_NOT_SETL_EPSR_AMT                 DECIMAL COMMENT '银行保函未结清敞口金额(指标Z060401_0135)|DECIMAL'
    ,OTH_GRNT_NOT_SETL_EPSR_AMT                     DECIMAL COMMENT '其他担保未结清敞口金额(指标Z060401_0136)|DECIMAL'
    ,GRNT_TRX_NOT_SETL_EPSR_AMT                     DECIMAL COMMENT '担保交易未结清敞口金额(指标Z060401_0132)|DECIMAL'
    ,REL_RPAY_RSPBL_LVL5_NON_NORM_BAL               DECIMAL COMMENT '相关还款责任五级非正常余额(指标Z040101_0141)|DECIMAL'
    ,LOAN_OVD_EXCD_ONE_MON_AMT                      DECIMAL COMMENT '信贷逾期超过一个月金额(指标Z040101_0136)|DECIMAL'
    ,L60M_LOAN_OVD_EXCD_ONE_MON_PERD_NUM_MAX_VAL    BIGINT  COMMENT '近60个月信贷逾期超过一个月期数最大值(指标Z040101_0139)|BIGINT'
    ,L60M_LOAN_OVD_EXCD_ONE_MON_ACT_NUM             BIGINT  COMMENT '近60个月信贷逾期超过一个月账户数(指标Z040101_0138)|BIGINT'
    ,REL_RPAY_RSPBL_OVD_EXCD_ONE_MON_AMT            DECIMAL COMMENT '相关还款责任逾期超过一个月金额(指标Z040101_0137)|DECIMAL'
    ,LOAN_LVL5_NON_NORM_BAL                         DECIMAL COMMENT '信贷五级非正常余额(指标Z040101_0140)|DECIMAL'
);

INSERT INTO lab_bigdata_dev.TMP_ADM_PBLC_CST_CRDT_ENTP_CST_IDX_DD_02
SELECT  T1.REPORT_NO                                                                                                   AS REPORT_ID
        ,MAX(CST_ID)                                                                                                   AS CST_ID --客户号
        ,MAX(COALESCE(T2.DC_EXCLD_DCNT_NOT_SETL_BAL, 0))                                                               AS DC_EXCLD_DCNT_NOT_SETL_BAL --借贷不含贴现未结清余额(指标Z060401_0120)|DECIMAL
        ,MAX(COALESCE(T3.REL_RPAY_RSPBL_BAL, 0))                                                                       AS REL_RPAY_RSPBL_BAL --相关还款责任余额
        ,MAX(COALESCE(T4.DC_NON_DCNT_NOT_SETL_ORG_NUM_CNT, 0))                                                         AS DC_NON_DCNT_NOT_SETL_ORG_NUM_CNT --借贷不含贴现未结清机构数计数
        ,MAX(COALESCE(T4.MDM_LNG_TERM_BRW_MNY_NON_DCNT_NOT_SETL_ORG_NUM, 0))                                           AS MDM_LNG_TERM_BRW_MNY_NON_DCNT_NOT_SETL_ORG_NUM --中长期借款不含贴现未结清机构数
        ,MAX(COALESCE(T4.SHT_TERM_DC_NON_DCNT_NOT_SETL_ORG_NUM, 0))                                                    AS SHT_TERM_DC_NON_DCNT_NOT_SETL_ORG_NUM --短期借款机构数
        ,MAX(COALESCE(T4.RVLG_OVDR_NON_DCNT_NOT_SETL_ORG_NUM, 0))                                                      AS RVLG_OVDR_NON_DCNT_NOT_SETL_ORG_NUM --循环透支不含贴现未结清机构数
        ,MAX(COALESCE(T5.BNK_ACCP_DRF_NOT_SETL_EPSR_AMT, 0))                                                           AS BNK_ACCP_DRF_NOT_SETL_EPSR_AMT --银行承兑汇票风险敞口
        ,MAX(COALESCE(T5.LC_NOT_SETL_EPSR_AMT, 0))                                                                     AS LC_NOT_SETL_EPSR_AMT --信用证未结清敞口金额
        ,MAX(COALESCE(T5.BNK_GRNT_LTR_NOT_SETL_EPSR_AMT, 0))                                                           AS BNK_GRNT_LTR_NOT_SETL_EPSR_AMT --银行保函未结清敞口金额
        ,MAX(COALESCE(T5.OTH_GRNT_NOT_SETL_EPSR_AMT, 0))                                                               AS OTH_GRNT_NOT_SETL_EPSR_AMT --银行保函未结清敞口金额
        ,MAX(COALESCE(T5.GRNT_TRX_NOT_SETL_EPSR_AMT, 0))                                                               AS GRNT_TRX_NOT_SETL_EPSR_AMT --担保交易未结清敞口金额
        ,MAX(COALESCE(T6.REL_RPAY_RSPBL_LVL5_NON_NORM_BAL, 0)) + MAX(COALESCE(T7.REL_RPAY_RSPBL_LVL5_NON_NORM_BAL, 0)) AS REL_RPAY_RSPBL_LVL5_NON_NORM_BAL --相关还款责任五级非正常余额
        ,MAX(COALESCE(T8.LOAN_OVD_EXCD_ONE_MON_AMT, 0))                                                                AS LOAN_OVD_EXCD_ONE_MON_AMT --信贷逾期超过一个月金额
        ,MAX(COALESCE(T9.L60M_LOAN_OVD_EXCD_ONE_MON_PERD_NUM_MAX_VAL, 0))                                              AS L60M_LOAN_OVD_EXCD_ONE_MON_PERD_NUM_MAX_VAL
        ,MAX(COALESCE(T10.L60M_LOAN_OVD_EXCD_ONE_MON_ACT_NUM, 0))                                                      AS L60M_LOAN_OVD_EXCD_ONE_MON_ACT_NUM --近60个月信贷逾期超过一个月账户数
        ,MAX(COALESCE(T11.REL_RPAY_RSPBL_OVD_EXCD_ONE_MON_AMT, 0))                                                     AS REL_RPAY_RSPBL_OVD_EXCD_ONE_MON_AMT --
        ,MAX(COALESCE(T12.LOAN_LVL5_NON_NORM_BAL, 0))                                                                  AS LOAN_LVL5_NON_NORM_BAL --
FROM    edw.DWS_CST_CCRC_ENTP_IND_INF_DI T1
LEFT JOIN    (
                 SELECT  CRD_RPT_ID AS REPORT_ID
                         ,SUM(CASE
                                -- 1	中长期借款  2	短期借款 3	循环透支 4	贴现  ASS_QUAL_SORT =0 合计
                                WHEN BUS_TYP_CD IN ( '1' , '2' , '3' ) AND AST_NBR_CTG_CD = '0' THEN COALESCE(BAL, 0)
                                ELSE 0
                              END)  AS DC_EXCLD_DCNT_NOT_SETL_BAL ---借贷不含贴现未结清余额
                 FROM    edw.DIM_CST_CCRC_ENTP_PYF_CTG_DTL_DD --未结清借贷交易分类汇总信息明细
                 WHERE   DT = '20250102'
                 GROUP BY CRD_RPT_ID
             ) T2
ON      T1.REPORT_NO = T2.REPORT_ID
LEFT JOIN    (
                 SELECT  REPORT_ID
                         --担保交易相关还款责任合计余额  其他借贷交易账户余额               被追偿的账户余额
                         ,COALESCE(BALANCE_ALL, 0) + COALESCE(OTH_ACC_BALANCE_ALL, 0) + COALESCE(ACC_REC_BALANCE_ALL, 0) AS REL_RPAY_RSPBL_BAL --相关还款责任（含对外担保）余额
                 FROM    edw.NCIP_CE_M_INFO_SMY --企业征信概要信息
                 WHERE   DT >= '20240101'
             ) T3
ON      T1.REPORT_NO = T3.REPORT_ID
LEFT JOIN    (
                 SELECT  REPORT_ID
                         ,COUNT(DISTINCT CASE ----    1 未结清   C1 催收账户 D1 非循环贷账户 D2 贴现账户 R1 循环贷账户 R4 循环额度下分账户
                                           WHEN ACT_ACTV_STS = '1' AND ACT_TYP IN ( 'C1' , 'D1' , 'R1' , 'R4' ) THEN IF(COALESCE(DTRB_ORG_TYP_CD, '') = '00', 'ZJTL', DTRB_ORG_CD)
                                           ELSE NULL
                                         END) AS DC_NON_DCNT_NOT_SETL_ORG_NUM_CNT -- 借贷不含贴现未结清机构数计数
                         ,COUNT(DISTINCT CASE ----    1 未结清   C1 催收账户 D1 非循环贷账户 D2 贴现账户 R1 循环贷账户 R4 循环额度下分账户 -- LOAN_TRM   10 短期  20 中期 30 长期
                                           WHEN ACT_ACTV_STS = '1' AND ACT_TYP IN ( 'C1' , 'D1' , 'R1' , 'R4' ) AND LOAN_TRM IN ( '20' , '30' ) THEN IF(COALESCE(DTRB_ORG_TYP_CD, '') = '00', 'ZJTL', DTRB_ORG_CD)
                                           ELSE NULL
                                         END) AS MDM_LNG_TERM_BRW_MNY_NON_DCNT_NOT_SETL_ORG_NUM --中长期借款机构数不含贴现
                         ,COUNT(DISTINCT CASE ----    1 未结清   C1 催收账户 D1 非循环贷账户 D2 贴现账户 R1 循环贷账户 R4 循环额度下分账户 -- LOAN_TRM   10 短期  20 中期 30 长期
                                           WHEN ACT_ACTV_STS = '1' AND ACT_TYP IN ( 'C1' , 'D1' , 'R1' , 'R4' ) AND LOAN_TRM = '10' THEN IF(COALESCE(DTRB_ORG_TYP_CD, '') = '00', 'ZJTL', DTRB_ORG_CD)
                                           ELSE NULL
                                         END) AS SHT_TERM_DC_NON_DCNT_NOT_SETL_ORG_NUM -- 短期借款机构数
                         ,COUNT(DISTINCT CASE ----    1 未结清   C1 催收账户 D1 非循环贷账户 D2 贴现账户 R1 循环贷账户 R4 循环额度下分账户 -- LOAN_TRM   10 短期  20 中期 30 长期
                                           WHEN ACT_ACTV_STS = '1' AND ACT_TYP IN ( 'R1' ) THEN IF(COALESCE(DTRB_ORG_TYP_CD, '') = '00', 'ZJTL', DTRB_ORG_CD)
                                           ELSE NULL
                                         END) AS RVLG_OVDR_NON_DCNT_NOT_SETL_ORG_NUM --循环透支不含贴现未结清机构数
                 FROM    edw.DIM_CST_CCRC_ENTP_LOAN_INF_DD --借贷账户基本信息 DIM_CST_CCRC_ENTP_LOAN_INF_DD
                 WHERE   DT = '20250102'
                 GROUP BY REPORT_ID
             ) T4
ON      T1.REPORT_NO = T4.REPORT_ID
LEFT JOIN    (
                 SELECT  T1.RPT_ID                                                          AS REPORT_ID
                         ,SUM(CASE --银行承兑汇票
                                WHEN T1.GRNT_TRX_BUS_CLS_CD = '61' THEN COALESCE(T2.BAL, 0) * ( 1 - COALESCE(T1.MRGN_RTO, 0) / 100 )
                                ELSE 0
                              END)                                                          AS BNK_ACCP_DRF_NOT_SETL_EPSR_AMT -- 银行承兑汇票风险敞口
                         ,SUM(CASE --信用证
                                WHEN T1.GRNT_TRX_BUS_CLS_CD = '51' THEN COALESCE(T2.BAL, 0) * ( 1 - COALESCE(T1.MRGN_RTO, 0) / 100 )
                                ELSE 0
                              END)                                                          AS LC_NOT_SETL_EPSR_AMT --信用证风险敞口
                         ,SUM(CASE --融资类银行保函 非融资类银行保函
                                WHEN T1.GRNT_TRX_BUS_CLS_CD IN ( '71' , '72' ) THEN COALESCE(T2.BAL, 0) * ( 1 - COALESCE(T1.MRGN_RTO, 0) / 100 )
                                ELSE 0
                              END)                                                          AS BNK_GRNT_LTR_NOT_SETL_EPSR_AMT --银行保函风险敞口
                         ,SUM(CASE --
                                WHEN T1.GRNT_TRX_BUS_CLS_CD NOT IN ( '61' , '51' , '71' , '72' ) THEN COALESCE(T2.BAL, 0) * ( 1 - COALESCE(T1.MRGN_RTO, 0) / 100 )
                                ELSE 0
                              END)                                                          AS OTH_GRNT_NOT_SETL_EPSR_AMT --其他担保交易风险敞口
                         ,SUM(COALESCE(T2.BAL, 0) * ( 1 - COALESCE(T1.MRGN_RTO, 0) ) / 100) AS GRNT_TRX_NOT_SETL_EPSR_AMT --担保交易未结清敞口金额
                 FROM    edw.DIM_CST_CCRC_ENTP_GRNT_ACT_BAS_INF_DD T1 --担保账户基本信息--DIM_CST_CCRC_ENTP_GRNT_ACT_BAS_INF_DD
                 INNER JOIN    edw.DIM_CST_CCRC_ENTP_GRNT_DUTY_INF_DD T2 --在保责任信息段 --DIM_CST_CCRC_ENTP_GRNT_DUTY_INF_DD
                 ON      T1.ID = T2.REL_ID
                 AND     T1.RPT_ID = T2.RPT_ID
                 AND     T2.DT= '20250102'
                 AND     T2.ACT_ACTV_STS_CD = '1' --取未结清的
                 WHERE   T1.DT = '20250102'
                 GROUP BY T1.RPT_ID
             ) T5
ON      T1.REPORT_NO = T5.REPORT_ID
LEFT JOIN    (
                 SELECT  CRD_RPT_ID                                                                               AS REPORT_ID
                         ,COALESCE(TRC_ACT_BAL, 0) + COALESCE(OTH_ACT_CNCN_BAL, 0) + COALESCE(OTH_ACT_BAD_BAL, 0) AS REL_RPAY_RSPBL_LVL5_NON_NORM_BAL
                 FROM    edw.DIM_CST_CCRC_ENTP_DBT_LIB_SMY_DTL_DD --借贷交易相关还款责任分类汇总信息 DIM_CST_CCRC_ENTP_DBT_LIB_SMY_DTL_DD
                 WHERE   DT = '20250102' --责任类型 0 合计
                 AND     LIB_TYP_CD = '0'
             ) T6
ON      T1.REPORT_NO = T6.REPORT_ID
LEFT JOIN    (
                 SELECT  CRD_RPT_ID                                    AS REPORT_ID
                         ,COALESCE(CNCN_BAL, 0) + COALESCE(BAD_BAL, 0) AS REL_RPAY_RSPBL_LVL5_NON_NORM_BAL
                 FROM    edw.DIM_CST_CCRC_ENTP_REL_RPAY_SMY_DD --担保交易相关还款责任分类汇总信息 DIM_CST_CCRC_ENTP_REL_RPAY_SMY_DD
                 WHERE   DT = '20250102' --责任类型 0 合计
                 AND     LIB_TYP_CD = '0'
             ) T7
ON      T1.REPORT_NO = T7.REPORT_ID
LEFT JOIN    (
                 SELECT  RPT_ID                         AS REPORT_ID
                         ,SUM(COALESCE(TOT_OVD_AMT, 0)) AS LOAN_OVD_EXCD_ONE_MON_AMT --借贷交易逾期总额
                 FROM    edw.DWD_CST_CCRC_REL_RPAY_DTY_CRD_DBT_ACT_DI --未结清借贷交易汇总信息 DWD_CST_CCRC_REL_RPAY_DTY_CRD_DBT_ACT_DI
                 WHERE   DT >= '20240101'
                 GROUP BY RPT_ID
             ) T8
ON      T1.REPORT_NO = T8.REPORT_ID
LEFT JOIN    (
                 SELECT  RPT_ID    AS REPORT_ID
                         ,MAX(CASE
                                WHEN MONTHS_BETWEEN(TO_DATE(SUBSTR(RPT_ID, 1, 6), 'yyyyMM'), TO_DATE(REPLACE(SUBSTR(INF_RPT_DT, 1, 8), '-', ''), 'yyyyMM')) <= '60' THEN COALESCE(OVD_MON, 0)
                                ELSE 0
                              END) AS L60M_LOAN_OVD_EXCD_ONE_MON_PERD_NUM_MAX_VAL -- 最大逾期月份数
                 FROM    edw.DWD_CST_CCRC_RPAY_DTL_INF_DI --还款表现明细 DWD_CST_CCRC_RPAY_DTL_INF_DI
                 WHERE   DT >= '20240101'
                 GROUP BY RPT_ID
             ) T9
ON      T1.REPORT_NO = T9.REPORT_ID
LEFT JOIN    (----借贷交易逾期总额  好像没有担保交易逾期总额
                 SELECT  CRD_RPT_ID AS REPORT_ID
                         ,SUM(CASE
                                WHEN MONTHS_BETWEEN(TO_DATE(SUBSTR(CRD_RPT_ID, 1, 6), 'yyyyMM'), TO_DATE(REPLACE(MON, '-', ''), 'yyyyMM')) <= '60' THEN OVD_ACT_NBR
                                ELSE NULL
                              END)  AS L60M_LOAN_OVD_EXCD_ONE_MON_ACT_NUM --近60个月信贷逾期超过一个月账户数(指标Z040101_0138)|BIGINT
                 FROM    edw.DIM_CST_CCRC_ENTP_LBL_INF_DTL_DI --负债历史汇总信息明细 DIM_CST_CCRC_ENTP_LBL_INF_DTL_DI
                 WHERE   DT >= '20240101'
                 GROUP BY CRD_RPT_ID
             ) T10
ON      T1.REPORT_NO = T10.REPORT_ID
LEFT JOIN    (
                 SELECT  REPORT_ID
                         ,SUM(OVERDUE_TOTAL) AS REL_RPAY_RSPBL_OVD_EXCD_ONE_MON_AMT --相关还款责任含对外担保逾期总额
                 FROM    edw.NCIP_CE_M_RELATED_REPAYMENT_INFO --企业征信相关还款责任信息
                 WHERE   DT >= '20240101'
                 GROUP BY REPORT_ID
             ) T11
ON      T1.REPORT_NO = T11.REPORT_ID
LEFT JOIN    (
                 SELECT  REPORT_ID
                         ,SUM(BALANCE) AS LOAN_LVL5_NON_NORM_BAL
                 FROM    (
                             SELECT  CRD_RPT_ID             AS REPORT_ID
                                     ,SUM(COALESCE(BAL, 0)) AS BALANCE
                             FROM    edw.DIM_CST_CCRC_ENTP_PYF_GRNT_DTL_DD --未结清担保交易分类汇总信息 DIM_CST_CCRC_ENTP_PYF_GRNT_DTL_DD
                             WHERE   dt = '20250102' --1正常 0合计
                             AND     AST_NBR_CTG_CD NOT IN ( '1' , '0' )
                             AND     BUS_TYP_CD = '0' --合计 business_type
                             GROUP BY CRD_RPT_ID
                             UNION ALL
                             SELECT  CRD_RPT_ID             AS REPORT_ID
                                     ,SUM(COALESCE(BAL, 0)) AS BALANCE
                             FROM    edw.DIM_CST_CCRC_ENTP_PYF_CTG_DTL_DD --未结清担保交易分类汇总信息 DIM_CST_CCRC_ENTP_PYF_CTG_DTL_DD
                             WHERE   dt = '20250102' --1正常 0合计
                             AND     AST_NBR_CTG_CD NOT IN ( '1' , '0' )
                             AND     BUS_TYP_CD = '0' --合计
                             GROUP BY CRD_RPT_ID
                         ) T
                 GROUP BY REPORT_ID
             ) T12
ON      T1.REPORT_NO = T12.REPORT_ID
WHERE   T1.DT >= '20240101'
GROUP BY T1.REPORT_NO;

-- ALTER TABLE lab_bigdata_dev.ADM_PBLC_CST_CRDT_ENTP_CST_IDX_DD DROP IF EXISTS PARTITION ( DT >= '20240101' );

INSERT overwrite table lab_bigdata_dev.ADM_PBLC_CST_CRDT_ENTP_CST_IDX_DD PARTITION (DT )
SELECT  '9999'                                                         AS LGP_ID -- 法人代码
        ,T1.REPORT_ID                                                  AS CRDT_RPT_NO --征信报告编号
        ,T1.CST_ID                                                     AS CST_ID --客户号
        ,T1.DC_EXCLD_DCNT_NOT_SETL_BAL + T1.GRNT_TRX_NOT_SETL_EPSR_AMT AS ENTP_CRDT_TOT_LBL -- '企业征信总负债(指标Z060401_0119)|DECIMAL'
        ,T1.DC_EXCLD_DCNT_NOT_SETL_BAL                                 AS DC_EXCLD_DCNT_NOT_SETL_BAL -- '借贷不含贴现未结清余额(指标Z060401_0120)|DECIMAL'
        ,T1.REL_RPAY_RSPBL_BAL                                         AS REL_RPAY_RSPBL_BAL -- '相关还款责任余额(指标Z060401_0121)|DECIMAL'
        ,T1.DC_NON_DCNT_NOT_SETL_ORG_NUM_CNT                           AS DC_NON_DCNT_NOT_SETL_ORG_NUM_CNT -- '借贷不含贴现未结清机构数计数(指标Z060401_0122)|BIGINT'
        ,COALESCE(T2.CR_LOAN_NON_DCNT_NOT_SETL_BNK_FACL_MAX_AMT, 0)    AS CR_LOAN_NON_DCNT_NOT_SETL_BNK_FACL_MAX_AMT -- '信用信贷不含贴现未结清银行授信最大金额(指标Z060401_0123)|DECIMAL'
        ,COALESCE(T2.GRNTE_LOAN_NON_DCNT_NOT_SETL_BNK_FACL_MAX_AMT, 0) AS GRNTE_LOAN_NON_DCNT_NOT_SETL_BNK_FACL_MAX_AMT -- '保证信贷不含贴现未结清银行授信最大金额(指标Z060401_0124)|DECIMAL'
        ,COALESCE(T2.MORT_LOAN_DCNT_NOT_SETL_BNK_FACL_MAX_AMT, 0)      AS MORT_LOAN_DCNT_NOT_SETL_BNK_FACL_MAX_AMT -- '抵押信贷不含贴现未结清银行授信最大金额(指标Z060401_0125)|DECIMAL'
        ,COALESCE(T2.CR_LOAN_NON_DCNT_NOT_SETL_BNK_FACL_AVG_AMT, 0)    AS CR_LOAN_NON_DCNT_NOT_SETL_BNK_FACL_AVG_AMT -- '信用信贷不含贴现未结清银行授信平均金额(指标Z060401_0126)|DECIMAL'
        ,COALESCE(T2.GRNTE_LOAN_NON_DCNT_NOT_SETL_BNK_FACL_AVG_AMT, 0) AS GRNTE_LOAN_NON_DCNT_NOT_SETL_BNK_FACL_AVG_AMT -- '保证信贷不含贴现未结清银行授信平均金额(指标Z060401_0127)|DECIMAL'
        ,COALESCE(T2.MORT_LOAN_DCNT_NOT_SETL_BNK_FACL_AVG_AMT, 0)      AS MORT_LOAN_DCNT_NOT_SETL_BNK_FACL_AVG_AMT -- '抵押信贷不含贴现未结清银行授信平均金额(指标Z060401_0128)|DECIMAL'
        ,T1.MDM_LNG_TERM_BRW_MNY_NON_DCNT_NOT_SETL_ORG_NUM             AS MDM_LNG_TERM_BRW_MNY_NON_DCNT_NOT_SETL_ORG_NUM -- '中长期借款不含贴现未结清机构数(指标Z060401_0129)|BIGINT'
        ,T1.SHT_TERM_DC_NON_DCNT_NOT_SETL_ORG_NUM                      AS SHT_TERM_DC_NON_DCNT_NOT_SETL_ORG_NUM -- '短期借贷不含贴现未结清机构数(指标Z060401_0130)|BIGINT'
        ,T1.RVLG_OVDR_NON_DCNT_NOT_SETL_ORG_NUM                        AS RVLG_OVDR_NON_DCNT_NOT_SETL_ORG_NUM -- '循环透支不含贴现未结清机构数(指标Z060401_0131)|BIGINT'
        ,T1.GRNT_TRX_NOT_SETL_EPSR_AMT                                 AS GRNT_TRX_NOT_SETL_EPSR_AMT -- '担保交易未结清敞口金额(指标Z060401_0132)|DECIMAL'
        ,T1.BNK_ACCP_DRF_NOT_SETL_EPSR_AMT                             AS BNK_ACCP_DRF_NOT_SETL_EPSR_AMT -- '银行承兑汇票未结清敞口金额(指标Z060401_0133)|DECIMAL'
        ,T1.LC_NOT_SETL_EPSR_AMT                                       AS LC_NOT_SETL_EPSR_AMT -- '信用证未结清敞口金额(指标Z060401_0134)|DECIMAL'
        ,T1.BNK_GRNT_LTR_NOT_SETL_EPSR_AMT                             AS BNK_GRNT_LTR_NOT_SETL_EPSR_AMT -- '银行保函未结清敞口金额(指标Z060401_0135)|DECIMAL'
        ,T1.OTH_GRNT_NOT_SETL_EPSR_AMT                                 AS OTH_GRNT_NOT_SETL_EPSR_AMT -- '其他担保未结清敞口金额(指标Z060401_0136)|DECIMAL'
        ,T1.LOAN_OVD_EXCD_ONE_MON_AMT                                  AS LOAN_OVD_EXCD_ONE_MON_AMT -- '信贷逾期超过一个月金额(指标Z040101_0136)|DECIMAL'
        ,T1.REL_RPAY_RSPBL_OVD_EXCD_ONE_MON_AMT                        AS REL_RPAY_RSPBL_OVD_EXCD_ONE_MON_AMT -- '相关还款责任逾期超过一个月金额(指标Z040101_0137)|DECIMAL'
        ,T1.L60M_LOAN_OVD_EXCD_ONE_MON_ACT_NUM                         AS L60M_LOAN_OVD_EXCD_ONE_MON_ACT_NUM -- '近60个月信贷逾期超过一个月账户数(指标Z040101_0138)|BIGINT'
        ,T1.L60M_LOAN_OVD_EXCD_ONE_MON_PERD_NUM_MAX_VAL                AS L60M_LOAN_OVD_EXCD_ONE_MON_PERD_NUM_MAX_VAL -- '近60个月信贷逾期超过一个月期数最大值(指标Z040101_0139)|BIGINT'
        ,T1.LOAN_LVL5_NON_NORM_BAL                                     AS LOAN_LVL5_NON_NORM_BAL -- '信贷五级非正常余额(指标Z040101_0140)|DECIMAL'
        ,T1.REL_RPAY_RSPBL_LVL5_NON_NORM_BAL                           AS REL_RPAY_RSPBL_LVL5_NON_NORM_BAL -- '相关还款责任五级非正常余额(指标Z040101_0141)|DECIMAL'
        ,substr(T1.REPORT_ID,1,8)
FROM    lab_bigdata_dev.TMP_ADM_PBLC_CST_CRDT_ENTP_CST_IDX_DD_02 T1
LEFT JOIN    lab_bigdata_dev.TMP_ADM_PBLC_CST_CRDT_ENTP_CST_IDX_DD_01 T2
ON      T1.REPORT_ID = T2.REPORT_ID
**20240520_qbi埋点.sql
SELECT  t1.org_nm  --分行机构
        ,t2.sbr_org_nm  支行机构
        ,t1.account_name --工号
        ,t1.nickname --姓名
        ,count(1)                                 AS op_cnt --操作次数
        ,count(DISTINCT substr(t1.gmt_op, 1, 10)) AS op_days --操作天数
FROM    lab_bigdata_dev.qbi_user_op t1
LEFT JOIN    edw.dim_hr_org_adm_org_tree_dd t2
ON      t1.org_id = t2.org_id
AND     t2.dt = '@@{yyyyMMdd}'
WHERE   t1.dt = MAX_PT('lab_bigdata_dev.qbi_user_op')
--AND     t1.org_nm = '台州分行'
AND     substr(t1.gmt_op, 1, 4) IN ( '2024' ) --操作时间
--AND     t1.user_type IN ( '分析师' , '开发者' ) --组织角色类
--AND     t1.account_name IN ( '006925' , '012286' , '009092' , '004205' , '015109' , '000849' , '019869' , '027388' , '007736' , '027352' ) --用户工号
and t1.target_nm =''
GROUP BY t1.org_nm
-- ,t2.sbr_org_nm
, t1.account_name , t1.nickname;

SELECT  *
FROM    lab_bigdata_dev.qbi_user_op t1
WHERE   t1.dt = '@@{yyyyMMdd}'
;
desc lab_bigdata_dev.qbi_user_op
**202412_中银保信地址.sql
-- 关联取最新一笔征信报告：个人+企业
DROP TABLE IF EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_01 PURGE;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_01
(
    SAM_RSK_CTRL_ID STRING COMMENT '同一风险控制号'
    ,CST_ID         STRING COMMENT '客户号'
    ,LGP_ID         STRING COMMENT '法人编号'
    ,REPORT_NO      STRING COMMENT '最新一笔征信报告号'
);

INSERT INTO lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_01
--对私客户最新报告号
SELECT  T1.SAM_RSK_CTRL_ID
        ,T1.CST_ID
        ,T1.LGP_ID
        ,T2.REPORT_NO
FROM    edw.DWS_CST_BAS_INF_DD T1
INNER JOIN    edw.DWS_CST_CCRC_IDV_IND_INF_DD T2 --个人征信指标信息表
ON      T2.CST_ID = T1.CST_ID
AND     T2.DT = '@@{yyyyMMdd}'
AND     T2.REPORT_DSC_RN = 1 --最新一条征信报告
AND     COALESCE(T2.REPORT_NO, '') <> ''
WHERE   T1.DT = '@@{yyyyMMdd}'
AND     COALESCE(T1.CST_ID, '') <> ''
AND     COALESCE(T1.SAM_RSK_CTRL_ID, '') <> ''
UNION ALL
--对公客户最新报告号
SELECT  T1.SAM_RSK_CTRL_ID
        ,T1.CST_ID
        ,T1.LGP_ID
        ,T2.REPORT_NO
FROM    edw.DWS_CST_BAS_INF_DD T1
INNER JOIN    edw.DWS_CST_CCRC_ENTP_IND_INF_DD T2 --企业征信指标信息表
ON      T2.CST_ID = T1.CST_ID
AND     T2.DT = '@@{yyyyMMdd}'
AND     T2.REPORT_DSC_RN = 1 --最新一条征信报告
AND     COALESCE(T2.REPORT_NO, '') <> ''
WHERE   T1.DT = '@@{yyyyMMdd}'
AND     COALESCE(T1.CST_ID, '') <> ''
AND     COALESCE(T1.SAM_RSK_CTRL_ID, '') <> '';


--征信报告去重账户汇总表  (对私负债+对公负债+对私或有负债 +对公或有负债借贷担保不含贴现+对公或有负债担保账户)
DROP TABLE IF EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_02_1 PURGE;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_02_1
(
    ID                         STRING  COMMENT '编号'
    ,REPORT_ID                 STRING  COMMENT '征信报告号'
    ,RECORD_TYPE_1             STRING  COMMENT '记录类型细类'
    ,RECORD_TYPE               STRING  COMMENT '记录类型'
    ,BRW_ID_TYPE               STRING  COMMENT '主借款人身份类别(1个人2企业)'
    ,ORG_CODE                  STRING  COMMENT '机构编号'
    ,ORG_TYPE                  STRING  COMMENT '机构类型'
    ,OPEN_DATE                 STRING  COMMENT '开立日期'
    ,DUE_DATE                  STRING  COMMENT '到期日期'
    ,ACCOUNT_TYPE              STRING  COMMENT '账户类型'
    ,PD_CD                     STRING  COMMENT '产品类型'
    ,LOAN_AMT                  DECIMAL COMMENT '贷款发放金额'
    ,BAL                       DECIMAL COMMENT '账户余额'
    ,GRNT_MODE                 STRING  COMMENT '担保方式'
    ,CB_MARK                   STRING  COMMENT '共同借款标识'
    ,RELATED_REPAYMENT_TYPE    STRING  COMMENT '相关还款责任'
    ,RELATED_REPAYMENT_AMT     DECIMAL COMMENT '相关还款责任金额'
    ,CCY                       STRING  COMMENT '币种'
    ,CREDIT_LMT                DECIMAL COMMENT '授信协议额度'
    ,CREDIT_NUM                STRING  COMMENT '授信协议编号'
    ,O_CREDIT_AMT              DECIMAL COMMENT '授信额度'
    ,AGM_LMT_PURPOSE           STRING  COMMENT '授信协议额度用途'
    ,LOAN_ORGAGM_ATMSUM        DECIMAL COMMENT '对应该机构贷款授信协议总金额'
    ,CARD_ORGAGM_ATMSUM        DECIMAL COMMENT '对应该机构信用卡授信协议总金额'
    ,CCARD_AMT                 DECIMAL COMMENT '信用卡账户授信金额'
    ,BALANCE_RMB               DECIMAL COMMENT '余额人民币'
    ,MAGIN_RATIO               DECIMAL COMMENT '保证金比例'
    ,RELATED_REPAYMENT_AMT_RMB DECIMAL COMMENT '相关还款责任金额(折人民币)'
    ,IS_SELF_ORG               STRING  COMMENT '是否我行标识(1是0否)'
    ,IS_REPEAT                 STRING  COMMENT '是否需要去重账户(1是0否)'
)
COMMENT
'征信报告去重账户汇总表'
PARTITIONED BY
(
    DT STRING COMMENT '日期分区'
);

ALTER TABLE lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_02_1 DROP IF EXISTS PARTITION ( DT = '@@{yyyyMMdd}' );

INSERT INTO lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_02_1 PARTITION (DT = '@@{yyyyMMdd}')
SELECT  ID
        ,REPORT_ID
        ,'对私负债'                                                                                                              AS RECORD_TYPE_1 -- 记录类型细类
        ,'负债'                                                                                                                AS RECORD_TYPE -- 记录类型
        ,'1'                                                                                                                 AS BRW_ID_TYPE -- 主借款人类型 1个人 2企业
        ,ORG_CODE                                                                                                            AS ORG_CODE -- 机构编号
        ,ORG_TYPE                                                                                                            AS ORG_TYPE -- 机构类型
        ,SUBSTR(REPLACE(ACT_START_DT, '-', ''), 1, 8)                                                                        AS OPEN_DATE -- 开立日期
        ,IF(SUBSTR(REPLACE(ACT_MTU_DT, '-', ''), 1, 8) = '20991231', '99991231', SUBSTR(REPLACE(ACT_MTU_DT, '-', ''), 1, 8)) AS DUE_DATE --到期日期
        ,ACT_TYP_CD                                                                                                          AS ACCOUNT_TYPE --账户类型
        ,ACT_PD_CD                                                                                                           AS PD_CD --产品类型
        ,CAST(CASE
                WHEN LOAN_AMT RLIKE '^(-)?[0-9]+(\\.[0-9]+)?$' THEN LOAN_AMT
              END AS DECIMAL)                                                                                                AS LOAN_AMT --贷款发放额度 (C1+D1+R4：CTR_AMT 贷款金额 R1：ACT_CRD_LMT 账户授信额度 82：UESD_INSTALLMENT_MONEY已用分期金额)
        ,CAST(CASE
                WHEN BAL RLIKE '^(-)?[0-9]+(\\.[0-9]+)?$' THEN BAL
              END AS DECIMAL)                                                                                                AS BAL --贷款余额
        ,GRNT_MTH_CD                                                                                                         AS GRNT_MODE --担保方式
        ,COM_BRW_IND                                                                                                         AS CB_MARK --共同借款标识
        ,''                                                                                                                  AS RELATED_REPAYMENT_TYPE --相关还款责任
        ,NULL                                                                                                                AS RELATED_REPAYMENT_AMT --相关还款责任金额
        ,COALESCE(ACT_CCY_CD, AGM_CCY)                                                                                       AS CCY --币种
        ,CAST(CASE
                WHEN AGM_LMT RLIKE '^(-)?[0-9]+(\\.[0-9]+)?$' THEN AGM_LMT
              END AS DECIMAL)                                                                                                AS CREDIT_LMT --授信协议额度
        ,AGM_QUOTA_NO                                                                                                        AS CREDIT_NUM --授信协议编号
        ,NULL                                                                                                                AS O_CREDIT_AMT --授信额度
        ,AGM_LMT_PURPOSE                                                                                                     AS AGM_LMT_PURPOSE --授信协议额度用途
        ,CAST(IF(LOAN_ORGAGM_ATMSUM = '', 0, LOAN_ORGAGM_ATMSUM) AS DECIMAL)                                                 AS LOAN_ORGAGM_ATMSUM ---对应该机构贷款授信协议总金额
        ,CAST(IF(CARD_ORGAGM_ATMSUM = '', 0, CARD_ORGAGM_ATMSUM) AS DECIMAL)                                                 AS CARD_ORGAGM_ATMSUM --对应该机构信用卡授信协议总金额
        ,CAST(IF(CCARD_AMT = '', 0, CCARD_AMT) AS DECIMAL)                                                                   AS CCARD_AMT --- 信用卡账户授信金额（剔除大额分期：本质为有场景的消费贷）
        ,NULL                                                                                                                AS BALANCE_RMB --余额人民币
        ,NULL                                                                                                                AS MAGIN_RATIO --保证金比例
        ,NULL                                                                                                                AS RELATED_REPAYMENT_AMT_RMB --相关还款责任金额
        ,IS_SELF_ORG                                                                                                         AS IS_SELF_ORG --是否我行标识_1是0否
        ,CASE
           WHEN ( COALESCE(COM_BRW_IND, '') IN ( '1' , '2' ) OR COALESCE(GRNT_MTH_CD, '') IN ( '3' , '5' ) ) THEN '1'
           ELSE '0'
         END                                                                                                                 AS IS_REPEAT --是否需要去重账户_1是0否(&ldquo;需要去重&rdquo;账户指：对外担保、保证贷款、共同还款标志的账户。担保方式：3保证 5组合(含保证))
FROM    edw.NCIP_CP_M_ACCOUNT_INFO --个人借贷账户信息
WHERE   DT <= '@@{yyyyMMdd}'
AND     ACC_STATUS_TYPE <> 3

--3-关闭
UNION ALL
SELECT  ID
        ,REPORT_ID
        ,'对私或有负债'                                                                                                              AS RECORD_TYPE_1
        ,'或有负债'                                                                                                                AS RECORD_TYPE
        ,MAINBOR_IDENTYPE                                                                                                      AS BRW_ID_TYPE --主借款人身份类别
        ,BUSSUP_INS                                                                                                            AS ORG_CODE
        ,BUSSUP_INSTYPE                                                                                                        AS ORG_TYPE
        ,SUBSTR(REPLACE(OPEN_DATE, '-', ''), 1, 8)                                                                             AS OPEN_DATE
        ,IF(SUBSTR(REPLACE(EXPIRE_DATE, '-', ''), 1, 8) = '20991231', '99991231', SUBSTR(REPLACE(EXPIRE_DATE, '-', ''), 1, 8)) AS DUE_DATE
        ,ACCOUNT_TYPE                                                                                                          AS ACCOUNT_TYPE
        ,CAST(BUSI_TYPE AS STRING)                                                                                             AS PD_CD
        ,NULL                                                                                                                  AS LOAN_AMT
        ,CAST(CASE
                WHEN MONEY RLIKE '^(-)?[0-9]+(\\.[0-9]+)?$' THEN MONEY
              END AS DECIMAL)                                                                                                  AS BAL
        ,''                                                                                                                    AS GRNT_MODE
        ,''                                                                                                                    AS CB_MARK
        ,REIRES_HUMTYPE                                                                                                        AS RELATED_REPAYMENT_TYPE --相关还款责任人类型
        ,CAST(CASE
                WHEN REILIA_RELAMOUNT RLIKE '^(-)?[0-9]+(\\.[0-9]+)?$' THEN REILIA_RELAMOUNT
              END AS DECIMAL)                                                                                                  AS RELATED_REPAYMENT_AMT --相关还款责任金额
        ,CURRENCY                                                                                                              AS CCY
        ,NULL                                                                                                                  AS CREDIT_LMT
        ,GUACON_NUMBER                                                                                                         AS CREDIT_NUM -- 保证合同号
        ,NULL                                                                                                                  AS O_CREDIT_AMT
        ,NULL                                                                                                                  AS AGM_LMT_PURPOSE
        ,NULL                                                                                                                  AS LOAN_ORGAGM_ATMSUM
        ,NULL                                                                                                                  AS CARD_ORGAGM_ATMSUM
        ,NULL                                                                                                                  AS CCARD_AMT
        ,CAST(CASE
                WHEN MONEY RLIKE '^(-)?[0-9]+(\\.[0-9]+)?$' THEN MONEY
              END AS DECIMAL)                                                                                                  AS BALANCE_RMB --余额
        ,NULL                                                                                                                  AS MAGIN_RATIO
        ,CAST(CASE
                WHEN REILIA_RELAMOUNT RLIKE '^(-)?[0-9]+(\\.[0-9]+)?$' THEN REILIA_RELAMOUNT
              END AS DECIMAL)                                                                                                  AS RELATED_REPAYMENT_AMT_RMB --相关还款责任金额RMB
        ,CASE
           WHEN LENGTH(BUSSUP_INS) > 2 THEN '1'
           ELSE '0'
         END                                                                                                                   AS IS_SELF_ORG --是否我行标识_1是0否
        ,'1'                                                                                                                   AS IS_REPEAT --是否需要去重账户_1是0否(&ldquo;需要去重&rdquo;账户指：对外担保、保证贷款、共同还款标志的账户)
FROM    edw.NCIP_CP_M_PAYLIAINF --个人相关还款协议表
WHERE   DT <= '@@{yyyyMMdd}'
UNION ALL
SELECT  A.ID
        ,A.REPORT_ID
        ,'对公负债'                                                                                                                                                          AS RECORD_TYPE_1
        ,'负债'                                                                                                                                                            AS RECORD_TYPE
        ,'2'                                                                                                                                                             AS BRW_ID_TYPE
        ,A.ORG_NUMBER                                                                                                                                                    AS ORG_CODE
        ,A.ORG_TYPE                                                                                                                                                      AS ORG_TYPE
        ,SUBSTR(REPLACE(COALESCE(A.OPEN_DATE, A.EFFECTIVE_DATE), '-', ''), 1, 8)                                                                                         AS OPEN_DATE
        ,IF(SUBSTR(REPLACE(COALESCE(A.DUE_DATE, A.END_DATE), '-', ''), 1, 8) = '20991231', '99991231', SUBSTR(REPLACE(COALESCE(A.DUE_DATE, A.END_DATE), '-', ''), 1, 8)) AS DUE_DATE
        ,A.ACCOUNT_TYPE_MODIFY                                                                                                                                           AS ACCOUNT_TYPE -- 修正，主要对担保账户类型进行了修正
        ,CAST(SUBSTR(A.PD_CD_MODIFY, 1, 2) AS STRING)                                                                                                                    AS PD_CD
        ,A.LOAN_AMOUNT                                                                                                                                                   AS LOAN_AMT
        ,A.BALANCE                                                                                                                                                       AS BAL
        ,A.GUA_MODE                                                                                                                                                      AS GRNT_MODE
        ,A.CB_MARK                                                                                                                                                       AS CB_MARK --共同借款标识/共同债务标识
        ,''                                                                                                                                                              AS RELATED_REPAYMENT_TYPE
        ,NULL                                                                                                                                                            AS RELATED_REPAYMENT_AMT --相关还款责任金额
        ,A.LOAN_CURRENCY                                                                                                                                                 AS CCY
        ,A.CREDIT_AMT_MODIFY                                                                                                                                             AS CREDIT_LMT -- 授信金额 新加工，已折合成人民币
        ,A.CREDIT_AGREEMENT_NUM                                                                                                                                          AS CREDIT_NUM -- 授信协议编号
        ,T1.CREDIT_LINE                                                                                                                                                  AS O_CREDIT_AMT --授信额度
        ,NULL                                                                                                                                                            AS AGM_LMT_PURPOSE
        ,NULL                                                                                                                                                            AS LOAN_ORGAGM_ATMSUM
        ,NULL                                                                                                                                                            AS CARD_ORGAGM_ATMSUM
        ,NULL                                                                                                                                                            AS CCARD_AMT
        ,A.BALANCE_RMB                                                                                                                                                   AS BALANCE_RMB
        ,A.MAGIN_RATIO                                                                                                                                                   AS MAGIN_RATIO
        ,NULL                                                                                                                                                            AS RELATED_REPAYMENT_AMT_RMB --相关还款责任金额
        ,A.IS_SELF_ORG                                                                                                                                                   AS IS_SELF_ORG --是否我行标识_1是0否
        ,CASE
           WHEN ( COALESCE(A.CB_MARK, '') IN ( '1' , '2' ) OR COALESCE(A.GUA_MODE, '') IN ( '1' , '4' ) AND A.ACCOUNT_TYPE_MODIFY NOT IN ( 'G1' , 'G2' , 'G3' ) ) THEN '1'
           ELSE '0'
         END           AS IS_REPEAT --是否需要去重账户_1是0否(&ldquo;需要去重&rdquo;账户指：对外担保、保证贷款、共同还款标志的账户)
FROM    edw.NCIP_CE_M_ACCOUNT_INFO A --企业信贷账户信息
LEFT JOIN    edw.NCIP_ED06_ECCC_CREDIT T1 --授信协议信息
ON      A.REPORT_ID = T1.REPORT_ID
AND     A.CREDIT_NUMBER = T1.CREDIT_AGREEMENT_NUM
AND     A.DT = T1.DT
WHERE   NVL(A.ACCOUNT_STATE_MODIFY, '1') = '1' -- 账户活动状态修正 主要是对C1账户进行了修改 剔除已结清
AND     A.DT <= '@@{yyyyMMdd}'
AND     (
        CASE
          WHEN A.ACCOUNT_TYPE_MODIFY = 'G1' AND A.PD_CD_MODIFY = '11' OR A.PD_CD_MODIFY = '99' THEN 1
          ELSE 0
        END
) = 0
AND     NVL(A.ACCOUNT_TYPE_MODIFY, '') <> 'D2'

-- 不包含贴现账户
UNION ALL
SELECT  ID
        ,REPORT_ID
        ,'对公或有负债'                                                                                                              AS RECORD_TYPE_1
        ,'或有负债'                                                                                                                AS RECORD_TYPE
        ,PRIMARY_BORROW_ID_TYPE                                                                                                AS BRW_ID_TYPE --主借款人身份类别
        ,BUS_MANAGER_CODE                                                                                                      AS ORG_CODE
        ,BUS_MANAGER_TYPE                                                                                                      AS ORG_TYPE
        ,SUBSTR(REPLACE(OPEN_DATE, '-', ''), 1, 8)                                                                             AS OPEN_DATE
        ,IF(SUBSTR(REPLACE(EXPIRY_DATE, '-', ''), 1, 8) = '20991231', '99991231', SUBSTR(REPLACE(EXPIRY_DATE, '-', ''), 1, 8)) AS DUE_DATE
        ,ACCOUNT_TYPE                                                                                                          AS ACCOUNT_TYPE
        ,CASE
           WHEN PRIMARY_BORROW_ID_TYPE = '1' THEN CAST(BUS_TYPE_SUBDIVISION AS STRING)
           ELSE CAST(BUS_TYPE AS STRING)
         END                                                                                                                   AS PD_CD
        ,LOAN_AMOUNT                                                                                                           AS LOAN_AMT
        ,BALANCE                                                                                                               AS BAL
        ,''                                                                                                                    AS GRNT_MODE
        ,''                                                                                                                    AS CB_MARK
        ,RELATED_REPAYMENT_TYPE                                                                                                AS RELATED_REPAYMENT_TYPE
        ,RELATED_REPAYMENT_AMOUNT                                                                                              AS RELATED_REPAYMENT_AMT --相关还款责任金额
        ,CURRENCY                                                                                                              AS CCY
        ,CREDITS                                                                                                               AS CREDIT_LMT
        ,GUARANTEE_CONTRACT_NUM                                                                                                AS CREDIT_NUM
        ,NULL                                                                                                                  AS O_CREDIT_AMT
        ,NULL                                                                                                                  AS AGM_LMT_PURPOSE
        ,NULL                                                                                                                  AS LOAN_ORGAGM_ATMSUM
        ,NULL                                                                                                                  AS CARD_ORGAGM_ATMSUM
        ,NULL                                                                                                                  AS CCARD_AMT
        ,BALANCE * NVL(B.AVG_PRC, 1)                                                                                           AS BALANCE_RMB
        ,NULL                                                                                                                  AS MAGIN_RATIO
        ,RELATED_REPAYMENT_AMOUNT * NVL(C.AVG_PRC, 1)                                                                          AS RELATED_REPAYMENT_AMT_RMB --相关还款责任金额
        ,CASE
           WHEN BUS_MANAGER_TYPE = '00' THEN '1'
           ELSE '0'
         END                                                                                                                   AS IS_SELF_ORG --是否我行_1是0否
        ,'1'                                                                                                                   AS IS_REPEAT --是否需要去重账户_1是0否 (&ldquo;需要去重&rdquo;账户指：对外担保、保证贷款、共同还款标志的账户)
FROM    edw.NCIP_ED07_ECLL_LOAN A --企业相关还款协议表-借贷交易（不含贴现）相关还款责任明细信息
LEFT JOIN    (
                 SELECT  DT
                         ,DECODE(CCY_CD, '156', 'CNY', '392', 'JPY', '840', 'USD', '978', 'EUR', '826', 'GBP', '344', 'HKD', 'UNKNOWN') AS CCY_CD
                         ,AVG_PRC / QUO_UNT                                                                                             AS AVG_PRC
                 FROM    edw.DIM_BUS_COM_EXR_INF_DD
                 WHERE   DT <= '@@{yyyyMMdd}'
             ) B
ON      A.CURRENCY = B.CCY_CD
AND     A.DT = B.DT
LEFT JOIN    (
                 SELECT  DT
                         ,DECODE(CCY_CD, '156', 'CNY', '392', 'JPY', '840', 'USD', '978', 'EUR', '826', 'GBP', '344', 'HKD', 'UNKNOWN') AS CCY_CD
                         ,AVG_PRC / QUO_UNT                                                                                             AS AVG_PRC
                 FROM    edw.DIM_BUS_COM_EXR_INF_DD
                 WHERE   DT <= '@@{yyyyMMdd}'
             ) C
ON      A.CURRENCY_AMOUNT = C.CCY_CD ----修改相关还款责任金额币种问题
AND     A.DT = C.DT
WHERE   A.DT <= '@@{yyyyMMdd}'
UNION ALL
SELECT  ID
        ,REPORT_ID
        ,'对公担保账户或有负债'             AS RECORD_TYPE_1
        ,'担保账户或有负债'               AS RECORD_TYPE
        ,GUARANTEE_BRANCH_SUM_NUM AS BRW_ID_TYPE --担保账户分机构汇总信息编号
        ,BUS_MANAGER_CODE         AS ORG_CODE
        ,BUS_MANAGER_TYPE         AS ORG_TYPE
        ,NULL                     AS OPEN_DATE
        ,NULL                     AS DUE_DATE
        ,NULL                     AS ACCOUNT_TYPE --账户类型
        ,BUS_TYPE_SUBDIVISION     AS PD_CD
        ,NULL                     AS LOAN_AMT
        ,BALANCE                  AS BAL
        ,''                       AS GRNT_MODE
        ,''                       AS CB_MARK
        ,RELATED_REPAYMENT_TYPE   AS RELATED_REPAYMENT_TYPE
        ,RELATED_REPAYMENT_AMOUNT AS RELATED_REPAYMENT_AMT --相关还款责任金额
        ,NULL                     AS CCY --该表无币种
        ,GUARANTEE_AMOUNT         AS CREDIT_LMT --担保金额
        ,GUARANTEE_CONTRACT_NUM   AS CREDIT_NUM
        ,NULL                     AS O_CREDIT_AMT
        ,NULL                     AS AGM_LMT_PURPOSE
        ,NULL                     AS LOAN_ORGAGM_ATMSUM
        ,NULL                     AS CARD_ORGAGM_ATMSUM
        ,NULL                     AS CCARD_AMT
        ,BALANCE                  AS BALANCE_RMB
        ,NULL                     AS MAGIN_RATIO
        ,RELATED_REPAYMENT_AMOUNT AS RELATED_REPAYMENT_AMT_RMB --相关还款责任金额(折人民币)
        ,CASE
           WHEN A.BUS_MANAGER_TYPE = '00' THEN '1'
           ELSE '0'
         END                      AS IS_SELF_ORG --是否我行_1是0否
        ,'0'                      AS IS_REPEAT --是否需要去重账户_1是0否(&ldquo;需要去重&rdquo;账户指：对外担保、保证贷款、共同还款标志的账户)
FROM    edw.NCIP_ED09_ECSG_GUA A --担保账户相关还款责任分机构汇总信息
WHERE   A.DT <= '@@{yyyyMMdd}';

-- 去重逻辑实现(相关还款责任数据中有account_type 为空的 删除该条件)
DROP TABLE IF EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_02_2 PURGE;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_02_2
(
    SAM_RSK_CTRL_ID STRING COMMENT '同一风险控制号'
    ,CST_ID         STRING COMMENT '客户号'
    ,DATE_DT        STRING COMMENT '日期'
    ,ID             STRING COMMENT '编号'
    ,REPORT_NO      STRING COMMENT '最新一笔征信报告号'
    ,RECORD_TYPE_1  STRING COMMENT '记录类型细类'
    ,DD_TYPE        STRING COMMENT '去重类型'
);

INSERT INTO lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_02_2
SELECT  SAM_RSK_CTRL_ID
        ,CST_ID
        ,DATE_DT
        ,ID
        ,REPORT_NO
        ,RECORD_TYPE_1
        ,CASE
           -- 去重类型1: 从借款人 借款金额(负债、共同借款标识为从借款人、借款金额不为NULL、非我行)
           WHEN RECORD_TYPE = '负债' AND CB_MARK = '2' AND SAME_LABLE1_LOANAMT IS NOT NULL AND IS_SELF_ORG = '0' AND MAX(CASE
                                                                                                                         WHEN CB_MARK = '1' AND RECORD_TYPE = '负债' AND IS_SELF_ORG = '0' THEN 1
                                                                                                                         ELSE 0
                                                                                                                       END) OVER ( PARTITION BY SAM_RSK_CTRL_ID , DATE_DT , SAME_LABLE1_LOANAMT ) = 1                                                                                    THEN '1.1：去重从借款人-借款金额一致-他行'
           -- 去重类型1: 从借款人 授信金额
           WHEN RECORD_TYPE = '负债' AND CB_MARK = '2' AND SAME_LABLE1_CREDIT_AMT IS NOT NULL AND IS_SELF_ORG = '0' AND MAX(CASE
                                                                                                                            WHEN CB_MARK = '1' AND RECORD_TYPE = '负债' AND IS_SELF_ORG = '0' THEN 1
                                                                                                                            ELSE 0
                                                                                                                          END) OVER ( PARTITION BY SAM_RSK_CTRL_ID , DATE_DT , SAME_LABLE1_CREDIT_AMT ) = 1                                                                              THEN '1.2：去重从借款人-授信金额一致-他行'
           -- 去重类型2.1他行：去重保证人-借贷取金额担保取责任金额 相关还款责任人类型2保证人 	个人贷款、3保证或5组合(含保证)		企业贷款1保证4组合		 机构管理类型+开立日期+到期日期+业务类型+金额
           WHEN RECORD_TYPE = '或有负债' AND RELATED_REPAYMENT_TYPE = '2' AND SAME_LABLE2_FZLOANAMT_HYRLTAMT IS NOT NULL AND IS_SELF_ORG = '0' AND MAX(CASE
                                                                                                                                                     WHEN RECORD_TYPE = '负债' AND IS_SELF_ORG = '0' AND ( BRW_ID_TYPE = '1' AND GRNT_MODE IN ( '3' , '5' ) OR BRW_ID_TYPE = '2' AND GRNT_MODE IN ( '1' , '4' ) ) THEN 1
                                                                                                                                                     ELSE 0
                                                                                                                                                   END) OVER ( PARTITION BY SAM_RSK_CTRL_ID , DATE_DT , SAME_LABLE2_FZLOANAMT_HYRLTAMT ) = 1                                             THEN '2.1：去重保证人-借贷取金额担保取责任金额-他行'
           -- 去重类型2.1我行：去重保证人-借贷取金额担保取责任金额 相关还款责任人类型2保证人 	个人贷款、3保证或5组合(含保证)		企业贷款1保证4组合		 机构管理类型+开立日期+到期日期+业务类型+金额,我行
           WHEN RECORD_TYPE = '或有负债' AND RELATED_REPAYMENT_TYPE = '2' AND SAME_LABLE2_FZLOANAMT_HYRLTAMT IS NOT NULL AND IS_SELF_ORG = '1' AND MAX(CASE
                                                                                                                                                     WHEN RECORD_TYPE = '负债' AND IS_SELF_ORG = '1' AND ( BRW_ID_TYPE = '1' AND GRNT_MODE IN ( '3' , '5' ) OR BRW_ID_TYPE = '2' AND GRNT_MODE IN ( '1' , '4' ) ) THEN 1
                                                                                                                                                     ELSE 0
                                                                                                                                                   END) OVER ( PARTITION BY SAM_RSK_CTRL_ID , DATE_DT , SAME_LABLE2_FZLOANAMT_HYRLTAMT ) = 1                                             THEN '2.1：去重保证人-借贷取金额担保取责任金额-我行'
           -- 去重类型2.2他行：去重保证人-借贷取金额担保取金额 相关还款责任人类型2保证人 	   个人贷款、3保证或5组合(含保证)		企业贷款1保证4组合		 机构管理类型+开立日期+到期日期+业务类型+金额
           WHEN RECORD_TYPE = '或有负债' AND RELATED_REPAYMENT_TYPE = '2' AND SAME_LABLE2_FZLOANAMT_HYLOANAMT IS NOT NULL AND IS_SELF_ORG = '0' AND MAX(CASE
                                                                                                                                                      WHEN RECORD_TYPE = '负债' AND IS_SELF_ORG = '0' AND ( BRW_ID_TYPE = '1' AND GRNT_MODE IN ( '3' , '5' ) OR BRW_ID_TYPE = '2' AND GRNT_MODE IN ( '1' , '4' ) ) THEN 1
                                                                                                                                                      ELSE 0
                                                                                                                                                    END) OVER ( PARTITION BY SAM_RSK_CTRL_ID , DATE_DT , SAME_LABLE2_FZLOANAMT_HYLOANAMT ) = 1                                           THEN '2.2：去重保证人-借贷取金额担保取金额-他行'
           -- 去重类型2.2我行：去重保证人-借贷取金额担保取金额 相关还款责任人类型2保证人 	个人贷款、3保证或5组合(含保证)		企业贷款1保证4组合		 机构管理类型+开立日期+到期日期+业务类型+金额,我行
           WHEN RECORD_TYPE = '或有负债' AND RELATED_REPAYMENT_TYPE = '2' AND SAME_LABLE2_FZLOANAMT_HYLOANAMT IS NOT NULL AND IS_SELF_ORG = '1' AND MAX(CASE
                                                                                                                                                      WHEN RECORD_TYPE = '负债' AND IS_SELF_ORG = '1' AND ( BRW_ID_TYPE = '1' AND GRNT_MODE IN ( '3' , '5' ) OR BRW_ID_TYPE = '2' AND GRNT_MODE IN ( '1' , '4' ) ) THEN 1
                                                                                                                                                      ELSE 0
                                                                                                                                                    END) OVER ( PARTITION BY SAM_RSK_CTRL_ID , DATE_DT , SAME_LABLE2_FZLOANAMT_HYLOANAMT ) = 1                                           THEN '2.2：去重保证人-借贷取金额担保取金额-我行'
           -- 去重类型2.3他行：去重保证人-借贷取授信担保取授信 相关还款责任人类型2保证人 	个人贷款、3保证或5组合(含保证)		企业贷款1保证4组合		 机构管理类型+开立日期+到期日期+业务类型+金额
           WHEN RECORD_TYPE = '或有负债' AND RELATED_REPAYMENT_TYPE = '2' AND SAME_LABLE2_FZCRDAMT_HYCRDAMT IS NOT NULL AND IS_SELF_ORG = '0' AND MAX(CASE
                                                                                                                                                    WHEN RECORD_TYPE = '负债' AND IS_SELF_ORG = '0' AND ( BRW_ID_TYPE = '1' AND GRNT_MODE IN ( '3' , '5' ) OR BRW_ID_TYPE = '2' AND GRNT_MODE IN ( '1' , '4' ) ) THEN 1
                                                                                                                                                    ELSE 0
                                                                                                                                                  END) OVER ( PARTITION BY SAM_RSK_CTRL_ID , DATE_DT , SAME_LABLE2_FZCRDAMT_HYCRDAMT ) = 1                                               THEN '2.3：去重保证人-借贷取授信担保取授信-他行'
           -- 去重类型2.3我行：去重保证人-借贷取授信担保取授信 相关还款责任人类型2保证人 	个人贷款、3保证或5组合(含保证)		企业贷款1保证4组合		 机构管理类型+开立日期+到期日期+业务类型+金额
           WHEN RECORD_TYPE = '或有负债' AND RELATED_REPAYMENT_TYPE = '2' AND SAME_LABLE2_FZCRDAMT_HYCRDAMT IS NOT NULL AND IS_SELF_ORG = '1' AND MAX(CASE
                                                                                                                                                    WHEN RECORD_TYPE = '负债' AND IS_SELF_ORG = '1' AND ( BRW_ID_TYPE = '1' AND GRNT_MODE IN ( '3' , '5' ) OR BRW_ID_TYPE = '2' AND GRNT_MODE IN ( '1' , '4' ) ) THEN 1
                                                                                                                                                    ELSE 0
                                                                                                                                                  END) OVER ( PARTITION BY SAM_RSK_CTRL_ID , DATE_DT , SAME_LABLE2_FZCRDAMT_HYCRDAMT ) = 1                                               THEN '2.3：去重保证人-借贷取授信担保取授信-我行'
           -- 去重类型2.4他行：去重保证人-借贷取授信担保取责任金额 相关还款责任人类型2保证人 	个人贷款、3保证或5组合(含保证)		企业贷款1保证4组合		 机构管理类型+开立日期+到期日期+业务类型+金额
           WHEN RECORD_TYPE = '或有负债' AND RELATED_REPAYMENT_TYPE = '2' AND SAME_LABLE2_FZCRDAMT_HYRLTAMT IS NOT NULL AND IS_SELF_ORG = '0' AND MAX(CASE
                                                                                                                                                    WHEN RECORD_TYPE = '负债' AND IS_SELF_ORG = '0' AND ( BRW_ID_TYPE = '1' AND GRNT_MODE IN ( '3' , '5' ) OR BRW_ID_TYPE = '2' AND GRNT_MODE IN ( '1' , '4' ) ) THEN 1
                                                                                                                                                    ELSE 0
                                                                                                                                                  END) OVER ( PARTITION BY SAM_RSK_CTRL_ID , DATE_DT , SAME_LABLE2_FZCRDAMT_HYRLTAMT ) = 1                                               THEN '2.4：去重保证人-借贷取授信担保取责任金额-他行'
           -- 去重类型2.4我行：去重保证人-借贷取授信担保取责任金额 相关还款责任人类型2保证人 	个人贷款、3保证或5组合(含保证)		企业贷款1保证4组合		 机构管理类型+开立日期+到期日期+业务类型+金额
           WHEN RECORD_TYPE = '或有负债' AND RELATED_REPAYMENT_TYPE = '2' AND SAME_LABLE2_FZCRDAMT_HYRLTAMT IS NOT NULL AND IS_SELF_ORG = '1' AND MAX(CASE
                                                                                                                                                    WHEN RECORD_TYPE = '负债' AND IS_SELF_ORG = '1' AND ( BRW_ID_TYPE = '1' AND GRNT_MODE IN ( '3' , '5' ) OR BRW_ID_TYPE = '2' AND GRNT_MODE IN ( '1' , '4' ) ) THEN 1
                                                                                                                                                    ELSE 0               END) OVER ( PARTITION BY SAM_RSK_CTRL_ID , DATE_DT , SAME_LABLE2_FZCRDAMT_HYRLTAMT ) = 1                                               THEN '2.4：去重保证人-借贷取授信担保取责任金额-我行'
           -- 去重类型2.5他行：去重保证人-借贷取余额担保取余额 相关还款责任人类型2保证人 	个人贷款、3保证或5组合(含保证)		企业贷款1保证4组合		 机构管理类型+开立日期+到期日期+业务类型+金额
           WHEN RECORD_TYPE = '或有负债' AND RELATED_REPAYMENT_TYPE = '2' AND SAME_LABLE2_FZBAL_HYBAL IS NOT NULL AND IS_SELF_ORG = '0' AND MAX(CASE
                                                                                                                                              WHEN RECORD_TYPE = '负债' AND IS_SELF_ORG = '0' AND ( BRW_ID_TYPE = '1' AND GRNT_MODE IN ( '3' , '5' ) OR BRW_ID_TYPE = '2' AND GRNT_MODE IN ( '1' , '4' ) ) THEN 1
                                                                                                                                              ELSE 0
                                                                                                                                            END) OVER ( PARTITION BY SAM_RSK_CTRL_ID , DATE_DT , SAME_LABLE2_FZBAL_HYBAL ) = 1                                                           THEN '2.5：去重保证人-借贷取余额担保取余额-他行'
           -- 去重类型2.5我行：去重保证人-借贷取余额担保取余额 相关还款责任人类型2保证人 	个人贷款、3保证或5组合(含保证)		企业贷款1保证4组合		 机构管理类型+开立日期+到期日期+业务类型+金额
           WHEN RECORD_TYPE = '或有负债' AND RELATED_REPAYMENT_TYPE = '2' AND SAME_LABLE2_FZBAL_HYBAL IS NOT NULL AND IS_SELF_ORG = '1' AND MAX(CASE
                                                                                                                                              WHEN RECORD_TYPE = '负债' AND IS_SELF_ORG = '1' AND ( BRW_ID_TYPE = '1' AND GRNT_MODE IN ( '3' , '5' ) OR BRW_ID_TYPE = '2' AND GRNT_MODE IN ( '1' , '4' ) ) THEN 1
                                                                                                                                              ELSE 0
                                                                                                                                            END) OVER ( PARTITION BY SAM_RSK_CTRL_ID , DATE_DT , SAME_LABLE2_FZBAL_HYBAL ) = 1                                                           THEN '2.5：去重保证人-借贷取余额担保取余额-我行'
           -- 去重类型3.1：去重个人对外担保共同还款人-余额一致		个人征信、相关还款责任人类型1共同借款人	 	，在成员中找到 主借款人的贷款，		机构管理类型+开立日期+到期日期+业务类型+余额	--需和小苏确认，应该是金额	，余额不同时间点不一致
           WHEN RECORD_TYPE = '或有负债' AND RELATED_REPAYMENT_TYPE = '1' AND SAME_LABLE3_BAL IS NOT NULL AND SUBSTR(CST_ID, 1, 1) IN ( '1' , '7' ) AND IS_SELF_ORG = '0' AND MAX(CASE
                                                                                                                                                                                WHEN RECORD_TYPE = '负债' AND CB_MARK = '1' AND IS_SELF_ORG = '0' THEN 1
                                                                                                                                                                                ELSE 0
                                                                                                                                                                              END) OVER ( PARTITION BY SAM_RSK_CTRL_ID , DATE_DT , SAME_LABLE3_BAL ) = 1                                 THEN '3.1-去重个人对外担保共同还款人-余额一致-他行'
           --  去重类型3.2：去重企业对外担保共同还款人-金额一致 	企业征信、相关还款责任人类型1共同借款人	 	，在成员中找到 主借款人的贷款，		机构管理类型+开立日期+到期日期+业务类型+金额
           WHEN RECORD_TYPE = '或有负债' AND RELATED_REPAYMENT_TYPE = '1' AND SAME_LABLE2_FZLOANAMT_HYLOANAMT IS NOT NULL AND SUBSTR(CST_ID, 1, 1) IN ( '2' , '8' ) AND IS_SELF_ORG = '0' AND MAX(CASE
                                                                                                                                                                                                WHEN RECORD_TYPE = '负债' AND CB_MARK = '1' AND IS_SELF_ORG = '0' THEN 1
                                                                                                                                                                                                ELSE 0
                                                                                                                                                                                              END) OVER ( PARTITION BY SAM_RSK_CTRL_ID , DATE_DT , SAME_LABLE2_FZLOANAMT_HYLOANAMT ) = 1 THEN '3.2-去重企业对外担保共同还款人-金额一致-他行'
           -- 去重类型3.3：去重个人对外担保共同还款人-余额一致，未找到主借人，找到从借 	 个人征信、相关还款责任人类型1共同借款人	 	，在成员中找到 从借款人的贷款，		机构管理类型+开立日期+到期日期+业务类型+余额	--需和小苏确认，应该是金额	，余额不同时间点不一致
           WHEN RECORD_TYPE = '或有负债' AND RELATED_REPAYMENT_TYPE = '1' AND SAME_LABLE3_BAL IS NOT NULL AND SUBSTR(CST_ID, 1, 1) IN ( '1' , '7' ) AND IS_SELF_ORG = '0' AND MAX(CASE
                                                                                                                                                                                WHEN RECORD_TYPE = '负债' AND CB_MARK = '2' AND IS_SELF_ORG = '0' THEN 1
                                                                                                                                                                                ELSE 0
                                                                                                                                                                              END) OVER ( PARTITION BY SAM_RSK_CTRL_ID , DATE_DT , SAME_LABLE3_BAL ) = 1                                 THEN '3.3-去重个人对外担保共同还款人-余额一致，未找到主借人，找到从借-他行'
           -- 去重类型3.4：去重企业对外担保共同还款人-金额一致，未找到主借人，找到从借 		 企业征信、相关还款责任人类型1共同借款人	 	，在成员中找到 从借款人的贷款，		机构管理类型+开立日期+到期日期+业务类型+金额
           WHEN RECORD_TYPE = '或有负债' AND RELATED_REPAYMENT_TYPE = '1' AND SAME_LABLE2_FZLOANAMT_HYLOANAMT IS NOT NULL AND SUBSTR(CST_ID, 1, 1) IN ( '2' , '8' ) AND IS_SELF_ORG = '0' AND MAX(CASE
                                                                                                                                                                                                WHEN RECORD_TYPE = '负债' AND CB_MARK = '2' AND IS_SELF_ORG = '0' THEN 1
                                                                                                                                                                                                ELSE 0
                                                                                                                                                                                              END) OVER ( PARTITION BY SAM_RSK_CTRL_ID , DATE_DT , SAME_LABLE2_FZLOANAMT_HYLOANAMT ) = 1 THEN '3.4-去重企业对外担保共同还款人-金额一致，未找到主借人，找到从借-他行'
           -- 去重类型4.1：相关还款责任为保证人（码值2） ，在成员间找到 相关还款责任+相关还款责任类型+机构管理类型+开立日期+到期日期+业务类型+是否我行+相关还款责任金额
           WHEN SAME_LABLE4_IS_SELF_ORG_RLTAMT IS NOT NULL AND RANK() OVER ( PARTITION BY SAM_RSK_CTRL_ID , DATE_DT , IS_SELF_ORG , SAME_LABLE4_IS_SELF_ORG_RLTAMT ORDER BY CST_ID ASC ) >= 2                                                                                            THEN '4.1-去重疑似担保同一业务-我行他行'
           ELSE NULL
         END AS DD_TYPE --去重类型
FROM    (
            SELECT  A.SAM_RSK_CTRL_ID
                    ,A.CST_ID
                    ,'@@{yyyyMMdd}' AS DATE_DT --日期
                    ,A.REPORT_NO
                    ,B.ID
                    ,B.RECORD_TYPE_1
                    ,B.RECORD_TYPE
                    ,B.BRW_ID_TYPE
                    ,B.ORG_CODE
                    ,B.ORG_TYPE
                    ,B.OPEN_DATE
                    ,B.DUE_DATE
                    ,B.ACCOUNT_TYPE
                    ,B.PD_CD
                    ,B.LOAN_AMT
                    ,B.BAL
                    ,B.GRNT_MODE
                    ,B.CB_MARK
                    ,B.RELATED_REPAYMENT_TYPE
                    ,B.RELATED_REPAYMENT_AMT --相关还款责任金额
                    ,B.CCY
                    ,B.CREDIT_LMT --授信协议额度
                    ,B.CREDIT_NUM
                    ,B.O_CREDIT_AMT
                    ,B.AGM_LMT_PURPOSE
                    ,B.LOAN_ORGAGM_ATMSUM
                    ,B.CARD_ORGAGM_ATMSUM
                    ,B.CCARD_AMT
                    ,B.BALANCE_RMB
                    ,B.MAGIN_RATIO
                    ,B.RELATED_REPAYMENT_AMT_RMB --相关还款责任金额人民币
                    ,B.IS_SELF_ORG --是否我行
                    ,B.IS_REPEAT  --是否需要去重账户_1是0否
                    -- 用于 负债数据共同还款人去重, 拼接 机构类型+开立日期+到期日期+业务种类+担保方式+金额
                    ,CASE
                       WHEN B.RECORD_TYPE = '负债' AND B.ORG_TYPE IS NOT NULL AND B.ACCOUNT_TYPE IS NOT NULL AND B.CCY IS NOT NULL AND B.OPEN_DATE IS NOT NULL AND B.DUE_DATE IS NOT NULL AND B.PD_CD IS NOT NULL AND B.GRNT_MODE IS NOT NULL AND B.LOAN_AMT IS NOT NULL THEN CONCAT(B.ORG_TYPE, B.ACCOUNT_TYPE, B.CCY, B.OPEN_DATE, B.DUE_DATE, B.PD_CD, B.GRNT_MODE, B.LOAN_AMT)
                       ELSE NULL
                     END            AS SAME_LABLE1_LOANAMT
                    ,CASE
                       WHEN B.RECORD_TYPE = '负债' AND B.ORG_TYPE IS NOT NULL AND B.ACCOUNT_TYPE IS NOT NULL AND B.CCY IS NOT NULL AND B.OPEN_DATE IS NOT NULL AND B.DUE_DATE IS NOT NULL AND B.PD_CD IS NOT NULL AND B.GRNT_MODE IS NOT NULL AND ( B.BRW_ID_TYPE = '1' AND B.CREDIT_LMT IS NOT NULL OR B.BRW_ID_TYPE = '2' AND B.O_CREDIT_AMT IS NOT NULL ) THEN CONCAT(B.ORG_TYPE, B.ACCOUNT_TYPE, B.CCY, B.OPEN_DATE, B.DUE_DATE, B.PD_CD, B.GRNT_MODE, IF(B.BRW_ID_TYPE = '1', B.CREDIT_LMT, B.O_CREDIT_AMT)) ---授信金额，授信额度
                       ELSE NULL
                     END            AS SAME_LABLE1_CREDIT_AMT
                    -- 用于 相关还款责任类型为2-保证人 的去重情形, 拼接 机构管理类型+开立日期+到期日期+业务类型+金额
                    ,CASE
                       WHEN B.ORG_TYPE IS NOT NULL AND B.OPEN_DATE IS NOT NULL AND B.DUE_DATE IS NOT NULL AND B.PD_CD IS NOT NULL AND B.CCY IS NOT NULL AND B.BRW_ID_TYPE IS NOT NULL AND ( B.RECORD_TYPE = '负债' AND B.LOAN_AMT IS NOT NULL OR B.RECORD_TYPE = '或有负债' AND B.RELATED_REPAYMENT_AMT IS NOT NULL ) THEN CONCAT(B.ORG_TYPE, B.OPEN_DATE, B.DUE_DATE, B.PD_CD, B.CCY, B.BRW_ID_TYPE, IF(B.RECORD_TYPE = '负债', B.LOAN_AMT, B.RELATED_REPAYMENT_AMT))
                       ELSE NULL
                     END            AS SAME_LABLE2_FZLOANAMT_HYRLTAMT
                    ,CASE
                       WHEN B.ORG_TYPE IS NOT NULL AND B.OPEN_DATE IS NOT NULL AND B.DUE_DATE IS NOT NULL AND B.PD_CD IS NOT NULL AND B.CCY IS NOT NULL AND B.BRW_ID_TYPE IS NOT NULL AND ( B.RECORD_TYPE = '负债' AND B.LOAN_AMT IS NOT NULL OR B.RECORD_TYPE = '或有负债' AND B.LOAN_AMT IS NOT NULL ) THEN CONCAT(B.ORG_TYPE, B.OPEN_DATE, B.DUE_DATE, B.PD_CD, B.CCY, B.BRW_ID_TYPE, IF(B.RECORD_TYPE = '负债', B.LOAN_AMT, B.LOAN_AMT))
                       ELSE NULL
                     END            AS SAME_LABLE2_FZLOANAMT_HYLOANAMT
                    ,CASE
                       WHEN B.ORG_TYPE IS NOT NULL AND B.OPEN_DATE IS NOT NULL AND B.DUE_DATE IS NOT NULL AND B.PD_CD IS NOT NULL AND B.CCY IS NOT NULL AND B.BRW_ID_TYPE IS NOT NULL AND ( B.RECORD_TYPE = '负债' AND ( B.BRW_ID_TYPE = '1' AND B.CREDIT_LMT IS NOT NULL OR B.BRW_ID_TYPE = '2' AND B.O_CREDIT_AMT IS NOT NULL ) OR B.RECORD_TYPE = '或有负债' AND B.CREDIT_LMT IS NOT NULL ) THEN CONCAT(B.ORG_TYPE, B.OPEN_DATE, B.DUE_DATE, B.PD_CD, B.CCY, B.BRW_ID_TYPE, IF(B.RECORD_TYPE = '负债', IF(B.BRW_ID_TYPE = '1', B.CREDIT_LMT, B.O_CREDIT_AMT), B.CREDIT_LMT))
                       ELSE NULL
                     END            AS SAME_LABLE2_FZCRDAMT_HYCRDAMT
                    ,CASE
                       WHEN B.ORG_TYPE IS NOT NULL AND B.OPEN_DATE IS NOT NULL AND B.DUE_DATE IS NOT NULL AND B.PD_CD IS NOT NULL AND B.CCY IS NOT NULL AND B.BRW_ID_TYPE IS NOT NULL AND ( B.RECORD_TYPE = '负债' AND ( B.BRW_ID_TYPE = '1' AND B.CREDIT_LMT IS NOT NULL OR B.BRW_ID_TYPE = '2' AND B.O_CREDIT_AMT IS NOT NULL ) OR B.RECORD_TYPE = '或有负债' AND B.RELATED_REPAYMENT_AMT IS NOT NULL ) THEN CONCAT(B.ORG_TYPE, B.OPEN_DATE, B.DUE_DATE, B.PD_CD, B.CCY, B.BRW_ID_TYPE, IF(B.RECORD_TYPE = '负债', IF(B.BRW_ID_TYPE = '1', B.CREDIT_LMT, B.O_CREDIT_AMT), B.RELATED_REPAYMENT_AMT))
                       ELSE NULL
                     END            AS SAME_LABLE2_FZCRDAMT_HYRLTAMT
                    ,CASE
                       WHEN B.ORG_TYPE IS NOT NULL AND B.OPEN_DATE IS NOT NULL AND B.DUE_DATE IS NOT NULL AND B.PD_CD IS NOT NULL AND B.CCY IS NOT NULL AND B.BRW_ID_TYPE IS NOT NULL AND B.BAL IS NOT NULL AND B.BAL > 0 THEN CONCAT(B.ORG_TYPE, B.OPEN_DATE, B.DUE_DATE, B.PD_CD, B.CCY, B.BRW_ID_TYPE, B.BAL)
                       ELSE NULL
                     END            AS SAME_LABLE2_FZBAL_HYBAL
                    -- 用于 相关还款责任类型为共同借款人 的去重情形, 拼接 机构管理类型+开立日期+到期日期+业务类型+授信、金额
                    ,CASE
                       WHEN B.ORG_TYPE IS NOT NULL AND B.OPEN_DATE IS NOT NULL AND B.DUE_DATE IS NOT NULL AND B.PD_CD IS NOT NULL AND B.BRW_ID_TYPE IS NOT NULL AND B.CCY IS NOT NULL AND B.BAL IS NOT NULL THEN CONCAT(B.ORG_TYPE, B.OPEN_DATE, B.DUE_DATE, B.PD_CD, B.BRW_ID_TYPE, B.CCY, B.BAL)
                       ELSE NULL
                     END            AS SAME_LABLE3_BAL
                    -- 用于 相关还款责任相同记录保证人 相关还款责任为保证人， 相关还款责任+相关还款责任类型+机构管理类型+开立日期+到期日期+业务类型+相关还款责任金额
                    ,CASE
                       WHEN B.ORG_TYPE IS NOT NULL AND B.OPEN_DATE IS NOT NULL AND B.DUE_DATE IS NOT NULL AND B.PD_CD IS NOT NULL AND B.BRW_ID_TYPE IS NOT NULL AND B.RELATED_REPAYMENT_AMT IS NOT NULL AND B.CCY IS NOT NULL AND B.RECORD_TYPE = '或有负债' AND B.RELATED_REPAYMENT_TYPE = '2' THEN CONCAT(B.RECORD_TYPE, B.RELATED_REPAYMENT_TYPE, B.ORG_TYPE, B.OPEN_DATE, B.DUE_DATE, B.PD_CD, B.BRW_ID_TYPE, B.CCY, B.RELATED_REPAYMENT_AMT)
                       ELSE NULL
                     END            AS SAME_LABLE4_RLTAMT
                    -- 用于 相关还款责任相同记录保证人 相关还款责任为保证人， 相关还款责任+相关还款责任类型+机构管理类型+开立日期+到期日期+业务类型+相关还款责任金额 + 是否我行
                    ,CASE
                       WHEN B.ORG_TYPE IS NOT NULL AND B.OPEN_DATE IS NOT NULL AND B.DUE_DATE IS NOT NULL AND B.PD_CD IS NOT NULL AND B.BRW_ID_TYPE IS NOT NULL AND B.RELATED_REPAYMENT_AMT IS NOT NULL AND B.CCY IS NOT NULL AND B.RECORD_TYPE = '或有负债' AND B.RELATED_REPAYMENT_TYPE = '2' AND B.IS_SELF_ORG IS NOT NULL THEN CONCAT(B.RECORD_TYPE, B.RELATED_REPAYMENT_TYPE, B.ORG_TYPE, B.OPEN_DATE, B.DUE_DATE, B.PD_CD, B.BRW_ID_TYPE, B.CCY, B.IS_SELF_ORG, B.RELATED_REPAYMENT_AMT)
                       ELSE NULL
                     END            AS SAME_LABLE4_IS_SELF_ORG_RLTAMT
            FROM    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_01 A --客户最新征信报告
            INNER JOIN    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_02_1 B --去重账户汇总
            ON      A.REPORT_NO = B.REPORT_ID
            --需要去重账户
            AND     B.IS_REPEAT = '1'
            AND     B.DT = '@@{yyyyMMdd}'
        ) T;

--统计计算
DROP TABLE IF EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_02 PURGE;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_02
(
    SAM_RSK_CTRL_ID STRING COMMENT '同一风险控制号'
    ,CST_ID         STRING COMMENT '客户号'
    ,DATE_DT        STRING COMMENT '日期'
    ,ID             STRING COMMENT '编号'
    ,REPORT_NO      STRING COMMENT '征信报告编号'
    ,RECORD_TYPE_1  STRING COMMENT '记录类型'
    ,DD_TYPE        STRING COMMENT '去重类型'
)
COMMENT
'征信负债去重类型结果汇总表'
PARTITIONED BY
(
    DT STRING COMMENT '日期分区'
)
LIFECYCLE 3600;

ALTER TABLE lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_02 DROP IF EXISTS PARTITION ( DT = '@@{yyyyMMdd}' ) PURGE;

INSERT OVERWRITE TABLE lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_02 PARTITION (DT = '@@{yyyyMMdd}')
--需要去重的账户
SELECT  SAM_RSK_CTRL_ID
        ,CST_ID
        ,'@@{yyyyMMdd}'
        ,ID
        ,REPORT_NO
        ,RECORD_TYPE_1
        ,DD_TYPE
FROM    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_02_2
UNION
--不需要去重的账户
SELECT  A.SAM_RSK_CTRL_ID
        ,A.CST_ID
        ,'@@{yyyyMMdd}'
        ,B.ID
        ,A.REPORT_NO
        ,B.RECORD_TYPE_1
        ,''
FROM    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_01 A --客户最新征信报告
INNER JOIN    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_02_1 B --去重账户汇总
ON      A.REPORT_NO = B.REPORT_ID
AND     B.IS_REPEAT = '0'
AND     B.DT = '@@{yyyyMMdd}';


--借贷账户信息表临时表
DROP TABLE IF EXISTS lab_bigdata_dev.NCIP_CP_M_ACCOUNT_INFO_copy;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.NCIP_CP_M_ACCOUNT_INFO_copy AS
SELECT  A.DT
        ,A.ID
        ,A.REPORT_ID
        ,A.ORG_CODE
        ,A.GRNT_MTH_TYPE
        ,A.ACT_PD_CD
        ,A.AGM_LMT_PURPOSE
        ,A.ACT_TYP_CD
        ,A.PD_CD_TYPE2
        ,A.ORG_TYPE_BANK_FG
        ,A.PD_CD_TYPE1
        ,A.IS_SELF_ORG
        ,A.ACC_STATUS_TYPE
        ,A.DTRB_ORG_TYP_CD
        ,A.OVD_MONTH
        ,A.last_acc_status
        ,A.grnt_mth_cd
        ,A.ORG_TYPE
        ,A.ACT_ID
        ,A.AGM_NO
        ,A.AGREEMENT_STATS
        ,A.ID_60M_SUB
        ,CASE
           WHEN COALESCE(BAL, '') = ''                                    THEN 0
           WHEN LENGTH(REGEXP_REPLACE(BAL, '[^0-9.]', '')) <> LENGTH(BAL) THEN 0
           ELSE BAL
         END AS BAL -- --最新账户余额
        ,CASE
           WHEN COALESCE(R2_NON_DLV_LRG_AMT_INSTL_BAL, '') = ''                                                             THEN 0
           WHEN LENGTH(REGEXP_REPLACE(R2_NON_DLV_LRG_AMT_INSTL_BAL, '[^0-9.]', '')) <> LENGTH(R2_NON_DLV_LRG_AMT_INSTL_BAL) THEN 0
           ELSE R2_NON_DLV_LRG_AMT_INSTL_BAL
         END AS R2_NON_DLV_LRG_AMT_INSTL_BAL --大额专项分期额度
        ,CASE
           WHEN COALESCE(LOAN_AMT, '') = ''                                         THEN 0
           WHEN LENGTH(REGEXP_REPLACE(LOAN_AMT, '[^0-9.]', '')) <> LENGTH(LOAN_AMT) THEN 0
           ELSE LOAN_AMT
         END AS LOAN_AMT --贷款发放金额
        ,CASE
           WHEN COALESCE(AGM_LMT, '') = ''                                        THEN 0
           WHEN LENGTH(REGEXP_REPLACE(AGM_LMT, '[^0-9.]', '')) <> LENGTH(AGM_LMT) THEN 0
           ELSE AGM_LMT
         END AS AGM_LMT --授信协议额度
        ,CASE
           WHEN COALESCE(LOAN_ORGAGM_ATMSUM, '') = ''                                                   THEN 0
           WHEN LENGTH(REGEXP_REPLACE(LOAN_ORGAGM_ATMSUM, '[^0-9.]', '')) <> LENGTH(LOAN_ORGAGM_ATMSUM) THEN 0
           ELSE LOAN_ORGAGM_ATMSUM
         END AS LOAN_ORGAGM_ATMSUM --对应该机构贷款授信协议总金额
        ,CASE
           WHEN COALESCE(OVD_AMT, '') = ''                                        THEN 0
           WHEN LENGTH(REGEXP_REPLACE(OVD_AMT, '[^0-9.]', '')) <> LENGTH(OVD_AMT) THEN 0
           ELSE OVD_AMT
         END AS OVD_AMT --当前逾期金额
        ,CASE
           WHEN COALESCE(AGM_CREDIT_QUOTA, '') = ''                                                 THEN 0
           WHEN LENGTH(REGEXP_REPLACE(AGM_CREDIT_QUOTA, '[^0-9.]', '')) <> LENGTH(AGM_CREDIT_QUOTA) THEN 0
           ELSE AGM_CREDIT_QUOTA
         END AS AGM_CREDIT_QUOTA --授信协议额度
FROM    edw.NCIP_CP_M_ACCOUNT_INFO A --借贷信息表
WHERE   A.DT <= '@@{yyyyMMdd}';

--中间表-60月明细
DROP TABLE IF EXISTS lab_bigdata_dev.NCIP_CP_M_REPAYSTAT60_copy;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.NCIP_CP_M_REPAYSTAT60_copy AS
SELECT  REPORT_ID AS REPORT_ID --报告编号
        ,UNION_ID
        ,MONTH_ID AS MONTH_ID --月份数
        ,CASE
           WHEN COALESCE(OVRD_MONTH, '') = ''                                           THEN 0
           WHEN LENGTH(REGEXP_REPLACE(OVRD_MONTH, '[^0-9.]', '')) <> LENGTH(OVRD_MONTH) THEN 0
           ELSE OVRD_MONTH
         END      AS OVRD_MONTH --逾期月数
        ,ACT_ID   AS ACT_ID --编号
        ,CASE
           WHEN COALESCE(OVRD_AMT, '') = ''                                         THEN 0
           WHEN LENGTH(REGEXP_REPLACE(OVRD_AMT, '[^0-9.]', '')) <> LENGTH(OVRD_AMT) THEN 0
           ELSE OVRD_AMT
         END      AS OVRD_AMT --逾期金额
        ,OVD_MONTH -- 当前逾期月数
        ,DT
FROM    edw.NCIP_CP_M_REPAYSTAT60 T1 --中间表-60月明细
WHERE   T1.DT <= '@@{yyyyMMdd}';

-- 借贷账户还款表现明细
DROP TABLE IF EXISTS lab_bigdata_dev.NCIP_ED01B_AC_PAY_INF_SUB_copy;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.NCIP_ED01B_AC_PAY_INF_SUB_copy AS
SELECT  REPORT_ID
        ,UNION_ID
        ,CASE
           WHEN COALESCE(TRIM(LAST_ACT_REPAY_DATE), '') = '' THEN '18991231'
           ELSE SUBSTR(REPLACE(REPLACE(COALESCE(TRIM(LAST_ACT_REPAY_DATE), ''), '-', ''), '/', ''), 1, 8)
         END AS LAST_ACT_REPAY_DATE
        ,BALANCE
        ,over_total
        ,over_month_num
        ,CASE
           WHEN COALESCE(TRIM(REPORT_INFORM_DATE), '') = '' THEN '18991231'
           ELSE SUBSTR(REPLACE(REPLACE(COALESCE(TRIM(REPORT_INFORM_DATE), ''), '-', ''), '/', ''), 1, 8)
         END AS INF_RPT_DT --信息报告日期|C8
        ,dt
FROM    edw.NCIP_ED01B_AC_PAY_INF_SUB -- 借贷账户还款表现明细
WHERE   DT <= '@@{yyyyMMdd}';

-- ================================同一风险控制号贷款授信总额==============================================
--对私 授信协议金额
DROP TABLE IF EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_2;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_2
(
    REPORT_ID STRING  COMMENT '征信报告号'
    ,CTR_AMT  DECIMAL COMMENT '授信金额'
);

INSERT INTO lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_2
SELECT  T.REPORT_ID     AS REPORT_ID
        ,SUM(T.CTR_AMT) AS CTR_AMT
FROM    (
            SELECT  DISTINCT T2.REPORT_ID --注意：必须有DISTINCT ，循环类支用要去重（授信协议编号不为空）
                             ,T2.ACT_PD_CD                                       AS PD_CD
                             ,T2.GRNT_MTH_CD
                             ,T2.AGM_NO                                          AS AGREEMENT_NO --授信协议编号
                             ,CAST(COALESCE(T2.AGM_LMT, T2.LOAN_AMT) AS DECIMAL) AS CTR_AMT ----贷款金额优先授信协议额度其次贷款发放金额
                             ,T2.ORG_TYPE                                        AS DTRB_ORG_TYP_CD ----机构类型优先贷款发放其次授信协议
                             ,T2.ORG_CODE --机构代码优先贷款发放其次授信协议
                             ,T2.AGM_LMT_PURPOSE --授信协议用途
            FROM    lab_bigdata_dev.NCIP_CP_M_ACCOUNT_INFO_COPY T2
            INNER JOIN    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_02 A
            ON      T2.REPORT_ID = A.REPORT_NO
            AND     T2.ID = A.ID
            AND     A.DT = '@@{yyyyMMdd}'
            AND     ( A.DD_TYPE IS NULL
                OR A.DD_TYPE = '' )
            WHERE   ( T2.ACC_STATUS_TYPE IN ( '1' , '2' , '4' )
                OR ( T2.AGREEMENT_STATS = '1'
            AND     T2.ACT_TYP_CD IS NULL ) ) ----账户状态类型 0-未激活 1-正常存续 2-非正常存续 3-关闭 4-呆账,  情况二：AGREEMENT_STATS--授信协议状态1-有效 2-到期，账户为空指未用信
            AND     ( T2.ACT_TYP_CD IN ( 'R1' , 'R4' , 'D1' )
                OR T2.ACT_PD_CD IN ( '82' )
                OR ( T2.AGM_LMT_PURPOSE IN ( '10' , '20' )
            AND     T2.ACT_TYP_CD IS NULL ) )
            AND     T2.AGM_NO IS NOT NULL
            UNION ALL --注意：必须无DISTINCT（授信协议编号为空）
            SELECT  T2.REPORT_ID
                    ,T2.ACT_PD_CD                                       AS PD_CD
                    ,T2.GRNT_MTH_CD
                    ,T2.AGM_NO                                          AS AGREEMENT_NO --授信协议编号
                    ,CAST(COALESCE(T2.AGM_LMT, T2.LOAN_AMT) AS DECIMAL) AS CTR_AMT ----贷款金额优先授信协议额度其次贷款发放金额
                    ,T2.ORG_TYPE                                        AS DTRB_ORG_TYP_CD ----机构类型优先贷款发放其次授信协议
                    ,T2.ORG_CODE --机构代码优先贷款发放其次授信协议
                    ,T2.AGM_LMT_PURPOSE --授信协议用途
            FROM    lab_bigdata_dev.NCIP_CP_M_ACCOUNT_INFO_COPY T2
            INNER JOIN    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_02 A
            ON      T2.REPORT_ID = A.REPORT_NO
            AND     T2.ID = A.ID
            AND     A.DT = '@@{yyyyMMdd}'
            AND     ( A.DD_TYPE IS NULL
                OR A.DD_TYPE = '' )
            WHERE   ( T2.ACC_STATUS_TYPE IN ( '1' , '2' , '4' )
                OR ( T2.AGREEMENT_STATS = '1'
            AND     T2.ACT_TYP_CD IS NULL ) ) ----账户状态类型 0-未激活 1-正常存续 2-非正常存续 3-关闭 4-呆账,  情况二：AGREEMENT_STATS--授信协议状态1-有效 2-到期，账户为空指未用信
            AND     ( T2.ACT_TYP_CD IN ( 'R1' , 'R4' , 'D1' )
                OR T2.ACT_PD_CD IN ( '82' )
                OR ( T2.AGM_LMT_PURPOSE IN ( '10' , '20' )
            AND     T2.ACT_TYP_CD IS NULL ) )
            AND     T2.AGM_NO IS NULL
        ) T
GROUP BY T.REPORT_ID;

-- 对公 授信协议金额
DROP TABLE IF EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_3;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_3
(
    REPORT_ID STRING  COMMENT '征信报告号'
    ,CTR_AMT  DECIMAL COMMENT '授信金额'
);

INSERT INTO lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_3
SELECT  T.REPORT_ID     AS REPORT_ID
        ,SUM(T.CTR_AMT) AS CTR_AMT
FROM    (
            SELECT  DISTINCT A1.REPORT_ID --报告编号
                             ,A1.CREDIT_NUMBER --授信协议编号
                             ,COALESCE(A1.CREDIT_LINE_RMB, A1.LOAN_AMOUNT_RMB) AS CTR_AMT --授信额度_折人民币|借款金额_折人民币
            FROM    edw.NCIP_CE_M_ACCOUNT_INFO A1
            INNER JOIN    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_02 A
            ON      A1.REPORT_ID = A.REPORT_NO
            AND     A1.ID = A.ID
            AND     A.DT = '@@{yyyyMMdd}'
            AND     ( A.DD_TYPE IS NULL
                OR A.DD_TYPE = '' )
            WHERE   A1.DT <= '@@{yyyyMMdd}'
            AND     A1.ACCOUNT_STATE_MODIFY = '1'
            AND     A1.ACCOUNT_TYPE_MODIFY NOT IN ( 'G1' , 'G2' , 'G3' , 'D2' ) --剔除贴现和担保
            AND     A1.CREDIT_NUMBER IS NOT NULL
            UNION ALL
            SELECT  A1.REPORT_ID --报告编号
                    ,CREDIT_NUMBER --授信协议编号
                    ,COALESCE(CREDIT_LINE_RMB, LOAN_AMOUNT_RMB) AS CTR_AMT --授信额度_折人民币|借款金额_折人民币
            FROM    edw.NCIP_CE_M_ACCOUNT_INFO AS A1
            INNER JOIN    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_02 AS A
            ON      A1.REPORT_ID = A.REPORT_NO
            AND     A1.ID = A.ID
            AND     A.DT = '@@{yyyyMMdd}'
            AND     ( A.DD_TYPE IS NULL
                OR A.DD_TYPE = '' )
            WHERE   A1.DT <= '@@{yyyyMMdd}'
            AND     A1.ACCOUNT_STATE_MODIFY = '1'
            AND     A1.ACCOUNT_TYPE_MODIFY NOT IN ( 'G1' , 'G2' , 'G3' , 'D2' ) --剔除贴现和担保
            AND     A1.CREDIT_NUMBER IS NULL
        ) T
GROUP BY T.REPORT_ID;

--====================================对私征信部分=======================================
---- 对私负债临时表1
DROP TABLE IF EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_4;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_4
(
    ID                                             STRING COMMENT '编号'
    ,REPORT_ID                                     STRING COMMENT '征信报告号'
    ,OVD_MONTH                                     STRING COMMENT '征信报告编号'
    ,OVD_AMT                                       STRING COMMENT '当前逾期月数'
    ,BE_RCVRY_ACT_NUM                              STRING COMMENT '当前逾期金额'
    ,BE_RCVRY_ACT_BAL                              STRING COMMENT '被追偿账户数'
    ,BAD_DBT_ACT_NUM                               STRING COMMENT '被追偿账户余额'
    ,BAD_BAL                                       STRING COMMENT '呆账余额'
    ,AST_DPSL_BSN_BAL                              STRING COMMENT '资产处置业务余额'
    ,ADV_CSH_BSN_BAL                               STRING COMMENT '垫款业务余额'
    ,CUR_DAY_LOAN_CLSS_BAL                         STRING COMMENT '当日贷款类余额(指标Z060401_0002)'
    ,CUR_DAY_CR_CRD_CLSS_BAL                       STRING COMMENT '当日信用卡类余额(指标Z060401_0003)'
    ,MORT_PLDG_LOAN_BAL                            STRING COMMENT '抵质押贷款余额'
    ,GRNTE_LOAN_BAL                                STRING COMMENT '保证贷款余额'
    ,PRTFL_BAL                                     STRING COMMENT '保证贷款余额'
    ,CR_BAL                                        STRING COMMENT '信用余额'
    -- ,OTH_BAL                                       STRING COMMENT '其他余额'
    ,CUR_DAY_LOAN_NOT_CLS_SML_AMT_LOAN_CSM_FIN_BAL STRING COMMENT '当日贷款未关闭小贷消金余额(指标Z060401_0007)'
    ,CUR_DAY_NON_HS_LOAN_GT_ZR_ORG_NUM             STRING COMMENT '当日非房贷款大于0机构数(指标Z060401_0101)'
);

INSERT INTO lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_4
SELECT  ID
        ,REPORT_ID AS REPORT_ID --征信报告编号
        ,OVD_MONTH AS OVD_MONTH --当前逾期月数
        ,OVD_AMT   AS OVD_AMT --当前逾期金额
        ,CASE
           WHEN ACT_PD_CD IN ( 'A1' , 'B1' ) THEN 1
           ELSE 0
         END       AS BE_RCVRY_ACT_NUM -- 被追偿账户数
        ,CASE
           WHEN ACT_PD_CD IN ( 'A1' , 'B1' ) THEN BAL
           ELSE 0
         END       AS BE_RCVRY_ACT_BAL -- 被追偿账户余额
        ,CASE
           WHEN ACC_STATUS_TYPE = '4' THEN 1
           ELSE 0
         END       AS BAD_DBT_ACT_NUM --呆账账户数
        ,CASE
           WHEN ACC_STATUS_TYPE = '4' THEN BAL
           ELSE 0
         END       AS BAD_BAL --呆账余额
        ,CASE
           WHEN ACT_PD_CD = 'A1' THEN BAL
           ELSE 0
         END       AS AST_DPSL_BSN_BAL -- 资产处置业务余额
        ,CASE
           WHEN ACT_PD_CD = 'B1' THEN BAL
           ELSE 0
         END       AS ADV_CSH_BSN_BAL -- 垫款业务余额
        ,CASE
           WHEN PD_CD_TYPE1 = '1' THEN BAL
           ELSE 0
         END       AS CUR_DAY_LOAN_CLSS_BAL --当日贷款类余额(指标Z060401_0002)
        ,CASE
           WHEN PD_CD_TYPE1 = '2' THEN BAL
           ELSE 0
         END       AS CUR_DAY_CR_CRD_CLSS_BAL --  当日信用卡类余额(指标Z060401_0003)
        ,CASE
           WHEN PD_CD_TYPE1 = '1' AND GRNT_MTH_CD IN ( '1' , '2' ) THEN BAL
           ELSE 0
         END       AS MORT_PLDG_LOAN_BAL --抵质押贷款余额
        ,CASE
           WHEN PD_CD_TYPE1 = '1' AND GRNT_MTH_CD IN ( '3' , '7' ) THEN BAL
           ELSE 0
         END       AS GRNTE_LOAN_BAL --保证贷款余额
        ,CASE
           WHEN PD_CD_TYPE1 = '1' AND GRNT_MTH_CD IN ( '5' , '6' ) THEN BAL
           ELSE 0
         END       AS PRTFL_BAL --组合余额
        ,CASE
           WHEN PD_CD_TYPE1 = '1' AND GRNT_MTH_CD IN ( '4' ) THEN BAL
           ELSE 0
         END       AS CR_BAL  --信用余额
        -- ,CASE
        --    WHEN PD_CD_TYPE1 = '1' AND COALESCE(GRNT_MTH_CD, '') IN ( '9' , '' ) THEN BAL
        --    ELSE 0
        --  END       AS OTH_BAL --其他余额
        ,CASE
           WHEN DTRB_ORG_TYP_CD IN ( '51' , '24' ) AND ACC_STATUS_TYPE <> 3 AND ACT_TYP_CD IN ( 'D1' , 'R4' , 'R1' ) THEN BAL
           ELSE 0
         END       AS CUR_DAY_LOAN_NOT_CLS_SML_AMT_LOAN_CSM_FIN_BAL --当日贷款未关闭小贷消金余额(指标Z060401_0007)
        ,CASE
           WHEN PD_CD_TYPE2 <> '01' AND PD_CD_TYPE1 = '1' AND BAL > 0 THEN ORG_CODE
         END       AS CUR_DAY_NON_HS_LOAN_GT_ZR_ORG_NUM --当日非房贷款大于0机构数(指标Z060401_0101)
FROM    lab_bigdata_dev.NCIP_CP_M_ACCOUNT_INFO_copy;

---- 对私负债临时表2  （逾期）
DROP TABLE IF EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_5;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_5
(
    ID                                      STRING  COMMENT '编号'
    ,REPORT_ID                              STRING  COMMENT '报告号'
    ,L60M_OVD_EXCD_ONE_MON_ACT_NUM          BIGINT  COMMENT '近60个月逾期超一个月账户数'
    ,L60M_OVD_EXCD_ONE_MON_SNGL_MON_MAX_AMT DECIMAL COMMENT '近60个月逾期超一个月单月最大金额'
    ,L60M_OVD_EXCD_ONE_MON_PERD_NUM_MAX_VAL DECIMAL COMMENT '近60个月逾期超一个月期数最大值'
);

INSERT INTO lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_5
SELECT  T2.ID
        ,T2.REPORT_ID
        ,COUNT(DISTINCT CASE
                          WHEN MONTHS_BETWEEN(TO_DATE(SUBSTR(T1.REPORT_ID, 1, 6), 'yyyyMM'), TO_DATE(REPLACE(T1.MONTH_ID, '-', ''), 'yyyyMM')) <= 60 AND T1.OVRD_MONTH >= 1 THEN T1.ACT_ID
                          ELSE NULL
                        END) AS L60M_OVD_EXCD_ONE_MON_ACT_NUM --近60个月逾期超一个月账户数(指标Z040101_0004)
        ,MAX(CASE
               WHEN MONTHS_BETWEEN(TO_DATE(SUBSTR(T1.REPORT_ID, 1, 6), 'yyyyMM'), TO_DATE(REPLACE(T1.MONTH_ID, '-', ''), 'yyyyMM')) <= 60 AND T1.OVRD_MONTH >= 1 THEN T4.OVRD_AMT_SUM
             END)            AS L60M_OVD_EXCD_ONE_MON_SNGL_MON_MAX_AMT -- 近60个月逾期超一个月单月最大金额(指标Z040101_0005)
        ,MAX(CASE
               WHEN MONTHS_BETWEEN(TO_DATE(SUBSTR(T1.REPORT_ID, 1, 6), 'yyyyMM'), TO_DATE(REPLACE(T1.MONTH_ID, '-', ''), 'yyyyMM')) <= 60 AND T1.OVRD_MONTH >= 1 THEN T1.OVRD_MONTH
             END)            AS L60M_OVD_EXCD_ONE_MON_PERD_NUM_MAX_VAL -- 近60个月逾期超一个月期数最大值(指标Z040101_0006)
FROM    lab_bigdata_dev.NCIP_CP_M_REPAYSTAT60_copy T1
LEFT JOIN    lab_bigdata_dev.NCIP_CP_M_ACCOUNT_INFO_copy T2
ON      T2.REPORT_ID = T1.REPORT_ID
AND     T2.ID_60M_SUB = T1.UNION_ID
LEFT JOIN    (
                 SELECT  REPORT_ID      AS REPORT_ID_1 --报告编号
                         ,MONTH_ID      AS MONTH_ID_1 --月份数
                         ,SUM(OVRD_AMT) AS OVRD_AMT_SUM --逾期金额
                 FROM    lab_bigdata_dev.NCIP_CP_M_REPAYSTAT60_copy T1 --中间表-60月明细
                 WHERE   MONTHS_BETWEEN(TO_DATE(SUBSTR(REPORT_ID, 1, 6), 'yyyyMM'), TO_DATE(REPLACE(MONTH_ID, '-', ''), 'yyyyMM')) <= 60
                 AND     OVRD_MONTH >= 1
                 GROUP BY REPORT_ID , MONTH_ID
             ) T4 --针对单月金额进行汇总
ON      T1.REPORT_ID = T4.REPORT_ID_1
AND     T1.MONTH_ID = T4.MONTH_ID_1
GROUP BY T2.ID , T2.REPORT_ID;

--对私或有负债
DROP TABLE IF EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_6;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_6
(
    REPORT_ID                           STRING COMMENT '征信报告号'
    ,ID                                 STRING COMMENT '编号'
    ,CUR_DAY_REL_RPAY_LVL5_NON_NORM_BAL STRING COMMENT '当日相关还款五级非正常余额(指标Z040101_0002)'
    ,CUR_DAY_REL_RPAY_BAL               STRING COMMENT '当日相关还款余额(指标Z060401_0005)'
);

INSERT INTO lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_6
SELECT  A.REPORT_ID
        ,A.ID
        ,CASE

		   WHEN A.FIVE_ASSORT_TYPE not in ('1','9','') AND A.MAINBOR_IDENTYPE = '2'                         THEN IF(COALESCE(A.MONEY, '') = '' OR LENGTH(REGEXP_REPLACE(MONEY, '[^0-9.]', '')) <> LENGTH(MONEY), '0', MONEY) * COALESCE(B.CNY_EXR, 1)  --立英20250416
           WHEN A.FIVE_ASSORT_TYPE not in ('1','9','') AND COALESCE(A.MAINBOR_IDENTYPE, '') IN ( '' , '1' ) THEN IF(COALESCE(A.MONEY, '') = '' OR LENGTH(REGEXP_REPLACE(MONEY, '[^0-9.]', '')) <> LENGTH(MONEY), '0', MONEY)    --立英20250416
           --WHEN A.FIVE_ASSORT_TYPE <> '1' AND A.MAINBOR_IDENTYPE = '2'                         THEN IF(COALESCE(A.MONEY, '') = '' OR LENGTH(REGEXP_REPLACE(MONEY, '[^0-9.]', '')) <> LENGTH(MONEY), '0', MONEY) * COALESCE(B.CNY_EXR, 1)
           --WHEN A.FIVE_ASSORT_TYPE <> '1' AND COALESCE(A.MAINBOR_IDENTYPE, '') IN ( '' , '1' ) THEN IF(COALESCE(A.MONEY, '') = '' OR LENGTH(REGEXP_REPLACE(MONEY, '[^0-9.]', '')) <> LENGTH(MONEY), '0', MONEY)
           ELSE 0
         END AS CUR_DAY_REL_RPAY_LVL5_NON_NORM_BAL --当日相关还款五级非正常余额(指标Z040101_0002)
        ,CASE
           WHEN COALESCE(A.MONEY, '') = ''                                        THEN 0
           WHEN LENGTH(REGEXP_REPLACE(A.MONEY, '[^0-9.]', '')) <> LENGTH(A.MONEY) THEN 0
           --主借款人身份类别MAINBOR_IDENTYPE：1自然人 2组织机构
           WHEN A.MAINBOR_IDENTYPE = '2'                                          THEN A.MONEY * COALESCE(B.CNY_EXR, 1)
           WHEN COALESCE(A.MAINBOR_IDENTYPE, '') IN ( '' , '1' )                  THEN A.MONEY --还款责任总余额
         END AS CUR_DAY_REL_RPAY_BAL --当日相关还款余额(指标Z060401_0005)
FROM    edw.NCIP_CP_M_PAYLIAINF A --征信担保账户信息
LEFT JOIN    edw.DIM_BUS_COM_EXR_INF_DD B --汇率参数表
ON      A.CURRENCY = B.ISO_CCY_CD
AND     B.DT <= '@@{yyyyMMdd}'
AND     A.DT = B.DT
WHERE   A.DT <= '@@{yyyyMMdd}';

----=====================================================================对公征信部分==================================================================================================
---- 对公负债
DROP TABLE IF EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_7;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_7
(
    ID                                STRING  COMMENT '编号'
    ,REPORT_ID                        STRING  COMMENT '征信报告号'
    ,ACCOUNT_STATE_MODIFY             STRING  COMMENT '借贷/担保账户活动状态_修正'
    ,OVER_TOTAL_RMB                   DECIMAL COMMENT '逾期总额_折人民币'
    ,UNION_ID                         STRING  COMMENT '近60个月信贷逾期超过一个月账户数'
    ,OVER_MONTH_NUM                   DECIMAL COMMENT '账户最大预期月份'
    ,BALANCE_RMB                      DECIMAL COMMENT '余额_折人民币'
    ,PD_CD_MODIFY                     STRING  COMMENT '借贷/担保业务种类大类_修正'
    ,ACCOUNT_NUMBER                   STRING  COMMENT '借贷/担保账户编号'
    ,ACCOUNT_TYPE_MODIFY              STRING  COMMENT '借贷/担保账户类型_修正'
    ,LOAN_BAL                         DECIMAL COMMENT '借贷余额'
    ,DANBAO_YUE                       DECIMAL COMMENT '担保交易风险敞口'
    ,MORT_BAL                         DECIMAL COMMENT '抵押类余额'
    ,GRNTE_BAL                        DECIMAL COMMENT '保证类余额'
    ,ZUHE_BAL                         DECIMAL COMMENT '组合类余额'
    ,XINYONG_BAL                      DECIMAL COMMENT '信用类余额'
    -- ,OTH_CLSS_BAL                     DECIMAL COMMENT '其他类余额'
    ,NON_BNK_BAL                      DECIMAL COMMENT '非银余额'
    ,DC_NON_DCNT_NOT_SETL_ORG_NUM_CNT STRING  COMMENT '借贷不含贴现未结清机构数计数'
);

INSERT INTO lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_7
SELECT  A1.ID --编号
        ,A1.REPORT_ID --报告编号
        ,A1.ACCOUNT_STATE_MODIFY --借贷/担保账户活动状态_修正
        ,A1.OVER_TOTAL_RMB --逾期总额_折人民币
        ,A3.UNION_ID --近60个月信贷逾期超过一个月账户数
        ,A3.OVER_MONTH_NUM --账户最大预期月份
        ,A1.BALANCE_RMB --余额_折人民币
        ,A1.PD_CD_MODIFY --借贷/担保业务种类大类_修正
        ,A1.ACCOUNT_NUMBER --借贷/担保账户编号
        ,A1.ACCOUNT_TYPE_MODIFY --借贷/担保账户类型_修正
        ,CASE
           WHEN A1.ACCOUNT_STATE_MODIFY = '1' AND A1.ACCOUNT_TYPE_MODIFY IN ( 'R1' , 'R4' , 'D1' ) THEN A1.BALANCE_RMB
           ELSE 0
         END LOAN_BAL --借贷余额
        ,CASE
           WHEN A1.ACCOUNT_TYPE_MODIFY IN ( 'G1' , 'G2' , 'G3' ) THEN A1.BALANCE_RMB * ( 1 - ( COALESCE(A1.MAGIN_RATIO, 0) / 100 ) )
           ELSE 0
         END DANBAO_YUE --担保交易风险敞口
        ,CASE
           WHEN A1.ACCOUNT_STATE_MODIFY = '1' AND A1.ACCOUNT_TYPE_MODIFY IN ( 'R1' , 'R4' , 'D1' ) AND A1.GUA_MODE IN ( '2' , '3' ) THEN COALESCE(A1.BALANCE_RMB, 0) --立英 AND A1.ACCOUNT_TYPE_MODIFY IN ( 'R1' , 'R4' , 'D1' )
           ELSE 0
         END AS MORT_BAL -- 抵押类余额
        ,CASE
           WHEN A1.ACCOUNT_STATE_MODIFY = '1' AND A1.ACCOUNT_TYPE_MODIFY IN ( 'R1' , 'R4' , 'D1' ) AND A1.GUA_MODE = '1' THEN COALESCE(A1.BALANCE_RMB, 0) --立英 AND A1.ACCOUNT_TYPE_MODIFY IN ( 'R1' , 'R4' , 'D1' )
           ELSE 0
         END AS GRNTE_BAL --保证类余额
        ,CASE
           WHEN A1.ACCOUNT_STATE_MODIFY = '1' AND A1.ACCOUNT_TYPE_MODIFY IN ( 'R1' , 'R4' , 'D1' ) AND A1.GUA_MODE = '4' THEN COALESCE(A1.BALANCE_RMB, 0) --立英 AND A1.ACCOUNT_TYPE_MODIFY IN ( 'R1' , 'R4' , 'D1' )
           ELSE 0
         END AS ZUHE_BAL --组合类余额
        ,CASE
           WHEN A1.ACCOUNT_STATE_MODIFY = '1' AND A1.ACCOUNT_TYPE_MODIFY IN ( 'R1' , 'R4' , 'D1' ) AND A1.GUA_MODE = '0' THEN COALESCE(A1.BALANCE_RMB, 0)
           ELSE 0
         END AS XINYONG_BAL  --信用类余额
        -- ,CASE
        --    WHEN A1.ACCOUNT_STATE_MODIFY = '1' AND A1.ACCOUNT_TYPE_MODIFY IN ( 'R1' , 'R4' , 'D1' ) AND A1.GUA_MODE NOT IN ( '0' , '1' , '2' , '3' , '4' ) THEN COALESCE(A1.BALANCE_RMB, 0)
        --    ELSE 0
        --  END AS OTH_CLSS_BAL --其他类余额
        ,CASE
           WHEN A1.ORG_TYPE IN ( '24' , '51' ) AND A1.ACCOUNT_STATE_MODIFY = '1' AND A1.ACCOUNT_TYPE_MODIFY IN ( 'R1' , 'R4' , 'D1' ) THEN A1.BALANCE_RMB
           ELSE 0
         END NON_BNK_BAL --非银余额
        ,CASE
           WHEN A1.ACCOUNT_STATE_MODIFY = '1' AND A1.ACCOUNT_TYPE_MODIFY IN ( 'C1' , 'D1' , 'R1' , 'R4' ) THEN IF(COALESCE(A1.ORG_TYPE, '') = '00', 'ZJTL', A1.ORG_NUMBER)
           ELSE NULL
         END AS DC_NON_DCNT_NOT_SETL_ORG_NUM_CNT -- 借贷不含贴现未结清机构数计数
FROM    edw.NCIP_CE_M_ACCOUNT_INFO A1
LEFT JOIN    edw.NCIP_ED01B_ACC_PAY_INF A2 -- 借贷账户还款表现
ON      A2.UNION_ID = A1.ACT_ID
AND     A2.REPORT_ID = A1.REPORT_ID
AND     A2.DT = A1.DT
LEFT JOIN    (
                 SELECT  REPORT_ID
                         ,UNION_ID --筛选过去五年借贷账户和担保交易账户逾期超过一个月的 UNION_ID
                         ,MAX(OVER_MONTH_NUM) AS OVER_MONTH_NUM --筛选过去五年逾期超过一个月的借贷账户和担保交易账户的逾期月份最大值；
                 FROM    lab_bigdata_dev.NCIP_ED01B_AC_PAY_INF_SUB_copy
                 WHERE   MONTHS_BETWEEN(TO_DATE(SUBSTR(REPORT_ID, 1, 6), 'yyyyMM'), TO_DATE(REPLACE(SUBSTR(INF_RPT_DT, 1, 6), '-', ''), 'yyyyMM')) <= 60
                 AND     NVL(OVER_MONTH_NUM, 0) >= 1
                 GROUP BY REPORT_ID , UNION_ID
             ) A3
ON      A3.UNION_ID = A2.ID
AND     A3.REPORT_ID = A2.REPORT_ID
LEFT JOIN    (
                 SELECT  DT                                                                                                             AS DT
                         ,DECODE(CCY_CD, '156', 'CNY', '392', 'JPY', '840', 'USD', '978', 'EUR', '826', 'GBP', '344', 'HKD', 'UNKNOWN') AS CCY_CD
                         ,AVG_PRC / QUO_UNT                                                                                             AS AVG_PRC
                         ,COALESCE(CNY_EXR, 1)                                                                                          AS CNY_EXR
                 FROM    edw.DIM_BUS_COM_EXR_INF_DD
                 WHERE   DT <= '@@{yyyyMMdd}'
             ) A6
ON      A6.CCY_CD = A1.LOAN_CURRENCY
AND     A1.DT = A6.DT -- 我行外币汇率
WHERE   A1.DT <= '@@{yyyyMMdd}';

--当月最高逾期总额 计算需汇总每月逾期金额后取最大值 且 逾期金额需参与汇率转换 较为特殊 单独计算
DROP TABLE IF EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_8;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_8
(
    REPORT_ID       STRING COMMENT '征信报告号'
    ,INF_RPT_DT     STRING COMMENT '信息报告日期'
    ,OVER_TOTAL_RMB STRING COMMENT '逾期总额_折人民币'
);

INSERT INTO lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_8
SELECT  A1.REPORT_ID --报告编号
        ,SUBSTR(A4.INF_RPT_DT, 1, 6) AS INF_RPT_DT --信息报告日期
        ,SUM(CASE
               WHEN A1.ACCOUNT_TYPE = 'C1' THEN CASE
													--LAST_ACT_REPAY_DATE最近一次实际还款日期
                                                  WHEN DATEDIFF(NVL(NVL(TO_DATE(A4.LAST_ACT_REPAY_DATE, 'yyyyMMdd'), TO_DATE(A1.CLOSE_DATE, 'yyyyMMdd')), TO_DATE(SUBSTR(REPLACE(A7.REPORT_TIME, '-', ''), 1, 8), 'yyyyMMdd')), TO_DATE(A1.OPEN_DATE, 'yyyyMMdd'), 'DD') <= 3                 THEN 0
                                                  WHEN DATEDIFF(NVL(NVL(TO_DATE(A4.LAST_ACT_REPAY_DATE, 'yyyyMMdd'), TO_DATE(A1.CLOSE_DATE, 'yyyyMMdd')), TO_DATE(A7.REPORT_TIME, 'yyyyMMdd')), TO_DATE(A1.OPEN_DATE, 'yyyyMMdd'), 'DD') > 3 AND ( A1.ACCOUNT_STATE = '2' OR A4.BALANCE = 0 ) THEN 0
                                                  ELSE CASE
                                                         WHEN A1.LOAN_CURRENCY IN ( 'USD' , 'JPY' , 'EUR' , 'GBP' , 'HKD' ) THEN A4.BALANCE * A6.AVG_PRC
                                                         ELSE A4.BALANCE
                                                       END
                                                END
               ELSE CASE
                      WHEN A1.LOAN_CURRENCY IN ( 'USD' , 'JPY' , 'EUR' , 'GBP' , 'HKD' ) THEN A4.OVER_TOTAL * A6.AVG_PRC
                      ELSE A4.OVER_TOTAL
                    END
             END)                    AS OVER_TOTAL_RMB -- 逾期总额_折人民币
FROM    lab_bigdata_dev.ncip_ce_m_account_info_COPY AS A1
LEFT JOIN    edw.NCIP_ED01B_ACC_PAY_INF A2 -- 借贷账户还款表现
ON      A2.UNION_ID = A1.ACT_ID
AND     A2.REPORT_ID = A1.REPORT_ID
AND     A2.DT = A1.DT
LEFT JOIN    (
                 SELECT  REPORT_ID
                         ,UNION_ID
                         ,LAST_ACT_REPAY_DATE
                         ,BALANCE
                         ,OVER_TOTAL
                         ,INF_RPT_DT
                 FROM    lab_bigdata_dev.NCIP_ED01B_AC_PAY_INF_SUB_copy
                 WHERE   MONTHS_BETWEEN(TO_DATE(SUBSTR(REPORT_ID, 1, 6), 'yyyyMM'), TO_DATE(REPLACE(SUBSTR(INF_RPT_DT, 1, 6), '-', ''), 'yyyyMM')) <= 60
                 AND     NVL(OVER_MONTH_NUM, 0) >= 1
             ) A4 --- 注释： 筛选过去五年逾期超过一个月的借贷账户和担保交易账户的逾期金额最大值
ON      A4.UNION_ID = A2.ID
AND     A4.REPORT_ID = A2.REPORT_ID
LEFT JOIN    (
                 SELECT  DT                                                                                                             AS DT
                         ,DECODE(CCY_CD, '156', 'CNY', '392', 'JPY', '840', 'USD', '978', 'EUR', '826', 'GBP', '344', 'HKD', 'UNKNOWN') AS CCY_CD
                         ,AVG_PRC / QUO_UNT                                                                                             AS AVG_PRC
                         ,COALESCE(CNY_EXR, 1)                                                                                          AS CNY_EXR
                 FROM    edw.DIM_BUS_COM_EXR_INF_DD
                 WHERE   DT <= '@@{yyyyMMdd}'
             ) A6
ON      A6.CCY_CD = A1.LOAN_CURRENCY
AND     A1.DT = A6.DT
LEFT JOIN    edw.NCIP_CE_M_BASIC_INFO A7 --企业征信基础信息
ON      A1.REPORT_ID = A7.REPORT_ID
AND     A7.DT = A1.DT
GROUP BY A1.REPORT_ID , SUBSTR(A4.INF_RPT_DT, 1, 6);

---对公或有负债
DROP TABLE IF EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_9;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_9
(
    ID                    STRING  COMMENT '编号'
    ,REPORT_ID            STRING  COMMENT '征信报告号'
    ,ACCOUNT_TYPE         STRING  COMMENT '账户类型'
    ,ACCOUNT_NUM          STRING  COMMENT '账户编号'
    ,BUS_TYPE             STRING  COMMENT '业务种类'
    ,BUS_TYPE_SUBDIVISION STRING  COMMENT '业务种类细分'
    ,BALANCE_RMB          DECIMAL COMMENT '余额折人民币'
    ,FIVE_LEVEL_SORT      STRING  COMMENT '五级分类'
);

INSERT INTO lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_9
SELECT  A1.ID
        ,A1.REPORT_ID
        ,A1.ACCOUNT_TYPE --账户类型
        ,A1.ACCOUNT_NUM --账户编号
        ,A1.BUS_TYPE --业务种类
        ,A1.BUS_TYPE_SUBDIVISION --业务种类细分
        ,CASE
           WHEN A1.CURRENCY IN ( 'USD' , 'JPY' , 'EUR' , 'GBP' , 'HKD' ) THEN A1.BALANCE * A6.AVG_PRC
         END AS BALANCE_RMB --余额折人民币
        ,A1.FIVE_LEVEL_SORT --五级分类
FROM    edw.NCIP_ED07_ECLL_LOAN A1 --相关还款责任借贷账户
LEFT JOIN    (
                 SELECT  DT                                                                                                             AS DT
                         ,DECODE(CCY_CD, '156', 'CNY', '392', 'JPY', '840', 'USD', '978', 'EUR', '826', 'GBP', '344', 'HKD', 'UNKNOWN') AS CCY_CD
                         ,AVG_PRC / QUO_UNT                                                                                             AS AVG_PRC
                 FROM    edw.DIM_BUS_COM_EXR_INF_DD
                 WHERE   DT <= '@@{yyyyMMdd}'
             ) A6
ON      A6.CCY_CD = A1.CURRENCY
AND     A1.DT = A6.DT
WHERE   A1.DT <= '@@{yyyyMMdd}'
UNION ALL
SELECT  ID
        ,REPORT_ID
        ,''                   AS ACCOUNT_TYPE
        ,''                   AS ACCOUNT_NUM
        ,''                   AS BUS_TYPE
        ,BUS_TYPE_SUBDIVISION AS BUS_TYPE_SUBDIVISION
        ,BALANCE              AS BALANCE
        ,FIVE_LEVEL_SORT      AS FIVE_LEVEL_SORT
FROM    edw.NCIP_ED09_ECSG_GUA ----担保交易相关还款责任分机构汇总信息
WHERE   DT <= '@@{yyyyMMdd}';

--历史逾期相关指标 需要考虑已结清账户
DROP TABLE IF EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_10 PURGE;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_10
(
    SAM_RSK_CTRL_ID                                 STRING  COMMENT '同一风险控制号'
    ,L60M_OVD_EXCD_ONE_MON_ACT_NUM                  BIGINT  COMMENT '对私历史逾期账户数'
    ,L60M_LOAN_OVD_EXCD_ONE_MON_ACT_NUM             BIGINT  COMMENT '对公历史逾期账户数'
    ,L60M_OVD_EXCD_ONE_MON_SNGL_MON_MAX_AMT         DOUBLE  COMMENT '对私历史当月最高逾期总额'
    ,L60M_OVD_EXCD_ONE_MON_SNGL_MON_MAX_AMT_DUIGONG DECIMAL COMMENT '对公历史当月最高逾期总额'
    ,L60M_OVD_EXCD_ONE_MON_PERD_NUM_MAX_VAL         STRING  COMMENT '对私最长逾期月份数'
    ,L60M_LOAN_OVD_EXCD_ONE_MON_PERD_NUM_MAX_VAL    DECIMAL COMMENT '对公最长逾期月份数'
);

INSERT INTO lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_10
SELECT  A.SAM_RSK_CTRL_ID
        ,NVL(SUM(C.L60M_OVD_EXCD_ONE_MON_ACT_NUM), 0)          AS L60M_OVD_EXCD_ONE_MON_ACT_NUM --对私历史逾期账户数
        ,NVL(COUNT(DISTINCT E.UNION_ID), 0)                    AS L60M_LOAN_OVD_EXCD_ONE_MON_ACT_NUM --对公历史逾期账户数
        ,NVL(MAX(C.L60M_OVD_EXCD_ONE_MON_SNGL_MON_MAX_AMT), 0) AS L60M_OVD_EXCD_ONE_MON_SNGL_MON_MAX_AMT --对私历史当月最高逾期总额
        ,NVL(MAX(F.OVER_TOTAL_RMB), 0)                         AS L60M_OVD_EXCD_ONE_MON_SNGL_MON_MAX_AMT_DUIGONG --对公历史当月最高逾期总额
        ,NVL(MAX(C.L60M_OVD_EXCD_ONE_MON_PERD_NUM_MAX_VAL), 0) AS L60M_OVD_EXCD_ONE_MON_PERD_NUM_MAX_VAL --对私最长逾期月份数
        ,NVL(MAX(E.OVER_MONTH_NUM), 0)                         AS L60M_LOAN_OVD_EXCD_ONE_MON_PERD_NUM_MAX_VAL --对公最长逾期月份数
FROM    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_01 A --最新一笔征信报告
LEFT JOIN    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_5 C --对私负债
ON      A.REPORT_NO = C.REPORT_ID
LEFT JOIN    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_7 E --对公负债
ON      A.REPORT_NO = E.REPORT_ID
LEFT JOIN    (
                 SELECT  REPORT_ID
                         ,MAX(OVER_TOTAL_RMB) AS OVER_TOTAL_RMB
                 FROM    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_8
                 GROUP BY REPORT_ID
             ) AS F --取当前报告号最大值
ON      A.REPORT_NO = F.REPORT_ID
GROUP BY SAM_RSK_CTRL_ID;

-- 负债汇总统计
---- 去重汇总至报告号维度
DROP TABLE IF EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_11 PURGE;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_11
(
    SAM_RSK_CTRL_ID                        STRING  COMMENT '同一风险控制号'
    ,DATE_DT                               STRING  COMMENT '数据日期'
    ,CST_ID                                STRING  COMMENT '客户号'
    ,REPORT_NO                             STRING  COMMENT '征信报告号'
    ,OVD_TOT_AMT_PRVT                      DECIMAL COMMENT '当前逾期总额对私'
    ,OVD_TOT_AMT_CORP                      DECIMAL COMMENT '当前逾期总额对公'
    ,BE_RCVRY_ACT_NUM_PRVT                 DECIMAL COMMENT '被追偿账户数对私'
    ,BE_RCVRY_ACT_NUM_CORP                 DECIMAL COMMENT '被追偿账户数对公'
    ,BE_RCVRY_BAL_PRVT                     DECIMAL COMMENT '被追偿余额对私'
    ,BE_RCVRY_BAL_CORP                     DECIMAL COMMENT '被追偿余额对公'
    ,BAD_DBT_ACT_NUM                       DECIMAL COMMENT '呆账账户数对私'
    ,BAD_BAL                               DECIMAL COMMENT '呆账余额对私'
    ,AST_DPSL_BSN_BAL_PRVT                 DECIMAL COMMENT '资产处置业务余额对私'
    ,AST_DPSL_BSN_BAL_CORP                 DECIMAL COMMENT '资产处置业务余额对公'
    ,ADV_CSH_BSN_BAL_PRVT                  DECIMAL COMMENT '垫款业务余额对私'
    ,ADV_CSH_BSN_BAL_CORP                  DECIMAL COMMENT '垫款业务余额对公'
    ,REL_RPAY_RSPBL_NON_NORM_CLSS_BAL_PRVT DECIMAL COMMENT '相关还款责任（如对外担保、共同借款人等）非正常类的余额对私'
    ,REL_RPAY_RSPBL_NON_NORM_CLSS_BAL_CORP DECIMAL COMMENT '相关还款责任（如对外担保、共同借款人等）非正常类的余额对公'
    ,TOT_LBL_PRVT                          DECIMAL COMMENT '总负债对私'
    ,TOT_LBL_CORP                          DECIMAL COMMENT '总负债对公'
    ,LOAN_BAL_PRVT                         DECIMAL COMMENT '贷款余额对私'
    ,LOAN_BAL_CORP                         DECIMAL COMMENT '贷款余额对公'
    ,MORT_PLDG_BAL_PRVT                    DECIMAL COMMENT '抵质押余额对私'
    ,MORT_PLDG_BAL_CORP                    DECIMAL COMMENT '抵质押余额对公'
    ,GRNTE_LOAN_BAL_PRVT                   DECIMAL COMMENT '保证贷款余额对私'
    ,GRNTE_LOAN_BAL_CORP                   DECIMAL COMMENT '保证贷款余额对公'
    ,PRTFL_BALL_PRVT                       DECIMAL COMMENT '组合余额对私'
    ,PRTFL_BAL_CORP                        DECIMAL COMMENT '组合余额对公'
    ,CR_BAL_PRVT                           DECIMAL COMMENT '信用余额对私'
    ,CR_BAL_CORP                           DECIMAL COMMENT '信用余额对公'
    ,CR_CRD_CLSS_BAL_PRVT                  DECIMAL COMMENT '信用卡透支（含分期）余额对私'
    ,REL_RPAY_RSPBL_BAL_PRVT               DECIMAL COMMENT '相关还款责任余额（含对外担保）对私'
    ,REL_RPAY_RSPBL_BAL_CORP               DECIMAL COMMENT '相关还款责任余额（含对外担保）对公'
    ,NON_BNK_ORG_LOAN_BAL_PRVT             DECIMAL COMMENT '非银机构（小额贷款、消费金融公司）贷款余额对私'
    ,NON_BNK_ORG_LOAN_BAL_CORP             DECIMAL COMMENT '非银机构（小额贷款、消费金融公司）贷款余额对公'
    ,LOAN_USE_CR_ORG_NUM_PRVT              DECIMAL COMMENT '贷款用信机构数（不含房贷）对私'
    ,LOAN_USE_CR_ORG_NUM_CORP              DECIMAL COMMENT '贷款用信机构数（不含房贷）对公'
    ,GRNT_TRX_RSK_EPSR_CORP                DECIMAL COMMENT '担保交易风险敞口对公'
);

INSERT INTO lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_11
SELECT  A.SAM_RSK_CTRL_ID
        ,A.DATE_DT
        ,A.CST_ID
        ,A.REPORT_NO
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL                           THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对私负债' AND B.OVD_MONTH >= '1' THEN B.OVD_AMT
                   ELSE 0
                 END), 0)            AS OVD_TOT_AMT_PRVT --当前逾期总额对私 OVD_TOT_AMT_PRVT
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL                                                                     THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对公负债' AND E.ACCOUNT_STATE_MODIFY = '1' AND ACCOUNT_TYPE_MODIFY <> 'C1' THEN E.OVER_TOTAL_RMB
                   ELSE 0
                 END), 0)            AS OVD_TOT_AMT_CORP --当前逾期总额对公 OVD_TOT_AMT_CORP
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL    THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对私负债' THEN B.BE_RCVRY_ACT_NUM
                   ELSE 0
                 END), 0)            AS BE_RCVRY_ACT_NUM_PRVT --被追偿账户数对私 BE_RCVRY_ACT_NUM_PRVT
        ,NVL(COUNT(DISTINCT CASE
                              WHEN A.DD_TYPE IS NOT NULL                                     THEN NULL
                              WHEN A.RECORD_TYPE_1 = '对公负债' AND E.ACCOUNT_TYPE_MODIFY = 'C1' THEN E.ACCOUNT_NUMBER
                            END), 0) AS BE_RCVRY_ACT_NUM_CORP --被追偿账户数对公 BE_RCVRY_ACT_NUM_CORP
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL    THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对私负债' THEN B.BE_RCVRY_ACT_BAL
                   ELSE 0
                 END), 0)            AS BE_RCVRY_BAL_PRVT --被追偿余额对私 BE_RCVRY_BAL_PRVT
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL                                     THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对公负债' AND E.ACCOUNT_TYPE_MODIFY = 'C1' THEN E.BALANCE_RMB
                   ELSE 0
                 END), 0)            AS BE_RCVRY_BAL_CORP --被追偿余额对公 BE_RCVRY_BAL_CORP
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL    THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对私负债' THEN B.BAD_DBT_ACT_NUM
                   ELSE 0
                 END), 0)            AS BAD_DBT_ACT_NUM  --呆账账户数对私
        ---- 对公无呆账户数
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL    THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对私负债' THEN B.BAD_BAL
                   ELSE 0
                 END), 0)            AS BAD_BAL  --呆账余额对私
        ---- 对公无呆账余额
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL    THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对私负债' THEN B.AST_DPSL_BSN_BAL
                   ELSE 0
                 END), 0)            AS AST_DPSL_BSN_BAL_PRVT --资产处置业务余额对私 AST_DPSL_BSN_BAL_PRVT
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL                                                                                    THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对公负债' AND ACCOUNT_TYPE_MODIFY NOT IN ( 'G1' , 'G2' , 'G3' ) AND E.PD_CD_MODIFY = '51' THEN E.BALANCE_RMB --20250331 剔除担保账户
                   ELSE 0    END), 0)            AS AST_DPSL_BSN_BAL_CORP --资产处置业务余额对公 AST_DPSL_BSN_BAL_CORP
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL    THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对私负债' THEN B.ADV_CSH_BSN_BAL
                   ELSE 0
                 END), 0)            AS ADV_CSH_BSN_BAL_PRVT --垫款业务余额对私 ADV_CSH_BSN_BAL_PRVT
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL                                                                                    THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对公负债' AND ACCOUNT_TYPE_MODIFY NOT IN ( 'G1' , 'G2' , 'G3' ) AND E.PD_CD_MODIFY = '41' THEN E.BALANCE_RMB --20250331 剔除担保账户
                   ELSE 0
                 END), 0)            AS ADV_CSH_BSN_BAL_CORP --垫款业务余额对公 ADV_CSH_BSN_BAL_CORP
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL      THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对私或有负债' THEN D.CUR_DAY_REL_RPAY_LVL5_NON_NORM_BAL
                   ELSE 0
                 END), 0)            AS REL_RPAY_RSPBL_NON_NORM_CLSS_BAL_PRVT --相关还款责任（如对外担保、共同借款人等）非正常类的余额对私 REL_RPAY_RSPBL_NON_NORM_CLSS_BAL_PRVT
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL                                                                                                                        THEN NULL
                   WHEN ( A.RECORD_TYPE_1 = '对公或有负债' OR A.RECORD_TYPE_1 = '对公担保账户或有负债' ) AND F.ACCOUNT_TYPE = 'C1' OR F.FIVE_LEVEL_SORT IN ( '2' , '3' , '4' , '5' ) THEN F.BALANCE_RMB --追偿
                   ELSE 0
                 END), 0)            AS REL_RPAY_RSPBL_NON_NORM_CLSS_BAL_CORP --相关还款责任（如对外担保、共同借款人等）非正常类的余额对公 REL_RPAY_RSPBL_NON_NORM_CLSS_BAL_CORP
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL    THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对私负债' THEN NVL(B.CUR_DAY_LOAN_CLSS_BAL, 0) + NVL(B.CUR_DAY_CR_CRD_CLSS_BAL, 0)
                   ELSE 0
                 END), 0)            AS TOT_LBL_PRVT --总负债对私 TOT_LBL_PRVT
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL    THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对公负债' THEN NVL(E.LOAN_BAL, 0) + NVL(E.DANBAO_YUE, 0)
                   ELSE 0
                 END), 0)            AS TOT_LBL_CORP --总负债对公 TOT_LBL_CORP
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL    THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对私负债' THEN B.CUR_DAY_LOAN_CLSS_BAL
                   ELSE 0
                 END), 0)            AS LOAN_BAL_PRVT --贷款余额对私 LOAN_BAL_PRVT
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL    THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对公负债' THEN E.LOAN_BAL
                   ELSE 0
                 END), 0)            AS LOAN_BAL_CORP --贷款余额对公 LOAN_BAL_CORP
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL    THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对私负债' THEN B.MORT_PLDG_LOAN_BAL
                   ELSE 0
                 END), 0)            AS MORT_PLDG_BAL_PRVT --抵质押余额对私 MORT_PLDG_BAL_PRVT
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL    THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对公负债' THEN E.MORT_BAL
                   ELSE 0
                 END), 0)            AS MORT_PLDG_BAL_CORP --抵质押余额对公 MORT_PLDG_BAL_CORP
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL    THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对私负债' THEN B.GRNTE_LOAN_BAL
                   ELSE 0
                 END), 0)            AS GRNTE_LOAN_BAL_PRVT --保证贷款余额对私 GRNTE_LOAN_BAL_PRVT
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL    THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对公负债' THEN E.GRNTE_BAL
                   ELSE 0
                 END), 0)            AS GRNTE_LOAN_BAL_CORP --保证贷款余额对公 GRNTE_LOAN_BAL_CORP
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL    THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对私负债' THEN B.PRTFL_BAL
                   ELSE 0
                 END), 0)            AS PRTFL_BALL_PRVT --组合余额对私 PRTFL_BALL_PRVT
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL    THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对公负债' THEN E.ZUHE_BAL
                   ELSE 0
                 END), 0)            AS PRTFL_BAL_CORP --组合余额对公 PRTFL_BAL_CORP
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL    THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对私负债' THEN B.CR_BAL
                   ELSE 0
                 END), 0)            AS CR_BAL_PRVT --信用余额对私 CR_BAL_PRVT
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL    THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对公负债' THEN E.XINYONG_BAL
                   ELSE 0
                 END), 0)            AS CR_BAL_CORP  --信用余额对公 CR_BAL_CORP
        -- ,NVL(SUM(CASE
        --            WHEN A.DD_TYPE IS NOT NULL    THEN NULL
        --            WHEN A.RECORD_TYPE_1 = '对私负债' THEN B.OTH_BAL
        --            ELSE 0
        --          END), 0)            AS QITA_DANBAO_YUE_DUISI --其他余额
        -- ,NVL(SUM(CASE
        --            WHEN A.DD_TYPE IS NOT NULL    THEN NULL
        --            WHEN A.RECORD_TYPE_1 = '对公负债' THEN E.OTH_CLSS_BAL
        --            ELSE 0
        --          END), 0)            AS QITA_BAL_YUE_DUIGONG --其他余额
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL    THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对私负债' THEN B.CUR_DAY_CR_CRD_CLSS_BAL
                   ELSE 0
                 END), 0)            AS CR_CRD_CLSS_BAL_PRVT  --信用卡透支（含分期）余额对私 CR_CRD_CLSS_BAL_PRVT
        ---- 对公 无 信用卡透支（含分期）余额
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL      THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对私或有负债' THEN D.CUR_DAY_REL_RPAY_BAL
                   ELSE 0
                 END), 0)            AS REL_RPAY_RSPBL_BAL_PRVT --相关还款责任余额（含对外担保）对私 REL_RPAY_RSPBL_BAL_PRVT
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL                                            THEN NULL
                   WHEN ( A.RECORD_TYPE_1 = '对公或有负债' OR A.RECORD_TYPE_1 = '对公担保账户或有负债' ) THEN F.BALANCE_RMB
                   ELSE 0
                 END), 0)            AS REL_RPAY_RSPBL_BAL_CORP --相关还款责任余额（含对外担保）对公 REL_RPAY_RSPBL_BAL_CORP
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL    THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对私负债' THEN B.CUR_DAY_LOAN_NOT_CLS_SML_AMT_LOAN_CSM_FIN_BAL
                   ELSE 0
                 END), 0)            AS NON_BNK_ORG_LOAN_BAL_PRVT --非银机构（小额贷款、消费金融公司）贷款余额对私 NON_BNK_ORG_LOAN_BAL_PRVT
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL    THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对公负债' THEN E.NON_BNK_BAL
                   ELSE 0
                 END), 0)            AS NON_BNK_ORG_LOAN_BAL_CORP --非银机构（小额贷款、消费金融公司）贷款余额对公 NON_BNK_ORG_LOAN_BAL_CORP
        ,NVL(COUNT(DISTINCT CASE
                              WHEN A.DD_TYPE IS NOT NULL    THEN NULL
                              WHEN A.RECORD_TYPE_1 = '对私负债' THEN B.CUR_DAY_NON_HS_LOAN_GT_ZR_ORG_NUM
                            END), 0) AS LOAN_USE_CR_ORG_NUM_PRVT --贷款用信机构数（不含房贷）对私 LOAN_USE_CR_ORG_NUM_PRVT
        ,NVL(COUNT(DISTINCT CASE
                              WHEN A.DD_TYPE IS NOT NULL    THEN NULL
                              WHEN A.RECORD_TYPE_1 = '对公负债' THEN E.DC_NON_DCNT_NOT_SETL_ORG_NUM_CNT
                            END), 0) AS LOAN_USE_CR_ORG_NUM_CORP  --贷款用信机构数（不含房贷）对公 LOAN_USE_CR_ORG_NUM_CORP
        -- 对私 无 担保交易风险敞口
        ,NVL(SUM(CASE
                   WHEN A.DD_TYPE IS NOT NULL    THEN NULL
                   WHEN A.RECORD_TYPE_1 = '对公负债' THEN E.DANBAO_YUE
                   ELSE 0
                 END), 0)            AS GRNT_TRX_RSK_EPSR_CORP --担保交易风险敞口对公
FROM    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_02 A -- 征信负债去重明细结果a -- 征信负债去重明细结果
LEFT JOIN    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_4 B --对私负债
ON      A.REPORT_NO = B.REPORT_ID
AND     A.ID = B.ID
LEFT JOIN    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_5 C --对私负债
ON      A.REPORT_NO = C.REPORT_ID
AND     A.ID = C.ID
LEFT JOIN    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_6 D --对私或有负债
ON      A.REPORT_NO = D.REPORT_ID
AND     A.ID = D.ID
LEFT JOIN    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_7 E --对公负债
ON      A.REPORT_NO = E.REPORT_ID
AND     A.ID = E.ID
LEFT JOIN    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_9 F --对公或有负债
ON      A.REPORT_NO = F.REPORT_ID
AND     A.ID = F.ID
WHERE   A.DT = '@@{yyyyMMdd}'
GROUP BY A.SAM_RSK_CTRL_ID , A.DATE_DT , A.CST_ID , A.REPORT_NO;

--汇总至同一风险控制号维度
DROP TABLE IF EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03 PURGE;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03
(
    SAM_RSK_CTRL_ID                         STRING  COMMENT '同一风险控制号'
    ,OVD_TOT_AMT                            DECIMAL COMMENT '当前逾期总额Z040101_0149'
    ,L60M_OVD_EXCD_ONE_MON_ACT_NUM          BIGINT  COMMENT '历史逾期账户数Z040101_0151'
    ,L60M_OVD_EXCD_ONE_MON_SNGL_MON_MAX_AMT DECIMAL COMMENT '历史当月最高逾期总额Z040101_0153'
    ,L60M_OVD_EXCD_ONE_MON_PERD_NUM_MAX_VAL DECIMAL COMMENT '最长逾期月份数Z040101_0157'
    ,BE_RCVRY_ACT_NUM                       BIGINT  COMMENT '被追偿账户数Z040101_0159'
    ,BE_RCVRY_BAL                           DECIMAL COMMENT '被追偿余额Z040101_0161'
    ,BAD_DBT_ACT_NUM                        BIGINT  COMMENT '呆账账户数Z040101_0163'
    ,BAD_BAL                                DOUBLE  COMMENT '呆账余额Z040101_0165'
    ,AST_DPSL_BSN_BAL                       DECIMAL COMMENT '资产处置业务余额Z040101_0167'
    ,ADV_CSH_BSN_BAL                        DECIMAL COMMENT '垫款业务余额Z040101_0169'
    ,REL_RPAY_RSPBL_NON_NORM_CLSS_BAL       DECIMAL COMMENT '相关还款责任（如对外担保、共同借款人等）非正常类的余额Z040101_0171'
    ,TOT_LBL                                DECIMAL COMMENT '总负债Z040101_0173'
    ,LOAN_BAL                               DECIMAL COMMENT '贷款余额Z040101_0175'
    ,MORT_PLDG_BAL                          DECIMAL COMMENT '抵质押余额Z040101_0177'
    ,GRNTE_LOAN_BAL                         DECIMAL COMMENT '保证贷款余额Z040101_0179'
    ,PRTFL_BAL                              DECIMAL COMMENT '组合余额Z040101_0181'
    ,CR_BAL                                 DECIMAL COMMENT '信用余额Z040101_0183'
    -- ,OTH_GRNT_BAL                                  DECIMAL COMMENT '其他担保余额'
    ,CR_CRD_CLSS_BAL                        DOUBLE  COMMENT '信用卡透支（含分期）余额Z060401_0155'
    ,REL_RPAY_RSPBL_BAL                     DECIMAL COMMENT '相关还款责任余额（含对外担保）Z040101_0185'
    ,NON_BNK_ORG_LOAN_BAL                   DECIMAL COMMENT '非银机构（小额贷款、消费金融公司）贷款余额Z040101_0189'
    ,CTR_AMT                                DECIMAL COMMENT '贷款授信总额Z040101_0193'
    ,LOAN_USE_CR_ORG_NUM                    DOUBLE  COMMENT '贷款用信机构数（不含房贷）Z040101_0195'
    ,GRNT_TRX_RSK_EPSR                      DECIMAL COMMENT '担保交易风险敞口Z040101_0197'
);

INSERT INTO lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03
SELECT  A.SAM_RSK_CTRL_ID
        ,SUM(OVD_TOT_AMT_PRVT + OVD_TOT_AMT_CORP)                                                                  AS OVD_TOT_AMT --当前逾期总额Z040101_0149
        ,SUM(F.L60M_OVD_EXCD_ONE_MON_ACT_NUM + F.L60M_LOAN_OVD_EXCD_ONE_MON_ACT_NUM)                               AS L60M_OVD_EXCD_ONE_MON_ACT_NUM --历史逾期账户数Z040101_0151
        ,MAX(GREATEST(F.L60M_OVD_EXCD_ONE_MON_SNGL_MON_MAX_AMT, F.L60M_OVD_EXCD_ONE_MON_SNGL_MON_MAX_AMT_DUIGONG)) AS L60M_OVD_EXCD_ONE_MON_SNGL_MON_MAX_AMT --历史当月最高逾期总额Z040101_0153
        ,MAX(GREATEST(F.L60M_OVD_EXCD_ONE_MON_PERD_NUM_MAX_VAL, F.L60M_LOAN_OVD_EXCD_ONE_MON_PERD_NUM_MAX_VAL))    AS L60M_OVD_EXCD_ONE_MON_PERD_NUM_MAX_VAL --最长逾期月份数Z040101_0157
        ,SUM(BE_RCVRY_ACT_NUM_PRVT + BE_RCVRY_ACT_NUM_CORP)                                                        AS BE_RCVRY_ACT_NUM --被追偿账户数Z040101_0159
        ,SUM(BE_RCVRY_BAL_PRVT + BE_RCVRY_BAL_CORP)                                                                AS BE_RCVRY_BAL --被追偿余额Z040101_0161
        ,SUM(BAD_DBT_ACT_NUM)                                                                                      AS BAD_DBT_ACT_NUM --呆账账户数Z040101_0163
        ,SUM(BAD_BAL)                                                                                              AS BAD_BAL --呆账余额Z040101_0165
        ,SUM(AST_DPSL_BSN_BAL_PRVT + AST_DPSL_BSN_BAL_CORP)                                                        AS AST_DPSL_BSN_BAL --资产处置业务余额Z040101_0167
        ,SUM(ADV_CSH_BSN_BAL_PRVT + ADV_CSH_BSN_BAL_CORP)                                                          AS ADV_CSH_BSN_BAL --垫款业务余额Z040101_0169
        ,SUM(REL_RPAY_RSPBL_NON_NORM_CLSS_BAL_PRVT + REL_RPAY_RSPBL_NON_NORM_CLSS_BAL_CORP)                        AS REL_RPAY_RSPBL_NON_NORM_CLSS_BAL --相关还款责任（如对外担保、共同借款人等）非正常类的余额Z040101_0171
        ,SUM(TOT_LBL_PRVT + TOT_LBL_CORP)                                                                          AS TOT_LBL --总负债Z040101_0173
        ,SUM(LOAN_BAL_PRVT + LOAN_BAL_CORP)                                                                        AS LOAN_BAL --贷款余额Z040101_0175
        ,SUM(MORT_PLDG_BAL_PRVT + MORT_PLDG_BAL_CORP)                                                              AS MORT_PLDG_BAL --抵质押余额Z040101_0177
        ,SUM(GRNTE_LOAN_BAL_PRVT + GRNTE_LOAN_BAL_CORP)                                                            AS GRNTE_LOAN_BAL --保证贷款余额Z040101_0179
        ,SUM(PRTFL_BALL_PRVT + PRTFL_BAL_CORP)                                                                     AS PRTFL_BAL --组合余额Z040101_0181
        ,SUM(CR_BAL_PRVT + CR_BAL_CORP)                                                                            AS CR_BAL  --信用余额Z040101_0183
        -- ,SUM(QITA_DANBAO_YUE_DUISI + QITA_BAL_YUE_DUIGONG)                                                         AS OTH_GRNT_BAL --其他担保余额
        ,SUM(CR_CRD_CLSS_BAL_PRVT)                                                                                 AS CR_CRD_CLSS_BAL --信用卡透支（含分期）余额  Z060401_0155
        ,SUM(REL_RPAY_RSPBL_BAL_PRVT + REL_RPAY_RSPBL_BAL_CORP)                                                    AS REL_RPAY_RSPBL_BAL --相关还款责任余额（含对外担保）Z040101_0185
        ,SUM(NON_BNK_ORG_LOAN_BAL_PRVT + NON_BNK_ORG_LOAN_BAL_CORP)                                                AS NON_BNK_ORG_LOAN_BAL --非银机构（小额贷款、消费金融公司）贷款余额Z040101_0189
        ,SUM(NVL(B.CTR_AMT, 0) + NVL(C.CTR_AMT, 0))                                                                AS CTR_AMT --贷款授信总额Z040101_0193
		,AVG(LOAN_USE_CR_ORG_NUM_PRVT + LOAN_USE_CR_ORG_NUM_CORP)                                                  AS LOAN_USE_CR_ORG_NUM --贷款用信机构数（不含房贷）Z040101_0195
        ,SUM(GRNT_TRX_RSK_EPSR_CORP)                                                                               AS GRNT_TRX_RSK_EPSR --担保交易风险敞口Z040101_0197
FROM    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_11 AS A
LEFT JOIN    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_2 AS B --对私授信协议金额
ON      A.REPORT_NO = B.REPORT_ID
LEFT JOIN    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_3 AS C --对公授信协议金额
ON      A.REPORT_NO = C.REPORT_ID
LEFT JOIN    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_10 AS F
ON      A.SAM_RSK_CTRL_ID = F.SAM_RSK_CTRL_ID
GROUP BY A.SAM_RSK_CTRL_ID;


--- 客户维度的指标
DROP TABLE IF EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_04 PURGE;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_04
(
    CST_ID                                         STRING  COMMENT '客户号'
    ,L60M_OVD_EXCD_ONE_MON_SNGL_MON_MAX_AMT        DECIMAL COMMENT '历史当月最高逾期总额Z040101_0155'
    ,CUR_DAY_LOAN_NOT_CLS_SML_AMT_LOAN_CSM_FIN_BAL DECIMAL COMMENT '借贷账户_贷款账户未关闭小贷消金总余额Z040101_0187'
    ,CST_CTR_AMT                                   DECIMAL COMMENT '借贷账户_贷款账户总贷款授信金额Z040101_0191'
    ,ZXACT_R2_SPECTN_RMB_ACT_CNT                   BIGINT  COMMENT '借贷账户_R2账户非正常存续人民币账户数Z040101_0218'
    ,ZXACT_LOANACT_EXNORM_BAL_SUM                  DECIMAL COMMENT '借贷账户_贷款账户五级非正常总余额Z040101_0216'
);

INSERT INTO lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_04
SELECT  A.CST_ID
        ,F.L60M_OVD_EXCD_ONE_MON_SNGL_MON_MAX_AMT_PRVT + F.L60M_OVD_EXCD_ONE_MON_SNGL_MON_MAX_AMT_CORP AS L60M_OVD_EXCD_ONE_MON_SNGL_MON_MAX_AMT --历史当月最高逾期总额 Z040101_0155
        ,E.CUR_DAY_LOAN_NOT_CLS_SML_AMT_LOAN_CSM_FIN_BAL --借贷账户_贷款账户未关闭小贷消金总余额Z040101_0187
        ,G.CST_CTR_AMT --借贷账户_贷款账户 总贷款授信金额 Z040101_0191
        ,H.ZXACT_R2_SPECTN_RMB_ACT_CNT --借贷账户_R2账户非正常存续人民币账户数Z040101_0218
        ,D.ZXACT_LOANACT_EXNORM_BAL_SUM --借贷账户_贷款账户五级非正常总余额Z040101_0216
FROM    edw.DWS_CST_BAS_INF_DD A -- 客户基本信息表
LEFT JOIN    adm_rsk.ADM_RSK_APL_CST_USE_CRDT_CST_INFO_DD B --风险集市客户-集团授信用信情况表
ON      A.CST_ID = B.CST_ID
AND     B.DT = '@@{yyyyMMdd}'
LEFT JOIN    (
                 SELECT  CST_ID
                         ,SUM(ZXACT_LOANACT_EXNORM_BAL_SUM) AS ZXACT_LOANACT_EXNORM_BAL_SUM
                 FROM    adm_pub.ADM_CSM_CBUS_OUT_CRD_IDV_CAD_AMT_DD --客户集市-业务信息-个人征信-借贷金额类
                 WHERE   DT = '@@{yyyyMMdd}'
                 GROUP BY CST_ID
             ) D
ON      A.CST_ID = D.CST_ID
LEFT JOIN    (
                 SELECT  CST_ID
                         ,SUM(NON_BNK_ORG_LOAN_BAL_PRVT + NON_BNK_ORG_LOAN_BAL_CORP) AS CUR_DAY_LOAN_NOT_CLS_SML_AMT_LOAN_CSM_FIN_BAL
                 FROM    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_11
                 GROUP BY CST_ID
             ) E
ON      A.CST_ID = E.CST_ID
LEFT JOIN    (
                 SELECT  T1.CST_ID
                         ,NVL(MAX(T2.L60M_OVD_EXCD_ONE_MON_SNGL_MON_MAX_AMT), 0) AS L60M_OVD_EXCD_ONE_MON_SNGL_MON_MAX_AMT_PRVT --对私历史当月最高逾期总额
                         ,NVL(MAX(T3.OVER_TOTAL_RMB), 0)                         AS L60M_OVD_EXCD_ONE_MON_SNGL_MON_MAX_AMT_CORP --对公历史当月最高逾期总额
                 FROM    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_01 T1
                 LEFT JOIN    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_5 T2
                 ON      t1.REPORT_NO = t2.REPORT_ID
                 LEFT JOIN    (
                                  SELECT  REPORT_ID
                                          ,MAX(OVER_TOTAL_RMB) AS OVER_TOTAL_RMB
                                  FROM    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_8
                                  GROUP BY REPORT_ID
                              ) T3
                 ON      T1.REPORT_NO = T3.REPORT_ID
                 GROUP BY T1.CST_ID
             ) F
ON      A.CST_ID = F.CST_ID
LEFT JOIN    (
                 SELECT  T1.CST_ID
                         ,SUM(NVL(T2.CTR_AMT, 0) + NVL(T3.CTR_AMT, 0)) AS CST_CTR_AMT
                 FROM    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_01 T1
                 LEFT JOIN    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_2 T2 --对私授信协议
                 ON      T1.REPORT_NO = T2.REPORT_ID
                 LEFT JOIN    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03_3 T3 --对公授信协议
                 ON      T1.REPORT_NO = T3.REPORT_ID
                 GROUP BY T1.CST_ID
             ) G
ON      A.CST_ID = G.CST_ID
LEFT JOIN    (
                 SELECT  CST_ID
                         ,SUM(ZXACT_R2_SPECTN_RMB_ACT_CNT) AS ZXACT_R2_SPECTN_RMB_ACT_CNT
                 FROM    adm_pub.ADM_CSM_CBUS_OUT_CRD_IDV_CAD_ACT_INFO_DD --客户集市-业务信息-个人征信-借贷账户数
                 WHERE   DT = '@@{yyyyMMdd}'
                 GROUP BY CST_ID
             ) H
ON      A.CST_ID = H.CST_ID
WHERE   A.DT = '@@{yyyyMMdd}'
AND     A.CST_ID <> '';



--DROP TABLE IF EXISTS lab_bigdata_dev.ADM_IND_I_CRDT_RPT_RSK_IDX_DD;
CREATE TABLE IF NOT EXISTS lab_bigdata_dev.ADM_IND_I_CRDT_RPT_RSK_IDX_DD
(
    DATA_DT                                            STRING  COMMENT '数据日期'
    ,LGP_ID                                            STRING  COMMENT '法人编号'
    ,CRDT_RPT_NO                                       STRING  COMMENT '征信报告编号'
    ,CST_ID                                            STRING  COMMENT '客户编号'
    ,IDTC_RSK_CTRL_NO                                  STRING  COMMENT '同一风险控制号'
    ,IDTC_RSK_CTRL_NO_CUR_OVD_TOT_AMT                  DECIMAL COMMENT '报告当日同一风险控制号信贷M1+逾期金额求和_征信'
    ,IDTC_RSK_CTRL_NO_HIS_OVD_ACT_NUM                  BIGINT  COMMENT '报告近60个月同一风险控制号信贷M1+逾期账户数计数_征信'
    ,IDTC_RSK_CTRL_NO_HIS_CUR_MON_HGST_OVD_TOT_AMT     DECIMAL COMMENT '报告近60个月同一风险控制号信贷M1+逾期单月金额最大值_征信'
    ,HIS_CUR_MON_HGST_OVD_TOT_AMT                      DECIMAL COMMENT '报告近60个月信贷M1+逾期单月金额最大值_企业征信'
    ,IDTC_RSK_CTRL_NO_LGST_OVD_MON_NUM                 BIGINT  COMMENT '报告近60个月同一风险控制号信贷M1+逾期期数最大值_征信'
    ,IDTC_RSK_CTRL_NO_BE_RCVRY_ACT_NUM                 BIGINT  COMMENT '报告当日同一风险控制号被追偿账户数计数_征信'
    ,IDTC_RSK_CTRL_NO_BE_RCVRY_BAL                     DECIMAL COMMENT '报告当日同一风险控制号被追偿余额求和_征信'
    ,IDTC_RSK_CTRL_NO_BAD_DBT_ACT_NUM                  BIGINT  COMMENT '报告当日同一风险控制号呆账账户数计数_征信'
    ,IDTC_RSK_CTRL_NO_BAD_BAL                          DECIMAL COMMENT '报告当日同一风险控制号呆账余额求和_征信'
    ,IDTC_RSK_CTRL_NO_AST_DPSL_BSN_BAL                 DECIMAL COMMENT '报告当日同一风险控制号资产处置余额求和_征信'
    ,IDTC_RSK_CTRL_NO_ADV_CSH_BAL                      DECIMAL COMMENT '报告当日同一风险控制号垫款余额求和_征信'
    ,IDTC_RSK_CTRL_NO_REL_RPAY_RSPBL_NON_NORM_CLSS_BAL DECIMAL COMMENT '报告当日同一风险控制号相关还款责任五级非正常余额求和_征信'
    ,IDTC_RSK_CTRL_NO_TOT_LBL                          DECIMAL COMMENT '报告当日同一风险控制号总负债求和_征信'
    ,IDTC_RSK_CTRL_NO_LOAN_BAL                         DECIMAL COMMENT '报告当日同一风险控制号贷款类余额求和_征信'
    ,IDTC_RSK_CTRL_NO_MORT_PLDG_LOAN_BAL               DECIMAL COMMENT '报告当日同一风险控制号抵质押担保贷款余额求和_征信'
    ,IDTC_RSK_CTRL_NO_GRNTE_LOAN_BAL                   DECIMAL COMMENT '报告当日同一风险控制号保证担保贷款余额求和_征信'
    ,IDTC_RSK_CTRL_NO_PRTFL_GRNT_LOAN_BAL              DECIMAL COMMENT '报告当日同一风险控制号组合担保贷款余额求和_征信'
    ,IDTC_RSK_CTRL_NO_CR_LOAN_BAL                      DECIMAL COMMENT '报告当日同一风险控制号信用担保贷款余额求和_征信'
    ,IDTC_RSK_CTRL_NO_REL_RPAY_RSPBL_BAL               DECIMAL COMMENT '报告当日同一风险控制号相关还款责任余额求和_征信'
    ,IDTC_RSK_CTRL_NO_CLS_SML_AMT_LOAN_CSM_FIN_TOT_BAL DECIMAL COMMENT '报告当日借贷(不含贴现)未关闭小贷消金余额求和_企业征信'
    ,IDTC_RSK_CTRL_NO_NON_BNK_ORG_LOAN_BAL             DECIMAL COMMENT '报告当日同一风险控制号贷款账户未关闭小贷消金余额求和_征信'
    ,IDTC_RSK_CTRL_NO_TOT_LOAN_FACL_AMT                DECIMAL COMMENT '报告当日借贷(不含贴现)授信金额求和_企业征信'
    ,IDTC_RSK_CTRL_NO_LOAN_FACL_TOT_AMT                DECIMAL COMMENT '报告当日同一风险控制号贷款类授信金额求和_征信'
    ,IDTC_RSK_CTRL_NO_ACT_AVG_LOAN_USE_CR_ORG_NUM      DECIMAL COMMENT '报告当日同一风险控制号贷款类(不含房贷)余额大于0机构数组内平均_征信'
    ,IDTC_RSK_CTRL_NO_GRNT_TRX_RSK_EPSR                DECIMAL COMMENT '报告当日同一风险控制号担保交易未结清敞口求和_企业征信'
    ,IDTC_RSK_CTRL_NO_CUR_DAY_CR_CRD_CLSS_BAL_SUM      DECIMAL COMMENT '报告当日同一风险控制号信用卡类余额求和_个人征信'
    ,INDIV_CRDT_CUR_NON_NORM_LOAN_BAL                  DECIMAL COMMENT '报告当日贷款账户五级非正常余额求和_个人征信'
    ,INDIV_CRDT_CUR_NON_NORM_CR_CRD_ACT_NUM            BIGINT  COMMENT '报告当日贷记卡账户非正常存续账户数计数_个人征信'
)
COMMENT
'征信报告风险指标表'
PARTITIONED BY
(
    DT STRING COMMENT '日期分区'
);

INSERT INTO lab_bigdata_dev.ADM_IND_I_CRDT_RPT_RSK_IDX_DD PARTITION (DT = '@@{yyyyMMdd}')
SELECT  '@@{yyyyMMdd}'
        ,T1.LGP_ID
        ,T1.REPORT_NO
        ,T1.CST_ID
        ,T1.SAM_RSK_CTRL_ID
        ,T2.OVD_TOT_AMT --当前逾期总额Z040101_0149
        ,T2.L60M_OVD_EXCD_ONE_MON_ACT_NUM --历史逾期账户数Z040101_0151
        ,T2.L60M_OVD_EXCD_ONE_MON_SNGL_MON_MAX_AMT --历史当月最高逾期总额Z040101_0153
        ,T3.L60M_OVD_EXCD_ONE_MON_SNGL_MON_MAX_AMT --历史当月最高逾期总额Z040101_0155
        ,T2.L60M_OVD_EXCD_ONE_MON_PERD_NUM_MAX_VAL --最长逾期月份数Z040101_0157
        ,T2.BE_RCVRY_ACT_NUM --被追偿账户数Z040101_0159
        ,T2.BE_RCVRY_BAL --被追偿余额Z040101_0161
        ,T2.BAD_DBT_ACT_NUM --呆账账户数Z040101_0163
        ,T2.BAD_BAL --呆账余额Z040101_0165
        ,T2.AST_DPSL_BSN_BAL --资产处置业务余额Z040101_0167
        ,T2.ADV_CSH_BSN_BAL --垫款业务余额Z040101_0169
        ,T2.REL_RPAY_RSPBL_NON_NORM_CLSS_BAL --相关还款责任（如对外担保、共同借款人等）非正常类的余额Z040101_0171
        ,T2.TOT_LBL --总负债Z040101_0173
        ,T2.LOAN_BAL --贷款余额Z040101_0175
        ,T2.MORT_PLDG_BAL --抵质押余额Z040101_0177
        ,T2.GRNTE_LOAN_BAL --保证贷款余额Z040101_0179
        ,T2.PRTFL_BAL --组合余额Z040101_0181
        ,T2.CR_BAL --信用余额Z040101_0183
        ,T2.REL_RPAY_RSPBL_BAL --相关还款责任余额（含对外担保）Z040101_0185
        ,T3.CUR_DAY_LOAN_NOT_CLS_SML_AMT_LOAN_CSM_FIN_BAL --借贷账户_贷款账户 未关闭小贷消金 总余额 Z040101_0187
        ,T2.NON_BNK_ORG_LOAN_BAL --非银机构（小额贷款、消费金融公司）贷款余额Z040101_0189
        ,T3.CST_CTR_AMT --借贷账户_贷款账户 总贷款授信金额 Z040101_0191
        ,T2.CTR_AMT --贷款授信总额Z040101_0193
        ,T2.LOAN_USE_CR_ORG_NUM --贷款用信机构数（不含房贷）040101_0195
        ,T2.GRNT_TRX_RSK_EPSR --担保交易风险敞口Z040101_0197
        ,T3.ZXACT_LOANACT_EXNORM_BAL_SUM --借贷账户_贷款账户五级非正常总余额 	Z040101_0216
        ,T2.CR_CRD_CLSS_BAL --信用卡透支（含分期）余额  Z060401_0155
        ,T3.ZXACT_R2_SPECTN_RMB_ACT_CNT --借贷账户_R2账户非正常存续人民币账户数 Z040101_0218
FROM    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_01 T1
LEFT JOIN    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_03 T2
ON      T1.SAM_RSK_CTRL_ID = T2.SAM_RSK_CTRL_ID
LEFT JOIN    lab_bigdata_dev.TMP_ADM_IND_I_CRDT_RPT_RSK_IDX_DD_04 T3
ON      T1.CST_ID = T3.CST_ID;





**app衍生指标_02app衍生指标.sql
SELECT  CASE_NO,CASE_NAME,CASE_PHASE,SUM( CASE WHEN (CASE_NAME LIKE '%关系树%' OR  CASE_NAME LIKE '%对公拓面%' ) AND IS_CONVERT=1 THEN DIFF_DEP_BAL_AVG
        WHEN( CASE_NAME LIKE '%存款提升' OR  CASE_NAME LIKE '%综合经营%' ) AND IS_CONVERT=1 THEN DIFF_DEP_BAL_AVG*IS_SLF END) 存款月日均增加
    ,SUM(CASE WHEN (CASE_NAME LIKE '%关系树%' OR  CASE_NAME LIKE '%对公拓面%') AND IS_CONVERT=1 THEN COALESCE(DIFF_LOAN_30D_AVG, 0)
        WHEN CASE_NAME IN ('经营性贷款提额','同业置换','无贷担保人配贷','贷款流失挽回','泰惠收配贷','信用卡配贷','社保贷','循环贷款促用信','大额配卡')  AND IS_CONVERT=1 THEN COALESCE(DIFF_LOAN_30D_AVG, 0)*IS_SLF END) 贷款月日均增加 --调整结束日期前近30天贷款日均-执行日期前近30天贷款日均
    ,SUM(CASE WHEN (CASE_NAME IN ('财富流失挽回','财富客户拉新')  ) AND IS_CONVERT=1 THEN (COALESCE(BT_RCTLY_30D_CHM_AMT_AVG, 0) - COALESCE(BFR_L30D_CHM_AMT_AVG, 0))*IS_SLF END) 理财月日均增加
    --,SUM(CASE WHEN (CASE_NAME LIKE '%关系树%' OR  CASE_NAME LIKE '%对公拓面%') AND IS_CONVERT=1  THEN COALESCE(DIFF_FTP_30D_AVG, 0)
    --    WHEN CASE_NAME IN ('经营性贷款提额','同业置换','无贷担保人配贷','贷款流失挽回','泰惠收配贷','信用卡配贷','社保贷','循环贷款促用信','大额配卡') AND IS_CONVERT=1  THEN  COALESCE(DIFF_FTP_30D_AVG, 0)*IS_SLF END) *365 预测FTP年利润增加 --调整结束日期前近30天FTP日均-执行日期前近30天FTP日均
    ,SUM(CASE WHEN (CASE_NAME LIKE '%关系树%' OR  CASE_NAME LIKE '%对公拓面%') AND IS_CONVERT=1  THEN COALESCE(SUM_PREDICT_LOAN_FTP_INC, 0)  --预测贷款FTP年利润
        WHEN CASE_NAME IN ('经营性贷款提额','同业置换','无贷担保人配贷','贷款流失挽回','泰惠收配贷','信用卡配贷','社保贷','循环贷款促用信','大额配卡') AND IS_CONVERT=1  THEN  COALESCE(SUM_PREDICT_LOAN_FTP_INC, 0)*IS_SLF  --预测贷款FTP年利润
        WHEN CASE_NAME IN ('财富流失挽回','财富客户拉新') AND IS_CONVERT=1  THEN  (CLS_CHM_MID_AMT+OPN_CHM_MID_AMT)*IS_SLF  --封闭式理财中收 开放式理财中收
        END)  预测FTP年利润增加
    ,SUM(CASE WHEN (CASE_NAME LIKE '%关系树%' OR  CASE_NAME LIKE '%对公拓面%') AND IS_CONVERT=1  THEN RSK_LOAN_AMT
        WHEN CASE_NAME IN ('经营性贷款提额','同业置换','无贷担保人配贷','贷款流失挽回','泰惠收配贷','信用卡配贷','社保贷','大额配卡') AND IS_CONVERT=1  THEN RSK_LOAN_AMT*IS_SLF END ) 本年新发生风险贷款
    ,SUM(CASE WHEN (CASE_NAME LIKE '%关系树%' OR  CASE_NAME LIKE '%对公拓面%') AND IS_CONVERT=1  THEN BT_SUM_CTR_AMT --小企业_授信额度
        WHEN CASE_NAME IN ('同业置换','无贷担保人配贷','贷款流失挽回','泰惠收配贷','信用卡配贷','社保贷','大额配卡') AND IS_CONVERT=1 THEN BT_SUM_CTR_AMT*IS_SLF
        WHEN CASE_NAME IN ('经营性贷款提额') AND IS_CONVERT=1 THEN TOT_ICR_AMT*IS_SLF END  ) 合同金额增加 -- BT_SUM_COM_CTR_AMT 授信额度  BT_SUM_CTR_AMT 小企业_授信额度   TOT_ICR_AMT 提额
     ,SUM(IS_SLF) 客户数
       ,SUM(CASE WHEN CASE_NAME LIKE '%关系树%' OR  CASE_NAME LIKE '%对公拓面%' THEN IS_CONVERT ELSE IS_CONVERT*IS_SLF END) 转化客户数
    ,SUM(CASE WHEN (CASE_NAME LIKE '%关系树%' OR  CASE_NAME LIKE '%对公拓面%' ) AND IS_CONVERT=1  THEN IND_BT_CTR
        WHEN (CASE_NAME NOT LIKE '%关系树%' AND CASE_NAME NOT LIKE '%对公拓面%' ) AND IS_CONVERT=1  THEN IND_BT_COM_CTR*IS_SLF END) 新增贷款客户数
    ,SUM(CASE WHEN (CASE_NAME LIKE '%关系树%' OR  CASE_NAME LIKE '%对公拓面%' ) AND IS_CONVERT=1   THEN IND_BT_DEP_ACT ELSE 0 END) 新开立存款账户数
    ,SUM(CASE WHEN (CASE_NAME LIKE '%配卡%' OR  CASE_NAME IN ('信用卡申请中断挽回','借记卡交易流水挖潜','代发工资户综合经营') ) AND IS_CONVERT=1   THEN IND_CR_CRD_ISU*IS_SLF END) 新增信用卡张数
    ,SUM(CASE WHEN CASE_NAME LIKE '%分期%'  AND IS_CONVERT=1   THEN IND_CR_CRD_INSTM*IS_SLF END) 信用卡分期客户数
    ,SUM(CASE WHEN (CASE_NAME LIKE '%配卡%' OR CASE_NAME IN ('代发工资户综合经营','信用卡申请中断挽回','借记卡交易流水挖潜','信用卡促激活','不动睡眠户促活/清退','贷记卡分期','信用卡消费力提升') ) AND IS_CONVERT=1 THEN DIFF_OVDR_BAL*IS_SLF END) 贷记卡日均垫款增加
    ,SUM(CASE WHEN CASE_NAME LIKE '%配卡%' OR CASE_NAME IN ('信用卡申请中断挽回','借记卡交易流水挖潜','信用卡促激活','不动睡眠户促活/清退','信用卡消费力提升') AND IS_CONVERT=1 THEN DIFF_CC_CSM_AMT*IS_SLF END) 贷记卡日均消费金额增加
    ,SUM(CASE WHEN (CASE_NAME LIKE '%配卡%' OR CASE_NAME IN ('代发工资户综合经营','信用卡申请中断挽回','借记卡交易流水挖潜','贷记卡分期') ) AND IS_CONVERT=1   THEN IND_CR_CRD_INSTM_TRX_AMT*IS_SLF END) 分期交易金额
  FROM    (
     SELECT  *
     FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_AFF_ANLS_DAPAN
     WHERE   ( CASE_NAME NOT LIKE '%续贷%'   AND CASE_NAME NOT LIKE '%信用卡消费力提升%' )
     AND     DT = '20230501'
     AND      EXEC_DATE>='20230101'
     AND      (SAMPLE_CLASS LIKE '%实验%' OR SAMPLE_CLASS IS NULL) and case_phase<>'flex_install_promote06'

    ) T0
                GROUP BY  CASE_NO,CASE_NAME,CASE_PHASE
                ORDER BY CASE_NO,CASE_NAME,CASE_PHASE
**app衍生指标_爬虫指标刷050105180519.sql
DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_PTT_CST_ID;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_PTT_CST_ID

(

    CASE_NAME     STRING COMMENT '用例名称'

    ,DOC_NBR      STRING COMMENT '证件号码'

    ,CST_ID       STRING COMMENT '客户号'

    ,PTT_CST_NM   STRING COMMENT '潜客名称'

    ,SAMPLE_CLASS STRING COMMENT '样本分类'

    ,CONNECT_CHNL       STRING  COMMENT '触达渠道' --(外呼、app push、客户经理)

    ,SCENE_TYPE         STRING  COMMENT '场景分类' --(促首次/促复用)

    ,EXEC_DATE    STRING COMMENT '用例执行日期'

    ,SUM_SCORE          DECIMAL COMMENT '模型分'

    ,UPDATE_DATE  STRING COMMENT '数据更新日期'

    ,PRM_FH_ORG_ID STRING COMMENT '产效归属分行机构号'

    ,PRM_FH_ORG_NM STRING COMMENT '产效归属分行机构名称'

    ,PRM_ZH_ORG_ID STRING COMMENT '产效归属支行机构号'

    ,PRM_ZH_ORG_NM STRING COMMENT '产效归属支行机构名称'

    ,PRM_TD_ORG_ID STRING COMMENT '产效归属团队机构号'

    ,PRM_TD_ORG_NM STRING COMMENT '产效归属团队名称'

    ,PRM_MGR_ID    STRING COMMENT '指定接收客户经理工号'

    ,PRM_EMPE_NM   STRING COMMENT '指定接收客户经理姓名'

    ,INSERT_PSN    STRING COMMENT '维护人'

    ,INSERT_DATE   STRING COMMENT '数据插入日期'

)

COMMENT

'潜客对应客户号'

PARTITIONED BY

(

    CASE_NO     STRING COMMENT '用例编号'

    ,CASE_PHASE STRING COMMENT '用例批次'

);



INSERT OVERWRITE TABLE LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_PTT_CST_ID PARTITION (CASE_NO, CASE_PHASE)

SELECT  T.CASE_NAME

        ,T.DOC_NBR

        ,T1.CST_ID

        ,T.PTT_CST_NM

        ,T.SAMPLE_CLASS

        ,T.CONNECT_CHNL

        ,T.SCENE_TYPE

        ,T.EXEC_DATE

        ,T.SUM_SCORE

        ,'20230501'

        ,T.PRM_FH_ORG_ID

        ,T.PRM_FH_ORG_NM

        ,T.PRM_ZH_ORG_ID

        ,T.PRM_ZH_ORG_NM

        ,T.PRM_TD_ORG_ID

        ,T.PRM_TD_ORG_NM

        ,T.PRM_MGR_ID

        ,T.PRM_EMPE_NM

        ,T.INSERT_PSN

        ,T.INSERT_DATE

        ,T.CASE_NO

        ,T.CASE_PHASE

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_PTT_CST_LIST T --潜客表

LEFT JOIN    (

                 --个人客户

                 SELECT  COALESCE(A.CUST_NO, '')   AS CST_ID --客户号

                         ,COALESCE(B.CERT_TYP, '') AS DOC_TYP_CD --证件类型代码

                         ,COALESCE(B.CERT_NO, '')  AS DOC_NBR --证件号码

                 FROM    edw.ECIF_T00_NOR_CUST_NO_REC A

                 INNER JOIN    edw.ECIF_T00_NOR_CUST_CERT_INFO B

                 ON      A.PARTY_ID = B.PARTY_ID

                 AND     B.DT = '20230501'

                 --AND     B.UPDATED_TS = '9999-12-31 00:00:00' --立英删除

                 WHERE   A.DT = '20230501'

                -- AND     A.UPDATED_TS = '9999-12-31 00:00:00' --立英删除

                 UNION ALL

                 --企业客户

                 SELECT  COALESCE(A.CUST_NO, '')   AS CST_ID --客户号

                         ,COALESCE(B.CERT_TYP, '') AS DOC_TYP_CD --证件类型代码

                         ,COALESCE(B.CERT_NO, '')  AS DOC_NBR --证件号码

                 FROM    edw.ECIF_T00_ORG_CUST_NO_REC A

                 INNER JOIN    edw.ECIF_T00_ORG_CUST_CERT_INFO B

                 ON      A.PARTY_ID = B.PARTY_ID

                 AND     B.DT = '20230501'

                -- AND     B.UPDATED_TS = '9999-12-31 00:00:00' --立英删除

                 WHERE   A.DT = '20230501'

                 --AND     A.UPDATED_TS = '9999-12-31 00:00:00' --立英删除

             ) T1

ON      T.DOC_NBR = T1.DOC_NBR

--AND     T.DOC_TYP_CD = T1.DOC_TYP_CD --证件类型代码  --立英删除

WHERE   T.CASE_NO IS NOT NULL;



--3.3 将有客户号的潜客插入到用例执行名单表,形成产效分析客户总表***重点表*** 将潜客匹配好客户号添加进来

INSERT OVERWRITE TABLE LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_LIST PARTITION (CASE_NO, CASE_PHASE)

SELECT DISTINCT T.CASE_NAME --'用例名称'

        ,T.CST_ID --'客户号'

        ,T.SAMPLE_CLASS --'样本分类'

        ,T.CONNECT_CHNL --'触达渠道' --(外呼、app push、客户经理)

        ,T.SCENE_TYPE --'场景分类' --(促首次/促复用)

        ,T.EXEC_DATE --'用例执行日期'

        ,T.SUM_SCORE --'模型分'

        ,'' --'外呼人员工号' --HAND_EMP_ID

        ,'' --'外呼人员姓名' --HAND_EMP_NM

        ,'' --'外呼小结' --FINISH_STATE

        ,'' --'外呼状态' --有效接通、未接通、未外呼

        ,NULL --'券额'

        ,NULL --'营销模型分'

        ,'' --'营销模型分区间'

        ,NULL --'自主分期评分'

        ,'' --'自主分期评分区间'

        ,'' --'营销模型响应标识'

        ,''  --'自主分期响应标识'

        --管户或产效归属相关字段

        ,T.PRM_FH_ORG_ID --'产效归属分行机构号'

        ,T.PRM_FH_ORG_NM --'产效归属分行机构名称'

        ,T.PRM_ZH_ORG_ID --'产效归属支行机构号'

        ,T.PRM_ZH_ORG_NM --'产效归属支行机构名称'

        ,T.PRM_TD_ORG_ID --'产效归属团队机构号'

        ,T.PRM_TD_ORG_NM --'产效归属团队名称'

        ,T.PRM_MGR_ID --'指定接收客户经理工号'

        ,T.PRM_EMPE_NM --'指定接收客户经理姓名'

        ,T.INSERT_PSN --'维护人'

        ,T.INSERT_DATE --'数据插入日期'

        ,T.CASE_NO

        ,T.CASE_PHASE

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_PTT_CST_ID T

WHERE   T.CASE_NO IS NOT NULL

AND     T.CST_ID IS NOT NULL

;



--4、用例执行名单表_备份

--4.1 DT分区表备份

/*

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_LIST_DT;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_LIST_DT

(

    CASE_NO             STRING  COMMENT '用例编号'

    ,CASE_NAME          STRING  COMMENT '用例名称'

    ,CASE_PHASE         STRING  COMMENT '用例批次'

    ,CST_ID             STRING  COMMENT '客户号'

    ,SAMPLE_CLASS       STRING  COMMENT '样本分类' --(对照组，实验组)

    ,CONNECT_CHNL       STRING  COMMENT '触达渠道' --(外呼、app push、客户经理)

    ,SCENE_TYPE         STRING  COMMENT '场景分类' --(促首次/促复用)

    ,EXEC_DATE          STRING  COMMENT '用例执行日期'

    ,SUM_SCORE          DECIMAL COMMENT '模型分'

    ,CALL_EMP_ID        STRING  COMMENT '外呼人员工号' --HAND_EMP_ID

    ,CALL_EMP_NM        STRING  COMMENT '外呼人员姓名' --HAND_EMP_NM

    ,CALL_RSLT          STRING  COMMENT '外呼小结' --FINISH_STATE

    ,CALL_STATUS        STRING  COMMENT '外呼状态' --有效接通、未接通、未外呼

    ,COUPON_AMT         DECIMAL COMMENT '券额'

    --贷记卡分期需要用到的字段

    ,CMPN_MODL_SCOR     DECIMAL COMMENT '营销模型分'

    ,CMPN_MODL_SCOR_BIN STRING  COMMENT '营销模型分区间'

    ,SLF_INSTM_SCOR     DECIMAL COMMENT '自主分期评分'

    ,SLF_INSTM_SCOR_BIN STRING  COMMENT '自主分期评分区间'

    ,CMPN_MODL_RSP_IND  STRING  COMMENT '营销模型响应标识'

    ,SLF_INSTM_RSP_IND  STRING  COMMENT '自主分期响应标识'

    --管户或产效归属相关字段

    ,PRM_FH_ORG_ID      STRING  COMMENT '主管户分行机构号或产效归属分行机构号'

    ,PRM_FH_ORG_NM      STRING  COMMENT '主管户分行名称或产效归属分行机构名称'

    ,PRM_ZH_ORG_ID      STRING  COMMENT '主管户支行机构号或产效归属支行机构号'

    ,PRM_ZH_ORG_NM      STRING  COMMENT '主管户支行名称或产效归属支行机构名称'

    ,PRM_TD_ORG_ID      STRING  COMMENT '主管户团队机构号或产效归属团队机构号'

    ,PRM_TD_ORG_NM      STRING  COMMENT '主管户团队名称或产效归属团队名称'

    ,PRM_MGR_ID         STRING  COMMENT '主管户客户经理工号或指定接收客户经理工号'

    ,PRM_EMPE_NM        STRING  COMMENT '主管户客户经理姓名或指定接收客户经理姓名'

    ,INSERT_PSN         STRING  COMMENT '维护人'

    ,INSERT_DATE        STRING  COMMENT '数据插入日期'

)

COMMENT

'用例执行名单DT分区表'

PARTITIONED BY

(

    DT STRING COMMENT '日期分区'

);



--删除当天的分区

ALTER TABLE LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_LIST_DT DROP IF EXISTS PARTITION ( DT = '20230501' );



--插入全量数据至当天分区

INSERT INTO LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_LIST_DT PARTITION (DT = '20230501')

SELECT  CASE_NO --'用例编号'

        ,CASE_NAME --'用例名称'

        ,CASE_PHASE --'用例批次'

        ,CST_ID --'客户号'

        ,SAMPLE_CLASS --'样本分类'

        ,CONNECT_CHNL --'触达渠道'

        ,SCENE_TYPE --'场景分类'

        ,EXEC_DATE --'用例执行日期'

        ,SUM_SCORE --'模型分'

        ,CALL_EMP_ID --'外呼人员工号'

        ,CALL_EMP_NM --'外呼人员姓名'

        ,CALL_RSLT --'外呼小结'

        ,CALL_STATUS --'外呼状态'

        ,COUPON_AMT  --'券额'

        --贷记卡分期需要用到的字段

        ,CMPN_MODL_SCOR --'营销模型分'

        ,CMPN_MODL_SCOR_BIN --'营销模型分区间'

        ,SLF_INSTM_SCOR --'自主分期评分'

        ,SLF_INSTM_SCOR_BIN --'自主分期评分区间'

        ,CMPN_MODL_RSP_IND --'营销模型响应标识'

        ,SLF_INSTM_RSP_IND --'自主分期响应标识'

        ,PRM_FH_ORG_ID --'主管户分行机构号或产效归属分行机构号'

        ,PRM_FH_ORG_NM --'主管户分行名称或产效归属分行机构名称'

        ,PRM_ZH_ORG_ID --'主管户支行机构号或产效归属支行机构号'

        ,PRM_ZH_ORG_NM --'主管户支行名称或产效归属支行机构名称'

        ,PRM_TD_ORG_ID --'主管户团队机构号或产效归属团队机构号'

        ,PRM_TD_ORG_NM --'主管户团队名称或产效归属团队名称'

        ,PRM_MGR_ID --'主管户客户经理工号或指定接收客户经理工号'

        ,PRM_EMPE_NM --'主管户客户经理姓名或指定接收客户经理姓名'

        ,INSERT_PSN --'维护人'

        ,INSERT_DATE --'数据插入日期'

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_LIST

WHERE   CASE_NO IS NOT NULL;

*/



--4.2 营销触达台账（仅抽取实验组客户）

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_LIST_MXH;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_LIST_MXH

(

    CASE_NO             STRING  COMMENT '用例编号'

    ,CASE_NAME          STRING  COMMENT '用例名称'

    ,CASE_PHASE         STRING  COMMENT '用例批次'

    ,CST_ID             STRING  COMMENT '客户号'

    ,SAMPLE_CLASS       STRING  COMMENT '样本分类' --(对照组，实验组)

    ,CONNECT_CHNL       STRING  COMMENT '触达渠道' --(外呼、app push、客户经理)

    ,SCENE_TYPE         STRING  COMMENT '场景分类' --(促首次/促复用)

    ,EXEC_DATE          STRING  COMMENT '用例执行日期'

    ,SUM_SCORE          DECIMAL COMMENT '模型分'

    ,CALL_EMP_ID        STRING  COMMENT '外呼人员工号' --HAND_EMP_ID

    ,CALL_EMP_NM        STRING  COMMENT '外呼人员姓名' --HAND_EMP_NM

    ,CALL_RSLT          STRING  COMMENT '外呼小结' --FINISH_STATE

    ,CALL_STATUS        STRING  COMMENT '外呼状态' --有效接通、未接通、未外呼

    ,COUPON_AMT         DECIMAL COMMENT '券额'

    --贷记卡分期需要用到的字段

    ,CMPN_MODL_SCOR     DECIMAL COMMENT '营销模型分'

    ,CMPN_MODL_SCOR_BIN STRING  COMMENT '营销模型分区间'

    ,SLF_INSTM_SCOR     DECIMAL COMMENT '自主分期评分'

    ,SLF_INSTM_SCOR_BIN STRING  COMMENT '自主分期评分区间'

    ,CMPN_MODL_RSP_IND  STRING  COMMENT '营销模型响应标识'

    ,SLF_INSTM_RSP_IND  STRING  COMMENT '自主分期响应标识'

    ,PRM_FH_ORG_ID      STRING  COMMENT '主管户分行机构号或产效归属分行机构号'

    ,PRM_FH_ORG_NM      STRING  COMMENT '主管户分行名称或产效归属分行机构名称'

    ,PRM_ZH_ORG_ID      STRING  COMMENT '主管户支行机构号或产效归属支行机构号'

    ,PRM_ZH_ORG_NM      STRING  COMMENT '主管户支行名称或产效归属支行机构名称'

    ,PRM_TD_ORG_ID      STRING  COMMENT '主管户团队机构号或产效归属团队机构号'

    ,PRM_TD_ORG_NM      STRING  COMMENT '主管户团队名称或产效归属团队名称'

    ,PRM_MGR_ID         STRING  COMMENT '主管户客户经理工号或指定接收客户经理工号'

    ,PRM_EMPE_NM        STRING  COMMENT '主管户客户经理姓名或指定接收客户经理姓名'

    ,INSERT_PSN         STRING  COMMENT '维护人'

    ,INSERT_DATE        STRING  COMMENT '数据插入日期'

)

COMMENT

'营销用例触达台账';



INSERT OVERWRITE TABLE LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_LIST_MXH

SELECT  CASE_NO --'用例编号'

        ,CASE_NAME --'用例名称'

        ,CASE_PHASE --'用例批次'

        ,CST_ID --'客户号'

        ,SAMPLE_CLASS --'样本分类' --(对照组，实验组)

        ,CONNECT_CHNL --'触达渠道' --(外呼、app push、客户经理)

        ,SCENE_TYPE --'场景分类' --(促首次/促复用)

        ,EXEC_DATE --'用例执行日期'

        ,SUM_SCORE --'模型分'

        ,CALL_EMP_ID --'外呼人员工号' --HAND_EMP_ID

        ,CALL_EMP_NM --'外呼人员姓名' --HAND_EMP_NM

        ,CALL_RSLT --'外呼小结' --FINISH_STATE

        ,CALL_STATUS --'外呼状态' --有效接通、未接通、未外呼

        ,COUPON_AMT  --'券额'

        --贷记卡分期需要用到的字段

        ,CMPN_MODL_SCOR --'营销模型分'

        ,CMPN_MODL_SCOR_BIN --'营销模型分区间'

        ,SLF_INSTM_SCOR --'自主分期评分'

        ,SLF_INSTM_SCOR_BIN --'自主分期评分区间'

        ,CMPN_MODL_RSP_IND --'营销模型响应标识'

        ,SLF_INSTM_RSP_IND --'自主分期响应标识'

        ,PRM_FH_ORG_ID --'主管户分行机构号或产效归属分行机构号'

        ,PRM_FH_ORG_NM --'主管户分行名称或产效归属分行机构名称'

        ,PRM_ZH_ORG_ID --'主管户支行机构号或产效归属支行机构号'

        ,PRM_ZH_ORG_NM --'主管户支行名称或产效归属支行机构名称'

        ,PRM_TD_ORG_ID --'主管户团队机构号或产效归属团队机构号'

        ,PRM_TD_ORG_NM --'主管户团队名称或产效归属团队名称'

        ,PRM_MGR_ID --'主管户客户经理工号或指定接收客户经理工号'

        ,PRM_EMPE_NM --'主管户客户经理姓名或指定接收客户经理姓名'

        ,INSERT_PSN --'维护人'

        ,INSERT_DATE --'数据插入日期'

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_LIST

WHERE   CASE_NO IS NOT NULL

AND     SAMPLE_CLASS LIKE '%实验组%';





----/* 二、产效统计之前的准备工作 */----

--1、用例观察期结束日期

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_DUE_DATE;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_DUE_DATE AS

SELECT  T.CASE_NO

        ,T.CASE_NAME

        ,T.CASE_PHASE

        ,T.CST_ID

        ,T.EXEC_DATE --用例执行日期

        ,T1.DUE_DATE --用例截止日期

        ,CASE

           WHEN T1.DUE_DATE <= '20230501' THEN T1.DUE_DATE

           ELSE '20230501'

         END AS ADJUST_DUE_DATE

        ,T1.INIT_DATE --取数日期

		,T.PRM_FH_ORG_ID --'产效归属分行机构号'

        ,T.PRM_FH_ORG_NM --'产效归属分行机构名称'

        ,T.PRM_ZH_ORG_ID --'产效归属支行机构号'

        ,T.PRM_ZH_ORG_NM --'产效归属支行机构名称'

        ,T.PRM_TD_ORG_ID --'产效归属团队机构号'

        ,T.PRM_TD_ORG_NM --'产效归属团队名称'

        ,T.PRM_MGR_ID --'指定接收客户经理工号'

        ,T.PRM_EMPE_NM --'指定接收客户经理姓名'

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_LIST T

LEFT JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_RECORD T1

ON      T.CASE_NO = T1.CASE_NO

AND     T.CASE_PHASE = T1.CASE_PHASE

AND     T1.CASE_NO IS NOT NULL

WHERE   T.CASE_NO IS NOT NULL;



--添加表注释

ALTER TABLE LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_DUE_DATE SET COMMENT '用例截止日期';





--2、各用例最小执行日期，最小执行日期前30天，最小执行日期前90天

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_MIN_EXEC_DATE;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_MIN_EXEC_DATE AS

SELECT  MIN(T.EXEC_DATE)                                                                 AS MIN_EXEC_DATE --最小执行日期

        ,MIN(TO_CHAR(DATEADD(TO_DATE(T.EXEC_DATE, 'yyyymmdd'), - 30, 'DD'), 'yyyymmdd')) AS L30D_MIN_EXEC_DATE

        ,MIN(TO_CHAR(DATEADD(TO_DATE(T.EXEC_DATE, 'yyyymmdd'), - 90, 'DD'), 'yyyymmdd')) AS L90D_MIN_EXEC_DATE

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_DUE_DATE T

--数据铺底之后放开，只更新未到期用例

--WHERE T.ADJUST_DUE_DATE = '20230501'

;



--3、生成关联人关系表

--统计产效的对象有三种情况：

--①只统计客户本人；

--②统计客户本人+同一风险控制号下的关联人；

--③统计客户本人+同一风险控制号下的关联人+亲密关系人（配偶、子女、企业法人/实际控制人）。



--3.1 同一风险控制号下客户

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_RSK_CST;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_RSK_CST AS

SELECT  T.CST_ID

        ,COALESCE(T2.CST_ID, T.CST_ID) AS REL_CST_ID --同一风险控制号的客户号 （含本人）

        ,'1'                           AS REL_TYP_CD --同一风险控制号

        ,'同一风险控制号'              AS REL_TYP

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_DUE_DATE T

LEFT JOIN    EDW.DWS_CST_BAS_INF_DD T1

ON      T.CST_ID = T1.CST_ID

AND     T1.DT = '20230501'

LEFT JOIN    EDW.DWS_CST_BAS_INF_DD T2

ON      T1.SAM_RSK_CTRL_ID = T2.SAM_RSK_CTRL_ID

AND     TRIM(T2.SAM_RSK_CTRL_ID) <> ''

AND     T2.DT = '20230501'

WHERE   T.CST_ID IS NOT NULL;



--3.2 亲密关系人（0301-配偶,0303-子女,0101-法定代表人（高管）,0109-实际控制人（高管））

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_REL_PTY_CST;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_REL_PTY_CST AS

SELECT  DISTINCT CST_ID

                 ,REL_CST_ID

                 ,'2'     AS REL_TYP_CD

                 ,'亲密关系人' AS REL_TYP

FROM    (

            SELECT  T.CST_ID

                    ,T1.REL_CST_ID --配偶、子女

            FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_DUE_DATE t

            LEFT JOIN    EDW.DIM_CST_REL_INF_DD T1

            ON      T.CST_ID = T1.CST_ID

            AND     T1.DT = '20230501'

            AND     T1.REL_TYP_CD IN ( '0301' , '0303' )

            UNION ALL

            SELECT  T.CST_ID

                    ,T1.CST_ID AS REL_CST_ID --作为法人、实际控制人的企业

            FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_DUE_DATE T

            LEFT JOIN    EDW.DIM_CST_REL_INF_DD T1

            ON      T.CST_ID = T1.REL_CST_ID

            AND     T1.DT = '20230501'

            AND     T1.REL_TYP_CD IN ( '0101' , '0109' )

            UNION ALL

            --当cst_id是企业客户时

            SELECT  T.CST_ID

                    ,T1.REL_CST_ID --企业法人、实际控制人

            FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_DUE_DATE T

            LEFT JOIN    EDW.DIM_CST_REL_INF_DD T1

            ON      T.CST_ID = T1.CST_ID

            AND     T1.DT = '20230501'

            AND     T1.REL_TYP_CD IN ( '0101' , '0109' )



            --因dwd_cst_rel_inf_dd和dim_cst_rel_inf_dd两张表数据有交叉又有遗漏，都取了

            UNION ALL

            SELECT  T.CST_ID

                    ,T1.REL_CST_ID --配偶、子女

            FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_DUE_DATE T

            LEFT JOIN    EDW.DWD_CST_REL_INF_DD T1

            ON      T.CST_ID = T1.CST_ID

            AND     T1.DT = '20230501'

            AND     REL_REL_CD IN ( '0301' , '0303' )

            UNION ALL

            SELECT  T.CST_ID

                    ,T1.CST_ID AS REL_CST_ID --作为法人、实际控制人的企业

            FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_DUE_DATE T

            LEFT JOIN    EDW.DWD_CST_REL_INF_DD T1

            ON      T.CST_ID = T1.REL_CST_ID

            AND     T1.DT = '20230501'

            AND     REL_REL_CD IN ( '0101' , '0109' )

            UNION ALL

            --当cst_id是企业客户时

            SELECT  T.CST_ID

                    ,T1.REL_CST_ID --企业法人、实际控制人

            FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_DUE_DATE T

            LEFT JOIN    EDW.DWD_CST_REL_INF_DD T1

            ON      T.CST_ID = T1.CST_ID

            AND     T1.DT = '20230501'

            AND     REL_REL_CD IN ( '0101' , '0109' )

        ) T

WHERE TRIM(REL_CST_ID) <>''

;



--3.3 关系人表

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_REL_CST;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_REL_CST AS

SELECT  CST_ID

        ,REL_CST_ID

        ,MAX(CASE

               WHEN CST_ID = REL_CST_ID AND CST_ID IS NOT NULL THEN '1'

               ELSE '0'

             END) AS IS_SLF --是否本人

        ,MAX(CASE

               WHEN REL_TYP_CD = '1' AND CST_ID <> REL_CST_ID THEN '1'

               ELSE '0'

             END) AS IS_SAM_RSK --是否同一风险控制号

        ,MAX(CASE

               WHEN REL_TYP_CD = '2' AND CST_ID <> REL_CST_ID THEN '1'

               ELSE '0'

             END) AS IS_REL_PTY --是否关联人

FROM    (

            SELECT  *

            FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_RSK_CST

            UNION ALL

            SELECT  *

            FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_REL_PTY_CST

        ) T

GROUP BY CST_ID , REL_CST_ID;





--3.4 各用例客户与关系人表 **重点！！！产效主表**

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_REL;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_REL AS

SELECT distinct T.CASE_NO

        ,T.CASE_NAME

        ,T.CASE_PHASE

        ,T.CST_ID

        ,T.EXEC_DATE

        ,T.ADJUST_DUE_DATE

		,T.DUE_DATE --用例截止日期

        ,T.INIT_DATE --取数日期

        ,T1.REL_CST_ID --关联人

        ,T1.IS_SLF --是否本人

        ,T1.IS_SAM_RSK --是否同一风险控制号

        ,T1.IS_REL_PTY --是否关联人

		,T.PRM_FH_ORG_ID --'产效归属分行机构号'

        ,T.PRM_FH_ORG_NM --'产效归属分行机构名称'

        ,T.PRM_ZH_ORG_ID --'产效归属支行机构号'

        ,T.PRM_ZH_ORG_NM --'产效归属支行机构名称'

        ,T.PRM_TD_ORG_ID --'产效归属团队机构号'

        ,T.PRM_TD_ORG_NM --'产效归属团队名称'

        ,T.PRM_MGR_ID --'指定接收客户经理工号'

        ,T.PRM_EMPE_NM --'指定接收客户经理姓名'

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_DUE_DATE T

INNER JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_REL_CST T1 --关联关系表

ON      T.CST_ID = T1.CST_ID

--where T.EXEC_DATE<='20230501'

--and T.ADJUST_DUE_DATE>='20230501'

;

--SELECT count(*),count(distinct cst_id) FROM LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_REL ; --3743120	1313991



----/* 三、产效统计:贷款 */----

--1、转化标准为产生新的贷款合同（需限制合同发放日期在用例执行日期之后）

--无贷担保人配贷 &amp; 贷款流失挽回 &amp; 泰惠收配贷 &amp; 信用卡配贷



--经营性贷款提额用到这段代码，因为泰惠收配贷和信用卡配贷也有用到，所以提前跑。







--改成分区表

/*

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_17;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_17

(

    BUS_CTR_ID              STRING  COMMENT '合同号'

    ,ACTL_START_USE_CRD_LMT DECIMAL COMMENT '实际启用授信额度'

)

COMMENT

'每个dt每个合同的实际启用额度'

PARTITIONED BY

(

    DT STRING COMMENT '日期分区'

);



INSERT OVERWRITE TABLE LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_17 PARTITION (DT) --数据铺底后改为DT='20230501'

SELECT

        T.BUS_CTR_ID

        ,SUM(T.ACTL_START_USE_CRD_LMT) AS ACTL_START_USE_CRD_LMT --实际启用授信额度

        ,T.DT

FROM    (

            SELECT  DT

                    ,BUS_CTR_ID

                    ,CRC_INF_STG_ID --循环信息阶段号

                    ,ACTL_START_USE_CRD_LMT --实际启用授信额度

                    ,ROW_NUMBER() OVER ( PARTITION BY DT , BUS_CTR_ID , CRC_INF_STG_ID ORDER BY SRL_NBR DESC ) AS ROW_NO

            FROM    EDW.DIM_BUS_LOAN_CRC_CTR_INF_DD --循环贷款合同信息

            WHERE



           -- ！数据铺底后去掉下面的限制条件，上面改为DT='20230501'

                DT >= (SELECT L90D_MIN_EXEC_DATE FROM LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_MIN_EXEC_DATE)

            AND     DT <= '20230501'

        ) T

WHERE   T.ROW_NO = 1

GROUP BY T.BUS_CTR_ID,dt;

*/







--1.1 新发放合同借据详情

--5min

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_01;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_01

(

    CASE_NO               STRING  COMMENT '用例编号'

    ,CASE_NAME            STRING  COMMENT '用例名称'

    ,CASE_PHASE           STRING  COMMENT '用例批次'

    ,CST_ID               STRING  COMMENT '客户号'

    ,EXEC_DATE            STRING  COMMENT '用例执行日期'

    ,ADJUST_DUE_DATE      STRING  COMMENT '用例截止日期'

    ,REL_CST_ID           STRING  COMMENT '关联人'

    ,IS_SLF               STRING  COMMENT '是否本人'

    ,IS_SAM_RSK           STRING  COMMENT '是否同一风险控制号'

    ,IS_REL_PTY           STRING  COMMENT '是否关联人'

    ,BT_APL_ID            STRING  COMMENT '申请流水号'

    ,BT_APL_HPN_DT        STRING  COMMENT '申请发生日期'

    ,BT_BUS_CTR_ID        STRING  COMMENT '合同编号'

    ,IS_BT_COM_LOAN       STRING  COMMENT '是否一般贷款'

    ,BT_PD_NM             STRING  COMMENT '产品类型'

    ,BT_CTR_HPN_DT        STRING  COMMENT '合同发生日期'

    ,BT_CTR_APNT_START_DT STRING  COMMENT '合同约定开始日期'

    ,BT_CTR_APNT_MTU_DT   STRING  COMMENT '合同约定到期日期'

    ,BT_CTR_AMT           DECIMAL COMMENT '合同金额'

    ,BT_CTR_BAL           DECIMAL COMMENT '合同余额'

    ,BT_BIND_AMT          DECIMAL COMMENT '实际启用授信额度'

    ,BT_DBIL_ID           STRING  COMMENT '借据编号'

    ,BT_DBIL_DTRB_DT      STRING  COMMENT '借据发放日期'

    ,BT_DBIL_APNT_MTU_DAY STRING  COMMENT '借据约定到期日'

    ,BT_DBIL_AMT          DECIMAL COMMENT '借据发放金额'

    ,BT_DBIL_PRCP_BAL     DECIMAL COMMENT '借据本金余额'

    ,BT_DBIL_END_DT       STRING  COMMENT '借据结清日期'

    ,BT_DBIL_DTRB_DAYS    BIGINT  COMMENT '借据发放天数'

    ,RELOAN_CTR_ID        STRING  COMMENT '续贷合同号'

    ,LOAN_SRC             STRING  COMMENT '贷款来源'

)

COMMENT

'用例新发放合同借据表';



INSERT INTO LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_01

SELECT  T.CASE_NO

        ,T.CASE_NAME

        ,T.CASE_PHASE

        ,T.CST_ID

        ,T.EXEC_DATE

        ,T.ADJUST_DUE_DATE

        ,T.REL_CST_ID --关联人

        ,T.IS_SLF --是否本人

        ,T.IS_SAM_RSK --是否同一风险控制号

        ,T.IS_REL_PTY --是否关联人

        ,T2.APL_ID                                                                               AS BT_APL_ID --'申请流水号'

        ,T2.HPN_DT                                                                               AS BT_APL_HPN_DT --申请发生日期

        ,T3.BUSI_CTR_ID                                                                          AS BT_BUS_CTR_ID --合同编号

        ,CASE

           WHEN ( SUBSTR(T2.PD_ID, 1, 9) IN ( '201050101' , '201050102' , '201040101' , '201040102' , '201040106' ) OR SUBSTR(T2.PD_ID, 1, 7) = '2010503' ) THEN '1'

           ELSE '0'

         END                                                                                     AS IS_BT_COM_LOAN --是否一般贷款

        ,CASE

           WHEN T3.BUSI_CTR_ID IS NOT NULL AND SUBSTR(T3.PD_CD, 1, 7) = '2010503'                                          THEN '随贷通'

           WHEN T3.BUSI_CTR_ID IS NOT NULL AND T3.PD_CD IN ( '201050101040348' , '201050102010146' )                       THEN '泰e贷'

           WHEN T3.BUSI_CTR_ID IS NOT NULL AND T3.CRC_IND = '1' AND T3.IS_SLF_CRC = '1' AND T3.CYC_TYP_CD IN ( '1' , '2' ) THEN '融e贷'

           WHEN T3.BUSI_CTR_ID IS NOT NULL                                                                                 THEN '其他'

           ELSE ''

         END                                                                                     AS BT_PD_NM --产品类型

        ,T3.HPN_DT                                                                               AS BT_CTR_HPN_DT --合同发生日期

        ,T3.APNT_START_DT                                                                        AS BT_CTR_APNT_START_DT --合同约定开始日期

        ,T3.APNT_MTU_DT                                                                          AS BT_CTR_APNT_MTU_DT --合同约定到期日期

        ,T3.CTR_AMT                                                                              AS BT_CTR_AMT --合同金额

        ,T3.CTR_BAL                                                                              AS BT_CTR_BAL --合同余额

        ,CASE

           WHEN SUBSTR(T3.PD_CD, 1, 7) = '2010503' THEN T6.BIND_LMT

           ELSE COALESCE(T5.ACTL_START_USE_CRD_LMT, T3.CTR_AMT)

         END                                                                                     AS BT_BIND_AMT --实际启用授信额度

        ,T4.DBIL_ID                                                                              AS BT_DBIL_ID --借据编号

        ,T4.DTRB_DT                                                                              AS BT_DBIL_DTRB_DT --借据发放日期

        ,T4.APNT_MTU_DAY                                                                         AS BT_DBIL_APNT_MTU_DAY --借据约定到期日

        ,T4.AMT                                                                                  AS BT_DBIL_AMT --借据发放金额

        ,T4.PRCP_BAL                                                                             AS BT_DBIL_PRCP_BAL --借据本金余额

        ,T4.END_DT                                                                               AS BT_DBIL_END_DT --借据结清日期

        ,DATEDIFF(TO_DATE(T.ADJUST_DUE_DATE, 'yyyymmdd'), TO_DATE(T4.DTRB_DT, 'yyyymmdd'), 'DD') AS BT_DBIL_DTRB_DAYS --借据发放天数

        ,T7.RELOAN_CTR_ID --续贷合同号

        ,CASE WHEN T7.RELOAN_CTR_ID IS NOT NULL AND T3.BUSI_CTR_ID = T7.RELOAN_CTR_ID AND T3.PD_CD IN ( '201050101040348' , '201050102010146' ) AND T3.HPN_DT >= T7.REG_DT THEN '纯线上'

              WHEN T3.BUSI_CTR_ID <> T7.RELOAN_CTR_ID AND  T3.HPN_DT >= T7.REG_DT  --转线下(进件后30天内放贷款)

               AND DATEDIFF(TO_DATE(T3.HPN_DT, 'YYYYMMDD'), TO_DATE(T7.REG_DT, 'YYYYMMDD'), 'DD') <= 30 THEN '转线下'

              ELSE NULL END AS LOAN_SRC --贷款来源

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_REL T

LEFT JOIN    EDW.DWD_BUS_LOAN_APL_INF_DD T2 --信贷业务申请信息表

ON      T.REL_CST_ID = T2.CST_ID

AND     T2.DT <= '20230501'

AND     T2.DT = T.ADJUST_DUE_DATE

AND     T2.DT IN (

                     SELECT  DISTINCT ADJUST_DUE_DATE

                     FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_DUE_DATE

                 )

AND     T2.HPN_DT >= T.EXEC_DATE

AND     T2.HPN_DT <= T.ADJUST_DUE_DATE

LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_INF_DD T3 --信贷合同信息表

ON      T.REL_CST_ID = T3.CST_ID

AND     T2.APL_ID = T3.BUSI_APL_ID

AND     T3.DT <= '20230501'

AND     T3.DT = T.ADJUST_DUE_DATE

AND     T3.DT IN (

                     SELECT  DISTINCT ADJUST_DUE_DATE

                     FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_DUE_DATE

                 )

AND     T3.HPN_DT >= T.EXEC_DATE

AND     T3.HPN_DT <= T.ADJUST_DUE_DATE

LEFT JOIN    EDW.DWS_BUS_LOAN_DBIL_INF_DD T4 --借据表

ON      T.REL_CST_ID = T4.CST_ID

AND     T3.BUSI_CTR_ID = T4.BUS_CTR_ID

AND     T4.DT <= '20230501'

AND     T4.DT = T.ADJUST_DUE_DATE

AND     T4.DT IN (

                     SELECT  DISTINCT ADJUST_DUE_DATE

                     FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_DUE_DATE

                 )

AND     T4.DTRB_DT >= T.EXEC_DATE

AND     T4.DTRB_DT <= T.ADJUST_DUE_DATE

LEFT JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_17 T5

ON      T3.BUSI_CTR_ID = T5.BUS_CTR_ID

AND     T5.DT = '20230501'

LEFT JOIN    EDW.DWD_BUS_LOAN_FNC_CRD_LMT_INF_DD T6 --随贷通授信额度信息

ON      T3.CST_ID = T6.CST_ID

AND     T3.BUSI_CTR_ID = T6.BUS_CTR_ID

AND     T6.DT = '20230501'

LEFT JOIN    (

                 SELECT  CST_ID

                        ,DT

                        ,RELOAN_CTR_ID --续贷合同号

                        ,REPLACE(SPLIT_PART(REG_TM, ' ', 1), '/', '') AS REG_DT --登记日期

                        ,ROW_NUMBER() OVER ( PARTITION BY CST_ID , DT ORDER BY REG_TM , RELOAN_CTR_ID DESC ) AS ROW_NO  --按照cst_id取最新申请单

                 FROM    EDW.DWD_BUS_LOAN_ENTR_FORM_DD --信贷业务进件单信息

                 WHERE   DT <= '20230501'

                 AND     DT >= (SELECT MIN_EXEC_DATE FROM LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_MIN_EXEC_DATE)

                 AND     DT IN (

                     SELECT  DISTINCT ADJUST_DUE_DATE

                     FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_DUE_DATE

                 )

             ) T7

ON      T.REL_CST_ID = T7.CST_ID

AND     T.ADJUST_DUE_DATE = T7.DT

AND     T7.REG_DT >= T.EXEC_DATE

AND     T7.REG_DT <= T.ADJUST_DUE_DATE

AND     T7.ROW_NO = 1

--数据铺底之后放开

--WHERE   T.ADJUST_DUE_DATE >= '20230501'

;



--1.2 客户转化情况

--1.2.1 是否转化&amp;借据额度

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_02;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_02 AS

SELECT  CASE_NO

        ,CASE_NAME

        ,CASE_PHASE

        ,CST_ID

        ,REL_CST_ID

        --普惠限制一般贷款

        ,MAX(CASE

               WHEN T.BT_APL_ID IS NOT NULL AND T.IS_BT_COM_LOAN = '1' THEN '1'

               ELSE '0'

             END)               AS IS_BT_COM_APL --是否发生申请

        ,MAX(CASE

               WHEN T.BT_BUS_CTR_ID IS NOT NULL AND T.IS_BT_COM_LOAN = '1' THEN '1'

               ELSE '0'

             END)               AS IS_BT_COM_CTR --是否发生合同

        ,MAX(CASE

               WHEN T.BT_DBIL_ID IS NOT NULL AND T.IS_BT_COM_LOAN = '1' THEN '1'

               ELSE '0'

             END)               AS IS_BT_COM_DBIL --是否发生借据

        ,MAX(CASE

               WHEN T.BT_PD_NM = '随贷通' AND T.BT_APL_ID IS NOT NULL AND T.IS_BT_COM_LOAN = '1' THEN '1'

               ELSE '0'

             END)               AS IS_SDT_BT_APL --是否发生随贷通申请

        ,MAX(CASE

               WHEN T.BT_PD_NM = '随贷通' AND T.BT_BUS_CTR_ID IS NOT NULL AND T.IS_BT_COM_LOAN = '1' THEN '1'

               ELSE '0'

             END)               AS IS_SDT_BT_CTR --是否发生随贷通合同

        ,MAX(CASE

               WHEN T.BT_PD_NM = '随贷通' AND T.BT_DBIL_ID IS NOT NULL AND T.IS_BT_COM_LOAN = '1' THEN '1'

               ELSE '0'

             END)               AS IS_SDT_BT_DBIL --是否发生随贷通借据

        ,MAX(CASE

               WHEN T.BT_PD_NM = '泰e贷' AND T.BT_APL_ID IS NOT NULL AND T.IS_BT_COM_LOAN = '1' THEN '1'

               ELSE '0'

             END)               AS IS_TED_BT_APL --是否发生泰e贷申请

        ,MAX(CASE

               WHEN T.BT_PD_NM = '泰e贷' AND T.BT_BUS_CTR_ID IS NOT NULL AND T.IS_BT_COM_LOAN = '1' THEN '1'

               ELSE '0'

             END)               AS IS_TED_BT_CTR --是否发生泰e贷合同

        ,MAX(CASE

               WHEN T.BT_PD_NM = '泰e贷' AND T.BT_DBIL_ID IS NOT NULL AND T.IS_BT_COM_LOAN = '1' THEN '1'

               ELSE '0'

             END)               AS IS_TED_BT_DBIL --是否发生泰e贷借据

        ,MAX(CASE

               WHEN T.BT_PD_NM = '融e贷' AND T.BT_APL_ID IS NOT NULL AND T.IS_BT_COM_LOAN = '1' THEN '1'

               ELSE '0'

             END)               AS IS_RED_BT_APL --是否发生融e贷申请

        ,MAX(CASE

               WHEN T.BT_PD_NM = '融e贷' AND T.BT_BUS_CTR_ID IS NOT NULL AND T.IS_BT_COM_LOAN = '1' THEN '1'

               ELSE '0'

             END)               AS IS_RED_BT_CTR --是否发生融e贷合同

        ,MAX(CASE

               WHEN T.BT_PD_NM = '融e贷' AND T.BT_DBIL_ID IS NOT NULL AND T.IS_BT_COM_LOAN = '1' THEN '1'

               ELSE '0'

             END)               AS IS_RED_BT_DBIL --是否发生融e贷借据

        ,COALESCE(MIN(CASE

                        WHEN TRIM(T.BT_APL_HPN_DT) <> '' AND T.IS_BT_COM_LOAN = '1' THEN T.BT_APL_HPN_DT

                      END), '') AS BT_COM_APL_HPN_DT --申请发生日期

        ,COALESCE(MIN(CASE

                        WHEN TRIM(T.BT_CTR_HPN_DT) <> '' AND T.IS_BT_COM_LOAN = '1' THEN T.BT_CTR_HPN_DT

                      END), '') AS BT_COM_CTR_HPN_DT --合同发生日期

        ,COALESCE(MIN(CASE

                        WHEN TRIM(T.BT_DBIL_DTRB_DT) <> '' AND T.IS_BT_COM_LOAN = '1' THEN T.BT_DBIL_DTRB_DT

                      END), '') AS BT_COM_DBIL_DTRB_DT --借据发生日期

        ,COALESCE(MIN(CASE

                        WHEN T.BT_PD_NM = '随贷通' AND TRIM(T.BT_APL_HPN_DT) <> '' AND T.IS_BT_COM_LOAN = '1' THEN T.BT_APL_HPN_DT

                      END), '') AS BT_SDT_APL_HPN_DT --随贷通申请发生日期

        ,COALESCE(MIN(CASE

                        WHEN T.BT_PD_NM = '随贷通' AND TRIM(T.BT_CTR_HPN_DT) <> '' AND T.IS_BT_COM_LOAN = '1' THEN T.BT_CTR_HPN_DT

                      END), '') AS BT_SDT_CTR_HPN_DT --随贷通合同发生日期

        ,COALESCE(MIN(CASE

                        WHEN T.BT_PD_NM = '随贷通' AND TRIM(T.BT_DBIL_DTRB_DT) <> '' AND T.IS_BT_COM_LOAN = '1' THEN T.BT_DBIL_DTRB_DT

                      END), '') AS BT_SDT_DBIL_DTRB_DT --随贷通借据发生日期

        ,COALESCE(MIN(CASE

                        WHEN T.BT_PD_NM = '泰e贷' AND TRIM(T.BT_APL_HPN_DT) <> '' AND T.IS_BT_COM_LOAN = '1' THEN T.BT_APL_HPN_DT

                      END), '') AS BT_TED_APL_HPN_DT --泰e贷申请发生日期

        ,COALESCE(MIN(CASE

                        WHEN T.BT_PD_NM = '泰e贷' AND TRIM(T.BT_CTR_HPN_DT) <> '' AND T.IS_BT_COM_LOAN = '1' THEN T.BT_CTR_HPN_DT

                      END), '') AS BT_TED_CTR_HPN_DT --泰e贷合同发生日期

        ,COALESCE(MIN(CASE

                        WHEN T.BT_PD_NM = '泰e贷' AND TRIM(T.BT_DBIL_DTRB_DT) <> '' AND T.IS_BT_COM_LOAN = '1' THEN T.BT_DBIL_DTRB_DT

                      END), '') AS BT_TED_DBIL_DTRB_DT --泰e贷借据发生日期

        ,COALESCE(MIN(CASE

                        WHEN T.BT_PD_NM = '融e贷' AND TRIM(T.BT_APL_HPN_DT) <> '' AND T.IS_BT_COM_LOAN = '1' THEN T.BT_APL_HPN_DT

                      END), '') AS BT_RED_APL_HPN_DT --融e贷申请发生日期

        ,COALESCE(MIN(CASE

                        WHEN T.BT_PD_NM = '融e贷' AND TRIM(T.BT_CTR_HPN_DT) <> '' AND T.IS_BT_COM_LOAN = '1' THEN T.BT_CTR_HPN_DT

                      END), '') AS BT_RED_CTR_HPN_DT --融e贷合同发生日期

        ,COALESCE(MIN(CASE

                        WHEN T.BT_PD_NM = '融e贷' AND TRIM(T.BT_DBIL_DTRB_DT) <> '' AND T.IS_BT_COM_LOAN = '1' THEN T.BT_DBIL_DTRB_DT

                      END), '') AS BT_RED_DBIL_DTRB_DT --融e贷借据发生日期

        ,SUM(CASE

               WHEN T.IS_BT_COM_LOAN = '1' THEN BT_DBIL_AMT

               ELSE 0

             END)               AS BT_SUM_COM_DBIL_AMT --借据发放金额

        ,SUM(CASE

               WHEN T.IS_BT_COM_LOAN = '1' THEN BT_DBIL_PRCP_BAL

               ELSE 0

             END)               AS BT_SUM_COM_DBIL_BAL --借据本金余额

        ,SUM(CASE

               WHEN T.BT_PD_NM = '随贷通' AND T.IS_BT_COM_LOAN = '1' THEN BT_DBIL_AMT

               ELSE 0

             END)               AS BT_SUM_SDT_DBIL_AMT --随贷通借据发放金额

        ,SUM(CASE

               WHEN T.BT_PD_NM = '随贷通' AND T.IS_BT_COM_LOAN = '1' THEN BT_DBIL_PRCP_BAL

               ELSE 0

             END)               AS BT_SUM_SDT_DBIL_BAL --随贷通借据本金余额

        ,SUM(CASE

               WHEN T.BT_PD_NM = '泰e贷' AND T.IS_BT_COM_LOAN = '1' THEN BT_DBIL_AMT

               ELSE 0

             END)               AS BT_SUM_TED_DBIL_AMT --泰e贷借据发放金额

        ,SUM(CASE

               WHEN T.BT_PD_NM = '泰e贷' AND T.IS_BT_COM_LOAN = '1' THEN BT_DBIL_PRCP_BAL

               ELSE 0

             END)               AS BT_SUM_TED_DBIL_BAL --泰e贷借据本金余额

        ,SUM(CASE

               WHEN T.BT_PD_NM = '融e贷' AND T.IS_BT_COM_LOAN = '1' THEN BT_DBIL_AMT

               ELSE 0

             END)               AS BT_SUM_RED_DBIL_AMT --融e贷借据发放金额

        ,SUM(CASE

               WHEN T.BT_PD_NM = '融e贷' AND T.IS_BT_COM_LOAN = '1' THEN BT_DBIL_PRCP_BAL

               ELSE 0

             END)               AS BT_SUM_RED_DBIL_BAL  --融e贷借据本金余额

        --小企业不限制一般贷款

        ,MAX(CASE

               WHEN T.BT_BUS_CTR_ID IS NOT NULL THEN '1'

               ELSE '0'

             END)               AS IS_BT_CTR --小企业_是否发生合同

        ,MIN(CASE

               WHEN TRIM(T.BT_CTR_HPN_DT) <> '' THEN T.BT_CTR_HPN_DT

             END)               AS BT_CTR_HPN_DT --小企业_合同发生日期

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_01 T

WHERE   CASE_NO IS NOT NULL

GROUP BY CASE_NO , CASE_NAME , CASE_PHASE , CST_ID , REL_CST_ID;



--1.2.2 合同金额、合同余额

--为什么额度单独统计，不与上一段合并？因为要统计的是合同额度，明细表以借据号为主键，一个合同可能有多笔借据，直接汇总不对，所以合同号去重后再汇总。。

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_03;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_03 AS

SELECT  CASE_NO

        ,CASE_NAME

        ,CASE_PHASE

        ,CST_ID

        ,REL_CST_ID

        --普惠限制一般贷款

        ,SUM(CASE

               WHEN T.IS_BT_COM_LOAN = '1' THEN BT_CTR_AMT

               ELSE 0

             END)                     AS BT_SUM_COM_CTR_AMT --授信额度

        ,SUM(CASE

               WHEN T.IS_BT_COM_LOAN = '1' THEN BT_CTR_BAL

               ELSE 0

             END)                     AS BT_SUM_COM_CTR_BAL --用信额度

        ,SUM(CASE

               WHEN BT_PD_NM = '随贷通' AND T.IS_BT_COM_LOAN = '1' THEN BT_CTR_AMT

               ELSE 0

             END)                     AS BT_SUM_SDT_CTR_AMT --随贷通授信额度

        ,SUM(CASE

               WHEN BT_PD_NM = '随贷通' AND T.IS_BT_COM_LOAN = '1' THEN BT_CTR_BAL

               ELSE 0

             END)                     AS BT_SUM_SDT_CTR_BAL --随贷通用信额度

        ,SUM(CASE

               WHEN BT_PD_NM = '泰e贷' AND T.IS_BT_COM_LOAN = '1' THEN BT_CTR_AMT

               ELSE 0

             END)                     AS BT_SUM_TED_CTR_AMT --泰e贷授信额度

        ,SUM(CASE

               WHEN BT_PD_NM = '泰e贷' AND T.IS_BT_COM_LOAN = '1' THEN BT_CTR_BAL

               ELSE 0

             END)                     AS BT_SUM_TED_CTR_BAL --泰e贷用信额度

        ,SUM(CASE

               WHEN BT_PD_NM = '融e贷' AND T.IS_BT_COM_LOAN = '1' THEN BT_CTR_AMT

               ELSE 0

             END)                     AS BT_SUM_RED_CTR_AMT --融e贷授信额度

        ,SUM(CASE

               WHEN BT_PD_NM = '融e贷' AND T.IS_BT_COM_LOAN = '1' THEN BT_CTR_BAL

               ELSE 0

             END)                     AS BT_SUM_RED_CTR_BAL  --融e贷用信额度

        --小企业不限制一般贷款

        ,COALESCE(SUM(BT_CTR_AMT), 0) AS BT_SUM_CTR_AMT --授信额度

        ,COALESCE(SUM(BT_CTR_BAL), 0) AS BT_SUM_CTR_BAL  --用信额度

        --泰惠收配贷、信用卡配贷

        ,SUM(CASE

               WHEN LOAN_SRC = '纯线上' AND BT_PD_NM = '泰e贷' THEN BT_BIND_AMT

               ELSE 0

             END)                     AS ONL_SRC_BT_BIND_AMT --线上来源实际启用额度

        ,SUM(CASE

               WHEN LOAN_SRC = '纯线上' AND BT_PD_NM = '泰e贷' THEN BT_CTR_BAL

               ELSE 0

             END)                     AS ONL_SRC_BT_CTR_BAL --线上来源合同余额

        ,SUM(CASE

               WHEN LOAN_SRC = '转线下' THEN BT_BIND_AMT

               ELSE 0

             END)                     AS OTLN_SRC_BT_BIND_AMT --线下来源实际启用额度

        ,SUM(CASE

               WHEN LOAN_SRC = '转线下' THEN BT_CTR_BAL

               ELSE 0

             END)                     AS OTLN_SRC_BT_CTR_BAL --线下来源合同余额

        ,SUM(CASE

               WHEN ( LOAN_SRC = '纯线上' AND BT_PD_NM = '泰e贷' ) OR LOAN_SRC = '转线下' THEN BT_BIND_AMT

               ELSE 0

             END)                     AS LOAN_SRC_BT_BIND_AMT --贷款来源实际启用额度

        ,SUM(CASE

               WHEN ( LOAN_SRC = '纯线上' AND BT_PD_NM = '泰e贷' ) OR LOAN_SRC = '转线下' THEN BT_CTR_BAL

               ELSE 0

             END)                     AS LOAN_SRC_BT_CTR_BAL --贷款来源合同余额

FROM    (

            SELECT  DISTINCT CASE_NO

                             ,CASE_NAME

                             ,CASE_PHASE

                             ,CST_ID

                             ,REL_CST_ID

                             ,BT_BUS_CTR_ID --合同编号

                             ,IS_BT_COM_LOAN --是否一般贷款

                             ,BT_PD_NM --产品类型

                             ,BT_CTR_AMT --合同金额

                             ,BT_CTR_BAL --合同余额

                             ,BT_BIND_AMT --实际启用授信额度

                             ,RELOAN_CTR_ID --续贷合同号

                             ,LOAN_SRC --贷款来源

            FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_01

            WHERE   CASE_NO IS NOT NULL

        ) T

GROUP BY CASE_NO , CASE_NAME , CASE_PHASE , CST_ID , REL_CST_ID;



--1.2.3 客户转化情况合并（转化标准为产生新的贷款合同）

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_04;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_04 AS

SELECT  T.CASE_NO

        ,T.CASE_NAME

        ,T.CASE_PHASE

        ,T.CST_ID

        ,T.REL_CST_ID

        ,T.IS_BT_COM_APL --是否发生申请

        ,T.IS_BT_COM_CTR --是否发生合同

        ,T.IS_BT_COM_DBIL --是否发生借据

        ,T.IS_SDT_BT_APL --是否发生随贷通申请

        ,T.IS_SDT_BT_CTR --是否发生随贷通合同

        ,T.IS_SDT_BT_DBIL --是否发生随贷通借据

        ,T.IS_TED_BT_APL --是否发生泰e贷申请

        ,T.IS_TED_BT_CTR --是否发生泰e贷合同

        ,T.IS_TED_BT_DBIL --是否发生泰e贷借据

        ,T.IS_RED_BT_APL --是否发生融e贷申请

        ,T.IS_RED_BT_CTR --是否发生融e贷合同

        ,T.IS_RED_BT_DBIL --是否发生融e贷借据

        ,T.BT_COM_APL_HPN_DT --申请发生日期

        ,T.BT_COM_CTR_HPN_DT --合同发生日期

        ,T.BT_COM_DBIL_DTRB_DT --借据发生日期

        ,T.BT_SDT_APL_HPN_DT --随贷通申请发生日期

        ,T.BT_SDT_CTR_HPN_DT --随贷通合同发生日期

        ,T.BT_SDT_DBIL_DTRB_DT --随贷通借据发生日期

        ,T.BT_TED_APL_HPN_DT --泰e贷申请发生日期

        ,T.BT_TED_CTR_HPN_DT --泰e贷合同发生日期

        ,T.BT_TED_DBIL_DTRB_DT --泰e贷借据发生日期

        ,T.BT_RED_APL_HPN_DT --融e贷申请发生日期

        ,T.BT_RED_CTR_HPN_DT --融e贷合同发生日期

        ,T.BT_RED_DBIL_DTRB_DT --融e贷借据发生日期

        ,T.BT_SUM_COM_DBIL_AMT --借据发放金额

        ,T.BT_SUM_COM_DBIL_BAL --借据本金余额

        ,T.BT_SUM_SDT_DBIL_AMT --随贷通借据发放金额

        ,T.BT_SUM_SDT_DBIL_BAL --随贷通借据本金余额

        ,T.BT_SUM_TED_DBIL_AMT --泰e贷借据发放金额

        ,T.BT_SUM_TED_DBIL_BAL --泰e贷借据本金余额

        ,T.BT_SUM_RED_DBIL_AMT --融e贷借据发放金额

        ,T.BT_SUM_RED_DBIL_BAL  --融e贷借据本金余额

        --小企业不限制一般贷款

        ,T.IS_BT_CTR --小企业_是否发生合同

        ,T.BT_CTR_HPN_DT --小企业_合同发生日期

        ,T1.BT_SUM_COM_CTR_AMT --授信额度

        ,T1.BT_SUM_COM_CTR_BAL --用信额度

        ,T1.BT_SUM_SDT_CTR_AMT --随贷通授信额度

        ,T1.BT_SUM_SDT_CTR_BAL --随贷通用信额度

        ,T1.BT_SUM_TED_CTR_AMT --泰e贷授信额度

        ,T1.BT_SUM_TED_CTR_BAL --泰e贷用信额度

        ,T1.BT_SUM_RED_CTR_AMT --融e贷授信额度

        ,T1.BT_SUM_RED_CTR_BAL  --融e贷用信额度

        --小企业不限制一般贷款

        ,T1.BT_SUM_CTR_AMT --小企业_授信额度

        ,T1.BT_SUM_CTR_BAL  --小企业_用信额度

        --泰惠收配贷、信用卡配贷

        ,T1.ONL_SRC_BT_BIND_AMT --线上来源实际启用额度

        ,T1.ONL_SRC_BT_CTR_BAL --线上来源合同余额

        ,T1.OTLN_SRC_BT_BIND_AMT --线下来源实际启用额度

        ,T1.OTLN_SRC_BT_CTR_BAL --线下来源合同余额

        ,T1.LOAN_SRC_BT_BIND_AMT --贷款来源实际启用额度

        ,T1.LOAN_SRC_BT_CTR_BAL --贷款来源合同余额

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_02 T

LEFT JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_03 T1

ON      T.CASE_NO = T1.CASE_NO

AND     T.CASE_PHASE = T1.CASE_PHASE

AND     T.CST_ID = T1.CST_ID

AND     T.REL_CST_ID = T1.REL_CST_ID;



--2、转化标准为发生借据（不限制合同申请日期，只限制借据发放日期在用例执行日期之后）--可以不分区

--循环贷款促用信

---2.1 合同情况

--2min

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_05;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_05 AS

SELECT  T.CASE_NO

        ,T.CASE_NAME

        ,T.CASE_PHASE

        ,T.CST_ID

        ,T.EXEC_DATE

        ,T.ADJUST_DUE_DATE

        ,T.REL_CST_ID --关联人

        ,T.IS_SLF --是否本人

        ,T.IS_SAM_RSK --是否同一风险控制号

        ,T.IS_REL_PTY --是否关联人

        ,T2.BUSI_CTR_ID AS BUS_CTR_ID

        ,T2.HPN_DT

        ,T2.APNT_START_DT          --合同约定开始日期

        ,T2.APNT_MTU_DT            --合同约定结束日期

        ,T2.END_DT --结清日期

        ,T2.CTR_AMT --合同金额

        ,CASE

           WHEN ( SUBSTR(T2.PD_CD, 1, 7) = '2010503' OR T2.PD_CD IN ( '201050101040348' , '201050102010146' ) OR ( T2.CRC_IND = '1' AND T2.IS_SLF_CRC = '1' AND T2.CYC_TYP_CD IN ( '1' , '2' ) ) ) THEN '1'

           ELSE '0'

         END            AS IS_SLF_CRC --是否自助循环贷款  （促用信需限制自助循环贷款）

        ,CASE

           WHEN T2.BUSI_CTR_ID IS NOT NULL AND SUBSTR(T2.PD_CD, 1, 7) = '2010503'                                              THEN '随贷通'

           WHEN T2.BUSI_CTR_ID IS NOT NULL AND T2.PD_CD IN ( '201050101040348' , '201050102010146' )                           THEN '泰e贷'

           WHEN T2.BUSI_CTR_ID IS NOT NULL AND ( T2.CRC_IND = '1' AND T2.IS_SLF_CRC = '1' AND T2.CYC_TYP_CD IN ( '1' , '2' ) ) THEN '融e贷'

           WHEN T2.BUSI_CTR_ID IS NOT NULL                                                                                     THEN '其他贷款'

           ELSE ''

         END            AS PD_NM --产品种类

        ,T2.BUS_CD

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_REL T

LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_INF_DD T2 --信贷合同信息表

ON      T.REL_CST_ID = T2.CST_ID

AND     T2.DT <= '20230501'

AND     T2.DT = T.ADJUST_DUE_DATE

AND     T2.DT IN ( --！IN子查询 写法要改掉

                     SELECT  DISTINCT ADJUST_DUE_DATE

                     FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_DUE_DATE

                 )

--数据铺底之后放开

--WHERE   T.ADJUST_DUE_DATE >= '20230501'

;

--SELECT count(*),count(distinct cst_id) FROM LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_05; --1553703	247442



--2.2 自助循环贷款--新发放借据

--3min

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_06;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_06

(

    CASE_NO          STRING  COMMENT '用例编号'

    ,CASE_NAME       STRING  COMMENT '用例名称'

    ,CASE_PHASE      STRING  COMMENT '用例批次'

    ,CST_ID          STRING  COMMENT '客户号'

    ,EXEC_DATE       STRING  COMMENT '用例执行日期'

    ,ADJUST_DUE_DATE STRING  COMMENT '用例截止日期'

    ,EXEC_DAYS       BIGINT  COMMENT '用例执行天数'

    ,REL_CST_ID      STRING  COMMENT '关联人'

    ,IS_SLF          STRING  COMMENT '是否本人'

    ,IS_SAM_RSK      STRING  COMMENT '是否同一风险控制号'

    ,IS_REL_PTY      STRING  COMMENT '是否关联人'

    ,BUS_CTR_ID      STRING  COMMENT '合同号'

    ,PD_NM           STRING  COMMENT '产品名称'

    ,DBIL_ID         STRING  COMMENT '借据号'

    ,DBIL_DTRB_DT    STRING  COMMENT '借据发放日期'

    ,DBIL_END_DT     STRING  COMMENT '借据结清日期'

    ,DBIL_DTRB_DAYS  BIGINT  COMMENT '借据发放天数'

    ,DBIL_AMT        DECIMAL COMMENT '借据发放金额'

    ,DBIL_BAL        DECIMAL COMMENT '借据余额'

    ,L90D_DBIL_BAL_ACMU DECIMAL COMMENT '近90天本金余额积数'

)

COMMENT

'用例新发放借据表';



INSERT INTO LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_06

SELECT  T.CASE_NO

        ,T.CASE_NAME

        ,T.CASE_PHASE

        ,T.CST_ID

        ,T.EXEC_DATE

        ,T.ADJUST_DUE_DATE

        ,DATEDIFF(TO_DATE(T.ADJUST_DUE_DATE,'yyyyMMdd'),TO_DATE(T.EXEC_DATE,'yyyyMMdd'),'DD') AS EXEC_DAYS --用例执行天数

        ,T.REL_CST_ID --关联人

        ,T.IS_SLF --是否本人

        ,T.IS_SAM_RSK --是否同一风险控制号

        ,T.IS_REL_PTY --是否关联人

        ,T.BUS_CTR_ID                                                                            AS BUS_CTR_ID

        ,T.PD_NM --产品种类

        ,T3.DBIL_ID

        ,T3.DTRB_DT                                                                              AS DBIL_DTRB_DT --借据发放日期

        ,T3.END_DT                                                                               AS DBIL_END_DT --借据结清日期

        ,DATEDIFF(TO_DATE(T.ADJUST_DUE_DATE, 'yyyymmdd'), TO_DATE(T3.DTRB_DT, 'yyyymmdd'), 'DD') AS DBIL_DTRB_DAYS --借据发放天数

        ,T3.AMT                                                                                  AS DBIL_AMT --借据发放金额

        ,T3.PRCP_BAL                                                                             AS DBIL_BAL --借据余额

        ,T3.LAST_90_DAYS_PRCP_BAL_ACML                                                           AS L90D_DBIL_BAL_ACMU --近90天本金余额积数

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_05 T

LEFT JOIN    EDW.DWS_BUS_LOAN_DBIL_INF_DD T3

ON      T.REL_CST_ID = T3.CST_ID

AND     T.BUS_CTR_ID = T3.BUS_CTR_ID

AND     T3.DT <= '20230501'

AND     T3.DT = T.ADJUST_DUE_DATE

AND     T3.DT IN (

                     SELECT  DISTINCT ADJUST_DUE_DATE

                     FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_DUE_DATE

                 )

AND     T3.DTRB_DT >= T.EXEC_DATE

AND     T3.DTRB_DT <= T.ADJUST_DUE_DATE

WHERE   T.IS_SLF_CRC = '1' --自助循环贷款

AND     T.BUS_CD <> 'J' --剔除重组

--数据铺底之后放开

--AND T.ADJUST_DUE_DATE >= '20230501'

;

--SELECT count(*),count(distinct cst_id) FROM LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_06; --529446	130673

/*

--2.3 新发放借据余额日均

--借据表数据量太大，取用例执行期间内所有dt效率慢，故考虑改为取ADJUST_DUE_DATE这一天的近90天余额积数，除以用例执行天数作为日均余额。

--2.3.1 找出观察期内所有dt（分区表）

--1h10min

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_07;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_07

(

    CASE_NO         STRING  COMMENT '用例编号'

    ,CASE_NAME      STRING  COMMENT '用例名称'

    ,CASE_PHASE     STRING  COMMENT '用例批次'

    ,CST_ID         STRING  COMMENT '客户号'

    ,REL_CST_ID     STRING  COMMENT '关联人'

    ,BUS_CTR_ID     STRING  COMMENT '合同号'

    ,DBIL_ID        STRING  COMMENT '借据号'

    ,DBIL_DTRB_DAYS STRING  COMMENT '借据发放天数'

    ,PRCP_BAL       DECIMAL COMMENT '本金余额'

)

COMMENT

'每个dt的借据余额'

PARTITIONED BY

(

    DT STRING COMMENT '日期分区'

);



INSERT OVERWRITE TABLE LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_07 PARTITION (DT) --！铺底后改为 DT='20230501'

SELECT  T.CASE_NO

        ,T.CASE_NAME

        ,T.CASE_PHASE

        ,T.CST_ID

        ,T.REL_CST_ID --关联人

        ,T.BUS_CTR_ID

        ,T.DBIL_ID

        ,T.DBIL_DTRB_DAYS --借据发放天数

        ,T1.PRCP_BAL --本金余额

        ,T1.DT

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_06 T

INNER JOIN    EDW.DWS_BUS_LOAN_DBIL_INF_DD T1 --产生过借据才算日均，所以用inner join

ON      T.CST_ID = T1.CST_ID

AND     T.DBIL_ID = T1.DBIL_ID

--AND     T1.DT = '20230501'

--！数据铺底之后去掉下面的三个限制条件，改为上面的T1.DT = '20230501'

AND   T1.DT <= '20230501'

AND   T1.DT >= T.EXEC_DATE

AND   T1.DT <= T.ADJUST_DUE_DATE

AND   T1.DT >= (SELECT MIN_EXEC_DATE FROM LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_MIN_EXEC_DATE) --增加这个条件效率会高一点

WHERE T.CASE_NO IS NOT NULL

;



--2.3.2 观察期内借据余额日均

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_08;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_08 AS

SELECT  T.CASE_NO

        ,T.CASE_NAME

        ,T.CASE_PHASE

        ,T.CST_ID

        ,T.REL_CST_ID --关联人

        ,T.BUS_CTR_ID

        ,T.DBIL_ID

        ,T.DBIL_DTRB_DAYS --借据发放天数

        ,CASE

           WHEN DBIL_DTRB_DAYS > 0 THEN SUM(T.PRCP_BAL) / DBIL_DTRB_DAYS

           ELSE 0

         END AS DBIL_BAL_AVG --借据余额日均

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_07 T

WHERE   T.DT IS NOT NULL

GROUP BY T.CASE_NO , T.CASE_NAME , T.CASE_PHASE , T.CST_ID , T.REL_CST_ID , T.BUS_CTR_ID , T.DBIL_ID , T.DBIL_DTRB_DAYS;

*/



--2.4 客户转化情况（转化标准为发生借据）

--3min

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_09;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_09 AS

SELECT  T.CASE_NO

        ,T.CASE_NAME

        ,T.CASE_PHASE

        ,T.CST_ID

        ,T.REL_CST_ID

        ,MAX(CASE

               WHEN T1.DBIL_ID IS NOT NULL THEN '1'

               ELSE '0'

             END)                      AS IS_DBIL --是否发生借据

        ,SUM(CASE

               WHEN T1.DBIL_ID IS NOT NULL THEN 1

               ELSE 0

             END)                      AS SUM_DBIL_CNT --借据笔数

        ,COALESCE(MIN(CASE

                        WHEN TRIM(T1.DBIL_DTRB_DT) <> '' THEN T1.DBIL_DTRB_DT

                      END), '')        AS DBIL_DTRB_DT --借据发放日期

        ,SUM(COALESCE(T1.DBIL_AMT, 0)) AS SUM_DBIL_AMT --借据发放金额

        ,SUM(COALESCE(T1.DBIL_BAL, 0)) AS SUM_DBIL_BAL  --借据余额

        --,SUM(COALESCE(T2.DBIL_BAL_AVG, 0)) AS SUM_DBIL_BAL_AVG --借据余额日均

        ,SUM(CASE

               WHEN T1.EXEC_DAYS <> 0 THEN T1.L90D_DBIL_BAL_ACMU / T1.EXEC_DAYS

               ELSE 0

             END)                      AS SUM_DBIL_BAL_AVG --借据余额日均

        ,MAX(CASE

               WHEN T1.PD_NM = '随贷通' AND T1.DBIL_ID IS NOT NULL THEN '1'

               ELSE '0'

             END)                      AS IS_SDT_DBIL --是否发生随贷通借据

        ,SUM(CASE

               WHEN T1.PD_NM = '随贷通' AND T1.DBIL_ID IS NOT NULL THEN 1

               ELSE 0

             END)                      AS SUM_SDT_DBIL_CNT --随贷通借据笔数

        ,COALESCE(MIN(CASE

                        WHEN T1.PD_NM = '随贷通' AND TRIM(T1.DBIL_DTRB_DT) <> '' THEN T1.DBIL_DTRB_DT

                      END), '')        AS SDT_DBIL_DTRB_DT --随贷通借据发放日期

        ,SUM(CASE

               WHEN T1.PD_NM = '随贷通' THEN COALESCE(T1.DBIL_AMT, 0)

               ELSE 0

             END)                      AS SUM_SDT_DBIL_AMT --随贷通借据发放金额

        ,SUM(CASE

               WHEN T1.PD_NM = '随贷通' THEN COALESCE(T1.DBIL_BAL, 0)

               ELSE 0

             END)                      AS SUM_SDT_DBIL_BAL  --随贷通借据余额

        --old计算借据余额日均

        --,SUM(CASE

        --       WHEN T1.PD_NM = '随贷通' THEN COALESCE(T2.DBIL_BAL_AVG, 0)

        --       ELSE 0

        --     END)                      AS SUM_SDT_DBIL_BAL_AVG --随贷通借据余额日均

        ,SUM(CASE

               WHEN T1.PD_NM = '随贷通' AND T1.EXEC_DAYS <> 0 THEN T1.L90D_DBIL_BAL_ACMU / T1.EXEC_DAYS

               ELSE 0

             END)                      AS SUM_SDT_DBIL_BAL_AVG --随贷通借据余额日均

        ,MAX(CASE

               WHEN T1.PD_NM = '泰e贷' AND T1.DBIL_ID IS NOT NULL THEN '1'

               ELSE '0'

             END)                      AS IS_TED_DBIL --是否发生泰e贷借据

        ,SUM(CASE

               WHEN T1.PD_NM = '泰e贷' AND T1.DBIL_ID IS NOT NULL THEN 1

               ELSE 0

             END)                      AS SUM_TED_DBIL_CNT --泰e贷借据笔数

        ,COALESCE(MIN(CASE

                        WHEN T1.PD_NM = '泰e贷' AND TRIM(T1.DBIL_DTRB_DT) <> '' THEN T1.DBIL_DTRB_DT

                      END), '')        AS TED_DBIL_DTRB_DT --泰e贷借据发放日期

        ,SUM(CASE

               WHEN T1.PD_NM = '泰e贷' THEN COALESCE(T1.DBIL_AMT, 0)

               ELSE 0

             END)                      AS SUM_TED_DBIL_AMT --泰e贷借据发放金额

        ,SUM(CASE

               WHEN T1.PD_NM = '泰e贷' THEN COALESCE(T1.DBIL_BAL, 0)

               ELSE 0

             END)                      AS SUM_TED_DBIL_BAL  --泰e贷借据余额

        --,SUM(CASE

        --       WHEN T1.PD_NM = '泰e贷' THEN COALESCE(T2.DBIL_BAL_AVG, 0)

        --       ELSE 0

        --     END)                      AS SUM_TED_DBIL_BAL_AVG --泰e贷借据余额日均

        ,SUM(CASE

               WHEN T1.PD_NM = '泰e贷' AND T1.EXEC_DAYS <> 0 THEN T1.L90D_DBIL_BAL_ACMU / T1.EXEC_DAYS

               ELSE 0

             END)                      AS SUM_TED_DBIL_BAL_AVG --泰e贷借据余额日均

        ,MAX(CASE

               WHEN T1.PD_NM = '融e贷' AND T1.DBIL_ID IS NOT NULL THEN '1'

               ELSE '0'

             END)                      AS IS_RED_DBIL --是否发生融e贷借据

        ,SUM(CASE

               WHEN T1.PD_NM = '融e贷' AND T1.DBIL_ID IS NOT NULL THEN 1

               ELSE 0

             END)                      AS SUM_RED_DBIL_CNT --融e贷借据笔数

        ,COALESCE(MIN(CASE

                        WHEN T1.PD_NM = '融e贷' AND TRIM(T1.DBIL_DTRB_DT) <> '' THEN T1.DBIL_DTRB_DT

                      END), '')        AS RED_DBIL_DTRB_DT --融e贷借据发放日期

        ,SUM(CASE

               WHEN T1.PD_NM = '融e贷' THEN COALESCE(T1.DBIL_AMT, 0)

               ELSE 0

             END)                      AS SUM_RED_DBIL_AMT --融e贷借据发放金额

        ,SUM(CASE

               WHEN T1.PD_NM = '融e贷' THEN COALESCE(T1.DBIL_BAL, 0)

               ELSE 0

             END)                      AS SUM_RED_DBIL_BAL  --融e贷借据余额

        --,SUM(CASE

        --       WHEN T1.PD_NM = '融e贷' THEN COALESCE(T2.DBIL_BAL_AVG, 0)

        --       ELSE 0

        --     END)                      AS SUM_RED_DBIL_BAL_AVG --融e贷借据余额日均

        ,SUM(CASE

               WHEN T1.PD_NM = '融e贷' AND T1.EXEC_DAYS <> 0 THEN T1.L90D_DBIL_BAL_ACMU / T1.EXEC_DAYS

               ELSE 0

             END)                      AS SUM_RED_DBIL_BAL_AVG --融e贷借据余额日均

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_05 T

LEFT JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_06 T1

ON      T.CASE_NO = T1.CASE_NO

AND     T.CASE_PHASE = T1.CASE_PHASE

AND     T.CST_ID = T1.CST_ID

AND     T.REL_CST_ID = T1.REL_CST_ID

AND     T.BUS_CTR_ID = T1.BUS_CTR_ID

--计算借据余额日均的逻辑替换成：近90天余额积数/执行天数

--LEFT JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_08 T2

--ON      T.CASE_NO = T2.CASE_NO

--AND     T.CASE_PHASE = T2.CASE_PHASE

--AND     T.CST_ID = T2.CST_ID

--AND     T.REL_CST_ID = T2.REL_CST_ID

GROUP BY T.CASE_NO , T.CASE_NAME , T.CASE_PHASE , T.CST_ID , T.REL_CST_ID;

--SELECT count(*),count(distinct cst_id) FROM LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_09; --583811	247442

--3、贷款FTP

--3.1 要统计FTP的借据

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_10;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_10 AS

SELECT  DISTINCT CASE_NO

                 ,CASE_NAME

                 ,CASE_PHASE

                 ,CST_ID

                 ,REL_CST_ID

                 ,EXEC_DATE

                 ,ADJUST_DUE_DATE

                 ,BT_BUS_CTR_ID AS BUS_CTR_ID

                 ,BT_DBIL_ID    AS DBIL_ID

                 ,BT_DBIL_DTRB_DT AS DBIL_DTRB_DT --'借据发放日期'

                 ,BT_DBIL_END_DT AS DBIL_END_DT   --'借据结清日期'

                 ,BT_DBIL_DTRB_DAYS AS DBIL_DTRB_DAYS --借据发放天数

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_01

WHERE   TRIM(BT_DBIL_ID) <> ''

UNION ALL

SELECT  DISTINCT CASE_NO

                 ,CASE_NAME

                 ,CASE_PHASE

                 ,CST_ID

                 ,REL_CST_ID

                 ,EXEC_DATE

                 ,ADJUST_DUE_DATE

                 ,BUS_CTR_ID

                 ,DBIL_ID

                 ,DBIL_DTRB_DT --借据发放日期

                 ,DBIL_END_DT --借据结清日期

                 ,DBIL_DTRB_DAYS  --借据发放天数

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_06

WHERE   TRIM(DBIL_ID) <> '';



--3.2 FTP分区表

--20min

/*DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_11_0;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_11_0

(

    T_ACCOUNT_NUMBER STRING  COMMENT '源账号'

    ,FTP_INC         DECIMAL COMMENT 'FTP利润'

)

COMMENT

'FTP分区表'

PARTITIONED BY

(

    DT STRING COMMENT '日期分区'

);

--50min

INSERT OVERWRITE TABLE LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_11_0 PARTITION (DT ) --！数据铺底后改为DT='20230501'

SELECT  T.SRC_ACT_ID AS T_ACCOUNT_NUMBER

        ,SUM(DECODE(AST_LBL_CD, '1', 1, - 1) *  (T.INTR_INC_XPS_DAY_ACM *T2.CNY_EXR - T.FNL_FTP_INTR_DAY_ACM*T2.CNY_EXR)) AS FTP_INC  --CURRENCY_CD FNL_FTP_INTR_DAY_ACM --最终FTP利息日累计 立英修改

        ,T.DT

FROM   EDW.DWS_BUS_FIN_FTP_ACT_SMY_INF_DD T --新的FTP表

LEFT JOIN EDW.DIM_BUS_COM_EXR_INF_DD T2  --汇率表 CNY_EXR 折人民币汇率

ON T.CCY_CD=T2.CCY_CD

AND T2.DT='20230501'

WHERE  T.DT <= '20230501'

AND   T.DT >= (SELECT L90D_MIN_EXEC_DATE FROM LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_MIN_EXEC_DATE)

AND  T.DT > '20220501'

GROUP BY T.SRC_ACT_ID,T.DT

;

--50min

INSERT OVERWRITE TABLE LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_11_0 PARTITION (DT ) --！数据铺底后改为DT='20230501'

SELECT  T.SRC_ACT_ID AS T_ACCOUNT_NUMBER

        ,SUM(DECODE(AST_LBL_CD, '1', 1, - 1) *  (T.INTR_INC_XPS_DAY_ACM *T2.CNY_EXR - T.FNL_FTP_INTR_DAY_ACM*T2.CNY_EXR)) AS FTP_INC  --CURRENCY_CD FNL_FTP_INTR_DAY_ACM --最终FTP利息日累计 立英修改

        ,T.DT

FROM   EDW.DWS_BUS_FIN_FTP_ACT_SMY_INF_DD T --新的FTP表

LEFT JOIN EDW.DIM_BUS_COM_EXR_INF_DD T2  --汇率表 CNY_EXR 折人民币汇率

ON T.CCY_CD=T2.CCY_CD

AND T2.DT='20230501'

WHERE  T.DT <= '20220501'

AND   T.DT >= (SELECT L90D_MIN_EXEC_DATE FROM LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_MIN_EXEC_DATE)

GROUP BY T.SRC_ACT_ID,T.DT

;

*/





--3.3 借据FTP计算

--8min

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_11;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_11 AS

SELECT  T.CASE_NO

        ,T.CASE_NAME

        ,T.CASE_PHASE

        ,T.CST_ID

        ,T.REL_CST_ID

        ,SUM(T.LOAN_FTP_INC)         AS SUM_LOAN_FTP_INC --推广期间贷款FTP利润

        ,SUM(T.PREDICT_LOAN_FTP_INC) AS SUM_PREDICT_LOAN_FTP_INC --预测贷款FTP年利润

FROM    (

            SELECT  T.CASE_NO

                    ,T.CASE_NAME

                    ,T.CASE_PHASE

                    ,T.CST_ID

                    ,T.REL_CST_ID

                    ,T.BUS_CTR_ID

                    ,T.DBIL_ID

                    ,T.DBIL_DTRB_DT --借据发放日期

                    ,T.DBIL_END_DT --借据结清日期

                    ,T.DBIL_DTRB_DAYS --借据发放天数

                    ,SUM(COALESCE(T1.FTP_INC, 0)) AS LOAN_FTP_INC --推广期间贷款FTP利润

                    ,SUM(CASE

                           WHEN T.DBIL_END_DT <> '18991231'                         THEN COALESCE(T1.FTP_INC, 0) --已结清

						   WHEN T.DBIL_END_DT = '18991231' AND T.DBIL_DTRB_DAYS > 1 THEN COALESCE(T1.FTP_INC, 0) / least(( T.DBIL_DTRB_DAYS - 1 ),datediff(to_date(T.ADJUST_DUE_DATE,'yyyymmdd'),to_date(T.EXEC_DATE,'yyyymmdd'),'dd')) * 365 --有误立英修改

                           --WHEN T.DBIL_END_DT = '18991231' AND T.DBIL_DTRB_DAYS > 1 THEN COALESCE(T1.FTP_INC, 0) / ( T.DBIL_DTRB_DAYS - 1 ) * 365 --有误, 不能直接除以借据天数，要除以最小值。立英修改

                           ELSE 0

                         END)                     AS PREDICT_LOAN_FTP_INC --预测贷款FTP年利润

            FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_10 T

            LEFT JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_11_0 T1 --FTP分区表

            ON      T.DBIL_ID = T1.T_ACCOUNT_NUMBER

            AND     T1.DT >= T.EXEC_DATE

            AND     T1.DT <= T.ADJUST_DUE_DATE

            AND     T1.DT IS NOT NULL

            AND     DATEDIFF(TO_DATE(T1.DT, 'yyyymmdd'), TO_DATE(T.EXEC_DATE, 'yyyymmdd'), 'DD') >= 1

            GROUP BY T.CASE_NO , T.CASE_NAME , T.CASE_PHASE , T.CST_ID , T.REL_CST_ID , T.BUS_CTR_ID , T.DBIL_ID , T.DBIL_DTRB_DT , T.DBIL_END_DT , T.DBIL_DTRB_DAYS

        ) T

GROUP BY T.CASE_NO , T.CASE_NAME , T.CASE_PHASE , T.CST_ID , T.REL_CST_ID;



/*

--OLD未分区

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_11;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_11 AS

SELECT  T.CASE_NO

        ,T.CASE_NAME

        ,T.CASE_PHASE

        ,T.CST_ID

        ,T.REL_CST_ID

        ,SUM(T.LOAN_FTP_INC)         AS SUM_LOAN_FTP_INC --推广期间贷款FTP利润

        ,SUM(T.PREDICT_LOAN_FTP_INC) AS SUM_PREDICT_LOAN_FTP_INC --预测贷款FTP年利润

FROM    (

            SELECT  T.CASE_NO

                    ,T.CASE_NAME

                    ,T.CASE_PHASE

                    ,T.CST_ID

                    ,T.REL_CST_ID

                    ,T.BUS_CTR_ID

                    ,T.DBIL_ID

                    ,T.DBIL_DTRB_DT --借据发放日期

                    ,T.DBIL_END_DT --借据结清日期

                    ,T.DBIL_DTRB_DAYS --借据发放天数

                    ,SUM(COALESCE(( T1.ACC_INT_DAY_AJUST * T1.EXCHANGE_TO_CNY_RATE - T1.FTP_INT_DAY_AJUST * T1.EXCHANGE_TO_CNY_RATE ), 0) + COALESCE(( T2.ACC_INT_DAY_AJUST * T2.EXCHANGE_TO_CNY_RATE - T2.FTP_INT_DAY_AJUST * T2.EXCHANGE_TO_CNY_RATE ), 0)) AS LOAN_FTP_INC --推广期间贷款FTP利润

                    ,SUM(CASE

                           WHEN T.DBIL_END_DT <> '18991231'                         THEN COALESCE(( T1.ACC_INT_DAY_AJUST * T1.EXCHANGE_TO_CNY_RATE - T1.FTP_INT_DAY_AJUST * T1.EXCHANGE_TO_CNY_RATE ), 0) + COALESCE(( T2.ACC_INT_DAY_AJUST * T2.EXCHANGE_TO_CNY_RATE - T2.FTP_INT_DAY_AJUST * T2.EXCHANGE_TO_CNY_RATE ), 0) --已结清

                           WHEN T.DBIL_END_DT = '18991231' AND T.DBIL_DTRB_DAYS > 1 THEN ( COALESCE(( T1.ACC_INT_DAY_AJUST * T1.EXCHANGE_TO_CNY_RATE - T1.FTP_INT_DAY_AJUST * T1.EXCHANGE_TO_CNY_RATE ), 0) + COALESCE(( T2.ACC_INT_DAY_AJUST * T2.EXCHANGE_TO_CNY_RATE - T2.FTP_INT_DAY_AJUST * T2.EXCHANGE_TO_CNY_RATE ), 0) ) / ( T.DBIL_DTRB_DAYS - 1 ) * 365

                           ELSE 0

                         END)                                                                                                                                                                                                                                 AS PREDICT_LOAN_FTP_INC --预测贷款FTP年利润

            FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_10 T

            LEFT JOIN    APP_IFTP.IFTP_TPDM_RST_FTP T1 --表内FTP结果集

            ON      T.DBIL_ID = T1.T_ACCOUNT_NUMBER

            AND     T1.DT >= '20220101'

            AND     T1.DT <= '20230501'

            AND     T1.DT >= T.EXEC_DATE

            AND     T1.DT <= T.ADJUST_DUE_DATE

            AND     DATEDIFF(TO_DATE(T1.DT, 'yyyymmdd'), TO_DATE(T.EXEC_DATE, 'yyyymmdd'), 'DD') >= 1

            LEFT JOIN    APP_IFTP.ADM_PAPP_FTP_TPDM_TRANSFER_INFO_DD T2 --表外FTP资产转让结果集

            ON      T.DBIL_ID = T2.T_ACCOUNT_NUMBER

            AND     T2.DT >= '20220101'

            AND     T2.DT <= '20230501'

            AND     T2.DT >= T.EXEC_DATE

            AND     T2.DT <= T.ADJUST_DUE_DATE

            AND     DATEDIFF(TO_DATE(T2.DT, 'yyyymmdd'), TO_DATE(T.EXEC_DATE, 'yyyymmdd'), 'DD') >= 1

            GROUP BY T.CASE_NO , T.CASE_NAME , T.CASE_PHASE , T.CST_ID , T.REL_CST_ID , T.BUS_CTR_ID , T.DBIL_ID , T.DBIL_DTRB_DT , T.DBIL_END_DT , T.DBIL_DTRB_DAYS

        ) T

GROUP BY T.CASE_NO , T.CASE_NAME , T.CASE_PHASE , T.CST_ID , T.REL_CST_ID;

*/



--4、小额续贷



--4.1 结清日期 （用例执行日期前3个月至当前日期内的最大结清日期）

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_12;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_12 AS

SELECT  T.CASE_NO

        ,T.CASE_NAME

        ,T.CASE_PHASE

        ,T.CST_ID

        ,T.REL_CST_ID

        ,T.EXEC_DATE

        ,T.ADJUST_DUE_DATE

        ,MAX(T.END_DT) AS MAX_END_DT --最大结清日期

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_05 T

WHERE   T.END_DT >= TO_CHAR(DATEADD(TO_DATE(T.EXEC_DATE, 'yyyymmdd'), - 3, 'MM'),'yyyymmdd') --用例执行日期前3个月

AND     T.END_DT <= T.ADJUST_DUE_DATE --当前日期/用例结束日期

AND     T.END_DT <> '18991231' --已结清

GROUP BY T.CASE_NO , T.CASE_NAME , T.CASE_PHASE , T.CST_ID , T.REL_CST_ID , T.EXEC_DATE , T.ADJUST_DUE_DATE;



--4.2 结清金额

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_13;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_13 AS

SELECT  T.CASE_NO

        ,T.CASE_NAME

        ,T.CASE_PHASE

        ,T.CST_ID

        ,T.REL_CST_ID

        ,T.EXEC_DATE

        ,T.ADJUST_DUE_DATE

        ,T.MAX_END_DT --结清日期

        ,SUM(T1.CTR_AMT) AS JQ_CTR_AMT --结清金额

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_12 T

INNER JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_05 T1

ON      T.CASE_NO = T1.CASE_NO

AND     T.CASE_PHASE = T1.CASE_PHASE

AND     T.CST_ID = T1.CST_ID

AND     T1.IS_SLF = '1' --客户本人

AND     T1.END_DT >= TO_CHAR(DATEADD(TO_DATE(T1.EXEC_DATE, 'yyyymmdd'), - 3, 'MM'),'yyyymmdd') --用例执行日期前3个月

AND     T1.END_DT <= T.MAX_END_DT --最大结清日期

GROUP BY T.CASE_NO , T.CASE_NAME , T.CASE_PHASE , T.CST_ID , T.REL_CST_ID , T.EXEC_DATE , T.ADJUST_DUE_DATE , T.MAX_END_DT ;



--4.3 续贷日期

--有结清的才有续贷的概念；续贷看客户及其关系人

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_14;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_14 AS

SELECT  T.CASE_NO

        ,T.CASE_NAME

        ,T.CASE_PHASE

        ,T.CST_ID

        ,T.REL_CST_ID

        ,T.EXEC_DATE

        ,T.ADJUST_DUE_DATE

        ,MAX(CASE

               WHEN T1.BUS_CTR_ID IS NOT NULL THEN '1'

               ELSE '0'

             END) AS IS_XD --是否发生续贷

        ,MIN(CASE

               WHEN TRIM(T1.HPN_DT) <> '' THEN T1.HPN_DT

             END) AS MIN_HPN_DT --续贷日期

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_12 T

INNER JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_05 T1

ON      T.CASE_NO = T1.CASE_NO

AND     T.CASE_PHASE = T1.CASE_PHASE

AND     T.CST_ID = T1.CST_ID

AND     T.REL_CST_ID = T1.REL_CST_ID

AND     T1.HPN_DT >= T.EXEC_DATE

AND     T1.HPN_DT <= T.ADJUST_DUE_DATE

AND     T1.END_DT = '18991231' --续贷的合同未结清

GROUP BY T.CASE_NO , T.CASE_NAME , T.CASE_PHASE , T.CST_ID , T.REL_CST_ID , T.EXEC_DATE , T.ADJUST_DUE_DATE;



--4.4 续贷金额

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_15;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_15 AS

SELECT  T.CASE_NO

        ,T.CASE_NAME

        ,T.CASE_PHASE

        ,T.CST_ID

        ,T.REL_CST_ID

        ,T.EXEC_DATE

        ,T.ADJUST_DUE_DATE

        ,T.MIN_HPN_DT --续贷日期

        ,SUM(T1.CTR_AMT) AS XD_CTR_AMT --续贷金额

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_14 T

INNER JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_05 T1

ON      T.CASE_NO = T1.CASE_NO

AND     T.CASE_PHASE = T1.CASE_PHASE

AND     T.CST_ID = T1.CST_ID

AND     T.REL_CST_ID = T1.REL_CST_ID

AND     T1.HPN_DT >= T.MIN_HPN_DT

AND     T1.HPN_DT <= T.ADJUST_DUE_DATE

AND     T1.END_DT = '18991231' --续贷的合同未结清

GROUP BY T.CASE_NO , T.CASE_NAME , T.CASE_PHASE , T.CST_ID , T.REL_CST_ID , T.EXEC_DATE , T.ADJUST_DUE_DATE , T.MIN_HPN_DT;

;



--4.5 续贷指标合并

--汇总时需注意，是否结清按客户本人统计（IS_SLF='1'），是否续贷按客户本人+关系人（IS_SLF='1' OR IS_REL_PTY='1'）

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_16;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_16 AS

SELECT  T.CASE_NO

        ,T.CASE_NAME

        ,T.CASE_PHASE

        ,T.CST_ID

        ,T.REL_CST_ID

        ,T.EXEC_DATE

        ,T.ADJUST_DUE_DATE

        ,T.MAX_END_DT --结清日期

        ,T.JQ_CTR_AMT --结清金额

        ,CASE

           WHEN T1.REL_CST_ID IS NOT NULL THEN '1'

           ELSE '0'

         END                         AS IS_XD --是否发生续贷

        ,COALESCE(T1.MIN_HPN_DT, '') AS MIN_HPN_DT --续贷日期

        ,COALESCE(T1.XD_CTR_AMT, 0)  AS XD_CTR_AMT --续贷金额

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_13 T

LEFT JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_15 T1

ON      T.CASE_NO = T1.CASE_NO

AND     T.CASE_PHASE = T1.CASE_PHASE

AND     T.CST_ID = T1.CST_ID

AND     T.REL_CST_ID = T1.REL_CST_ID;





--5、经营性贷款提额



--5.1 取循环贷款合同信息表中实际启用额度

--由于前面要用到实际启用额度，所以移至前面提前跑。

/*

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_17;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_17 AS

SELECT  T.DT

        ,T.BUS_CTR_ID

        ,SUM(T.ACTL_START_USE_CRD_LMT) AS ACTL_START_USE_CRD_LMT --实际启用授信额度

FROM    (

            SELECT  DT

                    ,BUS_CTR_ID

                    ,CRC_INF_STG_ID --循环信息阶段号

                    ,ACTL_START_USE_CRD_LMT --实际启用授信额度

                    ,ROW_NUMBER() OVER ( PARTITION BY DT , BUS_CTR_ID , CRC_INF_STG_ID ORDER BY SRL_NBR DESC ) AS ROW_NO

            FROM    EDW.DIM_BUS_LOAN_CRC_CTR_INF_DD --循环贷款合同信息

            WHERE   DT <= '20230501'

        ) T

WHERE   T.ROW_NO = 1

GROUP BY T.DT , T.BUS_CTR_ID;

*/



--5.2 循环贷合同操作记录信息,取合同状态为冻结、但冻结原因为自动冻结的合同 (分区表)

/*

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_18;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_18

(

    OBJ_ID      STRING COMMENT '合同号'

    ,OPR_TYP    STRING COMMENT '操作类型'

    ,FRZ_RSN_CD STRING COMMENT '解冻/冻结理由代码'

    ,FRZ_RSN    STRING COMMENT '解冻/冻结理由'

)

COMMENT

'每个dt每个合同的冻结状态'

PARTITIONED BY

(

    DT STRING COMMENT '日期分区'

);



INSERT OVERWRITE TABLE LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_18 PARTITION (DT) --数据铺底后改为DT='20230501'

SELECT  T.OBJ_ID

        ,T.OPR_TYP --操作类型

        ,T.FRZ_RSN_CD --解冻/冻结理由代码

        ,T.FRZ_RSN --解冻/冻结理由

        ,T.DT

FROM    (

            SELECT  DT

                    ,OBJ_ID

                    ,SRL_NBR

                    ,OPR_TYP

                    ,FRZ_RSN_CD

                    ,FRZ_RSN

                    ,HDL_DT

                    ,ROW_NUMBER() OVER ( PARTITION BY DT , OBJ_ID ORDER BY HDL_DT DESC , SRL_NBR DESC ) AS ROW_NO

            FROM    EDW.DWD_BUS_LOAN_CRC_CTR_OPR_RCD_INF_DD

            WHERE

			--DT = '20230501'

            --！数据铺底后去掉下面的限制条件，上面改为DT='20230501'

                DT >= (SELECT L90D_MIN_EXEC_DATE FROM LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_MIN_EXEC_DATE) and dt<= '20230501'

        ) T

WHERE   T.ROW_NO = 1;

*/





--5.3 是否接力贷合同

--4min

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_19;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_19 AS

SELECT  T.BUSI_CTR_ID AS BUS_CTR_ID

        ,T2.REL_OBJ_ID --上一笔借据流水号

        ,T3.BUS_CTR_ID AS PRE_BUS_CTR_ID --上一笔合同流水号

        ,T3.DTRB_DT --上一笔合同发放日期

        ,T3.APNT_MTU_DAY --上一笔合同约定到期日

        ,T3.EXE_MTU_DAY --上一笔合同执行到期日

        ,CASE

           WHEN TRIM(T3.BUS_CTR_ID) <> '' AND T3.EXE_MTU_DAY > '20230501' THEN '1'

           ELSE '0'

         END          AS IS_DELE --是否接力贷

FROM    EDW.DIM_BUS_LOAN_CTR_INF_DD T

LEFT JOIN    EDW.DWD_BUS_LOAN_APL_INF_DD T1 --信贷业务申请信息表

ON      T.BUSI_APL_ID = T1.APL_ID

AND     T.CST_ID = T1.CST_ID

AND     T1.DT = '20230501'

LEFT JOIN    EDW.DWD_BUS_LOAN_REL_APL_INF_DD T2 --信贷业务关联申请信息

ON      T1.APL_ID = T2.APL_SRL_NBR  --申请流水号

AND     T2.REL_OBJ_TYP = 'BusinessDueBill'

AND     T2.DT = '20230501'

LEFT JOIN    EDW.DWS_BUS_LOAN_DBIL_INF_DD T3

ON      T2.REL_OBJ_ID = T3.DBIL_ID  --关联对象上一笔

AND     T3.DT = '20230501'

WHERE   T.DT = '20230501';



--5.4 每个客户+每个DT+每个合同号

--为什么不设置成分区表？--因为如果设置了DT分区，那新增的用例就取不到前面的数据了，考虑以用例做分区。--以用例做分区

--20min

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_20;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_20

(

    CASE_NO          STRING  COMMENT '用例编号'

    ,CASE_NAME       STRING  COMMENT '用例名称'

    ,CASE_PHASE      STRING  COMMENT '用例批次'

    ,CST_ID          STRING  COMMENT '客户号'

    ,EXEC_DATE       STRING  COMMENT '用例执行日期'

    ,ADJUST_DUE_DATE STRING  COMMENT '用例截止日期'

    ,REL_CST_ID      STRING  COMMENT '关联人'

    ,IS_SLF          STRING  COMMENT '是否本人'

    ,IS_SAM_RSK      STRING  COMMENT '是否同一风险控制号'

    ,IS_REL_PTY      STRING  COMMENT '是否关联人'

    ,DT              STRING  COMMENT '日期分区'

    ,BUS_CTR_ID      STRING  COMMENT '合同号'

    ,HPN_DT          STRING  COMMENT '合同发生日期'

    ,APNT_START_DT   STRING  COMMENT '合同约定开始日期'

    ,APNT_MTU_DT     STRING  COMMENT '合同约定结束日期'

    ,END_DT          STRING  COMMENT '合同结清日期'

    ,CTR_AMT         DECIMAL COMMENT '合同金额'

    ,CTR_BAL         DECIMAL COMMENT '合同余额'

    ,FRZ_STS_CD      STRING  COMMENT '冻结状态代码'

    ,BIND_AMT        DECIMAL COMMENT '实际启用授信额度'

    ,IS_CRC_LOAN     STRING  COMMENT '是否循环类贷款' --是否循环类贷款:是否循环为&quot;是&quot; 或 随贷通

    ,PD_NM           STRING  COMMENT '产品种类'

    ,OPR_TYP         STRING  COMMENT '操作类型'

    ,FRZ_RSN_CD      STRING  COMMENT '解冻/冻结理由代码'

    ,FRZ_RSN         STRING  COMMENT '解冻/冻结理由'

    ,MIN_DTRB_DT     STRING  COMMENT '最早一笔借据发放日期'

)

COMMENT

'客户每个DT的合同详情表';

--1h

INSERT INTO LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_20

SELECT  T.CASE_NO

        ,T.CASE_NAME

        ,T.CASE_PHASE

        ,T.CST_ID

        ,T.EXEC_DATE

        ,T.ADJUST_DUE_DATE

        ,T.REL_CST_ID --关联人

        ,T.IS_SLF --是否本人

        ,T.IS_SAM_RSK --是否同一风险控制号

        ,T.IS_REL_PTY --是否关联人

        ,T2.DT

        ,T2.BUSI_CTR_ID               AS BUS_CTR_ID

        ,T2.HPN_DT

        ,T2.APNT_START_DT --合同约定开始日期

        ,T2.APNT_MTU_DT --合同约定结束日期

        ,T2.END_DT --结清日期

        ,T2.CTR_AMT --合同金额

        ,T2.CTR_BAL --合同余额

        ,T2.FRZ_STS_CD --冻结状态代码

        ,CASE

           WHEN SUBSTR(T2.PD_CD, 1, 7) = '2010503' THEN T5.BIND_LMT

           ELSE COALESCE(T3.ACTL_START_USE_CRD_LMT, T2.CTR_AMT)

         END                          AS BIND_AMT --实际启用授信额度

        ,CASE

           WHEN ( T2.CRC_IND = '1' OR T2.PD_CD LIKE '2010503%' ) AND SUBSTR(T2.PD_CD, 1, 7) <> '2010402' AND SUBSTR(T2.PD_CD, 1, 5) <> '20108' THEN '1'

           ELSE '0'

         END                          AS IS_CRC_LOAN --是否循环类贷款:是否循环为&quot;是&quot; 或 随贷通

        ,CASE

           WHEN T2.BUSI_CTR_ID IS NOT NULL AND SUBSTR(T2.PD_CD, 1, 7) = '2010503'                                              THEN '随贷通'

           WHEN T2.BUSI_CTR_ID IS NOT NULL AND T2.PD_CD IN ( '201050101040348' , '201050102010146' )                           THEN '泰e贷'

           WHEN T2.BUSI_CTR_ID IS NOT NULL AND ( T2.CRC_IND = '1' AND T2.IS_SLF_CRC = '1' AND T2.CYC_TYP_CD IN ( '1' , '2' ) ) THEN '融e贷'

           WHEN T2.BUSI_CTR_ID IS NOT NULL                                                                                     THEN '其他贷款'

           ELSE ''

         END                          AS PD_NM --产品种类

        ,COALESCE(T4.OPR_TYP, '')     AS OPR_TYP --操作类型

        ,COALESCE(T4.FRZ_RSN_CD, '')  AS FRZ_RSN_CD --解冻/冻结理由代码

        ,COALESCE(T4.FRZ_RSN, '')     AS FRZ_RSN --解冻/冻结理由

        ,COALESCE(T6.MIN_DTRB_DT, '') AS MIN_DTRB_DT --最早一笔借据发放日期

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_REL T

INNER JOIN    EDW.DIM_BUS_LOAN_CTR_INF_DD T2 --信贷合同信息表

ON      T.REL_CST_ID = T2.CST_ID

AND     T2.DT <= '20230501'

AND     T2.DT >= TO_CHAR(DATEADD(TO_DATE(T.EXEC_DATE, 'yyyymmdd'), - 90, 'DD'), 'yyyymmdd') --提额需追溯执行日期前90天

--AND     T2.DT >= (SELECT L90D_MIN_EXEC_DATE FROM LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_MIN_EXEC_DATE) --提额需追溯执行日期前90天

AND     T2.DT <= T.ADJUST_DUE_DATE --多个dt

--只有在筛选目标客户的时候考虑了持有经营性贷款，看转化时是看全部贷款，所以去掉下面的限制条件。

--AND     ( SUBSTR(T2.PD_CD, 1, 9) = '201050102'

--    OR SUBSTR(T2.PD_CD, 1, 7) = '2010503' ) --经营性贷款

LEFT JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_17 T3

ON      T2.DT = T3.DT

AND     T2.BUSI_CTR_ID = T3.BUS_CTR_ID

LEFT JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_18 T4

ON      T2.DT = T4.DT

AND     T2.BUSI_CTR_ID = T4.OBJ_ID

LEFT JOIN    EDW.DWD_BUS_LOAN_FNC_CRD_LMT_INF_DD T5

ON      T2.DT = T5.DT

AND     T2.BUSI_CTR_ID = T5.BUS_CTR_ID

AND     T5.DT = '20230501'

LEFT JOIN    (

                 SELECT  BUS_CTR_ID

                         ,MIN(DTRB_DT) AS MIN_DTRB_DT --最早一笔借据发放日期

                 FROM    EDW.DWS_BUS_LOAN_DBIL_INF_DD --借据表

                 WHERE   DT = '20230501'

                 GROUP BY BUS_CTR_ID

             ) T6

ON      T2.BUSI_CTR_ID = T6.BUS_CTR_ID --非循环贷款，有借据才生效

LEFT JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_19 T7

ON      T2.BUSI_CTR_ID = T7.BUS_CTR_ID

WHERE   T7.IS_DELE <> '1' --剔除接力贷

--数据铺底之后放开

--AND   T.ADJUST_DUE_DATE >= '20230501'

;



--5.5 满足提额条件的合同汇总（循环贷款、非循环贷款条件有差异）

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_21;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_21 AS

SELECT  A.CASE_NO --用例编号

        ,A.CASE_NAME --用例名称

        ,A.CASE_PHASE --用例批次

        ,A.CST_ID --客户号

        ,A.EXEC_DATE --用例执行日期

        ,A.ADJUST_DUE_DATE --用例截止日期

        ,A.REL_CST_ID --关联人

        ,A.IS_SLF --是否本人

        ,A.IS_SAM_RSK --是否同一风险控制号

        ,A.IS_REL_PTY --是否关联人

        ,A.DT --日期分区

        ,COALESCE(SUM(A.BIND_AMT),0) AS BIND_AMT --实际启用额度

        ,COALESCE(SUM(CASE WHEN A.PD_NM='随贷通' THEN A.BIND_AMT ELSE 0 END),0) AS SDT_BIND_AMT --随贷通额度

        ,COALESCE(SUM(CASE WHEN A.PD_NM='泰e贷' THEN A.BIND_AMT ELSE 0 END),0) AS TED_BIND_AMT --泰e贷额度

        ,COALESCE(SUM(CASE WHEN A.PD_NM='融e贷' THEN A.BIND_AMT ELSE 0 END),0) AS RED_BIND_AMT --融e贷额度

        ,COALESCE(SUM(CASE WHEN A.PD_NM='其他贷款' THEN A.BIND_AMT ELSE 0 END),0) AS OTHER_BIND_AMT --其他贷款额度

FROM    (

            SELECT  T . *

                    ,CASE

                       WHEN IS_CRC_LOAN = '1' AND ( FRZ_STS_CD = '1' OR ( FRZ_STS_CD = '2' AND ( ( FRZ_RSN NOT LIKE '%不良%' AND FRZ_RSN NOT LIKE '%逾期%' AND FRZ_RSN NOT LIKE '%申请冻结%' AND FRZ_RSN NOT LIKE '%止付%' AND FRZ_RSN NOT LIKE '%风险%' ) OR FRZ_RSN LIKE '%风险可控%' OR FRZ_RSN LIKE '%无风险%' ) ) )                 THEN '1' --循环贷款，冻结状态为1,2

                       WHEN IS_CRC_LOAN = '0' AND CTR_BAL > 0 AND ( FRZ_STS_CD = '1' OR ( FRZ_STS_CD = '2' AND ( ( FRZ_RSN NOT LIKE '%不良%' AND FRZ_RSN NOT LIKE '%逾期%' AND FRZ_RSN NOT LIKE '%申请冻结%' AND FRZ_RSN NOT LIKE '%止付%' AND FRZ_RSN NOT LIKE '%风险%' ) OR FRZ_RSN LIKE '%风险可控%' OR FRZ_RSN LIKE '%无风险%' ) ) ) THEN '1' --非循环贷款，冻结状态为1,2

                       WHEN IS_CRC_LOAN = '0' AND ( FRZ_STS_CD IS NULL OR FRZ_STS_CD = '' ) AND MIN_DTRB_DT <> '' AND MIN_DTRB_DT <= DT                                                                                                                                                                               THEN '1' --非循环贷款，冻结状态为空

                       ELSE '0'

                     END AS IS_TE_CTR --是否为满足提额条件的合同

            FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_20 T

        ) A

WHERE   A.IS_TE_CTR = '1'

GROUP BY A.CASE_NO , A.CASE_NAME , A.CASE_PHASE , A.CST_ID , A.EXEC_DATE , A.ADJUST_DUE_DATE , A.REL_CST_ID , A.IS_SLF , A.IS_SAM_RSK , A.IS_REL_PTY , A.DT;



--5.6 用例执行日期前90天最高额度 &amp; 用例执行期间最高额度

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_22;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_22 AS

SELECT  T.CASE_NO --用例编号

        ,T.CASE_NAME --用例名称

        ,T.CASE_PHASE --用例批次

        ,T.CST_ID --客户号

        ,T.EXEC_DATE --用例执行日期

        ,T.ADJUST_DUE_DATE --用例截止日期

        ,T.REL_CST_ID --关联人

        ,T.IS_SLF --是否本人

        ,T.IS_SAM_RSK --是否同一风险控制号

        ,T.IS_REL_PTY  --是否关联人

        --用例执行日期前90天最高额度

        ,MAX(CASE

               WHEN DATEDIFF(TO_DATE(T.EXEC_DATE, 'yyyymmdd'), TO_DATE(T.DT, 'yyyymmdd'), 'DD') BETWEEN 1 AND 90 THEN T.BIND_AMT

               ELSE 0

             END) AS BEFORE_MAX_AMT --提额前90天最高额度

        ,MAX(CASE

               WHEN DATEDIFF(TO_DATE(T.EXEC_DATE, 'yyyymmdd'), TO_DATE(T.DT, 'yyyymmdd'), 'DD') BETWEEN 1 AND 90 THEN T.SDT_BIND_AMT

               ELSE 0

             END) AS SDT_BEFORE_MAX_AMT --随贷通提额前90天最高额度

        ,MAX(CASE

               WHEN DATEDIFF(TO_DATE(T.EXEC_DATE, 'yyyymmdd'), TO_DATE(T.DT, 'yyyymmdd'), 'DD') BETWEEN 1 AND 90 THEN T.TED_BIND_AMT

               ELSE 0

             END) AS TED_BEFORE_MAX_AMT --泰e贷提额前90天最高额度

        ,MAX(CASE

               WHEN DATEDIFF(TO_DATE(T.EXEC_DATE, 'yyyymmdd'), TO_DATE(T.DT, 'yyyymmdd'), 'DD') BETWEEN 1 AND 90 THEN T.RED_BIND_AMT

               ELSE 0

             END) AS RED_BEFORE_MAX_AMT --融e贷提额前90天最高额度

        ,MAX(CASE

               WHEN DATEDIFF(TO_DATE(T.EXEC_DATE, 'yyyymmdd'), TO_DATE(T.DT, 'yyyymmdd'), 'DD') BETWEEN 1 AND 90 THEN T.OTHER_BIND_AMT

               ELSE 0

             END) AS OTHER_BEFORE_MAX_AMT  --其他贷款提额前90天最高额度

        --用例执行期间最高额度

        ,MAX(CASE

               WHEN T.DT >= T.EXEC_DATE AND T.DT <= T.ADJUST_DUE_DATE THEN T.BIND_AMT

               ELSE 0

             END) AS AFTER_MAX_AMT --提额后最高额度

        ,MAX(CASE

               WHEN T.DT >= T.EXEC_DATE AND T.DT <= T.ADJUST_DUE_DATE THEN T.SDT_BIND_AMT

               ELSE 0

             END) AS SDT_AFTER_MAX_AMT --随贷通提额后最高额度

        ,MAX(CASE

               WHEN T.DT >= T.EXEC_DATE AND T.DT <= T.ADJUST_DUE_DATE THEN T.TED_BIND_AMT

               ELSE 0

             END) AS TED_AFTER_MAX_AMT --泰e贷提额后最高额度

        ,MAX(CASE

               WHEN T.DT >= T.EXEC_DATE AND T.DT <= T.ADJUST_DUE_DATE THEN T.RED_BIND_AMT

               ELSE 0

             END) AS RED_AFTER_MAX_AMT --融e贷提额后最高额度

        ,MAX(CASE

               WHEN T.DT >= T.EXEC_DATE AND T.DT <= T.ADJUST_DUE_DATE THEN T.OTHER_BIND_AMT

               ELSE 0

             END) AS OTHER_AFTER_MAX_AMT --其他贷款提额后最高额度

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_21 T

GROUP BY T.CASE_NO , T.CASE_NAME , T.CASE_PHASE , T.CST_ID , T.EXEC_DATE , T.ADJUST_DUE_DATE , T.REL_CST_ID , T.IS_SLF , T.IS_SAM_RSK , T.IS_REL_PTY;





--6、贷款指标合并

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN AS

SELECT  T.CASE_NO

        ,T.CASE_NAME

        ,T.CASE_PHASE

        ,T.CST_ID

        ,T.REL_CST_ID

        ,T.IS_BT_COM_APL --是否发生申请

        ,T.IS_BT_COM_CTR --是否发生合同

        ,T.IS_BT_COM_DBIL --是否发生借据

        ,T.IS_SDT_BT_APL --是否发生随贷通申请

        ,T.IS_SDT_BT_CTR --是否发生随贷通合同

        ,T.IS_SDT_BT_DBIL --是否发生随贷通借据

        ,T.IS_TED_BT_APL --是否发生泰e贷申请

        ,T.IS_TED_BT_CTR --是否发生泰e贷合同

        ,T.IS_TED_BT_DBIL --是否发生泰e贷借据

        ,T.IS_RED_BT_APL --是否发生融e贷申请

        ,T.IS_RED_BT_CTR --是否发生融e贷合同

        ,T.IS_RED_BT_DBIL --是否发生融e贷借据

        ,T.BT_COM_APL_HPN_DT --申请发生日期

        ,T.BT_COM_CTR_HPN_DT --合同发生日期

        ,T.BT_COM_DBIL_DTRB_DT --借据发生日期

        ,T.BT_SDT_APL_HPN_DT --随贷通申请发生日期

        ,T.BT_SDT_CTR_HPN_DT --随贷通合同发生日期

        ,T.BT_SDT_DBIL_DTRB_DT --随贷通借据发生日期

        ,T.BT_TED_APL_HPN_DT --泰e贷申请发生日期

        ,T.BT_TED_CTR_HPN_DT --泰e贷合同发生日期

        ,T.BT_TED_DBIL_DTRB_DT --泰e贷借据发生日期

        ,T.BT_RED_APL_HPN_DT --融e贷申请发生日期

        ,T.BT_RED_CTR_HPN_DT --融e贷合同发生日期

        ,T.BT_RED_DBIL_DTRB_DT --融e贷借据发生日期

        ,T.BT_SUM_COM_DBIL_AMT --借据发放金额

        ,T.BT_SUM_COM_DBIL_BAL --借据本金余额

        ,T.BT_SUM_SDT_DBIL_AMT --随贷通借据发放金额

        ,T.BT_SUM_SDT_DBIL_BAL --随贷通借据本金余额

        ,T.BT_SUM_TED_DBIL_AMT --泰e贷借据发放金额

        ,T.BT_SUM_TED_DBIL_BAL --泰e贷借据本金余额

        ,T.BT_SUM_RED_DBIL_AMT --融e贷借据发放金额

        ,T.BT_SUM_RED_DBIL_BAL  --融e贷借据本金余额

        --小企业不限制贷款类型为一般贷款，所以单独一套逻辑

        ,T.IS_BT_CTR --小企业_是否发生合同

        ,T.BT_CTR_HPN_DT --小企业_合同发生日期

        ,T.BT_SUM_COM_CTR_AMT --授信额度

        ,T.BT_SUM_COM_CTR_BAL --用信额度

        ,T.BT_SUM_SDT_CTR_AMT --随贷通授信额度

        ,T.BT_SUM_SDT_CTR_BAL --随贷通用信额度

        ,T.BT_SUM_TED_CTR_AMT --泰e贷授信额度

        ,T.BT_SUM_TED_CTR_BAL --泰e贷用信额度

        ,T.BT_SUM_RED_CTR_AMT --融e贷授信额度

        ,T.BT_SUM_RED_CTR_BAL --融e贷用信额度

        ,T.BT_SUM_CTR_AMT --小企业_授信额度

        ,T.BT_SUM_CTR_BAL  --小企业_用信额度

        --泰惠收配贷、信用卡配贷

        ,T.ONL_SRC_BT_BIND_AMT --线上来源实际启用额度

        ,T.ONL_SRC_BT_CTR_BAL --线上来源合同余额

        ,T.OTLN_SRC_BT_BIND_AMT --线下来源实际启用额度

        ,T.OTLN_SRC_BT_CTR_BAL --线下来源合同余额

        ,T.LOAN_SRC_BT_BIND_AMT --贷款来源实际启用额度

        ,T.LOAN_SRC_BT_CTR_BAL --贷款来源合同余额

        ,COALESCE(T1.IS_DBIL, '0')                               AS IS_DBIL --是否发生借据

        ,COALESCE(T1.SUM_DBIL_CNT, 0)                            AS SUM_DBIL_CNT --借据笔数

        ,COALESCE(T1.DBIL_DTRB_DT, '')                           AS DBIL_DTRB_DT --借据发放日期

        ,COALESCE(T1.SUM_DBIL_AMT, 0)                            AS SUM_DBIL_AMT --借据发放金额

        ,COALESCE(T1.SUM_DBIL_BAL, 0)                            AS SUM_DBIL_BAL --借据余额

        ,COALESCE(T1.SUM_DBIL_BAL_AVG, 0)                        AS SUM_DBIL_BAL_AVG --借据余额日均

        ,COALESCE(T1.IS_SDT_DBIL, '0')                           AS IS_SDT_DBIL --是否发生随贷通借据

        ,COALESCE(T1.SUM_SDT_DBIL_CNT, 0)                        AS SUM_SDT_DBIL_CNT --随贷通借据笔数

        ,COALESCE(T1.SDT_DBIL_DTRB_DT, '')                       AS SDT_DBIL_DTRB_DT --随贷通借据发放日期

        ,COALESCE(T1.SUM_SDT_DBIL_AMT, 0)                        AS SUM_SDT_DBIL_AMT --随贷通借据发放金额

        ,COALESCE(T1.SUM_SDT_DBIL_BAL, 0)                        AS SUM_SDT_DBIL_BAL --随贷通借据余额

        ,COALESCE(T1.SUM_SDT_DBIL_BAL_AVG, 0)                    AS SUM_SDT_DBIL_BAL_AVG --随贷通借据余额日均

        ,COALESCE(T1.IS_TED_DBIL, '0')                           AS IS_TED_DBIL --是否发生泰e贷借据

        ,COALESCE(T1.SUM_TED_DBIL_CNT, 0)                        AS SUM_TED_DBIL_CNT --泰e贷借据笔数

        ,COALESCE(T1.TED_DBIL_DTRB_DT, '')                       AS TED_DBIL_DTRB_DT --泰e贷借据发放日期

        ,COALESCE(T1.SUM_TED_DBIL_AMT, 0)                        AS SUM_TED_DBIL_AMT --泰e贷借据发放金额

        ,COALESCE(T1.SUM_TED_DBIL_BAL, 0)                        AS SUM_TED_DBIL_BAL --泰e贷借据余额

        ,COALESCE(T1.SUM_TED_DBIL_BAL_AVG, 0)                    AS SUM_TED_DBIL_BAL_AVG --泰e贷借据余额日均

        ,COALESCE(T1.IS_RED_DBIL, '0')                           AS IS_RED_DBIL --是否发生融e贷借据

        ,COALESCE(T1.SUM_RED_DBIL_CNT, 0)                        AS SUM_RED_DBIL_CNT --融e贷借据笔数

        ,COALESCE(T1.RED_DBIL_DTRB_DT, '')                       AS RED_DBIL_DTRB_DT --融e贷借据发放日期

        ,COALESCE(T1.SUM_RED_DBIL_AMT, 0)                        AS SUM_RED_DBIL_AMT --融e贷借据发放金额

        ,COALESCE(T1.SUM_RED_DBIL_BAL, 0)                        AS SUM_RED_DBIL_BAL --融e贷借据余额

        ,COALESCE(T1.SUM_RED_DBIL_BAL_AVG, 0)                    AS SUM_RED_DBIL_BAL_AVG --融e贷借据余额日均

        ,COALESCE(T2.SUM_LOAN_FTP_INC, 0)                        AS SUM_LOAN_FTP_INC --推广期间贷款FTP利润

        ,COALESCE(T2.SUM_PREDICT_LOAN_FTP_INC, 0)                AS SUM_PREDICT_LOAN_FTP_INC --预测贷款FTP年利润

        ,CASE

           WHEN T3.REL_CST_ID IS NOT NULL THEN '1'

           ELSE '0'

         END                                                     AS IS_JQ --是否结清

        ,COALESCE(T3.MAX_END_DT, '')                             AS JQ_DT --结清日期

        ,COALESCE(T3.JQ_CTR_AMT, 0)                              AS JQ_CTR_AMT --结清金额

        ,COALESCE(T3.IS_XD, '0')                                 AS IS_XD --是否发生续贷

        ,COALESCE(T3.MIN_HPN_DT, '')                             AS XD_DT --续贷日期

        ,COALESCE(T3.XD_CTR_AMT, 0)                              AS XD_CTR_AMT --续贷金额

        ,CASE

           WHEN COALESCE(T3.XD_CTR_AMT, 0) - COALESCE(T3.JQ_CTR_AMT, 0) > 0 THEN '1'

           ELSE '0'

         END IS_ZE_XD --是否增额续贷

        ,CASE

           WHEN COALESCE(T3.XD_CTR_AMT, 0) - COALESCE(T3.JQ_CTR_AMT, 0) = 0 THEN '1'

           ELSE '0'

         END IS_YE_XD --是否原额续贷

        ,CASE

           WHEN COALESCE(T3.XD_CTR_AMT, 0) - COALESCE(T3.JQ_CTR_AMT, 0) < 0 THEN '1'

           ELSE '0'

         END IS_JE_XD --是否减额续贷

        ,COALESCE(T3.XD_CTR_AMT, 0) - COALESCE(T3.JQ_CTR_AMT, 0) AS DIFF_CTR_AMT --续贷金额与结清金额之差

        ,COALESCE(T4.BEFORE_MAX_AMT, 0)                          AS BEFORE_MAX_AMT --提额前90天最高额度

        ,COALESCE(T4.SDT_BEFORE_MAX_AMT, 0)                      AS SDT_BEFORE_MAX_AMT --随贷通提额前90天最高额度

        ,COALESCE(T4.TED_BEFORE_MAX_AMT, 0)                      AS TED_BEFORE_MAX_AMT --泰e贷提额前90天最高额度

        ,COALESCE(T4.RED_BEFORE_MAX_AMT, 0)                      AS RED_BEFORE_MAX_AMT --融e贷提额前90天最高额度

        ,COALESCE(T4.OTHER_BEFORE_MAX_AMT, 0)                    AS OTHER_BEFORE_MAX_AMT --其他贷款提额前90天最高额度

        ,COALESCE(T4.AFTER_MAX_AMT, 0)                           AS AFTER_MAX_AMT --提额后最高额度

        ,COALESCE(T4.SDT_AFTER_MAX_AMT, 0)                       AS SDT_AFTER_MAX_AMT --随贷通提额后最高额度

        ,COALESCE(T4.TED_AFTER_MAX_AMT, 0)                       AS TED_AFTER_MAX_AMT --泰e贷提额后最高额度

        ,COALESCE(T4.RED_AFTER_MAX_AMT, 0)                       AS RED_AFTER_MAX_AMT --融e贷提额后最高额度

        ,COALESCE(T4.OTHER_AFTER_MAX_AMT, 0)                     AS OTHER_AFTER_MAX_AMT --其他贷款提额后最高额度

        ,CASE

           WHEN COALESCE(T4.BEFORE_MAX_AMT, 0) > 0 AND COALESCE(T4.AFTER_MAX_AMT, 0) > 0 AND COALESCE(T4.AFTER_MAX_AMT, 0) - COALESCE(T4.BEFORE_MAX_AMT, 0) >= 10000 THEN '1'

           ELSE '0'

         END                                                     AS IS_TE --是否提额

        ,CASE

           WHEN COALESCE(T4.SDT_BEFORE_MAX_AMT, 0) > 0 AND COALESCE(T4.SDT_AFTER_MAX_AMT, 0) > 0 AND COALESCE(T4.SDT_AFTER_MAX_AMT, 0) - COALESCE(T4.SDT_BEFORE_MAX_AMT, 0) >= 10000 THEN '1'

           ELSE '0'

         END                                                     AS IS_SDT_TE --随贷通是否提额

        ,CASE

           WHEN COALESCE(T4.TED_BEFORE_MAX_AMT, 0) > 0 AND COALESCE(T4.TED_AFTER_MAX_AMT, 0) > 0 AND COALESCE(T4.TED_AFTER_MAX_AMT, 0) - COALESCE(T4.TED_BEFORE_MAX_AMT, 0) >= 10000 THEN '1'

           ELSE '0'

         END                                                     AS IS_TED_TE --泰e贷是否提额

        ,CASE

           WHEN COALESCE(T4.RED_BEFORE_MAX_AMT, 0) > 0 AND COALESCE(T4.RED_AFTER_MAX_AMT, 0) > 0 AND COALESCE(T4.RED_AFTER_MAX_AMT, 0) - COALESCE(T4.RED_BEFORE_MAX_AMT, 0) >= 10000 THEN '1'

           ELSE '0'

         END                                                     AS IS_RED_TE --融e贷是否提额

        ,CASE

           WHEN COALESCE(T4.OTHER_BEFORE_MAX_AMT, 0) > 0 AND COALESCE(T4.OTHER_AFTER_MAX_AMT, 0) > 0 AND COALESCE(T4.OTHER_AFTER_MAX_AMT, 0) - COALESCE(T4.OTHER_BEFORE_MAX_AMT, 0) >= 10000 THEN '1'

           ELSE '0'

         END                                                     AS IS_OTHER_TE --其他贷款是否提额

        ,CASE

           WHEN COALESCE(T4.BEFORE_MAX_AMT, 0) > 0 AND COALESCE(T4.AFTER_MAX_AMT, 0) > 0 AND COALESCE(T4.AFTER_MAX_AMT, 0) - COALESCE(T4.BEFORE_MAX_AMT, 0) >= 10000 THEN ( COALESCE(T4.AFTER_MAX_AMT, 0) - COALESCE(T4.BEFORE_MAX_AMT, 0) )

           ELSE 0

         END                                                     AS TE_AMT --提额总金额

        ,CASE

           WHEN COALESCE(T4.SDT_BEFORE_MAX_AMT, 0) > 0 AND COALESCE(T4.SDT_AFTER_MAX_AMT, 0) > 0 AND COALESCE(T4.SDT_AFTER_MAX_AMT, 0) - COALESCE(T4.SDT_BEFORE_MAX_AMT, 0) >= 10000 THEN ( COALESCE(T4.SDT_AFTER_MAX_AMT, 0) - COALESCE(T4.SDT_BEFORE_MAX_AMT, 0) )

           ELSE 0

         END                                                     AS SDT_TE_AMT --随贷通提额金额

        ,CASE

           WHEN COALESCE(T4.TED_BEFORE_MAX_AMT, 0) > 0 AND COALESCE(T4.TED_AFTER_MAX_AMT, 0) > 0 AND COALESCE(T4.TED_AFTER_MAX_AMT, 0) - COALESCE(T4.TED_BEFORE_MAX_AMT, 0) >= 10000 THEN ( COALESCE(T4.TED_AFTER_MAX_AMT, 0) - COALESCE(T4.TED_BEFORE_MAX_AMT, 0) )

           ELSE 0

         END                                                     AS TED_TE_AMT --泰e贷提额金额

        ,CASE

           WHEN COALESCE(T4.RED_BEFORE_MAX_AMT, 0) > 0 AND COALESCE(T4.RED_AFTER_MAX_AMT, 0) > 0 AND COALESCE(T4.RED_AFTER_MAX_AMT, 0) - COALESCE(T4.RED_BEFORE_MAX_AMT, 0) >= 10000 THEN ( COALESCE(T4.RED_AFTER_MAX_AMT, 0) - COALESCE(T4.RED_BEFORE_MAX_AMT, 0) )

           ELSE 0

         END                                                     AS RED_TE_AMT --融e贷提额金额

        ,CASE

           WHEN COALESCE(T4.OTHER_BEFORE_MAX_AMT, 0) > 0 AND COALESCE(T4.OTHER_AFTER_MAX_AMT, 0) > 0 AND COALESCE(T4.OTHER_AFTER_MAX_AMT, 0) - COALESCE(T4.OTHER_BEFORE_MAX_AMT, 0) >= 10000 THEN ( COALESCE(T4.RED_AFTER_MAX_AMT, 0) - COALESCE(T4.RED_BEFORE_MAX_AMT, 0) )

           ELSE 0

         END                                                     AS OTHER_TE_AMT --其他贷款提额金额

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_04 T

LEFT JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_09 T1

ON      T.CASE_NO = T1.CASE_NO

AND     T.CASE_PHASE = T1.CASE_PHASE

AND     T.CST_ID = T1.CST_ID

AND     T.REL_CST_ID = T1.REL_CST_ID

LEFT JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_11 T2

ON      T.CASE_NO = T2.CASE_NO

AND     T.CASE_PHASE = T2.CASE_PHASE

AND     T.CST_ID = T2.CST_ID

AND     T.REL_CST_ID = T2.REL_CST_ID

LEFT JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_16 T3

ON      T.CASE_NO = T3.CASE_NO

AND     T.CASE_PHASE = T3.CASE_PHASE

AND     T.CST_ID = T3.CST_ID

AND     T.REL_CST_ID = T3.REL_CST_ID

LEFT JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN_22 T4

ON      T.CASE_NO = T4.CASE_NO

AND     T.CASE_PHASE = T4.CASE_PHASE

AND     T.CST_ID = T4.CST_ID

AND     T.REL_CST_ID = T4.REL_CST_ID;





----/* 四、产效统计:存款 */----

--1、用例执行期间新开存款账号、存款规模

/*

--OLD：每次跑多个DT，受资源影响，跑得很慢，改成下面的两段代码。

--20min/1h30min （受DG资源影响）

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_DEP_01;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_DEP_01

(

    CASE_NAME        STRING COMMENT '用例名称'

    ,CST_ID          STRING COMMENT '客户号'

    ,EXEC_DATE       STRING COMMENT '用例执行日期'

    ,ADJUST_DUE_DATE STRING COMMENT '用例截止日期'

    ,REL_CST_ID      STRING COMMENT '关联人'

    ,IS_SLF          STRING COMMENT '是否本人'

    ,IS_SAM_RSK      STRING COMMENT '是否同一风险控制号'

    ,IS_REL_PTY      STRING COMMENT '是否关联人'

    ,DT              STRING COMMENT '日期'

    ,DEP_ACT_ID      STRING COMMENT '存款账号'

    ,OPN_DT          STRING COMMENT '开户日期'

    ,GL_BAL          STRING COMMENT '账户总账余额'

    ,IS_NORM_DEP     STRING COMMENT '存款账号是否正常'

    ,IS_BT_OPN       STRING COMMENT '是否在用例执行期间开户'

)

COMMENT

'每日存款账户表'

PARTITIONED BY

(

    CASE_NO     STRING COMMENT '用例编号'

    ,CASE_PHASE STRING COMMENT '用例批次'

);



INSERT INTO LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_DEP_01 PARTITION (CASE_NO,CASE_PHASE)

SELECT  T.CASE_NAME

        ,T.CST_ID

        ,T.EXEC_DATE

        ,T.ADJUST_DUE_DATE

        ,T.REL_CST_ID --关联人

        ,T.IS_SLF --是否本人

        ,T.IS_SAM_RSK --是否同一风险控制号

        ,T.IS_REL_PTY --是否关联人

        ,T1.DT

        ,T1.DEP_ACT_ID --存款账号

        ,T1.OPN_DT --开户日期

        ,T1.GL_BAL --账户总账余额

        ,CASE

           WHEN T1.ACT_STS_CD <> 'C' AND T1.ACT_CTG_CD_1 NOT IN ( '0501' , '0509' , '0601' ) THEN '1'

           ELSE '0'

         END AS IS_NORM_DEP --存款账号是否正常

        ,CASE

           WHEN T1.OPN_DT >= T.EXEC_DATE AND T1.OPN_DT <= T.ADJUST_DUE_DATE THEN '1'

           ELSE '0'

         END AS IS_BT_OPN --是否在用例执行期间开户

        ,T.CASE_NO

        ,T.CASE_PHASE

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_REL T

INNER JOIN    EDW.DWS_BUS_DEP_ACT_INF_DD T1 --存款账户信息汇总

ON      T.REL_CST_ID = T1.CST_ID

AND     T1.DT <= '20230501'

AND     T1.DT >= TO_CHAR(DATEADD(TO_DATE(T.EXEC_DATE, 'yyyymmdd'), - 30, 'DD'), 'yyyymmdd') --追溯执行日期前30天

AND     T1.DT >= (SELECT L30D_MIN_EXEC_DATE FROM LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_MIN_EXEC_DATE)

AND     T1.DT <= T.ADJUST_DUE_DATE --多个dt

--WHERE T.ADJUST_DUE_DATE>='20230501'  --数据铺底之后放开

;

*/



--上面代码取了多个dt，跑批效率低，改成DT增量表

--1.1 每日存款账户表

--全量跑：1h

--跑一天的dt：1min

/*

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_DEP_01_0;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_DEP_01_0

(

    CST_ID        STRING COMMENT '客户号'

    ,DEP_ACT_ID   STRING COMMENT '存款账号'

    ,OPN_DT       STRING COMMENT '开户日期'

    ,ACT_STS_CD   STRING COMMENT '存款账户状态代码'

    ,ACT_CTG_CD_1 STRING COMMENT '账户分类代码'

    ,GL_BAL       STRING COMMENT '账户总账余额'

)

COMMENT

'每日存款账户表'

PARTITIONED BY

(

    DT STRING COMMENT '日期分区'

);



INSERT OVERWRITE TABLE LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_DEP_01_0 PARTITION (DT) --数据铺底后改为DT='20230501'

SELECT  CST_ID

        ,DEP_ACT_ID --存款账号

        ,OPN_DT --开户日期

        ,ACT_STS_CD

        ,ACT_CTG_CD_1

        ,GL_BAL --账户总账余额

		,dt



FROM    EDW.DWS_BUS_DEP_ACT_INF_DD

WHERE

--DT = '20230501'

--数据铺底后改为:DT = '20230501'

   DT >= (SELECT L90D_MIN_EXEC_DATE FROM LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_MIN_EXEC_DATE) and dt<= '20230501'

;

*/





--1.2 关联用例取每日存款

--10min

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_DEP_01_1;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_DEP_01_1

(

    CASE_NAME        STRING COMMENT '用例名称'

    ,CST_ID          STRING COMMENT '客户号'

    ,EXEC_DATE       STRING COMMENT '用例执行日期'

    ,ADJUST_DUE_DATE STRING COMMENT '用例截止日期'

    ,REL_CST_ID      STRING COMMENT '关联人'

    ,IS_SLF          STRING COMMENT '是否本人'

    ,IS_SAM_RSK      STRING COMMENT '是否同一风险控制号'

    ,IS_REL_PTY      STRING COMMENT '是否关联人'

    ,DT              STRING COMMENT '日期'

    ,DEP_ACT_ID      STRING COMMENT '存款账号'

    ,OPN_DT          STRING COMMENT '开户日期'

    ,GL_BAL          STRING COMMENT '账户总账余额'

    ,IS_NORM_DEP     STRING COMMENT '存款账号是否正常'

    ,IS_BT_OPN       STRING COMMENT '是否在用例执行期间开户'

)

COMMENT

'每日存款账户表'

PARTITIONED BY

(

    CASE_NO     STRING COMMENT '用例编号'

    ,CASE_PHASE STRING COMMENT '用例批次'

);



INSERT INTO LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_DEP_01_1 PARTITION (CASE_NO,CASE_PHASE)

SELECT  T.CASE_NAME

        ,T.CST_ID

        ,T.EXEC_DATE

        ,T.ADJUST_DUE_DATE

        ,T.REL_CST_ID --关联人

        ,T.IS_SLF --是否本人

        ,T.IS_SAM_RSK --是否同一风险控制号

        ,T.IS_REL_PTY --是否关联人

        ,T1.DT

        ,T1.DEP_ACT_ID --存款账号

        ,T1.OPN_DT --开户日期

        ,T1.GL_BAL --账户总账余额

        ,CASE

           WHEN T1.ACT_STS_CD <> 'C' AND T1.ACT_CTG_CD_1 NOT IN ( '0501' , '0509' , '0601' ) THEN '1'

           ELSE '0'

         END AS IS_NORM_DEP --存款账号是否正常

        ,CASE

           WHEN T1.OPN_DT >= T.EXEC_DATE AND T1.OPN_DT <= T.ADJUST_DUE_DATE THEN '1'

           ELSE '0'

         END AS IS_BT_OPN --是否在用例执行期间开户

        ,T.CASE_NO

        ,T.CASE_PHASE

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_REL T

INNER JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_DEP_01_0 T1 --存款账户信息汇总

ON      T.REL_CST_ID = T1.CST_ID

AND     T1.DT <= '20230501'

AND     T1.DT >= TO_CHAR(DATEADD(TO_DATE(T.EXEC_DATE, 'yyyymmdd'), - 30, 'DD'), 'yyyymmdd') --追溯执行日期前30天

--AND     T1.DT >= (SELECT L30D_MIN_EXEC_DATE FROM LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_MIN_EXEC_DATE)

AND     T1.DT <= T.ADJUST_DUE_DATE --多个dt

--数据铺底之后放开

--WHERE T.ADJUST_DUE_DATE>='20230501'

;



--2、存款账户开户日期、存款余额

--13min

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_DEP_02;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_DEP_02 AS

SELECT  T.CASE_NO

        ,T.CASE_NAME

        ,T.CASE_PHASE

        ,T.CST_ID

        ,T.REL_CST_ID

        ,MAX(CASE

               WHEN T.DT = T.ADJUST_DUE_DATE AND T.IS_BT_OPN = '1' AND T.IS_NORM_DEP = '1' THEN '1'

               ELSE '0'

             END)      AS IS_BT_DEP --是否新开立存款账户



		,SUM(CASE

			WHEN T.DT = T.ADJUST_DUE_DATE AND T.IS_BT_OPN = '1' AND T.IS_NORM_DEP = '1' THEN 1  ELSE 0

			END)      AS BT_DEP_SUM --新开立存款账户数

        ,MIN(CASE

               WHEN T.DT = T.ADJUST_DUE_DATE AND T.IS_BT_OPN = '1' AND T.IS_NORM_DEP = '1' AND T.OPN_DT IS NOT NULL THEN T.OPN_DT

               ELSE NULL

             END)      AS BT_DEP_OPN_DT --新开存款账户开户日期

        ,SUM(CASE

               WHEN T.DT = T.ADJUST_DUE_DATE AND T.IS_BT_OPN = '1' AND T.IS_NORM_DEP = '1' THEN T.GL_BAL

               ELSE 0

             END)      AS BT_SUM_DEP_BAL --存款余额

        ,SUM(CASE

               WHEN DATEDIFF(TO_DATE(T.EXEC_DATE, 'yyyymmdd'), TO_DATE(T.DT, 'yyyymmdd'), 'DD') BETWEEN 1 AND 30 THEN T.GL_BAL

               ELSE 0

             END) / 30 AS BEFORE_L30D_DEP_BAL_AVG --执行日期前30天存款余额日均

        ,CASE

           WHEN COUNT(DISTINCT CASE

                                 WHEN T.DT >= T.EXEC_DATE AND T.DT <= T.ADJUST_DUE_DATE THEN T.DT

                                 ELSE NULL

                               END) = 0 THEN 0

           ELSE SUM(CASE

                      WHEN T.DT >= T.EXEC_DATE AND T.DT <= T.ADJUST_DUE_DATE THEN T.GL_BAL

                      ELSE 0

                    END) / COUNT(DISTINCT CASE

                                            WHEN T.DT >= T.EXEC_DATE AND T.DT <= T.ADJUST_DUE_DATE THEN T.DT

                                            ELSE NULL

                                          END)

         END           AS BT_DEP_BAL_AVG  --用例执行期间存款余额日均

        --代发工资户综合经营用例：后面改为当前日期前30天AUM日均增加1万元，AUM=存款+理财

        ,CASE

           WHEN COUNT(DISTINCT CASE

                                 WHEN T.DT >= T.EXEC_DATE AND T.DT <= T.ADJUST_DUE_DATE AND T.DT > TO_CHAR(DATEADD(TO_DATE(T.ADJUST_DUE_DATE, 'yyyymmdd'), - 30, 'DD'), 'yyyymmdd') THEN T.DT

                                 ELSE NULL

                               END) = 0 THEN 0

           ELSE SUM(CASE

                      WHEN T.DT >= T.EXEC_DATE AND T.DT <= T.ADJUST_DUE_DATE AND T.DT > TO_CHAR(DATEADD(TO_DATE(T.ADJUST_DUE_DATE, 'yyyymmdd'), - 30, 'DD'), 'yyyymmdd') THEN T.GL_BAL

                      ELSE 0

                    END) / COUNT(DISTINCT CASE

                                            WHEN T.DT >= T.EXEC_DATE AND T.DT <= T.ADJUST_DUE_DATE AND T.DT > TO_CHAR(DATEADD(TO_DATE(T.ADJUST_DUE_DATE, 'yyyymmdd'), - 30, 'DD'), 'yyyymmdd') THEN T.DT

                                            ELSE NULL

                                          END)

         END           AS BT_RCTLY_30D_DEP_BAL_AVG  --用例执行后当前日期往前推30天存款余额日均

        --存款提升用例：执行日期后30天存款日均增加1万元，执行日期后90天存款日均增加5000元

        ,CASE

           WHEN COUNT(DISTINCT CASE

                                 WHEN T.DT >= T.EXEC_DATE AND T.DT <= T.ADJUST_DUE_DATE AND T.DT <= TO_CHAR(DATEADD(TO_DATE(T.EXEC_DATE, 'yyyymmdd'), 30, 'DD'), 'yyyymmdd') THEN T.DT

                                 ELSE NULL

                               END) = 0 THEN 0

           ELSE SUM(CASE

                      WHEN T.DT >= T.EXEC_DATE AND T.DT <= T.ADJUST_DUE_DATE AND T.DT <= TO_CHAR(DATEADD(TO_DATE(T.EXEC_DATE, 'yyyymmdd'), 30, 'DD'), 'yyyymmdd') THEN T.GL_BAL

                      ELSE 0

                    END) / COUNT(DISTINCT CASE

                                            WHEN T.DT >= T.EXEC_DATE AND T.DT <= T.ADJUST_DUE_DATE AND T.DT <= TO_CHAR(DATEADD(TO_DATE(T.EXEC_DATE, 'yyyymmdd'), 30, 'DD'), 'yyyymmdd') THEN T.DT

                                            ELSE NULL

                                          END)

         END           AS BT_L30D_DEP_BAL_AVG --用例执行后30天内存款余额日均

        ,CASE

           WHEN COUNT(DISTINCT CASE

                                 WHEN T.DT >= T.EXEC_DATE AND T.DT <= T.ADJUST_DUE_DATE AND T.DT <= TO_CHAR(DATEADD(TO_DATE(T.EXEC_DATE, 'yyyymmdd'), 90, 'DD'), 'yyyymmdd') THEN T.DT

                                 ELSE NULL

                               END) = 0 THEN 0

           ELSE SUM(CASE

                      WHEN T.DT >= T.EXEC_DATE AND T.DT <= T.ADJUST_DUE_DATE AND T.DT <= TO_CHAR(DATEADD(TO_DATE(T.EXEC_DATE, 'yyyymmdd'), 90, 'DD'), 'yyyymmdd') THEN T.GL_BAL

                      ELSE 0

                    END) / COUNT(DISTINCT CASE

                                            WHEN T.DT >= T.EXEC_DATE AND T.DT <= T.ADJUST_DUE_DATE AND T.DT <= TO_CHAR(DATEADD(TO_DATE(T.EXEC_DATE, 'yyyymmdd'), 90, 'DD'), 'yyyymmdd') THEN T.DT

                                            ELSE NULL

                                          END)

         END           AS BT_L90D_DEP_BAL_AVG --用例执行后90天内存款余额日均

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_DEP_01_1 T

WHERE   T.CASE_NO IS NOT NULL

GROUP BY T.CASE_NO , T.CASE_NAME , T.CASE_PHASE , T.CST_ID , T.REL_CST_ID;



--3、存款指标合并

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_DEP;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_DEP AS

SELECT  T.CASE_NO

        ,T.CASE_NAME

        ,T.CASE_PHASE

        ,T.CST_ID

        ,T.REL_CST_ID

        ,T.IS_BT_DEP --是否新开立存款账户

		,T.BT_DEP_SUM --新开立存款账户数

        ,T.BT_DEP_OPN_DT --新开存款账户开户日期



        ,T.BT_SUM_DEP_BAL --存款余额

        ,T.BEFORE_L30D_DEP_BAL_AVG --执行日期前30天存款余额日均

        ,T.BT_DEP_BAL_AVG --用例执行期间存款余额日均

        ,T.BT_DEP_BAL_AVG - T.BEFORE_L30D_DEP_BAL_AVG AS DIFF_DEP_BAL_AVG --存款日均增加值

        ,CASE

           WHEN T.BT_DEP_BAL_AVG - T.BEFORE_L30D_DEP_BAL_AVG >= 5000 THEN '1'

           ELSE '0'

         END                                          AS IS_BT_DEP_ADD_5000 --用例执行期间存款日均增加5000及以上

        ,T.BT_RCTLY_30D_DEP_BAL_AVG --用例执行后当前日期往前推30天存款余额日均

        ,T.BT_L30D_DEP_BAL_AVG --用例执行后30天内存款余额日均

        ,T.BT_L90D_DEP_BAL_AVG --用例执行后90天内存款余额日均

        ,CASE

           WHEN T.BT_L30D_DEP_BAL_AVG - T.BEFORE_L30D_DEP_BAL_AVG >= 10000 OR T.BT_L90D_DEP_BAL_AVG - T.BEFORE_L30D_DEP_BAL_AVG >= 50000 THEN '1'

           ELSE '0'

         END                                          AS IS_BT_L30D_L90D_DEP_TRANS --用例执行期间近30天_近90天存款是否转化

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_DEP_02 T;





--SELECT count(*),count(distinct cst_id) FROM LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CR_CRD;--760679	313051



----/* 六-2、商机跟进率查看率 */----

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.OPPO_CASE_VIEW_FOLLOW;

CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.OPPO_CASE_VIEW_FOLLOW  --机跟进率查看率

AS

SELECT  T.CASE_NO

        ,T.CASE_NAME

        ,T.CASE_PHASE

        ,T.CST_ID

        ,T.EXEC_DATE

        ,T.ADJUST_DUE_DATE

        ,T.INIT_DATE --取数日期

        ,T.REL_CST_ID --关联人

		,T.IS_SLF --是否本人

		,T2.BANK_OPPT_BATCH_NAME  --商机行方批次名称

		,T.PRM_FH_ORG_ID --'产效归属分行机构号'

        ,T.PRM_FH_ORG_NM --'产效归属分行机构名称'

        ,T.PRM_ZH_ORG_ID --'产效归属支行机构号'

        ,T.PRM_ZH_ORG_NM --'产效归属支行机构名称'

        ,T.PRM_TD_ORG_ID --'产效归属团队机构号'

        ,T.PRM_TD_ORG_NM --'产效归属团队名称'

        ,T.PRM_MGR_ID --'指定接收客户经理工号'

        ,T.PRM_EMPE_NM --'指定接收客户经理姓名'

		,COALESCE(T4.VIEW_FLAG,0) AS VIEW_FLAG --查看 1已读，0未读

		,CASE WHEN T4.FOLLOW_UP_STAT='2' THEN 1 ELSE 0 END AS IS_FOLLOW_UP  --跟进 0：未分配 1：未跟进 2：已跟进 转为1已跟进，0未跟进跟进

FROM     LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_REL T

LEFT JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_RECORD T2  --用例记录表 BANK_OPPT_BATCH_NAME 商机行方批次名称

ON      T.CASE_NO = T2.CASE_NO

AND     T.CASE_PHASE = T2.CASE_PHASE

LEFT JOIN EDW.XWDT_MKC_OPPT_BATCH T3  --商机批次表

ON T2.BANK_OPPT_BATCH_NAME=T3.BANK_OPPT_BATCH_NAME --行方批次名称

AND T3.DT='20230501'

LEFT JOIN    EDW.XWDT_MKC_OPPT_INFO T4  --商机信息表

ON T3.PK_ID=T4.OPPT_BATCH_ID

AND    T.CST_ID=T4.CUST_ID

AND T4.DT='20230501'

;







----/* 七、产效统计合并LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_AFF_ANLS DT */----

--做成分区表，可以满足每日趋势图。

/*

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_AFF_ANLS_TODAY;

CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_AFF_ANLS_TODAY

(

    CASE_NO                         STRING  COMMENT '用例编号'

    ,CASE_NAME                      STRING  COMMENT '用例名称'

    ,CASE_PHASE                     STRING  COMMENT '用例批次'

    ,CST_ID                         STRING  COMMENT '客户号'

    ,EXEC_DATE                      STRING  COMMENT '用例执行日期'

    ,ADJUST_DUE_DATE                STRING  COMMENT '用例截止日期'

	,DUE_DATE        			  STRING  COMMENT '用例截止日期实际'

    ,INIT_DATE                      STRING  COMMENT '取数日期'

    ,REL_CST_ID                     STRING  COMMENT '关联人'

    ,IS_SLF                         STRING  COMMENT '是否本人'

    ,IS_SAM_RSK                     STRING  COMMENT '是否同一风险控制号'

    ,IS_REL_PTY                     STRING  COMMENT '是否关联人'

    ,SAMPLE_CLASS                   STRING  COMMENT '样本分类' --(对照组，实验组)

    ,CONNECT_CHNL                   STRING  COMMENT '触达渠道' --(外呼、app push、客户经理)

    ,SCENE_TYPE                     STRING  COMMENT '场景分类' --(促首次/促复用)

    ,SUM_SCORE                      DECIMAL COMMENT '模型分'

    ,CALL_EMP_ID                    STRING  COMMENT '外呼人员工号' --HAND_EMP_ID

    ,CALL_EMP_NM                    STRING  COMMENT '外呼人员姓名' --HAND_EMP_NM

    ,CALL_RSLT                      STRING  COMMENT '外呼小结' --FINISH_STATE

    ,CALL_STATUS                    STRING  COMMENT '外呼状态' --有效接通、未接通、未外呼

    ,COUPON_AMT                     DECIMAL COMMENT '券额'

    --贷记卡分期需要用到的字段

    ,CMPN_MODL_SCOR                 DECIMAL COMMENT '营销模型分'

    ,CMPN_MODL_SCOR_BIN             STRING  COMMENT '营销模型分区间'

    ,SLF_INSTM_SCOR                 DECIMAL COMMENT '自主分期评分'

    ,SLF_INSTM_SCOR_BIN             STRING  COMMENT '自主分期评分区间'

    ,CMPN_MODL_RSP_IND              STRING  COMMENT '营销模型响应标识'

    ,SLF_INSTM_RSP_IND              STRING  COMMENT '自主分期响应标识'

    --管户或产效归属相关字段

    ,PRM_FH_ORG_ID                  STRING  COMMENT '主管户分行机构号或产效归属分行机构号'

    ,PRM_FH_ORG_NM                  STRING  COMMENT '主管户分行名称或产效归属分行机构名称'

    ,PRM_ZH_ORG_ID                  STRING  COMMENT '主管户支行机构号或产效归属支行机构号'

    ,PRM_ZH_ORG_NM                  STRING  COMMENT '主管户支行名称或产效归属支行机构名称'

    ,PRM_TD_ORG_ID                  STRING  COMMENT '主管户团队机构号或产效归属团队机构号'

    ,PRM_TD_ORG_NM                  STRING  COMMENT '主管户团队名称或产效归属团队名称'

    ,PRM_MGR_ID                     STRING  COMMENT '主管户客户经理工号或指定接收客户经理工号'

    ,PRM_EMPE_NM                    STRING  COMMENT '主管户客户经理姓名或指定接收客户经理姓名'

    --贷款相关指标

    ,IND_BT_COM_APLY                BIGINT  COMMENT '是否发生申请'

    ,IND_BT_COM_CTR                 BIGINT  COMMENT '是否发生合同'

    ,IND_BT_COM_DBIL                BIGINT  COMMENT '是否发生借据'

    ,IND_BT_SDT_APLY                BIGINT  COMMENT '是否发生随贷通申请'

    ,IND_BT_SDT_CTR                 BIGINT  COMMENT '是否发生随贷通合同'

    ,IND_BT_SDT_DBIL                BIGINT  COMMENT '是否发生随贷通借据'

    ,IND_BT_TED_APLY                BIGINT  COMMENT '是否发生泰e贷申请'

    ,IND_BT_TED_CTR                 BIGINT  COMMENT '是否发生泰e贷合同'

    ,IND_BT_TED_DBIL                BIGINT  COMMENT '是否发生泰e贷借据'

    ,IND_BT_RED_APLY                BIGINT  COMMENT '是否发生融e贷申请'

    ,IND_BT_RED_CTR                 BIGINT  COMMENT '是否发生融e贷合同'

    ,IND_BT_RED_DBIL                BIGINT  COMMENT '是否发生融e贷借据'

    ,BT_COM_APLY_HPN_DT             STRING  COMMENT '申请发生日期'

    ,BT_COM_CTR_HPN_DT              STRING  COMMENT '合同发生日期'

    ,BT_COM_DBIL_DTRB_DT            STRING  COMMENT '借据发生日期'

    ,BT_SDT_APLY_HPN_DT             STRING  COMMENT '随贷通申请发生日期'

    ,BT_SDT_CTR_HPN_DT              STRING  COMMENT '随贷通合同发生日期'

    ,BT_SDT_DBIL_DTRB_DT            STRING  COMMENT '随贷通借据发生日期'

    ,BT_TED_APLY_HPN_DT             STRING  COMMENT '泰e贷申请发生日期'

    ,BT_TED_CTR_HPN_DT              STRING  COMMENT '泰e贷合同发生日期'

    ,BT_TED_DBIL_DTRB_DT            STRING  COMMENT '泰e贷借据发生日期'

    ,BT_RED_APLY_HPN_DT             STRING  COMMENT '融e贷申请发生日期'

    ,BT_RED_CTR_HPN_DT              STRING  COMMENT '融e贷合同发生日期'

    ,BT_RED_DBIL_DTRB_DT            STRING  COMMENT '融e贷借据发生日期'

    ,BT_COM_SUM_DBIL_AMT            DECIMAL COMMENT '借据发放金额'

    ,BT_COM_SUM_DBIL_BAL            DECIMAL COMMENT '借据本金余额'

    ,BT_SDT_SUM_DBIL_AMT            DECIMAL COMMENT '随贷通借据发放金额'

    ,BT_SDT_SUM_DBIL_BAL            DECIMAL COMMENT '随贷通借据本金余额'

    ,BT_TED_SUM_DBIL_AMT            DECIMAL COMMENT '泰e贷借据发放金额'

    ,BT_TED_SUM_DBIL_BAL            DECIMAL COMMENT '泰e贷借据本金余额'

    ,BT_RED_SUM_DBIL_AMT            DECIMAL COMMENT '融e贷借据发放金额'

    ,BT_RED_SUM_DBIL_BAL            DECIMAL COMMENT '融e贷借据本金余额'

    --小企业不限制贷款类型为一般贷款，所以单独

    ,IND_BT_CTR                     BIGINT  COMMENT '小企业_是否发生合同'

    ,BT_CTR_HPN_DT                  BIGINT  COMMENT '小企业_合同发生日期'

    ,BT_COM_SUM_CTR_AMT             DECIMAL COMMENT '授信额度'

    ,BT_COM_SUM_CTR_BAL             DECIMAL COMMENT '用信额度'

    ,BT_SDT_SUM_CTR_AMT             DECIMAL COMMENT '随贷通授信额度'

    ,BT_SDT_SUM_CTR_BAL             DECIMAL COMMENT '随贷通用信额度'

    ,BT_TED_SUM_CTR_AMT             DECIMAL COMMENT '泰e贷授信额度'

    ,BT_TED_SUM_CTR_BAL             DECIMAL COMMENT '泰e贷用信额度'

    ,BT_RED_SUM_CTR_AMT             DECIMAL COMMENT '融e贷授信额度'

    ,BT_RED_SUM_CTR_BAL             DECIMAL COMMENT '融e贷用信额度'

    ,BT_SUM_CTR_AMT                 DECIMAL COMMENT '小企业_授信额度'

    ,BT_SUM_CTR_BAL                 DECIMAL COMMENT '小企业_用信额度'

    --泰惠收配贷、信用卡配贷

    ,ONL_SRC_BT_BIND_AMT            DECIMAL COMMENT '线上来源实际启用额度'

    ,ONL_SRC_BT_CTR_BAL             DECIMAL COMMENT '线上来源合同余额'

    ,OTLN_SRC_BT_BIND_AMT           DECIMAL COMMENT '线下来源实际启用额度'

    ,OTLN_SRC_BT_CTR_BAL            DECIMAL COMMENT '线下来源合同余额'

    ,LOAN_SRC_BT_BIND_AMT           DECIMAL COMMENT '贷款来源实际启用额度'

    ,LOAN_SRC_BT_CTR_BAL            DECIMAL COMMENT '贷款来源合同余额'

    ,IND_DBIL                       BIGINT  COMMENT '是否发生借据'

    ,SUM_DBIL_CNT                   BIGINT  COMMENT '借据笔数'

    ,DBIL_DTRB_DT                   STRING  COMMENT '借据发放日期'

    ,SUM_DBIL_AMT                   DECIMAL COMMENT '借据发放金额'

    ,SUM_DBIL_BAL                   DECIMAL COMMENT '借据余额'

    ,SUM_DBIL_BAL_AVG               DECIMAL COMMENT '借据余额日均'

    ,IND_SDT_DBIL                   BIGINT  COMMENT '是否发生随贷通借据'

    ,SDT_SUM_DBIL_CNT               BIGINT  COMMENT '随贷通借据笔数'

    ,SDT_DBIL_DTRB_DT               STRING  COMMENT '随贷通借据发放日期'

    ,SDT_SUM_DBIL_AMT               DECIMAL COMMENT '随贷通借据发放金额'

    ,SDT_SUM_DBIL_BAL               DECIMAL COMMENT '随贷通借据余额'

    ,SDT_SUM_DBIL_BAL_AVG           DECIMAL COMMENT '随贷通借据余额日均'

    ,IND_TED_DBIL                   BIGINT  COMMENT '是否发生泰e贷借据'

    ,TED_SUM_DBIL_CNT               BIGINT  COMMENT '泰e贷借据笔数'

    ,TED_DBIL_DTRB_DT               STRING  COMMENT '泰e贷借据发放日期'

    ,TED_SUM_DBIL_AMT               DECIMAL COMMENT '泰e贷借据发放金额'

    ,TED_SUM_DBIL_BAL               DECIMAL COMMENT '泰e贷借据余额'

    ,TED_SUM_DBIL_BAL_AVG           DECIMAL COMMENT '泰e贷借据余额日均'

    ,IND_RED_DBIL                   BIGINT  COMMENT '是否发生融e贷借据'

    ,RED_SUM_DBIL_CNT               BIGINT  COMMENT '融e贷借据笔数'

    ,RED_DBIL_DTRB_DT               STRING  COMMENT '融e贷借据发放日期'

    ,RED_SUM_DBIL_AMT               DECIMAL COMMENT '融e贷借据发放金额'

    ,RED_SUM_DBIL_BAL               DECIMAL COMMENT '融e贷借据余额'

    ,RED_SUM_DBIL_BAL_AVG           DECIMAL COMMENT '融e贷借据余额日均'

    ,SUM_LOAN_FTP_INC               DECIMAL COMMENT '推广期间贷款FTP利润'

    ,SUM_PREDICT_LOAN_FTP_INC       DECIMAL COMMENT '预测贷款FTP年利润'

    ,IND_PYF                        BIGINT  COMMENT '是否结清'

    ,PYF_DT                         STRING  COMMENT '结清日期'

    ,PYF_CTR_AMT                    DECIMAL COMMENT '结清金额'

    ,IND_RELOAN                     BIGINT  COMMENT '是否发生续贷'

    ,RELOAN_DT                      STRING  COMMENT '续贷日期'

    ,RELOAN_CTR_AMT                 DECIMAL COMMENT '续贷金额'

    ,IND_ICR_AMT_RELOAN             BIGINT  COMMENT '是否增额续贷'

    ,IND_ORI_AMT_RELOAN             BIGINT  COMMENT '是否原额续贷'

    ,IND_DEC_AMT_RELOAN             BIGINT  COMMENT '是否减额续贷'

    ,DIFF_RELOAN_PYF_AMT            DECIMAL COMMENT '续贷金额与结清金额之差'

    ,BFR_L90D_MAX_AMT               DECIMAL COMMENT '提额前90天最高额度'

    ,SDT_BFR_L90D_MAX_AMT           DECIMAL COMMENT '随贷通提额前90天最高额度'

    ,TED_BFR_L90D_MAX_AMT           DECIMAL COMMENT '泰e贷提额前90天最高额度'

    ,RED_BFR_L90D_MAX_AMT           DECIMAL COMMENT '融e贷提额前90天最高额度'

    ,OTH_BFR_L90D_MAX_AMT           DECIMAL COMMENT '其他贷款提额前90天最高额度'

    ,AFT_MAX_AMT                    DECIMAL COMMENT '提额后最高额度'

    ,SDT_AFT_MAX_AMT                DECIMAL COMMENT '随贷通提额后最高额度'

    ,TED_AFT_MAX_AMT                DECIMAL COMMENT '泰e贷提额后最高额度'

    ,RED_AFT_MAX_AMT                DECIMAL COMMENT '融e贷提额后最高额度'

    ,OTH_AFT_MAX_AMT                DECIMAL COMMENT '其他贷款提额后最高额度'

    ,IND_ICR_AMT                    BIGINT  COMMENT '是否提额'

    ,IND_SDT_ICR_AMT                BIGINT  COMMENT '随贷通是否提额'

    ,IND_TED_ICR_AMT                BIGINT  COMMENT '泰e贷是否提额'

    ,IND_RED_ICR_AMT                BIGINT  COMMENT '融e贷是否提额'

    ,IND_OTH_ICR_AMT                BIGINT  COMMENT '其他贷款是否提额'

    ,TOT_ICR_AMT                    DECIMAL COMMENT '提额总金额'

    ,SDT_ICR_AMT                    DECIMAL COMMENT '随贷通提额金额'

    ,TED_ICR_AMT                    DECIMAL COMMENT '泰e贷提额金额'

    ,RED_ICR_AMT                    DECIMAL COMMENT '融e贷提额金额'

    ,OTH_ICR_AMT                    DECIMAL COMMENT '其他贷款提额金额'

    --存款相关指标

    ,IND_BT_DEP_ACT                 BIGINT  COMMENT '是否新开立存款账户'

	,BT_DEP_SUM                     BIGINT  COMMENT '新开立存款账户数'

    ,BT_DEP_OPN_DT                  STRING  COMMENT '新开存款账户开户日期'

    ,BT_SUM_DEP_BAL                 DECIMAL COMMENT '当前存款余额'

    ,BFR_L30D_DEP_BAL_AVG           DECIMAL COMMENT '执行日期前30天存款余额日均'

    ,BT_DEP_BAL_AVG                 DECIMAL COMMENT '用例执行期间存款余额日均'

    ,DIFF_DEP_BAL_AVG               DECIMAL COMMENT '存款日均增加值'

    ,IND_BT_DEP_ADD_5000            DECIMAL COMMENT '用例执行期间存款日均增加5000及以上'

    ,BT_RCTLY_30D_DEP_BAL_AVG       DECIMAL COMMENT '用例执行后当前日期往前推30天存款余额日均'

    ,BT_L30D_DEP_BAL_AVG            DECIMAL COMMENT '用例执行后30天内存款余额日均'

    ,BT_L90D_DEP_BAL_AVG            DECIMAL COMMENT '用例执行后90天内存款余额日均'

    ,IND_BT_L30D_L90D_DEP_TRANS     BIGINT  COMMENT '用例执行期间近30天_近90天存款是否转化'

    --理财相关指标

    ,IND_BT_CHM_TRX                 BIGINT  COMMENT '用例执行期间是否发生理财交易'

    ,BT_MIN_CHM_TRX_DT              STRING  COMMENT '用例执行期间最早交易日期'

    ,BT_CLS_CHM_TRX_AMT             DECIMAL COMMENT '用例执行期间封闭式产品认购金额'

    ,BT_OPN_CHM_TRX_AMT             DECIMAL COMMENT '用例执行期间开放式产品认购金额'

    ,BT_SEMI_CLS_FNC_TRX_AMT        DECIMAL COMMENT '用例执行期间半封闭式理财产品认购金额'

    ,BT_SEMI_OPN_FNC_TRX_AMT        DECIMAL COMMENT '用例执行期间半开放式理财产品认购金额'

    ,BT_TL_FNC_TRX_AMT              DECIMAL COMMENT '用例执行期间自营理财产品交易金额'

    ,BT_NON_TL_FNC_TRX_AMT          DECIMAL COMMENT '用例执行期间代销理财产品交易金额'

    ,BT_SUM_CHM_AMT                 DECIMAL COMMENT '当前理财余额'

    ,BFR_L30D_CHM_AMT_AVG           DECIMAL COMMENT '执行日期前30天理财日均'

    ,BT_AFT_TRX_CHM_AMT_AVG         DECIMAL COMMENT '发生首次交易后理财日均'

    ,BT_CHM_AMT_AVG                 DECIMAL COMMENT '用例执行期间理财日均'

    ,BT_RCTLY_30D_CHM_AMT_AVG       DECIMAL COMMENT '用例执行后当前日期往前推30天理财日均'

    ,IND_BT_CHM_ADD_5000            BIGINT  COMMENT '用例执行期间理财日均增加5000及以上'

    ,IND_BT_LOSE_CHM_TRANS          BIGINT  COMMENT '财富流失挽回是否转化'

    ,IND_BT_1W_CHM_TRANS            BIGINT  COMMENT '是否日均提升至1万以上客户'

    ,IND_BT_5W_CHM_TRANS            BIGINT  COMMENT '是否日均提升至5万以上客户'

    ,CLS_CHM_MID_AMT                DECIMAL COMMENT '封闭式理财中收'

    ,OPN_CHM_MID_AMT                DECIMAL COMMENT '开放式理财中收'

    ,IND_LGN_MBL_BNK                BIGINT  COMMENT '是否登录手机银行'

    ,IND_CLICK_CHM_ERN              BIGINT  COMMENT '是否点击理财入口'

    ,IND_CLICK_CHM_DTL              BIGINT  COMMENT '是否点击理财产品详情'

    ,IND_CFM_BUY_CHM_PRD            BIGINT  COMMENT '是否点击理财产品确认购买'

    ,IND_BUY_CHM_PRD                BIGINT  COMMENT '理财产品是否购买成功'

    --信用卡相关指标

    ,IND_CR_CRD_RFER                BIGINT  COMMENT '是否有推荐用户值'

    ,CR_CRD_APLY_NUM                BIGINT  COMMENT '信用卡申请流水号数' --申请流水号数>1时为异常申请

    ,IND_CR_CRD_APLY                BIGINT  COMMENT '是否有信用卡申请流水号'

    ,IND_CPL_CR_CRD_APLY            BIGINT  COMMENT '是否走完信用卡申请'

    ,IND_CR_CRD_ISU                 BIGINT  COMMENT '是否信用卡发卡成功'

    ,IND_CR_CRD_ACTVT               BIGINT  COMMENT '是否信用卡激活客户'

    ,IND_CR_CRD_TRX                 BIGINT  COMMENT '是否发生信用卡交易'

    ,IND_CR_CRD_INSTM_TRX           BIGINT  COMMENT '是否发生信用卡分期交易'

    ,IND_CR_CRD_INSTM_TRX_AMT       DECIMAL COMMENT '信用卡分期交易金额'

    ,CR_CRD_ACT_LMT                 DECIMAL COMMENT '信用卡账户额度'

    ,CR_CRD_ACT_BAL                 DECIMAL COMMENT '信用卡账户余额'

    ,AGE                            BIGINT  COMMENT '年龄'

    ,AGE_BIN                        STRING  COMMENT '年龄分段'

    ,AGE_BIN_2                      STRING  COMMENT '年龄区间2'

    ,GDR_CD                         STRING  COMMENT '性别代码'

    ,GDR_DSCR                       STRING  COMMENT '性别'

    ,MRG_SITU_CD                    STRING  COMMENT '婚姻状况代码'

    ,MRG_SITU                       STRING  COMMENT '婚姻状况'

    ,HI_ACDM_DEG_CD                 STRING  COMMENT '最高学历代码'

    ,HI_ACDM_DEG                    STRING  COMMENT '最高学历'

    ,HI_ACDM_DEG_BIN                STRING  COMMENT '最高学历分段'

    ,IDT_CD                         STRING  COMMENT '行业代码'

    ,IDT_NM                         STRING  COMMENT '行业名称'

    ,IND_OPN_INDIV_NB               BIGINT  COMMENT '是否开通个人网银'

    ,IND_OPN_WECHAT_BNK             BIGINT  COMMENT '是否开通微信银行'

    ,IND_OPN_MBL_BNK                BIGINT  COMMENT '是否开通手机银行'

    ,AUM_LAST_MON_AVG               DECIMAL COMMENT '客户上月综合金融资产(aum)月日均'

    ,L180D_AVG_FTP_INC              DECIMAL COMMENT '近180天FTP均值'

    --,CMPN_MODL_SCOR                 DECIMAL   COMMENT  '营销模型分'

    --,CMPN_MODL_SCOR_BIN             STRING   COMMENT  '营销模型分区间'

    --,SLF_INSTM_SCOR                 DECIMAL   COMMENT  '自主分期评分'

    --,SLF_INSTM_SCOR_BIN             STRING   COMMENT  '自主分期评分区间'

    --,CMPN_MODL_RSP_IND              STRING   COMMENT  '营销模型响应标识'

    --,SLF_INSTM_RSP_IND              STRING   COMMENT  '自主分期响应标识'

    ,IND_CR_CRD_INSTM_NEW_CST       BIGINT  COMMENT '是否信用卡分期新客'

    ,CR_CRD_CAN_INSTM_AMT           DECIMAL COMMENT '测算账户可分期金额'

    ,CR_CRD_CAN_INSTM_AMT_BIN       STRING  COMMENT '测算账户可分期金额区间'

    ,CR_CRD_LMT                     DECIMAL COMMENT '信用额度'

    ,IND_TEL_CALL                   BIGINT  COMMENT '是否被呼叫'

    ,TEL_CALL_TMS                   BIGINT  COMMENT '被呼叫次数'

    ,IND_CALL_CONNECT               BIGINT  COMMENT '是否接通'

    ,CALL_CONNECT_TMS               BIGINT  COMMENT '接通次数'

    ,IND_CR_CRD_INSTM               BIGINT  COMMENT '是否分期'

    ,CR_CRD_INSTM_DT                STRING  COMMENT '信用卡分期日期'

    ,CR_CRD_INSTM_AMT               DECIMAL COMMENT '分期本金'

    ,IND_HAVE_CR_CRD_INSTM_PRFT     BIGINT  COMMENT '是否有信用卡分期优惠'

    ,CR_CRD_INSTM_TOT_FEE           DECIMAL COMMENT '信用卡分期总费用_含商户回佣'

    ,CR_CRD_INSTM_WEGT_PERD_NUM     DECIMAL COMMENT '加权分期期数'

    ,CR_CRD_INSTM_WEGT_SNGL_FEE_RAT DECIMAL COMMENT '加权单期费率'

    ,CR_CRD_CAN_INSTM_AMT_PCT       DECIMAL COMMENT '可分期金额占授信比' --测算账户可分期金额/信用额度

    ,CR_CRD_CAN_INSTM_AMT_PCT_BIN   STRING  COMMENT '测算可分期金额占授信比区间'

	--商机

	,VIEW_FLAG       BIGINT  COMMENT '是否查看'

	,IS_FOLLOW_UP      BIGINT  COMMENT '是否跟进'

,BANK_OPPT_BATCH_NAME STRING  COMMENT '机行方批次名称'

)

COMMENT

'用例产效分析统计表当天已截止用例产效为空'

PARTITIONED BY

(

    DT STRING COMMENT '日期分区'

);

*/



INSERT OVERWRITE TABLE LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_AFF_ANLS_TODAY PARTITION ( DT='20230501' )

SELECT  T.CASE_NO

        ,T.CASE_NAME

        ,T.CASE_PHASE

        ,T.CST_ID

        ,T.EXEC_DATE

        ,T.ADJUST_DUE_DATE

		,T.DUE_DATE

        ,T.INIT_DATE --取数日期

        ,T.REL_CST_ID --关联人

        ,T.IS_SLF --是否本人

        ,T.IS_SAM_RSK --是否同一风险控制号

        ,T.IS_REL_PTY --是否关联人

        ,T0.SAMPLE_CLASS --样本分类 --(对照组，实验组)

        ,T0.CONNECT_CHNL --触达渠道 --(外呼、app push、客户经理)

        ,T0.SCENE_TYPE --场景分类 --(促首次/促复用)

        ,T0.SUM_SCORE --模型分

        ,T0.CALL_EMP_ID --外呼人员工号 --HAND_EMP_ID

        ,T0.CALL_EMP_NM --外呼人员姓名 --HAND_EMP_NM

        ,T0.CALL_RSLT --外呼小结 --FINISH_STATE

        ,T0.CALL_STATUS --外呼状态 --有效接通、未接通、未外呼

        ,T0.COUPON_AMT  --券额

        --贷记卡分期需要用到的字段

        ,T0.CMPN_MODL_SCOR --营销模型分

        ,T0.CMPN_MODL_SCOR_BIN --营销模型分区间

        ,T0.SLF_INSTM_SCOR --自主分期评分

        ,T0.SLF_INSTM_SCOR_BIN --自主分期评分区间

        ,T0.CMPN_MODL_RSP_IND --营销模型响应标识

        ,T0.SLF_INSTM_RSP_IND  --自主分期响应标识

        --管户或产效归属相关字段

        ,T0.PRM_FH_ORG_ID --主管户分行机构号或产效归属分行机构号

        ,T0.PRM_FH_ORG_NM --主管户分行名称或产效归属分行机构名称

        ,T0.PRM_ZH_ORG_ID --主管户支行机构号或产效归属支行机构号

        ,T0.PRM_ZH_ORG_NM --主管户支行名称或产效归属支行机构名称

        ,T0.PRM_TD_ORG_ID --主管户团队机构号或产效归属团队机构号

        ,T0.PRM_TD_ORG_NM --主管户团队名称或产效归属团队名称

        ,T0.PRM_MGR_ID --主管户客户经理工号或指定接收客户经理工号

        ,T0.PRM_EMPE_NM  --主管户客户经理姓名或指定接收客户经理姓名

        --贷款相关指标

        ,COALESCE(T1.IS_BT_COM_APL, '0')                AS IND_BT_COM_APLY --是否发生申请

        ,COALESCE(T1.IS_BT_COM_CTR, '0')                AS IND_BT_COM_CTR --是否发生合同

        ,COALESCE(T1.IS_BT_COM_DBIL, '0')               AS IND_BT_COM_DBIL --是否发生借据

        ,COALESCE(T1.IS_SDT_BT_APL, '0')                AS IND_BT_SDT_APLY --是否发生随贷通申请

        ,COALESCE(T1.IS_SDT_BT_CTR, '0')                AS IND_BT_SDT_CTR --是否发生随贷通合同

        ,COALESCE(T1.IS_SDT_BT_DBIL, '0')               AS IND_BT_SDT_DBIL --是否发生随贷通借据

        ,COALESCE(T1.IS_TED_BT_APL, '0')                AS IND_BT_TED_APLY --是否发生泰e贷申请

        ,COALESCE(T1.IS_TED_BT_CTR, '0')                AS IND_BT_TED_CTR --是否发生泰e贷合同

        ,COALESCE(T1.IS_TED_BT_DBIL, '0')               AS IND_BT_TED_DBIL --是否发生泰e贷借据

        ,COALESCE(T1.IS_RED_BT_APL, '0')                AS IND_BT_RED_APLY --是否发生融e贷申请

        ,COALESCE(T1.IS_RED_BT_CTR, '0')                AS IND_BT_RED_CTR --是否发生融e贷合同

        ,COALESCE(T1.IS_RED_BT_DBIL, '0')               AS IND_BT_RED_DBIL --是否发生融e贷借据

        ,COALESCE(T1.BT_COM_APL_HPN_DT, '')             AS BT_COM_APLY_HPN_DT --申请发生日期

        ,COALESCE(T1.BT_COM_CTR_HPN_DT, '')             AS BT_COM_CTR_HPN_DT --合同发生日期

        ,COALESCE(T1.BT_COM_DBIL_DTRB_DT, '')           AS BT_COM_DBIL_DTRB_DT --借据发生日期

        ,COALESCE(T1.BT_SDT_APL_HPN_DT, '')             AS BT_SDT_APLY_HPN_DT --随贷通申请发生日期

        ,COALESCE(T1.BT_SDT_CTR_HPN_DT, '')             AS BT_SDT_CTR_HPN_DT --随贷通合同发生日期

        ,COALESCE(T1.BT_SDT_DBIL_DTRB_DT, '')           AS BT_SDT_DBIL_DTRB_DT --随贷通借据发生日期

        ,COALESCE(T1.BT_TED_APL_HPN_DT, '')             AS BT_TED_APLY_HPN_DT --泰e贷申请发生日期

        ,COALESCE(T1.BT_TED_CTR_HPN_DT, '')             AS BT_TED_CTR_HPN_DT --泰e贷合同发生日期

        ,COALESCE(T1.BT_TED_DBIL_DTRB_DT, '')           AS BT_TED_DBIL_DTRB_DT --泰e贷借据发生日期

        ,COALESCE(T1.BT_RED_APL_HPN_DT, '')             AS BT_RED_APLY_HPN_DT --融e贷申请发生日期

        ,COALESCE(T1.BT_RED_CTR_HPN_DT, '')             AS BT_RED_CTR_HPN_DT --融e贷合同发生日期

        ,COALESCE(T1.BT_RED_DBIL_DTRB_DT, '')           AS BT_RED_DBIL_DTRB_DT --融e贷借据发生日期

        ,COALESCE(T1.BT_SUM_COM_DBIL_AMT, 0)            AS BT_COM_SUM_DBIL_AMT --借据发放金额

        ,COALESCE(T1.BT_SUM_COM_DBIL_BAL, 0)            AS BT_COM_SUM_DBIL_BAL --借据本金余额

        ,COALESCE(T1.BT_SUM_SDT_DBIL_AMT, 0)            AS BT_SDT_SUM_DBIL_AMT --随贷通借据发放金额

        ,COALESCE(T1.BT_SUM_SDT_DBIL_BAL, 0)            AS BT_SDT_SUM_DBIL_BAL --随贷通借据本金余额

        ,COALESCE(T1.BT_SUM_TED_DBIL_AMT, 0)            AS BT_TED_SUM_DBIL_AMT --泰e贷借据发放金额

        ,COALESCE(T1.BT_SUM_TED_DBIL_BAL, 0)            AS BT_TED_SUM_DBIL_BAL --泰e贷借据本金余额

        ,COALESCE(T1.BT_SUM_RED_DBIL_AMT, 0)            AS BT_RED_SUM_DBIL_AMT --融e贷借据发放金额

        ,COALESCE(T1.BT_SUM_RED_DBIL_BAL, 0)            AS BT_RED_SUM_DBIL_BAL  --融e贷借据本金余额

        --小企业不限制贷款类型为一般贷款，所以单独一套逻辑

        ,COALESCE(T1.IS_BT_CTR, '0')                    AS IND_BT_CTR --小企业_是否发生合同

        ,COALESCE(T1.BT_CTR_HPN_DT, '')                 AS BT_CTR_HPN_DT --小企业_合同发生日期

        ,COALESCE(T1.BT_SUM_COM_CTR_AMT, 0)             AS BT_COM_SUM_CTR_AMT --授信额度

        ,COALESCE(T1.BT_SUM_COM_CTR_BAL, 0)             AS BT_COM_SUM_CTR_BAL --用信额度

        ,COALESCE(T1.BT_SUM_SDT_CTR_AMT, 0)             AS BT_SDT_SUM_CTR_AMT --随贷通授信额度

        ,COALESCE(T1.BT_SUM_SDT_CTR_BAL, 0)             AS BT_SDT_SUM_CTR_BAL --随贷通用信额度

        ,COALESCE(T1.BT_SUM_TED_CTR_AMT, 0)             AS BT_TED_SUM_CTR_AMT --泰e贷授信额度

        ,COALESCE(T1.BT_SUM_TED_CTR_BAL, 0)             AS BT_TED_SUM_CTR_BAL --泰e贷用信额度

        ,COALESCE(T1.BT_SUM_RED_CTR_AMT, 0)             AS BT_RED_SUM_CTR_AMT --融e贷授信额度

        ,COALESCE(T1.BT_SUM_RED_CTR_BAL, 0)             AS BT_RED_SUM_CTR_BAL --融e贷用信额度

        ,COALESCE(T1.BT_SUM_CTR_AMT, 0)                 AS BT_SUM_CTR_AMT --小企业_授信额度

        ,COALESCE(T1.BT_SUM_CTR_BAL, 0)                 AS BT_SUM_CTR_BAL  --小企业_用信额度

        --泰惠收配贷、信用卡配贷

        ,COALESCE(T1.ONL_SRC_BT_BIND_AMT, 0)            AS ONL_SRC_BT_BIND_AMT --线上来源实际启用额度

        ,COALESCE(T1.ONL_SRC_BT_CTR_BAL, 0)             AS ONL_SRC_BT_CTR_BAL --线上来源合同余额

        ,COALESCE(T1.OTLN_SRC_BT_BIND_AMT, 0)           AS OTLN_SRC_BT_BIND_AMT --线下来源实际启用额度

        ,COALESCE(T1.OTLN_SRC_BT_CTR_BAL, 0)            AS OTLN_SRC_BT_CTR_BAL --线下来源合同余额

        ,COALESCE(T1.LOAN_SRC_BT_BIND_AMT, 0)           AS LOAN_SRC_BT_BIND_AMT --贷款来源实际启用额度

        ,COALESCE(T1.LOAN_SRC_BT_CTR_BAL, 0)            AS LOAN_SRC_BT_CTR_BAL --贷款来源合同余额

        ,COALESCE(T1.IS_DBIL, '0')                      AS IND_DBIL --是否发生借据

        ,COALESCE(T1.SUM_DBIL_CNT, 0)                   AS SUM_DBIL_CNT --借据笔数

        ,COALESCE(T1.DBIL_DTRB_DT, '')                  AS DBIL_DTRB_DT --借据发放日期

        ,COALESCE(T1.SUM_DBIL_AMT, 0)                   AS SUM_DBIL_AMT --借据发放金额

        ,COALESCE(T1.SUM_DBIL_BAL, 0)                   AS SUM_DBIL_BAL --借据余额

        ,COALESCE(T1.SUM_DBIL_BAL_AVG, 0)               AS SUM_DBIL_BAL_AVG --借据余额日均

        ,COALESCE(T1.IS_SDT_DBIL, '0')                  AS IND_SDT_DBIL --是否发生随贷通借据

        ,COALESCE(T1.SUM_SDT_DBIL_CNT, 0)               AS SDT_SUM_DBIL_CNT --随贷通借据笔数

        ,COALESCE(T1.SDT_DBIL_DTRB_DT, '')              AS SDT_DBIL_DTRB_DT --随贷通借据发放日期

        ,COALESCE(T1.SUM_SDT_DBIL_AMT, 0)               AS SDT_SUM_DBIL_AMT --随贷通借据发放金额

        ,COALESCE(T1.SUM_SDT_DBIL_BAL, 0)               AS SDT_SUM_DBIL_BAL --随贷通借据余额

        ,COALESCE(T1.SUM_SDT_DBIL_BAL_AVG, 0)           AS SDT_SUM_DBIL_BAL_AVG --随贷通借据余额日均

        ,COALESCE(T1.IS_TED_DBIL, '0')                  AS IND_TED_DBIL --是否发生泰e贷借据

        ,COALESCE(T1.SUM_TED_DBIL_CNT, 0)               AS TED_SUM_DBIL_CNT --泰e贷借据笔数

        ,COALESCE(T1.TED_DBIL_DTRB_DT, '')              AS TED_DBIL_DTRB_DT --泰e贷借据发放日期

        ,COALESCE(T1.SUM_TED_DBIL_AMT, 0)               AS TED_SUM_DBIL_AMT --泰e贷借据发放金额

        ,COALESCE(T1.SUM_TED_DBIL_BAL, 0)               AS TED_SUM_DBIL_BAL --泰e贷借据余额

        ,COALESCE(T1.SUM_TED_DBIL_BAL_AVG, 0)           AS TED_SUM_DBIL_BAL_AVG --泰e贷借据余额日均

        ,COALESCE(T1.IS_RED_DBIL, '0')                  AS IND_RED_DBIL --是否发生融e贷借据

        ,COALESCE(T1.SUM_RED_DBIL_CNT, 0)               AS RED_SUM_DBIL_CNT --融e贷借据笔数

        ,COALESCE(T1.RED_DBIL_DTRB_DT, '')              AS RED_DBIL_DTRB_DT --融e贷借据发放日期

        ,COALESCE(T1.SUM_RED_DBIL_AMT, 0)               AS RED_SUM_DBIL_AMT --融e贷借据发放金额

        ,COALESCE(T1.SUM_RED_DBIL_BAL, 0)               AS RED_SUM_DBIL_BAL --融e贷借据余额

        ,COALESCE(T1.SUM_RED_DBIL_BAL_AVG, 0)           AS RED_SUM_DBIL_BAL_AVG --融e贷借据余额日均

        ,COALESCE(T1.SUM_LOAN_FTP_INC, 0)               AS SUM_LOAN_FTP_INC --推广期间贷款FTP利润

        ,COALESCE(T1.SUM_PREDICT_LOAN_FTP_INC, 0)       AS SUM_PREDICT_LOAN_FTP_INC --预测贷款FTP年利润

        ,COALESCE(T1.IS_JQ, '0')                        AS IND_PYF --是否结清 payoff

        ,COALESCE(T1.JQ_DT, '')                         AS PYF_DT --结清日期

        ,COALESCE(T1.JQ_CTR_AMT, 0)                     AS PYF_CTR_AMT --结清金额

        ,COALESCE(T1.IS_XD, '0')                        AS IND_RELOAN --是否发生续贷

        ,COALESCE(T1.XD_DT, '')                         AS RELOAN_DT --续贷日期

        ,COALESCE(T1.XD_CTR_AMT, 0)                     AS RELOAN_CTR_AMT --续贷金额

        ,COALESCE(T1.IS_ZE_XD, '0')                     AS IND_ICR_AMT_RELOAN --是否增额续贷

        ,COALESCE(T1.IS_YE_XD, '0')                     AS IND_ORI_AMT_RELOAN --是否原额续贷

        ,COALESCE(T1.IS_JE_XD, '0')                     AS IND_DEC_AMT_RELOAN --是否减额续贷

        ,COALESCE(T1.DIFF_CTR_AMT, 0)                   AS DIFF_RELOAN_PYF_AMT --续贷金额与结清金额之差

        ,COALESCE(T1.BEFORE_MAX_AMT, 0)                 AS BFR_L90D_MAX_AMT --提额前90天最高额度

        ,COALESCE(T1.SDT_BEFORE_MAX_AMT, 0)             AS SDT_BFR_L90D_MAX_AMT --随贷通提额前90天最高额度

        ,COALESCE(T1.TED_BEFORE_MAX_AMT, 0)             AS TED_BFR_L90D_MAX_AMT --泰e贷提额前90天最高额度

        ,COALESCE(T1.RED_BEFORE_MAX_AMT, 0)             AS RED_BFR_L90D_MAX_AMT --融e贷提额前90天最高额度

        ,COALESCE(T1.OTHER_BEFORE_MAX_AMT, 0)           AS OTH_BFR_L90D_MAX_AMT --其他贷款提额前90天最高额度

        ,COALESCE(T1.AFTER_MAX_AMT, 0)                  AS AFT_MAX_AMT --提额后最高额度

        ,COALESCE(T1.SDT_AFTER_MAX_AMT, 0)              AS SDT_AFT_MAX_AMT --随贷通提额后最高额度

        ,COALESCE(T1.TED_AFTER_MAX_AMT, 0)              AS TED_AFT_MAX_AMT --泰e贷提额后最高额度

        ,COALESCE(T1.RED_AFTER_MAX_AMT, 0)              AS RED_AFT_MAX_AMT --融e贷提额后最高额度

        ,COALESCE(T1.OTHER_AFTER_MAX_AMT, 0)            AS OTH_AFT_MAX_AMT --其他贷款提额后最高额度

        ,COALESCE(T1.IS_TE, '0')                        AS IND_ICR_AMT --是否提额

        ,COALESCE(T1.IS_SDT_TE, '0')                    AS IND_SDT_ICR_AMT --随贷通是否提额

        ,COALESCE(T1.IS_TED_TE, '0')                    AS IND_TED_ICR_AMT --泰e贷是否提额

        ,COALESCE(T1.IS_RED_TE, '0')                    AS IND_RED_ICR_AMT --融e贷是否提额

        ,COALESCE(T1.IS_OTHER_TE, '0')                  AS IND_OTH_ICR_AMT --其他贷款是否提额

        ,COALESCE(T1.TE_AMT, 0)                         AS TOT_ICR_AMT --提额总金额

        ,COALESCE(T1.SDT_TE_AMT, 0)                     AS SDT_ICR_AMT --随贷通提额金额

        ,COALESCE(T1.TED_TE_AMT, 0)                     AS TED_ICR_AMT --泰e贷提额金额

        ,COALESCE(T1.RED_TE_AMT, 0)                     AS RED_ICR_AMT --融e贷提额金额

        ,COALESCE(T1.OTHER_TE_AMT, 0)                   AS OTH_ICR_AMT  --其他贷款提额金额

        --存款相关指标

        ,COALESCE(T2.IS_BT_DEP, '0')                    AS IND_BT_DEP_ACT --是否新开立存款账户

		,COALESCE(T2.BT_DEP_SUM, '0')                    AS BT_DEP_SUM  --新开立存款账户数

        ,COALESCE(T2.BT_DEP_OPN_DT, '')                 AS BT_DEP_OPN_DT --新开存款账户开户日期

        ,COALESCE(T2.BT_SUM_DEP_BAL, 0)                 AS BT_SUM_DEP_BAL --当前存款余额

        ,COALESCE(T2.BEFORE_L30D_DEP_BAL_AVG, 0)        AS BFR_L30D_DEP_BAL_AVG --执行日期前30天存款余额日均

        ,COALESCE(T2.BT_DEP_BAL_AVG, 0)                 AS BT_DEP_BAL_AVG --用例执行期间存款余额日均

        ,COALESCE(T2.DIFF_DEP_BAL_AVG, 0)               AS DIFF_DEP_BAL_AVG --存款日均增加值

        ,COALESCE(T2.IS_BT_DEP_ADD_5000, '0')           AS IND_BT_DEP_ADD_5000 --用例执行期间存款日均增加5000及以上

        ,COALESCE(T2.BT_RCTLY_30D_DEP_BAL_AVG, 0)       AS BT_RCTLY_30D_DEP_BAL_AVG --用例执行后当前日期往前推30天存款余额日均

        ,COALESCE(T2.BT_L30D_DEP_BAL_AVG, 0)            AS BT_L30D_DEP_BAL_AVG --用例执行后30天内存款余额日均

        ,COALESCE(T2.BT_L90D_DEP_BAL_AVG, 0)            AS BT_L90D_DEP_BAL_AVG --用例执行后90天内存款余额日均

        ,COALESCE(T2.IS_BT_L30D_L90D_DEP_TRANS, '0')    AS IND_BT_L30D_L90D_DEP_TRANS  --用例执行期间近30天_近90天存款是否转化

        --理财相关指标

        ,COALESCE(T3.IS_BT_FNC_TRX, '0')                AS IND_BT_CHM_TRX --用例执行期间是否发生理财交易

        ,COALESCE(T3.BT_MIN_FNC_TRX_DT, '')             AS BT_MIN_CHM_TRX_DT --用例执行期间最早交易日期

        ,COALESCE(T3.BT_CLS_FNC_TRX_AMT, 0)             AS BT_CLS_CHM_TRX_AMT --用例执行期间封闭式产品认购金额

        ,COALESCE(T3.BT_OPN_FNC_TRX_AMT, 0)             AS BT_OPN_CHM_TRX_AMT --用例执行期间开放式产品认购金额

        ,COALESCE(T3.BT_SEMI_CLS_FNC_TRX_AMT, 0)        AS BT_SEMI_CLS_FNC_TRX_AMT --用例执行期间半封闭式理财产品认购金额

        ,COALESCE(T3.BT_SEMI_OPN_FNC_TRX_AMT, 0)        AS BT_SEMI_OPN_FNC_TRX_AMT --用例执行期间半开放式理财产品认购金额

        ,COALESCE(T3.BT_TL_FNC_TRX_AMT, 0)              AS BT_TL_FNC_TRX_AMT --用例执行期间自营理财产品交易金额

        ,COALESCE(T3.BT_NON_TL_FNC_TRX_AMT, 0)          AS BT_NON_TL_FNC_TRX_AMT --用例执行期间代销理财产品交易金额

        ,COALESCE(T3.BT_SUM_FNC_AMT, 0)                 AS BT_SUM_CHM_AMT --当前理财余额

        ,COALESCE(T3.BEFORE_L30D_FNC_AMT_AVG, 0)        AS BFR_L30D_CHM_AMT_AVG --执行日期前30天理财日均

        ,COALESCE(T3.BT_TRX_FNC_AMT_AVG, 0)             AS BT_AFT_TRX_CHM_AMT_AVG --发生首次交易后理财日均

        ,COALESCE(T3.BT_FNC_AMT_AVG, 0)                 AS BT_CHM_AMT_AVG --用例执行期间理财日均

        ,COALESCE(T3.BT_RCTLY_30D_FNC_AMT_AVG, 0)       AS BT_RCTLY_30D_CHM_AMT_AVG --用例执行后当前日期往前推30天理财日均

        ,COALESCE(T3.IS_BT_FNC_ADD_5000, '0')           AS IND_BT_CHM_ADD_5000 --用例执行期间理财日均增加5000及以上

        ,COALESCE(T3.IS_BT_FNC_TRANS, '0')              AS IND_BT_LOSE_CHM_TRANS --财富流失挽回是否转化

        ,COALESCE(T3.IS_BT_1W_FNC_TRANS, '0')           AS IND_BT_1W_CHM_TRANS --是否日均提升至1万以上客户

        ,COALESCE(T3.IS_BT_5W_FNC_TRANS, '0')           AS IND_BT_5W_CHM_TRANS --是否日均提升至5万以上客户

        ,COALESCE(T3.CLS_FNC_MID_AMT, 0)                AS CLS_CHM_MID_AMT --封闭式理财中收

        ,COALESCE(T3.OPN_FNC_MID_AMT, 0)                AS OPN_CHM_MID_AMT --开放式理财中收

        ,COALESCE(T3.IS_LGN_MBL_BNK, '0')               AS IND_LGN_MBL_BNK --是否登录手机银行

        ,COALESCE(T3.IS_CLICK_CHM_ERN, '0')             AS IND_CLICK_CHM_ERN --是否点击理财入口

        ,COALESCE(T3.IS_CLICK_CHM_DTL, '0')             AS IND_CLICK_CHM_DTL --是否点击理财产品详情

        ,COALESCE(T3.IS_CFM_BUY_CHM_PRD, '0')           AS IND_CFM_BUY_CHM_PRD --是否点击理财产品确认购买

        ,COALESCE(T3.IS_BUY_CHM_PRD, '0')               AS IND_BUY_CHM_PRD  --理财产品是否购买成功

        --信用卡相关指标

        ,COALESCE(T4.IND_CR_CRD_RFER, '0')              AS IND_CR_CRD_RFER --是否有推荐用户值

        ,COALESCE(T4.CR_CRD_APLY_NUM, 0)                AS CR_CRD_APLY_NUM --信用卡申请流水号数,申请流水号数>1时为异常申请

        ,COALESCE(T4.IND_CR_CRD_APLY, '0')              AS IND_CR_CRD_APLY --是否有信用卡申请流水号

        ,COALESCE(T4.IND_CPL_CR_CRD_APLY, '0')          AS IND_CPL_CR_CRD_APLY ---是否走完信用卡申请

        ,COALESCE(T4.IND_CR_CRD_ISU, '0')               AS IND_CR_CRD_ISU --是否信用卡发卡成功

        ,COALESCE(T4.IND_CR_CRD_ACTVT, '0')             AS IND_CR_CRD_ACTVT ---是否信用卡激活客户

        ,COALESCE(T4.IND_CR_CRD_TRX, '0')               AS IND_CR_CRD_TRX --是否发生信用卡交易

        ,COALESCE(T4.IND_CR_CRD_INSTM_TRX, '0')         AS IND_CR_CRD_INSTM_TRX --是否发生信用卡分期交易

        ,COALESCE(T4.IND_CR_CRD_INSTM_TRX_AMT, '0')     AS IND_CR_CRD_INSTM_TRX_AMT --信用卡分期交易金额

        ,COALESCE(T4.CR_CRD_ACT_LMT, 0)                 AS CR_CRD_ACT_LMT --信用卡账户额度

        ,COALESCE(T4.CR_CRD_ACT_BAL, 0)                 AS CR_CRD_ACT_BAL --信用卡账户余额

        ,COALESCE(T4.AGE, NULL)                         AS AGE --年龄

        ,COALESCE(T4.AGE_BIN, '')                       AS AGE_BIN --年龄分段

        ,COALESCE(T4.AGE_BIN_2, '')                     AS AGE_BIN_2 --年龄区间2

        ,COALESCE(T4.GDR_CD, '')                        AS GDR_CD --性别代码

        ,COALESCE(T4.GDR_DSCR, '')                      AS GDR_DSCR --性别

        ,COALESCE(T4.MRG_SITU_CD, '')                   AS MRG_SITU_CD --婚姻状况代码

        ,COALESCE(T4.MRG_SITU, '')                      AS MRG_SITU --婚姻状况

        ,COALESCE(T4.HI_ACDM_DEG_CD, '')                AS HI_ACDM_DEG_CD --最高学历代码

        ,COALESCE(T4.HI_ACDM_DEG, '')                   AS HI_ACDM_DEG --最高学历

        ,COALESCE(T4.HI_ACDM_DEG_BIN, '')               AS HI_ACDM_DEG_BIN --最高学历分段

        ,COALESCE(T4.IDT_CD, '')                        AS IDT_CD --行业代码

        ,COALESCE(T4.IDT_NM, '')                        AS IDT_NM --行业名称

        ,COALESCE(T4.IND_OPN_INDIV_NB, '0')             AS IND_OPN_INDIV_NB --是否开通个人网银

        ,COALESCE(T4.IND_OPN_WECHAT_BNK, '0')           AS IND_OPN_WECHAT_BNK --是否开通微信银行

        ,COALESCE(T4.IND_OPN_MBL_BNK, '0')              AS IND_OPN_MBL_BNK --是否开通手机银行

        ,COALESCE(T4.AUM_LAST_MON_AVG, 0)               AS AUM_LAST_MON_AVG --客户上月综合金融资产(aum)月日均

        ,COALESCE(T4.L180D_AVG_FTP_INC, 0)              AS L180D_AVG_FTP_INC  --近180天FTP均值

        --,COALESCE(T4.CMPN_MODL_SCOR, 0)                 AS CMPN_MODL_SCOR --'营销模型分'

        --,COALESCE(T4.CMPN_MODL_SCOR_BIN, '')            AS CMPN_MODL_SCOR_BIN --'营销模型分区间'

        --,COALESCE(T4.SLF_INSTM_SCOR, 0)                 AS SLF_INSTM_SCOR --'自主分期评分'

        --,COALESCE(T4.SLF_INSTM_SCOR_BIN, '')            AS SLF_INSTM_SCOR_BIN --'自主分期评分区间'

        --,COALESCE(T4.CMPN_MODL_RSP_IND, '')             AS CMPN_MODL_RSP_IND --'营销模型响应标识'

        --,COALESCE(T4.SLF_INSTM_RSP_IND, '')             AS SLF_INSTM_RSP_IND --'自主分期响应标识'

        ,COALESCE(T4.IND_CR_CRD_INSTM_NEW_CST, '0')     AS IND_CR_CRD_INSTM_NEW_CST --是否信用卡分期新客

        ,COALESCE(T4.CR_CRD_CAN_INSTM_AMT, 0)           AS CR_CRD_CAN_INSTM_AMT --测算账户可分期金额

        ,COALESCE(T4.CR_CRD_CAN_INSTM_AMT_BIN, '')      AS CR_CRD_CAN_INSTM_AMT_BIN --测算账户可分期金额区间

        ,COALESCE(T4.CR_CRD_LMT, 0)                     AS CR_CRD_LMT --信用额度

        ,COALESCE(T4.IND_TEL_CALL, '0')                 AS IND_TEL_CALL --是否被呼叫

        ,COALESCE(T4.TEL_CALL_TMS, 0)                   AS TEL_CALL_TMS --被呼叫次数

        ,COALESCE(T4.IND_CALL_CONNECT, '0')             AS IND_CALL_CONNECT --是否接通

        ,COALESCE(T4.CALL_CONNECT_TMS, 0)               AS CALL_CONNECT_TMS --接通次数

        ,COALESCE(T4.IND_CR_CRD_INSTM, '0')             AS IND_CR_CRD_INSTM --是否分期

        ,COALESCE(T4.CR_CRD_INSTM_DT,'')                AS CR_CRD_INSTM_DT --信用卡分期日期

        ,COALESCE(T4.CR_CRD_INSTM_AMT, 0)               AS CR_CRD_INSTM_AMT --分期本金

        ,COALESCE(T4.IND_HAVE_CR_CRD_INSTM_PRFT, '0')   AS IND_HAVE_CR_CRD_INSTM_PRFT --是否有信用卡分期优惠

        ,COALESCE(T4.CR_CRD_INSTM_TOT_FEE, 0)           AS CR_CRD_INSTM_TOT_FEE --信用卡分期总费用_含商户回佣

        ,COALESCE(T4.CR_CRD_INSTM_WEGT_PERD_NUM, 0)     AS CR_CRD_INSTM_WEGT_PERD_NUM --加权分期期数

        ,COALESCE(T4.CR_CRD_INSTM_WEGT_SNGL_FEE_RAT, 0) AS CR_CRD_INSTM_WEGT_SNGL_FEE_RAT --加权单期费率

        ,COALESCE(T4.CR_CRD_CAN_INSTM_AMT_PCT, 0)       AS CR_CRD_CAN_INSTM_AMT_PCT --可分期金额占授信比=测算账户可分期金额/信用额度

        ,COALESCE(T4.CR_CRD_CAN_INSTM_AMT_PCT_BIN, '')  AS CR_CRD_CAN_INSTM_AMT_PCT_BIN --测算可分期金额占授信比区间

		--商机

		,COALESCE(T5.VIEW_FLAG,0) AS VIEW_FLAG --查看 1已读，0未读

		,COALESCE(T5.IS_FOLLOW_UP,0) AS IS_FOLLOW_UP   --转为：1已跟进，0未跟进

		,COALESCE(T5.BANK_OPPT_BATCH_NAME,0) AS BANK_OPPT_BATCH_NAME  --商机行方批次名称

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_REL T

LEFT JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_LIST T0

ON      T.CASE_NO = T0.CASE_NO

AND     T.CASE_NAME = T0.CASE_NAME

AND     T.CASE_PHASE = T0.CASE_PHASE

AND     T.CST_ID = T0.CST_ID

AND     T.CASE_NO IS NOT NULL

LEFT JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_LOAN T1 --贷款

ON      T.CASE_NO = T1.CASE_NO

AND     T.CASE_NAME = T1.CASE_NAME

AND     T.CASE_PHASE = T1.CASE_PHASE

AND     T.CST_ID = T1.CST_ID

AND     T.REL_CST_ID = T1.REL_CST_ID

LEFT JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_DEP T2 --存款

ON      T.CASE_NO = T2.CASE_NO

AND     T.CASE_NAME = T2.CASE_NAME

AND     T.CASE_PHASE = T2.CASE_PHASE

AND     T.CST_ID = T2.CST_ID

AND     T.REL_CST_ID = T2.REL_CST_ID

LEFT JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CHM T3 --理财

ON      T.CASE_NO = T3.CASE_NO

AND     T.CASE_NAME = T3.CASE_NAME

AND     T.CASE_PHASE = T3.CASE_PHASE

AND     T.CST_ID = T3.CST_ID

AND     T.REL_CST_ID = T3.REL_CST_ID

LEFT JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CR_CRD T4 --信用卡

ON      T.CASE_NO = T4.CASE_NO

AND     T.CASE_NAME = T4.CASE_NAME

AND     T.CASE_PHASE = T4.CASE_PHASE

AND     T.CST_ID = T4.CST_ID

AND     T.REL_CST_ID = T4.REL_CST_ID

LEFT JOIN   LAB_BIGDATA_DEV.OPPO_CASE_VIEW_FOLLOW T5  --机跟进率查看率

ON      T.CASE_NO = T5.CASE_NO

AND     T.CASE_NAME = T5.CASE_NAME

AND     T.CASE_PHASE = T5.CASE_PHASE

AND     T.CST_ID = T5.CST_ID

AND     T.REL_CST_ID = T5.REL_CST_ID

;



/*

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_AFF_ANLS;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_AFF_ANLS

(

    CASE_NO                         STRING  COMMENT '用例编号'

    ,CASE_NAME                      STRING  COMMENT '用例名称'

    ,CASE_PHASE                     STRING  COMMENT '用例批次'

    ,CST_ID                         STRING  COMMENT '客户号'

    ,EXEC_DATE                      STRING  COMMENT '用例执行日期'

    ,ADJUST_DUE_DATE                STRING  COMMENT '用例截止日期调整'

	,DUE_DATE              			  STRING  COMMENT '用例截止日期原始'

    ,INIT_DATE                      STRING  COMMENT '取数日期'

    ,REL_CST_ID                     STRING  COMMENT '关联人'

    ,IS_SLF                         STRING  COMMENT '是否本人'

    ,IS_SAM_RSK                     STRING  COMMENT '是否同一风险控制号'

    ,IS_REL_PTY                     STRING  COMMENT '是否关联人'

    ,SAMPLE_CLASS                   STRING  COMMENT '样本分类' --(对照组，实验组)

    ,CONNECT_CHNL                   STRING  COMMENT '触达渠道' --(外呼、app push、客户经理)

    ,SCENE_TYPE                     STRING  COMMENT '场景分类' --(促首次/促复用)

    ,SUM_SCORE                      DECIMAL COMMENT '模型分'

    ,CALL_EMP_ID                    STRING  COMMENT '外呼人员工号' --HAND_EMP_ID

    ,CALL_EMP_NM                    STRING  COMMENT '外呼人员姓名' --HAND_EMP_NM

    ,CALL_RSLT                      STRING  COMMENT '外呼小结' --FINISH_STATE

    ,CALL_STATUS                    STRING  COMMENT '外呼状态' --有效接通、未接通、未外呼

    ,COUPON_AMT                     DECIMAL COMMENT '券额'

    --贷记卡分期需要用到的字段

    ,CMPN_MODL_SCOR                 DECIMAL COMMENT '营销模型分'

    ,CMPN_MODL_SCOR_BIN             STRING  COMMENT '营销模型分区间'

    ,SLF_INSTM_SCOR                 DECIMAL COMMENT '自主分期评分'

    ,SLF_INSTM_SCOR_BIN             STRING  COMMENT '自主分期评分区间'

    ,CMPN_MODL_RSP_IND              STRING  COMMENT '营销模型响应标识'

    ,SLF_INSTM_RSP_IND              STRING  COMMENT '自主分期响应标识'

    --管户或产效归属相关字段

    ,PRM_FH_ORG_ID                  STRING  COMMENT '主管户分行机构号或产效归属分行机构号'

    ,PRM_FH_ORG_NM                  STRING  COMMENT '主管户分行名称或产效归属分行机构名称'

    ,PRM_ZH_ORG_ID                  STRING  COMMENT '主管户支行机构号或产效归属支行机构号'

    ,PRM_ZH_ORG_NM                  STRING  COMMENT '主管户支行名称或产效归属支行机构名称'

    ,PRM_TD_ORG_ID                  STRING  COMMENT '主管户团队机构号或产效归属团队机构号'

    ,PRM_TD_ORG_NM                  STRING  COMMENT '主管户团队名称或产效归属团队名称'

    ,PRM_MGR_ID                     STRING  COMMENT '主管户客户经理工号或指定接收客户经理工号'

    ,PRM_EMPE_NM                    STRING  COMMENT '主管户客户经理姓名或指定接收客户经理姓名'

    --贷款相关指标

    ,IND_BT_COM_APLY                BIGINT  COMMENT '是否发生申请'

    ,IND_BT_COM_CTR                 BIGINT  COMMENT '是否发生合同'

    ,IND_BT_COM_DBIL                BIGINT  COMMENT '是否发生借据'

    ,IND_BT_SDT_APLY                BIGINT  COMMENT '是否发生随贷通申请'

    ,IND_BT_SDT_CTR                 BIGINT  COMMENT '是否发生随贷通合同'

    ,IND_BT_SDT_DBIL                BIGINT  COMMENT '是否发生随贷通借据'

    ,IND_BT_TED_APLY                BIGINT  COMMENT '是否发生泰e贷申请'

    ,IND_BT_TED_CTR                 BIGINT  COMMENT '是否发生泰e贷合同'

    ,IND_BT_TED_DBIL                BIGINT  COMMENT '是否发生泰e贷借据'

    ,IND_BT_RED_APLY                BIGINT  COMMENT '是否发生融e贷申请'

    ,IND_BT_RED_CTR                 BIGINT  COMMENT '是否发生融e贷合同'

    ,IND_BT_RED_DBIL                BIGINT  COMMENT '是否发生融e贷借据'

    ,BT_COM_APLY_HPN_DT             STRING  COMMENT '申请发生日期'

    ,BT_COM_CTR_HPN_DT              STRING  COMMENT '合同发生日期'

    ,BT_COM_DBIL_DTRB_DT            STRING  COMMENT '借据发生日期'

    ,BT_SDT_APLY_HPN_DT             STRING  COMMENT '随贷通申请发生日期'

    ,BT_SDT_CTR_HPN_DT              STRING  COMMENT '随贷通合同发生日期'

    ,BT_SDT_DBIL_DTRB_DT            STRING  COMMENT '随贷通借据发生日期'

    ,BT_TED_APLY_HPN_DT             STRING  COMMENT '泰e贷申请发生日期'

    ,BT_TED_CTR_HPN_DT              STRING  COMMENT '泰e贷合同发生日期'

    ,BT_TED_DBIL_DTRB_DT            STRING  COMMENT '泰e贷借据发生日期'

    ,BT_RED_APLY_HPN_DT             STRING  COMMENT '融e贷申请发生日期'

    ,BT_RED_CTR_HPN_DT              STRING  COMMENT '融e贷合同发生日期'

    ,BT_RED_DBIL_DTRB_DT            STRING  COMMENT '融e贷借据发生日期'

    ,BT_COM_SUM_DBIL_AMT            DECIMAL COMMENT '借据发放金额'

    ,BT_COM_SUM_DBIL_BAL            DECIMAL COMMENT '借据本金余额'

    ,BT_SDT_SUM_DBIL_AMT            DECIMAL COMMENT '随贷通借据发放金额'

    ,BT_SDT_SUM_DBIL_BAL            DECIMAL COMMENT '随贷通借据本金余额'

    ,BT_TED_SUM_DBIL_AMT            DECIMAL COMMENT '泰e贷借据发放金额'

    ,BT_TED_SUM_DBIL_BAL            DECIMAL COMMENT '泰e贷借据本金余额'

    ,BT_RED_SUM_DBIL_AMT            DECIMAL COMMENT '融e贷借据发放金额'

    ,BT_RED_SUM_DBIL_BAL            DECIMAL COMMENT '融e贷借据本金余额'

    --小企业不限制贷款类型为一般贷款，所以单独

    ,IND_BT_CTR                     BIGINT  COMMENT '小企业_是否发生合同'

    ,BT_CTR_HPN_DT                  BIGINT  COMMENT '小企业_合同发生日期'

    ,BT_COM_SUM_CTR_AMT             DECIMAL COMMENT '授信额度'

    ,BT_COM_SUM_CTR_BAL             DECIMAL COMMENT '用信额度'

    ,BT_SDT_SUM_CTR_AMT             DECIMAL COMMENT '随贷通授信额度'

    ,BT_SDT_SUM_CTR_BAL             DECIMAL COMMENT '随贷通用信额度'

    ,BT_TED_SUM_CTR_AMT             DECIMAL COMMENT '泰e贷授信额度'

    ,BT_TED_SUM_CTR_BAL             DECIMAL COMMENT '泰e贷用信额度'

    ,BT_RED_SUM_CTR_AMT             DECIMAL COMMENT '融e贷授信额度'

    ,BT_RED_SUM_CTR_BAL             DECIMAL COMMENT '融e贷用信额度'

    ,BT_SUM_CTR_AMT                 DECIMAL COMMENT '小企业_授信额度'

    ,BT_SUM_CTR_BAL                 DECIMAL COMMENT '小企业_用信额度'

    --泰惠收配贷、信用卡配贷

    ,ONL_SRC_BT_BIND_AMT            DECIMAL COMMENT '线上来源实际启用额度'

    ,ONL_SRC_BT_CTR_BAL             DECIMAL COMMENT '线上来源合同余额'

    ,OTLN_SRC_BT_BIND_AMT           DECIMAL COMMENT '线下来源实际启用额度'

    ,OTLN_SRC_BT_CTR_BAL            DECIMAL COMMENT '线下来源合同余额'

    ,LOAN_SRC_BT_BIND_AMT           DECIMAL COMMENT '贷款来源实际启用额度'

    ,LOAN_SRC_BT_CTR_BAL            DECIMAL COMMENT '贷款来源合同余额'

    ,IND_DBIL                       BIGINT  COMMENT '是否发生借据'

    ,SUM_DBIL_CNT                   BIGINT  COMMENT '借据笔数'

    ,DBIL_DTRB_DT                   STRING  COMMENT '借据发放日期'

    ,SUM_DBIL_AMT                   DECIMAL COMMENT '借据发放金额'

    ,SUM_DBIL_BAL                   DECIMAL COMMENT '借据余额'

    ,SUM_DBIL_BAL_AVG               DECIMAL COMMENT '借据余额日均'

    ,IND_SDT_DBIL                   BIGINT  COMMENT '是否发生随贷通借据'

    ,SDT_SUM_DBIL_CNT               BIGINT  COMMENT '随贷通借据笔数'

    ,SDT_DBIL_DTRB_DT               STRING  COMMENT '随贷通借据发放日期'

    ,SDT_SUM_DBIL_AMT               DECIMAL COMMENT '随贷通借据发放金额'

    ,SDT_SUM_DBIL_BAL               DECIMAL COMMENT '随贷通借据余额'

    ,SDT_SUM_DBIL_BAL_AVG           DECIMAL COMMENT '随贷通借据余额日均'

    ,IND_TED_DBIL                   BIGINT  COMMENT '是否发生泰e贷借据'

    ,TED_SUM_DBIL_CNT               BIGINT  COMMENT '泰e贷借据笔数'

    ,TED_DBIL_DTRB_DT               STRING  COMMENT '泰e贷借据发放日期'

    ,TED_SUM_DBIL_AMT               DECIMAL COMMENT '泰e贷借据发放金额'

    ,TED_SUM_DBIL_BAL               DECIMAL COMMENT '泰e贷借据余额'

    ,TED_SUM_DBIL_BAL_AVG           DECIMAL COMMENT '泰e贷借据余额日均'

    ,IND_RED_DBIL                   BIGINT  COMMENT '是否发生融e贷借据'

    ,RED_SUM_DBIL_CNT               BIGINT  COMMENT '融e贷借据笔数'

    ,RED_DBIL_DTRB_DT               STRING  COMMENT '融e贷借据发放日期'

    ,RED_SUM_DBIL_AMT               DECIMAL COMMENT '融e贷借据发放金额'

    ,RED_SUM_DBIL_BAL               DECIMAL COMMENT '融e贷借据余额'

    ,RED_SUM_DBIL_BAL_AVG           DECIMAL COMMENT '融e贷借据余额日均'

    ,SUM_LOAN_FTP_INC               DECIMAL COMMENT '推广期间贷款FTP利润'

    ,SUM_PREDICT_LOAN_FTP_INC       DECIMAL COMMENT '预测贷款FTP年利润'

    ,IND_PYF                        BIGINT  COMMENT '是否结清'

    ,PYF_DT                         STRING  COMMENT '结清日期'

    ,PYF_CTR_AMT                    DECIMAL COMMENT '结清金额'

    ,IND_RELOAN                     BIGINT  COMMENT '是否发生续贷'

    ,RELOAN_DT                      STRING  COMMENT '续贷日期'

    ,RELOAN_CTR_AMT                 DECIMAL COMMENT '续贷金额'

    ,IND_ICR_AMT_RELOAN             BIGINT  COMMENT '是否增额续贷'

    ,IND_ORI_AMT_RELOAN             BIGINT  COMMENT '是否原额续贷'

    ,IND_DEC_AMT_RELOAN             BIGINT  COMMENT '是否减额续贷'

    ,DIFF_RELOAN_PYF_AMT            DECIMAL COMMENT '续贷金额与结清金额之差'

    ,BFR_L90D_MAX_AMT               DECIMAL COMMENT '提额前90天最高额度'

    ,SDT_BFR_L90D_MAX_AMT           DECIMAL COMMENT '随贷通提额前90天最高额度'

    ,TED_BFR_L90D_MAX_AMT           DECIMAL COMMENT '泰e贷提额前90天最高额度'

    ,RED_BFR_L90D_MAX_AMT           DECIMAL COMMENT '融e贷提额前90天最高额度'

    ,OTH_BFR_L90D_MAX_AMT           DECIMAL COMMENT '其他贷款提额前90天最高额度'

    ,AFT_MAX_AMT                    DECIMAL COMMENT '提额后最高额度'

    ,SDT_AFT_MAX_AMT                DECIMAL COMMENT '随贷通提额后最高额度'

    ,TED_AFT_MAX_AMT                DECIMAL COMMENT '泰e贷提额后最高额度'

    ,RED_AFT_MAX_AMT                DECIMAL COMMENT '融e贷提额后最高额度'

    ,OTH_AFT_MAX_AMT                DECIMAL COMMENT '其他贷款提额后最高额度'

    ,IND_ICR_AMT                    BIGINT  COMMENT '是否提额'

    ,IND_SDT_ICR_AMT                BIGINT  COMMENT '随贷通是否提额'

    ,IND_TED_ICR_AMT                BIGINT  COMMENT '泰e贷是否提额'

    ,IND_RED_ICR_AMT                BIGINT  COMMENT '融e贷是否提额'

    ,IND_OTH_ICR_AMT                BIGINT  COMMENT '其他贷款是否提额'

    ,TOT_ICR_AMT                    DECIMAL COMMENT '提额总金额'

    ,SDT_ICR_AMT                    DECIMAL COMMENT '随贷通提额金额'

    ,TED_ICR_AMT                    DECIMAL COMMENT '泰e贷提额金额'

    ,RED_ICR_AMT                    DECIMAL COMMENT '融e贷提额金额'

    ,OTH_ICR_AMT                    DECIMAL COMMENT '其他贷款提额金额'

    --存款相关指标

    ,IND_BT_DEP_ACT                 BIGINT  COMMENT '是否新开立存款账户'

	,BT_DEP_SUM                     BIGINT  COMMENT '新开立存款账户数'

    ,BT_DEP_OPN_DT                  STRING  COMMENT '新开存款账户开户日期'



    ,BT_SUM_DEP_BAL                 DECIMAL COMMENT '当前存款余额'

    ,BFR_L30D_DEP_BAL_AVG           DECIMAL COMMENT '执行日期前30天存款余额日均'

    ,BT_DEP_BAL_AVG                 DECIMAL COMMENT '用例执行期间存款余额日均'

    ,DIFF_DEP_BAL_AVG               DECIMAL COMMENT '存款日均增加值'

    ,IND_BT_DEP_ADD_5000            DECIMAL COMMENT '用例执行期间存款日均增加5000及以上'

    ,BT_RCTLY_30D_DEP_BAL_AVG       DECIMAL COMMENT '用例执行后当前日期往前推30天存款余额日均'

    ,BT_L30D_DEP_BAL_AVG            DECIMAL COMMENT '用例执行后30天内存款余额日均'

    ,BT_L90D_DEP_BAL_AVG            DECIMAL COMMENT '用例执行后90天内存款余额日均'

    ,IND_BT_L30D_L90D_DEP_TRANS     BIGINT  COMMENT '用例执行期间近30天_近90天存款是否转化'

    --理财相关指标

    ,IND_BT_CHM_TRX                 BIGINT  COMMENT '用例执行期间是否发生理财交易'

    ,BT_MIN_CHM_TRX_DT              STRING  COMMENT '用例执行期间最早交易日期'

    ,BT_CLS_CHM_TRX_AMT             DECIMAL COMMENT '用例执行期间封闭式产品认购金额'

    ,BT_OPN_CHM_TRX_AMT             DECIMAL COMMENT '用例执行期间开放式产品认购金额'

    ,BT_SEMI_CLS_FNC_TRX_AMT        DECIMAL COMMENT '用例执行期间半封闭式理财产品认购金额'

    ,BT_SEMI_OPN_FNC_TRX_AMT        DECIMAL COMMENT '用例执行期间半开放式理财产品认购金额'

    ,BT_TL_FNC_TRX_AMT              DECIMAL COMMENT '用例执行期间自营理财产品交易金额'

    ,BT_NON_TL_FNC_TRX_AMT          DECIMAL COMMENT '用例执行期间代销理财产品交易金额'

    ,BT_SUM_CHM_AMT                 DECIMAL COMMENT '当前理财余额'

    ,BFR_L30D_CHM_AMT_AVG           DECIMAL COMMENT '执行日期前30天理财日均'

    ,BT_AFT_TRX_CHM_AMT_AVG         DECIMAL COMMENT '发生首次交易后理财日均'

    ,BT_CHM_AMT_AVG                 DECIMAL COMMENT '用例执行期间理财日均'

    ,BT_RCTLY_30D_CHM_AMT_AVG       DECIMAL COMMENT '用例执行后当前日期往前推30天理财日均'

    ,IND_BT_CHM_ADD_5000            BIGINT  COMMENT '用例执行期间理财日均增加5000及以上'

    ,IND_BT_LOSE_CHM_TRANS          BIGINT  COMMENT '财富流失挽回是否转化'

    ,IND_BT_1W_CHM_TRANS            BIGINT  COMMENT '是否日均提升至1万以上客户'

    ,IND_BT_5W_CHM_TRANS            BIGINT  COMMENT '是否日均提升至5万以上客户'

    ,CLS_CHM_MID_AMT                DECIMAL COMMENT '封闭式理财中收'

    ,OPN_CHM_MID_AMT                DECIMAL COMMENT '开放式理财中收'

    ,IND_LGN_MBL_BNK                BIGINT  COMMENT '是否登录手机银行'

    ,IND_CLICK_CHM_ERN              BIGINT  COMMENT '是否点击理财入口'

    ,IND_CLICK_CHM_DTL              BIGINT  COMMENT '是否点击理财产品详情'

    ,IND_CFM_BUY_CHM_PRD            BIGINT  COMMENT '是否点击理财产品确认购买'

    ,IND_BUY_CHM_PRD                BIGINT  COMMENT '理财产品是否购买成功'

    --信用卡相关指标

    ,IND_CR_CRD_RFER                BIGINT  COMMENT '是否有推荐用户值'

    ,CR_CRD_APLY_NUM                BIGINT  COMMENT '信用卡申请流水号数' --申请流水号数>1时为异常申请

    ,IND_CR_CRD_APLY                BIGINT  COMMENT '是否有信用卡申请流水号'

    ,IND_CPL_CR_CRD_APLY            BIGINT  COMMENT '是否走完信用卡申请'

    ,IND_CR_CRD_ISU                 BIGINT  COMMENT '是否信用卡发卡成功'

    ,IND_CR_CRD_ACTVT               BIGINT  COMMENT '是否信用卡激活客户'

    ,IND_CR_CRD_TRX                 BIGINT  COMMENT '是否发生信用卡交易'

    ,IND_CR_CRD_INSTM_TRX           BIGINT  COMMENT '是否发生信用卡分期交易'

    ,IND_CR_CRD_INSTM_TRX_AMT       DECIMAL COMMENT '信用卡分期交易金额'

    ,CR_CRD_ACT_LMT                 DECIMAL COMMENT '信用卡账户额度'

    ,CR_CRD_ACT_BAL                 DECIMAL COMMENT '信用卡账户余额'

    ,AGE                            BIGINT  COMMENT '年龄'

    ,AGE_BIN                        STRING  COMMENT '年龄分段'

    ,AGE_BIN_2                      STRING  COMMENT '年龄区间2'

    ,GDR_CD                         STRING  COMMENT '性别代码'

    ,GDR_DSCR                       STRING  COMMENT '性别'

    ,MRG_SITU_CD                    STRING  COMMENT '婚姻状况代码'

    ,MRG_SITU                       STRING  COMMENT '婚姻状况'

    ,HI_ACDM_DEG_CD                 STRING  COMMENT '最高学历代码'

    ,HI_ACDM_DEG                    STRING  COMMENT '最高学历'

    ,HI_ACDM_DEG_BIN                STRING  COMMENT '最高学历分段'

    ,IDT_CD                         STRING  COMMENT '行业代码'

    ,IDT_NM                         STRING  COMMENT '行业名称'

    ,IND_OPN_INDIV_NB               BIGINT  COMMENT '是否开通个人网银'

    ,IND_OPN_WECHAT_BNK             BIGINT  COMMENT '是否开通微信银行'

    ,IND_OPN_MBL_BNK                BIGINT  COMMENT '是否开通手机银行'

    ,AUM_LAST_MON_AVG               DECIMAL COMMENT '客户上月综合金融资产(aum)月日均'

    ,L180D_AVG_FTP_INC              DECIMAL COMMENT '近180天FTP均值'

    --,CMPN_MODL_SCOR                 DECIMAL   COMMENT  '营销模型分'

    --,CMPN_MODL_SCOR_BIN             STRING   COMMENT  '营销模型分区间'

    --,SLF_INSTM_SCOR                 DECIMAL   COMMENT  '自主分期评分'

    --,SLF_INSTM_SCOR_BIN             STRING   COMMENT  '自主分期评分区间'

    --,CMPN_MODL_RSP_IND              STRING   COMMENT  '营销模型响应标识'

    --,SLF_INSTM_RSP_IND              STRING   COMMENT  '自主分期响应标识'

    ,IND_CR_CRD_INSTM_NEW_CST       BIGINT  COMMENT '是否信用卡分期新客'

    ,CR_CRD_CAN_INSTM_AMT           DECIMAL COMMENT '测算账户可分期金额'

    ,CR_CRD_CAN_INSTM_AMT_BIN       STRING  COMMENT '测算账户可分期金额区间'

    ,CR_CRD_LMT                     DECIMAL COMMENT '信用额度'

    ,IND_TEL_CALL                   BIGINT  COMMENT '是否被呼叫'

    ,TEL_CALL_TMS                   BIGINT  COMMENT '被呼叫次数'

    ,IND_CALL_CONNECT               BIGINT  COMMENT '是否接通'

    ,CALL_CONNECT_TMS               BIGINT  COMMENT '接通次数'

    ,IND_CR_CRD_INSTM               BIGINT  COMMENT '是否分期'

    ,CR_CRD_INSTM_DT                STRING  COMMENT '信用卡分期日期'

    ,CR_CRD_INSTM_AMT               DECIMAL COMMENT '分期本金'

    ,IND_HAVE_CR_CRD_INSTM_PRFT     BIGINT  COMMENT '是否有信用卡分期优惠'

    ,CR_CRD_INSTM_TOT_FEE           DECIMAL COMMENT '信用卡分期总费用_含商户回佣'

    ,CR_CRD_INSTM_WEGT_PERD_NUM     DECIMAL COMMENT '加权分期期数'

    ,CR_CRD_INSTM_WEGT_SNGL_FEE_RAT DECIMAL COMMENT '加权单期费率'

    ,CR_CRD_CAN_INSTM_AMT_PCT       DECIMAL COMMENT '可分期金额占授信比' --测算账户可分期金额/信用额度

    ,CR_CRD_CAN_INSTM_AMT_PCT_BIN   STRING  COMMENT '测算可分期金额占授信比区间'

	--商机

	,VIEW_FLAG       BIGINT  COMMENT '是否查看'

	,IS_FOLLOW_UP      BIGINT  COMMENT '是否跟进'

,BANK_OPPT_BATCH_NAME STRING  COMMENT '商机行方批次名称'

)

COMMENT

'用例产效分析统计表'

PARTITIONED BY

(

    DT STRING COMMENT '日期分区'

);

*/

INSERT OVERWRITE TABLE LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_AFF_ANLS PARTITION ( DT='20230501' )

SELECT  case_no,case_name,case_phase,cst_id,exec_date,adjust_due_date,due_date,init_date,rel_cst_id,is_slf,is_sam_rsk,is_rel_pty,sample_class,connect_chnl,scene_type,sum_score,call_emp_id,call_emp_nm,call_rslt,call_status,coupon_amt,cmpn_modl_scor,cmpn_modl_scor_bin,slf_instm_scor,slf_instm_scor_bin,cmpn_modl_rsp_ind,slf_instm_rsp_ind,prm_fh_org_id,prm_fh_org_nm,prm_zh_org_id,prm_zh_org_nm,prm_td_org_id,prm_td_org_nm,prm_mgr_id,prm_empe_nm,ind_bt_com_aply,ind_bt_com_ctr,ind_bt_com_dbil,ind_bt_sdt_aply,ind_bt_sdt_ctr,ind_bt_sdt_dbil,ind_bt_ted_aply,ind_bt_ted_ctr,ind_bt_ted_dbil,ind_bt_red_aply,ind_bt_red_ctr,ind_bt_red_dbil,bt_com_aply_hpn_dt,bt_com_ctr_hpn_dt,bt_com_dbil_dtrb_dt,bt_sdt_aply_hpn_dt,bt_sdt_ctr_hpn_dt,bt_sdt_dbil_dtrb_dt,bt_ted_aply_hpn_dt,bt_ted_ctr_hpn_dt,bt_ted_dbil_dtrb_dt,bt_red_aply_hpn_dt,bt_red_ctr_hpn_dt,bt_red_dbil_dtrb_dt,bt_com_sum_dbil_amt,bt_com_sum_dbil_bal,bt_sdt_sum_dbil_amt,bt_sdt_sum_dbil_bal,bt_ted_sum_dbil_amt,bt_ted_sum_dbil_bal,bt_red_sum_dbil_amt,bt_red_sum_dbil_bal,ind_bt_ctr,bt_ctr_hpn_dt,bt_com_sum_ctr_amt,bt_com_sum_ctr_bal,bt_sdt_sum_ctr_amt,bt_sdt_sum_ctr_bal,bt_ted_sum_ctr_amt,bt_ted_sum_ctr_bal,bt_red_sum_ctr_amt,bt_red_sum_ctr_bal,bt_sum_ctr_amt,bt_sum_ctr_bal,onl_src_bt_bind_amt,onl_src_bt_ctr_bal,otln_src_bt_bind_amt,otln_src_bt_ctr_bal,loan_src_bt_bind_amt,loan_src_bt_ctr_bal,ind_dbil,sum_dbil_cnt,dbil_dtrb_dt,sum_dbil_amt,sum_dbil_bal,sum_dbil_bal_avg,ind_sdt_dbil,sdt_sum_dbil_cnt,sdt_dbil_dtrb_dt,sdt_sum_dbil_amt,sdt_sum_dbil_bal,sdt_sum_dbil_bal_avg,ind_ted_dbil,ted_sum_dbil_cnt,ted_dbil_dtrb_dt,ted_sum_dbil_amt,ted_sum_dbil_bal,ted_sum_dbil_bal_avg,ind_red_dbil,red_sum_dbil_cnt,red_dbil_dtrb_dt,red_sum_dbil_amt,red_sum_dbil_bal,red_sum_dbil_bal_avg,sum_loan_ftp_inc,sum_predict_loan_ftp_inc,ind_pyf,pyf_dt,pyf_ctr_amt,ind_reloan,reloan_dt,reloan_ctr_amt,ind_icr_amt_reloan,ind_ori_amt_reloan,ind_dec_amt_reloan,diff_reloan_pyf_amt,bfr_l90d_max_amt,sdt_bfr_l90d_max_amt,ted_bfr_l90d_max_amt,red_bfr_l90d_max_amt,oth_bfr_l90d_max_amt,aft_max_amt,sdt_aft_max_amt,ted_aft_max_amt,red_aft_max_amt,oth_aft_max_amt,ind_icr_amt,ind_sdt_icr_amt,ind_ted_icr_amt,ind_red_icr_amt,ind_oth_icr_amt,tot_icr_amt,sdt_icr_amt,ted_icr_amt,red_icr_amt,oth_icr_amt,ind_bt_dep_act,BT_DEP_SUM,bt_dep_opn_dt,bt_sum_dep_bal,bfr_l30d_dep_bal_avg,bt_dep_bal_avg,diff_dep_bal_avg,ind_bt_dep_add_5000,bt_rctly_30d_dep_bal_avg,bt_l30d_dep_bal_avg,bt_l90d_dep_bal_avg,ind_bt_l30d_l90d_dep_trans,ind_bt_chm_trx,bt_min_chm_trx_dt,bt_cls_chm_trx_amt,bt_opn_chm_trx_amt,bt_semi_cls_fnc_trx_amt,bt_semi_opn_fnc_trx_amt,bt_tl_fnc_trx_amt,bt_non_tl_fnc_trx_amt,bt_sum_chm_amt,bfr_l30d_chm_amt_avg,bt_aft_trx_chm_amt_avg,bt_chm_amt_avg,bt_rctly_30d_chm_amt_avg,ind_bt_chm_add_5000,ind_bt_lose_chm_trans,ind_bt_1w_chm_trans,ind_bt_5w_chm_trans,cls_chm_mid_amt,opn_chm_mid_amt,ind_lgn_mbl_bnk,ind_click_chm_ern,ind_click_chm_dtl,ind_cfm_buy_chm_prd,ind_buy_chm_prd,ind_cr_crd_rfer,cr_crd_aply_num,ind_cr_crd_aply,ind_cpl_cr_crd_aply,ind_cr_crd_isu,ind_cr_crd_actvt,ind_cr_crd_trx,ind_cr_crd_instm_trx,ind_cr_crd_instm_trx_amt,cr_crd_act_lmt,cr_crd_act_bal,age,age_bin,age_bin_2,gdr_cd,gdr_dscr,mrg_situ_cd,mrg_situ,hi_acdm_deg_cd,hi_acdm_deg,hi_acdm_deg_bin,idt_cd,idt_nm,ind_opn_indiv_nb,ind_opn_wechat_bnk,ind_opn_mbl_bnk,aum_last_mon_avg,l180d_avg_ftp_inc,ind_cr_crd_instm_new_cst,cr_crd_can_instm_amt,cr_crd_can_instm_amt_bin,cr_crd_lmt,ind_tel_call,tel_call_tms,ind_call_connect,call_connect_tms,ind_cr_crd_instm,cr_crd_instm_dt,cr_crd_instm_amt,ind_have_cr_crd_instm_prft,cr_crd_instm_tot_fee

,cr_crd_instm_wegt_perd_num,cr_crd_instm_wegt_sngl_fee_rat,cr_crd_can_instm_amt_pct,cr_crd_can_instm_amt_pct_bin,view_flag,is_follow_up,BANK_OPPT_BATCH_NAME



FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_AFF_ANLS_TODAY

WHERE     DT = '20230501' --历史结转 不可变更 铺底

;





----/* 八、产效大盘指标，立英使用。各用例负责人可忽略以下代码 */----

--所有客户贷款月日均 --9min

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.QUAN_YONGLI_BAL;



CREATE TABLE LAB_BIGDATA_DEV.QUAN_YONGLI_BAL AS

SELECT  T2.CST_ID

        ,T.DT

        ,ROUND(SUM(T.LAST_30_DAYS_PRCP_BAL_ACML) / 30, 2) 贷款月日均

        ,SUM(T.PRCP_BAL) 贷款余额

FROM    EDW.DWS_BUS_LOAN_DBIL_ACM_INF_DD T

LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_INF_DD T2 --合同表

ON      T.BUS_CTR_ID = T2.BUSI_CTR_ID

AND     T2.DT = '20230501'

WHERE   T.DT IN (

                    SELECT  DISTINCT EXEC_DATE

                    FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_REL

                    UNION

                    SELECT  DISTINCT ADJUST_DUE_DATE

                    FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_REL

                )

GROUP BY T.DT , T2.CST_ID;













--监测体系的终表

/*

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_AFF_ANLS_dapan;



CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_AFF_ANLS_dapan

(

    CASE_NO                         STRING  COMMENT '用例编号'

    ,CASE_NAME                      STRING  COMMENT '用例名称'

    ,CASE_PHASE                     STRING  COMMENT '用例批次'

    ,CST_ID                         STRING  COMMENT '客户号'

    ,EXEC_DATE                      STRING  COMMENT '用例执行日期'

    ,ADJUST_DUE_DATE                STRING  COMMENT '用例截止日期'

	,DUE_DATE        			  STRING  COMMENT '用例截止日期实际'

    ,INIT_DATE                      STRING  COMMENT '取数日期'

    ,REL_CST_ID                     STRING  COMMENT '关联人'

    ,IS_SLF                         STRING  COMMENT '是否本人'

    ,IS_SAM_RSK                     STRING  COMMENT '是否同一风险控制号'

    ,IS_REL_PTY                     STRING  COMMENT '是否关联人'

    ,SAMPLE_CLASS                   STRING  COMMENT '样本分类' --(对照组，实验组)

    ,CONNECT_CHNL                   STRING  COMMENT '触达渠道' --(外呼、app push、客户经理)

    ,SCENE_TYPE                     STRING  COMMENT '场景分类' --(促首次/促复用)

    ,SUM_SCORE                      DECIMAL COMMENT '模型分'

    ,CALL_EMP_ID                    STRING  COMMENT '外呼人员工号' --HAND_EMP_ID

    ,CALL_EMP_NM                    STRING  COMMENT '外呼人员姓名' --HAND_EMP_NM

    ,CALL_RSLT                      STRING  COMMENT '外呼小结' --FINISH_STATE

    ,CALL_STATUS                    STRING  COMMENT '外呼状态' --有效接通、未接通、未外呼

    ,COUPON_AMT                     DECIMAL COMMENT '券额'

    --贷记卡分期需要用到的字段

    ,CMPN_MODL_SCOR                 DECIMAL COMMENT '营销模型分'

    ,CMPN_MODL_SCOR_BIN             STRING  COMMENT '营销模型分区间'

    ,SLF_INSTM_SCOR                 DECIMAL COMMENT '自主分期评分'

    ,SLF_INSTM_SCOR_BIN             STRING  COMMENT '自主分期评分区间'

    ,CMPN_MODL_RSP_IND              STRING  COMMENT '营销模型响应标识'

    ,SLF_INSTM_RSP_IND              STRING  COMMENT '自主分期响应标识'

    --管户或产效归属相关字段

    ,PRM_FH_ORG_ID                  STRING  COMMENT '主管户分行机构号或产效归属分行机构号'

    ,PRM_FH_ORG_NM                  STRING  COMMENT '主管户分行名称或产效归属分行机构名称'

    ,PRM_ZH_ORG_ID                  STRING  COMMENT '主管户支行机构号或产效归属支行机构号'

    ,PRM_ZH_ORG_NM                  STRING  COMMENT '主管户支行名称或产效归属支行机构名称'

    ,PRM_TD_ORG_ID                  STRING  COMMENT '主管户团队机构号或产效归属团队机构号'

    ,PRM_TD_ORG_NM                  STRING  COMMENT '主管户团队名称或产效归属团队名称'

    ,PRM_MGR_ID                     STRING  COMMENT '主管户客户经理工号或指定接收客户经理工号'

    ,PRM_EMPE_NM                    STRING  COMMENT '主管户客户经理姓名或指定接收客户经理姓名'

    --贷款相关指标

    ,IND_BT_COM_APLY                BIGINT  COMMENT '是否发生申请'

    ,IND_BT_COM_CTR                 BIGINT  COMMENT '是否发生合同'

    ,IND_BT_COM_DBIL                BIGINT  COMMENT '是否发生借据'

    ,IND_BT_SDT_APLY                BIGINT  COMMENT '是否发生随贷通申请'

    ,IND_BT_SDT_CTR                 BIGINT  COMMENT '是否发生随贷通合同'

    ,IND_BT_SDT_DBIL                BIGINT  COMMENT '是否发生随贷通借据'

    ,IND_BT_TED_APLY                BIGINT  COMMENT '是否发生泰e贷申请'

    ,IND_BT_TED_CTR                 BIGINT  COMMENT '是否发生泰e贷合同'

    ,IND_BT_TED_DBIL                BIGINT  COMMENT '是否发生泰e贷借据'

    ,IND_BT_RED_APLY                BIGINT  COMMENT '是否发生融e贷申请'

    ,IND_BT_RED_CTR                 BIGINT  COMMENT '是否发生融e贷合同'

    ,IND_BT_RED_DBIL                BIGINT  COMMENT '是否发生融e贷借据'

    ,BT_COM_APLY_HPN_DT             STRING  COMMENT '申请发生日期'

    ,BT_COM_CTR_HPN_DT              STRING  COMMENT '合同发生日期'

    ,BT_COM_DBIL_DTRB_DT            STRING  COMMENT '借据发生日期'

    ,BT_SDT_APLY_HPN_DT             STRING  COMMENT '随贷通申请发生日期'

    ,BT_SDT_CTR_HPN_DT              STRING  COMMENT '随贷通合同发生日期'

    ,BT_SDT_DBIL_DTRB_DT            STRING  COMMENT '随贷通借据发生日期'

    ,BT_TED_APLY_HPN_DT             STRING  COMMENT '泰e贷申请发生日期'

    ,BT_TED_CTR_HPN_DT              STRING  COMMENT '泰e贷合同发生日期'

    ,BT_TED_DBIL_DTRB_DT            STRING  COMMENT '泰e贷借据发生日期'

    ,BT_RED_APLY_HPN_DT             STRING  COMMENT '融e贷申请发生日期'

    ,BT_RED_CTR_HPN_DT              STRING  COMMENT '融e贷合同发生日期'

    ,BT_RED_DBIL_DTRB_DT            STRING  COMMENT '融e贷借据发生日期'

    ,BT_COM_SUM_DBIL_AMT            DECIMAL COMMENT '借据发放金额'

    ,BT_COM_SUM_DBIL_BAL            DECIMAL COMMENT '借据本金余额'

    ,BT_SDT_SUM_DBIL_AMT            DECIMAL COMMENT '随贷通借据发放金额'

    ,BT_SDT_SUM_DBIL_BAL            DECIMAL COMMENT '随贷通借据本金余额'

    ,BT_TED_SUM_DBIL_AMT            DECIMAL COMMENT '泰e贷借据发放金额'

    ,BT_TED_SUM_DBIL_BAL            DECIMAL COMMENT '泰e贷借据本金余额'

    ,BT_RED_SUM_DBIL_AMT            DECIMAL COMMENT '融e贷借据发放金额'

    ,BT_RED_SUM_DBIL_BAL            DECIMAL COMMENT '融e贷借据本金余额'

    --小企业不限制贷款类型为一般贷款，所以单独

    ,IND_BT_CTR                     BIGINT  COMMENT '小企业_是否发生合同'

    ,BT_CTR_HPN_DT                  BIGINT  COMMENT '小企业_合同发生日期'

    ,BT_COM_SUM_CTR_AMT             DECIMAL COMMENT '授信额度'

    ,BT_COM_SUM_CTR_BAL             DECIMAL COMMENT '用信额度'

    ,BT_SDT_SUM_CTR_AMT             DECIMAL COMMENT '随贷通授信额度'

    ,BT_SDT_SUM_CTR_BAL             DECIMAL COMMENT '随贷通用信额度'

    ,BT_TED_SUM_CTR_AMT             DECIMAL COMMENT '泰e贷授信额度'

    ,BT_TED_SUM_CTR_BAL             DECIMAL COMMENT '泰e贷用信额度'

    ,BT_RED_SUM_CTR_AMT             DECIMAL COMMENT '融e贷授信额度'

    ,BT_RED_SUM_CTR_BAL             DECIMAL COMMENT '融e贷用信额度'

    ,BT_SUM_CTR_AMT                 DECIMAL COMMENT '小企业_授信额度'

    ,BT_SUM_CTR_BAL                 DECIMAL COMMENT '小企业_用信额度'

    --泰惠收配贷、信用卡配贷

    ,ONL_SRC_BT_BIND_AMT            DECIMAL COMMENT '线上来源实际启用额度'

    ,ONL_SRC_BT_CTR_BAL             DECIMAL COMMENT '线上来源合同余额'

    ,OTLN_SRC_BT_BIND_AMT           DECIMAL COMMENT '线下来源实际启用额度'

    ,OTLN_SRC_BT_CTR_BAL            DECIMAL COMMENT '线下来源合同余额'

    ,LOAN_SRC_BT_BIND_AMT           DECIMAL COMMENT '贷款来源实际启用额度'

    ,LOAN_SRC_BT_CTR_BAL            DECIMAL COMMENT '贷款来源合同余额'

    ,IND_DBIL                       BIGINT  COMMENT '是否发生借据'

    ,SUM_DBIL_CNT                   BIGINT  COMMENT '借据笔数'

    ,DBIL_DTRB_DT                   STRING  COMMENT '借据发放日期'

    ,SUM_DBIL_AMT                   DECIMAL COMMENT '借据发放金额'

    ,SUM_DBIL_BAL                   DECIMAL COMMENT '借据余额'

    ,SUM_DBIL_BAL_AVG               DECIMAL COMMENT '借据余额日均'

    ,IND_SDT_DBIL                   BIGINT  COMMENT '是否发生随贷通借据'

    ,SDT_SUM_DBIL_CNT               BIGINT  COMMENT '随贷通借据笔数'

    ,SDT_DBIL_DTRB_DT               STRING  COMMENT '随贷通借据发放日期'

    ,SDT_SUM_DBIL_AMT               DECIMAL COMMENT '随贷通借据发放金额'

    ,SDT_SUM_DBIL_BAL               DECIMAL COMMENT '随贷通借据余额'

    ,SDT_SUM_DBIL_BAL_AVG           DECIMAL COMMENT '随贷通借据余额日均'

    ,IND_TED_DBIL                   BIGINT  COMMENT '是否发生泰e贷借据'

    ,TED_SUM_DBIL_CNT               BIGINT  COMMENT '泰e贷借据笔数'

    ,TED_DBIL_DTRB_DT               STRING  COMMENT '泰e贷借据发放日期'

    ,TED_SUM_DBIL_AMT               DECIMAL COMMENT '泰e贷借据发放金额'

    ,TED_SUM_DBIL_BAL               DECIMAL COMMENT '泰e贷借据余额'

    ,TED_SUM_DBIL_BAL_AVG           DECIMAL COMMENT '泰e贷借据余额日均'

    ,IND_RED_DBIL                   BIGINT  COMMENT '是否发生融e贷借据'

    ,RED_SUM_DBIL_CNT               BIGINT  COMMENT '融e贷借据笔数'

    ,RED_DBIL_DTRB_DT               STRING  COMMENT '融e贷借据发放日期'

    ,RED_SUM_DBIL_AMT               DECIMAL COMMENT '融e贷借据发放金额'

    ,RED_SUM_DBIL_BAL               DECIMAL COMMENT '融e贷借据余额'

    ,RED_SUM_DBIL_BAL_AVG           DECIMAL COMMENT '融e贷借据余额日均'

    ,SUM_LOAN_FTP_INC               DECIMAL COMMENT '推广期间贷款FTP利润'

    ,SUM_PREDICT_LOAN_FTP_INC       DECIMAL COMMENT '预测贷款FTP年利润'

    ,IND_PYF                        BIGINT  COMMENT '是否结清'

    ,PYF_DT                         STRING  COMMENT '结清日期'

    ,PYF_CTR_AMT                    DECIMAL COMMENT '结清金额'

    ,IND_RELOAN                     BIGINT  COMMENT '是否发生续贷'

    ,RELOAN_DT                      STRING  COMMENT '续贷日期'

    ,RELOAN_CTR_AMT                 DECIMAL COMMENT '续贷金额'

    ,IND_ICR_AMT_RELOAN             BIGINT  COMMENT '是否增额续贷'

    ,IND_ORI_AMT_RELOAN             BIGINT  COMMENT '是否原额续贷'

    ,IND_DEC_AMT_RELOAN             BIGINT  COMMENT '是否减额续贷'

    ,DIFF_RELOAN_PYF_AMT            DECIMAL COMMENT '续贷金额与结清金额之差'

    ,BFR_L90D_MAX_AMT               DECIMAL COMMENT '提额前90天最高额度'

    ,SDT_BFR_L90D_MAX_AMT           DECIMAL COMMENT '随贷通提额前90天最高额度'

    ,TED_BFR_L90D_MAX_AMT           DECIMAL COMMENT '泰e贷提额前90天最高额度'

    ,RED_BFR_L90D_MAX_AMT           DECIMAL COMMENT '融e贷提额前90天最高额度'

    ,OTH_BFR_L90D_MAX_AMT           DECIMAL COMMENT '其他贷款提额前90天最高额度'

    ,AFT_MAX_AMT                    DECIMAL COMMENT '提额后最高额度'

    ,SDT_AFT_MAX_AMT                DECIMAL COMMENT '随贷通提额后最高额度'

    ,TED_AFT_MAX_AMT                DECIMAL COMMENT '泰e贷提额后最高额度'

    ,RED_AFT_MAX_AMT                DECIMAL COMMENT '融e贷提额后最高额度'

    ,OTH_AFT_MAX_AMT                DECIMAL COMMENT '其他贷款提额后最高额度'

    ,IND_ICR_AMT                    BIGINT  COMMENT '是否提额'

    ,IND_SDT_ICR_AMT                BIGINT  COMMENT '随贷通是否提额'

    ,IND_TED_ICR_AMT                BIGINT  COMMENT '泰e贷是否提额'

    ,IND_RED_ICR_AMT                BIGINT  COMMENT '融e贷是否提额'

    ,IND_OTH_ICR_AMT                BIGINT  COMMENT '其他贷款是否提额'

    ,TOT_ICR_AMT                    DECIMAL COMMENT '提额总金额'

    ,SDT_ICR_AMT                    DECIMAL COMMENT '随贷通提额金额'

    ,TED_ICR_AMT                    DECIMAL COMMENT '泰e贷提额金额'

    ,RED_ICR_AMT                    DECIMAL COMMENT '融e贷提额金额'

    ,OTH_ICR_AMT                    DECIMAL COMMENT '其他贷款提额金额'

    ,BEFORE_LOAN_30D_AVG            DECIMAL COMMENT '执行日期前近30天贷款日均' --立英增

    ,AFTER_LOAN_30D_AVG             DECIMAL COMMENT '调整结束日期前近30天贷款日均' --立英增

    ,DIFF_LOAN_30D_AVG              DECIMAL COMMENT '执行前后贷款日均增加' --立英增

    --存款相关指标

    ,IND_BT_DEP_ACT                 BIGINT  COMMENT '是否新开立存款账户'

	,BT_DEP_SUM                     BIGINT  COMMENT '新开立存款账户数'

    ,BT_DEP_OPN_DT                  STRING  COMMENT '新开存款账户开户日期'

    ,BT_SUM_DEP_BAL                 DECIMAL COMMENT '当前存款余额'

    ,BFR_L30D_DEP_BAL_AVG           DECIMAL COMMENT '执行日期前30天存款余额日均'

    ,BT_DEP_BAL_AVG                 DECIMAL COMMENT '用例执行期间存款余额日均'

    ,DIFF_DEP_BAL_AVG               DECIMAL COMMENT '存款日均增加值'

    ,IND_BT_DEP_ADD_5000            DECIMAL COMMENT '用例执行期间存款日均增加5000及以上'

    ,BT_RCTLY_30D_DEP_BAL_AVG       DECIMAL COMMENT '用例执行后当前日期往前推30天存款余额日均'

    ,BT_L30D_DEP_BAL_AVG            DECIMAL COMMENT '用例执行后30天内存款余额日均'

    ,BT_L90D_DEP_BAL_AVG            DECIMAL COMMENT '用例执行后90天内存款余额日均'

    ,IND_BT_L30D_L90D_DEP_TRANS     BIGINT  COMMENT '用例执行期间近30天_近90天存款是否转化'

    --理财相关指标

    ,IND_BT_CHM_TRX                 BIGINT  COMMENT '用例执行期间是否发生理财交易'

    ,BT_MIN_CHM_TRX_DT              STRING  COMMENT '用例执行期间最早交易日期'

    ,BT_CLS_CHM_TRX_AMT             DECIMAL COMMENT '用例执行期间封闭式产品认购金额'

    ,BT_OPN_CHM_TRX_AMT             DECIMAL COMMENT '用例执行期间开放式产品认购金额'

    ,BT_SEMI_CLS_FNC_TRX_AMT        DECIMAL COMMENT '用例执行期间半封闭式理财产品认购金额'

    ,BT_SEMI_OPN_FNC_TRX_AMT        DECIMAL COMMENT '用例执行期间半开放式理财产品认购金额'

    ,BT_TL_FNC_TRX_AMT              DECIMAL COMMENT '用例执行期间自营理财产品交易金额'

    ,BT_NON_TL_FNC_TRX_AMT          DECIMAL COMMENT '用例执行期间代销理财产品交易金额'

    ,BT_SUM_CHM_AMT                 DECIMAL COMMENT '当前理财余额'

    ,BFR_L30D_CHM_AMT_AVG           DECIMAL COMMENT '执行日期前30天理财日均'

    ,BT_AFT_TRX_CHM_AMT_AVG         DECIMAL COMMENT '发生首次交易后理财日均'

    ,BT_CHM_AMT_AVG                 DECIMAL COMMENT '用例执行期间理财日均'

    ,BT_RCTLY_30D_CHM_AMT_AVG       DECIMAL COMMENT '用例执行后当前日期往前推30天理财日均'

    ,IND_BT_CHM_ADD_5000            BIGINT  COMMENT '用例执行期间理财日均增加5000及以上'

    ,IND_BT_LOSE_CHM_TRANS          BIGINT  COMMENT '财富流失挽回是否转化'

    ,IND_BT_1W_CHM_TRANS            BIGINT  COMMENT '是否日均提升至1万以上客户'

    ,IND_BT_5W_CHM_TRANS            BIGINT  COMMENT '是否日均提升至5万以上客户'

    ,CLS_CHM_MID_AMT                DECIMAL COMMENT '封闭式理财中收'

    ,OPN_CHM_MID_AMT                DECIMAL COMMENT '开放式理财中收'

    ,IND_LGN_MBL_BNK                BIGINT  COMMENT '是否登录手机银行'

    ,IND_CLICK_CHM_ERN              BIGINT  COMMENT '是否点击理财入口'

    ,IND_CLICK_CHM_DTL              BIGINT  COMMENT '是否点击理财产品详情'

    ,IND_CFM_BUY_CHM_PRD            BIGINT  COMMENT '是否点击理财产品确认购买'

    ,IND_BUY_CHM_PRD                BIGINT  COMMENT '理财产品是否购买成功'

    --信用卡相关指标

    ,IND_CR_CRD_RFER                BIGINT  COMMENT '是否有推荐用户值'

    ,CR_CRD_APLY_NUM                BIGINT  COMMENT '信用卡申请流水号数' --申请流水号数>1时为异常申请

    ,IND_CR_CRD_APLY                BIGINT  COMMENT '是否有信用卡申请流水号'

    ,IND_CPL_CR_CRD_APLY            BIGINT  COMMENT '是否走完信用卡申请'

    ,IND_CR_CRD_ISU                 BIGINT  COMMENT '是否信用卡发卡成功'

    ,IND_CR_CRD_ACTVT               BIGINT  COMMENT '是否信用卡激活客户'

    ,IND_CR_CRD_TRX                 BIGINT  COMMENT '是否发生信用卡交易'

    ,IND_CR_CRD_INSTM_TRX           BIGINT  COMMENT '是否发生信用卡分期交易'

    ,IND_CR_CRD_INSTM_TRX_AMT       DECIMAL COMMENT '信用卡分期交易金额'

    ,CR_CRD_ACT_LMT                 DECIMAL COMMENT '信用卡账户额度'

    ,CR_CRD_ACT_BAL                 DECIMAL COMMENT '信用卡账户余额'

    ,AGE                            BIGINT  COMMENT '年龄'

    ,AGE_BIN                        STRING  COMMENT '年龄分段'

    ,AGE_BIN_2                      STRING  COMMENT '年龄区间2'

    ,GDR_CD                         STRING  COMMENT '性别代码'

    ,GDR_DSCR                       STRING  COMMENT '性别'

    ,MRG_SITU_CD                    STRING  COMMENT '婚姻状况代码'

    ,MRG_SITU                       STRING  COMMENT '婚姻状况'

    ,HI_ACDM_DEG_CD                 STRING  COMMENT '最高学历代码'

    ,HI_ACDM_DEG                    STRING  COMMENT '最高学历'

    ,HI_ACDM_DEG_BIN                STRING  COMMENT '最高学历分段'

    ,IDT_CD                         STRING  COMMENT '行业代码'

    ,IDT_NM                         STRING  COMMENT '行业名称'

    ,IND_OPN_INDIV_NB               BIGINT  COMMENT '是否开通个人网银'

    ,IND_OPN_WECHAT_BNK             BIGINT  COMMENT '是否开通微信银行'

    ,IND_OPN_MBL_BNK                BIGINT  COMMENT '是否开通手机银行'

    ,AUM_LAST_MON_AVG               DECIMAL COMMENT '客户上月综合金融资产(aum)月日均'

    ,L180D_AVG_FTP_INC              DECIMAL COMMENT '近180天FTP均值'

    ,IND_CR_CRD_INSTM_NEW_CST       BIGINT  COMMENT '是否信用卡分期新客'

    ,CR_CRD_CAN_INSTM_AMT           DECIMAL COMMENT '测算账户可分期金额'

    ,CR_CRD_CAN_INSTM_AMT_BIN       STRING  COMMENT '测算账户可分期金额区间'

    ,CR_CRD_LMT                     DECIMAL COMMENT '信用额度'

    ,IND_TEL_CALL                   BIGINT  COMMENT '是否被呼叫'

    ,TEL_CALL_TMS                   BIGINT  COMMENT '被呼叫次数'

    ,IND_CALL_CONNECT               BIGINT  COMMENT '是否接通'

    ,CALL_CONNECT_TMS               BIGINT  COMMENT '接通次数'

    ,IND_CR_CRD_INSTM               BIGINT  COMMENT '是否分期'

    ,CR_CRD_INSTM_DT                STRING  COMMENT '信用卡分期日期'

    ,CR_CRD_INSTM_AMT               DECIMAL COMMENT '分期本金'

    ,IND_HAVE_CR_CRD_INSTM_PRFT     BIGINT  COMMENT '是否有信用卡分期优惠'

    ,CR_CRD_INSTM_TOT_FEE           DECIMAL COMMENT '信用卡分期总费用_含商户回佣'

    ,CR_CRD_INSTM_WEGT_PERD_NUM     DECIMAL COMMENT '加权分期期数'

    ,CR_CRD_INSTM_WEGT_SNGL_FEE_RAT DECIMAL COMMENT '加权单期费率'

    ,CR_CRD_CAN_INSTM_AMT_PCT       DECIMAL COMMENT '可分期金额占授信比' --测算账户可分期金额/信用额度

    ,CR_CRD_CAN_INSTM_AMT_PCT_BIN   STRING  COMMENT '测算可分期金额占授信比区间'

    ,before_CST_CC_CSM_AMT          DECIMAL COMMENT '执行日期前30天日均消费金额' --立英增

    ,before_ovdr_bal                DECIMAL COMMENT '执行日期前30天日均垫款' --立英增

    ,now_CST_CC_CSM_AMT             DECIMAL COMMENT '用例执行后当前日期往前推30天日均消费金额' --立英增

    ,now_ovdr_bal                   DECIMAL COMMENT '用例执行后当前日期往前推30天日均垫款' --立英增

    ,DIFF_CC_CSM_AMT                DECIMAL COMMENT '用例执行前后日均消费金额增加' --立英增

    ,DIFF_ovdr_bal                  DECIMAL COMMENT '用例执行前后日均垫款增加' --立英增

    ,IS_CONVERT                     BIGINT  COMMENT '用例是否转化' --立英增

    ,RSK_LOAN_AMT                   DECIMAL COMMENT '本年新发生风险贷款' --立英增

    ,REGION                         STRING  COMMENT '大区域' --立英增

    ,PROVINCE                       STRING  COMMENT '省' --立英增

    ,CITY                           STRING  COMMENT '城市' --立英增

		--商机

	,VIEW_FLAG       BIGINT  COMMENT '是否查看'

	,IS_FOLLOW_UP      BIGINT  COMMENT '是否跟进'

	,BANK_OPPT_BATCH_NAME STRING  COMMENT '商机行方批次名称'

)

COMMENT

'用例产效分析统计表_大盘'

PARTITIONED BY

(

    DT STRING COMMENT '日期分区'

);

*/



INSERT OVERWRITE TABLE LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_AFF_ANLS_DAPAN PARTITION (DT = '20230501')

SELECT  T.CASE_NO

        ,T.CASE_NAME

        ,T.CASE_PHASE

        ,T.CST_ID

        ,T.EXEC_DATE

        ,T.ADJUST_DUE_DATE

		,T.DUE_DATE

        ,T.INIT_DATE --取数日期

        ,T.REL_CST_ID --关联人

        ,T.IS_SLF --是否本人

        ,T.IS_SAM_RSK --是否同一风险控制号

        ,T.IS_REL_PTY --是否关联人

        ,T1.SAMPLE_CLASS --样本分类 --(对照组，实验组)

        ,T1.CONNECT_CHNL --触达渠道 --(外呼、APP PUSH、客户经理)

        ,T1.SCENE_TYPE --场景分类 --(促首次/促复用)

        ,T1.SUM_SCORE --模型分

        ,T1.CALL_EMP_ID --外呼人员工号 --HAND_EMP_ID

        ,T1.CALL_EMP_NM --外呼人员姓名 --HAND_EMP_NM

        ,T1.CALL_RSLT --外呼小结 --FINISH_STATE

        ,T1.CALL_STATUS --外呼状态 --有效接通、未接通、未外呼

        ,T1.COUPON_AMT  --券额

        --贷记卡分期需要用到的字段

        ,T1.CMPN_MODL_SCOR --营销模型分

        ,T1.CMPN_MODL_SCOR_BIN --营销模型分区间

        ,T1.SLF_INSTM_SCOR --自主分期评分

        ,T1.SLF_INSTM_SCOR_BIN --自主分期评分区间

        ,T1.CMPN_MODL_RSP_IND --营销模型响应标识

        ,T1.SLF_INSTM_RSP_IND  --自主分期响应标识

        --管户或产效归属相关字段

        ,T1.PRM_FH_ORG_ID --主管户分行机构号或产效归属分行机构号

        ,T1.PRM_FH_ORG_NM --主管户分行名称或产效归属分行机构名称

        ,T1.PRM_ZH_ORG_ID --主管户支行机构号或产效归属支行机构号

        ,T1.PRM_ZH_ORG_NM --主管户支行名称或产效归属支行机构名称

        ,T1.PRM_TD_ORG_ID --主管户团队机构号或产效归属团队机构号

        ,T1.PRM_TD_ORG_NM --主管户团队名称或产效归属团队名称

        ,T1.PRM_MGR_ID --主管户客户经理工号或指定接收客户经理工号

        ,T1.PRM_EMPE_NM  --主管户客户经理姓名或指定接收客户经理姓名

        --贷款相关指标

        ,T1.IND_BT_COM_APLY --是否发生申请

        ,T1.IND_BT_COM_CTR --是否发生合同

        ,T1.IND_BT_COM_DBIL --是否发生借据

        ,T1.IND_BT_SDT_APLY --是否发生随贷通申请

        ,T1.IND_BT_SDT_CTR --是否发生随贷通合同

        ,T1.IND_BT_SDT_DBIL --是否发生随贷通借据

        ,T1.IND_BT_TED_APLY --是否发生泰e贷申请

        ,T1.IND_BT_TED_CTR --是否发生泰e贷合同

        ,T1.IND_BT_TED_DBIL --是否发生泰e贷借据

        ,T1.IND_BT_RED_APLY --是否发生融e贷申请

        ,T1.IND_BT_RED_CTR --是否发生融e贷合同

        ,T1.IND_BT_RED_DBIL --是否发生融e贷借据

        ,T1.BT_COM_APLY_HPN_DT --申请发生日期

        ,T1.BT_COM_CTR_HPN_DT --合同发生日期

        ,T1.BT_COM_DBIL_DTRB_DT --借据发生日期

        ,T1.BT_SDT_APLY_HPN_DT --随贷通申请发生日期

        ,T1.BT_SDT_CTR_HPN_DT --随贷通合同发生日期

        ,T1.BT_SDT_DBIL_DTRB_DT --随贷通借据发生日期

        ,T1.BT_TED_APLY_HPN_DT --泰e贷申请发生日期

        ,T1.BT_TED_CTR_HPN_DT --泰e贷合同发生日期

        ,T1.BT_TED_DBIL_DTRB_DT --泰e贷借据发生日期

        ,T1.BT_RED_APLY_HPN_DT --融e贷申请发生日期

        ,T1.BT_RED_CTR_HPN_DT --融e贷合同发生日期

        ,T1.BT_RED_DBIL_DTRB_DT --融e贷借据发生日期

        ,T1.BT_COM_SUM_DBIL_AMT --借据发放金额

        ,T1.BT_COM_SUM_DBIL_BAL --借据本金余额

        ,T1.BT_SDT_SUM_DBIL_AMT --随贷通借据发放金额

        ,T1.BT_SDT_SUM_DBIL_BAL --随贷通借据本金余额

        ,T1.BT_TED_SUM_DBIL_AMT --泰e贷借据发放金额

        ,T1.BT_TED_SUM_DBIL_BAL --泰e贷借据本金余额

        ,T1.BT_RED_SUM_DBIL_AMT --融e贷借据发放金额

        ,T1.BT_RED_SUM_DBIL_BAL  --融e贷借据本金余额

        --小企业不限制贷款类型为一般贷款，所以单独一套逻

        ,T1.IND_BT_CTR --小企业_是否发生合同

        ,T1.BT_CTR_HPN_DT --小企业_合同发生日期

        ,T1.BT_COM_SUM_CTR_AMT --授信额度

        ,T1.BT_COM_SUM_CTR_BAL --用信额度

        ,T1.BT_SDT_SUM_CTR_AMT --随贷通授信额度

        ,T1.BT_SDT_SUM_CTR_BAL --随贷通用信额度

        ,T1.BT_TED_SUM_CTR_AMT --泰e贷授信额度

        ,T1.BT_TED_SUM_CTR_BAL --泰e贷用信额度

        ,T1.BT_RED_SUM_CTR_AMT --融e贷授信额度

        ,T1.BT_RED_SUM_CTR_BAL --融e贷用信额度

        ,T1.BT_SUM_CTR_AMT --小企业_授信额度

        ,T1.BT_SUM_CTR_BAL  --小企业_用信额度

        --泰惠收配贷、信用卡配贷

        ,T1.ONL_SRC_BT_BIND_AMT --线上来源实际启用额度

        ,T1.ONL_SRC_BT_CTR_BAL --线上来源合同余额

        ,T1.OTLN_SRC_BT_BIND_AMT --线下来源实际启用额度

        ,T1.OTLN_SRC_BT_CTR_BAL --线下来源合同余额

        ,T1.LOAN_SRC_BT_BIND_AMT --贷款来源实际启用额度

        ,T1.LOAN_SRC_BT_CTR_BAL --贷款来源合同余额

        ,T1.IND_DBIL --是否发生借据

        ,T1.SUM_DBIL_CNT --借据笔数

        ,T1.DBIL_DTRB_DT --借据发放日期

        ,T1.SUM_DBIL_AMT --借据发放金额

        ,T1.SUM_DBIL_BAL --借据余额

        ,T1.SUM_DBIL_BAL_AVG --借据余额日均

        ,T1.IND_SDT_DBIL --是否发生随贷通借据

        ,T1.SDT_SUM_DBIL_CNT --随贷通借据笔数

        ,T1.SDT_DBIL_DTRB_DT --随贷通借据发放日期

        ,T1.SDT_SUM_DBIL_AMT --随贷通借据发放金额

        ,T1.SDT_SUM_DBIL_BAL --随贷通借据余额

        ,T1.SDT_SUM_DBIL_BAL_AVG --随贷通借据余额日均

        ,T1.IND_TED_DBIL --是否发生泰e贷借据

        ,T1.TED_SUM_DBIL_CNT --泰e贷借据笔数

        ,T1.TED_DBIL_DTRB_DT --泰e贷借据发放日期

        ,T1.TED_SUM_DBIL_AMT --泰e贷借据发放金额

        ,T1.TED_SUM_DBIL_BAL --泰e贷借据余额

        ,T1.TED_SUM_DBIL_BAL_AVG --泰e贷借据余额日均

        ,T1.IND_RED_DBIL --是否发生融e贷借据

        ,T1.RED_SUM_DBIL_CNT --融e贷借据笔数

        ,T1.RED_DBIL_DTRB_DT --融e贷借据发放日期

        ,T1.RED_SUM_DBIL_AMT --融e贷借据发放金额

        ,T1.RED_SUM_DBIL_BAL --融e贷借据余额

        ,T1.RED_SUM_DBIL_BAL_AVG --融e贷借据余额日均

        ,T1.SUM_LOAN_FTP_INC --推广期间贷款FTP利润

        ,T1.SUM_PREDICT_LOAN_FTP_INC --预测贷款FTP年利润

        ,T1.IND_PYF --是否结清 payoff

        ,T1.PYF_DT --结清日期

        ,T1.PYF_CTR_AMT --结清金额

        ,T1.IND_RELOAN --是否发生续贷

        ,T1.RELOAN_DT --续贷日期

        ,T1.RELOAN_CTR_AMT --续贷金额

        ,T1.IND_ICR_AMT_RELOAN --是否增额续贷

        ,T1.IND_ORI_AMT_RELOAN --是否原额续贷

        ,T1.IND_DEC_AMT_RELOAN --是否减额续贷

        ,T1.DIFF_RELOAN_PYF_AMT --续贷金额与结清金额之差

        ,T1.BFR_L90D_MAX_AMT --提额前90天最高额度

        ,T1.SDT_BFR_L90D_MAX_AMT --随贷通提额前90天最高额度

        ,T1.TED_BFR_L90D_MAX_AMT --泰e贷提额前90天最高额度

        ,T1.RED_BFR_L90D_MAX_AMT --融e贷提额前90天最高额度

        ,T1.OTH_BFR_L90D_MAX_AMT --其他贷款提额前90天最高额度

        ,T1.AFT_MAX_AMT --提额后最高额度

        ,T1.SDT_AFT_MAX_AMT --随贷通提额后最高额度

        ,T1.TED_AFT_MAX_AMT --泰e贷提额后最高额度

        ,T1.RED_AFT_MAX_AMT --融e贷提额后最高额度

        ,T1.OTH_AFT_MAX_AMT --其他贷款提额后最高额度

        ,T1.IND_ICR_AMT --是否提额

        ,T1.IND_SDT_ICR_AMT --随贷通是否提额

        ,T1.IND_TED_ICR_AMT --泰e贷是否提额

        ,T1.IND_RED_ICR_AMT --融e贷是否提额

        ,T1.IND_OTH_ICR_AMT --其他贷款是否提额

        ,T1.TOT_ICR_AMT --提额总金额

        ,T1.SDT_ICR_AMT --随贷通提额金额

        ,T1.TED_ICR_AMT --泰e贷提额金额

        ,T1.RED_ICR_AMT --融e贷提额金额

        ,T1.OTH_ICR_AMT --其他贷款提额金额

        ,COALESCE(T5.贷款月日均, 0)                                                      AS BEFORE_LOAN_30D_AVG --执行日期前近30天贷款日均 立英增

        ,COALESCE(T15.贷款月日均, 0)                                                     AS AFTER_LOAN_30D_AVG --调整结束日期前近30天贷款日均 立英增

        ,COALESCE(T15.贷款月日均, 0) - COALESCE(T5.贷款月日均, 0)                             AS DIFF_LOAN_30D_AVG --执行前后贷款日均增加 立英增

        --存款相关指标

        ,T1.IND_BT_DEP_ACT --是否新开立存款账户

		,t1.BT_DEP_SUM --新开立存款账户数

        ,T1.BT_DEP_OPN_DT --新开存款账户开户日期

        ,T1.BT_SUM_DEP_BAL --当前存款余额

        ,T1.BFR_L30D_DEP_BAL_AVG --执行日期前30天存款余额日均

        ,T1.BT_DEP_BAL_AVG --用例执行期间存款余额日均

        ,T1.DIFF_DEP_BAL_AVG --存款日均增加值

        ,T1.IND_BT_DEP_ADD_5000 --用例执行期间存款日均增加5000及以上

        ,T1.BT_RCTLY_30D_DEP_BAL_AVG --用例执行后当前日期往前推30天存款余额日均

        ,T1.BT_L30D_DEP_BAL_AVG --用例执行后30天内存款余额日均

        ,T1.BT_L90D_DEP_BAL_AVG --用例执行后90天内存款余额日均

        ,T1.IND_BT_L30D_L90D_DEP_TRANS  --用例执行期间近30天_近90天存款是否转化

        --理财相关指标

        ,T1.IND_BT_CHM_TRX --用例执行期间是否发生理财交易

        ,T1.BT_MIN_CHM_TRX_DT --用例执行期间最早交易日期

        ,T1.BT_CLS_CHM_TRX_AMT --用例执行期间封闭式产品认购金额

        ,T1.BT_OPN_CHM_TRX_AMT --用例执行期间开放式产品认购金额

        ,T1.BT_SEMI_CLS_FNC_TRX_AMT --用例执行期间半封闭式理财产品认购金额

        ,T1.BT_SEMI_OPN_FNC_TRX_AMT --用例执行期间半开放式理财产品认购金额

        ,T1.BT_TL_FNC_TRX_AMT --用例执行期间自营理财产品交易金额

        ,T1.BT_NON_TL_FNC_TRX_AMT --用例执行期间代销理财产品交易金额

        ,T1.BT_SUM_CHM_AMT --当前理财余额

        ,T1.BFR_L30D_CHM_AMT_AVG --执行日期前30天理财日均

        ,T1.BT_AFT_TRX_CHM_AMT_AVG --发生首次交易后理财日均

        ,T1.BT_CHM_AMT_AVG --用例执行期间理财日均

        ,T1.BT_RCTLY_30D_CHM_AMT_AVG --用例执行后当前日期往前推30天理财日均

        ,T1.IND_BT_CHM_ADD_5000 --用例执行期间理财日均增加5000及以上

        ,T1.IND_BT_LOSE_CHM_TRANS --财富流失挽回是否转化

        ,T1.IND_BT_1W_CHM_TRANS --是否日均提升至1万以上客户

        ,T1.IND_BT_5W_CHM_TRANS --是否日均提升至5万以上客户

        ,T1.CLS_CHM_MID_AMT --封闭式理财中收

        ,T1.OPN_CHM_MID_AMT --开放式理财中收

        ,T1.IND_LGN_MBL_BNK --是否登录手机银行

        ,T1.IND_CLICK_CHM_ERN --是否点击理财入口

        ,T1.IND_CLICK_CHM_DTL --是否点击理财产品详情

        ,T1.IND_CFM_BUY_CHM_PRD --是否点击理财产品确认购买

        ,T1.IND_BUY_CHM_PRD  --理财产品是否购买成功

        --信用卡相关指标

        ,T1.IND_CR_CRD_RFER --是否有推荐用户值

        ,T1.CR_CRD_APLY_NUM --信用卡申请流水号数,申请流水号数>1时为异常申请

        ,T1.IND_CR_CRD_APLY --是否有信用卡申请流水号

        ,T1.IND_CPL_CR_CRD_APLY ---是否走完信用卡申请

        ,T1.IND_CR_CRD_ISU --是否信用卡发卡成功

        ,T1.IND_CR_CRD_ACTVT ---是否信用卡激活客户

        ,T1.IND_CR_CRD_TRX --是否发生信用卡交易

        ,T1.IND_CR_CRD_INSTM_TRX --是否发生信用卡分期交易

        ,T1.IND_CR_CRD_INSTM_TRX_AMT --信用卡分期交易金额

        ,T1.CR_CRD_ACT_LMT --信用卡账户额度

        ,T1.CR_CRD_ACT_BAL --信用卡账户余额

        ,T1.AGE --年龄

        ,T1.AGE_BIN --年龄分段

        ,T1.AGE_BIN_2 --年龄区间2

        ,T1.GDR_CD --性别代码

        ,T1.GDR_DSCR --性别

        ,T1.MRG_SITU_CD --婚姻状况代码

        ,T1.MRG_SITU --婚姻状况

        ,T1.HI_ACDM_DEG_CD --最高学历代码

        ,T1.HI_ACDM_DEG --最高学历

        ,T1.HI_ACDM_DEG_BIN --最高学历分段

        ,T1.IDT_CD --行业代码

        ,T1.IDT_NM --行业名称

        ,T1.IND_OPN_INDIV_NB --是否开通个人网银

        ,T1.IND_OPN_WECHAT_BNK --是否开通微信银行

        ,T1.IND_OPN_MBL_BNK --是否开通手机银行

        ,T1.AUM_LAST_MON_AVG --客户上月综合金融资产(aum)月日均

        ,T1.L180D_AVG_FTP_INC --近180天FTP均值

        ,T1.IND_CR_CRD_INSTM_NEW_CST --是否信用卡分期新客

        ,T1.CR_CRD_CAN_INSTM_AMT --测算账户可分期金额

        ,T1.CR_CRD_CAN_INSTM_AMT_BIN --测算账户可分期金额区间

        ,T1.CR_CRD_LMT --信用额度

        ,T1.IND_TEL_CALL --是否被呼叫

        ,T1.TEL_CALL_TMS --被呼叫次数

        ,T1.IND_CALL_CONNECT --是否接通

        ,T1.CALL_CONNECT_TMS --接通次数

        ,T1.IND_CR_CRD_INSTM --是否分期

        ,T1.CR_CRD_INSTM_DT --信用卡分期日期

        ,T1.CR_CRD_INSTM_AMT --分期本金

        ,T1.IND_HAVE_CR_CRD_INSTM_PRFT --是否有信用卡分期优惠

        ,T1.CR_CRD_INSTM_TOT_FEE --信用卡分期总费用_含商户回佣

        ,T1.CR_CRD_INSTM_WEGT_PERD_NUM --加权分期期数

        ,T1.CR_CRD_INSTM_WEGT_SNGL_FEE_RAT --加权单期费率

        ,T1.CR_CRD_CAN_INSTM_AMT_PCT --可分期金额占授信比=测算账户可分期金额/信用额度

        ,T1.CR_CRD_CAN_INSTM_AMT_PCT_BIN  --测算可分期金额占授信比区间

        --以下立英增加

        ,COALESCE(T7.BEFORE_CST_CC_CSM_AMT, 0)                                      AS BEFORE_CST_CC_CSM_AMT --执行日期前30天日均消费金额 立英增

        ,COALESCE(T7.BEFORE_OVDR_BAL, 0)                                            AS BEFORE_OVDR_BAL --执行日期前30天日均垫款 立英增

        ,COALESCE(T7.NOW_CST_CC_CSM_AMT, 0)                                         AS NOW_CST_CC_CSM_AMT --例执行后当前日期往前推30天日均消费金额 立英增

        ,COALESCE(T7.NOW_OVDR_BAL, 0)                                               AS NOW_OVDR_BAL --例执行后当前日期往前推30天日均垫款 立英增

        ,COALESCE(T7.NOW_CST_CC_CSM_AMT, 0) - COALESCE(T7.BEFORE_CST_CC_CSM_AMT, 0) AS DIFF_CC_CSM_AMT --用例执行前后日均消费金额增加 立英增

        ,COALESCE(T7.NOW_OVDR_BAL, 0) - COALESCE(T7.BEFORE_OVDR_BAL, 0)             AS DIFF_OVDR_BAL --用例执行前后日均垫款增加 立英增

        ,CASE

           WHEN ( T.CASE_NAME LIKE '%关系树%' OR T.CASE_NAME LIKE '%对公拓面%' ) AND ( IND_BT_CTR > 0 OR IND_BT_DEP_ACT > 0 )                                                                                                        THEN 1 --IND_BT_CTR  '小企业_是否发生合同' ,IND_BT_DEP_ACT '是否新开立存款账户'

           WHEN ( T.CASE_NAME LIKE '%经营性贷款提额%' OR T.CASE_NAME LIKE '%同业置换%' )                                                                                                                                                 THEN IND_ICR_AMT --是否提额

           WHEN ( T.CASE_NAME LIKE '%配贷%' OR T.CASE_NAME LIKE '%贷款流失挽回%' OR T.CASE_NAME LIKE '%社保贷%' )                                                                                                                        THEN IND_BT_COM_CTR --IND_BT_COM_CTR   '是否发生合同'

           WHEN ( T.CASE_NAME LIKE '%循环贷款促用信%' )                                                                                                                                                                              THEN IND_DBIL --IND_DBIL   '是否发生借据'

           WHEN T.CASE_NAME IN ( '贷款配卡交叉销售' , '存款配卡交叉销售' , '高净值户配卡' , '信用卡申请中断挽回' , '借记卡交易流水挖潜' )                                                         THEN IND_CR_CRD_ISU --IND_CR_CRD_ISU    '是否信用卡发卡成功'

           WHEN ( T.CASE_NAME LIKE '%信用卡促激活%' )                                                                                                                                                                               THEN IND_CR_CRD_ACTVT --IND_CR_CRD_ACTVT    '是否信用卡激活客户'

           WHEN ( T.CASE_NAME LIKE '%不动睡眠户促活%' )                                                                                                                                                                              THEN IND_CR_CRD_TRX --IND_CR_CRD_TRX     '是否发生信用卡交易'

           WHEN ( T.CASE_NAME LIKE '%贷记卡分期%' )                                                                                                                                                                                THEN IND_CR_CRD_INSTM_TRX --IND_CR_CRD_INSTM_TRX      '是否发生信用卡分期交易'

           WHEN ( T.CASE_NAME LIKE '%财富流失挽回%' )                                                                                                                                                                               THEN IND_BT_LOSE_CHM_TRANS --IND_BT_LOSE_CHM_TRANS '财富流失挽回是否转化'

           WHEN ( T.CASE_NAME LIKE '%财富客户拉新%' )                                                                                                                                                                               THEN IND_BT_CHM_TRX --IND_BT_CHM_TRX     '用例执行期间是否发生理财交易'

           WHEN T.CASE_NAME LIKE '%存款提升%'                                                                                                                                                                                     THEN IND_BT_L30D_L90D_DEP_TRANS --IND_BT_L30D_L90D_DEP_TRANS  '用例执行期间近30天_近90天存款是否转化'

           WHEN T.CASE_NAME IN ( '代发工资户综合经营' ) AND ( IND_BT_COM_CTR > 0 OR IND_CR_CRD_ISU > 0 OR ( T1.BT_RCTLY_30D_CHM_AMT_AVG - T1.BFR_L30D_CHM_AMT_AVG + T1.BT_RCTLY_30D_DEP_BAL_AVG - T1.BFR_L30D_DEP_BAL_AVG ) >= 10000 ) THEN 1 --IND_BT_COM_CTR   '是否发生合同', IND_CR_CRD_ISU    '是否信用卡发卡成功',,BFR_L30D_CHM_AMT_AVG  '执行日期前30天理财日均',  BT_RCTLY_30D_CHM_AMT_AVG '用例执行后当前日期往前推30天理财日均',BFR_L30D_DEP_BAL_AVG '执行日期前30天存款余额日均',BT_RCTLY_30D_DEP_BAL_AVG '用例执行后当前日期往前推30天存款余额日均'

           WHEN T.CASE_NAME IN ( '大额配卡' )                                                                                                                                                                                     THEN IND_BT_SDT_CTR --IND_BT_SDT_CTR     '是否发生随贷通合同'

           ELSE 0

         END                                                                        AS IS_CONVERT

        ,RISK.本年新发生风险贷款

        ,CITY.大区域

        ,CITY.省

        ,CITY.市

		,COALESCE(T1.VIEW_FLAG,0)  VIEW_FLAG    --是否查看

		,COALESCE(T1.IS_FOLLOW_UP ,0)   IS_FOLLOW_UP --是否跟进

		,T1.BANK_OPPT_BATCH_NAME  --商机行方批次名称

FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_REL T

LEFT JOIN    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_AFF_ANLS T1 --指标明细表

ON      T.CASE_NO = T1.CASE_NO

AND     T1.DT='20230501'

AND     T.CASE_NAME = T1.CASE_NAME

AND     T.CASE_PHASE = T1.CASE_PHASE

AND     T.CST_ID = T1.CST_ID

AND     T.REL_CST_ID = T1.REL_CST_ID

LEFT JOIN    LAB_BIGDATA_DEV.QUAN_YONGLI_BAL T5 --补充贷款月日均执行日期

ON      T.REL_CST_ID = T5.CST_ID

AND     T.EXEC_DATE = T5.DT

LEFT JOIN    LAB_BIGDATA_DEV.QUAN_YONGLI_BAL T15 --补充贷款月日均结束日期

ON      T.REL_CST_ID = T15.CST_ID

AND     T.ADJUST_DUE_DATE = T15.DT

LEFT JOIN    LAB_BIGDATA_DEV.YONGLI_CUS_CRD_CSM_AMT T7 --补充信用卡消费金额_日均垫款月日均执行日期

ON      T.REL_CST_ID = T7.CST_ID

AND     T.EXEC_DATE = T7.EXEC_DATE

LEFT JOIN    (

                 SELECT  CST_ID

                         ,SUM(BAL_CNY) 贷款余额

                         ,SUM(CASE

                                WHEN NEW_OPN_IND = '是' AND RSK_LOAN_IND = 'Y' THEN BAL_CNY

                                ELSE 0

                              END) 本年新发生风险贷款

                 FROM    APP_ADO.FCT_RSK_LOAN_DUTY_ID_MID_INF_DD

                 WHERE   DT = '20230501'

                 GROUP BY CST_ID

             ) RISK

ON      T.REL_CST_ID = RISK.CST_ID

LEFT JOIN    (

                 SELECT  DISTINCT 机构号

                                  ,大区域

                                  ,省

                                  ,市

                 FROM    LAB_BIGDATA_DEV.FH_CITY

             ) CITY --表中有重复数据

ON      SUBSTR(T1.PRM_FH_ORG_ID, 1, 4) = CITY.机构号;


















**a交接分析.sql
SELECT * FROM 202204_mdf_data_ftp_1 WHERE  cst_id='2000811622';

SELECT * FROM 202204_mdf_data_ftp_2 WHERE  cst_id='2000811622'

SELECT * FROM 202204_mdf_data_ftp_4 WHERE  cst_id='2000811622';



SELECT count(*) FROM 202204_mdf_data_ftp_4;

SELECT count(*) FROM 202204_mdf_data_new_sdt;

SELECT count(*) FROM 202105_mdf_data_intr_rate



























SELECT  t2.cst_chn_nm

FROM    lab_bigdata_dev.gjj_zhengxin_geti t

LEFT JOIN    edw.dws_cst_bas_inf_dd t2

ON      t.cst_id = t2.cst_id

AND     t2.dt = '20240402'

WHERE   t.code = 'H6291' --小吃服务



SELECT  t2.cst_chn_nm

FROM    lab_bigdata_dev.gjj_zhengxin_geti t

LEFT JOIN    edw.dws_cst_bas_inf_dd t2

ON      t.cst_id = t2.cst_id

AND     t2.dt = '20240402'

WHERE   t.code = 'H6291' --小吃服务



F5193  --互联网批发



F5292  --互联网零售



SELECT distinct  industryname

        ,entname

FROM    edw.nout_gs_label_total_sub a

WHERE   a.dt >= '00000'

AND     a.enttype = '个体工商户'

AND     REPLACE(esdate, '-', '') <= '20231231'

AND     entstatuscode = '1'

AND     a.industrycode = '6291'  --小吃服务





SELECT distinct  industryname

        ,entname

FROM    edw.nout_gs_label_total_sub a

WHERE   a.dt >= '00000'

AND     a.enttype = '个体工商户'

AND     REPLACE(esdate, '-', '') <= '20231231'

AND     entstatuscode = '1'

AND     a.industrycode = '5292'  --互联网零售





---综合ftp收入贡献  表有改动江杰

drop table if exists lab_bigdata_dev.mdf_ftp;

create table if not exists lab_bigdata_dev.mdf_ftp as

select cst_id

    ,t1.dt

    ,SUM(DECODE(t1.AST_LBL_CD, '1', 1, - 1) * ( T1.intr_inc_xps_mon_acm * T2.avg_prc * 0.01 - T1.fnl_ftp_intr_mon_acm * T2.avg_prc * 0.01 )) as ftp_data

from edw.dws_bus_fin_ftp_act_smy_inf_dd  t1 --FTP结果集

LEFT JOIN    EDW.DIM_BUS_COM_EXR_INF_DD T2 --汇率表 CNY_EXR 折人民币汇率

ON      T1.CCY_CD = T2.CCY_CD

AND     T2.DT = '@@{yyyyMMdd}'

where t1.dt in (select distinct mdf_bfr_1_month from lab_bigdata_dev.mdf_date

    union

    select distinct mdf_bfr_3_month from lab_bigdata_dev.mdf_date

    union

    select distinct mdf_bfr_2_month from lab_bigdata_dev.mdf_date

    union

    select distinct mdf_aft_1_month from lab_bigdata_dev.mdf_date

    union

    select distinct mdf_aft_2_month from lab_bigdata_dev.mdf_date

    union

    select distinct mdf_aft_3_month from lab_bigdata_dev.mdf_date

    union

    select distinct mdf_aft_4_month from lab_bigdata_dev.mdf_date

    union

    select distinct mdf_aft_5_month from lab_bigdata_dev.mdf_date

    union

    select distinct mdf_aft_6_month from lab_bigdata_dev.mdf_date

    union

    select distinct mdf_aft_7_month from lab_bigdata_dev.mdf_date

    union

    select distinct mdf_aft_8_month from lab_bigdata_dev.mdf_date

    union

    select distinct mdf_aft_9_month from lab_bigdata_dev.mdf_date

    union

    select distinct mdf_aft_10_month from lab_bigdata_dev.mdf_date

    union

    select distinct mdf_aft_11_month from lab_bigdata_dev.mdf_date

    union

    select distinct mdf_aft_12_month from lab_bigdata_dev.mdf_date)

and t1.dt >=  replace(cast(last_day(add_months(to_date('20220601','yyyymmdd'),-3)) as string),'-','')

group by  cst_id

    ,t1.dt;







drop table if exists lab_bigdata_dev.mdf_data_ftp_1;

create table if not exists lab_bigdata_dev.mdf_data_ftp_1 as

SELECT  t1.cst_id

    ,SUM(ftp_data)/3 AS ftp_3_month_bfr

FROM  lab_bigdata_dev.mdf_data t1

left join lab_bigdata_dev.mdf_ftp t2

on t1.cst_id = t2.cst_id

    and t2.dt >= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-3)) as string),'-','')

    and t2.dt <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','')

group by t1.cst_id;





drop table if exists lab_bigdata_dev.mdf_data_ftp_2;

create table if not exists lab_bigdata_dev.mdf_data_ftp_2 as

SELECT  t1.cst_id

    ,SUM(ftp_data)/6 AS ftp_6_month_aft

FROM  lab_bigdata_dev.mdf_data t1

left join lab_bigdata_dev.mdf_ftp t2

on t1.cst_id = t2.cst_id

    and t2.dt >= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),1)) as string),'-','')

    and t2.dt <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),6)) as string),'-','')

group by t1.cst_id;





drop table if exists lab_bigdata_dev.mdf_data_ftp_3;

create table if not exists lab_bigdata_dev.mdf_data_ftp_3 as

SELECT  t1.cst_id

    ,SUM(ftp_data)/12 AS ftp_12_month_aft

FROM  lab_bigdata_dev.mdf_data t1

left join lab_bigdata_dev.mdf_ftp t2

on t1.cst_id = t2.cst_id

    and t2.dt >= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),1)) as string),'-','')

    and t2.dt <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')

group by t1.cst_id;







insert overwrite table lab_bigdata_dev.mdf_data_feature_all_20220607 PARTITION (DT = '202404')

-- drop table if exists lab_bigdata_dev.mdf_data_feature_all_20220607_test;

-- create table if not exists lab_bigdata_dev.mdf_data_feature_all_20220607_test as

select t1.cst_id

    ,t1.MDF_DT

    ,t1.mdf_qorg_cd ---变更前机构代码

    ,t1.mdf_qppl_cd -----变更前人员代码

    ,t1.aft_mdf_org_cd ----变更后机构代码

    ,t1.aft_mdf_ppl_cd ----变更后人员代码

    ,coalesce(t2.efe_dep_cst_ind_bfr,'0') as  efe_dep_cst_ind_bfr ----交接前有效存款户标志

    ,coalesce(t2.efe_dep_cst_ind_aft_3_month,'0') as efe_dep_cst_ind_aft_3_month   ----交接后3个月有效存款户标志

    ,coalesce(t2.efe_dep_cst_ind_aft_6_month,'0') as efe_dep_cst_ind_aft_6_month   ----交接后6个月有效存款户标志

    ,coalesce(t2.efe_dep_cst_ind_aft_12_month,'0') as efe_dep_cst_ind_aft_12_month   ----交接后12个月有效存款户标志

    ,coalesce(t2.efe_loan_cst_ind_bfr,'0') as efe_loan_cst_ind_bfr    ----交接前有效信贷户标志

    ,coalesce(t2.efe_loan_cst_ind_aft_3_month,'0') as efe_loan_cst_ind_aft_3_month  ----交接后3个月有效信贷户标志

    ,coalesce(t2.efe_loan_cst_ind_aft_6_month,'0') as efe_loan_cst_ind_aft_6_month ----交接后6个月有效信贷户标志

    ,coalesce(t2.efe_loan_cst_ind_aft_12_month,'0') as efe_loan_cst_ind_aft_12_month  ----交接后12个月有效信贷户标志

    ,coalesce(t2.efe_cst_ind_bfr,'0') as efe_cst_ind_bfr    ----交接前有效户标志

    ,coalesce(t2.efe_cst_ind_aft_3_month,'0') as efe_cst_ind_aft_3_month   ----交接后3个月有效户标志

    ,coalesce(t2.efe_cst_ind_aft_6_month,'0') as efe_cst_ind_aft_6_month  ----交接后6个月有效户标志

    ,coalesce(t2.efe_cst_ind_aft_12_month,'0') as efe_cst_ind_aft_12_month  ----交接后12个月有效户标志

    ,t3.last_90_days_gl_bal_avg_bfr   ---交接前3个月存款月日均

    ,t3.last_180_days_gl_bal_avg_aft   ---交接后6个月存款月日均

    ,t3.last_360_days_gl_bal_avg_aft   ---交接后12个月存款月日均

    ,t4.last_90_days_prcp_bal_avg_bfr---交接前3个月贷款月日均

    ,t4.last_180_days_prcp_bal_avg_aft   ---交接后6个月贷款月日均

    ,t4.last_360_days_prcp_bal_avg_aft   ---交接后12个月贷款月日均

    ,t5.is_loan_finish     -------交接后12个月结清

    ,t5.is_loan_continue   -----交接后12个月是否存在续贷

    ,t6.IS_CUR_DSTR_EXPIRE   -----到期或销户

    ,t6.IS_CUR_CONTINUE     ----续存（含自动转存）

    ,t7.exe_intr_rate_bfr    -----续贷前执行利率

    ,t7.exe_intr_rate_aft   -----续贷后执行利率



	 -- ,t7.exe_intr_rate_bfr_fenzi    -----续贷前执行利率

    -- ,t7.exe_intr_rate_aft_fenzi   -----续贷后执行利率

	 -- ,t7.exe_intr_rate_bfr_fenmu    -----续贷前执行利率

    -- ,t7.exe_intr_rate_aft_fenmu   -----续贷后执行利率



    ,t8.ftp_3_month_bfr    ---交接前3个月ftp月均

    ,t14.ftp_6_month_aft ---交接后6个月ftp月均

    ,t15.ftp_12_month_aft ---交接后12个月ftp月均

    ,t9.prm_cst_cnt   ----管护人数

    ,t9.qua_sub_cls_cd   -----信贷调查资质

    ,t10.new_sdt_cnt    ------随贷通新增人数

    ,t10.no_sdt_bfr

    ,t11.empe_lqd_type -----人事异动

    ,t11.c_turnover_type  --流动类型

    ,t12.prm_org_id   ---主管户机构

    ,t13.sum_org_id  as prm_fh_org_id        -- 主管户分行机构号

    ,t13.sum_org_nm  as prm_fh_org_nm        -- 主管户分行名称

    ,t20.sum_org_id  as prm_zh_org_id        -- 主管户支行机构号

    ,t20.sum_org_nm  as prm_zh_org_nm        -- 主管户支行名称

    ,t1.mdf_ctr_amt as ctr_amt

    ,COALESCE(T21.is_yr_new_hpn_amt,0) AS is_yr_new_hpn_amt



    ,case when t22.cst_id is not null then '1' else '0' end as busi_ctr_ind  --当前有未结清的贷款标识

    ,COALESCE(T22.ctr_bal,0) AS mdf_ctr_bal --当前未结清的贷款余额

	,t1.mdf_type  --交接客户类型

	--,COALESCE(T21.BAL_no_hexiao,0) AS  BAL_no_hexiao -- 贷款余额_不含核销

from lab_bigdata_dev.mdf_nomdf_sample t1

left join lab_bigdata_dev.mdf_data_efe_ind t2

on t1.cst_id = t2.cst_id and t1.MDF_DT = t2.MDF_DT

left join lab_bigdata_dev.mdf_data_dep t3

on t1.cst_id = t3.cst_id and t1.MDF_DT = t3.MDF_DT

left join lab_bigdata_dev.mdf_data_loan t4

on t1.cst_id = t4.cst_id and t1.MDF_DT = t4.MDF_DT

left join lab_bigdata_dev.mdf_data_cur_rnw t5

on t1.cst_id = t5.cst_id and t1.MDF_DT = t5.MDF_DT

left join lab_bigdata_dev.mdf_data_xu_cun t6

on t1.cst_id = t6.cst_id and t1.MDF_DT = t6.MDF_DT

left join lab_bigdata_dev.mdf_data_intr_rate t7

on t1.cst_id = t7.cst_id

left join lab_bigdata_dev.mdf_data_ftp_1 t8

on t1.cst_id = t8.cst_id

left join lab_bigdata_dev.mdf_data_ftp_2 t14

on t1.cst_id = t14.cst_id

left join lab_bigdata_dev.mdf_data_ftp_3 t15

on t1.cst_id = t15.cst_id

left join lab_bigdata_dev.mdf_data_qua_sub t9

on t1.aft_mdf_ppl_cd = t9.aft_mdf_ppl_cd

and t1.MDF_DT = t9.MDF_DT

left join lab_bigdata_dev.mdf_data_new_sdt t10

on t1.cst_id = t10.cst_id

left join lab_bigdata_dev.mdf_data_empe_lqd t11

on t1.mdf_qppl_cd = t11.mdf_qppl_cd

and  t1.MDF_DT = t11.MDF_DT

left join edw.dws_cst_bas_inf_dd t12

on t1.cst_id = t12.cst_id

    and t12.dt = '20240402'

left join edw.dim_hr_org_sum_org_rel_dd t13

on t1.aft_mdf_org_cd=t13.UNT_ORG_ID

    and t13.dt='20240402'

    and t13.SUM_ORG_LVL='F'

    AND t13.ORG_RLTN_DIM_CD='WD3'

    AND t13.SUM_TYP_CD='1'

LEFT JOIN    edw.dim_hr_org_sum_org_rel_dd t20

ON     t1.aft_mdf_org_cd=t20.UNT_ORG_ID

AND     t20.dt = '20240402'

AND     t20.SUM_ORG_LVL = 'Z' --支行

AND    t20.ORG_RLTN_DIM_CD = 'WD3'

AND    t20.SUM_TYP_CD = '1'

LEFT JOIN

(select cst_id

	,SUM( case when A.IS_YR_NEW_HPN = 'Y' AND A.IS_RSK_LOAN = 'Y' THEN A.DBIL_BAL_CNY ELSE 0  END) is_yr_new_hpn_amt   --本年新发生风险贷款余额

	,SUM(CASE  WHEN A.BSN_STS NOT LIKE '%核销%' THEN A.DBIL_BAL_CNY    ELSE 0  END) BAL_no_hexiao -- 贷款余额_不含核销

from adm_pub.adm_rsk_app_inter_all a

where dt = '@@{yyyyMMdd}'

group by cst_id

) T21

ON T1.cst_id = T21.cst_id

left join

(select cst_id

    ,sum(ctr_bal) as ctr_bal

from edw.dim_bus_loan_ctr_inf_dd t

where dt = '@@{yyyyMMdd}'

and (( ( t.ctr_bal > 0

    OR ( t.ctr_bal IS NULL

AND     nvl(t.crc_ind, '0') = '0' )

    OR ( ( nvl(t.crc_ind, '0') <> '0'

    OR t.pd_cd LIKE '2010503%' )

AND     ( t.ctr_bal = 0

    OR t.ctr_bal IS NULL )

AND     t.apnt_mtu_dt >= '@@{yyyyMMdd}' ) )

AND     nvl(t.frz_sts_cd, ' ') NOT IN ( '3' , '4' ) )

    OR ( t.ctr_bal > 0

AND     t.pd_cd LIKE '2010503%'

AND     t.apnt_mtu_dt <= '@@{yyyyMMdd}'

AND     t.frz_sts_cd IN ( '3' , '4' ) ))

group by cst_id

) t22

ON T1.cst_id = T22.cst_id

where t13.sum_org_nm rlike '分行' or t13.sum_org_nm rlike '村镇银行';    -- 分行





DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_zj_20221122;



CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_zj_20221122 AS

SELECT  prm_fh_org_nm 分行名称

        ,CASE

           WHEN prm_cst_cnt <= 100 THEN '100以内'

           WHEN prm_cst_cnt <= 300 THEN '100-300'

           WHEN prm_cst_cnt <= 500 THEN '300-500'

           WHEN prm_cst_cnt > 500  THEN '500以上'

           ELSE NULL

         END        AS 接收人管户户数

        ,qua_sub_cls_cd 接手人信贷调查资质

        ,empe_lqd_type 按交出人人事异动

        ,CASE

           WHEN last_90_days_prcp_bal_avg_bfr > 0 AND last_90_days_prcp_bal_avg_bfr <= 500000 THEN '50万以下'

           WHEN last_90_days_prcp_bal_avg_bfr <= 1500000                                      THEN '50-150w'

           WHEN last_90_days_prcp_bal_avg_bfr <= 3000000                                      THEN '150-300w'

           WHEN last_90_days_prcp_bal_avg_bfr >= 3000000                                      THEN '300w以上'

         END 客户分段



        --------统计客户数字段

        ,count(CASE                  WHEN efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' THEN cst_id                END) AS 交接前非有效户

		,count(CASE                  WHEN ( efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' ) AND efe_cst_ind_aft_3_month = '1' THEN cst_id                END) AS 交接前非有效户交接后3个月是有效户

        ,count(CASE                  WHEN ( efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' ) AND efe_cst_ind_aft_6_month = '1' THEN cst_id                END) AS 交接前非有效户交接后6个月是有效户

        ,count(CASE                  WHEN ( efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' ) AND efe_cst_ind_aft_12_month = '1' THEN cst_id                END) AS 交接前非有效户交接后12个月是有效户

        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' THEN cst_id                END) AS 交接前是有效户

        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' AND ( efe_cst_ind_aft_3_month = '0' OR efe_cst_ind_aft_3_month = '' ) THEN cst_id                END) AS 交接前是有效户交接后3个月非有效户

        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' AND ( efe_cst_ind_aft_6_month = '0' OR efe_cst_ind_aft_6_month = '' ) THEN cst_id                END) AS 交接前是有效户交接后6个月非有效户

        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' AND ( efe_cst_ind_aft_12_month = '0' OR efe_cst_ind_aft_12_month = '' ) THEN cst_id                END) AS 交接前是有效户交接后12个月非有效户



		--有效信贷户

		,count(CASE                  WHEN efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' THEN cst_id                END) AS 交接前非有效信贷户

		,count(CASE                  WHEN ( efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' ) AND efe_loan_cst_ind_aft_3_month = '1' THEN cst_id                END) AS 交接前非有效信贷户交接后3个月是有效信贷户

        ,count(CASE                  WHEN ( efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' ) AND efe_loan_cst_ind_aft_6_month = '1' THEN cst_id                END) AS 交接前非有效信贷户交接后6个月是有效信贷户

        ,count(CASE                  WHEN ( efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' ) AND efe_loan_cst_ind_aft_12_month = '1' THEN cst_id                END) AS 交接前非有效信贷户交接后12个月是有效信贷户

        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' THEN cst_id                END) AS 交接前是有效信贷户

        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' AND ( efe_loan_cst_ind_aft_3_month = '0' OR efe_loan_cst_ind_aft_3_month = '' ) THEN cst_id                END) AS 交接前是有效信贷户交接后3个月非有效信贷户

        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' AND ( efe_loan_cst_ind_aft_6_month = '0' OR efe_loan_cst_ind_aft_6_month = '' ) THEN cst_id                END) AS 交接前是有效信贷户交接后6个月非有效信贷户

        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' AND ( efe_loan_cst_ind_aft_12_month = '0' OR efe_loan_cst_ind_aft_12_month = '' ) THEN cst_id                END) AS 交接前是有效信贷户交接后12个月非有效信贷户





        ,count(CASE                  WHEN is_loan_continue = 1 THEN cst_id                END) AS 续贷客户数

        ,count(CASE                  WHEN is_loan_finish = 1 THEN cst_id                END) AS 贷款到期客户数

        ,count(CASE                  WHEN IS_CUR_DSTR_EXPIRE = 1 AND IS_CUR_CONTINUE = 1 THEN cst_id                END) AS 续存客户数

        ,count(CASE                  WHEN IS_CUR_DSTR_EXPIRE = 1 THEN cst_id                END) AS 存款到期客户数

        ,sum(CASE               	 WHEN last_90_days_gl_bal_avg_bfr > 0 THEN last_90_days_gl_bal_avg_bfr              END) 交接前3个月存款日均总规模

        -- ,count(CASE                  WHEN last_90_days_gl_bal_avg_bfr > 0 THEN cst_id                END) AS 交接前3个月存款日均人数

		,count( distinct cst_id) AS 交接前3个月存款日均人数

        ,sum(CASE            	     WHEN last_180_days_gl_bal_avg_aft > 0 THEN last_180_days_gl_bal_avg_aft              END) 交接后6个月存款日均总规模

        --,count(CASE                  WHEN last_180_days_gl_bal_avg_aft > 0 THEN cst_id                END) AS 交接后6个月存款日均人数

		,count( distinct cst_id) AS 交接后6个月存款日均人数

        ,sum(CASE            	     WHEN last_360_days_gl_bal_avg_aft > 0 THEN last_360_days_gl_bal_avg_aft              END) 交接后12个月存款日均总规模

        --,count(CASE                  WHEN last_360_days_gl_bal_avg_aft > 0 THEN cst_id                END) AS 交接后12个月存款日均人数

		,count( distinct cst_id) AS 交接后12个月存款日均人数

        ,sum(CASE              	     WHEN last_90_days_prcp_bal_avg_bfr > 0 THEN last_90_days_prcp_bal_avg_bfr              END) 交接前3个月贷款日均总规模

        --,count(CASE                  WHEN last_90_days_prcp_bal_avg_bfr > 0 THEN cst_id                END) AS 交接前3个月贷款日均人数

		,count( distinct cst_id) AS 交接前3个月贷款日均人数

        ,sum(CASE                    WHEN last_180_days_prcp_bal_avg_aft > 0 THEN last_180_days_prcp_bal_avg_aft              END) 交接后6个月贷款日均总规模

        --,count(CASE                  WHEN last_180_days_prcp_bal_avg_aft > 0 THEN cst_id                END) AS 交接后6个月贷款日均人数

		,count( distinct cst_id) AS 交接后6个月贷款日均人数

        ,sum(CASE                    WHEN last_360_days_prcp_bal_avg_aft > 0 THEN last_360_days_prcp_bal_avg_aft              END) 交接后12个月贷款日均总规模

        --,count(CASE                  WHEN last_360_days_prcp_bal_avg_aft > 0 THEN cst_id                END) AS 交接后12个月贷款日均人数

		,count( distinct cst_id) AS 交接后12个月贷款日均人数

        ,count(CASE                  WHEN exe_intr_rate_bfr > exe_intr_rate_aft THEN cst_id                END) AS 执行利率下降

        ,count(CASE                  WHEN exe_intr_rate_bfr = exe_intr_rate_aft THEN cst_id                END) AS 执行利率不变

        ,count(CASE                  WHEN exe_intr_rate_bfr < exe_intr_rate_aft THEN cst_id                END) AS 执行利率上升

        ,count(CASE                  WHEN exe_intr_rate_bfr IS NOT NULL AND exe_intr_rate_aft IS NOT NULL THEN cst_id                END) AS 执行利率变化



-- 		,case when sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)) end as exe_intr_rate_bfr

-- 		,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0)) end as exe_intr_rate_aft

-- 			--分子分母拆开，方便后面汇总

-- 	   ,sum(coalesce(exe_intr_rate_bfr_fenzi,0)) as exe_intr_rate_bfr_fenzi

-- 	   ,sum(coalesce(exe_intr_rate_bfr_fenmu,0)) as exe_intr_rate_bfr_fenmu

--        ,sum(coalesce(exe_intr_rate_aft_fenzi,0)) as exe_intr_rate_aft_fenzi

-- 	   ,sum(coalesce(exe_intr_rate_aft_fenmu,0)) as exe_intr_rate_aft_fenmu

		--,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_aft_fenmu,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-case when sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_bfr_fenmu,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)) AS 执行利率变化绝对值

		--,case when case when sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_bfr_fenmu,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0

		--	 then (case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_aft_fenmu,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-case when sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_bfr_fenmu,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)))/(case when sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_bfr_fenmu,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0))) AS 执行利率变化相对值



        ,count(CASE                  WHEN new_sdt_cnt > 0 AND no_sdt_bfr = 1 THEN cst_id                END) AS 新增随贷通客户数

        ,count(CASE                  WHEN no_sdt_bfr = 1 THEN cst_id                END) AS 交接前非随贷通客户

        ,sum(CASE              	     WHEN ftp_3_month_bfr IS NOT NULL THEN ftp_3_month_bfr              END) 交接前3个月FTP月均总规模

        --,count(CASE                  WHEN ftp_3_month_bfr IS NOT NULL THEN cst_id                END) AS 交接前3个月FTP月均人数

		,count( distinct cst_id) AS 交接前3个月FTP月均人数

        ,sum(CASE                    WHEN ftp_6_month_aft IS NOT NULL THEN ftp_6_month_aft              END) 交接后6个月FTP月均总规模

        --,count(CASE                  WHEN ftp_6_month_aft IS NOT NULL THEN cst_id                END) AS 交接后6个月FTP月均人数

		,count( distinct cst_id) AS 交接后6个月FTP月均人数

        ,sum(CASE                    WHEN ftp_12_month_aft IS NOT NULL THEN ftp_12_month_aft              END) 交接后12个月FTP月均总规模

        --,count(CASE                  WHEN ftp_12_month_aft IS NOT NULL THEN cst_id                END) AS 交接后12个月FTP月均人数

		,count( distinct cst_id) AS 交接后12个月FTP月均人数

		,mdf_type

		,sum(is_yr_new_hpn_amt) is_yr_new_hpn_amt

		,sum(mdf_ctr_bal) as mdf_ctr_bal

FROM    lab_bigdata_dev.mdf_data_feature_all_20220607

--from lab_bigdata_dev.mdf_data_feature_all_20220607_test

WHERE   dt = '202404'



GROUP BY prm_fh_org_nm , CASE

                           WHEN prm_cst_cnt <= 100 THEN '100以内'

                           WHEN prm_cst_cnt <= 300 THEN '100-300'

                           WHEN prm_cst_cnt <= 500 THEN '300-500'

                           WHEN prm_cst_cnt > 500  THEN '500以上'

                           ELSE NULL

                         END , qua_sub_cls_cd --接手人信贷调查资质

, empe_lqd_type --按交出人人事异动

, CASE

    WHEN last_90_days_prcp_bal_avg_bfr > 0 AND last_90_days_prcp_bal_avg_bfr <= 500000 THEN '50万以下'

    WHEN last_90_days_prcp_bal_avg_bfr <= 1500000                                      THEN '50-150w'

    WHEN last_90_days_prcp_bal_avg_bfr <= 3000000                                      THEN '150-300w'

    WHEN last_90_days_prcp_bal_avg_bfr >= 3000000                                      THEN '300w以上'

  END

  ,mdf_type;



ALTER TABLE lab_bigdata_dev.mdf_data_feature_zj_20221122 SET

COMMENT

'客户交接前后业务波动分析_总结1_原始数值';





insert overwrite table lab_bigdata_dev.mdf_data_feature_zj_2_20221122 PARTITION (DT = '202404')



SELECT  分行名称

	,mdf_type

	,'1' AS type

	,CASE            WHEN sum(交接前是有效户) = 0 THEN 0            ELSE sum(交接前是有效户交接后12个月非有效户) / sum(交接前是有效户)          END 转化率1

	,CASE            WHEN sum(交接前非有效户) = 0 THEN 0            ELSE sum(交接前非有效户交接后12个月是有效户) / sum(交接前非有效户)          END 转化率2

	,CASE            WHEN sum(贷款到期客户数) = 0 THEN 0            ELSE sum(续贷客户数) / sum(贷款到期客户数)          END 续贷率

	,CASE            WHEN sum(存款到期客户数) = 0 THEN 0            ELSE sum(续存客户数) / sum(存款到期客户数)          END 续存率

	,CASE   WHEN (  CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数) END ) = 0 THEN 0

			ELSE ( ( CASE WHEN sum(交接后12个月贷款日均人数) = 0 THEN 0 ELSE sum(交接后12个月贷款日均总规模) / sum(交接后12个月贷款日均人数)  END  ) -

			( CASE WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) ) / ( CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0 ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) END 增长率_贷款

	,CASE WHEN ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) = 0 THEN 0

		  ELSE ( ( CASE WHEN sum(交接后12个月存款日均人数) = 0 THEN 0 ELSE sum(交接后12个月存款日均总规模) / sum(交接后12个月存款日均人数)  END  ) - (

		 CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0    ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数)  END  ) ) / ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) END 增长率_存款

	,CASE WHEN ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) ) = 0 THEN 0 ELSE sum(执行利率下降) / ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) )          END 执行利率下降占比

	,CASE WHEN sum(交接前非随贷通客户) = 0 THEN 0 ELSE sum(新增随贷通客户数) / sum(交接前非随贷通客户)          END 配卡率

	,CASE WHEN ( CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END ) = 0 THEN 0

		  ELSE ( (  CASE  WHEN sum(交接后12个月ftp月均人数) = 0 THEN 0   ELSE sum(交接后12个月ftp月均总规模) / sum(交接后12个月ftp月均人数)  END   ) - (

		  CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0    ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END   ) ) / (CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END )  END ftp涨跌幅

	,case when sum(mdf_ctr_bal)=0 then 0 else sum(is_yr_new_hpn_amt)/sum(mdf_ctr_bal) end as 	本年新发生风险贷款率

	-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0  and sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0  then  sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-

			  -- sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)) end AS 执行利率变化绝对值

	-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0  and sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 and sum(coalesce(exe_intr_rate_bfr_fenzi,0))>0 then  (sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-

			  -- sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)))/( sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0))) end AS 执行利率变化相对值

FROM    lab_bigdata_dev.mdf_data_feature_zj_20221122 a

where a . 分行名称 rlike '分行'

GROUP BY 分行名称 , mdf_type

union

SELECT  '全行' as 分行名称

		,mdf_type

        ,'1' AS type

        ,CASE            WHEN sum(交接前是有效户) = 0 THEN 0            ELSE sum(交接前是有效户交接后12个月非有效户) / sum(交接前是有效户)          END 转化率1

        ,CASE            WHEN sum(交接前非有效户) = 0 THEN 0            ELSE sum(交接前非有效户交接后12个月是有效户) / sum(交接前非有效户)          END 转化率2

        ,CASE            WHEN sum(贷款到期客户数) = 0 THEN 0            ELSE sum(续贷客户数) / sum(贷款到期客户数)          END 续贷率

        ,CASE            WHEN sum(存款到期客户数) = 0 THEN 0            ELSE sum(续存客户数) / sum(存款到期客户数)          END 续存率

        ,CASE   WHEN (  CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数) END ) = 0 THEN 0

				ELSE ( ( CASE WHEN sum(交接后12个月贷款日均人数) = 0 THEN 0 ELSE sum(交接后12个月贷款日均总规模) / sum(交接后12个月贷款日均人数)  END  ) -

				( CASE WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) ) / ( CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0 ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) END 增长率_贷款

        ,CASE WHEN ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) = 0 THEN 0

			  ELSE ( ( CASE WHEN sum(交接后12个月存款日均人数) = 0 THEN 0 ELSE sum(交接后12个月存款日均总规模) / sum(交接后12个月存款日均人数)  END  ) - (

             CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0    ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数)  END  ) ) / ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) END 增长率_存款

        ,CASE WHEN ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) ) = 0 THEN 0 ELSE sum(执行利率下降) / ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) )          END 执行利率下降占比

        ,CASE WHEN sum(交接前非随贷通客户) = 0 THEN 0 ELSE sum(新增随贷通客户数) / sum(交接前非随贷通客户)          END 配卡率

        ,CASE WHEN ( CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END ) = 0 THEN 0

			  ELSE ( (  CASE  WHEN sum(交接后12个月ftp月均人数) = 0 THEN 0   ELSE sum(交接后12个月ftp月均总规模) / sum(交接后12个月ftp月均人数)  END   ) - (

			  CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0    ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END   ) ) / (CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END )  END ftp涨跌幅

        ,case when sum(mdf_ctr_bal)=0 then 0 else sum(is_yr_new_hpn_amt)/sum(mdf_ctr_bal) end as 	本年新发生风险贷款率

		-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0  and sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0  then  sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-

				  -- sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)) end AS 执行利率变化绝对值

		-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0  and sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 and sum(coalesce(exe_intr_rate_bfr_fenzi,0))>0 then  (sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-

				  -- sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)))/( sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0))) end AS 执行利率变化相对值

FROM    lab_bigdata_dev.mdf_data_feature_zj_20221122

GROUP BY mdf_type

;







-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_zj_3_20221122;



-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_zj_3_20221122

-- (

    -- 分行名称      STRING COMMENT '分行名称'

    -- ,转化率_是转非  BIGINT COMMENT ''

    -- ,转化率_非转是  BIGINT COMMENT ''

    -- ,续贷率      BIGINT COMMENT ''

    -- ,续存率      BIGINT COMMENT ''

    -- ,增长率_贷款   BIGINT COMMENT ''

    -- ,增长率_存款   BIGINT COMMENT ''

    -- ,执行利率下降占比 BIGINT COMMENT ''

    -- ,配卡率      BIGINT COMMENT ''

    -- ,ftp涨跌幅   BIGINT COMMENT ''

	-- , IS_YR_NEW_HPN_rate  BIGINT comment '本年新发生风险贷款率'

-- )

-- COMMENT

-- '客户交接前后业务波动分析_总结3_排序'

-- PARTITIONED BY

-- (

    -- dt STRING

-- );



insert overwrite table lab_bigdata_dev.mdf_data_feature_zj_3_20221122 PARTITION (DT = '202404')



SELECT  a . 分行名称

    ,row_number() over(partition by '1' order by a.有效户流失率 desc) as 转化率_是转非

    ,row_number() over(partition by '1' order by a.有效户转化率 asc) as 转化率_非转是

    ,row_number() over(partition by '1' order by a.续贷率 asc) as 续贷率

    ,row_number() over(partition by '1' order by a.续存率 asc) as 续存率

    ,row_number() over(partition by '1' order by a.增长率_贷款 asc) as 增长率_贷款

    ,row_number() over(partition by '1' order by a.增长率_存款 asc) as 增长率_存款

    ,row_number() over(partition by '1' order by a.执行利率下降占比 desc) as 执行利率下降占比

    ,row_number() over(partition by '1' order by a.配卡率 asc) as 配卡率

    ,row_number() over(partition by '1' order by a.ftp涨跌幅 asc) as ftp涨跌幅

	,row_number() over(partition by '1' order by a.IS_YR_NEW_HPN_rate desc) as 本年新发生风险贷款率

FROM    lab_bigdata_dev.mdf_data_feature_zj_2_20221122 a

where a . 分行名称 rlike '分行'

and a.dt='202404'

and mdf_type='交接客户'

;







insert overwrite table lab_bigdata_dev.mdf_data_feature_all_20220607 PARTITION (DT = '202404')

-- drop table if exists lab_bigdata_dev.mdf_data_feature_all_20220607_test;

-- create table if not exists lab_bigdata_dev.mdf_data_feature_all_20220607_test as

select t1.cst_id

    ,t1.MDF_DT

    ,t1.mdf_qorg_cd ---变更前机构代码

    ,t1.mdf_qppl_cd -----变更前人员代码

    ,t1.aft_mdf_org_cd ----变更后机构代码

    ,t1.aft_mdf_ppl_cd ----变更后人员代码

    ,coalesce(t2.efe_dep_cst_ind_bfr,'0') as  efe_dep_cst_ind_bfr ----交接前有效存款户标志

    ,coalesce(t2.efe_dep_cst_ind_aft_3_month,'0') as efe_dep_cst_ind_aft_3_month   ----交接后3个月有效存款户标志

    ,coalesce(t2.efe_dep_cst_ind_aft_6_month,'0') as efe_dep_cst_ind_aft_6_month   ----交接后6个月有效存款户标志

    ,coalesce(t2.efe_dep_cst_ind_aft_12_month,'0') as efe_dep_cst_ind_aft_12_month   ----交接后12个月有效存款户标志

    ,coalesce(t2.efe_loan_cst_ind_bfr,'0') as efe_loan_cst_ind_bfr    ----交接前有效信贷户标志

    ,coalesce(t2.efe_loan_cst_ind_aft_3_month,'0') as efe_loan_cst_ind_aft_3_month  ----交接后3个月有效信贷户标志

    ,coalesce(t2.efe_loan_cst_ind_aft_6_month,'0') as efe_loan_cst_ind_aft_6_month ----交接后6个月有效信贷户标志

    ,coalesce(t2.efe_loan_cst_ind_aft_12_month,'0') as efe_loan_cst_ind_aft_12_month  ----交接后12个月有效信贷户标志

    ,coalesce(t2.efe_cst_ind_bfr,'0') as efe_cst_ind_bfr    ----交接前有效户标志

    ,coalesce(t2.efe_cst_ind_aft_3_month,'0') as efe_cst_ind_aft_3_month   ----交接后3个月有效户标志

    ,coalesce(t2.efe_cst_ind_aft_6_month,'0') as efe_cst_ind_aft_6_month  ----交接后6个月有效户标志

    ,coalesce(t2.efe_cst_ind_aft_12_month,'0') as efe_cst_ind_aft_12_month  ----交接后12个月有效户标志

    ,t3.last_90_days_gl_bal_avg_bfr   ---交接前3个月存款月日均

    ,t3.last_180_days_gl_bal_avg_aft   ---交接后6个月存款月日均

    ,t3.last_360_days_gl_bal_avg_aft   ---交接后12个月存款月日均

    ,t4.last_90_days_prcp_bal_avg_bfr---交接前3个月贷款月日均

    ,t4.last_180_days_prcp_bal_avg_aft   ---交接后6个月贷款月日均

    ,t4.last_360_days_prcp_bal_avg_aft   ---交接后12个月贷款月日均

    ,t5.is_loan_finish     -------交接后12个月结清

    ,t5.is_loan_continue   -----交接后12个月是否存在续贷

    ,t6.IS_CUR_DSTR_EXPIRE   -----到期或销户

    ,t6.IS_CUR_CONTINUE     ----续存（含自动转存）

    ,t7.exe_intr_rate_bfr    -----续贷前执行利率

    ,t7.exe_intr_rate_aft   -----续贷后执行利率



	 -- ,t7.exe_intr_rate_bfr_fenzi    -----续贷前执行利率

    -- ,t7.exe_intr_rate_aft_fenzi   -----续贷后执行利率

	 -- ,t7.exe_intr_rate_bfr_fenmu    -----续贷前执行利率

    -- ,t7.exe_intr_rate_aft_fenmu   -----续贷后执行利率



    ,t8.ftp_3_month_bfr    ---交接前3个月ftp月均

    ,t14.ftp_6_month_aft ---交接后6个月ftp月均

    ,t15.ftp_12_month_aft ---交接后12个月ftp月均

    ,t9.prm_cst_cnt   ----管护人数

    ,t9.qua_sub_cls_cd   -----信贷调查资质

    ,t10.new_sdt_cnt    ------随贷通新增人数

    ,t10.no_sdt_bfr

    ,t11.empe_lqd_type -----人事异动

    ,t11.c_turnover_type  --流动类型

    ,t12.prm_org_id   ---主管户机构

    ,t13.sum_org_id  as prm_fh_org_id        -- 主管户分行机构号

    ,t13.sum_org_nm  as prm_fh_org_nm        -- 主管户分行名称

    ,t20.sum_org_id  as prm_zh_org_id        -- 主管户支行机构号

    ,t20.sum_org_nm  as prm_zh_org_nm        -- 主管户支行名称

    ,t1.mdf_ctr_amt as ctr_amt

    ,COALESCE(T21.is_yr_new_hpn_amt,0) AS is_yr_new_hpn_amt



    ,case when t22.cst_id is not null then '1' else '0' end as busi_ctr_ind  --当前有未结清的贷款标识

    ,COALESCE(T22.ctr_bal,0) AS mdf_ctr_bal --当前未结清的贷款余额

	,t1.mdf_type  --交接客户类型

from lab_bigdata_dev.mdf_nomdf_sample t1

left join lab_bigdata_dev.mdf_data_efe_ind t2

on t1.cst_id = t2.cst_id and t1.MDF_DT = t2.MDF_DT

left join lab_bigdata_dev.mdf_data_dep t3

on t1.cst_id = t3.cst_id and t1.MDF_DT = t3.MDF_DT

left join lab_bigdata_dev.mdf_data_loan t4

on t1.cst_id = t4.cst_id and t1.MDF_DT = t4.MDF_DT

left join lab_bigdata_dev.mdf_data_cur_rnw t5

on t1.cst_id = t5.cst_id and t1.MDF_DT = t5.MDF_DT

left join lab_bigdata_dev.mdf_data_xu_cun t6

on t1.cst_id = t6.cst_id and t1.MDF_DT = t6.MDF_DT

left join lab_bigdata_dev.mdf_data_intr_rate t7

on t1.cst_id = t7.cst_id

left join lab_bigdata_dev.mdf_data_ftp_1 t8

on t1.cst_id = t8.cst_id

left join lab_bigdata_dev.mdf_data_ftp_2 t14

on t1.cst_id = t14.cst_id

left join lab_bigdata_dev.mdf_data_ftp_3 t15

on t1.cst_id = t15.cst_id

left join lab_bigdata_dev.mdf_data_qua_sub t9

on t1.aft_mdf_ppl_cd = t9.aft_mdf_ppl_cd

and t1.MDF_DT = t9.MDF_DT

left join lab_bigdata_dev.mdf_data_new_sdt t10

on t1.cst_id = t10.cst_id

left join lab_bigdata_dev.mdf_data_empe_lqd t11

on t1.mdf_qppl_cd = t11.mdf_qppl_cd

and  t1.MDF_DT = t11.MDF_DT

left join edw.dws_cst_bas_inf_dd t12

on t1.cst_id = t12.cst_id

    and t12.dt = '20240402'

left join edw.dim_hr_org_sum_org_rel_dd t13

on t1.aft_mdf_org_cd=t13.UNT_ORG_ID

    and t13.dt='20240402'

    and t13.SUM_ORG_LVL='F'

    AND t13.ORG_RLTN_DIM_CD='WD3'

    AND t13.SUM_TYP_CD='1'

LEFT JOIN    edw.dim_hr_org_sum_org_rel_dd t20

ON     t1.aft_mdf_org_cd=t20.UNT_ORG_ID

AND     t20.dt = '20240402'

AND     t20.SUM_ORG_LVL = 'Z' --支行

AND    t20.ORG_RLTN_DIM_CD = 'WD3'

AND    t20.SUM_TYP_CD = '1'

LEFT JOIN



(select cst_id

    ,sum(case when is_yr_new_hpn = 'Y' then ovd_prcp_bal end ) as is_yr_new_hpn_amt

from adm_pub.adm_rsk_app_inter_all

where dt = '@@{yyyyMMdd}'

group by cst_id

) T21



ON T1.cst_id = T21.cst_id

left join

(select cst_id

    ,sum(ctr_bal) as ctr_bal

from edw.dim_bus_loan_ctr_inf_dd t

where dt = '@@{yyyyMMdd}'

and (( ( t.ctr_bal > 0

    OR ( t.ctr_bal IS NULL

AND     nvl(t.crc_ind, '0') = '0' )

    OR ( ( nvl(t.crc_ind, '0') <> '0'

    OR t.pd_cd LIKE '2010503%' )

AND     ( t.ctr_bal = 0

    OR t.ctr_bal IS NULL )

AND     t.apnt_mtu_dt >= '@@{yyyyMMdd}' ) )

AND     nvl(t.frz_sts_cd, ' ') NOT IN ( '3' , '4' ) )

    OR ( t.ctr_bal > 0

AND     t.pd_cd LIKE '2010503%'

AND     t.apnt_mtu_dt <= '@@{yyyyMMdd}'

AND     t.frz_sts_cd IN ( '3' , '4' ) ))

group by cst_id

) t22

ON T1.cst_id = T22.cst_id

where t13.sum_org_nm rlike '分行' or t13.sum_org_nm rlike '村镇银行';    -- 分行



insert overwrite table lab_bigdata_dev.mdf_data_feature_risk_20221122 PARTITION (DT = '202404')

select  prm_fh_org_nm  分行名称

 ,prm_zh_org_nm  支行名称

        ,case when prm_cst_cnt <= 100 then '100以内'

             when prm_cst_cnt <=300 then '100-300'

             when prm_cst_cnt <=500 then '300-500'

             when prm_cst_cnt >500 then '500以上'

             else null end as 接收人管户户数

        ,qua_sub_cls_cd  接手人信贷调查资质

        ,empe_lqd_type  按交出人人事异动

    ,case when last_90_days_prcp_bal_avg_bfr >0 and last_90_days_prcp_bal_avg_bfr <=500000 then '50万以下'

        when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'

        when last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'

        when last_90_days_prcp_bal_avg_bfr >= 3000000 then '300w以上' end 客户分段

--------统计客户数字段

    ,sum(is_yr_new_hpn_amt) is_yr_new_hpn_amt

    ,sum(mdf_ctr_bal) as mdf_ctr_bal

    ,count(cst_id) as mdf_cst_cnt

    ,sum(ctr_amt) as mdf_ctr_amt

	,mdf_type

from lab_bigdata_dev.mdf_data_feature_all_20220607

where dt = '202404'

group by prm_fh_org_nm,prm_zh_org_nm

        ,case when prm_cst_cnt <= 100 then '100以内'

             when prm_cst_cnt <=300 then '100-300'

             when prm_cst_cnt <=500 then '300-500'

             when prm_cst_cnt >500 then '500以上'

             else null end

        ,qua_sub_cls_cd --接手人信贷调查资质

        ,empe_lqd_type  --按交出人人事异动

     ,case when last_90_days_prcp_bal_avg_bfr >0 and last_90_days_prcp_bal_avg_bfr <=500000 then '50万以下'

    when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'

    when last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'

    when last_90_days_prcp_bal_avg_bfr >= 3000000 then '300w以上' end

	,mdf_type;





--------总结雷达图

DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_zj_20221122;



CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_zj_20221122 AS

SELECT  prm_fh_org_nm 分行名称

        ,CASE

           WHEN prm_cst_cnt <= 100 THEN '100以内'

           WHEN prm_cst_cnt <= 300 THEN '100-300'

           WHEN prm_cst_cnt <= 500 THEN '300-500'

           WHEN prm_cst_cnt > 500  THEN '500以上'

           ELSE NULL

         END        AS 接收人管户户数

        ,qua_sub_cls_cd 接手人信贷调查资质

        ,empe_lqd_type 按交出人人事异动

        ,CASE

           WHEN last_90_days_prcp_bal_avg_bfr > 0 AND last_90_days_prcp_bal_avg_bfr <= 500000 THEN '50万以下'

           WHEN last_90_days_prcp_bal_avg_bfr <= 1500000                                      THEN '50-150w'

           WHEN last_90_days_prcp_bal_avg_bfr <= 3000000                                      THEN '150-300w'

           WHEN last_90_days_prcp_bal_avg_bfr >= 3000000                                      THEN '300w以上'

         END 客户分段



        --------统计客户数字段

        ,count(CASE                  WHEN efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' THEN cst_id                END) AS 交接前非有效户

		,count(CASE                  WHEN ( efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' ) AND efe_cst_ind_aft_3_month = '1' THEN cst_id                END) AS 交接前非有效户交接后3个月是有效户

        ,count(CASE                  WHEN ( efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' ) AND efe_cst_ind_aft_6_month = '1' THEN cst_id                END) AS 交接前非有效户交接后6个月是有效户

        ,count(CASE                  WHEN ( efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' ) AND efe_cst_ind_aft_12_month = '1' THEN cst_id                END) AS 交接前非有效户交接后12个月是有效户

        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' THEN cst_id                END) AS 交接前是有效户

        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' AND ( efe_cst_ind_aft_3_month = '0' OR efe_cst_ind_aft_3_month = '' ) THEN cst_id                END) AS 交接前是有效户交接后3个月非有效户

        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' AND ( efe_cst_ind_aft_6_month = '0' OR efe_cst_ind_aft_6_month = '' ) THEN cst_id                END) AS 交接前是有效户交接后6个月非有效户

        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' AND ( efe_cst_ind_aft_12_month = '0' OR efe_cst_ind_aft_12_month = '' ) THEN cst_id                END) AS 交接前是有效户交接后12个月非有效户



		--有效信贷户

		,count(CASE                  WHEN efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' THEN cst_id                END) AS 交接前非有效信贷户

		,count(CASE                  WHEN ( efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' ) AND efe_loan_cst_ind_aft_3_month = '1' THEN cst_id                END) AS 交接前非有效信贷户交接后3个月是有效信贷户

        ,count(CASE                  WHEN ( efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' ) AND efe_loan_cst_ind_aft_6_month = '1' THEN cst_id                END) AS 交接前非有效信贷户交接后6个月是有效信贷户

        ,count(CASE                  WHEN ( efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' ) AND efe_loan_cst_ind_aft_12_month = '1' THEN cst_id                END) AS 交接前非有效信贷户交接后12个月是有效信贷户

        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' THEN cst_id                END) AS 交接前是有效信贷户

        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' AND ( efe_loan_cst_ind_aft_3_month = '0' OR efe_loan_cst_ind_aft_3_month = '' ) THEN cst_id                END) AS 交接前是有效信贷户交接后3个月非有效信贷户

        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' AND ( efe_loan_cst_ind_aft_6_month = '0' OR efe_loan_cst_ind_aft_6_month = '' ) THEN cst_id                END) AS 交接前是有效信贷户交接后6个月非有效信贷户

        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' AND ( efe_loan_cst_ind_aft_12_month = '0' OR efe_loan_cst_ind_aft_12_month = '' ) THEN cst_id                END) AS 交接前是有效信贷户交接后12个月非有效信贷户





        ,count(CASE                  WHEN is_loan_continue = 1 THEN cst_id                END) AS 续贷客户数

        ,count(CASE                  WHEN is_loan_finish = 1 THEN cst_id                END) AS 贷款到期客户数

        ,count(CASE                  WHEN IS_CUR_DSTR_EXPIRE = 1 AND IS_CUR_CONTINUE = 1 THEN cst_id                END) AS 续存客户数

        ,count(CASE                  WHEN IS_CUR_DSTR_EXPIRE = 1 THEN cst_id                END) AS 存款到期客户数

        ,sum(CASE               	 WHEN last_90_days_gl_bal_avg_bfr > 0 THEN last_90_days_gl_bal_avg_bfr              END) 交接前3个月存款日均总规模

        -- ,count(CASE                  WHEN last_90_days_gl_bal_avg_bfr > 0 THEN cst_id                END) AS 交接前3个月存款日均人数

		,count( distinct cst_id) AS 交接前3个月存款日均人数

        ,sum(CASE            	     WHEN last_180_days_gl_bal_avg_aft > 0 THEN last_180_days_gl_bal_avg_aft              END) 交接后6个月存款日均总规模

        --,count(CASE                  WHEN last_180_days_gl_bal_avg_aft > 0 THEN cst_id                END) AS 交接后6个月存款日均人数

		,count( distinct cst_id) AS 交接后6个月存款日均人数

        ,sum(CASE            	     WHEN last_360_days_gl_bal_avg_aft > 0 THEN last_360_days_gl_bal_avg_aft              END) 交接后12个月存款日均总规模

        --,count(CASE                  WHEN last_360_days_gl_bal_avg_aft > 0 THEN cst_id                END) AS 交接后12个月存款日均人数

		,count( distinct cst_id) AS 交接后12个月存款日均人数

        ,sum(CASE              	     WHEN last_90_days_prcp_bal_avg_bfr > 0 THEN last_90_days_prcp_bal_avg_bfr              END) 交接前3个月贷款日均总规模

        --,count(CASE                  WHEN last_90_days_prcp_bal_avg_bfr > 0 THEN cst_id                END) AS 交接前3个月贷款日均人数

		,count( distinct cst_id) AS 交接前3个月贷款日均人数

        ,sum(CASE                    WHEN last_180_days_prcp_bal_avg_aft > 0 THEN last_180_days_prcp_bal_avg_aft              END) 交接后6个月贷款日均总规模

        --,count(CASE                  WHEN last_180_days_prcp_bal_avg_aft > 0 THEN cst_id                END) AS 交接后6个月贷款日均人数

		,count( distinct cst_id) AS 交接后6个月贷款日均人数

        ,sum(CASE                    WHEN last_360_days_prcp_bal_avg_aft > 0 THEN last_360_days_prcp_bal_avg_aft              END) 交接后12个月贷款日均总规模

        --,count(CASE                  WHEN last_360_days_prcp_bal_avg_aft > 0 THEN cst_id                END) AS 交接后12个月贷款日均人数

		,count( distinct cst_id) AS 交接后12个月贷款日均人数

        ,count(CASE                  WHEN exe_intr_rate_bfr > exe_intr_rate_aft THEN cst_id                END) AS 执行利率下降

        ,count(CASE                  WHEN exe_intr_rate_bfr = exe_intr_rate_aft THEN cst_id                END) AS 执行利率不变

        ,count(CASE                  WHEN exe_intr_rate_bfr < exe_intr_rate_aft THEN cst_id                END) AS 执行利率上升

        ,count(CASE                  WHEN exe_intr_rate_bfr IS NOT NULL AND exe_intr_rate_aft IS NOT NULL THEN cst_id                END) AS 执行利率变化



		-- ,case when sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)) end as exe_intr_rate_bfr

		-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0)) end as exe_intr_rate_aft

			-- --分子分母拆开，方便后面汇总

	   -- ,sum(coalesce(exe_intr_rate_bfr_fenzi,0)) as exe_intr_rate_bfr_fenzi

	   -- ,sum(coalesce(exe_intr_rate_bfr_fenmu,0)) as exe_intr_rate_bfr_fenmu

       -- ,sum(coalesce(exe_intr_rate_aft_fenzi,0)) as exe_intr_rate_aft_fenzi

	   -- ,sum(coalesce(exe_intr_rate_aft_fenmu,0)) as exe_intr_rate_aft_fenmu

		--,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_aft_fenmu,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-case when sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_bfr_fenmu,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)) AS 执行利率变化绝对值

		--,case when case when sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_bfr_fenmu,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0

		--	 then (case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_aft_fenmu,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-case when sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_bfr_fenmu,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)))/(case when sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_bfr_fenmu,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0))) AS 执行利率变化相对值



        ,count(CASE                  WHEN new_sdt_cnt > 0 AND no_sdt_bfr = 1 THEN cst_id                END) AS 新增随贷通客户数

        ,count(CASE                  WHEN no_sdt_bfr = 1 THEN cst_id                END) AS 交接前非随贷通客户

        ,sum(CASE              	     WHEN ftp_3_month_bfr IS NOT NULL THEN ftp_3_month_bfr              END) 交接前3个月FTP月均总规模

        --,count(CASE                  WHEN ftp_3_month_bfr IS NOT NULL THEN cst_id                END) AS 交接前3个月FTP月均人数

		,count( distinct cst_id) AS 交接前3个月FTP月均人数

        ,sum(CASE                    WHEN ftp_6_month_aft IS NOT NULL THEN ftp_6_month_aft              END) 交接后6个月FTP月均总规模

        --,count(CASE                  WHEN ftp_6_month_aft IS NOT NULL THEN cst_id                END) AS 交接后6个月FTP月均人数

		,count( distinct cst_id) AS 交接后6个月FTP月均人数

        ,sum(CASE                    WHEN ftp_12_month_aft IS NOT NULL THEN ftp_12_month_aft              END) 交接后12个月FTP月均总规模

        --,count(CASE                  WHEN ftp_12_month_aft IS NOT NULL THEN cst_id                END) AS 交接后12个月FTP月均人数

		,count( distinct cst_id) AS 交接后12个月FTP月均人数

		,mdf_type

		,sum(is_yr_new_hpn_amt) is_yr_new_hpn_amt

		,sum(mdf_ctr_bal) as mdf_ctr_bal

FROM    lab_bigdata_dev.mdf_data_feature_all_20220607

--from lab_bigdata_dev.mdf_data_feature_all_20220607_test

WHERE   dt = '202404'



GROUP BY prm_fh_org_nm , CASE

                           WHEN prm_cst_cnt <= 100 THEN '100以内'

                           WHEN prm_cst_cnt <= 300 THEN '100-300'

                           WHEN prm_cst_cnt <= 500 THEN '300-500'

                           WHEN prm_cst_cnt > 500  THEN '500以上'

                           ELSE NULL

                         END , qua_sub_cls_cd --接手人信贷调查资质

, empe_lqd_type --按交出人人事异动

, CASE

    WHEN last_90_days_prcp_bal_avg_bfr > 0 AND last_90_days_prcp_bal_avg_bfr <= 500000 THEN '50万以下'

    WHEN last_90_days_prcp_bal_avg_bfr <= 1500000                                      THEN '50-150w'

    WHEN last_90_days_prcp_bal_avg_bfr <= 3000000                                      THEN '150-300w'

    WHEN last_90_days_prcp_bal_avg_bfr >= 3000000                                      THEN '300w以上'

  END

  ,mdf_type;



ALTER TABLE lab_bigdata_dev.mdf_data_feature_zj_20221122 SET

COMMENT

'客户交接前后业务波动分析_总结1_原始数值';



-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_zj_2_20221122;

-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_zj_2_20221122

-- (

    -- 分行名称      STRING COMMENT '分行名称'

    -- ,mdf_type  string COMMENT '交接类型'

	-- ,type  STRING COMMENT '关联字段1'

    -- ,有效户流失率  decimal COMMENT ''

	-- ,有效户转化率  decimal COMMENT ''

    -- ,续贷率      decimal COMMENT ''

    -- ,续存率      decimal COMMENT ''

    -- ,增长率_贷款   decimal COMMENT ''

    -- ,增长率_存款   decimal COMMENT ''

    -- ,执行利率下降占比 decimal COMMENT ''

    -- ,配卡率      decimal COMMENT ''

    -- ,ftp涨跌幅   decimal COMMENT ''

	-- ,IS_YR_NEW_HPN_rate  decimal comment '本年新发生风险贷款率'

-- )

-- COMMENT

-- '客户交接前后业务波动分析_总结2_原始数值_比例'

-- PARTITIONED BY

-- (

    -- dt STRING

-- );



insert overwrite table lab_bigdata_dev.mdf_data_feature_zj_2_20221122 PARTITION (DT = '202404')



SELECT  分行名称

	,mdf_type

	,'1' AS type

	,CASE            WHEN sum(交接前是有效户) = 0 THEN 0            ELSE sum(交接前是有效户交接后12个月非有效户) / sum(交接前是有效户)          END 转化率1

	,CASE            WHEN sum(交接前非有效户) = 0 THEN 0            ELSE sum(交接前非有效户交接后12个月是有效户) / sum(交接前非有效户)          END 转化率2

	,CASE            WHEN sum(贷款到期客户数) = 0 THEN 0            ELSE sum(续贷客户数) / sum(贷款到期客户数)          END 续贷率

	,CASE            WHEN sum(存款到期客户数) = 0 THEN 0            ELSE sum(续存客户数) / sum(存款到期客户数)          END 续存率

	,CASE   WHEN (  CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数) END ) = 0 THEN 0

			ELSE ( ( CASE WHEN sum(交接后12个月贷款日均人数) = 0 THEN 0 ELSE sum(交接后12个月贷款日均总规模) / sum(交接后12个月贷款日均人数)  END  ) -

			( CASE WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) ) / ( CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0 ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) END 增长率_贷款

	,CASE WHEN ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) = 0 THEN 0

		  ELSE ( ( CASE WHEN sum(交接后12个月存款日均人数) = 0 THEN 0 ELSE sum(交接后12个月存款日均总规模) / sum(交接后12个月存款日均人数)  END  ) - (

		 CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0    ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数)  END  ) ) / ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) END 增长率_存款

	,CASE WHEN ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) ) = 0 THEN 0 ELSE sum(执行利率下降) / ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) )          END 执行利率下降占比

	,CASE WHEN sum(交接前非随贷通客户) = 0 THEN 0 ELSE sum(新增随贷通客户数) / sum(交接前非随贷通客户)          END 配卡率

	,CASE WHEN ( CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END ) = 0 THEN 0

		  ELSE ( (  CASE  WHEN sum(交接后12个月ftp月均人数) = 0 THEN 0   ELSE sum(交接后12个月ftp月均总规模) / sum(交接后12个月ftp月均人数)  END   ) - (

		  CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0    ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END   ) ) / (CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END )  END ftp涨跌幅

	,case when sum(mdf_ctr_bal)=0 then 0 else sum(is_yr_new_hpn_amt)/sum(mdf_ctr_bal) end as 	本年新发生风险贷款率

	-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0  and sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0  then  sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-

			  -- sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)) end AS 执行利率变化绝对值

	-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0  and sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 and sum(coalesce(exe_intr_rate_bfr_fenzi,0))>0 then  (sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-

			  -- sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)))/( sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0))) end AS 执行利率变化相对值

FROM    lab_bigdata_dev.mdf_data_feature_zj_20221122 a

where a . 分行名称 rlike '分行'

GROUP BY 分行名称 , mdf_type

union

SELECT  '全行' as 分行名称

		,mdf_type

        ,'1' AS type

        ,CASE            WHEN sum(交接前是有效户) = 0 THEN 0            ELSE sum(交接前是有效户交接后12个月非有效户) / sum(交接前是有效户)          END 转化率1

        ,CASE            WHEN sum(交接前非有效户) = 0 THEN 0            ELSE sum(交接前非有效户交接后12个月是有效户) / sum(交接前非有效户)          END 转化率2

        ,CASE            WHEN sum(贷款到期客户数) = 0 THEN 0            ELSE sum(续贷客户数) / sum(贷款到期客户数)          END 续贷率

        ,CASE            WHEN sum(存款到期客户数) = 0 THEN 0            ELSE sum(续存客户数) / sum(存款到期客户数)          END 续存率

        ,CASE   WHEN (  CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数) END ) = 0 THEN 0

				ELSE ( ( CASE WHEN sum(交接后12个月贷款日均人数) = 0 THEN 0 ELSE sum(交接后12个月贷款日均总规模) / sum(交接后12个月贷款日均人数)  END  ) -

				( CASE WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) ) / ( CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0 ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) END 增长率_贷款

        ,CASE WHEN ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) = 0 THEN 0

			  ELSE ( ( CASE WHEN sum(交接后12个月存款日均人数) = 0 THEN 0 ELSE sum(交接后12个月存款日均总规模) / sum(交接后12个月存款日均人数)  END  ) - (

             CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0    ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数)  END  ) ) / ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) END 增长率_存款

        ,CASE WHEN ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) ) = 0 THEN 0 ELSE sum(执行利率下降) / ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) )          END 执行利率下降占比

        ,CASE WHEN sum(交接前非随贷通客户) = 0 THEN 0 ELSE sum(新增随贷通客户数) / sum(交接前非随贷通客户)          END 配卡率

        ,CASE WHEN ( CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END ) = 0 THEN 0

			  ELSE ( (  CASE  WHEN sum(交接后12个月ftp月均人数) = 0 THEN 0   ELSE sum(交接后12个月ftp月均总规模) / sum(交接后12个月ftp月均人数)  END   ) - (

			  CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0    ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END   ) ) / (CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END )  END ftp涨跌幅

        ,case when sum(mdf_ctr_bal)=0 then 0 else sum(is_yr_new_hpn_amt)/sum(mdf_ctr_bal) end as 	本年新发生风险贷款率

		-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0  and sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0  then  sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-

				  -- sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)) end AS 执行利率变化绝对值

		-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0  and sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 and sum(coalesce(exe_intr_rate_bfr_fenzi,0))>0 then  (sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-

				  -- sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)))/( sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0))) end AS 执行利率变化相对值

FROM    lab_bigdata_dev.mdf_data_feature_zj_20221122

GROUP BY mdf_type

;







-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_zj_3_20221122;



-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_zj_3_20221122

-- (

    -- 分行名称      STRING COMMENT '分行名称'

    -- ,转化率_是转非  BIGINT COMMENT ''

    -- ,转化率_非转是  BIGINT COMMENT ''

    -- ,续贷率      BIGINT COMMENT ''

    -- ,续存率      BIGINT COMMENT ''

    -- ,增长率_贷款   BIGINT COMMENT ''

    -- ,增长率_存款   BIGINT COMMENT ''

    -- ,执行利率下降占比 BIGINT COMMENT ''

    -- ,配卡率      BIGINT COMMENT ''

    -- ,ftp涨跌幅   BIGINT COMMENT ''

	-- , IS_YR_NEW_HPN_rate  BIGINT comment '本年新发生风险贷款率'

-- )

-- COMMENT

-- '客户交接前后业务波动分析_总结3_排序'

-- PARTITIONED BY

-- (

    -- dt STRING

-- );



insert overwrite table lab_bigdata_dev.mdf_data_feature_zj_3_20221122 PARTITION (DT = '202404')

SELECT  a . 分行名称

    ,row_number() over(partition by '1' order by a.有效户流失率 desc) as 转化率_是转非

    ,row_number() over(partition by '1' order by a.有效户转化率 asc) as 转化率_非转是

    ,row_number() over(partition by '1' order by a.续贷率 asc) as 续贷率

    ,row_number() over(partition by '1' order by a.续存率 asc) as 续存率

    ,row_number() over(partition by '1' order by a.增长率_贷款 asc) as 增长率_贷款

    ,row_number() over(partition by '1' order by a.增长率_存款 asc) as 增长率_存款

    ,row_number() over(partition by '1' order by a.执行利率下降占比 desc) as 执行利率下降占比

    ,row_number() over(partition by '1' order by a.配卡率 asc) as 配卡率

    ,row_number() over(partition by '1' order by a.ftp涨跌幅 asc) as ftp涨跌幅

	,row_number() over(partition by '1' order by a.IS_YR_NEW_HPN_rate desc) as 本年新发生风险贷款率

FROM    lab_bigdata_dev.mdf_data_feature_zj_2_20221122 a

where a . 分行名称 rlike '分行'

and a.dt='202404'

and mdf_type='交接客户'

;
**b交接分析202304.sql
-- **********************************************************************

--dt取202304对应的交接时间范围 2022年6月-2023年4月

--dt取202310对应的交接时间范围 20220601-20230430,应该是20231031， 时间未到，先用20231031。未交接客户取20231231时点，未到期、未结清合同的所有合同金额，合同编号取最小一笔；

--交接客户取交接时间在20221101-20231031，第一笔交接的合同编号，及该笔合同对应的合同金额。交接客户23万，未全量客户75万

---修改的地方： edw.dws_bus_fin_ftp_act_smy_inf_dd  t1 --FTP结果集，人事变动 （未交接无人事变动，该逻辑删除）select * from lab_bigdata_dev.202304_test_mdf_data_feature_all_20230531 where dt='202403';

--参数 20221231 20220601 20230430  ，表前缀lab_bigdata_dev.202304 ,'20220601-20230430' ，20240430替换为系统时间上月月末，

/* --以下是通用

drop table if exists lab_bigdata_dev.ftp_all_month;

create table if not exists lab_bigdata_dev.ftp_all_month as

select cif_key as cst_id

    ,to_char(dateadd(to_date(t1.dt,'yyyymmdd'),-1,'dd'),'yyyymmdd') as dt

    ,SUM(coalesce(DECODE(t1.AL_TYPE, '1', 1, - 1) * ( t1.ACC_INT_MONTH_AJUST * t1.EXCHANGE_TO_CNY_RATE - t1.FTP_INT_MONTH_AJUST * t1.EXCHANGE_TO_CNY_RATE ),0)) as ftp_data  --月FTP

from app_iftp.iftp_tpdm_rst_ftp  t1  --20180101 只保留月初

where to_char(dateadd(to_date(t1.dt,'yyyymmdd'),-1,'dd'),'yyyymmdd') in

(

	select distinct dt

	from edw.dim_bus_com_date_st

	where dt>='20181231' and dt<= '20240430' and cur_mon_end=dt

	 )  --月末

and t1.dt<'20230430'

group by cif_key,dt

--FTP新表

union

select cst_id

    ,t1.dt

    ,SUM(DECODE(t1.AST_LBL_CD, '1', 1, - 1) * ( T1.intr_inc_xps_mon_acm * T2.avg_prc * 0.01 - T1.fnl_ftp_intr_mon_acm * T2.avg_prc * 0.01 )) as ftp_data   --月FTP

from edw.dws_bus_fin_ftp_act_smy_inf_dd  t1 --FTP结果集 20230428之后

LEFT JOIN    EDW.DIM_BUS_COM_EXR_INF_DD T2 --汇率表 CNY_EXR 折人民币汇率

ON      T1.CCY_CD = T2.CCY_CD

AND     T2.DT = '20240430'

where (t1.dt in   (

					select distinct dt

					from edw.dim_bus_com_date_st

					where dt>='20181231' and dt<= '20240430' and cur_mon_end=dt

				 )  --月末

and t1.dt>='20230430'

)

or t1.dt = '20240430'

group by  cst_id

    ,t1.dt

;

--新的管户

drop table if exists lab_bigdata_dev.mng_all_cst_id;

create table if not exists lab_bigdata_dev.mng_all_cst_id as

select  t2.cst_id

		,t2.dt

		,t3.prm_mgr_id

		,t2.file_dt



from edw.dws_cst_bas_inf_dd t2

left join adm_pub_app.ADM_PBLC_CST_PRM_MNG_INF_DD  t3

on t2.cst_id=t3.cst_id

and ( (t3.dt in   (

					select distinct dt

					from edw.dim_bus_com_date_st

					where dt>='20181231' and dt<= '20240430' and cur_mon_end=dt

				 )  --月末

		and t3.dt>='20230430'

		)

	or t3.dt = '20240430'

	)

	and t3.dt=t2.dt

where ( (t2.dt in   (

					select distinct dt

					from edw.dim_bus_com_date_st

					where dt>='20181231' and dt<= '20240430' and cur_mon_end=dt

				 )  --月末

		and t2.dt>='20230430'

)

or t2.dt = '20240430'

)

union

--旧的管户

select

t2.cst_id,t2.dt,t2.prm_mgr_id,t2.file_dt

from edw.dws_cst_bas_inf_dd t2

where (t2.dt in   (

					select distinct dt

					from edw.dim_bus_com_date_st

					where dt>='20181231' and dt<= '20240430' and cur_mon_end=dt

				 )  --月末

and t2.dt<'20230430'

)



;

	*/



/*app版本

统计口径：

1.增长率_贷款=交接后户均贷款规模/交接前户均贷款规模-1

2.ftp涨跌幅=交接后户均月ftp/交接前户均月ftp-1

3.本年新发生风险贷款率=交接12个月后，本年新发生风险贷款余额/贷款余额（不含核销）

4.有效户流失率=交接前是有效户交接后12个月非有效户/交接前是有效户

5.有效户转化率=交接前非有效户交接后12个月是有效户/交接前非有效户

6.续贷率=续贷客户数/贷款到期客户数

7.续存率=续存或自动转存户数/销户或到期户数 ,限整存整取业务

8.增长率_存款=交接后户均存款规模/交接前户均存款规模-1，限交接的信贷客户。

9.执行利率下降占比=交接后续贷且执行利率下降客户数/交接后12个月内续贷的客户数

10.新配卡率=交接后新增随贷通客户数/交接前非随贷通客户数

11.观察点dt取202304对应的交接时间范围 2022年6月-2023年4月，若客户如有多次交接，取统计时间范围内第一次交接时间，表现期为交接后12个月，客户范围限交接的信贷客户，全量客户指全量信贷客户。

12.调动时人事异动时间：通过交接时间前后1个月内查找人事异动时间。

13.雷达图面积越大表示综合得分越高，表现越好。雷达图中数值=14-该指标在13家分行的排名，即倒序排名。

14.更多维度的分析，请通过电脑端查看，数据门户-数字化服务-数据分析平台-信贷交接分析PC版。



统计口径说明：



dt 取202105对应的交接时间范围 2020年6月-2021年5月。



dt 取202204对应的交接时间范围 2021年6月-2022年4月



dt 取202304对应的交接时间范围 2022年6月-2023年4月



若客户如有多次交接，取统计时间范围内第一次交接时间。



3、续贷率=续贷户数/结清户数*100%



（1）结清业务：贷款、随贷通卡（不包含如下：员工贷款、助兴通、消费性贷款、消费性随贷通卡、贸易融资、票据业务）



（2）续贷业务：一般贷款（含消费）、随贷通卡、承兑（不含承兑垫款）、贴现、贸易融资、保函、代理贷款、合作贷款、委托贷款



（3）结清户数：统计时间范围内有业务结清的总客户数



（4）续贷户数：统计时间范围有业务结清且发生续贷或同一风险控制号的客户发生业务的总客户数



（5）统计时间：交接后12个月内，信贷合同结清后3个月内发生续贷的客户。



4、续存率=续存或自动转存户数/销户或到期户数*100%



（1）业务范围：整存整取；



（2）续存户数：当月有账户销户且当月有账户开立的客户数；



（3）自动转存户数：当月有账户到期自动转存的客户数；



（4）销户户数：当月有账户销户的客户数；



（5）到期户数：当月有账户到期的客户数。



5、交接前后月数：根据自然月取数。例如客户2020年1月10日交接，交接后三个月为2020年2月、2020年3月、2020年4月。



6、调动时人事异动时间：通过交接时间前后1个月内查找人事异动时间。

*/

-- **********************************************************************

--- 未交接表主表 合同、贷款规模

DROP TABLE IF EXISTS lab_bigdata_dev.202304_no_mdf_amt; --67万 全量客户贷款规模

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.202304_no_mdf_amt AS

SELECT t.cst_id

		,'20221231'     AS MDF_DT  --没有交接的客户，人为给一个时间点，当做交接时间

		,c.prm_org_id   as mdf_qorg_cd ---变更前机构代码

		,c.prm_mgr_id   as mdf_qppl_cd ---变更前人员代码 --主管护客户经理工号

		,c.prm_org_id   as aft_mdf_org_cd ---变更后机构代码

		,c.prm_mgr_id   as aft_mdf_ppl_cd ---变更后人员代码 --主管护客户经理工号

		,'全量客户' mdf_type  --全量客户类型：全量客户 全量客户

		,min(t.busi_ctr_id) busi_ctr_id

	,sum(t.ctr_amt) AS ctr_amt

FROM    edw.dim_bus_loan_ctr_inf_dd t --信贷合同信息

LEFT JOIN    adm_pub.adm_csm_cbas_mng_inf_dd AS c --客户集市-客户基础-客户管户信息

ON      t.cst_id = c.cst_id

AND     c.dt = '20221231'

WHERE   t.dt = '20221231'

AND     t.bus_cd NOT IN ( 'A' , 'B' , 'H' , 'I' , 'O' , 'P' ) --剔除 员工贷款

AND     ( t.chnl_cd <> 'L08' OR t.pd_cd <> '201050101040335' ) --剔除 小鱼分期

AND     t.pd_cd <> '201050101040332' --剔除 蚂蚁借呗

AND     t.pd_cd <> '201050101040319' --剔除百度分期贷

AND     ( t.pd_cd NOT IN ( '201050102010146' , '201050101040348' )  OR t.frz_sts_cd <> '' ) --剔除未签约的泰e贷

AND     (    (

					( t.ctr_bal > 0  --余额>0

					  OR ( t.ctr_bal IS NULL AND     nvl(t.crc_ind, '0') = '0' )  --非循环贷 余额为空

					  OR ( ( nvl(t.crc_ind, '0') <> '0'   OR t.pd_cd LIKE '2010503%' ) AND     ( t.ctr_bal = 0  OR t.ctr_bal IS NULL )  AND     t.apnt_mtu_dt >= t.dt )  --（循环贷 或 随贷通） 且 余额为0 且 未到期

					)

				 AND     nvl(t.frz_sts_cd, ' ') NOT IN ( '3' , '4' )  --3	到期失效  4	终止失效  冻结状态非到期失效，非终止失效



				)

		  OR ( t.ctr_bal > 0 AND     t.pd_cd LIKE '2010503%'  AND     t.apnt_mtu_dt <= t.dt  AND     t.frz_sts_cd IN ( '3' , '4' ) )  --余额>0  且 随贷通 且到期 且 冻结状态是到期失效、终止失效

		  ) ----未终结、未到期业务



AND     length(t.cst_id) = '10' --剔除合作行客户

group by t.cst_id

		,'20221231'       --没有交接的客户，人为给一个时间点，当做交接时间

		,c.prm_org_id   ---变更前机构代码

		,c.prm_mgr_id    ---变更前人员代码 --主管护客户经理工号

		,'全量客户'  --全量客户类型：全量客户 全量客户

--where t.cst_id<>'1696275240'  --交接表客户号匹配出错

;



--- 主表，就是样本表，包括全量客户+未全量客户： 981274，全量客户23万，未全量客户75万

drop table if exists lab_bigdata_dev.202304_mdf_nomdf_sample;

create table if not exists lab_bigdata_dev.202304_mdf_nomdf_sample as --

select  cst_id

    ,MDF_DT

    ,mdf_qorg_cd ---变更前机构代码

    ,mdf_qppl_cd ---变更前人员代码

    ,aft_mdf_org_cd ---变更后机构代码

    ,aft_mdf_ppl_cd ---变更后人员代码

   ,busi_ctr_id

   ,'交接客户' mdf_type --全量客户类型：全量客户 未全量客户

    ,ctr_amt as mdf_ctr_amt

from

	(select *

		,row_number() over(partition by cst_id order by MDF_DT asc) as ranking

	from

		(select t1.obj_id as busi_ctr_id

			,t2.cst_id

			,SUBSTR(MDF_TM, 1, 8) as MDF_DT  --变更时间

			,mdf_qorg_cd   ---变更前机构代码

			,mdf_qppl_cd  -----变更前人员代码

			,aft_mdf_org_cd  ----变更后机构代码

			,aft_mdf_ppl_cd  ----变更后人员代码

			,t2.ctr_amt

		from EDW.DWD_BUS_LOAN_MNG_MDF_RCD_DD t1  --管理人变更记录

		left join  edw.dim_bus_loan_ctr_inf_dd t2

		on t1.obj_id = t2.busi_ctr_id

		and t2.dt = '20230430'

		WHERE   t1.DT = '20230430'

		AND     t1.OBJ_TYP = 'Loan'

		AND     SUBSTR(t1.MDF_TM, 1, 8) >= '20220601'  --变更时间

		AND     SUBSTR(t1.MDF_TM, 1, 8) <= '20230430'

		and     t1.obj_id is not null

	) ss

) sss

where ranking = 1   ----全量客户226726	226725

and coalesce(cst_id,'')<>''

union

--未全量客户

select  cst_id

    ,MDF_DT

    ,mdf_qorg_cd ---变更前机构代码

    ,mdf_qppl_cd ---变更前人员代码

    ,aft_mdf_org_cd ---变更后机构代码

    ,aft_mdf_ppl_cd ---变更后人员代码

	,busi_ctr_id

	,mdf_type

    ,ctr_amt as ctr_amt

from lab_bigdata_dev.202304_no_mdf_amt

where coalesce(cst_id,'')<>''

;





---交接前后日期 ，前3个月，后12个月，如果后3个月超过当前时间，则取当前时间

drop table if exists lab_bigdata_dev.202304_mdf_data;

create table if not exists lab_bigdata_dev.202304_mdf_data as

select cst_id

  ,MDF_DT

  ,mdf_type

  ,mdf_bfr_12_month

  ,mdf_bfr_11_month

  ,mdf_bfr_10_month

  ,mdf_bfr_9_month

  ,mdf_bfr_8_month

  ,mdf_bfr_7_month

  ,mdf_bfr_6_month

  ,mdf_bfr_5_month

  ,mdf_bfr_4_month

  ,mdf_bfr_3_month

  ,mdf_bfr_2_month

  ,mdf_bfr_1_month

  ,min(mdf_aft_1_month) as mdf_aft_1_month

  ,min(mdf_aft_2_month) as mdf_aft_2_month

  ,min(mdf_aft_3_month) as mdf_aft_3_month

  ,min(mdf_aft_4_month) as mdf_aft_4_month

  ,min(mdf_aft_5_month) as mdf_aft_5_month

  ,min(mdf_aft_6_month) as mdf_aft_6_month

  ,min(mdf_aft_7_month) as mdf_aft_7_month

  ,min(mdf_aft_8_month) as mdf_aft_8_month

  ,min(mdf_aft_9_month) as mdf_aft_9_month

  ,min(mdf_aft_10_month) as mdf_aft_10_month

  ,min(mdf_aft_11_month) as mdf_aft_11_month

  ,min(mdf_aft_12_month) as mdf_aft_12_month

from

(

select  cst_id

    ,MDF_DT

	,mdf_type

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-12)) as string),'-','') as mdf_bfr_12_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-11)) as string),'-','') as mdf_bfr_11_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-10)) as string),'-','') as mdf_bfr_10_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-9)) as string),'-','') as mdf_bfr_9_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-8)) as string),'-','') as mdf_bfr_8_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-7)) as string),'-','') as mdf_bfr_7_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-6)) as string),'-','') as mdf_bfr_6_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-5)) as string),'-','') as mdf_bfr_5_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-4)) as string),'-','') as mdf_bfr_4_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-3)) as string),'-','') as mdf_bfr_3_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-2)) as string),'-','') as mdf_bfr_2_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-1)) as string),'-','') as mdf_bfr_1_month



    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),1)) as string),'-','') as mdf_aft_1_month

    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),2)) as string),'-','') as mdf_aft_2_month

    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),3)) as string),'-','') as mdf_aft_3_month

    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),4)) as string),'-','') as mdf_aft_4_month

    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),5)) as string),'-','') as mdf_aft_5_month

    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),6)) as string),'-','') as mdf_aft_6_month

    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),7)) as string),'-','') as mdf_aft_7_month

    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),8)) as string),'-','') as mdf_aft_8_month

    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),9)) as string),'-','') as mdf_aft_9_month

    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),10)) as string),'-','') as mdf_aft_10_month

    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),11)) as string),'-','') as mdf_aft_11_month

    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),12)) as string),'-','') as mdf_aft_12_month

from lab_bigdata_dev.202304_mdf_nomdf_sample

union all

select cst_id

    ,MDF_DT

	,mdf_type

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-12)) as string),'-','') as mdf_bfr_12_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-11)) as string),'-','') as mdf_bfr_11_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-10)) as string),'-','') as mdf_bfr_10_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-9)) as string),'-','') as mdf_bfr_9_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-8)) as string),'-','') as mdf_bfr_8_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-7)) as string),'-','') as mdf_bfr_7_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-6)) as string),'-','') as mdf_bfr_6_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-5)) as string),'-','') as mdf_bfr_5_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-4)) as string),'-','') as mdf_bfr_4_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-3)) as string),'-','') as mdf_bfr_3_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-2)) as string),'-','') as mdf_bfr_2_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-1)) as string),'-','') as mdf_bfr_1_month

    ,'20240430' as mdf_aft_1_month

    ,'20240430' as mdf_aft_2_month

    ,'20240430' as mdf_aft_3_month

    ,'20240430' as mdf_aft_4_month

    ,'20240430' as mdf_aft_5_month

    ,'20240430' as mdf_aft_6_month

    ,'20240430' as mdf_aft_7_month

    ,'20240430' as mdf_aft_8_month

    ,'20240430' as mdf_aft_9_month

    ,'20240430' as mdf_aft_10_month

    ,'20240430' as mdf_aft_11_month

    ,'20240430' as mdf_aft_12_month

from lab_bigdata_dev.202304_mdf_nomdf_sample

) ss

group by cst_id

  ,MDF_DT

  ,mdf_type

  ,mdf_bfr_12_month

  ,mdf_bfr_11_month

  ,mdf_bfr_10_month

  ,mdf_bfr_9_month

  ,mdf_bfr_8_month

  ,mdf_bfr_7_month

  ,mdf_bfr_6_month

  ,mdf_bfr_5_month

  ,mdf_bfr_4_month

  ,mdf_bfr_3_month

  ,mdf_bfr_2_month

  ,mdf_bfr_1_month;





----有效户标识

drop table if exists lab_bigdata_dev.202304_mdf_data_efe_ind;

create table if not exists lab_bigdata_dev.202304_mdf_data_efe_ind as

select t1.cst_id

    ,MDF_DT

	,mdf_type

    ,max(case when t2.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then t2.efe_dep_cst_ind end) as efe_dep_cst_ind_bfr ----有效存款户

    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),3)) as string),'-',''),'20240430') then t2.efe_dep_cst_ind end) as efe_dep_cst_ind_aft_3_month

    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),6)) as string),'-',''),'20240430') then t2.efe_dep_cst_ind end) as efe_dep_cst_ind_aft_6_month

    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-',''),'20240430') then t2.efe_dep_cst_ind end) as efe_dep_cst_ind_aft_12_month

    ,max(case when t2.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then t2.efe_loan_cst_ind end) as efe_loan_cst_ind_bfr ----有效信贷户

    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),3)) as string),'-',''),'20240430') then t2.efe_loan_cst_ind end) as efe_loan_cst_ind_aft_3_month

    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),6)) as string),'-',''),'20240430') then t2.efe_loan_cst_ind end) as efe_loan_cst_ind_aft_6_month

    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-',''),'20240430') then t2.efe_loan_cst_ind end) as efe_loan_cst_ind_aft_12_month



    ,max(case when t2.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then t2.efe_cst_ind end) as efe_cst_ind_bfr ----有效户

    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),3)) as string),'-',''),'20240430') then t2.efe_cst_ind end) as efe_cst_ind_aft_3_month

    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),6)) as string),'-',''),'20240430') then t2.efe_cst_ind end) as efe_cst_ind_aft_6_month

    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-',''),'20240430') then t2.efe_cst_ind end) as efe_cst_ind_aft_12_month

from lab_bigdata_dev.202304_mdf_data t1

left join adm_pub.adm_csm_cbas_ind_inf_dd t2

on t1.cst_id = t2.cst_id

    and t2.dt in

    (

	select distinct mdf_bfr_1_month from lab_bigdata_dev.202304_mdf_data

    union

    select distinct mdf_aft_3_month from lab_bigdata_dev.202304_mdf_data

    union

    select distinct mdf_aft_6_month from lab_bigdata_dev.202304_mdf_data

    union

    select distinct mdf_aft_12_month from lab_bigdata_dev.202304_mdf_data

    ) ----交接前1个月

   -- and t2.dt >= replace(cast(last_day(add_months(to_date('20220601','yyyymmdd'),-1)) as string),'-','')  --2023年5月底

group by t1.cst_id

    ,MDF_DT,mdf_type;





-----存款月日均

drop table if exists lab_bigdata_dev.202304_mdf_data_dep;

create table if not exists lab_bigdata_dev.202304_mdf_data_dep as

select t1.cst_id

    ,t1.MDF_DT,mdf_type

	,sum(case when t3.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then coalesce(t3.last_360_days_gl_bal_acml,0) end)/360 as last_360_days_gl_bal_avg_bfr

    ,sum(case when t3.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then coalesce(t3.last_90_days_gl_bal_acml,0) end)/90 as last_90_days_gl_bal_avg_bfr

    ,sum(case when t3.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),6)) as string),'-',''),'20240430')  then coalesce(t3.last_180_days_gl_bal_acml,0) end)/180 as last_180_days_gl_bal_avg_aft

    ,sum(case when t3.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','') ,'20240430') then coalesce(t3.last_360_days_gl_bal_acml,0) end)/360 as last_360_days_gl_bal_avg_aft

from lab_bigdata_dev.202304_mdf_data t1

left join edw.dim_bus_dep_act_inf_dd t2

on t1.cst_id = t2.cst_id and t2.dt = '20240430'

left join edw.dws_bus_dep_act_acm_inf_dd t3

on t2.dep_act_id = t3.dep_act_id

    and t3.dt in

    (

	select distinct mdf_bfr_1_month from lab_bigdata_dev.202304_mdf_data

    union

    select distinct mdf_aft_6_month from lab_bigdata_dev.202304_mdf_data

    union

    select distinct mdf_aft_12_month from lab_bigdata_dev.202304_mdf_data

    )

   -- and t3.dt >= replace(cast(last_day(add_months(to_date('20220601','yyyymmdd'),-1)) as string),'-','')

group by t1.cst_id,t1.MDF_DT,mdf_type;





--select * from lab_bigdata_dev.202304_mdf_data_loan

---贷款月日均

drop table if exists lab_bigdata_dev.202304_mdf_data_loan;

create table if not exists lab_bigdata_dev.202304_mdf_data_loan as

select t1.cst_id

    ,t1.MDF_DT,mdf_type

	,sum(case when t3.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then coalesce(t3.last_360_days_prcp_bal_acml,0) end)/360 as last_360_days_prcp_bal_avg_bfr

    ,sum(case when t3.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then coalesce(t3.last_90_days_prcp_bal_acml,0) end)/90 as last_90_days_prcp_bal_avg_bfr

    ,sum(case when t3.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),6)) as string),'-',''),'20240430') then coalesce(t3.last_180_days_prcp_bal_acml,0) end)/180 as last_180_days_prcp_bal_avg_aft

    ,sum(case when t3.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-',''),'20240430') then coalesce(t3.last_360_days_prcp_bal_acml,0) end)/360 as last_360_days_prcp_bal_avg_aft

from lab_bigdata_dev.202304_mdf_data t1

left join edw.loan_business_contract t2

on t1.cst_id = t2.customerid and t2.dt = '20240430'

left join edw.dws_bus_loan_dbil_acm_inf_dd t3

on t2.serialno = t3.bus_ctr_id

    and t3.dt in

    (select distinct mdf_bfr_1_month from lab_bigdata_dev.202304_mdf_data

    union

    select distinct mdf_aft_6_month from lab_bigdata_dev.202304_mdf_data

    union

    select distinct mdf_aft_12_month from lab_bigdata_dev.202304_mdf_data )

   -- and t3.dt >= replace(cast(last_day(add_months(to_date('20220601','yyyymmdd'),-1)) as string),'-','')

group by t1.cst_id

    ,t1.MDF_DT,mdf_type

;





---续贷情况

drop table if exists lab_bigdata_dev.202304_mdf_data_cur_rnw;

create table if not exists lab_bigdata_dev.202304_mdf_data_cur_rnw as

select t1.cst_id

    ,t1.MDF_DT,mdf_type

    ,max(case when t2.cst_id is not null then 1 else 0 end) as is_loan_finish  ----  交接后12个月结清

    ,max(case when SUBSTR(T2.RNW_TYPE, 1, 1) IN ( '1' , '2' ) then 1 else 0 end) as is_loan_continue ---- 交接后12个月是否存在续贷 续贷类型：1-客户本身续贷 2-同一风险控制号续贷

from lab_bigdata_dev.202304_mdf_data t1

left join app_ado.FCT_SAM_RSK_CST_LN_PYF_LST_CUR_MON t2 --近一个月经营性客户续贷管理清单(同一风险控制号) 20201231

on t1.cst_id = t2.cst_id

    and t2.dt > t1.MDF_DT   ---交接后

    and t2.dt <=  replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')   ---交接后12个月内

    and t2.dt >= '20220601'

group by t1.cst_id,t1.MDF_DT,mdf_type;





---整取存款续存情况

drop table if exists lab_bigdata_dev.202304_mdf_data_xu_cun;

create table if not exists lab_bigdata_dev.202304_mdf_data_xu_cun as

select t1.CST_ID

    ,t1.MDF_DT,mdf_type

    ,MAX(CASE WHEN

 (

                T2.ACT_DSTR_ACT_DT >= t1.MDF_DT    --账户销户日期

                and t2.ACT_DSTR_ACT_DT <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')

            )  ----销户

        or (

                T3.TRX_DT >=  t1.MDF_DT

                AND T3.TRX_DT <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')  ---到期

           ) THEN '1' ELSE '0' END) AS IS_CUR_DSTR_EXPIRE  --到期或销户

    ,MAX(CASE WHEN

            (

                T4.TRX_DT >= T1.MDF_DT

                AND T4.TRX_DT <=replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')

        )        -----自动转存

        or (

                T2.OPN_DT >= T1.MDF_DT

                AND T2.OPN_DT <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')

        )   then '1' else '0' end) as  IS_CUR_CONTINUE     ------续存

from lab_bigdata_dev.202304_mdf_data t1

left join edw.dim_bus_dep_act_inf_dd t2

on t1.cst_id = t2.cst_id

    and t2.dt = '20240430'

    and t2.DEP_CLS_CD in ('25','26')   ----个人整存整取存款、个人银行卡整存整取存款

LEFT JOIN EDW.DWD_BUS_DEP_BAL_CHG_DTL_DI t3 --最小Dt19980731

ON T2.DEP_ACT_ID = T3.DEP_ACT_ID

    AND T3.DT <= '20240430'

    AND t3.CRD_AND_DBT_IND = 'D'  --借贷标志：转出

    and T3.DT >= '20220601'

    AND COALESCE(T3.RVS_IND,'0') = '0' AND COALESCE(T3.RVSD_IND,'0') = '0'  --RVS_IND冲正标志 RVSD_IND被冲正标志 非冲正     0:正常， 1:冲正， 2:撤销

    AND T3.TXT_CODE NOT IN ('DP0212','DP0210','DP1000')  --入息:DP0212， 结息:DP0210， 付息:DP1000 和 ''

left join EDW.DWD_BUS_DEP_MTU_AUTO_RDPS_REG_DD T4  ----定期到期自动转存登记簿 最小dt20210902

ON T2.DEP_ACT_ID = T4.DEP_ACT_ID

    AND T4.DT = '20240430'

GROUP BY  t1.CST_ID

  ,t1.MDF_DT,mdf_type

;





----续贷前后利率变化

----加权执行利率 = （借据金额*借据期限*借据利率）/（借据金额*借据期限）

drop table if exists lab_bigdata_dev.202304_mdf_data_intr_rate;

create table if not exists lab_bigdata_dev.202304_mdf_data_intr_rate as

select cst_id ,MDF_DT,mdf_type

    ,sum(case when is_xudai_bfr = 1 and amt_bfr > 0 and trm_month_bfr >0 then amt_bfr*trm_month_bfr*exe_intr_rat_bfr end)/sum(case when is_xudai_bfr = 1 and amt_bfr > 0 and trm_month_bfr >0 then amt_bfr*trm_month_bfr end) as exe_intr_rate_bfr

    ,sum(case when is_xudai_aft = 1 and amt_aft > 0 and trm_month_aft >0 then amt_aft*trm_month_aft*exe_intr_rat_aft end)/sum(case when is_xudai_aft = 1 and amt_aft > 0 and trm_month_aft >0 then amt_aft*trm_month_aft end) as exe_intr_rate_aft



	--分子分母拆开，方便后面汇总

	 ,sum(case when is_xudai_bfr = 1 and amt_bfr > 0 and trm_month_bfr >0 then amt_bfr*trm_month_bfr*exe_intr_rat_bfr end) as exe_intr_rate_bfr_fenzi

	 ,sum(case when is_xudai_bfr = 1 and amt_bfr > 0 and trm_month_bfr >0 then amt_bfr*trm_month_bfr end) as exe_intr_rate_bfr_fenmu

    ,sum(case when is_xudai_aft = 1 and amt_aft > 0 and trm_month_aft >0 then amt_aft*trm_month_aft*exe_intr_rat_aft end)  as exe_intr_rate_aft_fenzi

	,sum(case when is_xudai_aft = 1 and amt_aft > 0 and trm_month_aft >0 then amt_aft*trm_month_aft end) as exe_intr_rate_aft_fenmu



from

		(select distinct t1.cst_id

			,t1.MDF_DT,mdf_type

			,coalesce(t3.BUSINESSSUM,0) as amt_bfr --结清合同金额

			,coalesce(t5.BUSINESSSUM,0) as amt_aft --续贷合同金额

			,coalesce(MONTHS_BETWEEN(to_date(REPLACE(t3.MATURITY, '/', ''),'yyyymmdd'),to_date(REPLACE(t3.PUTOUTDATE, '/', ''),'yyyymmdd')),0) as trm_month_bfr ---约定到期-发放到期

			,coalesce(MONTHS_BETWEEN(to_date(REPLACE(t5.MATURITY, '/', ''),'yyyymmdd'),to_date(REPLACE(t5.PUTOUTDATE, '/', ''),'yyyymmdd')),0) as trm_month_aft ---约定到期-发放到期

			,coalesce(t3.businessrate,0)   as  exe_intr_rat_bfr  --结清合同利率

			,coalesce(t5.businessrate,0)   as  exe_intr_rat_aft

			,case when t3.serialno is not null then 1 else 0 end as is_xudai_bfr

			,case when t5.serialno is not null then 1 else 0 end as is_xudai_aft

		from lab_bigdata_dev.202304_mdf_data t1

		left join app_ado.FCT_SAM_RSK_CST_LN_PYF_LST_CUR_MON t2  --近一个月经营性客户续贷管理清单(同一风险控制号)

		on t1.cst_id = t2.cst_id

			and t2.dt > t1.MDF_DT

			and t2.dt <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')  ---交接后12个月

			and t2.dt >= '20220601'

			and SUBSTR(T2.RNW_TYPE, 1, 1) IN ( '1' , '2' )

		left join edw.loan_business_contract t3

		on t2.PYF_BUSI_CTR_ID = t3.serialno  --PYF_BUSI_CTR_ID结清合同流水号

			and t3.dt = '20240430'

			and t3.businessrate is not null

			and t3.businessrate > 0

		left join app_ado.FCT_SAM_RSK_CST_LN_PYF_LST_CUR_MON t4 --近一个月经营性客户续贷管理清单(同一风险控制号)

		on t1.cst_id = t4.cst_id

			and t4.dt > t1.MDF_DT

			and t4.dt <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')  ---交接后12个月

			and t4.dt >= '20220601'

			and SUBSTR(T2.RNW_TYPE, 1, 1) IN ( '1' , '2' )

		left join edw.loan_business_contract t5

		on t4.RNW_BUSI_CTR_ID = t5.serialno  --续贷合同流水号

			and t5.dt = '20240430'

			and t5.businessrate is not null

			and t5.businessrate > 0

		) ss

group by cst_id,MDF_DT,mdf_type;



---综合ftp收入贡献  表有改动江杰

--FTP新旧表拼接  全量表，后续不需要再跑





drop table if exists lab_bigdata_dev.202304_mdf_data_ftp_1;

create table if not exists lab_bigdata_dev.202304_mdf_data_ftp_1 as

SELECT  t1.cst_id,t1.MDF_DT,mdf_type

    ,SUM(ftp_data)/3 AS ftp_3_month_bfr

FROM  lab_bigdata_dev.202304_mdf_data t1

left join lab_bigdata_dev.ftp_all_month t2

on t1.cst_id = t2.cst_id

    and t2.dt >= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-3)) as string),'-','')

    and t2.dt <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','')

group by t1.cst_id,t1.MDF_DT,mdf_type;





drop table if exists lab_bigdata_dev.202304_mdf_data_ftp_2;

create table if not exists lab_bigdata_dev.202304_mdf_data_ftp_2 as

SELECT  t1.cst_id,t1.MDF_DT,mdf_type

    ,SUM(ftp_data)/6 AS ftp_6_month_aft

FROM  lab_bigdata_dev.202304_mdf_data t1

left join lab_bigdata_dev.ftp_all_month t2

on t1.cst_id = t2.cst_id

    and t2.dt >= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),1)) as string),'-','')

    and t2.dt <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),6)) as string),'-','')

group by t1.cst_id,t1.MDF_DT,mdf_type;



--后12个月

drop table if exists lab_bigdata_dev.202304_mdf_data_ftp_3;

create table if not exists lab_bigdata_dev.202304_mdf_data_ftp_3 as

SELECT  t1.cst_id,t1.MDF_DT,mdf_type

    ,SUM(ftp_data)/(datediff(to_date(least( '20240430',replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')),'yyyymmdd'),to_date(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),1)) as string),'-',''),'yyyymmdd'),'mm')+1) AS ftp_12_month_aft

FROM  lab_bigdata_dev.202304_mdf_data t1

left join lab_bigdata_dev.ftp_all_month t2

on t1.cst_id = t2.cst_id

    and t2.dt >= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),1)) as string),'-','')

    and t2.dt <= least( '20240430',replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-',''))

group by t1.cst_id,t1.MDF_DT,mdf_type;



--前12个月

drop table if exists lab_bigdata_dev.202304_mdf_data_ftp_4;

create table if not exists lab_bigdata_dev.202304_mdf_data_ftp_4 as

SELECT  t1.cst_id,t1.MDF_DT,mdf_type

    ,SUM(ftp_data)/12 AS ftp_12_month_bfr

FROM  lab_bigdata_dev.202304_mdf_data t1

left join lab_bigdata_dev.ftp_all_month t2

on t1.cst_id = t2.cst_id

    and t2.dt >= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-12)) as string),'-','')

    and t2.dt <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','')

group by t1.cst_id,t1.MDF_DT,mdf_type;



-- edw.dws_bus_fin_ftp_act_smy_inf_dd  t1 --FTP结果集 最小dt 20221231

-- app_iftp.iftp_tpdm_rst_ftp  t1  --20180101 只保留月初





-- ---综合ftp收入贡献  表有改动江杰

-- drop table if exists lab_bigdata_dev.202304_mdf_ftp;

-- create table if not exists lab_bigdata_dev.202304_mdf_ftp as

-- -- select distinct cst_id,dt

	-- -- ,round(coalesce(last_12_mon_own_ftp_ctb,0)/12,2)  last_12_mon_own_ftp_ctb --近12个月我行综合FTP贡献 月均

	-- -- ,round(coalesce(last_90_ftp_bus_inc_avg,0)/3,2)	last_3_mon_own_ftp_ctb --近90天FTP营业收入日均 月均

-- -- from adm_pub.adm_csm_cbus_ftp_inf_dd --20191231  20200131  20200229

-- -- and dt in (select distinct dt  from edw.dim_bus_com_date_st where dt>='20191231' and dt<= '20240430' and cur_mon_end=dt order by dt )  --月末

-- select t1.cst_id

    -- ,t1.MDF_DT

	-- ,sum(case when t3.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then round(coalesce(t3.last_12_mon_own_ftp_ctb,0)/12,2) end) as last_12_mon_own_ftp_ctb --近12个月我行综合FTP贡献 月均

    -- ,sum(case when t3.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then round(coalesce(t3.last_90_ftp_bus_inc_avg,0)/3,2)end)	last_3_mon_own_ftp_ctb --近90天FTP营业收入日均 月均

    -- ,sum(case when t3.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-',''),'20240430') then round(coalesce(t3.last_12_mon_own_ftp_ctb,0)/12,2) end) as after_12_mon_own_ftp_ctb --近12个月我行综合FTP贡献 月均

-- from lab_bigdata_dev.202304_mdf_data t1

-- left join adm_pub.adm_csm_cbus_ftp_inf_dd t3  --20191231  20200131  20200229

-- on t1.cst_id = t3.cst_id

-- -- and t3.dt in (select distinct dt  from edw.dim_bus_com_date_st

			  -- -- where dt>='20191231' and dt<= '20240430' and cur_mon_end=dt

			  -- -- union select distinct '20240430' from lab_bigdata_dev.202304_mdf_data )  --月末

-- and t3.dt in

    -- (select distinct mdf_bfr_1_month from lab_bigdata_dev.202304_mdf_data

    -- union

    -- select distinct mdf_aft_12_month from lab_bigdata_dev.202304_mdf_data

	-- )



-- group by t1.cst_id

    -- ,t1.MDF_DT

-- ;



--------交接后 管护人数

--dt匹配太慢了，取月底





drop table if exists lab_bigdata_dev.202304_mdf_data_qua_sub;

create table if not exists lab_bigdata_dev.202304_mdf_data_qua_sub as

select t1.aft_mdf_ppl_cd  ---变更后人员代码

    ,t1.MDF_DT,mdf_type

    ,count(distinct case when t2.file_dt <= t1.MDF_DT then loan.loan_cst end) as prm_cst_cnt --建档日期 客户数

    ,max(case when t3.eft_tm <=  t1.MDF_DT then substr(t3.qua_sub_cls_cd,-1,1) end) as qua_sub_cls_cd    ----信贷调查资质 生效时间

from lab_bigdata_dev.202304_mdf_nomdf_sample t1

left join lab_bigdata_dev.mng_all_cst_id t2

on t1.aft_mdf_ppl_cd = t2.prm_mgr_id  ---变更后人员代码

    and substr(t2.dt,1,6) =  substr(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-',''),1,6)   --取月底，月份相同即可

    and t2.dt >= '20220601'

    and t2.dt <= '20230430'

	and t2.dt in (select distinct replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-1)) as string),'-','') from lab_bigdata_dev.202304_mdf_nomdf_sample ) --取月底



left join (  SELECT distinct t.cst_id as loan_cst,t.dt

		  FROM    edw.dim_bus_loan_ctr_inf_dd t

		  WHERE   t.dt >= '20220601'

		  and t.dt <= '20230430'

		  and t.dt in (select distinct replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-1)) as string),'-','') from lab_bigdata_dev.202304_mdf_nomdf_sample ) --取月底

		  AND     t.bus_cd NOT IN ( 'A' , 'B' , 'H' , 'I' , 'O' , 'P' ) --剔除 员工贷款

		    AND     ( t.chnl_cd <> 'L08' OR t.pd_cd <> '201050101040335' ) --剔除 小鱼分期

		  AND     t.pd_cd <> '201050101040332' --剔除 蚂蚁借呗

		  AND     t.pd_cd <> '201050101040319' --剔除百度分期贷

		  AND     ( t.pd_cd NOT IN ( '201050102010146' , '201050101040348' )   OR t.frz_sts_cd <> '' ) --剔除未签约的泰e贷 0签收,1正常,2冻结,3到期失效,4终止失效,5补充资料,6待综合岗签收,7待柜面签收,8终止失效,9到期失效

		  AND     (    (

							( t.ctr_bal > 0  --余额>0

							  OR ( t.ctr_bal IS NULL AND     nvl(t.crc_ind, '0') = '0' )  --非循环贷 余额为空

							  OR ( ( nvl(t.crc_ind, '0') <> '0'   OR t.pd_cd LIKE '2010503%' ) AND     ( t.ctr_bal = 0  OR t.ctr_bal IS NULL )  AND     t.apnt_mtu_dt >= t.dt )  --（循环贷 或 随贷通） 且 余额为0 且 未到期

							)

						 AND     nvl(t.frz_sts_cd, ' ') NOT IN ( '3' , '4' )  --3	到期失效  4	终止失效  冻结状态非到期失效，非终止失效



						)

				  OR ( t.ctr_bal > 0 AND     t.pd_cd LIKE '2010503%'  AND     t.apnt_mtu_dt <= t.dt  AND     t.frz_sts_cd IN ( '3' , '4' ) )  --余额>0  且 随贷通 且到期 且 冻结状态是到期失效、终止失效

				  ) ----未终结、未到期业务

	  )loan

on t2.cst_id=loan.loan_cst

and substr(loan.dt,1,6) =  substr(replace(cast(last_day(add_months(to_date(t2.dt,'yyyymmdd'),-1)) as string),'-',''),1,6)   --取月底，月份相同即可



left join edw.dim_hr_empe_mgr_qua_inf_dd t3  --客户经理资质 20200909

on t1.aft_mdf_ppl_cd = t3.empe_id  -- ---变更后人员代码

    and substr(t3.dt,1,6) =  substr(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-',''),1,6)   --取月底，月份相同即可

    and t3.vld_sts_cd = '1' --有效状态代码

    and t3.qua_sub_cls_cd in ('0060001','0060002','0060003','0060004','0060005','0060006') ----信贷调查资质

    and t3.dt >= '20220601'

    and t3.dt <= '20230430'

	and t3.dt in (select distinct replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-1)) as string),'-','') from lab_bigdata_dev.202304_mdf_nomdf_sample ) --取月底

group by t1.aft_mdf_ppl_cd

    ,t1.MDF_DT,mdf_type;







---新增随贷通

drop table if exists lab_bigdata_dev.202304_mdf_data_new_sdt;

create table if not exists lab_bigdata_dev.202304_mdf_data_new_sdt as

select t1.cst_id,t1.MDF_DT,mdf_type

    ,COUNT(t2.serialno) AS new_sdt_cnt  --新增随贷通合同数

    ,max(case when t3.customerid is null then 1 else 0 end) as no_sdt_bfr --交接前无随贷通标识

from lab_bigdata_dev.202304_mdf_data t1

left join edw.loan_business_contract t2

on t1.cst_id = t2.customerid

    and t2.dt = '20240430'

    and substr(t2.BUSINESSTYPE,1,7)= '2010503'

    and REPLACE(t2.OCCURDATE, '/', '') >= t1.MDF_DT

    and REPLACE(t2.OCCURDATE, '/', '') <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')

left join edw.loan_business_contract t3

on t1.cst_id = t3.customerid

    and t3.dt = '20240430'

    and substr(t3.BUSINESSTYPE,1,7)= '2010503'

    and REPLACE(t3.OCCURDATE, '/', '') < t1.MDF_DT  ----交接前

group by t1.cst_id,t1.MDF_DT,mdf_type;





--修改的地方人事变动 （未交接无人事变动，该逻辑删除）select * from lab_bigdata_dev.202304_test_mdf_data_feature_all_20230531 where dt='202403';



-----人事变动

drop table if exists lab_bigdata_dev.202304_mdf_data_empe_lqd;

create table if not exists lab_bigdata_dev.202304_mdf_data_empe_lqd as

select distinct t1.MDF_DT

    ,t1.mdf_qppl_cd ---变更前人员代码

    ,c_turnover_type --流动类型 nd rz2

    ,case when c_turnover_type = 'nd' and c_name_new in ('业务团队正职','业务团队副职','总经理助理') and c_prev_dept_hid = c_new_dept_hid then '本团队晋升'

        when c_turnover_type = 'nd' and c_name_new in ('业务团队正职','业务团队副职','总经理助理') and c_prev_dept_hid <> c_new_dept_hid then '跨团队晋升'

        when c_turnover_type = 'nd' and c_name_new like '%客户经理%' then '调动至客户经理' --流动后职位名称

        when c_turnover_type = 'nd' and  c_name_new not like '%客户经理%' then '调动至非客户经理'

        when  c_turnover_type = 'lz' then '离职' end as empe_lqd_type

from

(select t1.MDF_DT

    ,t1.mdf_qppl_cd ---变更前人员代码

    ,t3.c_turnover_type --流动类型 nd rz2

    ,t3.c_prev_pos_hid  --流动前职位id

    ,t5.c_name as c_name_prev --流动前职位名称

    ,t3.c_new_pos_hid --流动后职位

    ,t6.c_name as c_name_new --流动后职位名称

    ,t3.c_prev_dept_hid   ---流动前部门

    ,t3.c_new_dept_hid   ----流动后部门

    ,row_number() over(partition by t1.mdf_qppl_cd,t1.MDF_DT order by t3.c_operate_time desc) as ranking

from lab_bigdata_dev.202304_mdf_nomdf_sample t1

left join edw.nhrm_tb_sta_emp t2 --员工表

on t1.mdf_qppl_cd = t2.c_code    --变更前人员代码

    and t2.dt = '20240430'

left join edw.nhrm_tb_sta_emp_turnover t3  --员流动信息

on t2.c_oid = t3.c_employee_id   --员工ID 0475b2cc45974ab1a233836ea6170e71

    and t3.dt = '20240430'

    and replace(substr(t3.c_operate_time,1,10),'-','') >= replace(substr(dateadd(to_date(t1.MDF_DT,'yyyymmdd'),-30,'dd'),1,10),'-','') --操作时间

    and replace(substr(t3.c_operate_time,1,10),'-','') <= replace(substr(dateadd(to_date(t1.MDF_DT,'yyyymmdd'),30,'dd'),1,10),'-','')  --操作时间

left join edw.nhrm_tb_org_position t5  --509职位基本信息

on t3.c_prev_pos_hid = t5.c_hid  --流动前职位

    and t5.dt = '20240430'

left join edw.nhrm_tb_org_position t6

on t3.c_new_pos_hid = t6.c_hid

    and t6.dt = '20240430'

where t5.c_name like '%客户经理%'

) t1

where ranking = 1;



--select * from mdf_data_feature_all_20220607 where dt='20220601-20230430' and ftp_12_month_aft<0.5*ftp_3_month_aft and mdf_type='交接客户';



-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_all_20220607;



-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_all_20220607

-- (

--     cst_id                          STRING  COMMENT '客户号'

--     ,MDF_DT                         STRING  COMMENT '交接日期'

--     ,mdf_qorg_cd                    STRING  COMMENT '变更前机构代码'

--     ,mdf_qppl_cd                    STRING  COMMENT '变更前人员代码'

--     ,aft_mdf_org_cd                 STRING  COMMENT '变更后机构代码'

--     ,aft_mdf_ppl_cd                 STRING  COMMENT '变更后人员代码'

--     ,efe_dep_cst_ind_bfr            STRING  COMMENT '交接前有效存款户标志'

--     ,efe_dep_cst_ind_aft_3_month    STRING  COMMENT '交接后3个月有效存款户标志'

--     ,efe_dep_cst_ind_aft_6_month    STRING  COMMENT '交接后6个月有效存款户标志'

--     ,efe_dep_cst_ind_aft_12_month   STRING  COMMENT '交接后12个月有效存款户标志'

--     ,efe_loan_cst_ind_bfr           STRING  COMMENT '交接前有效信贷户标志'

--     ,efe_loan_cst_ind_aft_3_month   STRING  COMMENT '交接后3个月有效信贷户标志'

--     ,efe_loan_cst_ind_aft_6_month   STRING  COMMENT '交接后6个月有效信贷户标志'

--     ,efe_loan_cst_ind_aft_12_month  STRING  COMMENT '交接后12个月有效信贷户标志'

--     ,efe_cst_ind_bfr                STRING  COMMENT '交接前有效户标志'

--     ,efe_cst_ind_aft_3_month        STRING  COMMENT '交接后3个月有效户标志'

--     ,efe_cst_ind_aft_6_month        STRING  COMMENT '交接后6个月有效户标志'

--     ,efe_cst_ind_aft_12_month       STRING  COMMENT '交接后12个月有效户标志'

--     ,last_90_days_gl_bal_avg_bfr    DECIMAL COMMENT '交接前3个月存款月日均'

--     ,last_180_days_gl_bal_avg_aft   DECIMAL COMMENT '交接后6个月存款月日均'

--     ,last_360_days_gl_bal_avg_aft   DECIMAL COMMENT '交接后12个月存款月日均'

--     ,last_90_days_prcp_bal_avg_bfr  DECIMAL COMMENT '交接前3个月贷款月日均'

--     ,last_180_days_prcp_bal_avg_aft DECIMAL COMMENT '交接后6个月贷款月日均'

--     ,last_360_days_prcp_bal_avg_aft DECIMAL COMMENT '交接后12个月贷款月日均'

--     ,is_loan_finish                 STRING  COMMENT '交接后12个月结清'

--     ,is_loan_continue               STRING  COMMENT '交接后12个月是否存在续贷'

--     ,IS_CUR_DSTR_EXPIRE             STRING  COMMENT '到期或销户'

--     ,IS_CUR_CONTINUE                STRING  COMMENT '续存（含自动转存）'

--     ,exe_intr_rate_bfr              DECIMAL COMMENT '续贷前执行利率'

--     ,exe_intr_rate_aft              DECIMAL COMMENT '续贷后执行利率'

--     ,ftp_3_month_bfr                DECIMAL COMMENT '交接前3个月ftp月均'

--     ,ftp_6_month_aft                DECIMAL COMMENT '交接后6个月ftp月均'

--     ,ftp_12_month_aft               DECIMAL COMMENT '交接后12个月ftp月均'

--     ,prm_cst_cnt                    DECIMAL COMMENT '管护人数'

--     ,qua_sub_cls_cd                 STRING  COMMENT '-信贷调查资质'

--     ,new_sdt_cnt                    DECIMAL COMMENT '随贷通新增人数'

--     ,no_sdt_bfr                     STRING  COMMENT '交接前非随贷通'

--     ,empe_lqd_type                  STRING  COMMENT '人事异动'

--     ,c_turnover_type                STRING  COMMENT '流动类型'

--     ,prm_org_id                     STRING  COMMENT '主管户机构'

--     ,prm_fh_org_id                  STRING  COMMENT '主管户分行机构号'

--     ,prm_fh_org_nm                  STRING  COMMENT '主管户分行名称'

--     ,prm_zh_org_id                  STRING  COMMENT '主管户支行机构号'

--     ,prm_zh_org_nm                  STRING  COMMENT '主管户支行名称'

---    ,ctr_amt                        decimal COMMENT '交接规模'

---    ,is_yr_new_hpn_amt              decimal comment '新发生风险贷款余额'

---    ,busi_ctr_ind                   string  comment '合同是否有效'

---    ,mdf_ctr_bal                    decimal comment '交接客户贷款余额'

-- )

-- COMMENT

-- '客户交接明细表'

-- PARTITIONED BY

-- (

--     dt STRING

-- );



-- alter table lab_bigdata_dev.mdf_data_feature_all_20220607 add columns (

--     is_yr_new_hpn_amt decimal comment '新发生风险贷款余额'

--     ,busi_ctr_ind string comment '合同是否有效'

--     ,mdf_ctr_bal decimal comment '交接客户贷款余额'

-- );

-- alter table lab_bigdata_dev.mdf_data_feature_all_20220607 add columns (

    -- mdf_type  string comment '交接客户类型'  --交接客户 未全量客户

-- );

/*

DROP TABLE IF EXISTS lab_bigdata_dev.xuni_org;



CREATE TABLE IF NOT EXISTS lab_bigdata_dev.xuni_org

(

    sum_org_id                  STRING  COMMENT '主管户支行机构号'

    ,sum_org_nm                  STRING  COMMENT '主管户支行名称'

    ,UNT_ORG_ID                 STRING  COMMENT '变更后机构代码'

)

COMMENT

'虚拟支行'

;

insert into lab_bigdata_dev.xuni_org

values ('310188800','上海分行虚拟支行','310199999'),

('320288800','苏州分行虚拟支行','320299999'),

('330188800','台州分行虚拟支行','330199999'),

('330288800','杭州分行虚拟支行','330299999'),

('330388800','宁波分行虚拟支行','330399999'),

('330588800','温州分行虚拟支行','330599999'),

('330688800','丽水分行虚拟支行','330699999'),

('330788800','绍兴分行虚拟支行','330799999'),

('330888800','金华分行虚拟支行','330899999'),

('330988800','嘉兴分行虚拟支行','330999999'),

('331088800','湖州分行虚拟支行','331099999'),

('331188800','衢州分行虚拟支行','331199999'),

('331288800','舟山分行虚拟支行','331299999'),

('336188800','浙江庆元泰隆村镇银行虚拟支行','336199999'),

('356188800','福建政和泰隆村镇银行虚拟支行','356199999'),

('356288800','福建长乐泰隆村镇银行虚拟支行','356299999'),

('356388800','福建龙海泰隆村镇银行虚拟支行','356399999'),

('356488800','福建福清泰隆村镇银行虚拟支行','356499999'),

('416188800','河南叶县泰隆村镇银行虚拟支行','416199999'),

('416288800','河南汝南泰隆村镇银行虚拟支行','416299999'),

('426188800','湖北大冶泰隆村镇银行虚拟支行','426199999'),

('446188800','广东英德泰隆村镇银行虚拟支行','446199999'),

('446288800','广东四会泰隆村镇银行虚拟支行','446299999'),

('616188800','陕西旬阳泰隆村镇银行虚拟支行','616199999'),

('616288800','陕西眉县泰隆村镇银行虚拟支行','616299999'),

('616388800','陕西泾阳泰隆村镇银行虚拟支行','616399999')

;

*/

insert overwrite table lab_bigdata_dev.mdf_data_feature_all_20220607 PARTITION (DT = '20220601-20230430')

select t1.cst_id

    ,t1.MDF_DT

    ,t1.mdf_qorg_cd ---变更前机构代码

    ,t1.mdf_qppl_cd -----变更前人员代码

    ,t1.aft_mdf_org_cd ----变更后机构代码

    ,t1.aft_mdf_ppl_cd ----变更后人员代码

    ,coalesce(t2.efe_dep_cst_ind_bfr,'0') as  efe_dep_cst_ind_bfr ----交接前有效存款户标志

    ,coalesce(t2.efe_dep_cst_ind_aft_3_month,'0') as efe_dep_cst_ind_aft_3_month   ----交接后3个月有效存款户标志

    ,coalesce(t2.efe_dep_cst_ind_aft_6_month,'0') as efe_dep_cst_ind_aft_6_month   ----交接后6个月有效存款户标志

    ,coalesce(t2.efe_dep_cst_ind_aft_12_month,'0') as efe_dep_cst_ind_aft_12_month   ----交接后12个月有效存款户标志

    ,coalesce(t2.efe_loan_cst_ind_bfr,'0') as efe_loan_cst_ind_bfr    ----交接前有效信贷户标志

    ,coalesce(t2.efe_loan_cst_ind_aft_3_month,'0') as efe_loan_cst_ind_aft_3_month  ----交接后3个月有效信贷户标志

    ,coalesce(t2.efe_loan_cst_ind_aft_6_month,'0') as efe_loan_cst_ind_aft_6_month ----交接后6个月有效信贷户标志

    ,coalesce(t2.efe_loan_cst_ind_aft_12_month,'0') as efe_loan_cst_ind_aft_12_month  ----交接后12个月有效信贷户标志

    ,coalesce(t2.efe_cst_ind_bfr,'0') as efe_cst_ind_bfr    ----交接前有效户标志

    ,coalesce(t2.efe_cst_ind_aft_3_month,'0') as efe_cst_ind_aft_3_month   ----交接后3个月有效户标志

    ,coalesce(t2.efe_cst_ind_aft_6_month,'0') as efe_cst_ind_aft_6_month  ----交接后6个月有效户标志

    ,coalesce(t2.efe_cst_ind_aft_12_month,'0') as efe_cst_ind_aft_12_month  ----交接后12个月有效户标志

    , t3.last_90_days_gl_bal_avg_bfr ---交接前3个月存款月日均

	--,case when t1.mdf_type='交接客户' then t3.last_90_days_gl_bal_avg_bfr when  t1.mdf_type='全量客户' then t3.last_360_days_gl_bal_avg_bfr end as  last_90_days_gl_bal_avg_bfr ---交接前3个月存款月日均

    ,t3.last_180_days_gl_bal_avg_aft   ---交接后6个月存款月日均

    ,t3.last_360_days_gl_bal_avg_aft   ---交接后12个月存款月日均

    , t4.last_90_days_prcp_bal_avg_bfr --交接前3个月贷款月日均

	--,case when t1.mdf_type='交接客户' then t4.last_90_days_prcp_bal_avg_bfr when  t1.mdf_type='全量客户' then t4.last_360_days_prcp_bal_avg_bfr end as  last_90_days_prcp_bal_avg_bfr---交接前3个月贷款月日均

    ,t4.last_180_days_prcp_bal_avg_aft   ---交接后6个月贷款月日均

    ,t4.last_360_days_prcp_bal_avg_aft   ---交接后12个月贷款月日均

    ,t5.is_loan_finish     -------交接后12个月结清

    ,t5.is_loan_continue   -----交接后12个月是否存在续贷

    ,t6.IS_CUR_DSTR_EXPIRE   -----到期或销户

    ,t6.IS_CUR_CONTINUE     ----续存（含自动转存）

    ,t7.exe_intr_rate_bfr    -----续贷前执行利率

    ,t7.exe_intr_rate_aft   -----续贷后执行利率

	--,case when t1.mdf_type='交接客户' then t8.ftp_3_month_bfr  when  t1.mdf_type='全量客户' then ftp.ftp_12_month_bfr end as  ftp_3_month_bfr    ---交接前3个月ftp月均

	, t8.ftp_3_month_bfr    ---交接前3个月ftp月均

	,null  ftp_6_month_aft ---交接后6个月ftp月均

	,t15.ftp_12_month_aft ---交接后12个月ftp月均

    -- ,case when t1.mdf_type='交接客户' then t8.last_3_mon_own_ftp_ctb  when  t1.mdf_type='全量客户' then t8.last_12_mon_own_ftp_ctb end as  ftp_3_month_bfr ---交接前3个月ftp月均



    ,t9.prm_cst_cnt   ----管护人数

    ,t9.qua_sub_cls_cd   -----信贷调查资质

    ,t10.new_sdt_cnt    ------随贷通新增人数

    ,t10.no_sdt_bfr

    ,t11.empe_lqd_type -----人事异动

    ,t11.c_turnover_type  --流动类型

    ,t12.prm_org_id   ---主管户机构

    ,t13.sum_org_id  as prm_fh_org_id        -- 主管户分行机构号

    ,t13.sum_org_nm  as prm_fh_org_nm        -- 主管户分行名称

    ,t20.sum_org_id  as prm_zh_org_id        -- 主管户支行机构号

    ,t20.sum_org_nm  as prm_zh_org_nm        -- 主管户支行名称

    ,t1.mdf_ctr_amt as ctr_amt

    ,COALESCE(T21.is_yr_new_hpn_amt,0) AS is_yr_new_hpn_amt



    ,case when t22.cst_id is not null then '1' else '0' end as busi_ctr_ind  --当前有未结清的贷款标识

    ,COALESCE(T21.贷款余额,0) AS mdf_ctr_bal --当前未结清的贷款余额

	,t1.mdf_type  --交接客户类型

from lab_bigdata_dev.202304_mdf_nomdf_sample t1

left join lab_bigdata_dev.202304_mdf_data_efe_ind t2

on t1.cst_id = t2.cst_id and t1.MDF_DT = t2.MDF_DT and t1.mdf_type=t2.mdf_type

left join lab_bigdata_dev.202304_mdf_data_dep t3

on t1.cst_id = t3.cst_id and t1.MDF_DT = t3.MDF_DT and t1.mdf_type=t3.mdf_type

left join lab_bigdata_dev.202304_mdf_data_loan t4

on t1.cst_id = t4.cst_id and t1.MDF_DT = t4.MDF_DT and t1.mdf_type=t4.mdf_type

left join lab_bigdata_dev.202304_mdf_data_cur_rnw t5

on t1.cst_id = t5.cst_id and t1.MDF_DT = t5.MDF_DT and t1.mdf_type=t5.mdf_type

left join lab_bigdata_dev.202304_mdf_data_xu_cun t6

on t1.cst_id = t6.cst_id and t1.MDF_DT = t6.MDF_DT and t1.mdf_type=t6.mdf_type

left join lab_bigdata_dev.202304_mdf_data_intr_rate t7

on t1.cst_id = t7.cst_id and t1.MDF_DT = t7.MDF_DT and t1.mdf_type=t7.mdf_type



left join lab_bigdata_dev.202304_mdf_data_ftp_1 t8

on t1.cst_id = t8.cst_id   and t1.MDF_DT = t8.MDF_DT and t1.mdf_type=t8.mdf_type

left join lab_bigdata_dev.202304_mdf_data_ftp_2 t14

on t1.cst_id = t14.cst_id   and t1.MDF_DT = t14.MDF_DT and t1.mdf_type=t14.mdf_type

left join lab_bigdata_dev.202304_mdf_data_ftp_3 t15

on t1.cst_id = t15.cst_id   and t1.MDF_DT = t15.MDF_DT and t1.mdf_type=t15.mdf_type

left join lab_bigdata_dev.202304_mdf_data_ftp_4 ftp

on t1.cst_id = ftp.cst_id   and t1.MDF_DT = ftp.MDF_DT and t1.mdf_type=ftp.mdf_type



left join lab_bigdata_dev.202304_mdf_data_qua_sub t9

on t1.aft_mdf_ppl_cd = t9.aft_mdf_ppl_cd  and t1.mdf_type=t9.mdf_type and t1.MDF_DT = t9.MDF_DT

left join lab_bigdata_dev.202304_mdf_data_new_sdt t10

on t1.cst_id = t10.cst_id and t1.MDF_DT = t10.MDF_DT  and t1.mdf_type=t10.mdf_type

left join lab_bigdata_dev.202304_mdf_data_empe_lqd t11

on t1.mdf_qppl_cd = t11.mdf_qppl_cd and  t1.MDF_DT = t11.MDF_DT

left join adm_pub_app.ADM_PBLC_CST_PRM_MNG_INF_DD t12 --edw.dws_cst_bas_inf_dd t12

on t1.cst_id = t12.cst_id

    and t12.dt = '20230430'

left join edw.dim_hr_org_sum_org_rel_dd t13

on t1.aft_mdf_org_cd=t13.UNT_ORG_ID

    and t13.dt='20230430'

    and t13.SUM_ORG_LVL='F'

    AND t13.ORG_RLTN_DIM_CD='WD3'

    AND t13.SUM_TYP_CD='1'

LEFT JOIN  (select   UNT_ORG_ID

					,sum_org_id

					,sum_org_nm

			from edw.dim_hr_org_sum_org_rel_dd t20

			where  t20.dt = '20230430'

			AND     t20.SUM_ORG_LVL = 'Z' --支行

			AND    t20.ORG_RLTN_DIM_CD = 'WD3'

			AND    t20.SUM_TYP_CD = '1'

			union

			select   UNT_ORG_ID

					,sum_org_id

					,sum_org_nm

			from lab_bigdata_dev.xuni_org

			) t20

ON     t1.aft_mdf_org_cd=t20.UNT_ORG_ID



LEFT JOIN



(



select

    cst_id

    ,SUM(CASE  WHEN A.BSN_STS NOT LIKE '%核销%' THEN A.DBIL_BAL_CNY  ELSE 0 END) 贷款余额 -- 贷款余额（不含核销）

    ,SUM(CASE when A.IS_YR_NEW_HPN = 'Y' AND A.IS_RSK_LOAN = 'Y' THEN A.DBIL_BAL_CNY  ELSE 0  END) is_yr_new_hpn_amt   --本年新发生风险贷款余额

from adm_pub.ADM_RSK_APP_INTER_ALL a

where a.dt = least(replace(cast(last_day(add_months(to_date('20230430','yyyymmdd'),12)) as string),'-',''),'20240430')  --观察点12个月以后，当前日期 二者取小

and a.DBIL_BAL_CNY > 0

and   ( A.ACC_TYPE = '信用卡' OR A.ACC_TYPE LIKE '0%' ) AND A.ACC_TYPE NOT LIKE '0301%'  --表内业务

group by cst_id



) T21





ON T1.cst_id = T21.cst_id

left join

(select cst_id

    ,sum(ctr_bal) as ctr_bal

from edw.dim_bus_loan_ctr_inf_dd t

where dt = least(replace(cast(last_day(add_months(to_date('20230430','yyyymmdd'),12)) as string),'-',''),'20240430')

and (( ( t.ctr_bal > 0

    OR ( t.ctr_bal IS NULL

AND     nvl(t.crc_ind, '0') = '0' )

    OR ( ( nvl(t.crc_ind, '0') <> '0'

    OR t.pd_cd LIKE '2010503%' )

AND     ( t.ctr_bal = 0

    OR t.ctr_bal IS NULL )

AND     t.apnt_mtu_dt >= least(replace(cast(last_day(add_months(to_date('20230430','yyyymmdd'),12)) as string),'-',''),'20240430') ) )

AND     nvl(t.frz_sts_cd, ' ') NOT IN ( '3' , '4' ) )

    OR ( t.ctr_bal > 0

AND     t.pd_cd LIKE '2010503%'

AND     t.apnt_mtu_dt <= least(replace(cast(last_day(add_months(to_date('20230430','yyyymmdd'),12)) as string),'-',''),'20240430')

AND     t.frz_sts_cd IN ( '3' , '4' ) ))

group by cst_id

) t22

ON T1.cst_id = T22.cst_id

where t13.sum_org_nm rlike '分行' or t13.sum_org_nm rlike '村镇银行';    -- 分行







--------守面

-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_shoumian_20221122;



-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_shoumian_20221122

-- (

--     分行名称   STRING  COMMENT '分行名称'

--     ,支行名称  STRING  COMMENT '支行名称'

--     ,接收人管户户数            STRING  COMMENT '接收人管户户数'

--     ,接手人信贷调查资质     STRING  COMMENT '接手人信贷调查资质'

--     ,按交出人人事异动      STRING  COMMENT '按交出人人事异动'

--     ,客户分层               STRING  COMMENT '客户分层'

--     ,交接前非有效户            STRING  COMMENT '交接前非有效户'

--     ,交接前非有效户交接后3个月是有效户  STRING  COMMENT '交接前非有效户交接后3个月是有效户'

--     ,交接前非有效户交接后6个月是有效户  STRING  COMMENT '交接前非有效户交接后6个月是有效户'

--     ,交接前非有效户交接后12个月是有效户 STRING  COMMENT '交接前非有效户交接后12个月是有效户'

--     ,交接前是有效户            STRING  COMMENT '交接前是有效户'

--     ,交接前是有效户交接后3个月非有效户  STRING  COMMENT '交接前是有效户交接后3个月非有效户'

--     ,交接前是有效户交接后6个月非有效户  STRING  COMMENT '交接前是有效户交接后6个月非有效户'

--     ,交接前是有效户交接后12个月非有效户 STRING  COMMENT '交接前是有效户交接后12个月非有效户'

--     ,续贷客户数              DECIMAL COMMENT '续贷客户数'

--     ,贷款到期客户数            DECIMAL COMMENT '贷款到期客户数'

--     ,续存客户数              DECIMAL COMMENT '续存客户数'

--     ,存款到期客户数            DECIMAL COMMENT '存款到期客户数'

--     ,交接前非有效信贷户       string   COMMENT '交接前非有效信贷户'

--     ,交接前非有效信贷户交接后3个月是有效信贷户 string COMMENT '交接前非有效信贷户交接后3个月是有效信贷户'

--     ,交接前非有效信贷户交接后6个月是有效信贷户 string COMMENT '交接前非有效信贷户交接后6个月是有效信贷户'

--     ,交接前非有效信贷户交接后12个月是有效信贷户 string COMMENT '交接前非有效信贷户交接后12个月是有效信贷户'

--     ,交接前是有效信贷户       string COMMENT '交接前是有效信贷户'

--     ,交接前是有效信贷户交接后3个月非有效信贷户 string COMMENT '交接前是有效信贷户交接后3个月非有效信贷户'

--     ,交接前是有效信贷户交接后6个月非有效信贷户 string COMMENT '交接前是有效信贷户交接后6个月非有效信贷户'

--     ,交接前是有效信贷户交接后12个月非有效信贷户 string COMMENT '交接前是有效信贷户交接后12个月非有效信贷户'

--     ,mdf_cst_cnt     decimal COMMENT '交接客户数'

--     ,mdf_ctr_amt     decimal COMMENT '交接规模'

-- COMMENT

-- '客户交接前后业务波动分析_守面'

-- PARTITIONED BY

-- (

--     dt STRING

-- );



-- alter table lab_bigdata_dev.mdf_data_feature_shoumian_20221122 add columns (

    -- mdf_type  string comment '交接客户类型'  --交接客户 未全量客户

-- );

-- alter table lab_bigdata_dev.mdf_data_feature_shoumian_20221122 add columns (

    -- prm_fh_org_id  string comment '主管户分行机构号'  --交接客户 未全量客户

-- );





insert overwrite table lab_bigdata_dev.mdf_data_feature_shoumian_20221122 PARTITION (DT = '20220601-20230430')

select   prm_fh_org_nm  分行名称

        ,prm_zh_org_nm  支行名称

        ,case when prm_cst_cnt <= 100 then '100以内'

             when prm_cst_cnt <=300 then '100-300'

             when prm_cst_cnt <=500 then '300-500'

             when prm_cst_cnt >500 then '500以上'

             else null end as 接收人管户户数

        ,qua_sub_cls_cd 接手人信贷调查资质

        ,empe_lqd_type 按交出人人事异动

        ,case when last_90_days_prcp_bal_avg_bfr>0 and last_90_days_prcp_bal_avg_bfr<=500000 then '50万以下'

               when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'

               when last_90_days_prcp_bal_avg_bfr <=3000000 then '150-300w'

               when last_90_days_prcp_bal_avg_bfr > 3000000 then '300w以上' end  as 客户分层

--------统计客户数字段

        ,count(case when efe_cst_ind_bfr = '0' or efe_cst_ind_bfr ='' then cst_id end) as 交接前非有效户

        ,count(case when (efe_cst_ind_bfr = '0' or efe_cst_ind_bfr ='') and efe_cst_ind_aft_3_month = '1' then cst_id end) as 交接前非有效户交接后3个月是有效户

        ,count(case when (efe_cst_ind_bfr = '0' or efe_cst_ind_bfr ='') and efe_cst_ind_aft_6_month = '1' then cst_id end) as 交接前非有效户交接后6个月是有效户

        ,count(case when (efe_cst_ind_bfr = '0' or efe_cst_ind_bfr ='') and efe_cst_ind_aft_12_month = '1' then cst_id end) as 交接前非有效户交接后12个月是有效户

        ,count(case when efe_cst_ind_bfr = '1' then cst_id end) as 交接前是有效户

        ,count(case when efe_cst_ind_bfr = '1' and (efe_cst_ind_aft_3_month = '0' or efe_cst_ind_aft_3_month ='') then cst_id end) as 交接前是有效户交接后3个月非有效户

        ,count(case when efe_cst_ind_bfr = '1' and (efe_cst_ind_aft_6_month = '0' or efe_cst_ind_aft_6_month ='') then cst_id end) as 交接前是有效户交接后6个月非有效户

        ,count(case when efe_cst_ind_bfr = '1' and (efe_cst_ind_aft_12_month = '0' or efe_cst_ind_aft_12_month ='') then cst_id end) as 交接前是有效户交接后12个月非有效户

        ,count( case when is_loan_continue =1 then cst_id end) as 续贷客户数

        ,count( case when is_loan_finish =1 then cst_id end) as 贷款到期客户数

        ,count( case when IS_CUR_DSTR_EXPIRE =1 and IS_CUR_CONTINUE =1 then cst_id end) as 续存客户数

        ,count( case when IS_CUR_DSTR_EXPIRE =1 then cst_id end) as 存款到期客户数

        ,count(case when efe_loan_cst_ind_bfr = '0' or efe_loan_cst_ind_bfr ='' then cst_id end) as 交接前非有效信贷户

        ,count(case when (efe_loan_cst_ind_bfr = '0' or efe_loan_cst_ind_bfr ='') and efe_loan_cst_ind_aft_3_month = '1' then cst_id end) as 交接前非有效信贷户交接后3个月是有效信贷户

        ,count(case when (efe_loan_cst_ind_bfr = '0' or efe_loan_cst_ind_bfr ='') and efe_loan_cst_ind_aft_6_month = '1' then cst_id end) as 交接前非有效信贷户交接后6个月是有效信贷户

        ,count(case when (efe_loan_cst_ind_bfr = '0' or efe_loan_cst_ind_bfr ='') and efe_loan_cst_ind_aft_12_month = '1' then cst_id end) as 交接前非有效信贷户交接后12个月是有效信贷户

        ,count(case when efe_loan_cst_ind_bfr = '1' then cst_id end) as 交接前是有效信贷户

        ,count(case when efe_loan_cst_ind_bfr = '1' and (efe_loan_cst_ind_aft_3_month = '0' or efe_loan_cst_ind_aft_3_month ='') then cst_id end) as 交接前是有效信贷户交接后3个月非有效信贷户

        ,count(case when efe_loan_cst_ind_bfr = '1' and (efe_loan_cst_ind_aft_6_month = '0' or efe_loan_cst_ind_aft_6_month ='') then cst_id end) as 交接前是有效信贷户交接后6个月非有效信贷户

        ,count(case when efe_loan_cst_ind_bfr = '1' and (efe_loan_cst_ind_aft_12_month = '0' or efe_loan_cst_ind_aft_12_month ='') then cst_id end) as 交接前是有效信贷户交接后12个月非有效信贷户

        ,count(cst_id) as mdf_cst_cnt

        ,sum(ctr_amt) as mdf_ctr_amt

		,mdf_type

from lab_bigdata_dev.mdf_data_feature_all_20220607

where dt = '20220601-20230430'

and mdf_type='交接客户'

group by  prm_fh_org_nm  ,prm_zh_org_nm

        ,case when prm_cst_cnt <= 100 then '100以内'

             when prm_cst_cnt <=300 then '100-300'

             when prm_cst_cnt <=500 then '300-500'

             when prm_cst_cnt >500 then '500以上'

             else null end

        ,qua_sub_cls_cd --接手人信贷调查资质

        ,empe_lqd_type  --按交出人人事异动

        ,case when last_90_days_prcp_bal_avg_bfr>0 and last_90_days_prcp_bal_avg_bfr<=500000 then '50万以下'

               when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'

               when last_90_days_prcp_bal_avg_bfr <=3000000 then '150-300w'

               when last_90_days_prcp_bal_avg_bfr > 3000000 then '300w以上' end

			   ,mdf_type

               ;





--------守量

-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_shouliang_20221122;



-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_shouliang_20221122

-- (

--     分行名称  STRING  COMMENT '分行名称'

--     ,支行名称 STRING  COMMENT '支行名称'

--     ,接收人管户户数           STRING  COMMENT ''

--     ,接手人信贷调查资质    STRING  COMMENT '接手人信贷调查资质'

--     ,按交出人人事异动     STRING  COMMENT '按交出人人事异动'

--     ,客户分段1             STRING  COMMENT '客户分段1'

--     ,客户分段2             STRING  COMMENT '客户分段2'

--     ,交接前3个月存款日均总规模     DECIMAL COMMENT '交接前3个月存款日均总规模'

--     ,交接前3个月存款日均人数      DECIMAL COMMENT '交接前3个月存款日均人数'

--     ,交接后6个月存款日均总规模     DECIMAL COMMENT '交接后6个月存款日均总规模'

--     ,交接后6个月存款日均人数      DECIMAL COMMENT '交接后6个月存款日均人数'

--     ,交接后12个月存款日均总规模    DECIMAL COMMENT '交接后12个月存款日均总规模'

--     ,交接后12个月存款日均人数     DECIMAL COMMENT '交接后12个月存款日均人数'

--     ,交接前3个月贷款日均总规模     DECIMAL COMMENT '交接前3个月贷款日均总规模'

--     ,交接前3个月贷款日均人数      DECIMAL COMMENT '交接前3个月贷款日均人数'

--     ,交接后6个月贷款日均总规模     DECIMAL COMMENT '交接后6个月贷款日均总规模'

--     ,交接后6个月贷款日均人数      DECIMAL COMMENT '交接后6个月贷款日均人数'

--     ,交接后12个月贷款日均总规模    DECIMAL COMMENT '交接后12个月贷款日均总规模'

--     ,交接后12个月贷款日均人数     DECIMAL COMMENT '交接后12个月贷款日均人数'

--     ,mdf_cst_cnt     decimal COMMENT '交接客户数'

--     ,mdf_ctr_amt     decimal COMMENT '交接规模'

-- )

-- COMMENT

-- '客户交接前后业务波动分析_守量'

-- PARTITIONED BY

-- (

--     dt STRING

-- );



-- alter table lab_bigdata_dev.mdf_data_feature_shouliang_20221122 add columns (

    -- mdf_type  string comment '交接客户类型'  --交接客户 未全量客户

-- );



insert overwrite table lab_bigdata_dev.mdf_data_feature_shouliang_20221122 PARTITION (DT = '20220601-20230430')



select   prm_fh_org_nm  分行名称

        ,prm_zh_org_nm  支行名称

        ,case when prm_cst_cnt <= 100 then '100以内'

             when prm_cst_cnt <=300 then '100-300'

             when prm_cst_cnt <=500 then '300-500'

             when prm_cst_cnt >500 then '500以上'

             else null end as 接收人管户户数

        ,qua_sub_cls_cd  接手人信贷调查资质

        ,empe_lqd_type  按交出人人事异动

        ,case when last_90_days_gl_bal_avg_bfr >0 and last_90_days_gl_bal_avg_bfr <=100000  then '10万以下'

            when last_90_days_gl_bal_avg_bfr <=500000 then '10-50w'

            when last_90_days_gl_bal_avg_bfr >500000 then '50w以上' end 客户分段1

        ,case when last_90_days_prcp_bal_avg_bfr >0 and last_90_days_prcp_bal_avg_bfr <=500000 then '50万以下'

            when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'

            when last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'

            when last_90_days_prcp_bal_avg_bfr >= 3000000 then '300w以上' end 客户分段2

--------统计客户数字段

        ,sum(case when last_90_days_gl_bal_avg_bfr>0 then last_90_days_gl_bal_avg_bfr end) 交接前3个月存款日均总规模

        --,count(case when last_90_days_gl_bal_avg_bfr>0 then cst_id end) as 交接前3个月存款日均人数

		,count(distinct cst_id) as 交接前3个月存款日均人数

        ,sum(case when last_180_days_gl_bal_avg_aft>0 then last_180_days_gl_bal_avg_aft end) 交接后6个月存款日均总规模

        --,count(case when last_180_days_gl_bal_avg_aft>0 then cst_id end) as 交接后6个月存款日均人数

		,count(distinct cst_id) as 交接后6个月存款日均人数

        ,sum(case when last_360_days_gl_bal_avg_aft>0 then last_360_days_gl_bal_avg_aft end) 交接后12个月存款日均总规模

        --,count(case when last_360_days_gl_bal_avg_aft>0 then cst_id end) as 交接后12个月存款日均人数

		,count(distinct cst_id) as 交接后12个月存款日均人数

        ,sum(case when last_90_days_prcp_bal_avg_bfr>0 then last_90_days_prcp_bal_avg_bfr end) 交接前3个月贷款日均总规模

        --,count(case when last_90_days_prcp_bal_avg_bfr>0 then cst_id end) as 交接前3个月贷款日均人数

		,count(distinct cst_id) as 交接前3个月贷款日均人数

        ,sum(case when last_180_days_prcp_bal_avg_aft>0 then last_180_days_prcp_bal_avg_aft end) 交接后6个月贷款日均总规模

       -- ,count(case when last_180_days_prcp_bal_avg_aft>0 then cst_id end) as 交接后6个月贷款日均人数

		,count(distinct cst_id) as 交接后6个月贷款日均人数

        ,sum(case when last_360_days_prcp_bal_avg_aft>0 then last_360_days_prcp_bal_avg_aft end) 交接后12个月贷款日均总规模

        --,count(case when last_360_days_prcp_bal_avg_aft>0 then cst_id end) as 交接后12个月贷款日均人数

		,count(distinct cst_id) as 交接后12个月贷款日均人数

        ,count(cst_id) as mdf_cst_cnt

        ,sum(ctr_amt) as mdf_ctr_amt

		,mdf_type

from lab_bigdata_dev.mdf_data_feature_all_20220607

where dt = '20220601-20230430'

and mdf_type='交接客户'

group by prm_fh_org_nm,prm_zh_org_nm

        ,case when prm_cst_cnt <= 100 then '100以内'

             when prm_cst_cnt <=300 then '100-300'

             when prm_cst_cnt <=500 then '300-500'

             when prm_cst_cnt >500 then '500以上'

             else null end

        ,qua_sub_cls_cd --接手人信贷调查资质

        ,empe_lqd_type  --按交出人人事异动

        ,case when last_90_days_gl_bal_avg_bfr >0 and last_90_days_gl_bal_avg_bfr <=100000  then '10万以下'

            when last_90_days_gl_bal_avg_bfr <=500000 then '10-50w'

            when last_90_days_gl_bal_avg_bfr >500000 then '50w以上' end

         ,case when last_90_days_prcp_bal_avg_bfr >0 and last_90_days_prcp_bal_avg_bfr <=500000 then '50万以下'

            when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'

            when last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'

            when last_90_days_prcp_bal_avg_bfr >= 3000000 then '300w以上' end

			,mdf_type

               ;





--------守价

-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_shoujia_20221122;



-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_shoujia_20221122

-- (

--     分行名称  STRING  COMMENT '分行名称'

--     ,支行名称 STRING  COMMENT '支行名称'

--     ,接收人管户户数           STRING  COMMENT ''

--     ,接手人信贷调查资质    STRING  COMMENT '接手人信贷调查资质'

--     ,按交出人人事异动     STRING  COMMENT '按交出人人事异动'

--     ,客户分段              STRING  COMMENT ''

--     ,执行利率下降            STRING  COMMENT ''

--     ,执行利率不变            STRING  COMMENT ''

--     ,执行利率上升            STRING  COMMENT ''

--     ,执行利率变化            STRING  COMMENT ''

--     ,新增随贷通客户数          DECIMAL COMMENT ''

--     ,交接前非随贷通客户         DECIMAL COMMENT ''

--     ,mdf_cst_cnt     decimal COMMENT '交接客户数'

--     ,mdf_ctr_amt     decimal COMMENT '交接规模'

-- )

-- COMMENT

-- '客户交接前后业务波动分析_守价'

-- PARTITIONED BY

-- (

--     dt STRING

-- );

-- alter table lab_bigdata_dev.mdf_data_feature_shoujia_20221122 add columns (

    -- mdf_type  string comment '交接客户类型'  --交接客户 未全量客户

-- );



insert overwrite table lab_bigdata_dev.mdf_data_feature_shoujia_20221122 PARTITION (DT = '20220601-20230430')

select   prm_fh_org_nm  分行名称

        ,prm_zh_org_nm  支行名称

        ,case when prm_cst_cnt <= 100 then '100以内'

             when prm_cst_cnt <=300 then '100-300'

             when prm_cst_cnt <=500 then '300-500'

             when prm_cst_cnt >500 then '500以上'

             else null end as 接收人管户户数

        ,qua_sub_cls_cd  接手人信贷调查资质

        ,empe_lqd_type  按交出人人事异动

        ,case when last_90_days_prcp_bal_avg_bfr <=500000 then '低于50w'

            when last_90_days_prcp_bal_avg_bfr <=1500000 then '50-150w'

            when  last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'

            when  last_90_days_prcp_bal_avg_bfr > 3000000 then '300w以上'

            else null end  客户分段

--------统计客户数字段

        ,count(case when exe_intr_rate_bfr > exe_intr_rate_aft and exe_intr_rate_aft>0 then cst_id end) as 执行利率下降

        ,count(case when exe_intr_rate_bfr = exe_intr_rate_aft and exe_intr_rate_aft>0 then cst_id end) as 执行利率不变

        ,count(case when exe_intr_rate_bfr < exe_intr_rate_aft and exe_intr_rate_bfr>0 then cst_id end) as 执行利率上升

        ,count(case when coalesce(exe_intr_rate_bfr,0) <>0  and  coalesce(exe_intr_rate_aft,0) <>0 then cst_id end) as 执行利率变化

        ,count(case when new_sdt_cnt >0 and no_sdt_bfr = 1 then cst_id end) as 新增随贷通客户数

        ,count(case when no_sdt_bfr = 1 then cst_id end) as 交接前非随贷通客户

        ,count(cst_id) as mdf_cst_cnt

        ,sum(ctr_amt) as mdf_ctr_amt

		,mdf_type

from lab_bigdata_dev.mdf_data_feature_all_20220607

where dt = '20220601-20230430'

and mdf_type='交接客户'

group by  prm_fh_org_nm,prm_zh_org_nm

        ,case when prm_cst_cnt <= 100 then '100以内'

             when prm_cst_cnt <=300 then '100-300'

             when prm_cst_cnt <=500 then '300-500'

             when prm_cst_cnt >500 then '500以上'

             else null end

        ,qua_sub_cls_cd --接手人信贷调查资质

        ,empe_lqd_type  --按交出人人事异动

     ,case when last_90_days_prcp_bal_avg_bfr <=500000 then '低于50w'

    when last_90_days_prcp_bal_avg_bfr <=1500000 then '50-150w'

    when  last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'

    when  last_90_days_prcp_bal_avg_bfr > 3000000 then '300w以上'

    else null end

	,mdf_type

               ;





-- -------FTP

-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_ftp_20221122;



-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_ftp_20221122

-- (

--     分行名称  STRING  COMMENT '分行名称'

--     ,支行名称 STRING  COMMENT '支行名称'

--     ,接收人管户户数           STRING  COMMENT ''

--     ,接手人信贷调查资质    STRING  COMMENT '接手人信贷调查资质'

--     ,按交出人人事异动     STRING  COMMENT '按交出人人事异动'

--     ,客户分段              STRING  COMMENT ''

--     ,交接前3个月FTP月均总规模    DECIMAL COMMENT ''

--     ,交接前3个月FTP月均人数     DECIMAL COMMENT ''

--     ,交接后6个月FTP月均总规模    DECIMAL COMMENT ''

--     ,交接后6个月FTP月均人数     DECIMAL COMMENT ''

--     ,交接后12个月FTP月均总规模   DECIMAL COMMENT ''

--     ,交接后12个月FTP月均人数    DECIMAL COMMENT ''

--     ,mdf_cst_cnt     decimal COMMENT '交接客户数'

--     ,mdf_ctr_amt     decimal COMMENT '交接规模'

-- )

-- COMMENT

-- '客户交接前后业务波动分析_ftp'

-- PARTITIONED BY

-- (

--     dt STRING

-- );



-- alter table lab_bigdata_dev.mdf_data_feature_ftp_20221122 add columns (

    -- mdf_type  string comment '交接客户类型'  --交接客户 未全量客户

-- );





insert overwrite table lab_bigdata_dev.mdf_data_feature_ftp_20221122 PARTITION (DT = '20220601-20230430')

select  prm_fh_org_nm  分行名称

 ,prm_zh_org_nm  支行名称

        ,case when prm_cst_cnt <= 100 then '100以内'

             when prm_cst_cnt <=300 then '100-300'

             when prm_cst_cnt <=500 then '300-500'

             when prm_cst_cnt >500 then '500以上'

             else null end as 接收人管户户数

        ,qua_sub_cls_cd  接手人信贷调查资质

        ,empe_lqd_type  按交出人人事异动

    ,case when last_90_days_prcp_bal_avg_bfr >0 and last_90_days_prcp_bal_avg_bfr <=500000 then '50万以下'

    when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'

    when last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'

    when last_90_days_prcp_bal_avg_bfr >= 3000000 then '300w以上' end 客户分段

--------统计客户数字段

   ,sum(case when ftp_3_month_bfr is not null then ftp_3_month_bfr end) 交接前3个月FTP月均总规模

   ,count(distinct cst_id ) as 交接前3个月FTP月均人数

    ,sum(case when ftp_6_month_aft is not null then ftp_6_month_aft end) 交接后6个月FTP月均总规模

	 ,count(distinct cst_id ) as 交接后6个月FTP月均人数

    ,sum(case when ftp_12_month_aft is not null then ftp_12_month_aft end) 交接后12个月FTP月均总规模

	 ,count(distinct cst_id ) as 交接后12个月FTP月均人数

    ,count(cst_id) as mdf_cst_cnt

    ,sum(ctr_amt) as mdf_ctr_amt

	,mdf_type

from lab_bigdata_dev.mdf_data_feature_all_20220607

where dt = '20220601-20230430'

and mdf_type='交接客户'

group by prm_fh_org_nm,prm_zh_org_nm

        ,case when prm_cst_cnt <= 100 then '100以内'

             when prm_cst_cnt <=300 then '100-300'

             when prm_cst_cnt <=500 then '300-500'

             when prm_cst_cnt >500 then '500以上'

             else null end

        ,qua_sub_cls_cd --接手人信贷调查资质

        ,empe_lqd_type  --按交出人人事异动

     ,case when last_90_days_prcp_bal_avg_bfr >0 and last_90_days_prcp_bal_avg_bfr <=500000 then '50万以下'

    when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'

    when last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'

    when last_90_days_prcp_bal_avg_bfr >= 3000000 then '300w以上' end

	,mdf_type;





-- -------新发生风险

-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_risk_20221122;



-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_risk_20221122

-- (

--     分行名称  STRING  COMMENT '分行名称'

--     ,支行名称 STRING  COMMENT '支行名称'

--     ,接收人管户户数           STRING  COMMENT ''

--     ,接手人信贷调查资质    STRING  COMMENT '接手人信贷调查资质'

--     ,按交出人人事异动     STRING  COMMENT '按交出人人事异动'

--     ,客户分段              STRING  COMMENT ''

--     ,is_yr_new_hpn_amt decimal comment '新发生风险贷款余额'

--     ,mdf_ctr_bal decimal comment '交接客户贷款余额'

--     ,mdf_cst_cnt     decimal COMMENT '交接客户数'

--     ,mdf_ctr_amt     decimal COMMENT '交接规模'

-- )

-- COMMENT

-- '客户交接前后业务波动分析_风险'

-- PARTITIONED BY

-- (

--     dt STRING

-- );



-- alter table lab_bigdata_dev.mdf_data_feature_risk_20221122 add columns (

    -- mdf_type  string comment '交接客户类型'  --交接客户 未全量客户

-- );





insert overwrite table lab_bigdata_dev.mdf_data_feature_risk_20221122 PARTITION (DT = '20220601-20230430')

select  prm_fh_org_nm  分行名称

 ,prm_zh_org_nm  支行名称

        ,case when prm_cst_cnt <= 100 then '100以内'

             when prm_cst_cnt <=300 then '100-300'

             when prm_cst_cnt <=500 then '300-500'

             when prm_cst_cnt >500 then '500以上'

             else null end as 接收人管户户数

        ,qua_sub_cls_cd  接手人信贷调查资质

        ,empe_lqd_type  按交出人人事异动

    ,case when last_90_days_prcp_bal_avg_bfr >0 and last_90_days_prcp_bal_avg_bfr <=500000 then '50万以下'

        when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'

        when last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'

        when last_90_days_prcp_bal_avg_bfr >= 3000000 then '300w以上' end 客户分段

--------统计客户数字段

    ,sum(is_yr_new_hpn_amt) is_yr_new_hpn_amt

    ,sum(mdf_ctr_bal) as mdf_ctr_bal

    ,count(cst_id) as mdf_cst_cnt

    ,sum(ctr_amt) as mdf_ctr_amt

	,mdf_type

from lab_bigdata_dev.mdf_data_feature_all_20220607

where dt = '20220601-20230430'

and mdf_type='交接客户'

group by prm_fh_org_nm,prm_zh_org_nm

        ,case when prm_cst_cnt <= 100 then '100以内'

             when prm_cst_cnt <=300 then '100-300'

             when prm_cst_cnt <=500 then '300-500'

             when prm_cst_cnt >500 then '500以上'

             else null end

        ,qua_sub_cls_cd --接手人信贷调查资质

        ,empe_lqd_type  --按交出人人事异动

     ,case when last_90_days_prcp_bal_avg_bfr >0 and last_90_days_prcp_bal_avg_bfr <=500000 then '50万以下'

    when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'

    when last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'

    when last_90_days_prcp_bal_avg_bfr >= 3000000 then '300w以上' end

	,mdf_type;



--------总结雷达图

/*

DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_zj_20221122;



CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_zj_20221122

(

    分行名称  STRING  COMMENT '分行名称'

	,prm_org_id   STRING  COMMENT '主管户机构'

    ,prm_fh_org_id        STRING  COMMENT '主管户分行机构号'

    ,prm_zh_org_id        STRING  COMMENT '主管户支行机构号'

    ,prm_zh_org_nm        STRING  COMMENT '主管户支行名称'

	,mdf_cst_cnt     decimal COMMENT '交接客户数'

    ,接收人管户户数           STRING  COMMENT ''

    ,接手人信贷调查资质    STRING  COMMENT '接手人信贷调查资质'

    ,按交出人人事异动     STRING  COMMENT '按交出人人事异动'

    ,客户分段              STRING  COMMENT ''

	,交接前非有效户            DECIMAL  COMMENT '交接前非有效户'

    ,交接前非有效户交接后3个月是有效户  DECIMAL  COMMENT '交接前非有效户交接后3个月是有效户'

    ,交接前非有效户交接后6个月是有效户  DECIMAL  COMMENT '交接前非有效户交接后6个月是有效户'

    ,交接前非有效户交接后12个月是有效户 DECIMAL  COMMENT '交接前非有效户交接后12个月是有效户'

    ,交接前是有效户            DECIMAL  COMMENT '交接前是有效户'

    ,交接前是有效户交接后3个月非有效户  DECIMAL  COMMENT '交接前是有效户交接后3个月非有效户'

    ,交接前是有效户交接后6个月非有效户  DECIMAL  COMMENT '交接前是有效户交接后6个月非有效户'

    ,交接前是有效户交接后12个月非有效户 DECIMAL  COMMENT '交接前是有效户交接后12个月非有效户'

	,交接前非有效信贷户       DECIMAL   COMMENT '交接前非有效信贷户'

    ,交接前非有效信贷户交接后3个月是有效信贷户 DECIMAL COMMENT '交接前非有效信贷户交接后3个月是有效信贷户'

    ,交接前非有效信贷户交接后6个月是有效信贷户 DECIMAL COMMENT '交接前非有效信贷户交接后6个月是有效信贷户'

    ,交接前非有效信贷户交接后12个月是有效信贷户 DECIMAL COMMENT '交接前非有效信贷户交接后12个月是有效信贷户'

    ,交接前是有效信贷户       DECIMAL COMMENT '交接前是有效信贷户'

    ,交接前是有效信贷户交接后3个月非有效信贷户 DECIMAL COMMENT '交接前是有效信贷户交接后3个月非有效信贷户'

    ,交接前是有效信贷户交接后6个月非有效信贷户 DECIMAL COMMENT '交接前是有效信贷户交接后6个月非有效信贷户'

    ,交接前是有效信贷户交接后12个月非有效信贷户 DECIMAL COMMENT '交接前是有效信贷户交接后12个月非有效信贷户'

    ,续贷客户数              DECIMAL COMMENT '续贷客户数'

    ,贷款到期客户数            DECIMAL COMMENT '贷款到期客户数'

    ,续存客户数              DECIMAL COMMENT '续存客户数'

    ,存款到期客户数            DECIMAL COMMENT '存款到期客户数'

    ,交接前3个月存款日均总规模     DECIMAL COMMENT '交接前3个月存款日均总规模'

    ,交接前3个月存款日均人数      DECIMAL COMMENT '交接前3个月存款日均人数'

    ,交接后6个月存款日均总规模     DECIMAL COMMENT '交接后6个月存款日均总规模'

    ,交接后6个月存款日均人数      DECIMAL COMMENT '交接后6个月存款日均人数'

    ,交接后12个月存款日均总规模    DECIMAL COMMENT '交接后12个月存款日均总规模'

    ,交接后12个月存款日均人数     DECIMAL COMMENT '交接后12个月存款日均人数'

    ,交接前3个月贷款日均总规模     DECIMAL COMMENT '交接前3个月贷款日均总规模'

    ,交接前3个月贷款日均人数      DECIMAL COMMENT '交接前3个月贷款日均人数'

    ,交接后6个月贷款日均总规模     DECIMAL COMMENT '交接后6个月贷款日均总规模'

    ,交接后6个月贷款日均人数      DECIMAL COMMENT '交接后6个月贷款日均人数'

    ,交接后12个月贷款日均总规模    DECIMAL COMMENT '交接后12个月贷款日均总规模'

    ,交接后12个月贷款日均人数     DECIMAL COMMENT '交接后12个月贷款日均人数'

     ,执行利率下降            DECIMAL  COMMENT ''

    ,执行利率不变            DECIMAL  COMMENT ''

    ,执行利率上升            DECIMAL  COMMENT ''

    ,执行利率变化            DECIMAL  COMMENT ''

    ,新增随贷通客户数          DECIMAL COMMENT ''

    ,交接前非随贷通客户         DECIMAL COMMENT ''

    ,交接前3个月FTP月均总规模    DECIMAL COMMENT ''

    ,交接前3个月FTP月均人数     DECIMAL COMMENT ''

    ,交接后6个月FTP月均总规模    DECIMAL COMMENT ''

    ,交接后6个月FTP月均人数     DECIMAL COMMENT ''

    ,交接后12个月FTP月均总规模   DECIMAL COMMENT ''

    ,交接后12个月FTP月均人数    DECIMAL COMMENT ''

	, mdf_type  string comment '交接客户类型'  --交接客户 未全量客户

	 ,is_yr_new_hpn_amt decimal comment '新发生风险贷款余额'

    ,mdf_ctr_bal decimal comment '交接客户贷款余额'

)

COMMENT

'客户交接前后业务波动分析_总结1_原始数值'

PARTITIONED BY

(

    dt STRING

);

*/

insert overwrite table lab_bigdata_dev.mdf_data_feature_zj_20221122 PARTITION (DT = '20220601-20230430')

SELECT  prm_fh_org_nm 分行名称

	,prm_org_id   ---主管户机构

    ,prm_fh_org_id        -- 主管户分行机构号

    ,prm_zh_org_id        -- 主管户支行机构号

    ,prm_zh_org_nm        -- 主管户支行名称

	,count(cst_id) as mdf_cst_cnt

        ,CASE

           WHEN prm_cst_cnt <= 100 THEN '100以内'

           WHEN prm_cst_cnt <= 300 THEN '100-300'

           WHEN prm_cst_cnt <= 500 THEN '300-500'

           WHEN prm_cst_cnt > 500  THEN '500以上'

           ELSE NULL

         END        AS 接收人管户户数

        ,qua_sub_cls_cd 接手人信贷调查资质

        ,empe_lqd_type 按交出人人事异动

        ,CASE

           WHEN last_90_days_prcp_bal_avg_bfr > 0 AND last_90_days_prcp_bal_avg_bfr <= 500000 THEN '50万以下'

           WHEN last_90_days_prcp_bal_avg_bfr <= 1500000                                      THEN '50-150w'

           WHEN last_90_days_prcp_bal_avg_bfr <= 3000000                                      THEN '150-300w'

           WHEN last_90_days_prcp_bal_avg_bfr >= 3000000                                      THEN '300w以上'

         END 客户分段



        --------统计客户数字段

        ,count(CASE                  WHEN efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' THEN cst_id                END) AS 交接前非有效户

		,count(CASE                  WHEN ( efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' ) AND efe_cst_ind_aft_3_month = '1' THEN cst_id                END) AS 交接前非有效户交接后3个月是有效户

        ,count(CASE                  WHEN ( efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' ) AND efe_cst_ind_aft_6_month = '1' THEN cst_id                END) AS 交接前非有效户交接后6个月是有效户

        ,count(CASE                  WHEN ( efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' ) AND efe_cst_ind_aft_12_month = '1' THEN cst_id                END) AS 交接前非有效户交接后12个月是有效户

        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' THEN cst_id                END) AS 交接前是有效户

        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' AND ( efe_cst_ind_aft_3_month = '0' OR efe_cst_ind_aft_3_month = '' ) THEN cst_id                END) AS 交接前是有效户交接后3个月非有效户

        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' AND ( efe_cst_ind_aft_6_month = '0' OR efe_cst_ind_aft_6_month = '' ) THEN cst_id                END) AS 交接前是有效户交接后6个月非有效户

        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' AND ( efe_cst_ind_aft_12_month = '0' OR efe_cst_ind_aft_12_month = '' ) THEN cst_id                END) AS 交接前是有效户交接后12个月非有效户



		--有效信贷户

		,count(CASE                  WHEN efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' THEN cst_id                END) AS 交接前非有效信贷户

		,count(CASE                  WHEN ( efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' ) AND efe_loan_cst_ind_aft_3_month = '1' THEN cst_id                END) AS 交接前非有效信贷户交接后3个月是有效信贷户

        ,count(CASE                  WHEN ( efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' ) AND efe_loan_cst_ind_aft_6_month = '1' THEN cst_id                END) AS 交接前非有效信贷户交接后6个月是有效信贷户

        ,count(CASE                  WHEN ( efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' ) AND efe_loan_cst_ind_aft_12_month = '1' THEN cst_id                END) AS 交接前非有效信贷户交接后12个月是有效信贷户

        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' THEN cst_id                END) AS 交接前是有效信贷户

        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' AND ( efe_loan_cst_ind_aft_3_month = '0' OR efe_loan_cst_ind_aft_3_month = '' ) THEN cst_id                END) AS 交接前是有效信贷户交接后3个月非有效信贷户

        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' AND ( efe_loan_cst_ind_aft_6_month = '0' OR efe_loan_cst_ind_aft_6_month = '' ) THEN cst_id                END) AS 交接前是有效信贷户交接后6个月非有效信贷户

        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' AND ( efe_loan_cst_ind_aft_12_month = '0' OR efe_loan_cst_ind_aft_12_month = '' ) THEN cst_id                END) AS 交接前是有效信贷户交接后12个月非有效信贷户



        ,count(CASE                  WHEN is_loan_continue = 1 THEN cst_id                END) AS 续贷客户数

        ,count(CASE                  WHEN is_loan_finish = 1 THEN cst_id                END) AS 贷款到期客户数

        ,count(CASE                  WHEN IS_CUR_DSTR_EXPIRE = 1 AND IS_CUR_CONTINUE = 1 THEN cst_id                END) AS 续存客户数

        ,count(CASE                  WHEN IS_CUR_DSTR_EXPIRE = 1 THEN cst_id                END) AS 存款到期客户数

        ,sum(CASE               	 WHEN last_90_days_gl_bal_avg_bfr > 0 THEN last_90_days_gl_bal_avg_bfr              END) 交接前3个月存款日均总规模

		,count( distinct cst_id) AS 交接前3个月存款日均人数

        ,sum(CASE            	     WHEN last_180_days_gl_bal_avg_aft > 0 THEN last_180_days_gl_bal_avg_aft              END) 交接后6个月存款日均总规模

		,count( distinct cst_id) AS 交接后6个月存款日均人数

        ,sum(CASE            	     WHEN last_360_days_gl_bal_avg_aft > 0 THEN last_360_days_gl_bal_avg_aft              END) 交接后12个月存款日均总规模

		,count( distinct cst_id) AS 交接后12个月存款日均人数

        ,sum(CASE              	     WHEN last_90_days_prcp_bal_avg_bfr > 0 THEN last_90_days_prcp_bal_avg_bfr              END) 交接前3个月贷款日均总规模

		,count( distinct cst_id) AS 交接前3个月贷款日均人数

        ,sum(CASE                    WHEN last_180_days_prcp_bal_avg_aft > 0 THEN last_180_days_prcp_bal_avg_aft              END) 交接后6个月贷款日均总规模

		,count( distinct cst_id) AS 交接后6个月贷款日均人数

        ,sum(CASE                    WHEN last_360_days_prcp_bal_avg_aft > 0 THEN last_360_days_prcp_bal_avg_aft              END) 交接后12个月贷款日均总规模

		,count( distinct cst_id) AS 交接后12个月贷款日均人数



		 ,count(case when exe_intr_rate_bfr > exe_intr_rate_aft and exe_intr_rate_aft>0 then cst_id end) as 执行利率下降

        ,count(case when exe_intr_rate_bfr = exe_intr_rate_aft and exe_intr_rate_aft>0 then cst_id end) as 执行利率不变

        ,count(case when exe_intr_rate_bfr < exe_intr_rate_aft and exe_intr_rate_bfr>0 then cst_id end) as 执行利率上升

        ,count(case when coalesce(exe_intr_rate_bfr,0) <>0  and  coalesce(exe_intr_rate_aft,0) <>0 then cst_id end) as 执行利率变化





		-- ,case when sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)) end as exe_intr_rate_bfr

		-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0)) end as exe_intr_rate_aft

			-- --分子分母拆开，方便后面汇总

	   -- ,sum(coalesce(exe_intr_rate_bfr_fenzi,0)) as exe_intr_rate_bfr_fenzi

	   -- ,sum(coalesce(exe_intr_rate_bfr_fenmu,0)) as exe_intr_rate_bfr_fenmu

       -- ,sum(coalesce(exe_intr_rate_aft_fenzi,0)) as exe_intr_rate_aft_fenzi

	   -- ,sum(coalesce(exe_intr_rate_aft_fenmu,0)) as exe_intr_rate_aft_fenmu

		--,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_aft_fenmu,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-case when sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_bfr_fenmu,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)) AS 执行利率变化绝对值

		--,case when case when sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_bfr_fenmu,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0

		--	 then (case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_aft_fenmu,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-case when sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_bfr_fenmu,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)))/(case when sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_bfr_fenmu,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0))) AS 执行利率变化相对值



        ,count(CASE                  WHEN new_sdt_cnt > 0 AND no_sdt_bfr = 1 THEN cst_id                END) AS 新增随贷通客户数

        ,count(CASE                  WHEN no_sdt_bfr = 1 THEN cst_id                END) AS 交接前非随贷通客户

        ,sum(CASE              	     WHEN ftp_3_month_bfr IS NOT NULL THEN ftp_3_month_bfr              END) 交接前3个月FTP月均总规模

		,count( distinct cst_id) AS 交接前3个月FTP月均人数

        ,sum(CASE                    WHEN ftp_6_month_aft IS NOT NULL THEN ftp_6_month_aft              END) 交接后6个月FTP月均总规模

		,count( distinct cst_id) AS 交接后6个月FTP月均人数

        ,sum(CASE                    WHEN ftp_12_month_aft IS NOT NULL THEN ftp_12_month_aft              END) 交接后12个月FTP月均总规模

		,count( distinct cst_id) AS 交接后12个月FTP月均人数

		,mdf_type

		,sum(is_yr_new_hpn_amt) is_yr_new_hpn_amt

		,sum(mdf_ctr_bal) as mdf_ctr_bal

FROM    lab_bigdata_dev.mdf_data_feature_all_20220607

WHERE   dt = '20220601-20230430'



GROUP BY

 prm_fh_org_nm

	,prm_org_id   ---主管户机构

    ,prm_fh_org_id        -- 主管户分行机构号

    ,prm_zh_org_id        -- 主管户支行机构号

    ,prm_zh_org_nm        -- 主管户支行名称

	,CASE

                           WHEN prm_cst_cnt <= 100 THEN '100以内'

                           WHEN prm_cst_cnt <= 300 THEN '100-300'

                           WHEN prm_cst_cnt <= 500 THEN '300-500'

                           WHEN prm_cst_cnt > 500  THEN '500以上'

                           ELSE NULL

                         END , qua_sub_cls_cd --接手人信贷调查资质

, empe_lqd_type --按交出人人事异动

, CASE

    WHEN last_90_days_prcp_bal_avg_bfr > 0 AND last_90_days_prcp_bal_avg_bfr <= 500000 THEN '50万以下'

    WHEN last_90_days_prcp_bal_avg_bfr <= 1500000                                      THEN '50-150w'

    WHEN last_90_days_prcp_bal_avg_bfr <= 3000000                                      THEN '150-300w'

    WHEN last_90_days_prcp_bal_avg_bfr >= 3000000                                      THEN '300w以上'

  END

  ,mdf_type

  union

  --全行

  SELECT  '全行' as 分行名称

	,''   ---主管户机构

   ,''         -- 主管户分行机构号

   ,''        -- 主管户支行机构号

   ,''         -- 主管户支行名称

	,count(cst_id) as mdf_cst_cnt

        ,CASE

           WHEN prm_cst_cnt <= 100 THEN '100以内'

           WHEN prm_cst_cnt <= 300 THEN '100-300'

           WHEN prm_cst_cnt <= 500 THEN '300-500'

           WHEN prm_cst_cnt > 500  THEN '500以上'

           ELSE NULL

         END        AS 接收人管户户数

        ,qua_sub_cls_cd 接手人信贷调查资质

        ,empe_lqd_type 按交出人人事异动

        ,CASE

           WHEN last_90_days_prcp_bal_avg_bfr > 0 AND last_90_days_prcp_bal_avg_bfr <= 500000 THEN '50万以下'

           WHEN last_90_days_prcp_bal_avg_bfr <= 1500000                                      THEN '50-150w'

           WHEN last_90_days_prcp_bal_avg_bfr <= 3000000                                      THEN '150-300w'

           WHEN last_90_days_prcp_bal_avg_bfr >= 3000000                                      THEN '300w以上'

         END 客户分段



        --------统计客户数字段

        ,count(CASE                  WHEN efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' THEN cst_id                END) AS 交接前非有效户

		,count(CASE                  WHEN ( efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' ) AND efe_cst_ind_aft_3_month = '1' THEN cst_id                END) AS 交接前非有效户交接后3个月是有效户

        ,count(CASE                  WHEN ( efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' ) AND efe_cst_ind_aft_6_month = '1' THEN cst_id                END) AS 交接前非有效户交接后6个月是有效户

        ,count(CASE                  WHEN ( efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' ) AND efe_cst_ind_aft_12_month = '1' THEN cst_id                END) AS 交接前非有效户交接后12个月是有效户

        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' THEN cst_id                END) AS 交接前是有效户

        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' AND ( efe_cst_ind_aft_3_month = '0' OR efe_cst_ind_aft_3_month = '' ) THEN cst_id                END) AS 交接前是有效户交接后3个月非有效户

        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' AND ( efe_cst_ind_aft_6_month = '0' OR efe_cst_ind_aft_6_month = '' ) THEN cst_id                END) AS 交接前是有效户交接后6个月非有效户

        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' AND ( efe_cst_ind_aft_12_month = '0' OR efe_cst_ind_aft_12_month = '' ) THEN cst_id                END) AS 交接前是有效户交接后12个月非有效户



		--有效信贷户

		,count(CASE                  WHEN efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' THEN cst_id                END) AS 交接前非有效信贷户

		,count(CASE                  WHEN ( efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' ) AND efe_loan_cst_ind_aft_3_month = '1' THEN cst_id                END) AS 交接前非有效信贷户交接后3个月是有效信贷户

        ,count(CASE                  WHEN ( efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' ) AND efe_loan_cst_ind_aft_6_month = '1' THEN cst_id                END) AS 交接前非有效信贷户交接后6个月是有效信贷户

        ,count(CASE                  WHEN ( efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' ) AND efe_loan_cst_ind_aft_12_month = '1' THEN cst_id                END) AS 交接前非有效信贷户交接后12个月是有效信贷户

        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' THEN cst_id                END) AS 交接前是有效信贷户

        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' AND ( efe_loan_cst_ind_aft_3_month = '0' OR efe_loan_cst_ind_aft_3_month = '' ) THEN cst_id                END) AS 交接前是有效信贷户交接后3个月非有效信贷户

        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' AND ( efe_loan_cst_ind_aft_6_month = '0' OR efe_loan_cst_ind_aft_6_month = '' ) THEN cst_id                END) AS 交接前是有效信贷户交接后6个月非有效信贷户

        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' AND ( efe_loan_cst_ind_aft_12_month = '0' OR efe_loan_cst_ind_aft_12_month = '' ) THEN cst_id                END) AS 交接前是有效信贷户交接后12个月非有效信贷户



        ,count(CASE                  WHEN is_loan_continue = 1 THEN cst_id                END) AS 续贷客户数

        ,count(CASE                  WHEN is_loan_finish = 1 THEN cst_id                END) AS 贷款到期客户数

        ,count(CASE                  WHEN IS_CUR_DSTR_EXPIRE = 1 AND IS_CUR_CONTINUE = 1 THEN cst_id                END) AS 续存客户数

        ,count(CASE                  WHEN IS_CUR_DSTR_EXPIRE = 1 THEN cst_id                END) AS 存款到期客户数

        ,sum(CASE               	 WHEN last_90_days_gl_bal_avg_bfr > 0 THEN last_90_days_gl_bal_avg_bfr              END) 交接前3个月存款日均总规模

		,count( distinct cst_id) AS 交接前3个月存款日均人数

        ,sum(CASE            	     WHEN last_180_days_gl_bal_avg_aft > 0 THEN last_180_days_gl_bal_avg_aft              END) 交接后6个月存款日均总规模

		,count( distinct cst_id) AS 交接后6个月存款日均人数

        ,sum(CASE            	     WHEN last_360_days_gl_bal_avg_aft > 0 THEN last_360_days_gl_bal_avg_aft              END) 交接后12个月存款日均总规模

		,count( distinct cst_id) AS 交接后12个月存款日均人数

        ,sum(CASE              	     WHEN last_90_days_prcp_bal_avg_bfr > 0 THEN last_90_days_prcp_bal_avg_bfr              END) 交接前3个月贷款日均总规模

		,count( distinct cst_id) AS 交接前3个月贷款日均人数

        ,sum(CASE                    WHEN last_180_days_prcp_bal_avg_aft > 0 THEN last_180_days_prcp_bal_avg_aft              END) 交接后6个月贷款日均总规模

		,count( distinct cst_id) AS 交接后6个月贷款日均人数

        ,sum(CASE                    WHEN last_360_days_prcp_bal_avg_aft > 0 THEN last_360_days_prcp_bal_avg_aft              END) 交接后12个月贷款日均总规模

		,count( distinct cst_id) AS 交接后12个月贷款日均人数



		 ,count(case when exe_intr_rate_bfr > exe_intr_rate_aft and exe_intr_rate_aft>0 then cst_id end) as 执行利率下降

        ,count(case when exe_intr_rate_bfr = exe_intr_rate_aft and exe_intr_rate_aft>0 then cst_id end) as 执行利率不变

        ,count(case when exe_intr_rate_bfr < exe_intr_rate_aft and exe_intr_rate_bfr>0 then cst_id end) as 执行利率上升

        ,count(case when coalesce(exe_intr_rate_bfr,0) <>0  and  coalesce(exe_intr_rate_aft,0) <>0 then cst_id end) as 执行利率变化



        ,count(CASE                  WHEN new_sdt_cnt > 0 AND no_sdt_bfr = 1 THEN cst_id                END) AS 新增随贷通客户数

        ,count(CASE                  WHEN no_sdt_bfr = 1 THEN cst_id                END) AS 交接前非随贷通客户

        ,sum(CASE              	     WHEN ftp_3_month_bfr IS NOT NULL THEN ftp_3_month_bfr              END) 交接前3个月FTP月均总规模

		,count( distinct cst_id) AS 交接前3个月FTP月均人数

        ,sum(CASE                    WHEN ftp_6_month_aft IS NOT NULL THEN ftp_6_month_aft              END) 交接后6个月FTP月均总规模

		,count( distinct cst_id) AS 交接后6个月FTP月均人数

        ,sum(CASE                    WHEN ftp_12_month_aft IS NOT NULL THEN ftp_12_month_aft              END) 交接后12个月FTP月均总规模

		,count( distinct cst_id) AS 交接后12个月FTP月均人数

		,mdf_type

		,sum(is_yr_new_hpn_amt) is_yr_new_hpn_amt

		,sum(mdf_ctr_bal) as mdf_ctr_bal

FROM    lab_bigdata_dev.mdf_data_feature_all_20220607

WHERE   dt = '20220601-20230430'

and  prm_fh_org_nm rlike '分行'

GROUP BY

CASE

                           WHEN prm_cst_cnt <= 100 THEN '100以内'

                           WHEN prm_cst_cnt <= 300 THEN '100-300'

                           WHEN prm_cst_cnt <= 500 THEN '300-500'

                           WHEN prm_cst_cnt > 500  THEN '500以上'

                           ELSE NULL

                         END , qua_sub_cls_cd --接手人信贷调查资质

, empe_lqd_type --按交出人人事异动

, CASE

    WHEN last_90_days_prcp_bal_avg_bfr > 0 AND last_90_days_prcp_bal_avg_bfr <= 500000 THEN '50万以下'

    WHEN last_90_days_prcp_bal_avg_bfr <= 1500000                                      THEN '50-150w'

    WHEN last_90_days_prcp_bal_avg_bfr <= 3000000                                      THEN '150-300w'

    WHEN last_90_days_prcp_bal_avg_bfr >= 3000000                                      THEN '300w以上'

  END

  ,mdf_type

  ;







-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_zj_2_20221122;

-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_zj_2_20221122

-- (

    -- 分行名称      STRING COMMENT '分行名称'

    -- ,mdf_type  string COMMENT '交接类型'

	-- ,type  STRING COMMENT '关联字段1'

    -- ,有效户流失率  decimal COMMENT ''

	-- ,有效户转化率  decimal COMMENT ''

    -- ,续贷率      decimal COMMENT ''

    -- ,续存率      decimal COMMENT ''

    -- ,增长率_贷款   decimal COMMENT ''

    -- ,增长率_存款   decimal COMMENT ''

    -- ,执行利率下降占比 decimal COMMENT ''

    -- ,配卡率      decimal COMMENT ''

    -- ,ftp涨跌幅   decimal COMMENT ''

	-- ,IS_YR_NEW_HPN_rate  decimal comment '本年新发生风险贷款率'

-- )

-- COMMENT

-- '客户交接前后业务波动分析_总结2_原始数值_比例'

-- PARTITIONED BY

-- (

    -- dt STRING

-- );



insert overwrite table lab_bigdata_dev.mdf_data_feature_zj_2_20221122 PARTITION (DT = '20220601-20230430')



SELECT  分行名称

	,mdf_type

	,'1' AS type

	,CASE            WHEN sum(交接前是有效户) = 0 THEN 0            ELSE sum(交接前是有效户交接后12个月非有效户) / sum(交接前是有效户)          END 转化率1

	,CASE            WHEN sum(交接前非有效户) = 0 THEN 0            ELSE sum(交接前非有效户交接后12个月是有效户) / sum(交接前非有效户)          END 转化率2

	,CASE            WHEN sum(贷款到期客户数) = 0 THEN 0            ELSE sum(续贷客户数) / sum(贷款到期客户数)          END 续贷率

	,CASE            WHEN sum(存款到期客户数) = 0 THEN 0            ELSE sum(续存客户数) / sum(存款到期客户数)          END 续存率

	,CASE   WHEN (  CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数) END ) = 0 THEN 0

			ELSE ( ( CASE WHEN sum(交接后12个月贷款日均人数) = 0 THEN 0 ELSE sum(交接后12个月贷款日均总规模) / sum(交接后12个月贷款日均人数)  END  ) -

			( CASE WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) ) / ( CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0 ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) END 增长率_贷款

	,CASE WHEN ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) = 0 THEN 0

		  ELSE ( ( CASE WHEN sum(交接后12个月存款日均人数) = 0 THEN 0 ELSE sum(交接后12个月存款日均总规模) / sum(交接后12个月存款日均人数)  END  ) - (

		 CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0    ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数)  END  ) ) / ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) END 增长率_存款

	,CASE WHEN ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) ) = 0 THEN 0 ELSE sum(执行利率下降) / ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) )          END 执行利率下降占比

	,CASE WHEN sum(交接前非随贷通客户) = 0 THEN 0 ELSE sum(新增随贷通客户数) / sum(交接前非随贷通客户)          END 配卡率

	,CASE WHEN ( CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END ) = 0 THEN 0

		  ELSE ( (  CASE  WHEN sum(交接后12个月ftp月均人数) = 0 THEN 0   ELSE sum(交接后12个月ftp月均总规模) / sum(交接后12个月ftp月均人数)  END   ) - (

		  CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0    ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END   ) ) / (CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END )  END ftp涨跌幅

	,case when sum(mdf_ctr_bal)=0 then 0 else sum(is_yr_new_hpn_amt)/sum(mdf_ctr_bal) end as 	本年新发生风险贷款率

FROM    lab_bigdata_dev.mdf_data_feature_zj_20221122 a

where a . 分行名称 rlike '分行'

and DT = '20220601-20230430'

GROUP BY 分行名称 , mdf_type

union

SELECT  '全行' as 分行名称

		,mdf_type

        ,'1' AS type

        ,CASE            WHEN sum(交接前是有效户) = 0 THEN 0            ELSE sum(交接前是有效户交接后12个月非有效户) / sum(交接前是有效户)          END 转化率1

        ,CASE            WHEN sum(交接前非有效户) = 0 THEN 0            ELSE sum(交接前非有效户交接后12个月是有效户) / sum(交接前非有效户)          END 转化率2

        ,CASE            WHEN sum(贷款到期客户数) = 0 THEN 0            ELSE sum(续贷客户数) / sum(贷款到期客户数)          END 续贷率

        ,CASE            WHEN sum(存款到期客户数) = 0 THEN 0            ELSE sum(续存客户数) / sum(存款到期客户数)          END 续存率

        ,CASE   WHEN (  CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数) END ) = 0 THEN 0

				ELSE ( ( CASE WHEN sum(交接后12个月贷款日均人数) = 0 THEN 0 ELSE sum(交接后12个月贷款日均总规模) / sum(交接后12个月贷款日均人数)  END  ) -

				( CASE WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) ) / ( CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0 ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) END 增长率_贷款

        ,CASE WHEN ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) = 0 THEN 0

			  ELSE ( ( CASE WHEN sum(交接后12个月存款日均人数) = 0 THEN 0 ELSE sum(交接后12个月存款日均总规模) / sum(交接后12个月存款日均人数)  END  ) - (

             CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0    ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数)  END  ) ) / ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) END 增长率_存款

        ,CASE WHEN ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) ) = 0 THEN 0 ELSE sum(执行利率下降) / ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) )          END 执行利率下降占比

        ,CASE WHEN sum(交接前非随贷通客户) = 0 THEN 0 ELSE sum(新增随贷通客户数) / sum(交接前非随贷通客户)          END 配卡率

        ,CASE WHEN ( CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END ) = 0 THEN 0

			  ELSE ( (  CASE  WHEN sum(交接后12个月ftp月均人数) = 0 THEN 0   ELSE sum(交接后12个月ftp月均总规模) / sum(交接后12个月ftp月均人数)  END   ) - (

			  CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0    ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END   ) ) / (CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END )  END ftp涨跌幅

        ,case when sum(mdf_ctr_bal)=0 then 0 else sum(is_yr_new_hpn_amt)/sum(mdf_ctr_bal) end as 	本年新发生风险贷款率

		-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0  and sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0  then  sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-

				  -- sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)) end AS 执行利率变化绝对值

		-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0  and sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 and sum(coalesce(exe_intr_rate_bfr_fenzi,0))>0 then  (sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-

				  -- sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)))/( sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0))) end AS 执行利率变化相对值

FROM    lab_bigdata_dev.mdf_data_feature_zj_20221122 a

where a . 分行名称 rlike '分行'

and DT = '20220601-20230430'

GROUP BY mdf_type

;

/*



SELECT  '全行' as 分行名称

		,mdf_type

        ,'1' AS type

        ,CASE            WHEN sum(交接前是有效户) = 0 THEN 0            ELSE sum(交接前是有效户交接后12个月非有效户) / sum(交接前是有效户)          END 转化率1

		,sum(交接前是有效户) 交接前是有效户

		,sum(交接前是有效户交接后12个月非有效户)  交接前是有效户交接后12个月非有效户

        ,CASE            WHEN sum(交接前非有效户) = 0 THEN 0            ELSE sum(交接前非有效户交接后12个月是有效户) / sum(交接前非有效户)          END 转化率2

		,sum(交接前非有效户)  交接前非有效户

		,sum(交接前非有效户交接后12个月是有效户) 交接前非有效户交接后12个月是有效户

        ,CASE            WHEN sum(贷款到期客户数) = 0 THEN 0            ELSE sum(续贷客户数) / sum(贷款到期客户数)          END 续贷率

		,sum(贷款到期客户数)

		,sum(续贷客户数) 续贷客户数

        ,CASE            WHEN sum(存款到期客户数) = 0 THEN 0            ELSE sum(续存客户数) / sum(存款到期客户数)          END 续存率

		,sum(存款到期客户数) 存款到期客户数

		,sum(续存客户数) 续存客户数

        ,CASE   WHEN (  CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数) END ) = 0 THEN 0

				ELSE ( ( CASE WHEN sum(交接后12个月贷款日均人数) = 0 THEN 0 ELSE sum(交接后12个月贷款日均总规模) / sum(交接后12个月贷款日均人数)  END  ) -

				( CASE WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) ) / ( CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0 ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) END 增长率_贷款

        ,sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数) 交接前3个月户均贷款规模

		,sum(交接后12个月贷款日均总规模) / sum(交接后12个月贷款日均人数)-sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数) 交接后12个月户均贷款规模



		,CASE WHEN ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) = 0 THEN 0

			  ELSE ( ( CASE WHEN sum(交接后12个月存款日均人数) = 0 THEN 0 ELSE sum(交接后12个月存款日均总规模) / sum(交接后12个月存款日均人数)  END  ) - (

             CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0    ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数)  END  ) ) / ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) END 增长率_存款

        ,sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) 交接前3个月户均存款规模

		,sum(交接后12个月存款日均总规模) / sum(交接后12个月存款日均人数)-sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) 交接后12个月户均存款规模

		,CASE WHEN ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) ) = 0 THEN 0 ELSE sum(执行利率下降) / ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) )          END 执行利率下降占比

		, sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) 交接后12个月续贷的客户数

		,sum(执行利率下降) 执行利率下降客户数

        ,CASE WHEN sum(交接前非随贷通客户) = 0 THEN 0 ELSE sum(新增随贷通客户数) / sum(交接前非随贷通客户)          END 配卡率

		,sum(交接前非随贷通客户)  交接前非随贷通客户

		,sum(新增随贷通客户数) 新增随贷通客户数

        ,CASE WHEN ( CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END ) = 0 THEN 0

			  ELSE ( (  CASE  WHEN sum(交接后12个月ftp月均人数) = 0 THEN 0   ELSE sum(交接后12个月ftp月均总规模) / sum(交接后12个月ftp月均人数)  END   ) - (

			  CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0    ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END   ) ) / (CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END )  END ftp涨跌幅

        ,sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  交接前户均月ftp

		,(sum(交接后12个月ftp月均总规模) / sum(交接后12个月ftp月均人数)) - (sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数))  as 交接后户均月ftp减交接前户均月ftp

		,case when sum(mdf_ctr_bal)=0 then 0 else sum(is_yr_new_hpn_amt)/sum(mdf_ctr_bal) end as 	本年新发生风险贷款率

		,sum(mdf_ctr_bal) 贷款余额不含核销

		,sum(is_yr_new_hpn_amt) 新发生风险贷款余额

		-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0  and sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0  then  sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-

				  -- sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)) end AS 执行利率变化绝对值

		-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0  and sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 and sum(coalesce(exe_intr_rate_bfr_fenzi,0))>0 then  (sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-

				  -- sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)))/( sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0))) end AS 执行利率变化相对值

FROM    lab_bigdata_dev.202304_mdf_data_feature_zj_20221122 a

where a . 分行名称 rlike '分行'

and mdf_type='全量客户'

GROUP BY mdf_type

;*/





-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_zj_3_20221122;



-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_zj_3_20221122

-- (

    -- 分行名称      STRING COMMENT '分行名称'

    -- ,转化率_是转非  BIGINT COMMENT ''

    -- ,转化率_非转是  BIGINT COMMENT ''

    -- ,续贷率      BIGINT COMMENT ''

    -- ,续存率      BIGINT COMMENT ''

    -- ,增长率_贷款   BIGINT COMMENT ''

    -- ,增长率_存款   BIGINT COMMENT ''

    -- ,执行利率下降占比 BIGINT COMMENT ''

    -- ,配卡率      BIGINT COMMENT ''

    -- ,ftp涨跌幅   BIGINT COMMENT ''

	-- , IS_YR_NEW_HPN_rate  BIGINT comment '本年新发生风险贷款率'

-- )

-- COMMENT

-- '客户交接前后业务波动分析_总结3_排序'

-- PARTITIONED BY

-- (

    -- dt STRING

-- );



insert overwrite table lab_bigdata_dev.mdf_data_feature_zj_3_20221122 PARTITION (DT = '20220601-20230430')



SELECT  a . 分行名称

    ,row_number() over(partition by '1' order by a.有效户流失率 desc) as 转化率_是转非

    ,row_number() over(partition by '1' order by a.有效户转化率 asc) as 转化率_非转是

    ,row_number() over(partition by '1' order by a.续贷率 asc) as 续贷率

    ,row_number() over(partition by '1' order by a.续存率 asc) as 续存率

    ,row_number() over(partition by '1' order by a.增长率_贷款 asc) as 增长率_贷款

    ,row_number() over(partition by '1' order by a.增长率_存款 asc) as 增长率_存款

    ,row_number() over(partition by '1' order by a.执行利率下降占比 desc) as 执行利率下降占比

    ,row_number() over(partition by '1' order by a.配卡率 asc) as 配卡率

    ,row_number() over(partition by '1' order by a.ftp涨跌幅 asc) as ftp涨跌幅

	,row_number() over(partition by '1' order by a.IS_YR_NEW_HPN_rate desc) as 本年新发生风险贷款率

FROM    lab_bigdata_dev.mdf_data_feature_zj_2_20221122 a

where a . 分行名称 rlike '分行'

and a.dt='20220601-20230430'

and mdf_type='交接客户'

;


**c交接分析202105.sql
alter table lab_bigdata_dev.mdf_data_feature_all_20220607 drop if exists partition (dt = '202304');

alter table lab_bigdata_dev.mdf_data_feature_shoumian_20221122 drop if exists partition (dt = '202304');

alter table lab_bigdata_dev.mdf_data_feature_shouliang_20221122 drop if exists partition (dt = '202304');

alter table lab_bigdata_dev.mdf_data_feature_shoujia_20221122 drop if exists partition (dt = '202304');

alter table lab_bigdata_dev.mdf_data_feature_ftp_20221122 drop if exists partition (dt = '202304');

alter table lab_bigdata_dev.mdf_data_feature_risk_20221122 drop if exists partition (dt = '202304');

alter table lab_bigdata_dev.mdf_data_feature_zj_20221122 drop if exists partition (dt = '202304');

alter table lab_bigdata_dev.mdf_data_feature_zj_2_20221122 drop if exists partition (dt = '202304');

alter table lab_bigdata_dev.mdf_data_feature_zj_3_20221122 drop if exists partition (dt = '202304');
**d交接分析202204.sql
-- **********************************************************************

--dt取202304对应的交接时间范围 2022年6月-2023年4月

--dt取202310对应的交接时间范围 20210601-20220430,应该是20231031， 时间未到，先用20231031。未交接客户取20231231时点，未到期、未结清合同的所有合同金额，合同编号取最小一笔；

--交接客户取交接时间在20221101-20231031，第一笔交接的合同编号，及该笔合同对应的合同金额。交接客户23万，未全量客户75万

---修改的地方： edw.dws_bus_fin_ftp_act_smy_inf_dd  t1 --FTP结果集，人事变动 （未交接无人事变动，该逻辑删除）select * from lab_bigdata_dev.202204_test_mdf_data_feature_all_20230531 where dt='202403';

--参数 20211231 20210601 20220430  ，表前缀lab_bigdata_dev.202204 ,'20210601-20220430' ，20240430替换为系统时间上月月末，

/* --以下是通用

drop table if exists lab_bigdata_dev.ftp_all_month;

create table if not exists lab_bigdata_dev.ftp_all_month as

select cif_key as cst_id

    ,to_char(dateadd(to_date(t1.dt,'yyyymmdd'),-1,'dd'),'yyyymmdd') as dt

    ,SUM(coalesce(DECODE(t1.AL_TYPE, '1', 1, - 1) * ( t1.ACC_INT_MONTH_AJUST * t1.EXCHANGE_TO_CNY_RATE - t1.FTP_INT_MONTH_AJUST * t1.EXCHANGE_TO_CNY_RATE ),0)) as ftp_data  --月FTP

from app_iftp.iftp_tpdm_rst_ftp  t1  --20180101 只保留月初

where to_char(dateadd(to_date(t1.dt,'yyyymmdd'),-1,'dd'),'yyyymmdd') in

(

	select distinct dt

	from edw.dim_bus_com_date_st

	where dt>='20181231' and dt<= '20240430' and cur_mon_end=dt

	 )  --月末

and t1.dt<'20220430'

group by cif_key,dt

--FTP新表

union

select cst_id

    ,t1.dt

    ,SUM(DECODE(t1.AST_LBL_CD, '1', 1, - 1) * ( T1.intr_inc_xps_mon_acm * T2.avg_prc * 0.01 - T1.fnl_ftp_intr_mon_acm * T2.avg_prc * 0.01 )) as ftp_data   --月FTP

from edw.dws_bus_fin_ftp_act_smy_inf_dd  t1 --FTP结果集 20230428之后

LEFT JOIN    EDW.DIM_BUS_COM_EXR_INF_DD T2 --汇率表 CNY_EXR 折人民币汇率

ON      T1.CCY_CD = T2.CCY_CD

AND     T2.DT = '20240430'

where (t1.dt in   (

					select distinct dt

					from edw.dim_bus_com_date_st

					where dt>='20181231' and dt<= '20240430' and cur_mon_end=dt

				 )  --月末

and t1.dt>='20220430'

)

or t1.dt = '20240430'

group by  cst_id

    ,t1.dt

;

--新的管户

drop table if exists lab_bigdata_dev.mng_all_cst_id;

create table if not exists lab_bigdata_dev.mng_all_cst_id as

select  t2.cst_id

		,t2.dt

		,t3.prm_mgr_id

		,t2.file_dt



from edw.dws_cst_bas_inf_dd t2

left join adm_pub_app.ADM_PBLC_CST_PRM_MNG_INF_DD  t3

on t2.cst_id=t3.cst_id

and ( (t3.dt in   (

					select distinct dt

					from edw.dim_bus_com_date_st

					where dt>='20181231' and dt<= '20240430' and cur_mon_end=dt

				 )  --月末

		and t3.dt>='20220430'

		)

	or t3.dt = '20240430'

	)

	and t3.dt=t2.dt

where ( (t2.dt in   (

					select distinct dt

					from edw.dim_bus_com_date_st

					where dt>='20181231' and dt<= '20240430' and cur_mon_end=dt

				 )  --月末

		and t2.dt>='20220430'

)

or t2.dt = '20240430'

)

union

--旧的管户

select

t2.cst_id,t2.dt,t2.prm_mgr_id,t2.file_dt

from edw.dws_cst_bas_inf_dd t2

where (t2.dt in   (

					select distinct dt

					from edw.dim_bus_com_date_st

					where dt>='20181231' and dt<= '20240430' and cur_mon_end=dt

				 )  --月末

and t2.dt<'20220430'

)



;

	*/



/*app版本

统计口径：

1.增长率_贷款=交接后户均贷款规模/交接前户均贷款规模-1

2.ftp涨跌幅=交接后户均月ftp/交接前户均月ftp-1

3.本年新发生风险贷款率=交接12个月后，本年新发生风险贷款余额/贷款余额（不含核销）

4.有效户流失率=交接前是有效户交接后12个月非有效户/交接前是有效户

5.有效户转化率=交接前非有效户交接后12个月是有效户/交接前非有效户

6.续贷率=续贷客户数/贷款到期客户数

7.续存率=续存或自动转存户数/销户或到期户数 ,限整存整取业务

8.增长率_存款=交接后户均存款规模/交接前户均存款规模-1，限交接的信贷客户。

9.执行利率下降占比=交接后续贷且执行利率下降客户数/交接后12个月内续贷的客户数

10.新配卡率=交接后新增随贷通客户数/交接前非随贷通客户数

11.观察点dt取202304对应的交接时间范围 2022年6月-2023年4月，若客户如有多次交接，取统计时间范围内第一次交接时间，表现期为交接后12个月，客户范围限交接的信贷客户，全量客户指全量信贷客户。

12.调动时人事异动时间：通过交接时间前后1个月内查找人事异动时间。

13.雷达图面积越大表示综合得分越高，表现越好。雷达图中数值=14-该指标在13家分行的排名，即倒序排名。

14.更多维度的分析，请通过电脑端查看，数据门户-数字化服务-数据分析平台-信贷交接分析PC版。



统计口径说明：



dt 取202105对应的交接时间范围 2020年6月-2021年5月。



dt 取202204对应的交接时间范围 2021年6月-2022年4月



dt 取202304对应的交接时间范围 2022年6月-2023年4月



若客户如有多次交接，取统计时间范围内第一次交接时间。



3、续贷率=续贷户数/结清户数*100%



（1）结清业务：贷款、随贷通卡（不包含如下：员工贷款、助兴通、消费性贷款、消费性随贷通卡、贸易融资、票据业务）



（2）续贷业务：一般贷款（含消费）、随贷通卡、承兑（不含承兑垫款）、贴现、贸易融资、保函、代理贷款、合作贷款、委托贷款



（3）结清户数：统计时间范围内有业务结清的总客户数



（4）续贷户数：统计时间范围有业务结清且发生续贷或同一风险控制号的客户发生业务的总客户数



（5）统计时间：交接后12个月内，信贷合同结清后3个月内发生续贷的客户。



4、续存率=续存或自动转存户数/销户或到期户数*100%



（1）业务范围：整存整取；



（2）续存户数：当月有账户销户且当月有账户开立的客户数；



（3）自动转存户数：当月有账户到期自动转存的客户数；



（4）销户户数：当月有账户销户的客户数；



（5）到期户数：当月有账户到期的客户数。



5、交接前后月数：根据自然月取数。例如客户2020年1月10日交接，交接后三个月为2020年2月、2020年3月、2020年4月。



6、调动时人事异动时间：通过交接时间前后1个月内查找人事异动时间。

*/

-- **********************************************************************

--- 未交接表主表 合同、贷款规模

DROP TABLE IF EXISTS lab_bigdata_dev.202204_no_mdf_amt; --67万 全量客户贷款规模

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.202204_no_mdf_amt AS

SELECT t.cst_id

		,'20211231'     AS MDF_DT  --没有交接的客户，人为给一个时间点，当做交接时间

		,c.prm_org_id   as mdf_qorg_cd ---变更前机构代码

		,c.prm_mgr_id   as mdf_qppl_cd ---变更前人员代码 --主管护客户经理工号

		,c.prm_org_id   as aft_mdf_org_cd ---变更后机构代码

		,c.prm_mgr_id   as aft_mdf_ppl_cd ---变更后人员代码 --主管护客户经理工号

		,'全量客户' mdf_type  --全量客户类型：全量客户 全量客户

		,min(t.busi_ctr_id) busi_ctr_id

	,sum(t.ctr_amt) AS ctr_amt

FROM    edw.dim_bus_loan_ctr_inf_dd t --信贷合同信息

LEFT JOIN    adm_pub.adm_csm_cbas_mng_inf_dd AS c --客户集市-客户基础-客户管户信息

ON      t.cst_id = c.cst_id

AND     c.dt = '20211231'

WHERE   t.dt = '20211231'

AND     t.bus_cd NOT IN ( 'A' , 'B' , 'H' , 'I' , 'O' , 'P' ) --剔除 员工贷款

AND     ( t.chnl_cd <> 'L08' OR t.pd_cd <> '201050101040335' ) --剔除 小鱼分期

AND     t.pd_cd <> '201050101040332' --剔除 蚂蚁借呗

AND     t.pd_cd <> '201050101040319' --剔除百度分期贷

AND     ( t.pd_cd NOT IN ( '201050102010146' , '201050101040348' )  OR t.frz_sts_cd <> '' ) --剔除未签约的泰e贷

AND     (    (

					( t.ctr_bal > 0  --余额>0

					  OR ( t.ctr_bal IS NULL AND     nvl(t.crc_ind, '0') = '0' )  --非循环贷 余额为空

					  OR ( ( nvl(t.crc_ind, '0') <> '0'   OR t.pd_cd LIKE '2010503%' ) AND     ( t.ctr_bal = 0  OR t.ctr_bal IS NULL )  AND     t.apnt_mtu_dt >= t.dt )  --（循环贷 或 随贷通） 且 余额为0 且 未到期

					)

				 AND     nvl(t.frz_sts_cd, ' ') NOT IN ( '3' , '4' )  --3	到期失效  4	终止失效  冻结状态非到期失效，非终止失效



				)

		  OR ( t.ctr_bal > 0 AND     t.pd_cd LIKE '2010503%'  AND     t.apnt_mtu_dt <= t.dt  AND     t.frz_sts_cd IN ( '3' , '4' ) )  --余额>0  且 随贷通 且到期 且 冻结状态是到期失效、终止失效

		  ) ----未终结、未到期业务



AND     length(t.cst_id) = '10' --剔除合作行客户

group by t.cst_id

		,'20211231'       --没有交接的客户，人为给一个时间点，当做交接时间

		,c.prm_org_id   ---变更前机构代码

		,c.prm_mgr_id    ---变更前人员代码 --主管护客户经理工号

		,'全量客户'  --全量客户类型：全量客户 全量客户

--where t.cst_id<>'1696275240'  --交接表客户号匹配出错

;



--- 主表，就是样本表，包括全量客户+未全量客户： 981274，全量客户23万，未全量客户75万

drop table if exists lab_bigdata_dev.202204_mdf_nomdf_sample;

create table if not exists lab_bigdata_dev.202204_mdf_nomdf_sample as --

select  cst_id

    ,MDF_DT

    ,mdf_qorg_cd ---变更前机构代码

    ,mdf_qppl_cd ---变更前人员代码

    ,aft_mdf_org_cd ---变更后机构代码

    ,aft_mdf_ppl_cd ---变更后人员代码

   ,busi_ctr_id

   ,'交接客户' mdf_type --全量客户类型：全量客户 未全量客户

    ,ctr_amt as mdf_ctr_amt

from

	(select *

		,row_number() over(partition by cst_id order by MDF_DT asc) as ranking

	from

		(select t1.obj_id as busi_ctr_id

			,t2.cst_id

			,SUBSTR(MDF_TM, 1, 8) as MDF_DT  --变更时间

			,mdf_qorg_cd   ---变更前机构代码

			,mdf_qppl_cd  -----变更前人员代码

			,aft_mdf_org_cd  ----变更后机构代码

			,aft_mdf_ppl_cd  ----变更后人员代码

			,t2.ctr_amt

		from EDW.DWD_BUS_LOAN_MNG_MDF_RCD_DD t1  --管理人变更记录

		left join  edw.dim_bus_loan_ctr_inf_dd t2

		on t1.obj_id = t2.busi_ctr_id

		and t2.dt = '20220430'

		WHERE   t1.DT = '20220430'

		AND     t1.OBJ_TYP = 'Loan'

		AND     SUBSTR(t1.MDF_TM, 1, 8) >= '20210601'  --变更时间

		AND     SUBSTR(t1.MDF_TM, 1, 8) <= '20220430'

		and     t1.obj_id is not null

	) ss

) sss

where ranking = 1   ----全量客户226726	226725

and coalesce(cst_id,'')<>''

union

--未全量客户

select  cst_id

    ,MDF_DT

    ,mdf_qorg_cd ---变更前机构代码

    ,mdf_qppl_cd ---变更前人员代码

    ,aft_mdf_org_cd ---变更后机构代码

    ,aft_mdf_ppl_cd ---变更后人员代码

	,busi_ctr_id

	,mdf_type

    ,ctr_amt as ctr_amt

from lab_bigdata_dev.202204_no_mdf_amt

where coalesce(cst_id,'')<>''

;





---交接前后日期 ，前3个月，后12个月，如果后3个月超过当前时间，则取当前时间

drop table if exists lab_bigdata_dev.202204_mdf_data;

create table if not exists lab_bigdata_dev.202204_mdf_data as

select cst_id

  ,MDF_DT

  ,mdf_type

  ,mdf_bfr_12_month

  ,mdf_bfr_11_month

  ,mdf_bfr_10_month

  ,mdf_bfr_9_month

  ,mdf_bfr_8_month

  ,mdf_bfr_7_month

  ,mdf_bfr_6_month

  ,mdf_bfr_5_month

  ,mdf_bfr_4_month

  ,mdf_bfr_3_month

  ,mdf_bfr_2_month

  ,mdf_bfr_1_month

  ,min(mdf_aft_1_month) as mdf_aft_1_month

  ,min(mdf_aft_2_month) as mdf_aft_2_month

  ,min(mdf_aft_3_month) as mdf_aft_3_month

  ,min(mdf_aft_4_month) as mdf_aft_4_month

  ,min(mdf_aft_5_month) as mdf_aft_5_month

  ,min(mdf_aft_6_month) as mdf_aft_6_month

  ,min(mdf_aft_7_month) as mdf_aft_7_month

  ,min(mdf_aft_8_month) as mdf_aft_8_month

  ,min(mdf_aft_9_month) as mdf_aft_9_month

  ,min(mdf_aft_10_month) as mdf_aft_10_month

  ,min(mdf_aft_11_month) as mdf_aft_11_month

  ,min(mdf_aft_12_month) as mdf_aft_12_month

from

(

select  cst_id

    ,MDF_DT

	,mdf_type

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-12)) as string),'-','') as mdf_bfr_12_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-11)) as string),'-','') as mdf_bfr_11_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-10)) as string),'-','') as mdf_bfr_10_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-9)) as string),'-','') as mdf_bfr_9_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-8)) as string),'-','') as mdf_bfr_8_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-7)) as string),'-','') as mdf_bfr_7_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-6)) as string),'-','') as mdf_bfr_6_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-5)) as string),'-','') as mdf_bfr_5_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-4)) as string),'-','') as mdf_bfr_4_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-3)) as string),'-','') as mdf_bfr_3_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-2)) as string),'-','') as mdf_bfr_2_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-1)) as string),'-','') as mdf_bfr_1_month



    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),1)) as string),'-','') as mdf_aft_1_month

    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),2)) as string),'-','') as mdf_aft_2_month

    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),3)) as string),'-','') as mdf_aft_3_month

    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),4)) as string),'-','') as mdf_aft_4_month

    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),5)) as string),'-','') as mdf_aft_5_month

    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),6)) as string),'-','') as mdf_aft_6_month

    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),7)) as string),'-','') as mdf_aft_7_month

    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),8)) as string),'-','') as mdf_aft_8_month

    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),9)) as string),'-','') as mdf_aft_9_month

    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),10)) as string),'-','') as mdf_aft_10_month

    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),11)) as string),'-','') as mdf_aft_11_month

    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),12)) as string),'-','') as mdf_aft_12_month

from lab_bigdata_dev.202204_mdf_nomdf_sample

union all

select cst_id

    ,MDF_DT

	,mdf_type

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-12)) as string),'-','') as mdf_bfr_12_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-11)) as string),'-','') as mdf_bfr_11_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-10)) as string),'-','') as mdf_bfr_10_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-9)) as string),'-','') as mdf_bfr_9_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-8)) as string),'-','') as mdf_bfr_8_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-7)) as string),'-','') as mdf_bfr_7_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-6)) as string),'-','') as mdf_bfr_6_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-5)) as string),'-','') as mdf_bfr_5_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-4)) as string),'-','') as mdf_bfr_4_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-3)) as string),'-','') as mdf_bfr_3_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-2)) as string),'-','') as mdf_bfr_2_month

	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-1)) as string),'-','') as mdf_bfr_1_month

    ,'20240430' as mdf_aft_1_month

    ,'20240430' as mdf_aft_2_month

    ,'20240430' as mdf_aft_3_month

    ,'20240430' as mdf_aft_4_month

    ,'20240430' as mdf_aft_5_month

    ,'20240430' as mdf_aft_6_month

    ,'20240430' as mdf_aft_7_month

    ,'20240430' as mdf_aft_8_month

    ,'20240430' as mdf_aft_9_month

    ,'20240430' as mdf_aft_10_month

    ,'20240430' as mdf_aft_11_month

    ,'20240430' as mdf_aft_12_month

from lab_bigdata_dev.202204_mdf_nomdf_sample

) ss

group by cst_id

  ,MDF_DT

  ,mdf_type

  ,mdf_bfr_12_month

  ,mdf_bfr_11_month

  ,mdf_bfr_10_month

  ,mdf_bfr_9_month

  ,mdf_bfr_8_month

  ,mdf_bfr_7_month

  ,mdf_bfr_6_month

  ,mdf_bfr_5_month

  ,mdf_bfr_4_month

  ,mdf_bfr_3_month

  ,mdf_bfr_2_month

  ,mdf_bfr_1_month;





----有效户标识

drop table if exists lab_bigdata_dev.202204_mdf_data_efe_ind;

create table if not exists lab_bigdata_dev.202204_mdf_data_efe_ind as

select t1.cst_id

    ,MDF_DT

	,mdf_type

    ,max(case when t2.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then t2.efe_dep_cst_ind end) as efe_dep_cst_ind_bfr ----有效存款户

    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),3)) as string),'-',''),'20240430') then t2.efe_dep_cst_ind end) as efe_dep_cst_ind_aft_3_month

    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),6)) as string),'-',''),'20240430') then t2.efe_dep_cst_ind end) as efe_dep_cst_ind_aft_6_month

    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-',''),'20240430') then t2.efe_dep_cst_ind end) as efe_dep_cst_ind_aft_12_month

    ,max(case when t2.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then t2.efe_loan_cst_ind end) as efe_loan_cst_ind_bfr ----有效信贷户

    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),3)) as string),'-',''),'20240430') then t2.efe_loan_cst_ind end) as efe_loan_cst_ind_aft_3_month

    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),6)) as string),'-',''),'20240430') then t2.efe_loan_cst_ind end) as efe_loan_cst_ind_aft_6_month

    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-',''),'20240430') then t2.efe_loan_cst_ind end) as efe_loan_cst_ind_aft_12_month



    ,max(case when t2.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then t2.efe_cst_ind end) as efe_cst_ind_bfr ----有效户

    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),3)) as string),'-',''),'20240430') then t2.efe_cst_ind end) as efe_cst_ind_aft_3_month

    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),6)) as string),'-',''),'20240430') then t2.efe_cst_ind end) as efe_cst_ind_aft_6_month

    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-',''),'20240430') then t2.efe_cst_ind end) as efe_cst_ind_aft_12_month

from lab_bigdata_dev.202204_mdf_data t1

left join adm_pub.adm_csm_cbas_ind_inf_dd t2

on t1.cst_id = t2.cst_id

    and t2.dt in

    (

	select distinct mdf_bfr_1_month from lab_bigdata_dev.202204_mdf_data

    union

    select distinct mdf_aft_3_month from lab_bigdata_dev.202204_mdf_data

    union

    select distinct mdf_aft_6_month from lab_bigdata_dev.202204_mdf_data

    union

    select distinct mdf_aft_12_month from lab_bigdata_dev.202204_mdf_data

    ) ----交接前1个月

   -- and t2.dt >= replace(cast(last_day(add_months(to_date('20210601','yyyymmdd'),-1)) as string),'-','')  --2023年5月底

group by t1.cst_id

    ,MDF_DT,mdf_type;





-----存款月日均

drop table if exists lab_bigdata_dev.202204_mdf_data_dep;

create table if not exists lab_bigdata_dev.202204_mdf_data_dep as

select t1.cst_id

    ,t1.MDF_DT,mdf_type

	,sum(case when t3.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then coalesce(t3.last_360_days_gl_bal_acml,0) end)/360 as last_360_days_gl_bal_avg_bfr

    ,sum(case when t3.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then coalesce(t3.last_90_days_gl_bal_acml,0) end)/90 as last_90_days_gl_bal_avg_bfr

    ,sum(case when t3.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),6)) as string),'-',''),'20240430')  then coalesce(t3.last_180_days_gl_bal_acml,0) end)/180 as last_180_days_gl_bal_avg_aft

    ,sum(case when t3.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','') ,'20240430') then coalesce(t3.last_360_days_gl_bal_acml,0) end)/360 as last_360_days_gl_bal_avg_aft

from lab_bigdata_dev.202204_mdf_data t1

left join edw.dim_bus_dep_act_inf_dd t2

on t1.cst_id = t2.cst_id and t2.dt = '20240430'

left join edw.dws_bus_dep_act_acm_inf_dd t3

on t2.dep_act_id = t3.dep_act_id

    and t3.dt in

    (

	select distinct mdf_bfr_1_month from lab_bigdata_dev.202204_mdf_data

    union

    select distinct mdf_aft_6_month from lab_bigdata_dev.202204_mdf_data

    union

    select distinct mdf_aft_12_month from lab_bigdata_dev.202204_mdf_data

    )

   -- and t3.dt >= replace(cast(last_day(add_months(to_date('20210601','yyyymmdd'),-1)) as string),'-','')

group by t1.cst_id,t1.MDF_DT,mdf_type;





--select * from lab_bigdata_dev.202204_mdf_data_loan

---贷款月日均

drop table if exists lab_bigdata_dev.202204_mdf_data_loan;

create table if not exists lab_bigdata_dev.202204_mdf_data_loan as

select t1.cst_id

    ,t1.MDF_DT,mdf_type

	,sum(case when t3.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then coalesce(t3.last_360_days_prcp_bal_acml,0) end)/360 as last_360_days_prcp_bal_avg_bfr

    ,sum(case when t3.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then coalesce(t3.last_90_days_prcp_bal_acml,0) end)/90 as last_90_days_prcp_bal_avg_bfr

    ,sum(case when t3.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),6)) as string),'-',''),'20240430') then coalesce(t3.last_180_days_prcp_bal_acml,0) end)/180 as last_180_days_prcp_bal_avg_aft

    ,sum(case when t3.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-',''),'20240430') then coalesce(t3.last_360_days_prcp_bal_acml,0) end)/360 as last_360_days_prcp_bal_avg_aft

from lab_bigdata_dev.202204_mdf_data t1

left join edw.loan_business_contract t2

on t1.cst_id = t2.customerid and t2.dt = '20240430'

left join edw.dws_bus_loan_dbil_acm_inf_dd t3

on t2.serialno = t3.bus_ctr_id

    and t3.dt in

    (select distinct mdf_bfr_1_month from lab_bigdata_dev.202204_mdf_data

    union

    select distinct mdf_aft_6_month from lab_bigdata_dev.202204_mdf_data

    union

    select distinct mdf_aft_12_month from lab_bigdata_dev.202204_mdf_data )

   -- and t3.dt >= replace(cast(last_day(add_months(to_date('20210601','yyyymmdd'),-1)) as string),'-','')

group by t1.cst_id

    ,t1.MDF_DT,mdf_type

;





---续贷情况

drop table if exists lab_bigdata_dev.202204_mdf_data_cur_rnw;

create table if not exists lab_bigdata_dev.202204_mdf_data_cur_rnw as

select t1.cst_id

    ,t1.MDF_DT,mdf_type

    ,max(case when t2.cst_id is not null then 1 else 0 end) as is_loan_finish  ----  交接后12个月结清

    ,max(case when SUBSTR(T2.RNW_TYPE, 1, 1) IN ( '1' , '2' ) then 1 else 0 end) as is_loan_continue ---- 交接后12个月是否存在续贷 续贷类型：1-客户本身续贷 2-同一风险控制号续贷

from lab_bigdata_dev.202204_mdf_data t1

left join app_ado.FCT_SAM_RSK_CST_LN_PYF_LST_CUR_MON t2 --近一个月经营性客户续贷管理清单(同一风险控制号) 20201231

on t1.cst_id = t2.cst_id

    and t2.dt > t1.MDF_DT   ---交接后

    and t2.dt <=  replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')   ---交接后12个月内

    and t2.dt >= '20210601'

group by t1.cst_id,t1.MDF_DT,mdf_type;





---整取存款续存情况

drop table if exists lab_bigdata_dev.202204_mdf_data_xu_cun;

create table if not exists lab_bigdata_dev.202204_mdf_data_xu_cun as

select t1.CST_ID

    ,t1.MDF_DT,mdf_type

    ,MAX(CASE WHEN

 (

                T2.ACT_DSTR_ACT_DT >= t1.MDF_DT    --账户销户日期

                and t2.ACT_DSTR_ACT_DT <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')

            )  ----销户

        or (

                T3.TRX_DT >=  t1.MDF_DT

                AND T3.TRX_DT <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')  ---到期

           ) THEN '1' ELSE '0' END) AS IS_CUR_DSTR_EXPIRE  --到期或销户

    ,MAX(CASE WHEN

            (

                T4.TRX_DT >= T1.MDF_DT

                AND T4.TRX_DT <=replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')

        )        -----自动转存

        or (

                T2.OPN_DT >= T1.MDF_DT

                AND T2.OPN_DT <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')

        )   then '1' else '0' end) as  IS_CUR_CONTINUE     ------续存

from lab_bigdata_dev.202204_mdf_data t1

left join edw.dim_bus_dep_act_inf_dd t2

on t1.cst_id = t2.cst_id

    and t2.dt = '20240430'

    and t2.DEP_CLS_CD in ('25','26')   ----个人整存整取存款、个人银行卡整存整取存款

LEFT JOIN EDW.DWD_BUS_DEP_BAL_CHG_DTL_DI t3 --最小Dt19980731

ON T2.DEP_ACT_ID = T3.DEP_ACT_ID

    AND T3.DT <= '20240430'

    AND t3.CRD_AND_DBT_IND = 'D'  --借贷标志：转出

    and T3.DT >= '20210601'

    AND COALESCE(T3.RVS_IND,'0') = '0' AND COALESCE(T3.RVSD_IND,'0') = '0'  --RVS_IND冲正标志 RVSD_IND被冲正标志 非冲正     0:正常， 1:冲正， 2:撤销

    AND T3.TXT_CODE NOT IN ('DP0212','DP0210','DP1000')  --入息:DP0212， 结息:DP0210， 付息:DP1000 和 ''

left join EDW.DWD_BUS_DEP_MTU_AUTO_RDPS_REG_DD T4  ----定期到期自动转存登记簿 最小dt20210902

ON T2.DEP_ACT_ID = T4.DEP_ACT_ID

    AND T4.DT = '20240430'

GROUP BY  t1.CST_ID

  ,t1.MDF_DT,mdf_type

;





----续贷前后利率变化

----加权执行利率 = （借据金额*借据期限*借据利率）/（借据金额*借据期限）

drop table if exists lab_bigdata_dev.202204_mdf_data_intr_rate;

create table if not exists lab_bigdata_dev.202204_mdf_data_intr_rate as

select cst_id ,MDF_DT,mdf_type

    ,sum(case when is_xudai_bfr = 1 and amt_bfr > 0 and trm_month_bfr >0 then amt_bfr*trm_month_bfr*exe_intr_rat_bfr end)/sum(case when is_xudai_bfr = 1 and amt_bfr > 0 and trm_month_bfr >0 then amt_bfr*trm_month_bfr end) as exe_intr_rate_bfr

    ,sum(case when is_xudai_aft = 1 and amt_aft > 0 and trm_month_aft >0 then amt_aft*trm_month_aft*exe_intr_rat_aft end)/sum(case when is_xudai_aft = 1 and amt_aft > 0 and trm_month_aft >0 then amt_aft*trm_month_aft end) as exe_intr_rate_aft



	--分子分母拆开，方便后面汇总

	 ,sum(case when is_xudai_bfr = 1 and amt_bfr > 0 and trm_month_bfr >0 then amt_bfr*trm_month_bfr*exe_intr_rat_bfr end) as exe_intr_rate_bfr_fenzi

	 ,sum(case when is_xudai_bfr = 1 and amt_bfr > 0 and trm_month_bfr >0 then amt_bfr*trm_month_bfr end) as exe_intr_rate_bfr_fenmu

    ,sum(case when is_xudai_aft = 1 and amt_aft > 0 and trm_month_aft >0 then amt_aft*trm_month_aft*exe_intr_rat_aft end)  as exe_intr_rate_aft_fenzi

	,sum(case when is_xudai_aft = 1 and amt_aft > 0 and trm_month_aft >0 then amt_aft*trm_month_aft end) as exe_intr_rate_aft_fenmu



from

		(select distinct t1.cst_id

			,t1.MDF_DT,mdf_type

			,coalesce(t3.BUSINESSSUM,0) as amt_bfr --结清合同金额

			,coalesce(t5.BUSINESSSUM,0) as amt_aft --续贷合同金额

			,coalesce(MONTHS_BETWEEN(to_date(REPLACE(t3.MATURITY, '/', ''),'yyyymmdd'),to_date(REPLACE(t3.PUTOUTDATE, '/', ''),'yyyymmdd')),0) as trm_month_bfr ---约定到期-发放到期

			,coalesce(MONTHS_BETWEEN(to_date(REPLACE(t5.MATURITY, '/', ''),'yyyymmdd'),to_date(REPLACE(t5.PUTOUTDATE, '/', ''),'yyyymmdd')),0) as trm_month_aft ---约定到期-发放到期

			,coalesce(t3.businessrate,0)   as  exe_intr_rat_bfr  --结清合同利率

			,coalesce(t5.businessrate,0)   as  exe_intr_rat_aft

			,case when t3.serialno is not null then 1 else 0 end as is_xudai_bfr

			,case when t5.serialno is not null then 1 else 0 end as is_xudai_aft

		from lab_bigdata_dev.202204_mdf_data t1

		left join app_ado.FCT_SAM_RSK_CST_LN_PYF_LST_CUR_MON t2  --近一个月经营性客户续贷管理清单(同一风险控制号)

		on t1.cst_id = t2.cst_id

			and t2.dt > t1.MDF_DT

			and t2.dt <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')  ---交接后12个月

			and t2.dt >= '20210601'

			and SUBSTR(T2.RNW_TYPE, 1, 1) IN ( '1' , '2' )

		left join edw.loan_business_contract t3

		on t2.PYF_BUSI_CTR_ID = t3.serialno  --PYF_BUSI_CTR_ID结清合同流水号

			and t3.dt = '20240430'

			and t3.businessrate is not null

			and t3.businessrate > 0

		left join app_ado.FCT_SAM_RSK_CST_LN_PYF_LST_CUR_MON t4 --近一个月经营性客户续贷管理清单(同一风险控制号)

		on t1.cst_id = t4.cst_id

			and t4.dt > t1.MDF_DT

			and t4.dt <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')  ---交接后12个月

			and t4.dt >= '20210601'

			and SUBSTR(T2.RNW_TYPE, 1, 1) IN ( '1' , '2' )

		left join edw.loan_business_contract t5

		on t4.RNW_BUSI_CTR_ID = t5.serialno  --续贷合同流水号

			and t5.dt = '20240430'

			and t5.businessrate is not null

			and t5.businessrate > 0

		) ss

group by cst_id,MDF_DT,mdf_type;



---综合ftp收入贡献  表有改动江杰

--FTP新旧表拼接  全量表，后续不需要再跑





drop table if exists lab_bigdata_dev.202204_mdf_data_ftp_1;

create table if not exists lab_bigdata_dev.202204_mdf_data_ftp_1 as

SELECT  t1.cst_id,t1.MDF_DT,mdf_type

    ,SUM(ftp_data)/3 AS ftp_3_month_bfr

FROM  lab_bigdata_dev.202204_mdf_data t1

left join lab_bigdata_dev.ftp_all_month t2

on t1.cst_id = t2.cst_id

    and t2.dt >= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-3)) as string),'-','')

    and t2.dt <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','')

group by t1.cst_id,t1.MDF_DT,mdf_type;





drop table if exists lab_bigdata_dev.202204_mdf_data_ftp_2;

create table if not exists lab_bigdata_dev.202204_mdf_data_ftp_2 as

SELECT  t1.cst_id,t1.MDF_DT,mdf_type

    ,SUM(ftp_data)/6 AS ftp_6_month_aft

FROM  lab_bigdata_dev.202204_mdf_data t1

left join lab_bigdata_dev.ftp_all_month t2

on t1.cst_id = t2.cst_id

    and t2.dt >= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),1)) as string),'-','')

    and t2.dt <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),6)) as string),'-','')

group by t1.cst_id,t1.MDF_DT,mdf_type;



--后12个月

drop table if exists lab_bigdata_dev.202204_mdf_data_ftp_3;

create table if not exists lab_bigdata_dev.202204_mdf_data_ftp_3 as

SELECT  t1.cst_id,t1.MDF_DT,mdf_type

    ,SUM(ftp_data)/(datediff(to_date(least( '20240430',replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')),'yyyymmdd'),to_date(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),1)) as string),'-',''),'yyyymmdd'),'mm')+1) AS ftp_12_month_aft

FROM  lab_bigdata_dev.202204_mdf_data t1

left join lab_bigdata_dev.ftp_all_month t2

on t1.cst_id = t2.cst_id

    and t2.dt >= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),1)) as string),'-','')

    and t2.dt <= least( '20240430',replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-',''))

group by t1.cst_id,t1.MDF_DT,mdf_type;



--前12个月

drop table if exists lab_bigdata_dev.202204_mdf_data_ftp_4;

create table if not exists lab_bigdata_dev.202204_mdf_data_ftp_4 as

SELECT  t1.cst_id,t1.MDF_DT,mdf_type

    ,SUM(ftp_data)/12 AS ftp_12_month_bfr

FROM  lab_bigdata_dev.202204_mdf_data t1

left join lab_bigdata_dev.ftp_all_month t2

on t1.cst_id = t2.cst_id

    and t2.dt >= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-12)) as string),'-','')

    and t2.dt <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','')

group by t1.cst_id,t1.MDF_DT,mdf_type;



-- edw.dws_bus_fin_ftp_act_smy_inf_dd  t1 --FTP结果集 最小dt 20211231

-- app_iftp.iftp_tpdm_rst_ftp  t1  --20180101 只保留月初





-- ---综合ftp收入贡献  表有改动江杰

-- drop table if exists lab_bigdata_dev.202204_mdf_ftp;

-- create table if not exists lab_bigdata_dev.202204_mdf_ftp as

-- -- select distinct cst_id,dt

	-- -- ,round(coalesce(last_12_mon_own_ftp_ctb,0)/12,2)  last_12_mon_own_ftp_ctb --近12个月我行综合FTP贡献 月均

	-- -- ,round(coalesce(last_90_ftp_bus_inc_avg,0)/3,2)	last_3_mon_own_ftp_ctb --近90天FTP营业收入日均 月均

-- -- from adm_pub.adm_csm_cbus_ftp_inf_dd --20191231  20200131  20200229

-- -- and dt in (select distinct dt  from edw.dim_bus_com_date_st where dt>='20191231' and dt<= '20240430' and cur_mon_end=dt order by dt )  --月末

-- select t1.cst_id

    -- ,t1.MDF_DT

	-- ,sum(case when t3.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then round(coalesce(t3.last_12_mon_own_ftp_ctb,0)/12,2) end) as last_12_mon_own_ftp_ctb --近12个月我行综合FTP贡献 月均

    -- ,sum(case when t3.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then round(coalesce(t3.last_90_ftp_bus_inc_avg,0)/3,2)end)	last_3_mon_own_ftp_ctb --近90天FTP营业收入日均 月均

    -- ,sum(case when t3.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-',''),'20240430') then round(coalesce(t3.last_12_mon_own_ftp_ctb,0)/12,2) end) as after_12_mon_own_ftp_ctb --近12个月我行综合FTP贡献 月均

-- from lab_bigdata_dev.202204_mdf_data t1

-- left join adm_pub.adm_csm_cbus_ftp_inf_dd t3  --20191231  20200131  20200229

-- on t1.cst_id = t3.cst_id

-- -- and t3.dt in (select distinct dt  from edw.dim_bus_com_date_st

			  -- -- where dt>='20191231' and dt<= '20240430' and cur_mon_end=dt

			  -- -- union select distinct '20240430' from lab_bigdata_dev.202204_mdf_data )  --月末

-- and t3.dt in

    -- (select distinct mdf_bfr_1_month from lab_bigdata_dev.202204_mdf_data

    -- union

    -- select distinct mdf_aft_12_month from lab_bigdata_dev.202204_mdf_data

	-- )



-- group by t1.cst_id

    -- ,t1.MDF_DT

-- ;



--------交接后 管护人数

--dt匹配太慢了，取月底





drop table if exists lab_bigdata_dev.202204_mdf_data_qua_sub;

create table if not exists lab_bigdata_dev.202204_mdf_data_qua_sub as

select t1.aft_mdf_ppl_cd  ---变更后人员代码

    ,t1.MDF_DT,mdf_type

    ,count(distinct case when t2.file_dt <= t1.MDF_DT then loan.loan_cst end) as prm_cst_cnt --建档日期 客户数

    ,max(case when t3.eft_tm <=  t1.MDF_DT then substr(t3.qua_sub_cls_cd,-1,1) end) as qua_sub_cls_cd    ----信贷调查资质 生效时间

from lab_bigdata_dev.202204_mdf_nomdf_sample t1

left join lab_bigdata_dev.mng_all_cst_id t2

on t1.aft_mdf_ppl_cd = t2.prm_mgr_id  ---变更后人员代码

    and substr(t2.dt,1,6) =  substr(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-',''),1,6)   --取月底，月份相同即可

    and t2.dt >= '20210601'

    and t2.dt <= '20220430'

	and t2.dt in (select distinct replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-1)) as string),'-','') from lab_bigdata_dev.202204_mdf_nomdf_sample ) --取月底



left join (  SELECT distinct t.cst_id as loan_cst,t.dt

		  FROM    edw.dim_bus_loan_ctr_inf_dd t

		  WHERE   t.dt >= '20210601'

		  and t.dt <= '20220430'

		  and t.dt in (select distinct replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-1)) as string),'-','') from lab_bigdata_dev.202204_mdf_nomdf_sample ) --取月底

		  AND     t.bus_cd NOT IN ( 'A' , 'B' , 'H' , 'I' , 'O' , 'P' ) --剔除 员工贷款

		    AND     ( t.chnl_cd <> 'L08' OR t.pd_cd <> '201050101040335' ) --剔除 小鱼分期

		  AND     t.pd_cd <> '201050101040332' --剔除 蚂蚁借呗

		  AND     t.pd_cd <> '201050101040319' --剔除百度分期贷

		  AND     ( t.pd_cd NOT IN ( '201050102010146' , '201050101040348' )   OR t.frz_sts_cd <> '' ) --剔除未签约的泰e贷 0签收,1正常,2冻结,3到期失效,4终止失效,5补充资料,6待综合岗签收,7待柜面签收,8终止失效,9到期失效

		  AND     (    (

							( t.ctr_bal > 0  --余额>0

							  OR ( t.ctr_bal IS NULL AND     nvl(t.crc_ind, '0') = '0' )  --非循环贷 余额为空

							  OR ( ( nvl(t.crc_ind, '0') <> '0'   OR t.pd_cd LIKE '2010503%' ) AND     ( t.ctr_bal = 0  OR t.ctr_bal IS NULL )  AND     t.apnt_mtu_dt >= t.dt )  --（循环贷 或 随贷通） 且 余额为0 且 未到期

							)

						 AND     nvl(t.frz_sts_cd, ' ') NOT IN ( '3' , '4' )  --3	到期失效  4	终止失效  冻结状态非到期失效，非终止失效



						)

				  OR ( t.ctr_bal > 0 AND     t.pd_cd LIKE '2010503%'  AND     t.apnt_mtu_dt <= t.dt  AND     t.frz_sts_cd IN ( '3' , '4' ) )  --余额>0  且 随贷通 且到期 且 冻结状态是到期失效、终止失效

				  ) ----未终结、未到期业务

	  )loan

on t2.cst_id=loan.loan_cst

and substr(loan.dt,1,6) =  substr(replace(cast(last_day(add_months(to_date(t2.dt,'yyyymmdd'),-1)) as string),'-',''),1,6)   --取月底，月份相同即可



left join edw.dim_hr_empe_mgr_qua_inf_dd t3  --客户经理资质 20200909

on t1.aft_mdf_ppl_cd = t3.empe_id  -- ---变更后人员代码

    and substr(t3.dt,1,6) =  substr(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-',''),1,6)   --取月底，月份相同即可

    and t3.vld_sts_cd = '1' --有效状态代码

    and t3.qua_sub_cls_cd in ('0060001','0060002','0060003','0060004','0060005','0060006') ----信贷调查资质

    and t3.dt >= '20210601'

    and t3.dt <= '20220430'

	and t3.dt in (select distinct replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-1)) as string),'-','') from lab_bigdata_dev.202204_mdf_nomdf_sample ) --取月底

group by t1.aft_mdf_ppl_cd

    ,t1.MDF_DT,mdf_type;







---新增随贷通

drop table if exists lab_bigdata_dev.202204_mdf_data_new_sdt;

create table if not exists lab_bigdata_dev.202204_mdf_data_new_sdt as

select t1.cst_id,t1.MDF_DT,mdf_type

    ,COUNT(t2.serialno) AS new_sdt_cnt  --新增随贷通合同数

    ,max(case when t3.customerid is null then 1 else 0 end) as no_sdt_bfr --交接前无随贷通标识

from lab_bigdata_dev.202204_mdf_data t1

left join edw.loan_business_contract t2

on t1.cst_id = t2.customerid

    and t2.dt = '20240430'

    and substr(t2.BUSINESSTYPE,1,7)= '2010503'

    and REPLACE(t2.OCCURDATE, '/', '') >= t1.MDF_DT

    and REPLACE(t2.OCCURDATE, '/', '') <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')

left join edw.loan_business_contract t3

on t1.cst_id = t3.customerid

    and t3.dt = '20240430'

    and substr(t3.BUSINESSTYPE,1,7)= '2010503'

    and REPLACE(t3.OCCURDATE, '/', '') < t1.MDF_DT  ----交接前

group by t1.cst_id,t1.MDF_DT,mdf_type;





--修改的地方人事变动 （未交接无人事变动，该逻辑删除）select * from lab_bigdata_dev.202204_test_mdf_data_feature_all_20230531 where dt='202403';



-----人事变动

drop table if exists lab_bigdata_dev.202204_mdf_data_empe_lqd;

create table if not exists lab_bigdata_dev.202204_mdf_data_empe_lqd as

select distinct t1.MDF_DT

    ,t1.mdf_qppl_cd ---变更前人员代码

    ,c_turnover_type --流动类型 nd rz2

    ,case when c_turnover_type = 'nd' and c_name_new in ('业务团队正职','业务团队副职','总经理助理') and c_prev_dept_hid = c_new_dept_hid then '本团队晋升'

        when c_turnover_type = 'nd' and c_name_new in ('业务团队正职','业务团队副职','总经理助理') and c_prev_dept_hid <> c_new_dept_hid then '跨团队晋升'

        when c_turnover_type = 'nd' and c_name_new like '%客户经理%' then '调动至客户经理' --流动后职位名称

        when c_turnover_type = 'nd' and  c_name_new not like '%客户经理%' then '调动至非客户经理'

        when  c_turnover_type = 'lz' then '离职' end as empe_lqd_type

from

(select t1.MDF_DT

    ,t1.mdf_qppl_cd ---变更前人员代码

    ,t3.c_turnover_type --流动类型 nd rz2

    ,t3.c_prev_pos_hid  --流动前职位id

    ,t5.c_name as c_name_prev --流动前职位名称

    ,t3.c_new_pos_hid --流动后职位

    ,t6.c_name as c_name_new --流动后职位名称

    ,t3.c_prev_dept_hid   ---流动前部门

    ,t3.c_new_dept_hid   ----流动后部门

    ,row_number() over(partition by t1.mdf_qppl_cd,t1.MDF_DT order by t3.c_operate_time desc) as ranking

from lab_bigdata_dev.202204_mdf_nomdf_sample t1

left join edw.nhrm_tb_sta_emp t2 --员工表

on t1.mdf_qppl_cd = t2.c_code    --变更前人员代码

    and t2.dt = '20240430'

left join edw.nhrm_tb_sta_emp_turnover t3  --员流动信息

on t2.c_oid = t3.c_employee_id   --员工ID 0475b2cc45974ab1a233836ea6170e71

    and t3.dt = '20240430'

    and replace(substr(t3.c_operate_time,1,10),'-','') >= replace(substr(dateadd(to_date(t1.MDF_DT,'yyyymmdd'),-30,'dd'),1,10),'-','') --操作时间

    and replace(substr(t3.c_operate_time,1,10),'-','') <= replace(substr(dateadd(to_date(t1.MDF_DT,'yyyymmdd'),30,'dd'),1,10),'-','')  --操作时间

left join edw.nhrm_tb_org_position t5  --509职位基本信息

on t3.c_prev_pos_hid = t5.c_hid  --流动前职位

    and t5.dt = '20240430'

left join edw.nhrm_tb_org_position t6

on t3.c_new_pos_hid = t6.c_hid

    and t6.dt = '20240430'

where t5.c_name like '%客户经理%'

) t1

where ranking = 1;



--select * from mdf_data_feature_all_20220607 where dt='20210601-20220430' and ftp_12_month_aft<0.5*ftp_3_month_aft and mdf_type='交接客户';



-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_all_20220607;



-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_all_20220607

-- (

--     cst_id                          STRING  COMMENT '客户号'

--     ,MDF_DT                         STRING  COMMENT '交接日期'

--     ,mdf_qorg_cd                    STRING  COMMENT '变更前机构代码'

--     ,mdf_qppl_cd                    STRING  COMMENT '变更前人员代码'

--     ,aft_mdf_org_cd                 STRING  COMMENT '变更后机构代码'

--     ,aft_mdf_ppl_cd                 STRING  COMMENT '变更后人员代码'

--     ,efe_dep_cst_ind_bfr            STRING  COMMENT '交接前有效存款户标志'

--     ,efe_dep_cst_ind_aft_3_month    STRING  COMMENT '交接后3个月有效存款户标志'

--     ,efe_dep_cst_ind_aft_6_month    STRING  COMMENT '交接后6个月有效存款户标志'

--     ,efe_dep_cst_ind_aft_12_month   STRING  COMMENT '交接后12个月有效存款户标志'

--     ,efe_loan_cst_ind_bfr           STRING  COMMENT '交接前有效信贷户标志'

--     ,efe_loan_cst_ind_aft_3_month   STRING  COMMENT '交接后3个月有效信贷户标志'

--     ,efe_loan_cst_ind_aft_6_month   STRING  COMMENT '交接后6个月有效信贷户标志'

--     ,efe_loan_cst_ind_aft_12_month  STRING  COMMENT '交接后12个月有效信贷户标志'

--     ,efe_cst_ind_bfr                STRING  COMMENT '交接前有效户标志'

--     ,efe_cst_ind_aft_3_month        STRING  COMMENT '交接后3个月有效户标志'

--     ,efe_cst_ind_aft_6_month        STRING  COMMENT '交接后6个月有效户标志'

--     ,efe_cst_ind_aft_12_month       STRING  COMMENT '交接后12个月有效户标志'

--     ,last_90_days_gl_bal_avg_bfr    DECIMAL COMMENT '交接前3个月存款月日均'

--     ,last_180_days_gl_bal_avg_aft   DECIMAL COMMENT '交接后6个月存款月日均'

--     ,last_360_days_gl_bal_avg_aft   DECIMAL COMMENT '交接后12个月存款月日均'

--     ,last_90_days_prcp_bal_avg_bfr  DECIMAL COMMENT '交接前3个月贷款月日均'

--     ,last_180_days_prcp_bal_avg_aft DECIMAL COMMENT '交接后6个月贷款月日均'

--     ,last_360_days_prcp_bal_avg_aft DECIMAL COMMENT '交接后12个月贷款月日均'

--     ,is_loan_finish                 STRING  COMMENT '交接后12个月结清'

--     ,is_loan_continue               STRING  COMMENT '交接后12个月是否存在续贷'

--     ,IS_CUR_DSTR_EXPIRE             STRING  COMMENT '到期或销户'

--     ,IS_CUR_CONTINUE                STRING  COMMENT '续存（含自动转存）'

--     ,exe_intr_rate_bfr              DECIMAL COMMENT '续贷前执行利率'

--     ,exe_intr_rate_aft              DECIMAL COMMENT '续贷后执行利率'

--     ,ftp_3_month_bfr                DECIMAL COMMENT '交接前3个月ftp月均'

--     ,ftp_6_month_aft                DECIMAL COMMENT '交接后6个月ftp月均'

--     ,ftp_12_month_aft               DECIMAL COMMENT '交接后12个月ftp月均'

--     ,prm_cst_cnt                    DECIMAL COMMENT '管护人数'

--     ,qua_sub_cls_cd                 STRING  COMMENT '-信贷调查资质'

--     ,new_sdt_cnt                    DECIMAL COMMENT '随贷通新增人数'

--     ,no_sdt_bfr                     STRING  COMMENT '交接前非随贷通'

--     ,empe_lqd_type                  STRING  COMMENT '人事异动'

--     ,c_turnover_type                STRING  COMMENT '流动类型'

--     ,prm_org_id                     STRING  COMMENT '主管户机构'

--     ,prm_fh_org_id                  STRING  COMMENT '主管户分行机构号'

--     ,prm_fh_org_nm                  STRING  COMMENT '主管户分行名称'

--     ,prm_zh_org_id                  STRING  COMMENT '主管户支行机构号'

--     ,prm_zh_org_nm                  STRING  COMMENT '主管户支行名称'

---    ,ctr_amt                        decimal COMMENT '交接规模'

---    ,is_yr_new_hpn_amt              decimal comment '新发生风险贷款余额'

---    ,busi_ctr_ind                   string  comment '合同是否有效'

---    ,mdf_ctr_bal                    decimal comment '交接客户贷款余额'

-- )

-- COMMENT

-- '客户交接明细表'

-- PARTITIONED BY

-- (

--     dt STRING

-- );



-- alter table lab_bigdata_dev.mdf_data_feature_all_20220607 add columns (

--     is_yr_new_hpn_amt decimal comment '新发生风险贷款余额'

--     ,busi_ctr_ind string comment '合同是否有效'

--     ,mdf_ctr_bal decimal comment '交接客户贷款余额'

-- );

-- alter table lab_bigdata_dev.mdf_data_feature_all_20220607 add columns (

    -- mdf_type  string comment '交接客户类型'  --交接客户 未全量客户

-- );

/*

DROP TABLE IF EXISTS lab_bigdata_dev.xuni_org;



CREATE TABLE IF NOT EXISTS lab_bigdata_dev.xuni_org

(

    sum_org_id                  STRING  COMMENT '主管户支行机构号'

    ,sum_org_nm                  STRING  COMMENT '主管户支行名称'

    ,UNT_ORG_ID                 STRING  COMMENT '变更后机构代码'

)

COMMENT

'虚拟支行'

;

insert into lab_bigdata_dev.xuni_org

values ('310188800','上海分行虚拟支行','310199999'),

('320288800','苏州分行虚拟支行','320299999'),

('330188800','台州分行虚拟支行','330199999'),

('330288800','杭州分行虚拟支行','330299999'),

('330388800','宁波分行虚拟支行','330399999'),

('330588800','温州分行虚拟支行','330599999'),

('330688800','丽水分行虚拟支行','330699999'),

('330788800','绍兴分行虚拟支行','330799999'),

('330888800','金华分行虚拟支行','330899999'),

('330988800','嘉兴分行虚拟支行','330999999'),

('331088800','湖州分行虚拟支行','331099999'),

('331188800','衢州分行虚拟支行','331199999'),

('331288800','舟山分行虚拟支行','331299999'),

('336188800','浙江庆元泰隆村镇银行虚拟支行','336199999'),

('356188800','福建政和泰隆村镇银行虚拟支行','356199999'),

('356288800','福建长乐泰隆村镇银行虚拟支行','356299999'),

('356388800','福建龙海泰隆村镇银行虚拟支行','356399999'),

('356488800','福建福清泰隆村镇银行虚拟支行','356499999'),

('416188800','河南叶县泰隆村镇银行虚拟支行','416199999'),

('416288800','河南汝南泰隆村镇银行虚拟支行','416299999'),

('426188800','湖北大冶泰隆村镇银行虚拟支行','426199999'),

('446188800','广东英德泰隆村镇银行虚拟支行','446199999'),

('446288800','广东四会泰隆村镇银行虚拟支行','446299999'),

('616188800','陕西旬阳泰隆村镇银行虚拟支行','616199999'),

('616288800','陕西眉县泰隆村镇银行虚拟支行','616299999'),

('616388800','陕西泾阳泰隆村镇银行虚拟支行','616399999')

;

*/

insert overwrite table lab_bigdata_dev.mdf_data_feature_all_20220607 PARTITION (DT = '20210601-20220430')

select t1.cst_id

    ,t1.MDF_DT

    ,t1.mdf_qorg_cd ---变更前机构代码

    ,t1.mdf_qppl_cd -----变更前人员代码

    ,t1.aft_mdf_org_cd ----变更后机构代码

    ,t1.aft_mdf_ppl_cd ----变更后人员代码

    ,coalesce(t2.efe_dep_cst_ind_bfr,'0') as  efe_dep_cst_ind_bfr ----交接前有效存款户标志

    ,coalesce(t2.efe_dep_cst_ind_aft_3_month,'0') as efe_dep_cst_ind_aft_3_month   ----交接后3个月有效存款户标志

    ,coalesce(t2.efe_dep_cst_ind_aft_6_month,'0') as efe_dep_cst_ind_aft_6_month   ----交接后6个月有效存款户标志

    ,coalesce(t2.efe_dep_cst_ind_aft_12_month,'0') as efe_dep_cst_ind_aft_12_month   ----交接后12个月有效存款户标志

    ,coalesce(t2.efe_loan_cst_ind_bfr,'0') as efe_loan_cst_ind_bfr    ----交接前有效信贷户标志

    ,coalesce(t2.efe_loan_cst_ind_aft_3_month,'0') as efe_loan_cst_ind_aft_3_month  ----交接后3个月有效信贷户标志

    ,coalesce(t2.efe_loan_cst_ind_aft_6_month,'0') as efe_loan_cst_ind_aft_6_month ----交接后6个月有效信贷户标志

    ,coalesce(t2.efe_loan_cst_ind_aft_12_month,'0') as efe_loan_cst_ind_aft_12_month  ----交接后12个月有效信贷户标志

    ,coalesce(t2.efe_cst_ind_bfr,'0') as efe_cst_ind_bfr    ----交接前有效户标志

    ,coalesce(t2.efe_cst_ind_aft_3_month,'0') as efe_cst_ind_aft_3_month   ----交接后3个月有效户标志

    ,coalesce(t2.efe_cst_ind_aft_6_month,'0') as efe_cst_ind_aft_6_month  ----交接后6个月有效户标志

    ,coalesce(t2.efe_cst_ind_aft_12_month,'0') as efe_cst_ind_aft_12_month  ----交接后12个月有效户标志

    , t3.last_90_days_gl_bal_avg_bfr ---交接前3个月存款月日均

	--,case when t1.mdf_type='交接客户' then t3.last_90_days_gl_bal_avg_bfr when  t1.mdf_type='全量客户' then t3.last_360_days_gl_bal_avg_bfr end as  last_90_days_gl_bal_avg_bfr ---交接前3个月存款月日均

    ,t3.last_180_days_gl_bal_avg_aft   ---交接后6个月存款月日均

    ,t3.last_360_days_gl_bal_avg_aft   ---交接后12个月存款月日均

    , t4.last_90_days_prcp_bal_avg_bfr --交接前3个月贷款月日均

	--,case when t1.mdf_type='交接客户' then t4.last_90_days_prcp_bal_avg_bfr when  t1.mdf_type='全量客户' then t4.last_360_days_prcp_bal_avg_bfr end as  last_90_days_prcp_bal_avg_bfr---交接前3个月贷款月日均

    ,t4.last_180_days_prcp_bal_avg_aft   ---交接后6个月贷款月日均

    ,t4.last_360_days_prcp_bal_avg_aft   ---交接后12个月贷款月日均

    ,t5.is_loan_finish     -------交接后12个月结清

    ,t5.is_loan_continue   -----交接后12个月是否存在续贷

    ,t6.IS_CUR_DSTR_EXPIRE   -----到期或销户

    ,t6.IS_CUR_CONTINUE     ----续存（含自动转存）

    ,t7.exe_intr_rate_bfr    -----续贷前执行利率

    ,t7.exe_intr_rate_aft   -----续贷后执行利率

	--,case when t1.mdf_type='交接客户' then t8.ftp_3_month_bfr  when  t1.mdf_type='全量客户' then ftp.ftp_12_month_bfr end as  ftp_3_month_bfr    ---交接前3个月ftp月均

	, t8.ftp_3_month_bfr    ---交接前3个月ftp月均

	,null  ftp_6_month_aft ---交接后6个月ftp月均

	,t15.ftp_12_month_aft ---交接后12个月ftp月均

    -- ,case when t1.mdf_type='交接客户' then t8.last_3_mon_own_ftp_ctb  when  t1.mdf_type='全量客户' then t8.last_12_mon_own_ftp_ctb end as  ftp_3_month_bfr ---交接前3个月ftp月均



    ,t9.prm_cst_cnt   ----管护人数

    ,t9.qua_sub_cls_cd   -----信贷调查资质

    ,t10.new_sdt_cnt    ------随贷通新增人数

    ,t10.no_sdt_bfr

    ,t11.empe_lqd_type -----人事异动

    ,t11.c_turnover_type  --流动类型

    ,t12.prm_org_id   ---主管户机构

    ,t13.sum_org_id  as prm_fh_org_id        -- 主管户分行机构号

    ,t13.sum_org_nm  as prm_fh_org_nm        -- 主管户分行名称

    ,t20.sum_org_id  as prm_zh_org_id        -- 主管户支行机构号

    ,t20.sum_org_nm  as prm_zh_org_nm        -- 主管户支行名称

    ,t1.mdf_ctr_amt as ctr_amt

    ,COALESCE(T21.is_yr_new_hpn_amt,0) AS is_yr_new_hpn_amt



    ,case when t22.cst_id is not null then '1' else '0' end as busi_ctr_ind  --当前有未结清的贷款标识

    ,COALESCE(T21.贷款余额,0) AS mdf_ctr_bal --当前未结清的贷款余额

	,t1.mdf_type  --交接客户类型

from lab_bigdata_dev.202204_mdf_nomdf_sample t1

left join lab_bigdata_dev.202204_mdf_data_efe_ind t2

on t1.cst_id = t2.cst_id and t1.MDF_DT = t2.MDF_DT and t1.mdf_type=t2.mdf_type

left join lab_bigdata_dev.202204_mdf_data_dep t3

on t1.cst_id = t3.cst_id and t1.MDF_DT = t3.MDF_DT and t1.mdf_type=t3.mdf_type

left join lab_bigdata_dev.202204_mdf_data_loan t4

on t1.cst_id = t4.cst_id and t1.MDF_DT = t4.MDF_DT and t1.mdf_type=t4.mdf_type

left join lab_bigdata_dev.202204_mdf_data_cur_rnw t5

on t1.cst_id = t5.cst_id and t1.MDF_DT = t5.MDF_DT and t1.mdf_type=t5.mdf_type

left join lab_bigdata_dev.202204_mdf_data_xu_cun t6

on t1.cst_id = t6.cst_id and t1.MDF_DT = t6.MDF_DT and t1.mdf_type=t6.mdf_type

left join lab_bigdata_dev.202204_mdf_data_intr_rate t7

on t1.cst_id = t7.cst_id and t1.MDF_DT = t7.MDF_DT and t1.mdf_type=t7.mdf_type



left join lab_bigdata_dev.202204_mdf_data_ftp_1 t8

on t1.cst_id = t8.cst_id   and t1.MDF_DT = t8.MDF_DT and t1.mdf_type=t8.mdf_type

left join lab_bigdata_dev.202204_mdf_data_ftp_2 t14

on t1.cst_id = t14.cst_id   and t1.MDF_DT = t14.MDF_DT and t1.mdf_type=t14.mdf_type

left join lab_bigdata_dev.202204_mdf_data_ftp_3 t15

on t1.cst_id = t15.cst_id   and t1.MDF_DT = t15.MDF_DT and t1.mdf_type=t15.mdf_type

left join lab_bigdata_dev.202204_mdf_data_ftp_4 ftp

on t1.cst_id = ftp.cst_id   and t1.MDF_DT = ftp.MDF_DT and t1.mdf_type=ftp.mdf_type



left join lab_bigdata_dev.202204_mdf_data_qua_sub t9

on t1.aft_mdf_ppl_cd = t9.aft_mdf_ppl_cd  and t1.mdf_type=t9.mdf_type and t1.MDF_DT = t9.MDF_DT

left join lab_bigdata_dev.202204_mdf_data_new_sdt t10

on t1.cst_id = t10.cst_id and t1.MDF_DT = t10.MDF_DT  and t1.mdf_type=t10.mdf_type

left join lab_bigdata_dev.202204_mdf_data_empe_lqd t11

on t1.mdf_qppl_cd = t11.mdf_qppl_cd and  t1.MDF_DT = t11.MDF_DT

left join adm_pub_app.ADM_PBLC_CST_PRM_MNG_INF_DD t12 --edw.dws_cst_bas_inf_dd t12

on t1.cst_id = t12.cst_id

    and t12.dt = '20220430'

left join edw.dim_hr_org_sum_org_rel_dd t13

on t1.aft_mdf_org_cd=t13.UNT_ORG_ID

    and t13.dt='20220430'

    and t13.SUM_ORG_LVL='F'

    AND t13.ORG_RLTN_DIM_CD='WD3'

    AND t13.SUM_TYP_CD='1'

LEFT JOIN  (select   UNT_ORG_ID

					,sum_org_id

					,sum_org_nm

			from edw.dim_hr_org_sum_org_rel_dd t20

			where  t20.dt = '20220430'

			AND     t20.SUM_ORG_LVL = 'Z' --支行

			AND    t20.ORG_RLTN_DIM_CD = 'WD3'

			AND    t20.SUM_TYP_CD = '1'

			union

			select   UNT_ORG_ID

					,sum_org_id

					,sum_org_nm

			from lab_bigdata_dev.xuni_org

			) t20

ON     t1.aft_mdf_org_cd=t20.UNT_ORG_ID



LEFT JOIN



(



select

    cst_id

    ,SUM(CASE  WHEN A.BSN_STS NOT LIKE '%核销%' THEN A.DBIL_BAL_CNY  ELSE 0 END) 贷款余额 -- 贷款余额（不含核销）

    ,SUM(CASE when A.IS_YR_NEW_HPN = 'Y' AND A.IS_RSK_LOAN = 'Y' THEN A.DBIL_BAL_CNY  ELSE 0  END) is_yr_new_hpn_amt   --本年新发生风险贷款余额

from adm_pub.ADM_RSK_APP_INTER_ALL a

where a.dt = least(replace(cast(last_day(add_months(to_date('20220430','yyyymmdd'),12)) as string),'-',''),'20240430')  --观察点12个月以后，当前日期 二者取小

and a.DBIL_BAL_CNY > 0

and   ( A.ACC_TYPE = '信用卡' OR A.ACC_TYPE LIKE '0%' ) AND A.ACC_TYPE NOT LIKE '0301%'  --表内业务

group by cst_id



) T21





ON T1.cst_id = T21.cst_id

left join

(select cst_id

    ,sum(ctr_bal) as ctr_bal

from edw.dim_bus_loan_ctr_inf_dd t

where dt = least(replace(cast(last_day(add_months(to_date('20220430','yyyymmdd'),12)) as string),'-',''),'20240430')

and (( ( t.ctr_bal > 0

    OR ( t.ctr_bal IS NULL

AND     nvl(t.crc_ind, '0') = '0' )

    OR ( ( nvl(t.crc_ind, '0') <> '0'

    OR t.pd_cd LIKE '2010503%' )

AND     ( t.ctr_bal = 0

    OR t.ctr_bal IS NULL )

AND     t.apnt_mtu_dt >= least(replace(cast(last_day(add_months(to_date('20220430','yyyymmdd'),12)) as string),'-',''),'20240430') ) )

AND     nvl(t.frz_sts_cd, ' ') NOT IN ( '3' , '4' ) )

    OR ( t.ctr_bal > 0

AND     t.pd_cd LIKE '2010503%'

AND     t.apnt_mtu_dt <= least(replace(cast(last_day(add_months(to_date('20220430','yyyymmdd'),12)) as string),'-',''),'20240430')

AND     t.frz_sts_cd IN ( '3' , '4' ) ))

group by cst_id

) t22

ON T1.cst_id = T22.cst_id

where t13.sum_org_nm rlike '分行' or t13.sum_org_nm rlike '村镇银行';    -- 分行







--------守面

-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_shoumian_20221122;



-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_shoumian_20221122

-- (

--     分行名称   STRING  COMMENT '分行名称'

--     ,支行名称  STRING  COMMENT '支行名称'

--     ,接收人管户户数            STRING  COMMENT '接收人管户户数'

--     ,接手人信贷调查资质     STRING  COMMENT '接手人信贷调查资质'

--     ,按交出人人事异动      STRING  COMMENT '按交出人人事异动'

--     ,客户分层               STRING  COMMENT '客户分层'

--     ,交接前非有效户            STRING  COMMENT '交接前非有效户'

--     ,交接前非有效户交接后3个月是有效户  STRING  COMMENT '交接前非有效户交接后3个月是有效户'

--     ,交接前非有效户交接后6个月是有效户  STRING  COMMENT '交接前非有效户交接后6个月是有效户'

--     ,交接前非有效户交接后12个月是有效户 STRING  COMMENT '交接前非有效户交接后12个月是有效户'

--     ,交接前是有效户            STRING  COMMENT '交接前是有效户'

--     ,交接前是有效户交接后3个月非有效户  STRING  COMMENT '交接前是有效户交接后3个月非有效户'

--     ,交接前是有效户交接后6个月非有效户  STRING  COMMENT '交接前是有效户交接后6个月非有效户'

--     ,交接前是有效户交接后12个月非有效户 STRING  COMMENT '交接前是有效户交接后12个月非有效户'

--     ,续贷客户数              DECIMAL COMMENT '续贷客户数'

--     ,贷款到期客户数            DECIMAL COMMENT '贷款到期客户数'

--     ,续存客户数              DECIMAL COMMENT '续存客户数'

--     ,存款到期客户数            DECIMAL COMMENT '存款到期客户数'

--     ,交接前非有效信贷户       string   COMMENT '交接前非有效信贷户'

--     ,交接前非有效信贷户交接后3个月是有效信贷户 string COMMENT '交接前非有效信贷户交接后3个月是有效信贷户'

--     ,交接前非有效信贷户交接后6个月是有效信贷户 string COMMENT '交接前非有效信贷户交接后6个月是有效信贷户'

--     ,交接前非有效信贷户交接后12个月是有效信贷户 string COMMENT '交接前非有效信贷户交接后12个月是有效信贷户'

--     ,交接前是有效信贷户       string COMMENT '交接前是有效信贷户'

--     ,交接前是有效信贷户交接后3个月非有效信贷户 string COMMENT '交接前是有效信贷户交接后3个月非有效信贷户'

--     ,交接前是有效信贷户交接后6个月非有效信贷户 string COMMENT '交接前是有效信贷户交接后6个月非有效信贷户'

--     ,交接前是有效信贷户交接后12个月非有效信贷户 string COMMENT '交接前是有效信贷户交接后12个月非有效信贷户'

--     ,mdf_cst_cnt     decimal COMMENT '交接客户数'

--     ,mdf_ctr_amt     decimal COMMENT '交接规模'

-- COMMENT

-- '客户交接前后业务波动分析_守面'

-- PARTITIONED BY

-- (

--     dt STRING

-- );



-- alter table lab_bigdata_dev.mdf_data_feature_shoumian_20221122 add columns (

    -- mdf_type  string comment '交接客户类型'  --交接客户 未全量客户

-- );

-- alter table lab_bigdata_dev.mdf_data_feature_shoumian_20221122 add columns (

    -- prm_fh_org_id  string comment '主管户分行机构号'  --交接客户 未全量客户

-- );





insert overwrite table lab_bigdata_dev.mdf_data_feature_shoumian_20221122 PARTITION (DT = '20210601-20220430')

select   prm_fh_org_nm  分行名称

        ,prm_zh_org_nm  支行名称

        ,case when prm_cst_cnt <= 100 then '100以内'

             when prm_cst_cnt <=300 then '100-300'

             when prm_cst_cnt <=500 then '300-500'

             when prm_cst_cnt >500 then '500以上'

             else null end as 接收人管户户数

        ,qua_sub_cls_cd 接手人信贷调查资质

        ,empe_lqd_type 按交出人人事异动

        ,case when last_90_days_prcp_bal_avg_bfr>0 and last_90_days_prcp_bal_avg_bfr<=500000 then '50万以下'

               when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'

               when last_90_days_prcp_bal_avg_bfr <=3000000 then '150-300w'

               when last_90_days_prcp_bal_avg_bfr > 3000000 then '300w以上' end  as 客户分层

--------统计客户数字段

        ,count(case when efe_cst_ind_bfr = '0' or efe_cst_ind_bfr ='' then cst_id end) as 交接前非有效户

        ,count(case when (efe_cst_ind_bfr = '0' or efe_cst_ind_bfr ='') and efe_cst_ind_aft_3_month = '1' then cst_id end) as 交接前非有效户交接后3个月是有效户

        ,count(case when (efe_cst_ind_bfr = '0' or efe_cst_ind_bfr ='') and efe_cst_ind_aft_6_month = '1' then cst_id end) as 交接前非有效户交接后6个月是有效户

        ,count(case when (efe_cst_ind_bfr = '0' or efe_cst_ind_bfr ='') and efe_cst_ind_aft_12_month = '1' then cst_id end) as 交接前非有效户交接后12个月是有效户

        ,count(case when efe_cst_ind_bfr = '1' then cst_id end) as 交接前是有效户

        ,count(case when efe_cst_ind_bfr = '1' and (efe_cst_ind_aft_3_month = '0' or efe_cst_ind_aft_3_month ='') then cst_id end) as 交接前是有效户交接后3个月非有效户

        ,count(case when efe_cst_ind_bfr = '1' and (efe_cst_ind_aft_6_month = '0' or efe_cst_ind_aft_6_month ='') then cst_id end) as 交接前是有效户交接后6个月非有效户

        ,count(case when efe_cst_ind_bfr = '1' and (efe_cst_ind_aft_12_month = '0' or efe_cst_ind_aft_12_month ='') then cst_id end) as 交接前是有效户交接后12个月非有效户

        ,count( case when is_loan_continue =1 then cst_id end) as 续贷客户数

        ,count( case when is_loan_finish =1 then cst_id end) as 贷款到期客户数

        ,count( case when IS_CUR_DSTR_EXPIRE =1 and IS_CUR_CONTINUE =1 then cst_id end) as 续存客户数

        ,count( case when IS_CUR_DSTR_EXPIRE =1 then cst_id end) as 存款到期客户数

        ,count(case when efe_loan_cst_ind_bfr = '0' or efe_loan_cst_ind_bfr ='' then cst_id end) as 交接前非有效信贷户

        ,count(case when (efe_loan_cst_ind_bfr = '0' or efe_loan_cst_ind_bfr ='') and efe_loan_cst_ind_aft_3_month = '1' then cst_id end) as 交接前非有效信贷户交接后3个月是有效信贷户

        ,count(case when (efe_loan_cst_ind_bfr = '0' or efe_loan_cst_ind_bfr ='') and efe_loan_cst_ind_aft_6_month = '1' then cst_id end) as 交接前非有效信贷户交接后6个月是有效信贷户

        ,count(case when (efe_loan_cst_ind_bfr = '0' or efe_loan_cst_ind_bfr ='') and efe_loan_cst_ind_aft_12_month = '1' then cst_id end) as 交接前非有效信贷户交接后12个月是有效信贷户

        ,count(case when efe_loan_cst_ind_bfr = '1' then cst_id end) as 交接前是有效信贷户

        ,count(case when efe_loan_cst_ind_bfr = '1' and (efe_loan_cst_ind_aft_3_month = '0' or efe_loan_cst_ind_aft_3_month ='') then cst_id end) as 交接前是有效信贷户交接后3个月非有效信贷户

        ,count(case when efe_loan_cst_ind_bfr = '1' and (efe_loan_cst_ind_aft_6_month = '0' or efe_loan_cst_ind_aft_6_month ='') then cst_id end) as 交接前是有效信贷户交接后6个月非有效信贷户

        ,count(case when efe_loan_cst_ind_bfr = '1' and (efe_loan_cst_ind_aft_12_month = '0' or efe_loan_cst_ind_aft_12_month ='') then cst_id end) as 交接前是有效信贷户交接后12个月非有效信贷户

        ,count(cst_id) as mdf_cst_cnt

        ,sum(ctr_amt) as mdf_ctr_amt

		,mdf_type

from lab_bigdata_dev.mdf_data_feature_all_20220607

where dt = '20210601-20220430'

and mdf_type='交接客户'

group by  prm_fh_org_nm  ,prm_zh_org_nm

        ,case when prm_cst_cnt <= 100 then '100以内'

             when prm_cst_cnt <=300 then '100-300'

             when prm_cst_cnt <=500 then '300-500'

             when prm_cst_cnt >500 then '500以上'

             else null end

        ,qua_sub_cls_cd --接手人信贷调查资质

        ,empe_lqd_type  --按交出人人事异动

        ,case when last_90_days_prcp_bal_avg_bfr>0 and last_90_days_prcp_bal_avg_bfr<=500000 then '50万以下'

               when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'

               when last_90_days_prcp_bal_avg_bfr <=3000000 then '150-300w'

               when last_90_days_prcp_bal_avg_bfr > 3000000 then '300w以上' end

			   ,mdf_type

               ;





--------守量

-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_shouliang_20221122;



-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_shouliang_20221122

-- (

--     分行名称  STRING  COMMENT '分行名称'

--     ,支行名称 STRING  COMMENT '支行名称'

--     ,接收人管户户数           STRING  COMMENT ''

--     ,接手人信贷调查资质    STRING  COMMENT '接手人信贷调查资质'

--     ,按交出人人事异动     STRING  COMMENT '按交出人人事异动'

--     ,客户分段1             STRING  COMMENT '客户分段1'

--     ,客户分段2             STRING  COMMENT '客户分段2'

--     ,交接前3个月存款日均总规模     DECIMAL COMMENT '交接前3个月存款日均总规模'

--     ,交接前3个月存款日均人数      DECIMAL COMMENT '交接前3个月存款日均人数'

--     ,交接后6个月存款日均总规模     DECIMAL COMMENT '交接后6个月存款日均总规模'

--     ,交接后6个月存款日均人数      DECIMAL COMMENT '交接后6个月存款日均人数'

--     ,交接后12个月存款日均总规模    DECIMAL COMMENT '交接后12个月存款日均总规模'

--     ,交接后12个月存款日均人数     DECIMAL COMMENT '交接后12个月存款日均人数'

--     ,交接前3个月贷款日均总规模     DECIMAL COMMENT '交接前3个月贷款日均总规模'

--     ,交接前3个月贷款日均人数      DECIMAL COMMENT '交接前3个月贷款日均人数'

--     ,交接后6个月贷款日均总规模     DECIMAL COMMENT '交接后6个月贷款日均总规模'

--     ,交接后6个月贷款日均人数      DECIMAL COMMENT '交接后6个月贷款日均人数'

--     ,交接后12个月贷款日均总规模    DECIMAL COMMENT '交接后12个月贷款日均总规模'

--     ,交接后12个月贷款日均人数     DECIMAL COMMENT '交接后12个月贷款日均人数'

--     ,mdf_cst_cnt     decimal COMMENT '交接客户数'

--     ,mdf_ctr_amt     decimal COMMENT '交接规模'

-- )

-- COMMENT

-- '客户交接前后业务波动分析_守量'

-- PARTITIONED BY

-- (

--     dt STRING

-- );



-- alter table lab_bigdata_dev.mdf_data_feature_shouliang_20221122 add columns (

    -- mdf_type  string comment '交接客户类型'  --交接客户 未全量客户

-- );



insert overwrite table lab_bigdata_dev.mdf_data_feature_shouliang_20221122 PARTITION (DT = '20210601-20220430')



select   prm_fh_org_nm  分行名称

        ,prm_zh_org_nm  支行名称

        ,case when prm_cst_cnt <= 100 then '100以内'

             when prm_cst_cnt <=300 then '100-300'

             when prm_cst_cnt <=500 then '300-500'

             when prm_cst_cnt >500 then '500以上'

             else null end as 接收人管户户数

        ,qua_sub_cls_cd  接手人信贷调查资质

        ,empe_lqd_type  按交出人人事异动

        ,case when last_90_days_gl_bal_avg_bfr >0 and last_90_days_gl_bal_avg_bfr <=100000  then '10万以下'

            when last_90_days_gl_bal_avg_bfr <=500000 then '10-50w'

            when last_90_days_gl_bal_avg_bfr >500000 then '50w以上' end 客户分段1

        ,case when last_90_days_prcp_bal_avg_bfr >0 and last_90_days_prcp_bal_avg_bfr <=500000 then '50万以下'

            when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'

            when last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'

            when last_90_days_prcp_bal_avg_bfr >= 3000000 then '300w以上' end 客户分段2

--------统计客户数字段

        ,sum(case when last_90_days_gl_bal_avg_bfr>0 then last_90_days_gl_bal_avg_bfr end) 交接前3个月存款日均总规模

        --,count(case when last_90_days_gl_bal_avg_bfr>0 then cst_id end) as 交接前3个月存款日均人数

		,count(distinct cst_id) as 交接前3个月存款日均人数

        ,sum(case when last_180_days_gl_bal_avg_aft>0 then last_180_days_gl_bal_avg_aft end) 交接后6个月存款日均总规模

        --,count(case when last_180_days_gl_bal_avg_aft>0 then cst_id end) as 交接后6个月存款日均人数

		,count(distinct cst_id) as 交接后6个月存款日均人数

        ,sum(case when last_360_days_gl_bal_avg_aft>0 then last_360_days_gl_bal_avg_aft end) 交接后12个月存款日均总规模

        --,count(case when last_360_days_gl_bal_avg_aft>0 then cst_id end) as 交接后12个月存款日均人数

		,count(distinct cst_id) as 交接后12个月存款日均人数

        ,sum(case when last_90_days_prcp_bal_avg_bfr>0 then last_90_days_prcp_bal_avg_bfr end) 交接前3个月贷款日均总规模

        --,count(case when last_90_days_prcp_bal_avg_bfr>0 then cst_id end) as 交接前3个月贷款日均人数

		,count(distinct cst_id) as 交接前3个月贷款日均人数

        ,sum(case when last_180_days_prcp_bal_avg_aft>0 then last_180_days_prcp_bal_avg_aft end) 交接后6个月贷款日均总规模

       -- ,count(case when last_180_days_prcp_bal_avg_aft>0 then cst_id end) as 交接后6个月贷款日均人数

		,count(distinct cst_id) as 交接后6个月贷款日均人数

        ,sum(case when last_360_days_prcp_bal_avg_aft>0 then last_360_days_prcp_bal_avg_aft end) 交接后12个月贷款日均总规模

        --,count(case when last_360_days_prcp_bal_avg_aft>0 then cst_id end) as 交接后12个月贷款日均人数

		,count(distinct cst_id) as 交接后12个月贷款日均人数

        ,count(cst_id) as mdf_cst_cnt

        ,sum(ctr_amt) as mdf_ctr_amt

		,mdf_type

from lab_bigdata_dev.mdf_data_feature_all_20220607

where dt = '20210601-20220430'

and mdf_type='交接客户'

group by prm_fh_org_nm,prm_zh_org_nm

        ,case when prm_cst_cnt <= 100 then '100以内'

             when prm_cst_cnt <=300 then '100-300'

             when prm_cst_cnt <=500 then '300-500'

             when prm_cst_cnt >500 then '500以上'

             else null end

        ,qua_sub_cls_cd --接手人信贷调查资质

        ,empe_lqd_type  --按交出人人事异动

        ,case when last_90_days_gl_bal_avg_bfr >0 and last_90_days_gl_bal_avg_bfr <=100000  then '10万以下'

            when last_90_days_gl_bal_avg_bfr <=500000 then '10-50w'

            when last_90_days_gl_bal_avg_bfr >500000 then '50w以上' end

         ,case when last_90_days_prcp_bal_avg_bfr >0 and last_90_days_prcp_bal_avg_bfr <=500000 then '50万以下'

            when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'

            when last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'

            when last_90_days_prcp_bal_avg_bfr >= 3000000 then '300w以上' end

			,mdf_type

               ;





--------守价

-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_shoujia_20221122;



-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_shoujia_20221122

-- (

--     分行名称  STRING  COMMENT '分行名称'

--     ,支行名称 STRING  COMMENT '支行名称'

--     ,接收人管户户数           STRING  COMMENT ''

--     ,接手人信贷调查资质    STRING  COMMENT '接手人信贷调查资质'

--     ,按交出人人事异动     STRING  COMMENT '按交出人人事异动'

--     ,客户分段              STRING  COMMENT ''

--     ,执行利率下降            STRING  COMMENT ''

--     ,执行利率不变            STRING  COMMENT ''

--     ,执行利率上升            STRING  COMMENT ''

--     ,执行利率变化            STRING  COMMENT ''

--     ,新增随贷通客户数          DECIMAL COMMENT ''

--     ,交接前非随贷通客户         DECIMAL COMMENT ''

--     ,mdf_cst_cnt     decimal COMMENT '交接客户数'

--     ,mdf_ctr_amt     decimal COMMENT '交接规模'

-- )

-- COMMENT

-- '客户交接前后业务波动分析_守价'

-- PARTITIONED BY

-- (

--     dt STRING

-- );

-- alter table lab_bigdata_dev.mdf_data_feature_shoujia_20221122 add columns (

    -- mdf_type  string comment '交接客户类型'  --交接客户 未全量客户

-- );



insert overwrite table lab_bigdata_dev.mdf_data_feature_shoujia_20221122 PARTITION (DT = '20210601-20220430')

select   prm_fh_org_nm  分行名称

        ,prm_zh_org_nm  支行名称

        ,case when prm_cst_cnt <= 100 then '100以内'

             when prm_cst_cnt <=300 then '100-300'

             when prm_cst_cnt <=500 then '300-500'

             when prm_cst_cnt >500 then '500以上'

             else null end as 接收人管户户数

        ,qua_sub_cls_cd  接手人信贷调查资质

        ,empe_lqd_type  按交出人人事异动

        ,case when last_90_days_prcp_bal_avg_bfr <=500000 then '低于50w'

            when last_90_days_prcp_bal_avg_bfr <=1500000 then '50-150w'

            when  last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'

            when  last_90_days_prcp_bal_avg_bfr > 3000000 then '300w以上'

            else null end  客户分段

--------统计客户数字段

        ,count(case when exe_intr_rate_bfr > exe_intr_rate_aft and exe_intr_rate_aft>0 then cst_id end) as 执行利率下降

        ,count(case when exe_intr_rate_bfr = exe_intr_rate_aft and exe_intr_rate_aft>0 then cst_id end) as 执行利率不变

        ,count(case when exe_intr_rate_bfr < exe_intr_rate_aft and exe_intr_rate_bfr>0 then cst_id end) as 执行利率上升

        ,count(case when coalesce(exe_intr_rate_bfr,0) <>0  and  coalesce(exe_intr_rate_aft,0) <>0 then cst_id end) as 执行利率变化

        ,count(case when new_sdt_cnt >0 and no_sdt_bfr = 1 then cst_id end) as 新增随贷通客户数

        ,count(case when no_sdt_bfr = 1 then cst_id end) as 交接前非随贷通客户

        ,count(cst_id) as mdf_cst_cnt

        ,sum(ctr_amt) as mdf_ctr_amt

		,mdf_type

from lab_bigdata_dev.mdf_data_feature_all_20220607

where dt = '20210601-20220430'

and mdf_type='交接客户'

group by  prm_fh_org_nm,prm_zh_org_nm

        ,case when prm_cst_cnt <= 100 then '100以内'

             when prm_cst_cnt <=300 then '100-300'

             when prm_cst_cnt <=500 then '300-500'

             when prm_cst_cnt >500 then '500以上'

             else null end

        ,qua_sub_cls_cd --接手人信贷调查资质

        ,empe_lqd_type  --按交出人人事异动

     ,case when last_90_days_prcp_bal_avg_bfr <=500000 then '低于50w'

    when last_90_days_prcp_bal_avg_bfr <=1500000 then '50-150w'

    when  last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'

    when  last_90_days_prcp_bal_avg_bfr > 3000000 then '300w以上'

    else null end

	,mdf_type

               ;





-- -------FTP

-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_ftp_20221122;



-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_ftp_20221122

-- (

--     分行名称  STRING  COMMENT '分行名称'

--     ,支行名称 STRING  COMMENT '支行名称'

--     ,接收人管户户数           STRING  COMMENT ''

--     ,接手人信贷调查资质    STRING  COMMENT '接手人信贷调查资质'

--     ,按交出人人事异动     STRING  COMMENT '按交出人人事异动'

--     ,客户分段              STRING  COMMENT ''

--     ,交接前3个月FTP月均总规模    DECIMAL COMMENT ''

--     ,交接前3个月FTP月均人数     DECIMAL COMMENT ''

--     ,交接后6个月FTP月均总规模    DECIMAL COMMENT ''

--     ,交接后6个月FTP月均人数     DECIMAL COMMENT ''

--     ,交接后12个月FTP月均总规模   DECIMAL COMMENT ''

--     ,交接后12个月FTP月均人数    DECIMAL COMMENT ''

--     ,mdf_cst_cnt     decimal COMMENT '交接客户数'

--     ,mdf_ctr_amt     decimal COMMENT '交接规模'

-- )

-- COMMENT

-- '客户交接前后业务波动分析_ftp'

-- PARTITIONED BY

-- (

--     dt STRING

-- );



-- alter table lab_bigdata_dev.mdf_data_feature_ftp_20221122 add columns (

    -- mdf_type  string comment '交接客户类型'  --交接客户 未全量客户

-- );





insert overwrite table lab_bigdata_dev.mdf_data_feature_ftp_20221122 PARTITION (DT = '20210601-20220430')

select  prm_fh_org_nm  分行名称

 ,prm_zh_org_nm  支行名称

        ,case when prm_cst_cnt <= 100 then '100以内'

             when prm_cst_cnt <=300 then '100-300'

             when prm_cst_cnt <=500 then '300-500'

             when prm_cst_cnt >500 then '500以上'

             else null end as 接收人管户户数

        ,qua_sub_cls_cd  接手人信贷调查资质

        ,empe_lqd_type  按交出人人事异动

    ,case when last_90_days_prcp_bal_avg_bfr >0 and last_90_days_prcp_bal_avg_bfr <=500000 then '50万以下'

    when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'

    when last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'

    when last_90_days_prcp_bal_avg_bfr >= 3000000 then '300w以上' end 客户分段

--------统计客户数字段

   ,sum(case when ftp_3_month_bfr is not null then ftp_3_month_bfr end) 交接前3个月FTP月均总规模

   ,count(distinct cst_id ) as 交接前3个月FTP月均人数

    ,sum(case when ftp_6_month_aft is not null then ftp_6_month_aft end) 交接后6个月FTP月均总规模

	 ,count(distinct cst_id ) as 交接后6个月FTP月均人数

    ,sum(case when ftp_12_month_aft is not null then ftp_12_month_aft end) 交接后12个月FTP月均总规模

	 ,count(distinct cst_id ) as 交接后12个月FTP月均人数

    ,count(cst_id) as mdf_cst_cnt

    ,sum(ctr_amt) as mdf_ctr_amt

	,mdf_type

from lab_bigdata_dev.mdf_data_feature_all_20220607

where dt = '20210601-20220430'

and mdf_type='交接客户'

group by prm_fh_org_nm,prm_zh_org_nm

        ,case when prm_cst_cnt <= 100 then '100以内'

             when prm_cst_cnt <=300 then '100-300'

             when prm_cst_cnt <=500 then '300-500'

             when prm_cst_cnt >500 then '500以上'

             else null end

        ,qua_sub_cls_cd --接手人信贷调查资质

        ,empe_lqd_type  --按交出人人事异动

     ,case when last_90_days_prcp_bal_avg_bfr >0 and last_90_days_prcp_bal_avg_bfr <=500000 then '50万以下'

    when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'

    when last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'

    when last_90_days_prcp_bal_avg_bfr >= 3000000 then '300w以上' end

	,mdf_type;





-- -------新发生风险

-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_risk_20221122;



-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_risk_20221122

-- (

--     分行名称  STRING  COMMENT '分行名称'

--     ,支行名称 STRING  COMMENT '支行名称'

--     ,接收人管户户数           STRING  COMMENT ''

--     ,接手人信贷调查资质    STRING  COMMENT '接手人信贷调查资质'

--     ,按交出人人事异动     STRING  COMMENT '按交出人人事异动'

--     ,客户分段              STRING  COMMENT ''

--     ,is_yr_new_hpn_amt decimal comment '新发生风险贷款余额'

--     ,mdf_ctr_bal decimal comment '交接客户贷款余额'

--     ,mdf_cst_cnt     decimal COMMENT '交接客户数'

--     ,mdf_ctr_amt     decimal COMMENT '交接规模'

-- )

-- COMMENT

-- '客户交接前后业务波动分析_风险'

-- PARTITIONED BY

-- (

--     dt STRING

-- );



-- alter table lab_bigdata_dev.mdf_data_feature_risk_20221122 add columns (

    -- mdf_type  string comment '交接客户类型'  --交接客户 未全量客户

-- );





insert overwrite table lab_bigdata_dev.mdf_data_feature_risk_20221122 PARTITION (DT = '20210601-20220430')

select  prm_fh_org_nm  分行名称

 ,prm_zh_org_nm  支行名称

        ,case when prm_cst_cnt <= 100 then '100以内'

             when prm_cst_cnt <=300 then '100-300'

             when prm_cst_cnt <=500 then '300-500'

             when prm_cst_cnt >500 then '500以上'

             else null end as 接收人管户户数

        ,qua_sub_cls_cd  接手人信贷调查资质

        ,empe_lqd_type  按交出人人事异动

    ,case when last_90_days_prcp_bal_avg_bfr >0 and last_90_days_prcp_bal_avg_bfr <=500000 then '50万以下'

        when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'

        when last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'

        when last_90_days_prcp_bal_avg_bfr >= 3000000 then '300w以上' end 客户分段

--------统计客户数字段

    ,sum(is_yr_new_hpn_amt) is_yr_new_hpn_amt

    ,sum(mdf_ctr_bal) as mdf_ctr_bal

    ,count(cst_id) as mdf_cst_cnt

    ,sum(ctr_amt) as mdf_ctr_amt

	,mdf_type

from lab_bigdata_dev.mdf_data_feature_all_20220607

where dt = '20210601-20220430'

and mdf_type='交接客户'

group by prm_fh_org_nm,prm_zh_org_nm

        ,case when prm_cst_cnt <= 100 then '100以内'

             when prm_cst_cnt <=300 then '100-300'

             when prm_cst_cnt <=500 then '300-500'

             when prm_cst_cnt >500 then '500以上'

             else null end

        ,qua_sub_cls_cd --接手人信贷调查资质

        ,empe_lqd_type  --按交出人人事异动

     ,case when last_90_days_prcp_bal_avg_bfr >0 and last_90_days_prcp_bal_avg_bfr <=500000 then '50万以下'

    when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'

    when last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'

    when last_90_days_prcp_bal_avg_bfr >= 3000000 then '300w以上' end

	,mdf_type;



--------总结雷达图

/*

DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_zj_20221122;



CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_zj_20221122

(

    分行名称  STRING  COMMENT '分行名称'

	,prm_org_id   STRING  COMMENT '主管户机构'

    ,prm_fh_org_id        STRING  COMMENT '主管户分行机构号'

    ,prm_zh_org_id        STRING  COMMENT '主管户支行机构号'

    ,prm_zh_org_nm        STRING  COMMENT '主管户支行名称'

	,mdf_cst_cnt     decimal COMMENT '交接客户数'

    ,接收人管户户数           STRING  COMMENT ''

    ,接手人信贷调查资质    STRING  COMMENT '接手人信贷调查资质'

    ,按交出人人事异动     STRING  COMMENT '按交出人人事异动'

    ,客户分段              STRING  COMMENT ''

	,交接前非有效户            DECIMAL  COMMENT '交接前非有效户'

    ,交接前非有效户交接后3个月是有效户  DECIMAL  COMMENT '交接前非有效户交接后3个月是有效户'

    ,交接前非有效户交接后6个月是有效户  DECIMAL  COMMENT '交接前非有效户交接后6个月是有效户'

    ,交接前非有效户交接后12个月是有效户 DECIMAL  COMMENT '交接前非有效户交接后12个月是有效户'

    ,交接前是有效户            DECIMAL  COMMENT '交接前是有效户'

    ,交接前是有效户交接后3个月非有效户  DECIMAL  COMMENT '交接前是有效户交接后3个月非有效户'

    ,交接前是有效户交接后6个月非有效户  DECIMAL  COMMENT '交接前是有效户交接后6个月非有效户'

    ,交接前是有效户交接后12个月非有效户 DECIMAL  COMMENT '交接前是有效户交接后12个月非有效户'

	,交接前非有效信贷户       DECIMAL   COMMENT '交接前非有效信贷户'

    ,交接前非有效信贷户交接后3个月是有效信贷户 DECIMAL COMMENT '交接前非有效信贷户交接后3个月是有效信贷户'

    ,交接前非有效信贷户交接后6个月是有效信贷户 DECIMAL COMMENT '交接前非有效信贷户交接后6个月是有效信贷户'

    ,交接前非有效信贷户交接后12个月是有效信贷户 DECIMAL COMMENT '交接前非有效信贷户交接后12个月是有效信贷户'

    ,交接前是有效信贷户       DECIMAL COMMENT '交接前是有效信贷户'

    ,交接前是有效信贷户交接后3个月非有效信贷户 DECIMAL COMMENT '交接前是有效信贷户交接后3个月非有效信贷户'

    ,交接前是有效信贷户交接后6个月非有效信贷户 DECIMAL COMMENT '交接前是有效信贷户交接后6个月非有效信贷户'

    ,交接前是有效信贷户交接后12个月非有效信贷户 DECIMAL COMMENT '交接前是有效信贷户交接后12个月非有效信贷户'

    ,续贷客户数              DECIMAL COMMENT '续贷客户数'

    ,贷款到期客户数            DECIMAL COMMENT '贷款到期客户数'

    ,续存客户数              DECIMAL COMMENT '续存客户数'

    ,存款到期客户数            DECIMAL COMMENT '存款到期客户数'

    ,交接前3个月存款日均总规模     DECIMAL COMMENT '交接前3个月存款日均总规模'

    ,交接前3个月存款日均人数      DECIMAL COMMENT '交接前3个月存款日均人数'

    ,交接后6个月存款日均总规模     DECIMAL COMMENT '交接后6个月存款日均总规模'

    ,交接后6个月存款日均人数      DECIMAL COMMENT '交接后6个月存款日均人数'

    ,交接后12个月存款日均总规模    DECIMAL COMMENT '交接后12个月存款日均总规模'

    ,交接后12个月存款日均人数     DECIMAL COMMENT '交接后12个月存款日均人数'

    ,交接前3个月贷款日均总规模     DECIMAL COMMENT '交接前3个月贷款日均总规模'

    ,交接前3个月贷款日均人数      DECIMAL COMMENT '交接前3个月贷款日均人数'

    ,交接后6个月贷款日均总规模     DECIMAL COMMENT '交接后6个月贷款日均总规模'

    ,交接后6个月贷款日均人数      DECIMAL COMMENT '交接后6个月贷款日均人数'

    ,交接后12个月贷款日均总规模    DECIMAL COMMENT '交接后12个月贷款日均总规模'

    ,交接后12个月贷款日均人数     DECIMAL COMMENT '交接后12个月贷款日均人数'

     ,执行利率下降            DECIMAL  COMMENT ''

    ,执行利率不变            DECIMAL  COMMENT ''

    ,执行利率上升            DECIMAL  COMMENT ''

    ,执行利率变化            DECIMAL  COMMENT ''

    ,新增随贷通客户数          DECIMAL COMMENT ''

    ,交接前非随贷通客户         DECIMAL COMMENT ''

    ,交接前3个月FTP月均总规模    DECIMAL COMMENT ''

    ,交接前3个月FTP月均人数     DECIMAL COMMENT ''

    ,交接后6个月FTP月均总规模    DECIMAL COMMENT ''

    ,交接后6个月FTP月均人数     DECIMAL COMMENT ''

    ,交接后12个月FTP月均总规模   DECIMAL COMMENT ''

    ,交接后12个月FTP月均人数    DECIMAL COMMENT ''

	, mdf_type  string comment '交接客户类型'  --交接客户 未全量客户

	 ,is_yr_new_hpn_amt decimal comment '新发生风险贷款余额'

    ,mdf_ctr_bal decimal comment '交接客户贷款余额'

)

COMMENT

'客户交接前后业务波动分析_总结1_原始数值'

PARTITIONED BY

(

    dt STRING

);

*/

insert overwrite table lab_bigdata_dev.mdf_data_feature_zj_20221122 PARTITION (DT = '20210601-20220430')

SELECT  prm_fh_org_nm 分行名称

	,prm_org_id   ---主管户机构

    ,prm_fh_org_id        -- 主管户分行机构号

    ,prm_zh_org_id        -- 主管户支行机构号

    ,prm_zh_org_nm        -- 主管户支行名称

	,count(cst_id) as mdf_cst_cnt

        ,CASE

           WHEN prm_cst_cnt <= 100 THEN '100以内'

           WHEN prm_cst_cnt <= 300 THEN '100-300'

           WHEN prm_cst_cnt <= 500 THEN '300-500'

           WHEN prm_cst_cnt > 500  THEN '500以上'

           ELSE NULL

         END        AS 接收人管户户数

        ,qua_sub_cls_cd 接手人信贷调查资质

        ,empe_lqd_type 按交出人人事异动

        ,CASE

           WHEN last_90_days_prcp_bal_avg_bfr > 0 AND last_90_days_prcp_bal_avg_bfr <= 500000 THEN '50万以下'

           WHEN last_90_days_prcp_bal_avg_bfr <= 1500000                                      THEN '50-150w'

           WHEN last_90_days_prcp_bal_avg_bfr <= 3000000                                      THEN '150-300w'

           WHEN last_90_days_prcp_bal_avg_bfr >= 3000000                                      THEN '300w以上'

         END 客户分段



        --------统计客户数字段

        ,count(CASE                  WHEN efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' THEN cst_id                END) AS 交接前非有效户

		,count(CASE                  WHEN ( efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' ) AND efe_cst_ind_aft_3_month = '1' THEN cst_id                END) AS 交接前非有效户交接后3个月是有效户

        ,count(CASE                  WHEN ( efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' ) AND efe_cst_ind_aft_6_month = '1' THEN cst_id                END) AS 交接前非有效户交接后6个月是有效户

        ,count(CASE                  WHEN ( efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' ) AND efe_cst_ind_aft_12_month = '1' THEN cst_id                END) AS 交接前非有效户交接后12个月是有效户

        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' THEN cst_id                END) AS 交接前是有效户

        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' AND ( efe_cst_ind_aft_3_month = '0' OR efe_cst_ind_aft_3_month = '' ) THEN cst_id                END) AS 交接前是有效户交接后3个月非有效户

        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' AND ( efe_cst_ind_aft_6_month = '0' OR efe_cst_ind_aft_6_month = '' ) THEN cst_id                END) AS 交接前是有效户交接后6个月非有效户

        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' AND ( efe_cst_ind_aft_12_month = '0' OR efe_cst_ind_aft_12_month = '' ) THEN cst_id                END) AS 交接前是有效户交接后12个月非有效户



		--有效信贷户

		,count(CASE                  WHEN efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' THEN cst_id                END) AS 交接前非有效信贷户

		,count(CASE                  WHEN ( efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' ) AND efe_loan_cst_ind_aft_3_month = '1' THEN cst_id                END) AS 交接前非有效信贷户交接后3个月是有效信贷户

        ,count(CASE                  WHEN ( efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' ) AND efe_loan_cst_ind_aft_6_month = '1' THEN cst_id                END) AS 交接前非有效信贷户交接后6个月是有效信贷户

        ,count(CASE                  WHEN ( efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' ) AND efe_loan_cst_ind_aft_12_month = '1' THEN cst_id                END) AS 交接前非有效信贷户交接后12个月是有效信贷户

        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' THEN cst_id                END) AS 交接前是有效信贷户

        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' AND ( efe_loan_cst_ind_aft_3_month = '0' OR efe_loan_cst_ind_aft_3_month = '' ) THEN cst_id                END) AS 交接前是有效信贷户交接后3个月非有效信贷户

        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' AND ( efe_loan_cst_ind_aft_6_month = '0' OR efe_loan_cst_ind_aft_6_month = '' ) THEN cst_id                END) AS 交接前是有效信贷户交接后6个月非有效信贷户

        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' AND ( efe_loan_cst_ind_aft_12_month = '0' OR efe_loan_cst_ind_aft_12_month = '' ) THEN cst_id                END) AS 交接前是有效信贷户交接后12个月非有效信贷户



        ,count(CASE                  WHEN is_loan_continue = 1 THEN cst_id                END) AS 续贷客户数

        ,count(CASE                  WHEN is_loan_finish = 1 THEN cst_id                END) AS 贷款到期客户数

        ,count(CASE                  WHEN IS_CUR_DSTR_EXPIRE = 1 AND IS_CUR_CONTINUE = 1 THEN cst_id                END) AS 续存客户数

        ,count(CASE                  WHEN IS_CUR_DSTR_EXPIRE = 1 THEN cst_id                END) AS 存款到期客户数

        ,sum(CASE               	 WHEN last_90_days_gl_bal_avg_bfr > 0 THEN last_90_days_gl_bal_avg_bfr              END) 交接前3个月存款日均总规模

		,count( distinct cst_id) AS 交接前3个月存款日均人数

        ,sum(CASE            	     WHEN last_180_days_gl_bal_avg_aft > 0 THEN last_180_days_gl_bal_avg_aft              END) 交接后6个月存款日均总规模

		,count( distinct cst_id) AS 交接后6个月存款日均人数

        ,sum(CASE            	     WHEN last_360_days_gl_bal_avg_aft > 0 THEN last_360_days_gl_bal_avg_aft              END) 交接后12个月存款日均总规模

		,count( distinct cst_id) AS 交接后12个月存款日均人数

        ,sum(CASE              	     WHEN last_90_days_prcp_bal_avg_bfr > 0 THEN last_90_days_prcp_bal_avg_bfr              END) 交接前3个月贷款日均总规模

		,count( distinct cst_id) AS 交接前3个月贷款日均人数

        ,sum(CASE                    WHEN last_180_days_prcp_bal_avg_aft > 0 THEN last_180_days_prcp_bal_avg_aft              END) 交接后6个月贷款日均总规模

		,count( distinct cst_id) AS 交接后6个月贷款日均人数

        ,sum(CASE                    WHEN last_360_days_prcp_bal_avg_aft > 0 THEN last_360_days_prcp_bal_avg_aft              END) 交接后12个月贷款日均总规模

		,count( distinct cst_id) AS 交接后12个月贷款日均人数



		 ,count(case when exe_intr_rate_bfr > exe_intr_rate_aft and exe_intr_rate_aft>0 then cst_id end) as 执行利率下降

        ,count(case when exe_intr_rate_bfr = exe_intr_rate_aft and exe_intr_rate_aft>0 then cst_id end) as 执行利率不变

        ,count(case when exe_intr_rate_bfr < exe_intr_rate_aft and exe_intr_rate_bfr>0 then cst_id end) as 执行利率上升

        ,count(case when coalesce(exe_intr_rate_bfr,0) <>0  and  coalesce(exe_intr_rate_aft,0) <>0 then cst_id end) as 执行利率变化





		-- ,case when sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)) end as exe_intr_rate_bfr

		-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0)) end as exe_intr_rate_aft

			-- --分子分母拆开，方便后面汇总

	   -- ,sum(coalesce(exe_intr_rate_bfr_fenzi,0)) as exe_intr_rate_bfr_fenzi

	   -- ,sum(coalesce(exe_intr_rate_bfr_fenmu,0)) as exe_intr_rate_bfr_fenmu

       -- ,sum(coalesce(exe_intr_rate_aft_fenzi,0)) as exe_intr_rate_aft_fenzi

	   -- ,sum(coalesce(exe_intr_rate_aft_fenmu,0)) as exe_intr_rate_aft_fenmu

		--,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_aft_fenmu,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-case when sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_bfr_fenmu,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)) AS 执行利率变化绝对值

		--,case when case when sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_bfr_fenmu,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0

		--	 then (case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_aft_fenmu,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-case when sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_bfr_fenmu,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)))/(case when sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_bfr_fenmu,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0))) AS 执行利率变化相对值



        ,count(CASE                  WHEN new_sdt_cnt > 0 AND no_sdt_bfr = 1 THEN cst_id                END) AS 新增随贷通客户数

        ,count(CASE                  WHEN no_sdt_bfr = 1 THEN cst_id                END) AS 交接前非随贷通客户

        ,sum(CASE              	     WHEN ftp_3_month_bfr IS NOT NULL THEN ftp_3_month_bfr              END) 交接前3个月FTP月均总规模

		,count( distinct cst_id) AS 交接前3个月FTP月均人数

        ,sum(CASE                    WHEN ftp_6_month_aft IS NOT NULL THEN ftp_6_month_aft              END) 交接后6个月FTP月均总规模

		,count( distinct cst_id) AS 交接后6个月FTP月均人数

        ,sum(CASE                    WHEN ftp_12_month_aft IS NOT NULL THEN ftp_12_month_aft              END) 交接后12个月FTP月均总规模

		,count( distinct cst_id) AS 交接后12个月FTP月均人数

		,mdf_type

		,sum(is_yr_new_hpn_amt) is_yr_new_hpn_amt

		,sum(mdf_ctr_bal) as mdf_ctr_bal

FROM    lab_bigdata_dev.mdf_data_feature_all_20220607

WHERE   dt = '20210601-20220430'



GROUP BY

 prm_fh_org_nm

	,prm_org_id   ---主管户机构

    ,prm_fh_org_id        -- 主管户分行机构号

    ,prm_zh_org_id        -- 主管户支行机构号

    ,prm_zh_org_nm        -- 主管户支行名称

	,CASE

                           WHEN prm_cst_cnt <= 100 THEN '100以内'

                           WHEN prm_cst_cnt <= 300 THEN '100-300'

                           WHEN prm_cst_cnt <= 500 THEN '300-500'

                           WHEN prm_cst_cnt > 500  THEN '500以上'

                           ELSE NULL

                         END , qua_sub_cls_cd --接手人信贷调查资质

, empe_lqd_type --按交出人人事异动

, CASE

    WHEN last_90_days_prcp_bal_avg_bfr > 0 AND last_90_days_prcp_bal_avg_bfr <= 500000 THEN '50万以下'

    WHEN last_90_days_prcp_bal_avg_bfr <= 1500000                                      THEN '50-150w'

    WHEN last_90_days_prcp_bal_avg_bfr <= 3000000                                      THEN '150-300w'

    WHEN last_90_days_prcp_bal_avg_bfr >= 3000000                                      THEN '300w以上'

  END

  ,mdf_type

  union

  --全行

  SELECT  '全行' as 分行名称

	,''   ---主管户机构

   ,''         -- 主管户分行机构号

   ,''        -- 主管户支行机构号

   ,''         -- 主管户支行名称

	,count(cst_id) as mdf_cst_cnt

        ,CASE

           WHEN prm_cst_cnt <= 100 THEN '100以内'

           WHEN prm_cst_cnt <= 300 THEN '100-300'

           WHEN prm_cst_cnt <= 500 THEN '300-500'

           WHEN prm_cst_cnt > 500  THEN '500以上'

           ELSE NULL

         END        AS 接收人管户户数

        ,qua_sub_cls_cd 接手人信贷调查资质

        ,empe_lqd_type 按交出人人事异动

        ,CASE

           WHEN last_90_days_prcp_bal_avg_bfr > 0 AND last_90_days_prcp_bal_avg_bfr <= 500000 THEN '50万以下'

           WHEN last_90_days_prcp_bal_avg_bfr <= 1500000                                      THEN '50-150w'

           WHEN last_90_days_prcp_bal_avg_bfr <= 3000000                                      THEN '150-300w'

           WHEN last_90_days_prcp_bal_avg_bfr >= 3000000                                      THEN '300w以上'

         END 客户分段



        --------统计客户数字段

        ,count(CASE                  WHEN efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' THEN cst_id                END) AS 交接前非有效户

		,count(CASE                  WHEN ( efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' ) AND efe_cst_ind_aft_3_month = '1' THEN cst_id                END) AS 交接前非有效户交接后3个月是有效户

        ,count(CASE                  WHEN ( efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' ) AND efe_cst_ind_aft_6_month = '1' THEN cst_id                END) AS 交接前非有效户交接后6个月是有效户

        ,count(CASE                  WHEN ( efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' ) AND efe_cst_ind_aft_12_month = '1' THEN cst_id                END) AS 交接前非有效户交接后12个月是有效户

        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' THEN cst_id                END) AS 交接前是有效户

        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' AND ( efe_cst_ind_aft_3_month = '0' OR efe_cst_ind_aft_3_month = '' ) THEN cst_id                END) AS 交接前是有效户交接后3个月非有效户

        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' AND ( efe_cst_ind_aft_6_month = '0' OR efe_cst_ind_aft_6_month = '' ) THEN cst_id                END) AS 交接前是有效户交接后6个月非有效户

        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' AND ( efe_cst_ind_aft_12_month = '0' OR efe_cst_ind_aft_12_month = '' ) THEN cst_id                END) AS 交接前是有效户交接后12个月非有效户



		--有效信贷户

		,count(CASE                  WHEN efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' THEN cst_id                END) AS 交接前非有效信贷户

		,count(CASE                  WHEN ( efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' ) AND efe_loan_cst_ind_aft_3_month = '1' THEN cst_id                END) AS 交接前非有效信贷户交接后3个月是有效信贷户

        ,count(CASE                  WHEN ( efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' ) AND efe_loan_cst_ind_aft_6_month = '1' THEN cst_id                END) AS 交接前非有效信贷户交接后6个月是有效信贷户

        ,count(CASE                  WHEN ( efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' ) AND efe_loan_cst_ind_aft_12_month = '1' THEN cst_id                END) AS 交接前非有效信贷户交接后12个月是有效信贷户

        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' THEN cst_id                END) AS 交接前是有效信贷户

        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' AND ( efe_loan_cst_ind_aft_3_month = '0' OR efe_loan_cst_ind_aft_3_month = '' ) THEN cst_id                END) AS 交接前是有效信贷户交接后3个月非有效信贷户

        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' AND ( efe_loan_cst_ind_aft_6_month = '0' OR efe_loan_cst_ind_aft_6_month = '' ) THEN cst_id                END) AS 交接前是有效信贷户交接后6个月非有效信贷户

        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' AND ( efe_loan_cst_ind_aft_12_month = '0' OR efe_loan_cst_ind_aft_12_month = '' ) THEN cst_id                END) AS 交接前是有效信贷户交接后12个月非有效信贷户



        ,count(CASE                  WHEN is_loan_continue = 1 THEN cst_id                END) AS 续贷客户数

        ,count(CASE                  WHEN is_loan_finish = 1 THEN cst_id                END) AS 贷款到期客户数

        ,count(CASE                  WHEN IS_CUR_DSTR_EXPIRE = 1 AND IS_CUR_CONTINUE = 1 THEN cst_id                END) AS 续存客户数

        ,count(CASE                  WHEN IS_CUR_DSTR_EXPIRE = 1 THEN cst_id                END) AS 存款到期客户数

        ,sum(CASE               	 WHEN last_90_days_gl_bal_avg_bfr > 0 THEN last_90_days_gl_bal_avg_bfr              END) 交接前3个月存款日均总规模

		,count( distinct cst_id) AS 交接前3个月存款日均人数

        ,sum(CASE            	     WHEN last_180_days_gl_bal_avg_aft > 0 THEN last_180_days_gl_bal_avg_aft              END) 交接后6个月存款日均总规模

		,count( distinct cst_id) AS 交接后6个月存款日均人数

        ,sum(CASE            	     WHEN last_360_days_gl_bal_avg_aft > 0 THEN last_360_days_gl_bal_avg_aft              END) 交接后12个月存款日均总规模

		,count( distinct cst_id) AS 交接后12个月存款日均人数

        ,sum(CASE              	     WHEN last_90_days_prcp_bal_avg_bfr > 0 THEN last_90_days_prcp_bal_avg_bfr              END) 交接前3个月贷款日均总规模

		,count( distinct cst_id) AS 交接前3个月贷款日均人数

        ,sum(CASE                    WHEN last_180_days_prcp_bal_avg_aft > 0 THEN last_180_days_prcp_bal_avg_aft              END) 交接后6个月贷款日均总规模

		,count( distinct cst_id) AS 交接后6个月贷款日均人数

        ,sum(CASE                    WHEN last_360_days_prcp_bal_avg_aft > 0 THEN last_360_days_prcp_bal_avg_aft              END) 交接后12个月贷款日均总规模

		,count( distinct cst_id) AS 交接后12个月贷款日均人数



		 ,count(case when exe_intr_rate_bfr > exe_intr_rate_aft and exe_intr_rate_aft>0 then cst_id end) as 执行利率下降

        ,count(case when exe_intr_rate_bfr = exe_intr_rate_aft and exe_intr_rate_aft>0 then cst_id end) as 执行利率不变

        ,count(case when exe_intr_rate_bfr < exe_intr_rate_aft and exe_intr_rate_bfr>0 then cst_id end) as 执行利率上升

        ,count(case when coalesce(exe_intr_rate_bfr,0) <>0  and  coalesce(exe_intr_rate_aft,0) <>0 then cst_id end) as 执行利率变化



        ,count(CASE                  WHEN new_sdt_cnt > 0 AND no_sdt_bfr = 1 THEN cst_id                END) AS 新增随贷通客户数

        ,count(CASE                  WHEN no_sdt_bfr = 1 THEN cst_id                END) AS 交接前非随贷通客户

        ,sum(CASE              	     WHEN ftp_3_month_bfr IS NOT NULL THEN ftp_3_month_bfr              END) 交接前3个月FTP月均总规模

		,count( distinct cst_id) AS 交接前3个月FTP月均人数

        ,sum(CASE                    WHEN ftp_6_month_aft IS NOT NULL THEN ftp_6_month_aft              END) 交接后6个月FTP月均总规模

		,count( distinct cst_id) AS 交接后6个月FTP月均人数

        ,sum(CASE                    WHEN ftp_12_month_aft IS NOT NULL THEN ftp_12_month_aft              END) 交接后12个月FTP月均总规模

		,count( distinct cst_id) AS 交接后12个月FTP月均人数

		,mdf_type

		,sum(is_yr_new_hpn_amt) is_yr_new_hpn_amt

		,sum(mdf_ctr_bal) as mdf_ctr_bal

FROM    lab_bigdata_dev.mdf_data_feature_all_20220607

WHERE   dt = '20210601-20220430'

and  prm_fh_org_nm rlike '分行'

GROUP BY

CASE

                           WHEN prm_cst_cnt <= 100 THEN '100以内'

                           WHEN prm_cst_cnt <= 300 THEN '100-300'

                           WHEN prm_cst_cnt <= 500 THEN '300-500'

                           WHEN prm_cst_cnt > 500  THEN '500以上'

                           ELSE NULL

                         END , qua_sub_cls_cd --接手人信贷调查资质

, empe_lqd_type --按交出人人事异动

, CASE

    WHEN last_90_days_prcp_bal_avg_bfr > 0 AND last_90_days_prcp_bal_avg_bfr <= 500000 THEN '50万以下'

    WHEN last_90_days_prcp_bal_avg_bfr <= 1500000                                      THEN '50-150w'

    WHEN last_90_days_prcp_bal_avg_bfr <= 3000000                                      THEN '150-300w'

    WHEN last_90_days_prcp_bal_avg_bfr >= 3000000                                      THEN '300w以上'

  END

  ,mdf_type

  ;







-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_zj_2_20221122;

-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_zj_2_20221122

-- (

    -- 分行名称      STRING COMMENT '分行名称'

    -- ,mdf_type  string COMMENT '交接类型'

	-- ,type  STRING COMMENT '关联字段1'

    -- ,有效户流失率  decimal COMMENT ''

	-- ,有效户转化率  decimal COMMENT ''

    -- ,续贷率      decimal COMMENT ''

    -- ,续存率      decimal COMMENT ''

    -- ,增长率_贷款   decimal COMMENT ''

    -- ,增长率_存款   decimal COMMENT ''

    -- ,执行利率下降占比 decimal COMMENT ''

    -- ,配卡率      decimal COMMENT ''

    -- ,ftp涨跌幅   decimal COMMENT ''

	-- ,IS_YR_NEW_HPN_rate  decimal comment '本年新发生风险贷款率'

-- )

-- COMMENT

-- '客户交接前后业务波动分析_总结2_原始数值_比例'

-- PARTITIONED BY

-- (

    -- dt STRING

-- );



insert overwrite table lab_bigdata_dev.mdf_data_feature_zj_2_20221122 PARTITION (DT = '20210601-20220430')



SELECT  分行名称

	,mdf_type

	,'1' AS type

	,CASE            WHEN sum(交接前是有效户) = 0 THEN 0            ELSE sum(交接前是有效户交接后12个月非有效户) / sum(交接前是有效户)          END 转化率1

	,CASE            WHEN sum(交接前非有效户) = 0 THEN 0            ELSE sum(交接前非有效户交接后12个月是有效户) / sum(交接前非有效户)          END 转化率2

	,CASE            WHEN sum(贷款到期客户数) = 0 THEN 0            ELSE sum(续贷客户数) / sum(贷款到期客户数)          END 续贷率

	,CASE            WHEN sum(存款到期客户数) = 0 THEN 0            ELSE sum(续存客户数) / sum(存款到期客户数)          END 续存率

	,CASE   WHEN (  CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数) END ) = 0 THEN 0

			ELSE ( ( CASE WHEN sum(交接后12个月贷款日均人数) = 0 THEN 0 ELSE sum(交接后12个月贷款日均总规模) / sum(交接后12个月贷款日均人数)  END  ) -

			( CASE WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) ) / ( CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0 ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) END 增长率_贷款

	,CASE WHEN ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) = 0 THEN 0

		  ELSE ( ( CASE WHEN sum(交接后12个月存款日均人数) = 0 THEN 0 ELSE sum(交接后12个月存款日均总规模) / sum(交接后12个月存款日均人数)  END  ) - (

		 CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0    ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数)  END  ) ) / ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) END 增长率_存款

	,CASE WHEN ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) ) = 0 THEN 0 ELSE sum(执行利率下降) / ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) )          END 执行利率下降占比

	,CASE WHEN sum(交接前非随贷通客户) = 0 THEN 0 ELSE sum(新增随贷通客户数) / sum(交接前非随贷通客户)          END 配卡率

	,CASE WHEN ( CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END ) = 0 THEN 0

		  ELSE ( (  CASE  WHEN sum(交接后12个月ftp月均人数) = 0 THEN 0   ELSE sum(交接后12个月ftp月均总规模) / sum(交接后12个月ftp月均人数)  END   ) - (

		  CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0    ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END   ) ) / (CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END )  END ftp涨跌幅

	,case when sum(mdf_ctr_bal)=0 then 0 else sum(is_yr_new_hpn_amt)/sum(mdf_ctr_bal) end as 	本年新发生风险贷款率

FROM    lab_bigdata_dev.mdf_data_feature_zj_20221122 a

where a . 分行名称 rlike '分行'

and DT = '20210601-20220430'

GROUP BY 分行名称 , mdf_type

union

SELECT  '全行' as 分行名称

		,mdf_type

        ,'1' AS type

        ,CASE            WHEN sum(交接前是有效户) = 0 THEN 0            ELSE sum(交接前是有效户交接后12个月非有效户) / sum(交接前是有效户)          END 转化率1

        ,CASE            WHEN sum(交接前非有效户) = 0 THEN 0            ELSE sum(交接前非有效户交接后12个月是有效户) / sum(交接前非有效户)          END 转化率2

        ,CASE            WHEN sum(贷款到期客户数) = 0 THEN 0            ELSE sum(续贷客户数) / sum(贷款到期客户数)          END 续贷率

        ,CASE            WHEN sum(存款到期客户数) = 0 THEN 0            ELSE sum(续存客户数) / sum(存款到期客户数)          END 续存率

        ,CASE   WHEN (  CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数) END ) = 0 THEN 0

				ELSE ( ( CASE WHEN sum(交接后12个月贷款日均人数) = 0 THEN 0 ELSE sum(交接后12个月贷款日均总规模) / sum(交接后12个月贷款日均人数)  END  ) -

				( CASE WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) ) / ( CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0 ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) END 增长率_贷款

        ,CASE WHEN ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) = 0 THEN 0

			  ELSE ( ( CASE WHEN sum(交接后12个月存款日均人数) = 0 THEN 0 ELSE sum(交接后12个月存款日均总规模) / sum(交接后12个月存款日均人数)  END  ) - (

             CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0    ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数)  END  ) ) / ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) END 增长率_存款

        ,CASE WHEN ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) ) = 0 THEN 0 ELSE sum(执行利率下降) / ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) )          END 执行利率下降占比

        ,CASE WHEN sum(交接前非随贷通客户) = 0 THEN 0 ELSE sum(新增随贷通客户数) / sum(交接前非随贷通客户)          END 配卡率

        ,CASE WHEN ( CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END ) = 0 THEN 0

			  ELSE ( (  CASE  WHEN sum(交接后12个月ftp月均人数) = 0 THEN 0   ELSE sum(交接后12个月ftp月均总规模) / sum(交接后12个月ftp月均人数)  END   ) - (

			  CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0    ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END   ) ) / (CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END )  END ftp涨跌幅

        ,case when sum(mdf_ctr_bal)=0 then 0 else sum(is_yr_new_hpn_amt)/sum(mdf_ctr_bal) end as 	本年新发生风险贷款率

		-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0  and sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0  then  sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-

				  -- sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)) end AS 执行利率变化绝对值

		-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0  and sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 and sum(coalesce(exe_intr_rate_bfr_fenzi,0))>0 then  (sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-

				  -- sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)))/( sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0))) end AS 执行利率变化相对值

FROM    lab_bigdata_dev.mdf_data_feature_zj_20221122 a

where a . 分行名称 rlike '分行'

and DT = '20210601-20220430'

GROUP BY mdf_type

;

/*



SELECT  '全行' as 分行名称

		,mdf_type

        ,'1' AS type

        ,CASE            WHEN sum(交接前是有效户) = 0 THEN 0            ELSE sum(交接前是有效户交接后12个月非有效户) / sum(交接前是有效户)          END 转化率1

		,sum(交接前是有效户) 交接前是有效户

		,sum(交接前是有效户交接后12个月非有效户)  交接前是有效户交接后12个月非有效户

        ,CASE            WHEN sum(交接前非有效户) = 0 THEN 0            ELSE sum(交接前非有效户交接后12个月是有效户) / sum(交接前非有效户)          END 转化率2

		,sum(交接前非有效户)  交接前非有效户

		,sum(交接前非有效户交接后12个月是有效户) 交接前非有效户交接后12个月是有效户

        ,CASE            WHEN sum(贷款到期客户数) = 0 THEN 0            ELSE sum(续贷客户数) / sum(贷款到期客户数)          END 续贷率

		,sum(贷款到期客户数)

		,sum(续贷客户数) 续贷客户数

        ,CASE            WHEN sum(存款到期客户数) = 0 THEN 0            ELSE sum(续存客户数) / sum(存款到期客户数)          END 续存率

		,sum(存款到期客户数) 存款到期客户数

		,sum(续存客户数) 续存客户数

        ,CASE   WHEN (  CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数) END ) = 0 THEN 0

				ELSE ( ( CASE WHEN sum(交接后12个月贷款日均人数) = 0 THEN 0 ELSE sum(交接后12个月贷款日均总规模) / sum(交接后12个月贷款日均人数)  END  ) -

				( CASE WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) ) / ( CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0 ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) END 增长率_贷款

        ,sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数) 交接前3个月户均贷款规模

		,sum(交接后12个月贷款日均总规模) / sum(交接后12个月贷款日均人数)-sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数) 交接后12个月户均贷款规模



		,CASE WHEN ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) = 0 THEN 0

			  ELSE ( ( CASE WHEN sum(交接后12个月存款日均人数) = 0 THEN 0 ELSE sum(交接后12个月存款日均总规模) / sum(交接后12个月存款日均人数)  END  ) - (

             CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0    ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数)  END  ) ) / ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) END 增长率_存款

        ,sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) 交接前3个月户均存款规模

		,sum(交接后12个月存款日均总规模) / sum(交接后12个月存款日均人数)-sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) 交接后12个月户均存款规模

		,CASE WHEN ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) ) = 0 THEN 0 ELSE sum(执行利率下降) / ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) )          END 执行利率下降占比

		, sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) 交接后12个月续贷的客户数

		,sum(执行利率下降) 执行利率下降客户数

        ,CASE WHEN sum(交接前非随贷通客户) = 0 THEN 0 ELSE sum(新增随贷通客户数) / sum(交接前非随贷通客户)          END 配卡率

		,sum(交接前非随贷通客户)  交接前非随贷通客户

		,sum(新增随贷通客户数) 新增随贷通客户数

        ,CASE WHEN ( CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END ) = 0 THEN 0

			  ELSE ( (  CASE  WHEN sum(交接后12个月ftp月均人数) = 0 THEN 0   ELSE sum(交接后12个月ftp月均总规模) / sum(交接后12个月ftp月均人数)  END   ) - (

			  CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0    ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END   ) ) / (CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END )  END ftp涨跌幅

        ,sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  交接前户均月ftp

		,(sum(交接后12个月ftp月均总规模) / sum(交接后12个月ftp月均人数)) - (sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数))  as 交接后户均月ftp减交接前户均月ftp

		,case when sum(mdf_ctr_bal)=0 then 0 else sum(is_yr_new_hpn_amt)/sum(mdf_ctr_bal) end as 	本年新发生风险贷款率

		,sum(mdf_ctr_bal) 贷款余额不含核销

		,sum(is_yr_new_hpn_amt) 新发生风险贷款余额

		-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0  and sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0  then  sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-

				  -- sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)) end AS 执行利率变化绝对值

		-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0  and sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 and sum(coalesce(exe_intr_rate_bfr_fenzi,0))>0 then  (sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-

				  -- sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)))/( sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0))) end AS 执行利率变化相对值

FROM    lab_bigdata_dev.202204_mdf_data_feature_zj_20221122 a

where a . 分行名称 rlike '分行'

and mdf_type='全量客户'

GROUP BY mdf_type

;*/





-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_zj_3_20221122;



-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_zj_3_20221122

-- (

    -- 分行名称      STRING COMMENT '分行名称'

    -- ,转化率_是转非  BIGINT COMMENT ''

    -- ,转化率_非转是  BIGINT COMMENT ''

    -- ,续贷率      BIGINT COMMENT ''

    -- ,续存率      BIGINT COMMENT ''

    -- ,增长率_贷款   BIGINT COMMENT ''

    -- ,增长率_存款   BIGINT COMMENT ''

    -- ,执行利率下降占比 BIGINT COMMENT ''

    -- ,配卡率      BIGINT COMMENT ''

    -- ,ftp涨跌幅   BIGINT COMMENT ''

	-- , IS_YR_NEW_HPN_rate  BIGINT comment '本年新发生风险贷款率'

-- )

-- COMMENT

-- '客户交接前后业务波动分析_总结3_排序'

-- PARTITIONED BY

-- (

    -- dt STRING

-- );



insert overwrite table lab_bigdata_dev.mdf_data_feature_zj_3_20221122 PARTITION (DT = '20210601-20220430')



SELECT  a . 分行名称

    ,row_number() over(partition by '1' order by a.有效户流失率 desc) as 转化率_是转非

    ,row_number() over(partition by '1' order by a.有效户转化率 asc) as 转化率_非转是

    ,row_number() over(partition by '1' order by a.续贷率 asc) as 续贷率

    ,row_number() over(partition by '1' order by a.续存率 asc) as 续存率

    ,row_number() over(partition by '1' order by a.增长率_贷款 asc) as 增长率_贷款

    ,row_number() over(partition by '1' order by a.增长率_存款 asc) as 增长率_存款

    ,row_number() over(partition by '1' order by a.执行利率下降占比 desc) as 执行利率下降占比

    ,row_number() over(partition by '1' order by a.配卡率 asc) as 配卡率

    ,row_number() over(partition by '1' order by a.ftp涨跌幅 asc) as ftp涨跌幅

	,row_number() over(partition by '1' order by a.IS_YR_NEW_HPN_rate desc) as 本年新发生风险贷款率

FROM    lab_bigdata_dev.mdf_data_feature_zj_2_20221122 a

where a . 分行名称 rlike '分行'

and a.dt='20210601-20220430'

and mdf_type='交接客户'

;


**f交接分析202310.sql
SELECT report_id,sum(balance) 余额
FROM    edw.ncip_EB02AH_EBBU_UNLOATRANSUB	--未结清借贷交易分类汇总信息
WHERE   dt >= '20200301'
and report_id in (
    '2024062717061428481438',
'2023121716341152382462',
'2023060914180360383974',
'2022080109581022364283',
'2021112123462870162494',
'2021051514425463863147',
'2020102211265607262527'
)
and ass_qual_sort='0'  --合计
and bus_type in ('1','2','3')
group by report_id
order by report_id desc
;
担保交易风险敞口：未结清借贷交易分类汇总信息 中长期借款 短期借款 循环透支 合计
SELECT report_id,sum(balance) 余额
FROM    edw.ncip_EB03AH_ESSU_UNCLEARSUB --di表
WHERE   dt >= '20200301'
and report_id in (
    '2024062717061428481438',
'2023121716341152382462',
'2023060914180360383974',
'2022080109581022364283',
'2021112123462870162494',
'2021051514425463863147',
'2020102211265607262527'
)
and aq_class='0'  --合计
and business_type in ('1','2','3','9') --1-银行承兑汇票2-信用证3-银行保函9-其他
group by report_id
order by report_id desc
;

SELECT * FROM edw.ncip_ED04A_EDGB_GUA  --剔除已结清，金额合计折成人民币
WHERE   dt >= '20200301'
and report_id in (
    '2024062717061428481438');

    SELECT * FROM  edw.ncip_ED04B_EDGR_GUA
    WHERE   dt >= '20200301'
and report_id in (
    '2024062717061428481438');


SELECT  DISTINCT report_dt
                 ,report_id
                 ,rn
FROM    (
            SELECT  substr(report_id, 1, 8) report_dt
                    ,report_id
                    ,dense_rank() OVER ( PARTITION BY cst_id ORDER BY report_id DESC ) AS rn
            FROM    edw.dim_cst_ccrc_entp_loan_inf_dd
            WHERE   dt = '20240723'
            --AND     cst_id = '2603876531' --客户案例2603876531湖州巨舟木业有限公司
            AND     cst_id = '2001109997' --阀门
            ORDER BY report_id DESC
        ) t;

SELECT * FROM EB05BH_ESRS_LR_TRANSUB;

SELECT * FROM edw.ncip_EA01B_EHHQ_QRY_REQ
WHERE   dt >= '20200301'
and report_id in (
    '2024062717061428481438')
**专题分析报告_01提额分析.sql
SELECT  t.cst_id

		,t.date_now

		,t.label

		,t.label2

		,`(cst_id|dt|date_now|label|label2)?+.+`

from lab_bigdata_dev.ent_group_label2_sample t  --样本表

left join lab_bigdata_dev.all_feature6_ent_group_20240221 t8 --(行业周期指标（包括行内贷款行业周期和征信贷款行业周期指标),140+210=350)

on t.cst_id=t8.cst_id and t.date_now=t8.date_now

limit 100;
**专题分析报告_02_02企业团办_个人.sql
SELECT * from

idv_group_loan_detail

WHERE LABEL=1;





DROP TABLE IF EXISTS lab_bigdata_dev.idv_group_loan_detail;



CREATE TABLE IF NOT EXISTS lab_bigdata_dev.idv_group_loan_detail  AS

select t1.cst_id

		,t1.dt

	   ,t1.label  --近90天新发放消费贷，且企业是团办

	   ,t1.ent_cst_id

	   ,T7.BUSI_CTR_ID  --未来90天办理的消费性贷款合同

		,T7.apnt_mtu_dt

		,T7.apnt_start_dt

		,t7.ctr_amt

		,t7.ctr_bal

		,t7.intr_rat

		,CASE

           WHEN T7.end_dt = '18991231' THEN DATEDIFF(TO_DATE(T7.apnt_mtu_dt, 'yyyyMMdd'), TO_DATE(T7.apnt_start_dt, 'yyyyMMdd'), 'dd') + 1

           ELSE DATEDIFF(TO_DATE(T7.end_dt, 'yyyyMMdd'), TO_DATE(T7.apnt_start_dt, 'yyyyMMdd'), 'dd') + 1

         END AS duration --期限

        ,CASE

           WHEN T8.BUS_CTR_ID IS NOT NULL                                       THEN T8.BIND_LMT

           WHEN T8.BUS_CTR_ID IS NULL AND T4.ACTL_START_USE_CRD_LMT IS NOT NULL THEN T4.ACTL_START_USE_CRD_LMT

           ELSE T7.CTR_AMT

         END ACTL_START_USE_CRD_LMT

        ,coalesce(T11.mon_acm_prcp_bal_acml, 0) mon_acm_prcp_bal_acml

        ,coalesce(T11.dbil_fenzi, 0) dbil_fenzi

        ,coalesce(T11.dbil_fenmu, 0) dbil_fenmu

		,T12.prcp_bal_avg_30d

		,T12.prcp_bal_avg_60d

		,T12.prcp_bal_avg_90d

from 	 lab_bigdata_dev.idv_group_label t1



--未来90天有消费性贷款

LEFT JOIN edw.dim_bus_loan_ctr_inf_dd T7 --信贷合同信息

ON      T1.cst_id = T7.cst_id

AND     T7.dt ='20240217'

AND     T7.bus_cd NOT IN ( 'A' , 'B' , 'H' , 'I' , 'O' , 'P' ) --剔除 员工贷款

AND     ( T7.chnl_cd <> 'L08'

    OR T7.pd_cd <> '201050101040335' ) --剔除 小鱼分期

AND     T7.pd_cd <> '201050101040332' --剔除 蚂蚁借呗

AND     T7.pd_cd <> '201050101040319' --剔除百度分期贷

AND     ( T7.pd_cd NOT IN ( '201050102010146' , '201050101040348' ) OR T7.frz_sts_cd <> '' ) --剔除未签约的泰e贷

AND     ( T7.pd_cd LIKE '201050101%'  OR ( T7.pd_cd LIKE '2010503%' AND     T7.loan_usg_cd LIKE '02%' ) ) ---个人消费性贷款、消费用途随贷通

AND     (    (

				( T7.ctr_bal > 0  --余额>0

				  OR ( T7.ctr_bal IS NULL AND     nvl(T7.crc_ind, '0') = '0' )  --非循环贷有余额

				  OR ( ( nvl(T7.crc_ind, '0') <> '0'   OR T7.pd_cd LIKE '2010503%' ) AND     ( T7.ctr_bal = 0  OR T7.ctr_bal IS NULL )  AND     T7.apnt_mtu_dt >= T7.dt )  --（循环贷 或 随贷通） 且 余额为0 且 未到期

				)

			 AND     nvl(T7.frz_sts_cd, ' ') NOT IN ( '3' , '4' )  --3	到期失效  4	终止失效  冻结状态非到期失效，非终止失效



			)

	  OR ( T7.ctr_bal > 0 AND     T7.pd_cd LIKE '2010503%'  AND     T7.apnt_mtu_dt <= T7.dt  AND     T7.frz_sts_cd IN ( '3' , '4' ) )  --余额>0  且 随贷通 且到期 且 冻结状态是到期失效、终止失效

	  ) ----未终结、未到期业务



AND     T7.frz_sts_cd <> ''



LEFT JOIN    (

                 SELECT  *

                         ,ROW_NUMBER() OVER ( PARTITION BY BUS_CTR_ID ORDER BY UPD_DT DESC ) RN

                 FROM    EDW.DIM_BUS_LOAN_CRC_CTR_INF_DD --循环贷款合同信息

                 WHERE   DT = '20240123'

             ) T4

ON      T7.BUSI_CTR_ID = T4.BUS_CTR_ID

AND     T4.RN = 1



LEFT JOIN    EDW.DWD_BUS_LOAN_FNC_CRD_LMT_INF_DD t8 ----随贷通授信额度信息

ON      t7.BUSI_CTR_ID = t8.BUS_CTR_ID

AND     t8.LOAN_USG_CD = '2' --随贷通消费性贷款

AND     t8.DT = '20240217'

LEFT JOIN    (

                 SELECT  *

                         ,ROW_NUMBER() OVER ( PARTITION BY BUS_CTR_ID ORDER BY UPD_DT DESC ) RN

                 FROM    EDW.DIM_BUS_LOAN_CRC_CTR_INF_DD --循环贷款合同信息

                 WHERE   DT = '20240217'

             ) t9

ON      t7.BUSI_CTR_ID = t9.BUS_CTR_ID

AND     t9.RN = 1



--合同发放后，近30天借据日均，近60天借据日均，近90天借据日均

left join (

	select t.BUSI_CTR_ID

			,t.apnt_start_dt

			,sum(case when DATEDIFF(TO_DATE(t2.dt, 'yyyyMMdd'), TO_DATE(t.apnt_start_dt, 'yyyyMMdd'), 'dd')<=30 and t2.dt>t.apnt_start_dt then t2.prcp_bal else null end  )/30 prcp_bal_avg_30d

			,sum(case when DATEDIFF(TO_DATE(t2.dt, 'yyyyMMdd'), TO_DATE(t.apnt_start_dt, 'yyyyMMdd'), 'dd')<=60 and t2.dt>t.apnt_start_dt then t2.prcp_bal else null end  )/60 prcp_bal_avg_60d

			,sum(case when DATEDIFF(TO_DATE(t2.dt, 'yyyyMMdd'), TO_DATE(t.apnt_start_dt, 'yyyyMMdd'), 'dd')<=90 and t2.dt>t.apnt_start_dt then t2.prcp_bal else null end  )/90 prcp_bal_avg_90d

	from edw.dim_bus_loan_ctr_inf_dd t --合同表

	left join  EDW.dws_bus_loan_dbil_inf_dd t2 --贷款借据信息汇总

    on t.BUSI_CTR_ID = t2.BUS_CTR_ID

	and t2.DT >='20230101'

	where t.dt ='20240217'

	and t.apnt_start_dt>='20230101'

	GROUP BY t.BUSI_CTR_ID

			,t.apnt_start_dt

)t12

ON      t7.BUSI_CTR_ID = t12.BUSI_CTR_ID

LEFT JOIN    (

                 SELECT  BUS_CTR_ID

                         ,COUNT(DBIL_ID) COUNT_DBIL_ID

                         ,SUM(AMT) SUM_AMT

                         ,SUM(mon_acm_prcp_bal_acml) / substr(dt,7,2) AS mon_acm_prcp_bal_acml

                         ,SUM(AMT * exe_intr_rat * CASE

                                                     WHEN end_dt = '18991231' THEN DATEDIFF(TO_DATE(apnt_mtu_day, 'yyyyMMdd'), TO_DATE(dtrb_dt, 'yyyyMMdd'), 'dd') + 1

                                                     ELSE DATEDIFF(TO_DATE(end_dt, 'yyyyMMdd'), TO_DATE(dtrb_dt, 'yyyyMMdd'), 'dd') + 1

                                                   END)   AS dbil_fenzi

                         ,SUM(AMT * CASE

                                      WHEN end_dt = '18991231' THEN DATEDIFF(TO_DATE(apnt_mtu_day, 'yyyyMMdd'), TO_DATE(dtrb_dt, 'yyyyMMdd'), 'dd') + 1

                                      ELSE DATEDIFF(TO_DATE(end_dt, 'yyyyMMdd'), TO_DATE(dtrb_dt, 'yyyyMMdd'), 'dd') + 1

                                    END)                  AS dbil_fenmu

                 FROM    EDW.dws_bus_loan_dbil_inf_dd t1 --贷款借据信息汇总

                 WHERE   DT = '20240217'

                 GROUP BY BUS_CTR_ID,dt

             ) t11

ON      t7.BUSI_CTR_ID = t11.BUS_CTR_ID

;



SELECT * from

idv_group_loan_detail

WHERE LABEL=1;



SELECT Date_now, COUNT(*),SUM(LABEL) FROM idv_group_sample GROUP BY Date_now ;--

SELECT * FROM  lab_bigdata_dev.industry_zx_last_report_idv_group_20240219 limit 7 (数据集市、征信（包括征信迁移指标）、ftp指标,共722+188=910个)   ;

--lab_bigdata_dev.all_feature2_idv_group_20240219(信用卡、贷款、理财、泰惠收收单、泰惠收微信、支付宝通道消费类指标,共1112个)

--lab_bigdata_dev.all_feature3_idv_group_20240219(存款日均、部分交易流水等,共1046个)

--lab_bigdata_dev.all_feature4_idv_group_20240219(40个标签交易流水,共733个)

--lab_bigdata_dev.all_feature5_idv_group_20240219(app指标,共168+663=831个)

--lab_bigdata_dev.all_feature6_idv_group_20240219(行业周期指标（包括行内贷款行业周期和征信贷款行业周期指标),140+210=350)

--lab_bigdata_dev.all_feature7_idv_group_20240219(手机银行埋点指标，共95个)

SELECT * FROM a00_transition_idv_group_20240219 LIMIT 7;



SELECT * FROM tbl1_ths_zfb_consume_feature_idv_group_20240219 LIMIT 7;

SELECT * FROM creditcard_all_feature_idv_group_20240219 LIMIT 7;



SELECT * FROM zx_account_flat_f_idv_group_20240219  LIMIT 7;

SELECT * FROM zx_last_report_idv_group_20240219  LIMIT 7;





---print('信用卡指标合并完成，开始合并征信指标')



------###---###---###------4.征信指标----------------------------

drop table if exists lab_bigdata_dev.pboc_all_feature_idv_group_20240219;

create table lab_bigdata_dev.pboc_all_feature_idv_group_20240219 as

SELECT

	s.cst_id,s.date_now,t7.report_id as report_no

	,`(cst_id|date_now|report_id|report_no|label|label2)?+.+`

	FROM

	lab_bigdata_dev.idv_group_sample s

------pboc贷款指标

LEFT JOIN

   lab_bigdata_dev.tbl5_pboc_loan_feature_idv_group_20240219 t1

   on s.cst_id=t1.cst_id

   and s.date_now=t1.date_now

------pboc信用卡指标

LEFT JOIN

	lab_bigdata_dev.tbl1_pboc_credit_card_feature_idv_group_20240219 t2

	on s.cst_id=t2.cst_id

	and s.date_now=t2.date_now

LEFT JOIN

	lab_bigdata_dev.tbl2_pboc_credit_card_feature_idv_group_20240219 t3

	on s.cst_id=t3.cst_id

	and s.date_now=t3.date_now

------pboc查询指标

LEFT JOIN

	lab_bigdata_dev.tbl3_pboc_query_feature_idv_group_20240219 t4

	on s.cst_id=t4.cst_id

	and s.date_now=t4.date_now

------pboc贷款指标

LEFT JOIN

	lab_bigdata_dev.tbl4_pboc_loan_feature_idv_group_20240219 t5

	on s.cst_id=t5.cst_id

	and s.date_now=t5.date_now

LEFT JOIN

	lab_bigdata_dev.tbl6_pboc_score_feature_idv_group_20240219 t6

	on s.cst_id=t6.cst_id

	and s.date_now=t6.date_now

LEFT JOIN

    lab_bigdata_dev.zx_last_report_idv_group_20240219 t7

    on s.cst_id=t7.cst_id

	and s.date_now=t7.date_now

;





---print('征信指标合并完成,开始合并贷款指标')





------###---###---###---###---5.贷款指标

drop table if exists lab_bigdata_dev.loan_all_feature_idv_group_20240219;

create table lab_bigdata_dev.loan_all_feature_idv_group_20240219 as

SELECT

	s.cst_id,s.date_now,`(cst_id|date_now|label2|label)?+.+`

	FROM lab_bigdata_dev.idv_group_sample s

LEFT JOIN

	lab_bigdata_dev.tbl1_inb_loan_feature_idv_group_20240219 t1

	on s.cst_id=t1.cst_id

	and s.date_now=t1.date_now

LEFT JOIN

	lab_bigdata_dev.tbl2_inb_loan_feature_idv_group_20240219 t2

	on s.cst_id=t2.cst_id

	and s.date_now=t2.date_now

LEFT JOIN

	lab_bigdata_dev.tbl3_inb_loan_feature_idv_group_20240219 t3

	on s.cst_id=t3.cst_id

	and s.date_now=t3.date_now

LEFT JOIN lab_bigdata_dev.tbl4_inb_loan_use_rate_feature_idv_group_20240219 t4  ----循环贷款用信率

    on s.cst_id=t4.cst_id

	and s.date_now=t4.date_now

---关联人贷款

LEFT JOIN

	lab_bigdata_dev.tbl5_inb_rel_loan_feature_idv_group_20240219 t5

	on s.cst_id=t5.cst_id

	and s.date_now=t5.date_now

LEFT JOIN

	lab_bigdata_dev.tbl6_inb_recnt_loan_feature_idv_group_20240219 t6

	on s.cst_id=t6.cst_id

	and s.date_now=t6.date_now

---90、180、360、720天贷款日均

LEFT JOIN

	lab_bigdata_dev.tbl7_inb_daily_loan_feature_idv_group_20240219 t7   ----90、180、360、720天贷款

	on s.cst_id=t7.cst_id

	and s.date_now=t7.date_now

---30、60天贷款日均

left join

	lab_bigdata_dev.tbl8_inb_daily_loan_feature_idv_group_20240219 t8   ----30、60天贷款

	on s.cst_id=t8.cst_id

	and s.date_now=t8.date_now

---同一风险控制号90、180、360、720贷款日均

left join

	lab_bigdata_dev.tbl9_rsk_id_inb_daily_loan_feature_idv_group_20240219 t9

	on s.cst_id=t9.cst_id

	and s.date_now=t9.date_now

---同一风险控制号30、60天贷款贷款日均

left join

	lab_bigdata_dev.tbl10_rsk_id_inb_daily_loan_feature_idv_group_20240219 t10  ----同一风险控制号贷款日均

	on s.cst_id=t10.cst_id

	and s.date_now=t10.date_now

---贷款日均占比

left join

	lab_bigdata_dev.tbl11_ratio_loan_feature_idv_group_20240219 t11

	on s.cst_id=t11.cst_id

	and s.date_now=t11.date_now

left join

	lab_bigdata_dev.tbl5_label_grnt_prsn_feature_idv_group_20240219 t12   ---2 担保人、被担保人  2111hyj新增

	on s.cst_id=t12.cst_id

	and s.date_now=t12.date_now

left join

	lab_bigdata_dev.tbl16_loan_pre_ases_feature_idv_group_20240219 t13   ---2 申请预评估通过率、申请预评估未通过数量  2111hyj新增

	on s.cst_id=t13.cst_id

	and s.date_now=t13.date_now

;







---print('贷款指标合并完成,开始合并理财指标')



------###---###---###----6.理财指标

drop table if exists lab_bigdata_dev.chm_all_feature_idv_group_20240219;

create table lab_bigdata_dev.chm_all_feature_idv_group_20240219 as

SELECT

	s.cst_id,s.date_now,`(cst_id|date_now|label|label2)?+.+`

	FROM lab_bigdata_dev.idv_group_sample s

LEFT JOIN

	lab_bigdata_dev.tbl1_chm_feature_idv_group_20240219 t1

	on s.cst_id=t1.cst_id

	and s.date_now=t1.date_now

LEFT JOIN

	lab_bigdata_dev.tbl2_daily_chm_feature_idv_group_20240219 t2

	on s.cst_id=t2.cst_id

	and s.date_now=t2.date_now

LEFT JOIN

	lab_bigdata_dev.tbl3_rel_chm_feature_idv_group_20240219 t3

	on s.cst_id=t3.cst_id

	and s.date_now=t3.date_now

---理财日均

left join lab_bigdata_dev.tbl4_daily_chm_feature_idv_group_20240219 t4

	on s.cst_id=t4.cst_id

	and s.date_now=t4.date_now

left join lab_bigdata_dev.tbl5_ratio_chm_feature_idv_group_20240219 t5

	on s.cst_id=t5.cst_id

	and s.date_now=t5.date_now

;





---print('理财指标合并完成,开始合并借记卡类指标')





------###---###---###------7.1借记卡指标：存款、资产（aum）类

drop table if exists lab_bigdata_dev.debitcard_dep_aum_feature_idv_group_20240219;

create table lab_bigdata_dev.debitcard_dep_aum_feature_idv_group_20240219 as

SELECT

	cst.cst_id,cst.date_now,`(cst_id|date_now|label|label2)?+.+`

	FROM lab_bigdata_dev.idv_group_sample cst

LEFT JOIN

	lab_bigdata_dev.tbl1_points_feature_idv_group_20240219 t0

	on cst.cst_id=t0.cst_id

 	and cst.date_now=t0.date_now

LEFT JOIN

	lab_bigdata_dev.tbl1_daily_debitcard_feature_idv_group_20240219 t1

	on cst.cst_id=t1.cst_id

	and cst.date_now=t1.date_now

LEFT JOIN

	lab_bigdata_dev.tbl2_rel_debitcard_feature_idv_group_20240219 t2

	on cst.cst_id=t2.cst_id

	and cst.date_now=t2.date_now

---定期、敏感定期日均

left join

	lab_bigdata_dev.tbl13_dq_daily_debitcard_feature_idv_group_20240219 t3

	on cst.cst_id=t3.cst_id

	and cst.date_now=t3.date_now

---定期购买

left join

	lab_bigdata_dev.tbl15_dep_buy_debitcard_feature_idv_group_20240219 t4

	on cst.cst_id=t4.cst_id

	and cst.date_now=t4.date_now

---活期、敏感活期日均

left join

	lab_bigdata_dev.tbl14_hq_daily_debitcard_feature_idv_group_20240219 t5

	on cst.cst_id=t5.cst_id

	and cst.date_now=t5.date_now

left join lab_bigdata_dev.tbl17_hq_ratio_debitcard_feature_idv_group_20240219 t6

	on cst.cst_id=t6.cst_id

	and cst.date_now=t6.date_now

----aum

left join lab_bigdata_dev.tbl18_aum_ratio_debitcard_feature_idv_group_20240219 t7

	on cst.cst_id=t7.cst_id

	and cst.date_now=t7.date_now

;









------###---###---###---###-----------7.2借记卡指标：交易流水1

drop table if exists lab_bigdata_dev.debitcard_tran1_feature_idv_group_20240219;

create table lab_bigdata_dev.debitcard_tran1_feature_idv_group_20240219 as

SELECT

	s.cst_id,s.date_now,`(cst_id|date_now|label|label2)?+.+`

	FROM lab_bigdata_dev.idv_group_sample s

LEFT JOIN

	lab_bigdata_dev.tbl3_debitcard_tran_feature_idv_group_20240219 t1

	on s.cst_id=t1.cst_id

	and s.date_now=t1.date_now

LEFT JOIN

	lab_bigdata_dev.tbl4_recnt_debitcard_tran_feature_idv_group_20240219 t2

	on s.cst_id=t2.cst_id

	and s.date_now=t2.date_now

LEFT JOIN

	lab_bigdata_dev.tbl5_debitcard_tran_feature_idv_group_20240219 t3    ------麦肯锡交易流水100个指标

	on s.cst_id=t3.cst_id

	and s.date_now=t3.date_now

LEFT JOIN

	lab_bigdata_dev.tbl6_debitcard_tran_feature_idv_group_20240219 t4  ------总交易金额、笔数、比例等，148个指标

	on s.cst_id=t4.cst_id

	and s.date_now=t4.date_now

LEFT JOIN

	lab_bigdata_dev.tbl11_label40_50_debitcard_tran_feature_idv_group_20240219 t5  ------6+14个标签交易类型交易金额、笔数共216+550个指标

	on s.cst_id=t5.cst_id

	and s.date_now=t5.date_now

LEFT JOIN

	lab_bigdata_dev.tbl12_label51_60_debitcard_tran_feature_idv_group_20240219 t6

	on s.cst_id=t6.cst_id

	and s.date_now=t6.date_now

;





---print('开始合并数据集市、征信指标')



---### ------###---###---###------最终合并

---### ------###---###---### ----1,2,4合并:数据集市、征信(包括征信迁移指标188)、ftp指标,722+188=910个)

drop table if exists lab_bigdata_dev.all_feature1_idv_group_20240219;

create table lab_bigdata_dev.all_feature1_idv_group_20240219 as

SELECT

	s.cst_id,s.date_now,t3.report_no

	,`(cst_id|date_now|report_no|report_id|label|label2|scene_type|sample_class|is_tran|cst_type)?+.+`

	FROM lab_bigdata_dev.idv_group_sample s

left join  lab_bigdata_dev.cst_type_feature_idv_group_20240219  t1   ---1

	on s.cst_id=t1.cst_id

	and s.date_now=t1.date_now

left join  lab_bigdata_dev.adm_pub_feature_idv_group_20240219 t2  ---252

	on s.cst_id=t2.cst_id

	and s.date_now=t2.date_now

left join lab_bigdata_dev.pboc_all_feature_idv_group_20240219 t3 ---317

	on s.cst_id=t3.cst_id

	and s.date_now=t3.date_now

left join lab_bigdata_dev.ftp_feature_idv_group_20240219 t4   -----ftp指标：总ftp、存款ftp、贷款ftp、理财ftp

	on s.cst_id=t4.cst_id

	and s.date_now=t4.date_now

left join lab_bigdata_dev.tbl127_pboc_loan_transfer_feature_idv_group_20240219 t5   ---征信迁移指标1

	on s.cst_id=t5.cst_id

	and s.date_now=t5.date_now

left join lab_bigdata_dev.tbl128_pboc_loan_query_transfer_feature_idv_group_20240219 t6   ---征信迁移指标2

	on s.cst_id=t6.cst_id

	and s.date_now=t6.date_now

;





---print('开始合并等信用卡、贷款、理财指标、泰惠收通道微信支付宝消费类指标')



------###---###---###---### ----3,5,6合并,信用卡、贷款、理财、泰惠收收单、泰惠收微信、支付宝通道消费类指标,共1112个指标

drop table if exists lab_bigdata_dev.all_feature2_idv_group_20240219;

create table lab_bigdata_dev.all_feature2_idv_group_20240219 as

SELECT

	s.cst_id,s.date_now

	,`(cst_id|date_now|report_no|label|label2|scene_type|sample_class|is_tran|cst_type)?+.+`

	FROM lab_bigdata_dev.idv_group_sample s

left join lab_bigdata_dev.creditcard_all_feature_idv_group_20240219 t1  -----442

	on s.cst_id=t1.cst_id

	and s.date_now=t1.date_now

left join lab_bigdata_dev.loan_all_feature_idv_group_20240219  t2 ---145

	on s.cst_id=t2.cst_id

	and s.date_now=t2.date_now

left join lab_bigdata_dev.chm_all_feature_idv_group_20240219 t3   ---39

	on s.cst_id=t3.cst_id

	and s.date_now=t3.date_now

left join lab_bigdata_dev.tbl1_ths_wechat_consume_feature_idv_group_20240219 t4  ---泰惠收微信通道指标：总消费、环比类

	on s.cst_id=t4.cst_id

	and s.date_now=t4.date_now

left join lab_bigdata_dev.tbl2_ths_wechat_consume_feature_idv_group_20240219 t5 ---泰惠收微信通道指标：最大值、最小值、均值

	on s.cst_id=t5.cst_id

	and s.date_now=t5.date_now

left join lab_bigdata_dev.tbl3_ths_wechat_consume_feature_idv_group_20240219 t6 ---泰惠收微信通道指标：最近一笔消费

	on s.cst_id=t6.cst_id

	and s.date_now=t6.date_now

left join lab_bigdata_dev.tbl1_ths_zfb_consume_feature_idv_group_20240219 t7  ---泰惠收支付宝通道指标：总消费、环比类

	on s.cst_id=t7.cst_id

	and s.date_now=t7.date_now

left join lab_bigdata_dev.tbl2_ths_zfb_consume_feature_idv_group_20240219 t8 ---泰惠收支付宝通道指标：最大值、最小值、均值

	on s.cst_id=t8.cst_id

	and s.date_now=t8.date_now

left join lab_bigdata_dev.tbl3_ths_zfb_consume_feature_idv_group_20240219 t9 ---泰惠收支付宝通道指标：最近一笔消费

	on s.cst_id=t9.cst_id

	and s.date_now=t9.date_now

left join lab_bigdata_dev.tbl3_ths_feature_idv_group_20240219 t10    ---泰惠收指标：最近一次收单

	on s.cst_id=t10.cst_id

	and s.date_now=t10.date_now

left join lab_bigdata_dev.tbl1_ths_feature_idv_group_20240219 t11    ---泰惠收指标：汇总、环比类

	on s.cst_id=t11.cst_id

	and s.date_now=t11.date_now

left join lab_bigdata_dev.tbl2_ths_feature_idv_group_20240219 t12    ---泰惠收指标：最大值、最小值、均值

	on s.cst_id=t12.cst_id

	and s.date_now=t12.date_now

;





---print('开始合并借记卡日均aum以及20个交易流水标签等指标')



------###---###---###---### ----7.1,7.2合并,1046个指标

drop table if exists lab_bigdata_dev.all_feature3_idv_group_20240219;

create table lab_bigdata_dev.all_feature3_idv_group_20240219 as

SELECT

	s.cst_id,s.date_now,`(cst_id|date_now|label|label2|scene_type|sample_class|is_tran|cst_type)?+.+`

	FROM lab_bigdata_dev.idv_group_sample s

left join lab_bigdata_dev.debitcard_dep_aum_feature_idv_group_20240219  t1   ----剔除层级排名22个指标后剩余142个指标

	on s.cst_id=t1.cst_id

	and s.date_now=t1.date_now

left join lab_bigdata_dev.debitcard_tran1_feature_idv_group_20240219 t2    ---896

	on s.cst_id=t2.cst_id

	and s.date_now=t2.date_now

;





---print('开始合并40个交易流水标签的指标')







------###---###---### ----7.3合并交易流水40个标签指标,733个指标

drop table if exists lab_bigdata_dev.all_feature4_idv_group_20240219;

create table lab_bigdata_dev.all_feature4_idv_group_20240219 as

SELECT

	s.cst_id,s.date_now,`(cst_id|date_now|label|label2|scene_type|sample_class|is_tran|cst_type)?+.+`

	FROM lab_bigdata_dev.idv_group_sample s

left join

	 lab_bigdata_dev.tbl7_label1_10_debitcard_tran_feature_idv_group_20240219 t0

	on s.cst_id=t0.cst_id

	and s.date_now=t0.date_now

left join

	lab_bigdata_dev.tbl8_label11_20_debitcard_tran_feature_idv_group_20240219 t1

	on s.cst_id=t1.cst_id

	and s.date_now=t1.date_now

left join

	lab_bigdata_dev.tbl9_label21_30_debitcard_tran_feature_idv_group_20240219 t2

	on s.cst_id=t2.cst_id

	and s.date_now=t2.date_now

left join

	lab_bigdata_dev.tbl10_label31_39_debitcard_tran_feature_idv_group_20240219 t3

	on s.cst_id=t3.cst_id

	and s.date_now=t3.date_now

;





------###---###---### ----合并app指标,168+663=831个指标

drop table if exists lab_bigdata_dev.all_feature5_idv_group_20240219;

create table lab_bigdata_dev.all_feature5_idv_group_20240219 as

SELECT s.cst_id,s.date_now,`(cst_id|date_now|label)?+.+`

	FROM lab_bigdata_dev.idv_group_sample s

left join lab_bigdata_dev.tbl5_app_install_30d_360d_feature_idv_group_20240219  t0   ---app安装指标  ----lab_bigdata_dev.tbl1_app_install_30d_90d_feature_idv_group_20240219 t5    ---app安装指标

	on s.cst_id=t0.cst_id

	and s.date_now=t0.date_now

;





------###---###---### ----合并行业周期指标,140+210=350个指标

drop table if exists lab_bigdata_dev.all_feature6_idv_group_20240219;

create table lab_bigdata_dev.all_feature6_idv_group_20240219 as

SELECT s.cst_id,s.date_now

,t0.IDT_CTG

,t0.FRS_IDT_CD --一级行业代码

,t0.SCD_IDT_CD --二级行业代码

,t0.THD_IDT_CD --三级行业代码

,t0.FOU_IDT_CD

,`(cst_id|date_now|label|IDT_CTG|FRS_IDT_CD|SCD_IDT_CD|THD_IDT_CD|FOU_IDT_CD)?+.+`

	FROM lab_bigdata_dev.idv_group_sample s

left join lab_bigdata_dev.tbl1_inb_loan_industry_feature_idv_group_20240219  t0    ---行内贷款行业周期指标

	on s.cst_id=t0.cst_id

	and s.date_now=t0.date_now

left join lab_bigdata_dev.tbl139_pboc_industry_feature_idv_group_20240219 t1    ---征信行业周期指标

	on s.cst_id=t1.cst_id

	and s.date_now=t1.date_now

;







------###---###---### ----手机银行埋点指标,95个指标

drop table if exists lab_bigdata_dev.all_feature7_idv_group_20240219;

create table lab_bigdata_dev.all_feature7_idv_group_20240219 as

SELECT s.cst_id,s.date_now

,`(cst_id|date_now|label)?+.+`

	FROM lab_bigdata_dev.idv_group_sample s

left join lab_bigdata_dev.tbl1_mobile_bank_dbp_feature_idv_group_20240219 t0 ---手机银行埋点95个指标

	on s.cst_id=t0.cst_id

	and s.date_now=t0.date_now

;
**专题分析报告_03贷款信用卡跑挂.sql


---###start_loan_industry_0079
-----客户贷款合同信息：上一年，上两年，上三年及同期贷款信息
drop table if exists lab_bigdata_dev.tbl1_inb_loan_industry_data_cst_idv_group_rate_20240305;
create table if not exists lab_bigdata_dev.tbl1_inb_loan_industry_data_cst_idv_group_rate_20240305 as
SELECT  cst_id
        ,IDT_CTG
        ,FRS_IDT_CD
        ,SCD_IDT_CD
        ,THD_IDT_CD
        ,FOU_IDT_CD
        ,date_now
        ,count(busi_ctr_id)
        ,count(DISTINCT busi_ctr_id)
		----上一年/上两年/上三年、上一年/上两年/上三年同月申请贷款合同数
        ,count(CASE WHEN substr(apnt_start_dt, 1, 4) =  substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 365 , 'dd'), '-', ''), 1, 4) THEN busi_ctr_id ELSE NULL END) AS inb_loan_apl_cnt_360d_lst_year
        ,count(CASE WHEN substr(apnt_start_dt, 1, 6) =  substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 365 , 'dd'), '-', ''), 1, 6) THEN busi_ctr_id END) AS inb_loan_apl_cnt_30d_lst_year_month
        ,count(CASE WHEN substr(apnt_start_dt, 1, 4) > substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 1460, 'dd'), '-', ''), 1, 4) AND substr(apnt_start_dt, 1, 4) <= substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 365, 'dd'), '-', ''), 1, 4) THEN busi_ctr_id ELSE NULL END) AS inb_loan_apl_cnt_360d_lst_3_year
        ,count(CASE WHEN substr(apnt_start_dt, 1, 6) =  substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 1095, 'dd'), '-', ''), 1, 6) OR  substr(apnt_start_dt, 1, 6) =  substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 730, 'dd'), '-', ''), 1, 6) OR substr(apnt_start_dt, 1, 6) = substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 365, 'dd'), '-', ''), 1, 6) THEN busi_ctr_id END) AS inb_loan_apl_cnt_30d_lst_3_year_month
		----上一年同期一个月内：如回溯日期是20230630，限定日期为20220615-20220715这段时间申请贷款合同数
		,count(CASE WHEN apnt_start_dt BETWEEN substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 380 , 'dd'), '-', ''), 1, 8) AND substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 350, 'dd'), '-', ''), 1, 8) THEN busi_ctr_id END) AS inb_loan_apl_cnt_30d_lst_year
        ,count(CASE WHEN apnt_start_dt BETWEEN substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 410 , 'dd'), '-', ''), 1, 8) AND substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 320, 'dd'), '-', ''), 1, 8) THEN busi_ctr_id END) AS inb_loan_apl_cnt_90d_lst_year
        ,count(CASE WHEN apnt_start_dt BETWEEN substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 1110, 'dd'), '-', ''), 1, 8) AND substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 1080, 'dd'), '-', ''), 1, 8) OR apnt_start_dt BETWEEN substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 745, 'dd'), '-', ''), 1, 8) AND substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 715, 'dd'), '-', ''), 1, 8) OR apnt_start_dt BETWEEN substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 380, 'dd'), '-', ''), 1, 8) AND substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 350, 'dd'), '-', ''), 1, 8) THEN busi_ctr_id END) AS inb_loan_apl_cnt_30d_lst_3_year
        ,count(CASE WHEN apnt_start_dt BETWEEN substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 1140, 'dd'), '-', ''), 1, 8) AND substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 1050, 'dd'), '-', ''), 1, 8) OR apnt_start_dt BETWEEN substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 775, 'dd'), '-', ''), 1, 8) AND substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 685, 'dd'), '-', ''), 1, 8) OR apnt_start_dt BETWEEN substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 410, 'dd'), '-', ''), 1, 8) AND substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 320, 'dd'), '-', ''), 1, 8) THEN busi_ctr_id END) AS inb_loan_apl_cnt_90d_lst_3_year
        ----上一年/上两年/上三年、上一年/上两年/上三年同月是否有贷款
		,max(CASE WHEN substr(apnt_start_dt, 1, 4) =  substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 365 , 'dd'), '-', ''), 1, 4) THEN 1 ELSE 0 END)   AS 过去一年是否有贷款
		,max(CASE WHEN substr(apnt_start_dt, 1, 6) =  substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 365 , 'dd'), '-', ''), 1, 6) THEN 1 ELSE 0 END)   AS 过去一年同月是否有贷款
        ,max(CASE WHEN substr(apnt_start_dt, 1, 4) > substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 1460, 'dd'), '-', ''), 1, 4) AND substr(apnt_start_dt, 1, 4) <= substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 365, 'dd'), '-', ''), 1, 4) THEN 1 ELSE 0 END)   AS 过去三年是否有贷款
        ,max(CASE WHEN substr(apnt_start_dt, 1, 6) =  substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 1095, 'dd'), '-', ''), 1, 6) OR  substr(apnt_start_dt, 1, 6) =  substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 730, 'dd'), '-', ''), 1, 6) OR substr(apnt_start_dt, 1, 6) = substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 365, 'dd'), '-', ''), 1, 6) THEN 1 ELSE 0 END)   AS 过去三年同月是否有贷款
		,max(CASE WHEN apnt_start_dt BETWEEN substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 380, 'dd' ), '-', ''), 1, 8) AND substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 350, 'dd'), '-', ''), 1, 8) THEN 1 ELSE 0 END)   AS 过去一年同期前后15天是否有贷款
        ,max(CASE WHEN apnt_start_dt BETWEEN substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 410, 'dd' ), '-', ''), 1, 8) AND substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 320, 'dd'), '-', ''), 1, 8) THEN 1 ELSE 0 END)   AS 过去一年同期前后45天是否有贷款
        ,max(CASE WHEN apnt_start_dt BETWEEN substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 1110, 'dd'), '-', ''), 1, 8) AND substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 1080, 'dd'), '-', ''), 1, 8) OR apnt_start_dt BETWEEN substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 745, 'dd'), '-', ''), 1, 8) AND substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 715, 'dd'), '-', ''), 1, 8) OR apnt_start_dt BETWEEN substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 380, 'dd'), '-', ''), 1, 8) AND substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 350, 'dd'), '-', ''), 1, 8) THEN 1 ELSE 0 END)   AS 过去三年同期前后15天是否有贷款
        ,max(CASE WHEN apnt_start_dt BETWEEN substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 1140, 'dd'), '-', ''), 1, 8) AND substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 1050, 'dd'), '-', ''), 1, 8) OR apnt_start_dt BETWEEN substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 775, 'dd'), '-', ''), 1, 8) AND substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 685, 'dd'), '-', ''), 1, 8) OR apnt_start_dt BETWEEN substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 410, 'dd'), '-', ''), 1, 8) AND substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 320, 'dd'), '-', ''), 1, 8) THEN 1 ELSE 0 END)   AS 过去三年同期前后45天是否有贷款

FROM    lab_bigdata_dev.industry_data_idv_group_rate_20240305
GROUP BY cst_id , IDT_CTG , FRS_IDT_CD , SCD_IDT_CD , THD_IDT_CD , FOU_IDT_CD , date_now
;
---###end


---###start_loan_industry_0080
------一级行业
drop table if exists lab_bigdata_dev.tbl2_inb_loan_industry_data_cst_middle_feature_idv_group_rate_20240305;
create table if not exists lab_bigdata_dev.tbl2_inb_loan_industry_data_cst_middle_feature_idv_group_rate_20240305 as
select FRS_IDT_CD
    ,date_now
	-----申请贷款合同数
    ,sum(inb_loan_apl_cnt_360d_lst_year) 		as inb_loan_FRS_IDT_lst_year_apl_cnt_sum_360d
    ,sum(inb_loan_apl_cnt_30d_lst_year) 		as inb_loan_FRS_IDT_lst_year_apl_cnt_sum_30d
    ,sum(inb_loan_apl_cnt_90d_lst_year) 		as inb_loan_FRS_IDT_lst_year_apl_cnt_sum_90d
    ,sum(inb_loan_apl_cnt_30d_lst_year_month) 	as inb_loan_FRS_IDT_lst_year_month_apl_cnt_sum_30d
    ,sum(inb_loan_apl_cnt_360d_lst_3_year) 		as inb_loan_FRS_IDT_lst_3_year_apl_cnt_sum_360d
    ,sum(inb_loan_apl_cnt_30d_lst_3_year) 		as inb_loan_FRS_IDT_lst_3_year_apl_cnt_sum_30d
    ,sum(inb_loan_apl_cnt_90d_lst_3_year) 		as inb_loan_FRS_IDT_lst_3_year_apl_cnt_sum_90d
    ,sum(inb_loan_apl_cnt_30d_lst_3_year_month) as inb_loan_FRS_IDT_lst_3_year_month_apl_cnt_sum_30d

    ,if(sum(过去一年是否有贷款) 		   	= 0,0,sum(inb_loan_apl_cnt_360d_lst_year)       /sum(过去一年是否有贷款))             	as inb_loan_FRS_IDT_lst_year_apl_cnt_mean_360d
    ,if(sum(过去一年同期前后15天是否有贷款)	= 0,0,sum(inb_loan_apl_cnt_30d_lst_year)        /sum(过去一年同期前后15天是否有贷款)) 	as inb_loan_FRS_IDT_lst_year_apl_cnt_mean_30d
    ,if(sum(过去一年同期前后45天是否有贷款)	= 0,0,sum(inb_loan_apl_cnt_90d_lst_year)        /sum(过去一年同期前后45天是否有贷款)) 	as inb_loan_FRS_IDT_lst_year_apl_cnt_mean_90d
    ,if(sum(过去一年同月是否有贷款)        	= 0,0,sum(inb_loan_apl_cnt_30d_lst_year_month)  /sum(过去一年同月是否有贷款))         	as inb_loan_FRS_IDT_lst_year_month_apl_cnt_mean_30d
    ,if(sum(过去三年是否有贷款)            	= 0,0,sum(inb_loan_apl_cnt_360d_lst_3_year)     /sum(过去三年是否有贷款))             	as inb_loan_FRS_IDT_lst_3_year_apl_cnt_mean_360d
    ,if(sum(过去三年同期前后15天是否有贷款)	= 0,0,sum(inb_loan_apl_cnt_30d_lst_3_year)      /sum(过去三年同期前后15天是否有贷款)) 	as inb_loan_FRS_IDT_lst_3_year_apl_cnt_mean_30d
    ,if(sum(过去三年同期前后45天是否有贷款)	= 0,0,sum(inb_loan_apl_cnt_90d_lst_3_year)      /sum(过去三年同期前后45天是否有贷款)) 	as inb_loan_FRS_IDT_lst_3_year_apl_cnt_mean_90d
    ,if(sum(过去三年同月是否有贷款)        	= 0,0,sum(inb_loan_apl_cnt_30d_lst_3_year_month)/sum(过去三年同月是否有贷款))         	as inb_loan_FRS_IDT_lst_3_year_month_apl_cnt_mean_30d
from lab_bigdata_dev.tbl1_inb_loan_industry_data_cst_idv_group_rate_20240305
group by FRS_IDT_CD
    ,date_now
;
---###end


---###start_loan_industry_0081
------二级行业
drop table if exists lab_bigdata_dev.tbl3_inb_loan_industry_data_cst_middle_feature_idv_group_rate_20240305;
create table if not exists lab_bigdata_dev.tbl3_inb_loan_industry_data_cst_middle_feature_idv_group_rate_20240305 as
select SCD_IDT_CD
    ,date_now
    ,sum(inb_loan_apl_cnt_360d_lst_year)        as inb_loan_SCD_IDT_lst_year_apl_cnt_360d
    ,sum(inb_loan_apl_cnt_30d_lst_year)         as inb_loan_SCD_IDT_lst_year_apl_cnt_30d
    ,sum(inb_loan_apl_cnt_90d_lst_year)         as inb_loan_SCD_IDT_lst_year_apl_cnt_90d
    ,sum(inb_loan_apl_cnt_30d_lst_year_month)   as inb_loan_SCD_IDT_lst_year_month_apl_cnt_30d
    ,sum(inb_loan_apl_cnt_360d_lst_3_year)      as inb_loan_SCD_IDT_lst_3_year_apl_cnt_360d_lst_3_year
    ,sum(inb_loan_apl_cnt_30d_lst_3_year)       as inb_loan_SCD_IDT_lst_3_year_apl_cnt_30d_lst_3_year
    ,sum(inb_loan_apl_cnt_90d_lst_3_year)       as inb_loan_SCD_IDT_lst_3_year_apl_cnt_90d_lst_3_year
    ,sum(inb_loan_apl_cnt_30d_lst_3_year_month) as inb_loan_SCD_IDT_lst_3_year_month_apl_cnt_30d
    ,if(sum(过去一年是否有贷款) 			= 0,0, sum(inb_loan_apl_cnt_360d_lst_year)	   /sum(过去一年是否有贷款))             	as inb_loan_SCD_IDT_lst_year_apl_cnt_mean_360d
    ,if(sum(过去一年同期前后15天是否有贷款) = 0,0,sum(inb_loan_apl_cnt_30d_lst_year)		   /sum(过去一年同期前后15天是否有贷款)) 	as inb_loan_SCD_IDT_lst_year_apl_cnt_mean_30d
    ,if(sum(过去一年同期前后45天是否有贷款) = 0,0,sum(inb_loan_apl_cnt_90d_lst_year)		   /sum(过去一年同期前后45天是否有贷款)) 	as inb_loan_SCD_IDT_lst_year_apl_cnt_mean_90d
    ,if(sum(过去一年同月是否有贷款)         = 0,0,sum(inb_loan_apl_cnt_30d_lst_year_month)  /sum(过去一年同月是否有贷款))         	as inb_loan_SCD_IDT_lst_year_month_apl_cnt_mean_30d
    ,if(sum(过去三年是否有贷款)             = 0,0,sum(inb_loan_apl_cnt_360d_lst_3_year)     /sum(过去三年是否有贷款))             	as inb_loan_SCD_IDT_lst_3_year_apl_cnt_mean_360d
    ,if(sum(过去三年同期前后15天是否有贷款) = 0,0,sum(inb_loan_apl_cnt_30d_lst_3_year)      /sum(过去三年同期前后15天是否有贷款)) 	as inb_loan_SCD_IDT_lst_3_year_apl_cnt_mean_30d
    ,if(sum(过去三年同期前后45天是否有贷款) = 0,0,sum(inb_loan_apl_cnt_90d_lst_3_year)      /sum(过去三年同期前后45天是否有贷款)) 	as inb_loan_SCD_IDT_lst_3_year_apl_cnt_mean_90d
    ,if(sum(过去三年同月是否有贷款)         = 0,0,sum(inb_loan_apl_cnt_30d_lst_3_year_month)/sum(过去三年同月是否有贷款))         	as inb_loan_SCD_IDT_lst_3_year_month_apl_cnt_mean_30d
     from lab_bigdata_dev.tbl1_inb_loan_industry_data_cst_idv_group_rate_20240305
group by SCD_IDT_CD
    ,date_now
;
---###end

---###start_loan_industry_0082
------三级行业
drop table if exists lab_bigdata_dev.tbl4_inb_loan_industry_data_cst_middle_feature_idv_group_rate_20240305;
create table if not exists lab_bigdata_dev.tbl4_inb_loan_industry_data_cst_middle_feature_idv_group_rate_20240305 as
select THD_IDT_CD
    ,date_now
    ,sum(inb_loan_apl_cnt_360d_lst_year)        as inb_loan_THD_IDT_lst_year_apl_cnt_360d
    ,sum(inb_loan_apl_cnt_30d_lst_year)         as inb_loan_THD_IDT_lst_year_apl_cnt_30d
    ,sum(inb_loan_apl_cnt_90d_lst_year)         as inb_loan_THD_IDT_lst_year_apl_cnt_90d
    ,sum(inb_loan_apl_cnt_30d_lst_year_month)   as inb_loan_THD_IDT_lst_year_month_apl_cnt_30d
    ,sum(inb_loan_apl_cnt_360d_lst_3_year)      as inb_loan_THD_IDT_lst_3_year_apl_cnt_360d
    ,sum(inb_loan_apl_cnt_30d_lst_3_year)       as inb_loan_THD_IDT_lst_3_year_apl_cnt_30d
    ,sum(inb_loan_apl_cnt_90d_lst_3_year)       as inb_loan_THD_IDT_lst_3_year_apl_cnt_90d
    ,sum(inb_loan_apl_cnt_30d_lst_3_year_month) as inb_loan_THD_IDT_lst_3_year_month_apl_cnt_30d
    ,if(sum(过去一年是否有贷款)             = 0,0,sum(inb_loan_apl_cnt_360d_lst_year)       /sum(过去一年是否有贷款))              	as inb_loan_THD_IDT_lst_year_apl_cnt_mean_360d
    ,if(sum(过去一年同期前后15天是否有贷款) = 0,0,sum(inb_loan_apl_cnt_30d_lst_year)        /sum(过去一年同期前后15天是否有贷款))  	as inb_loan_THD_IDT_lst_year_apl_cnt_mean_30d
    ,if(sum(过去一年同期前后45天是否有贷款) = 0,0,sum(inb_loan_apl_cnt_90d_lst_year)        /sum(过去一年同期前后45天是否有贷款))  	as inb_loan_THD_IDT_lst_year_apl_cnt_mean_90d
    ,if(sum(过去一年同月是否有贷款)         = 0,0,sum(inb_loan_apl_cnt_30d_lst_year_month)  /sum(过去一年同月是否有贷款))          	as inb_loan_THD_IDT_lst_year_month_apl_cnt_mean_30d
    ,if(sum(过去三年是否有贷款)             = 0,0,sum(inb_loan_apl_cnt_360d_lst_3_year)     /sum(过去三年是否有贷款))              	as inb_loan_THD_IDT_lst_3_year_apl_cnt_mean_360d
    ,if(sum(过去三年同期前后15天是否有贷款) = 0,0,sum(inb_loan_apl_cnt_30d_lst_3_year)      /sum(过去三年同期前后15天是否有贷款))  	as inb_loan_THD_IDT_lst_3_year_apl_cnt_mean_30d
    ,if(sum(过去三年同期前后45天是否有贷款) = 0,0,sum(inb_loan_apl_cnt_90d_lst_3_year)      /sum(过去三年同期前后45天是否有贷款))  	as inb_loan_THD_IDT_lst_3_year_apl_cnt_mean_90d
    ,if(sum(过去三年同月是否有贷款)         = 0,0,sum(inb_loan_apl_cnt_30d_lst_3_year_month)/sum(过去三年同月是否有贷款))          	as inb_loan_THD_IDT_lst_3_year_month_apl_cnt_mean_30d
from lab_bigdata_dev.tbl1_inb_loan_industry_data_cst_idv_group_rate_20240305
group by THD_IDT_CD
    ,date_now
;
---###end

---###start_loan_industry_0083
------四级行业
drop table if exists lab_bigdata_dev.tbl5_inb_loan_industry_data_cst_middle_feature_idv_group_rate_20240305;
create table if not exists lab_bigdata_dev.tbl5_inb_loan_industry_data_cst_middle_feature_idv_group_rate_20240305 as
select FOU_IDT_CD
    ,date_now
    ,sum(inb_loan_apl_cnt_360d_lst_year)        as inb_loan_FOU_IDT_lst_year_apl_cnt_360d
    ,sum(inb_loan_apl_cnt_30d_lst_year)         as inb_loan_FOU_IDT_lst_year_apl_cnt_30d
    ,sum(inb_loan_apl_cnt_90d_lst_year)         as inb_loan_FOU_IDT_lst_year_apl_cnt_90d
    ,sum(inb_loan_apl_cnt_30d_lst_year_month)   as inb_loan_FOU_IDT_lst_year_month_apl_cnt_30d
    ,sum(inb_loan_apl_cnt_360d_lst_3_year)      as inb_loan_FOU_IDT_lst_3_year_apl_cnt_360d
    ,sum(inb_loan_apl_cnt_30d_lst_3_year)       as inb_loan_FOU_IDT_lst_3_year_apl_cnt_30d
    ,sum(inb_loan_apl_cnt_90d_lst_3_year)       as inb_loan_FOU_IDT_lst_3_year_apl_cnt_90d
    ,sum(inb_loan_apl_cnt_30d_lst_3_year_month) as inb_loan_FOU_IDT_lst_3_year_month_apl_cnt_30d
    ,if(sum(过去一年是否有贷款)             = 0,0,sum(inb_loan_apl_cnt_360d_lst_year)       /sum(过去一年是否有贷款)) 				as inb_loan_FOU_IDT_lst_year_apl_cnt_mean_360d
    ,if(sum(过去一年同期前后15天是否有贷款) = 0,0,sum(inb_loan_apl_cnt_30d_lst_year)        /sum(过去一年同期前后15天是否有贷款)) 	as inb_loan_FOU_IDT_lst_year_apl_cnt_mean_30d
    ,if(sum(过去一年同期前后45天是否有贷款) = 0,0,sum(inb_loan_apl_cnt_90d_lst_year)        /sum(过去一年同期前后45天是否有贷款)) 	as inb_loan_FOU_IDT_lst_year_apl_cnt_mean_90d
    ,if(sum(过去一年同月是否有贷款)         = 0,0,sum(inb_loan_apl_cnt_30d_lst_year_month)  /sum(过去一年同月是否有贷款)) 			as inb_loan_FOU_IDT_lst_year_month_apl_cnt_mean_30d
    ,if(sum(过去三年是否有贷款)             = 0,0,sum(inb_loan_apl_cnt_360d_lst_3_year)     /sum(过去三年是否有贷款)) 				as inb_loan_FOU_IDT_lst_3_year_apl_cnt_mean_360d
    ,if(sum(过去三年同期前后15天是否有贷款) = 0,0,sum(inb_loan_apl_cnt_30d_lst_3_year)      /sum(过去三年同期前后15天是否有贷款))  	as inb_loan_FOU_IDT_lst_3_year_apl_cnt_mean_30d
    ,if(sum(过去三年同期前后45天是否有贷款) = 0,0,sum(inb_loan_apl_cnt_90d_lst_3_year)      /sum(过去三年同期前后45天是否有贷款))  	as inb_loan_FOU_IDT_lst_3_year_apl_cnt_mean_90d
    ,if(sum(过去三年同月是否有贷款)         = 0,0,sum(inb_loan_apl_cnt_30d_lst_3_year_month)/sum(过去三年同月是否有贷款))         	as inb_loan_FOU_IDT_lst_3_year_month_apl_cnt_mean_30d
from lab_bigdata_dev.tbl1_inb_loan_industry_data_cst_idv_group_rate_20240305
group by FOU_IDT_CD
    ,date_now
;
---###end

---###start_loan_industry_0084
drop table if exists lab_bigdata_dev.tbl6_inb_loan_industry_data_cst_middle_feature_idv_group_rate_20240305;
create table if not exists lab_bigdata_dev.tbl6_inb_loan_industry_data_cst_middle_feature_idv_group_rate_20240305 as
select IDT_CTG
    ,date_now
    ,sum(inb_loan_apl_cnt_360d_lst_year)        as inb_loan_IDT_CTG_lst_year_apl_cnt_360d
    ,sum(inb_loan_apl_cnt_30d_lst_year)         as inb_loan_IDT_CTG_lst_year_apl_cnt_30d
    ,sum(inb_loan_apl_cnt_90d_lst_year)         as inb_loan_IDT_CTG_lst_year_apl_cnt_90d
    ,sum(inb_loan_apl_cnt_30d_lst_year_month)   as inb_loan_IDT_CTG_lst_year_month_apl_cnt_30d
    ,sum(inb_loan_apl_cnt_360d_lst_3_year)      as inb_loan_IDT_CTG_lst_3_year_apl_cnt_360d
    ,sum(inb_loan_apl_cnt_30d_lst_3_year)       as inb_loan_IDT_CTG_lst_3_year_apl_cnt_30d
    ,sum(inb_loan_apl_cnt_90d_lst_3_year)       as inb_loan_IDT_CTG_lst_3_year_apl_cnt_90d
    ,sum(inb_loan_apl_cnt_30d_lst_3_year_month) as inb_loan_IDT_CTG_lst_3_year_month_apl_cnt_30d
    ,if(sum(过去一年是否有贷款) 			= 0,0,sum(inb_loan_apl_cnt_360d_lst_year)       /sum(过去一年是否有贷款))             as inb_loan_IDT_CTG_lst_year_apl_cnt_mean_360d
    ,if(sum(过去一年同期前后15天是否有贷款)	= 0,0,sum(inb_loan_apl_cnt_30d_lst_year)        /sum(过去一年同期前后15天是否有贷款)) as inb_loan_IDT_CTG_lst_year_apl_cnt_mean_30d
    ,if(sum(过去一年同期前后45天是否有贷款)	= 0,0,sum(inb_loan_apl_cnt_90d_lst_year)        /sum(过去一年同期前后45天是否有贷款)) as inb_loan_IDT_CTG_lst_year_apl_cnt_mean_90d
    ,if(sum(过去一年同月是否有贷款)			= 0,0,sum(inb_loan_apl_cnt_30d_lst_year_month)  /sum(过去一年同月是否有贷款))         as inb_loan_IDT_CTG_lst_year_month_apl_cnt_mean_30d
    ,if(sum(过去三年是否有贷款) 			= 0,0,sum(inb_loan_apl_cnt_360d_lst_3_year)     /sum(过去三年是否有贷款))             as inb_loan_IDT_CTG_lst_3_year_apl_cnt_mean_360d
    ,if(sum(过去三年同期前后15天是否有贷款)	= 0,0,sum(inb_loan_apl_cnt_30d_lst_3_year)      /sum(过去三年同期前后15天是否有贷款)) as inb_loan_IDT_CTG_lst_3_year_apl_cnt_mean_30d
    ,if(sum(过去三年同期前后45天是否有贷款)	= 0,0,sum(inb_loan_apl_cnt_90d_lst_3_year)      /sum(过去三年同期前后45天是否有贷款)) as inb_loan_IDT_CTG_lst_3_year_apl_cnt_mean_90d
    ,if(sum(过去三年同月是否有贷款) 		= 0,0,sum(inb_loan_apl_cnt_30d_lst_3_year_month)/sum(过去三年同月是否有贷款))         as inb_loan_IDT_CTG_lst_3_year_month_apl_cnt_mean_30d
from lab_bigdata_dev.tbl1_inb_loan_industry_data_cst_idv_group_rate_20240305
group by IDT_CTG
    ,date_now
;
---###end


---###start_loan_industry_0085
-----计算贷款日均
drop table if exists lab_bigdata_dev.tbl7_inb_loan_industry_data_cst_idv_group_rate_20240305;
create table if not exists lab_bigdata_dev.tbl7_inb_loan_industry_data_cst_idv_group_rate_20240305 as
SELECT  t1.cst_id
        ,t1.IDT_CTG
        ,t1.FRS_IDT_CD
        ,t1.SCD_IDT_CD
        ,t1.THD_IDT_CD
        ,t1.FOU_IDT_CD
        ,t1.date_now

        ,sum(CASE WHEN dt = concat(substr(dateadd(to_date(date_now, 'yyyymmdd'), - 1, 'yyyy'), 1, 4), '1231') 	THEN year_acm_prcp_bal_acml 	/ 360 END) as inb_loan_bal_month_mean_360d_lst_year
        ,sum(CASE WHEN dt = substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 350, 'dd'), '-', ''), 1, 8) THEN last_30_days_prcp_bal_acml / 30  END) as inb_loan_bal_month_mean_30d_lst_year
        ,sum(CASE WHEN dt = substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 320, 'dd'), '-', ''), 1, 8) THEN last_90_days_prcp_bal_acml / 90  END) as inb_loan_bal_month_mean_90d_lst_year
        ,sum(CASE WHEN dt = REPLACE(last_day(dateadd(to_date(date_now, 'yyyymmdd'), - 1, 'yyyy')), '-', '') 	THEN mon_acm_prcp_bal_acml 		/ 30  END) as inb_loan_bal_month_mean_30d_lst_year_month
        ,sum(CASE WHEN dt = concat(substr(dateadd(to_date(date_now, 'yyyymmdd'), - 1, 'yyyy'), 1, 4), '1231') --去年年末
          OR dt = concat(substr(dateadd(to_date(date_now, 'yyyymmdd'), - 2, 'yyyy'), 1, 4), '1231') --前年年末
          OR dt = concat(substr(dateadd(to_date(date_now, 'yyyymmdd'), - 3, 'yyyy'), 1, 4), '1231') --大前年年末
      THEN year_acm_prcp_bal_acml / 1095 END) inb_loan_bal_month_mean_360d_lst_3_year
        ,sum(CASE WHEN dt = substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 350, 'dd'), '-', ''), 1, 8)
                OR dt = substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 715, 'dd'), '-', ''), 1, 8) --前年同期后十五天
        OR dt = substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 1080, 'dd'), '-', ''), 1, 8) --大前年同期后15天
		THEN last_30_days_prcp_bal_acml / 90 END) inb_loan_bal_month_mean_30d_lst_3_year
        ,sum(CASE WHEN dt = substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 320, 'dd'), '-', ''), 1, 8) --去年同期后45天
          OR dt = substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 685, 'dd'), '-', ''), 1, 8) --前年同期后45天
          OR dt = substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 1050, 'dd'), '-', ''), 1, 8) --大前年同期后45天
         THEN last_90_days_prcp_bal_acml / 270 END) inb_loan_bal_month_mean_90d_lst_3_year
        ,sum(CASE WHEN dt = REPLACE(last_day(dateadd(to_date(date_now, 'yyyymmdd'), - 1, 'yyyy')), '-', '') --去年同月月末
          OR dt = REPLACE(last_day(dateadd(to_date(date_now, 'yyyymmdd'), - 2, 'yyyy')), '-', '') --前年同月月末
          OR dt = REPLACE(last_day(dateadd(to_date(date_now, 'yyyymmdd'), - 3, 'yyyy')), '-', '') --大前年同月月末
        THEN mon_acm_prcp_bal_acml / 90 END) inb_loan_bal_month_mean_30d_lst_3_year_month
FROM    lab_bigdata_dev.industry_data_idv_group_rate_20240305 t1
LEFT JOIN    (
                 SELECT  dt
                         ,bus_ctr_id
                         ,sum(last_30_days_prcp_bal_acml) as last_30_days_prcp_bal_acml
                         ,sum(last_90_days_prcp_bal_acml) as last_90_days_prcp_bal_acml
                         ,sum(year_acm_prcp_bal_acml	) as year_acm_prcp_bal_acml
                         ,sum(mon_acm_prcp_bal_acml		) as mon_acm_prcp_bal_acml
                 FROM    edw.dws_bus_loan_dbil_acm_inf_dd
                 WHERE   dt IN (
            select distinct concat(substr(dateadd(to_date(date_now, 'yyyymmdd'), - 1, 'yyyy'), 1, 4), '1231') from lab_bigdata_dev.idv_group_rate_sample
            union
            select distinct substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 350, 'dd'), '-', ''), 1, 8) from lab_bigdata_dev.idv_group_rate_sample
            union
            select distinct substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 320, 'dd'), '-', ''), 1, 8)  from lab_bigdata_dev.idv_group_rate_sample
            union
            select distinct REPLACE(last_day(dateadd(to_date(date_now, 'yyyymmdd'), - 1, 'yyyy')), '-', '') from lab_bigdata_dev.idv_group_rate_sample
            union
            select distinct concat(substr(dateadd(to_date(date_now, 'yyyymmdd'), - 1, 'yyyy'), 1, 4), '1231') from lab_bigdata_dev.idv_group_rate_sample
            union
            select distinct concat(substr(dateadd(to_date(date_now, 'yyyymmdd'), - 2, 'yyyy'), 1, 4), '1231')  from lab_bigdata_dev.idv_group_rate_sample
            union
            select distinct concat(substr(dateadd(to_date(date_now, 'yyyymmdd'), - 3, 'yyyy'), 1, 4), '1231') from lab_bigdata_dev.idv_group_rate_sample
            union
            select distinct substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 350, 'dd'), '-', ''), 1, 8) from lab_bigdata_dev.idv_group_rate_sample
            union
            select distinct substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 715, 'dd'), '-', ''), 1, 8) from lab_bigdata_dev.idv_group_rate_sample
            union
            select distinct substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 1080, 'dd'), '-', ''), 1, 8)  from lab_bigdata_dev.idv_group_rate_sample
            union
            select distinct substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 320, 'dd'), '-', ''), 1, 8) from lab_bigdata_dev.idv_group_rate_sample
            union
            select distinct substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 685, 'dd'), '-', ''), 1, 8)  from lab_bigdata_dev.idv_group_rate_sample
            union
            select distinct substr(REPLACE(dateadd(to_date(date_now, 'yyyymmdd'), - 1050, 'dd'), '-', ''), 1, 8)  from lab_bigdata_dev.idv_group_rate_sample
            union
            select distinct REPLACE(last_day(dateadd(to_date(date_now, 'yyyymmdd'), - 1, 'yyyy')), '-', '')  from lab_bigdata_dev.idv_group_rate_sample
            union
            select distinct REPLACE(last_day(dateadd(to_date(date_now, 'yyyymmdd'), - 2, 'yyyy')), '-', '') from lab_bigdata_dev.idv_group_rate_sample
            union
            select distinct REPLACE(last_day(dateadd(to_date(date_now, 'yyyymmdd'), - 3, 'yyyy')), '-', '')  from lab_bigdata_dev.idv_group_rate_sample)
            group by dt
                    ,bus_ctr_id
) t2
ON      t1.busi_ctr_id = t2.bus_ctr_id
GROUP BY t1.cst_id , t1.IDT_CTG , t1.FRS_IDT_CD , t1.SCD_IDT_CD , t1.THD_IDT_CD , t1.FOU_IDT_CD , t1.date_now
;
---###end

---###start_loan_industry_0086
----一级行业：平均贷款合同数、平均贷款余额
drop table if exists lab_bigdata_dev.tbl8_inb_loan_industry_data_middle_feature_idv_group_rate_20240305;
create table if not exists lab_bigdata_dev.tbl8_inb_loan_industry_data_middle_feature_idv_group_rate_20240305 as
select   --IDT_CTG
        FRS_IDT_CD
        --,SCD_IDT_CD
        --,THD_IDT_CD
        --,FOU_IDT_CD
        ,date_now
        ,sum(inb_loan_bal_month_mean_360d_lst_year)        as inb_loan_FRS_IDT_lst_year_bal_month_mean_sum_360d
        ,sum(inb_loan_bal_month_mean_30d_lst_year)         as inb_loan_FRS_IDT_lst_year_bal_month_mean_sum_30d
        ,sum(inb_loan_bal_month_mean_90d_lst_year)         as inb_loan_FRS_IDT_lst_year_bal_month_mean_sum_90d
        ,sum(inb_loan_bal_month_mean_30d_lst_year_month)   as inb_loan_FRS_IDT_lst_year_month_bal_month_mean_sum_30d
        ,sum(inb_loan_bal_month_mean_360d_lst_3_year)      as inb_loan_FRS_IDT_lst_3_year_bal_month_mean_sum_360d
        ,sum(inb_loan_bal_month_mean_30d_lst_3_year)       as inb_loan_FRS_IDT_lst_3_year_bal_month_mean_sum_30d
        ,sum(inb_loan_bal_month_mean_90d_lst_3_year)       as inb_loan_FRS_IDT_lst_3_year_bal_month_mean_sum_90d
        ,sum(inb_loan_bal_month_mean_30d_lst_3_year_month) as inb_loan_FRS_IDT_lst_3_year_month_bal_month_mean_sum_30d
		---行业平均贷款余额：总贷款余额/所属行业条数
        ,case when sum(case when inb_loan_bal_month_mean_360d_lst_year       > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_360d_lst_year)       / sum(case when inb_loan_bal_month_mean_360d_lst_year       > 0 then 1 else 0 end) end  as inb_loan_FRS_IDT_lst_year_bal_month_mean_mean_360d
        ,case when sum(case when inb_loan_bal_month_mean_30d_lst_year        > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_30d_lst_year)        / sum(case when inb_loan_bal_month_mean_30d_lst_year        > 0 then 1 else 0 end) end  as inb_loan_FRS_IDT_lst_year_bal_month_mean_mean_30d
        ,case when sum(case when inb_loan_bal_month_mean_90d_lst_year        > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_90d_lst_year)        / sum(case when inb_loan_bal_month_mean_90d_lst_year        > 0 then 1 else 0 end) end  as inb_loan_FRS_IDT_lst_year_bal_month_mean_mean_90d
        ,case when sum(case when inb_loan_bal_month_mean_30d_lst_year_month  > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_30d_lst_year_month)  / sum(case when inb_loan_bal_month_mean_30d_lst_year_month  > 0 then 1 else 0 end) end  as inb_loan_FRS_IDT_lst_year_month_bal_month_mean_mean_30d
        ,case when sum(case when inb_loan_bal_month_mean_360d_lst_3_year     > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_360d_lst_3_year)     / sum(case when inb_loan_bal_month_mean_360d_lst_3_year     > 0 then 1 else 0 end) end  as inb_loan_FRS_IDT_lst_3_year_bal_month_mean_mean_360d
        ,case when sum(case when inb_loan_bal_month_mean_30d_lst_3_year      > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_30d_lst_3_year)      / sum(case when inb_loan_bal_month_mean_30d_lst_3_year      > 0 then 1 else 0 end) end  as inb_loan_FRS_IDT_lst_3_year_bal_month_mean_mean_30d
        ,case when sum(case when inb_loan_bal_month_mean_90d_lst_3_year      > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_90d_lst_3_year)      / sum(case when inb_loan_bal_month_mean_90d_lst_3_year      > 0 then 1 else 0 end) end  as inb_loan_FRS_IDT_lst_3_year_bal_month_mean_mean_90d
        ,case when sum(case when inb_loan_bal_month_mean_30d_lst_3_year_month> 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_30d_lst_3_year_month)/ sum(case when inb_loan_bal_month_mean_30d_lst_3_year_month> 0 then 1 else 0 end) end  as inb_loan_FRS_IDT_lst_3_year_month_bal_month_mean_mean_30d
from  lab_bigdata_dev.tbl7_inb_loan_industry_data_cst_idv_group_rate_20240305
group by  FRS_IDT_CD
        ,date_now
;
---###end


---###start_loan_industry_0087
----二级行业：平均贷款合同数、平均贷款余额
drop table if exists lab_bigdata_dev.tbl9_inb_loan_industry_data_middle_feature_idv_group_rate_20240305;
create table if not exists lab_bigdata_dev.tbl9_inb_loan_industry_data_middle_feature_idv_group_rate_20240305 as
select  SCD_IDT_CD
        --,THD_IDT_CD
        --,FOU_IDT_CD
        ,date_now
        ,sum(inb_loan_bal_month_mean_360d_lst_year) 		as inb_loan_SCD_IDT_lst_year_bal_month_mean_sum_360d
        ,sum(inb_loan_bal_month_mean_30d_lst_year) 			as inb_loan_SCD_IDT_lst_year_bal_month_mean_sum_30d
        ,sum(inb_loan_bal_month_mean_90d_lst_year) 			as inb_loan_SCD_IDT_lst_year_bal_month_mean_sum_90d
        ,sum(inb_loan_bal_month_mean_30d_lst_year_month) 	as inb_loan_SCD_IDT_lst_year_month_bal_month_mean_sum_30d
        ,sum(inb_loan_bal_month_mean_360d_lst_3_year) 		as inb_loan_SCD_IDT_lst_3_year_bal_month_mean_sum_360d
        ,sum(inb_loan_bal_month_mean_30d_lst_3_year) 		as inb_loan_SCD_IDT_lst_3_year_bal_month_mean_sum_30d
        ,sum(inb_loan_bal_month_mean_90d_lst_3_year) 		as inb_loan_SCD_IDT_lst_3_year_bal_month_mean_sum_90d
        ,sum(inb_loan_bal_month_mean_30d_lst_3_year_month) 	as inb_loan_SCD_IDT_lst_3_year_month_bal_month_mean_sum_30d
        ,case when sum(case when inb_loan_bal_month_mean_360d_lst_year       > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_360d_lst_year)       / sum(case when inb_loan_bal_month_mean_360d_lst_year       > 0 then 1 else 0 end) end as inb_loan_SCD_IDT_lst_year_bal_month_mean_mean_360d
        ,case when sum(case when inb_loan_bal_month_mean_30d_lst_year        > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_30d_lst_year)        / sum(case when inb_loan_bal_month_mean_30d_lst_year        > 0 then 1 else 0 end) end as inb_loan_SCD_IDT_lst_year_bal_month_mean_mean_30d
        ,case when sum(case when inb_loan_bal_month_mean_90d_lst_year        > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_90d_lst_year)        / sum(case when inb_loan_bal_month_mean_90d_lst_year        > 0 then 1 else 0 end) end as inb_loan_SCD_IDT_lst_year_bal_month_mean_mean_90d
        ,case when sum(case when inb_loan_bal_month_mean_30d_lst_year_month  > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_30d_lst_year_month)  / sum(case when inb_loan_bal_month_mean_30d_lst_year_month  > 0 then 1 else 0 end) end as inb_loan_SCD_IDT_lst_year_month_bal_month_mean_mean_30d
        ,case when sum(case when inb_loan_bal_month_mean_360d_lst_3_year     > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_360d_lst_3_year)     / sum(case when inb_loan_bal_month_mean_360d_lst_3_year     > 0 then 1 else 0 end) end as inb_loan_SCD_IDT_lst_3_year_bal_month_mean_mean_360d
        ,case when sum(case when inb_loan_bal_month_mean_30d_lst_3_year      > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_30d_lst_3_year)      / sum(case when inb_loan_bal_month_mean_30d_lst_3_year      > 0 then 1 else 0 end) end as inb_loan_SCD_IDT_lst_3_year_bal_month_mean_mean_30d
        ,case when sum(case when inb_loan_bal_month_mean_90d_lst_3_year      > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_90d_lst_3_year)      / sum(case when inb_loan_bal_month_mean_90d_lst_3_year      > 0 then 1 else 0 end) end as inb_loan_SCD_IDT_lst_3_year_bal_month_mean_mean_90d
        ,case when sum(case when inb_loan_bal_month_mean_30d_lst_3_year_month> 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_30d_lst_3_year_month)/ sum(case when inb_loan_bal_month_mean_30d_lst_3_year_month> 0 then 1 else 0 end) end as inb_loan_SCD_IDT_lst_3_year_month_bal_month_mean_mean_30d
from  lab_bigdata_dev.tbl7_inb_loan_industry_data_cst_idv_group_rate_20240305
group by   SCD_IDT_CD
        ,date_now
;
---###end

---###start_loan_industry_0088
----三级行业：平均贷款合同数、平均贷款余额
drop table if exists lab_bigdata_dev.tbl10_inb_loan_industry_data_middle_feature_idv_group_rate_20240305;
create table if not exists lab_bigdata_dev.tbl10_inb_loan_industry_data_middle_feature_idv_group_rate_20240305 as
select   THD_IDT_CD
        --,FOU_IDT_CD
        ,date_now
        ,sum(inb_loan_bal_month_mean_360d_lst_year)       	as inb_loan_THD_IDT_lst_year_bal_month_mean_sum_360d
        ,sum(inb_loan_bal_month_mean_30d_lst_year)        	as inb_loan_THD_IDT_lst_year_bal_month_mean_sum_30d
        ,sum(inb_loan_bal_month_mean_90d_lst_year)        	as inb_loan_THD_IDT_lst_year_bal_month_mean_sum_90d
        ,sum(inb_loan_bal_month_mean_30d_lst_year_month) 	as inb_loan_THD_IDT_lst_year_month_bal_month_mean_sum_30d
        ,sum(inb_loan_bal_month_mean_360d_lst_3_year)    	as inb_loan_THD_IDT_lst_3_year_bal_month_mean_sum_360d
        ,sum(inb_loan_bal_month_mean_30d_lst_3_year) 		as inb_loan_THD_IDT_lst_3_year_bal_month_mean_sum_30d
        ,sum(inb_loan_bal_month_mean_90d_lst_3_year) 		as inb_loan_THD_IDT_lst_3_year_bal_month_mean_sum_90d
        ,sum(inb_loan_bal_month_mean_30d_lst_3_year_month) 	as inb_loan_THD_IDT_lst_3_year_month_bal_month_mean_sum_30d
        ,case when sum(case when inb_loan_bal_month_mean_360d_lst_year       > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_360d_lst_year)       / sum(case when inb_loan_bal_month_mean_360d_lst_year       > 0 then 1 else 0 end) end as inb_loan_THD_IDT_lst_year_bal_month_mean_mean_360d
        ,case when sum(case when inb_loan_bal_month_mean_30d_lst_year        > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_30d_lst_year)        / sum(case when inb_loan_bal_month_mean_30d_lst_year        > 0 then 1 else 0 end) end as inb_loan_THD_IDT_lst_year_bal_month_mean_mean_30d
        ,case when sum(case when inb_loan_bal_month_mean_90d_lst_year        > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_90d_lst_year)        / sum(case when inb_loan_bal_month_mean_90d_lst_year        > 0	then 1 else 0 end) end as inb_loan_THD_IDT_lst_year_bal_month_mean_mean_90d
        ,case when sum(case when inb_loan_bal_month_mean_30d_lst_year_month  > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_30d_lst_year_month)  / sum(case when inb_loan_bal_month_mean_30d_lst_year_month  > 0 then 1 else 0 end) end as inb_loan_THD_IDT_lst_year_month_bal_month_mean_mean_30d
        ,case when sum(case when inb_loan_bal_month_mean_360d_lst_3_year     > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_360d_lst_3_year)     / sum(case when inb_loan_bal_month_mean_360d_lst_3_year     > 0 then 1 else 0 end) end as inb_loan_THD_IDT_lst_3_year_bal_month_mean_mean_360d
        ,case when sum(case when inb_loan_bal_month_mean_30d_lst_3_year      > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_30d_lst_3_year)      / sum(case when inb_loan_bal_month_mean_30d_lst_3_year      > 0 then 1 else 0 end) end as inb_loan_THD_IDT_lst_3_year_bal_month_mean_mean_30d
        ,case when sum(case when inb_loan_bal_month_mean_90d_lst_3_year      > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_90d_lst_3_year)      / sum(case when inb_loan_bal_month_mean_90d_lst_3_year      > 0 then 1 else 0 end) end as inb_loan_THD_IDT_lst_3_year_bal_month_mean_mean_90d
        ,case when sum(case when inb_loan_bal_month_mean_30d_lst_3_year_month> 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_30d_lst_3_year_month)/ sum(case when inb_loan_bal_month_mean_30d_lst_3_year_month> 0 then 1 else 0 end) end as inb_loan_THD_IDT_lst_3_year_month_bal_month_mean_mean_30d
from  lab_bigdata_dev.tbl7_inb_loan_industry_data_cst_idv_group_rate_20240305
group by   THD_IDT_CD
        ,date_now
;
---###end


---###start_loan_industry_0089
----四级行业：平均贷款合同数、平均贷款余额
drop table if exists lab_bigdata_dev.tbl11_inb_loan_industry_data_middle_feature_idv_group_rate_20240305;
create table if not exists lab_bigdata_dev.tbl11_inb_loan_industry_data_middle_feature_idv_group_rate_20240305 as
select   FOU_IDT_CD
        ,date_now
        ,sum(inb_loan_bal_month_mean_360d_lst_year) 		as inb_loan_FOU_IDT_lst_year_bal_month_mean_sum_360d
        ,sum(inb_loan_bal_month_mean_30d_lst_year) 			as inb_loan_FOU_IDT_lst_year_bal_month_mean_sum_30d
        ,sum(inb_loan_bal_month_mean_90d_lst_year) 			as inb_loan_FOU_IDT_lst_year_bal_month_mean_sum_90d
        ,sum(inb_loan_bal_month_mean_30d_lst_year_month) 	as inb_loan_FOU_IDT_lst_year_month_bal_month_sum_mean_30d
        ,sum(inb_loan_bal_month_mean_360d_lst_3_year) 		as inb_loan_FOU_IDT_lst_3_year_bal_month_mean_sum_360d
        ,sum(inb_loan_bal_month_mean_30d_lst_3_year)  		as inb_loan_FOU_IDT_lst_3_year_bal_month_mean_sum_30d
        ,sum(inb_loan_bal_month_mean_90d_lst_3_year) 		as inb_loan_FOU_IDT_lst_3_year_bal_month_mean_sum_90d
        ,sum(inb_loan_bal_month_mean_30d_lst_3_year_month) 	as inb_loan_FOU_IDT_lst_3_year_month_bal_month_mean_sum_30d
        ,case when  sum(case when inb_loan_bal_month_mean_360d_lst_year       > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_360d_lst_year) 		/ sum(case when inb_loan_bal_month_mean_360d_lst_year       > 0 then 1 else 0 end) end as inb_loan_FOU_IDT_lst_year_bal_month_mean_mean_360d
        ,case when  sum(case when inb_loan_bal_month_mean_30d_lst_year        > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_30d_lst_year)  		/ sum(case when inb_loan_bal_month_mean_30d_lst_year        > 0 then 1 else 0 end) end as inb_loan_FOU_IDT_lst_year_bal_month_mean_mean_30d
        ,case when  sum(case when inb_loan_bal_month_mean_90d_lst_year        > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_90d_lst_year) 		/ sum(case when inb_loan_bal_month_mean_90d_lst_year        > 0 then 1 else 0 end) end as inb_loan_FOU_IDT_lst_year_bal_month_mean_mean_90d
        ,case when  sum(case when inb_loan_bal_month_mean_30d_lst_year_month  > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_30d_lst_year_month)  / sum(case when inb_loan_bal_month_mean_30d_lst_year_month  > 0 then 1 else 0 end) end as inb_loan_FOU_IDT_lst_year_month_bal_month_mean_mean_30d
        ,case when  sum(case when inb_loan_bal_month_mean_360d_lst_3_year     > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_360d_lst_3_year)  	/ sum(case when inb_loan_bal_month_mean_360d_lst_3_year     > 0 then 1 else 0 end) end as inb_loan_FOU_IDT_lst_3_year_bal_month_mean_mean_360d
        ,case when  sum(case when inb_loan_bal_month_mean_30d_lst_3_year      > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_30d_lst_3_year)  	/ sum(case when inb_loan_bal_month_mean_30d_lst_3_year      > 0 then 1 else 0 end) end as inb_loan_FOU_IDT_lst_3_year_bal_month_mean_mean_30d
        ,case when  sum(case when inb_loan_bal_month_mean_90d_lst_3_year      > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_90d_lst_3_year)  	/ sum(case when inb_loan_bal_month_mean_90d_lst_3_year      > 0 then 1 else 0 end) end as inb_loan_FOU_IDT_lst_3_year_bal_month_mean_mean_90d
        ,case when  sum(case when inb_loan_bal_month_mean_30d_lst_3_year_month> 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_30d_lst_3_year_month)/ sum(case when inb_loan_bal_month_mean_30d_lst_3_year_month> 0 then 1 else 0 end) end as inb_loan_FOU_IDT_lst_3_year_month_bal_month_mean_mean_30d
from  lab_bigdata_dev.tbl7_inb_loan_industry_data_cst_idv_group_rate_20240305
group by FOU_IDT_CD
        ,date_now
;
---###end

---###start_loan_industry_0090
----自定义行业：平均贷款合同数、平均贷款余额
drop table if exists lab_bigdata_dev.tbl12_inb_loan_industry_data_middle_feature_idv_group_rate_20240305;
create table if not exists lab_bigdata_dev.tbl12_inb_loan_industry_data_middle_feature_idv_group_rate_20240305 as
select   IDT_CTG
        ,date_now
        ,sum(inb_loan_bal_month_mean_360d_lst_year)        as inb_loan_IDT_CTG_lst_year_bal_month_mean_sum_360d
        ,sum(inb_loan_bal_month_mean_30d_lst_year)         as inb_loan_IDT_CTG_lst_year_bal_month_mean_sum_30d
        ,sum(inb_loan_bal_month_mean_90d_lst_year)         as inb_loan_IDT_CTG_lst_year_bal_month_mean_sum_90d
        ,sum(inb_loan_bal_month_mean_30d_lst_year_month)   as inb_loan_IDT_CTG_lst_year_month_bal_month_mean_sum_30d
        ,sum(inb_loan_bal_month_mean_360d_lst_3_year)      as inb_loan_IDT_CTG_lst_3_year_bal_month_mean_sum_360d
        ,sum(inb_loan_bal_month_mean_30d_lst_3_year)       as inb_loan_IDT_CTG_lst_3_year_bal_month_mean_sum_30d
        ,sum(inb_loan_bal_month_mean_90d_lst_3_year)       as inb_loan_IDT_CTG_lst_3_year_bal_month_mean_sum_90d
        ,sum(inb_loan_bal_month_mean_30d_lst_3_year_month) as inb_loan_IDT_CTG_lst_3_year_month_bal_month_mean_sum_30d
        ,case when  sum(case when inb_loan_bal_month_mean_360d_lst_year       > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_360d_lst_year)       / sum(case when inb_loan_bal_month_mean_360d_lst_year       > 0 then 1 else 0 end) end as inb_loan_IDT_CTG_lst_year_bal_month_mean_mean_360d
        ,case when  sum(case when inb_loan_bal_month_mean_30d_lst_year        > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_30d_lst_year )       / sum(case when inb_loan_bal_month_mean_30d_lst_year        > 0 then 1 else 0 end) end as inb_loan_IDT_CTG_lst_year_bal_month_mean_mean_30d
        ,case when  sum(case when inb_loan_bal_month_mean_90d_lst_year        > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_90d_lst_year )       / sum(case when inb_loan_bal_month_mean_90d_lst_year        > 0 then 1 else 0 end) end as inb_loan_IDT_CTG_lst_year_bal_month_mean_mean_90d
        ,case when  sum(case when inb_loan_bal_month_mean_30d_lst_year_month  > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_30d_lst_year_month)  / sum(case when inb_loan_bal_month_mean_30d_lst_year_month  > 0 then 1 else 0 end) end as inb_loan_IDT_CTG_lst_year_month_bal_month_mean_mean_30d
        ,case when  sum(case when inb_loan_bal_month_mean_360d_lst_3_year     > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_360d_lst_3_year)     / sum(case when inb_loan_bal_month_mean_360d_lst_3_year     > 0 then 1 else 0 end) end as inb_loan_IDT_CTG_lst_3_year_bal_month_mean_mean_360d
        ,case when  sum(case when inb_loan_bal_month_mean_30d_lst_3_year      > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_30d_lst_3_year)      / sum(case when inb_loan_bal_month_mean_30d_lst_3_year      > 0 then 1 else 0 end) end as inb_loan_IDT_CTG_lst_3_year_bal_month_mean_mean_30d
        ,case when  sum(case when inb_loan_bal_month_mean_90d_lst_3_year      > 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_90d_lst_3_year)      / sum(case when inb_loan_bal_month_mean_90d_lst_3_year      > 0 then 1 else 0 end) end as inb_loan_IDT_CTG_lst_3_year_bal_month_mean_mean_90d
        ,case when  sum(case when inb_loan_bal_month_mean_30d_lst_3_year_month> 0 then 1 else 0 end)= 0 then 0 else sum(inb_loan_bal_month_mean_30d_lst_3_year_month)/ sum(case when inb_loan_bal_month_mean_30d_lst_3_year_month> 0 then 1 else 0 end) end as inb_loan_IDT_CTG_lst_3_year_month_bal_month_mean_mean_30d
from  lab_bigdata_dev.tbl7_inb_loan_industry_data_cst_idv_group_rate_20240305
group by IDT_CTG
        ,date_now
;
---###end


---###start_loan_industry_0091
----行内贷款行业指标合并
DROP TABLE IF EXISTS lab_bigdata_dev.tbl1_inb_loan_industry_feature_idv_group_rate_20240305;
CREATE TABLE lab_bigdata_dev.tbl1_inb_loan_industry_feature_idv_group_rate_20240305 as
select t.cst_id
,t.date_now
,t0.IDT_CTG
,t0.FRS_IDT_CD --一级行业代码
,t0.SCD_IDT_CD --二级行业代码
,t0.THD_IDT_CD --三级行业代码
,t0.FOU_IDT_CD --四级行业代码

,a1.inb_loan_FRS_IDT_lst_year_apl_cnt_mean_360d
,a1.inb_loan_FRS_IDT_lst_year_apl_cnt_mean_30d
,a1.inb_loan_FRS_IDT_lst_year_apl_cnt_mean_90d
,a1.inb_loan_FRS_IDT_lst_year_month_apl_cnt_mean_30d

,a1.inb_loan_FRS_IDT_lst_3_year_apl_cnt_mean_360d
,a1.inb_loan_FRS_IDT_lst_3_year_apl_cnt_mean_30d
,a1.inb_loan_FRS_IDT_lst_3_year_apl_cnt_mean_90d
,a1.inb_loan_FRS_IDT_lst_3_year_month_apl_cnt_mean_30d

,if(a1.inb_loan_FRS_IDT_lst_year_apl_cnt_mean_360d   = 0,-999,a1.inb_loan_FRS_IDT_lst_year_apl_cnt_mean_30d         / a1.inb_loan_FRS_IDT_lst_year_apl_cnt_mean_360d  ) as inb_loan_FRS_IDT_lst_year_apl_cnt_mean_30d_ratio
,if(a1.inb_loan_FRS_IDT_lst_year_apl_cnt_mean_360d   = 0,-999,a1.inb_loan_FRS_IDT_lst_year_apl_cnt_mean_90d         / a1.inb_loan_FRS_IDT_lst_year_apl_cnt_mean_360d  ) as inb_loan_FRS_IDT_lst_year_apl_cnt_mean_90d_ratio
,if(a1.inb_loan_FRS_IDT_lst_year_apl_cnt_mean_360d   = 0,-999,a1.inb_loan_FRS_IDT_lst_year_month_apl_cnt_mean_30d   / a1.inb_loan_FRS_IDT_lst_year_apl_cnt_mean_360d  ) as inb_loan_FRS_IDT_lst_year_month_apl_cnt_mean_30d_ratio
,if(a1.inb_loan_FRS_IDT_lst_3_year_apl_cnt_mean_360d = 0,-999,a1.inb_loan_FRS_IDT_lst_3_year_apl_cnt_mean_30d       / a1.inb_loan_FRS_IDT_lst_3_year_apl_cnt_mean_360d) as inb_loan_FRS_IDT_lst_3_year_apl_cnt_mean_30d_ratio
,if(a1.inb_loan_FRS_IDT_lst_3_year_apl_cnt_mean_360d = 0,-999,a1.inb_loan_FRS_IDT_lst_3_year_apl_cnt_mean_90d       / a1.inb_loan_FRS_IDT_lst_3_year_apl_cnt_mean_360d) as inb_loan_FRS_IDT_lst_3_year_apl_cnt_mean_90d_ratio
,if(a1.inb_loan_FRS_IDT_lst_3_year_apl_cnt_mean_360d = 0,-999,a1.inb_loan_FRS_IDT_lst_3_year_month_apl_cnt_mean_30d / a1.inb_loan_FRS_IDT_lst_3_year_apl_cnt_mean_360d) as inb_loan_FRS_IDT_lst_3_year_month_apl_cnt_mean_30d_ratio

,a2.inb_loan_SCD_IDT_lst_year_apl_cnt_mean_360d
,a2.inb_loan_SCD_IDT_lst_year_apl_cnt_mean_30d
,a2.inb_loan_SCD_IDT_lst_year_apl_cnt_mean_90d
,a2.inb_loan_SCD_IDT_lst_year_month_apl_cnt_mean_30d

,a2.inb_loan_SCD_IDT_lst_3_year_apl_cnt_mean_360d
,a2.inb_loan_SCD_IDT_lst_3_year_apl_cnt_mean_30d
,a2.inb_loan_SCD_IDT_lst_3_year_apl_cnt_mean_90d
,a2.inb_loan_SCD_IDT_lst_3_year_month_apl_cnt_mean_30d

,if(a2.inb_loan_SCD_IDT_lst_year_apl_cnt_mean_360d   = 0,-999,a2.inb_loan_SCD_IDT_lst_year_apl_cnt_mean_30d         / a2.inb_loan_SCD_IDT_lst_year_apl_cnt_mean_360d  ) as inb_loan_SCD_IDT_lst_year_apl_cnt_mean_30d_ratio
,if(a2.inb_loan_SCD_IDT_lst_year_apl_cnt_mean_360d   = 0,-999,a2.inb_loan_SCD_IDT_lst_year_apl_cnt_mean_90d         / a2.inb_loan_SCD_IDT_lst_year_apl_cnt_mean_360d  ) as inb_loan_SCD_IDT_lst_year_apl_cnt_mean_90d_ratio
,if(a2.inb_loan_SCD_IDT_lst_year_apl_cnt_mean_360d   = 0,-999,a2.inb_loan_SCD_IDT_lst_year_month_apl_cnt_mean_30d   / a2.inb_loan_SCD_IDT_lst_year_apl_cnt_mean_360d  ) as inb_loan_SCD_IDT_lst_year_month_apl_cnt_mean_30d_ratio
,if(a2.inb_loan_SCD_IDT_lst_3_year_apl_cnt_mean_360d = 0,-999,a2.inb_loan_SCD_IDT_lst_3_year_apl_cnt_mean_30d       / a2.inb_loan_SCD_IDT_lst_3_year_apl_cnt_mean_360d) as inb_loan_SCD_IDT_lst_3_year_apl_cnt_mean_30d_ratio
,if(a2.inb_loan_SCD_IDT_lst_3_year_apl_cnt_mean_360d = 0,-999,a2.inb_loan_SCD_IDT_lst_3_year_apl_cnt_mean_90d       / a2.inb_loan_SCD_IDT_lst_3_year_apl_cnt_mean_360d) as inb_loan_SCD_IDT_lst_3_year_apl_cnt_mean_90d_ratio
,if(a2.inb_loan_SCD_IDT_lst_3_year_apl_cnt_mean_360d = 0,-999,a2.inb_loan_SCD_IDT_lst_3_year_month_apl_cnt_mean_30d / a2.inb_loan_SCD_IDT_lst_3_year_apl_cnt_mean_360d) as inb_loan_SCD_IDT_lst_3_year_month_apl_cnt_mean_30d_ratio

,a3.inb_loan_THD_IDT_lst_year_apl_cnt_mean_360d
,a3.inb_loan_THD_IDT_lst_year_apl_cnt_mean_30d
,a3.inb_loan_THD_IDT_lst_year_apl_cnt_mean_90d
,a3.inb_loan_THD_IDT_lst_year_month_apl_cnt_mean_30d
,a3.inb_loan_THD_IDT_lst_3_year_apl_cnt_mean_360d
,a3.inb_loan_THD_IDT_lst_3_year_apl_cnt_mean_30d
,a3.inb_loan_THD_IDT_lst_3_year_apl_cnt_mean_90d
,a3.inb_loan_THD_IDT_lst_3_year_month_apl_cnt_mean_30d
,if(a3.inb_loan_THD_IDT_lst_year_apl_cnt_mean_360d   = 0,-999,a3.inb_loan_THD_IDT_lst_year_apl_cnt_mean_30d         / a3.inb_loan_THD_IDT_lst_year_apl_cnt_mean_360d  ) as inb_loan_THD_IDT_lst_year_apl_cnt_mean_30d_ratio
,if(a3.inb_loan_THD_IDT_lst_year_apl_cnt_mean_360d   = 0,-999,a3.inb_loan_THD_IDT_lst_year_apl_cnt_mean_90d         / a3.inb_loan_THD_IDT_lst_year_apl_cnt_mean_360d  ) as inb_loan_THD_IDT_lst_year_apl_cnt_mean_90d_ratio
,if(a3.inb_loan_THD_IDT_lst_year_apl_cnt_mean_360d   = 0,-999,a3.inb_loan_THD_IDT_lst_year_month_apl_cnt_mean_30d   / a3.inb_loan_THD_IDT_lst_year_apl_cnt_mean_360d  ) as inb_loan_THD_IDT_lst_year_month_apl_cnt_mean_30d_ratio
,if(a3.inb_loan_THD_IDT_lst_3_year_apl_cnt_mean_360d = 0,-999,a3.inb_loan_THD_IDT_lst_3_year_apl_cnt_mean_30d       / a3.inb_loan_THD_IDT_lst_3_year_apl_cnt_mean_360d) as inb_loan_THD_IDT_lst_3_year_apl_cnt_mean_30d_ratio
,if(a3.inb_loan_THD_IDT_lst_3_year_apl_cnt_mean_360d = 0,-999,a3.inb_loan_THD_IDT_lst_3_year_apl_cnt_mean_90d       / a3.inb_loan_THD_IDT_lst_3_year_apl_cnt_mean_360d) as inb_loan_THD_IDT_lst_3_year_apl_cnt_mean_90d_ratio
,if(a3.inb_loan_THD_IDT_lst_3_year_apl_cnt_mean_360d = 0,-999,a3.inb_loan_THD_IDT_lst_3_year_month_apl_cnt_mean_30d / a3.inb_loan_THD_IDT_lst_3_year_apl_cnt_mean_360d) as inb_loan_THD_IDT_lst_3_year_month_apl_cnt_mean_30d_ratio


,a4.inb_loan_FOU_IDT_lst_year_apl_cnt_mean_360d
,a4.inb_loan_FOU_IDT_lst_year_apl_cnt_mean_30d
,a4.inb_loan_FOU_IDT_lst_year_apl_cnt_mean_90d
,a4.inb_loan_FOU_IDT_lst_year_month_apl_cnt_mean_30d
,a4.inb_loan_FOU_IDT_lst_3_year_apl_cnt_mean_360d
,a4.inb_loan_FOU_IDT_lst_3_year_apl_cnt_mean_30d
,a4.inb_loan_FOU_IDT_lst_3_year_apl_cnt_mean_90d
,a4.inb_loan_FOU_IDT_lst_3_year_month_apl_cnt_mean_30d
,if(a4.inb_loan_FOU_IDT_lst_year_apl_cnt_mean_360d   = 0,-999,a4.inb_loan_FOU_IDT_lst_year_apl_cnt_mean_30d         / a4.inb_loan_FOU_IDT_lst_year_apl_cnt_mean_360d  ) as inb_loan_FOU_IDT_lst_year_apl_cnt_mean_30d_ratio
,if(a4.inb_loan_FOU_IDT_lst_year_apl_cnt_mean_360d   = 0,-999,a4.inb_loan_FOU_IDT_lst_year_apl_cnt_mean_90d         / a4.inb_loan_FOU_IDT_lst_year_apl_cnt_mean_360d  ) as inb_loan_FOU_IDT_lst_year_apl_cnt_mean_90d_ratio
,if(a4.inb_loan_FOU_IDT_lst_year_apl_cnt_mean_360d   = 0,-999,a4.inb_loan_FOU_IDT_lst_year_month_apl_cnt_mean_30d   / a4.inb_loan_FOU_IDT_lst_year_apl_cnt_mean_360d  ) as inb_loan_FOU_IDT_lst_year_month_apl_cnt_mean_30d_ratio
,if(a4.inb_loan_FOU_IDT_lst_3_year_apl_cnt_mean_360d = 0,-999,a4.inb_loan_FOU_IDT_lst_3_year_apl_cnt_mean_30d       / a4.inb_loan_FOU_IDT_lst_3_year_apl_cnt_mean_360d) as inb_loan_FOU_IDT_lst_3_year_apl_cnt_mean_30d_ratio
,if(a4.inb_loan_FOU_IDT_lst_3_year_apl_cnt_mean_360d = 0,-999,a4.inb_loan_FOU_IDT_lst_3_year_apl_cnt_mean_90d       / a4.inb_loan_FOU_IDT_lst_3_year_apl_cnt_mean_360d) as inb_loan_FOU_IDT_lst_3_year_apl_cnt_mean_90d_ratio
,if(a4.inb_loan_FOU_IDT_lst_3_year_apl_cnt_mean_360d = 0,-999,a4.inb_loan_FOU_IDT_lst_3_year_month_apl_cnt_mean_30d / a4.inb_loan_FOU_IDT_lst_3_year_apl_cnt_mean_360d) as inb_loan_FOU_IDT_lst_3_year_month_apl_cnt_mean_30d_ratio

,a5.inb_loan_IDT_CTG_lst_year_apl_cnt_mean_360d
,a5.inb_loan_IDT_CTG_lst_year_apl_cnt_mean_30d
,a5.inb_loan_IDT_CTG_lst_year_apl_cnt_mean_90d
,a5.inb_loan_IDT_CTG_lst_year_month_apl_cnt_mean_30d
,a5.inb_loan_IDT_CTG_lst_3_year_apl_cnt_mean_360d
,a5.inb_loan_IDT_CTG_lst_3_year_apl_cnt_mean_30d
,a5.inb_loan_IDT_CTG_lst_3_year_apl_cnt_mean_90d
,a5.inb_loan_IDT_CTG_lst_3_year_month_apl_cnt_mean_30d
,if(a5.inb_loan_IDT_CTG_lst_year_apl_cnt_mean_360d   = 0,-999,a5.inb_loan_IDT_CTG_lst_year_apl_cnt_mean_30d          / a5.inb_loan_IDT_CTG_lst_year_apl_cnt_mean_360d  ) as inb_loan_IDT_CTG_lst_year_apl_cnt_mean_30d_ratio
,if(a5.inb_loan_IDT_CTG_lst_year_apl_cnt_mean_360d   = 0,-999,a5.inb_loan_IDT_CTG_lst_year_apl_cnt_mean_90d          / a5.inb_loan_IDT_CTG_lst_year_apl_cnt_mean_360d  ) as inb_loan_IDT_CTG_lst_year_apl_cnt_mean_90d_ratio
,if(a5.inb_loan_IDT_CTG_lst_year_apl_cnt_mean_360d   = 0,-999,a5.inb_loan_IDT_CTG_lst_year_month_apl_cnt_mean_30d    / a5.inb_loan_IDT_CTG_lst_year_apl_cnt_mean_360d  ) as inb_loan_IDT_CTG_lst_year_month_apl_cnt_mean_30d_ratio
,if(a5.inb_loan_IDT_CTG_lst_3_year_apl_cnt_mean_360d = 0,-999,a5.inb_loan_IDT_CTG_lst_3_year_apl_cnt_mean_30d        / a5.inb_loan_IDT_CTG_lst_3_year_apl_cnt_mean_360d) as inb_loan_IDT_CTG_lst_3_year_apl_cnt_mean_30d_ratio
,if(a5.inb_loan_IDT_CTG_lst_3_year_apl_cnt_mean_360d = 0,-999,a5.inb_loan_IDT_CTG_lst_3_year_apl_cnt_mean_90d        / a5.inb_loan_IDT_CTG_lst_3_year_apl_cnt_mean_360d) as inb_loan_IDT_CTG_lst_3_year_apl_cnt_mean_90d_ratio
,if(a5.inb_loan_IDT_CTG_lst_3_year_apl_cnt_mean_360d = 0,-999,a5.inb_loan_IDT_CTG_lst_3_year_month_apl_cnt_mean_30d  / a5.inb_loan_IDT_CTG_lst_3_year_apl_cnt_mean_360d) as inb_loan_IDT_CTG_lst_3_year_month_apl_cnt_mean_30d_ratio

,b1.inb_loan_FRS_IDT_lst_year_bal_month_mean_mean_360d
,b1.inb_loan_FRS_IDT_lst_year_bal_month_mean_mean_30d
,b1.inb_loan_FRS_IDT_lst_year_bal_month_mean_mean_90d
,b1.inb_loan_FRS_IDT_lst_year_month_bal_month_mean_mean_30d
,b1.inb_loan_FRS_IDT_lst_3_year_bal_month_mean_mean_360d
,b1.inb_loan_FRS_IDT_lst_3_year_bal_month_mean_mean_30d
,b1.inb_loan_FRS_IDT_lst_3_year_bal_month_mean_mean_90d
,b1.inb_loan_FRS_IDT_lst_3_year_month_bal_month_mean_mean_30d

,if(b1.inb_loan_FRS_IDT_lst_year_bal_month_mean_mean_360d   = 0,-999,b1.inb_loan_FRS_IDT_lst_year_bal_month_mean_mean_30d         / b1.inb_loan_FRS_IDT_lst_year_bal_month_mean_mean_360d  ) as inb_loan_FRS_IDT_lst_year_bal_month_mean_mean_30d_ratio
,if(b1.inb_loan_FRS_IDT_lst_year_bal_month_mean_mean_360d   = 0,-999,b1.inb_loan_FRS_IDT_lst_year_bal_month_mean_mean_90d         / b1.inb_loan_FRS_IDT_lst_year_bal_month_mean_mean_360d  ) as inb_loan_FRS_IDT_lst_year_bal_month_mean_mean_90d_ratio
,if(b1.inb_loan_FRS_IDT_lst_year_bal_month_mean_mean_360d   = 0,-999,b1.inb_loan_FRS_IDT_lst_year_month_bal_month_mean_mean_30d   / b1.inb_loan_FRS_IDT_lst_year_bal_month_mean_mean_360d  ) as inb_loan_FRS_IDT_lst_year_month_bal_month_mean_mean_30d_ratio
,if(b1.inb_loan_FRS_IDT_lst_3_year_bal_month_mean_mean_360d = 0,-999,b1.inb_loan_FRS_IDT_lst_3_year_bal_month_mean_mean_30d       / b1.inb_loan_FRS_IDT_lst_3_year_bal_month_mean_mean_360d) as inb_loan_FRS_IDT_lst_3_year_bal_month_mean_mean_30d_ratio
,if(b1.inb_loan_FRS_IDT_lst_3_year_bal_month_mean_mean_360d = 0,-999,b1.inb_loan_FRS_IDT_lst_3_year_bal_month_mean_mean_90d       / b1.inb_loan_FRS_IDT_lst_3_year_bal_month_mean_mean_360d) as inb_loan_FRS_IDT_lst_3_year_bal_month_mean_mean_90d_ratio
,if(b1.inb_loan_FRS_IDT_lst_3_year_bal_month_mean_mean_360d = 0,-999,b1.inb_loan_FRS_IDT_lst_3_year_month_bal_month_mean_mean_30d / b1.inb_loan_FRS_IDT_lst_3_year_bal_month_mean_mean_360d) as inb_loan_FRS_IDT_lst_3_year_month_bal_month_mean_mean_30d_ratio

,b2.inb_loan_SCD_IDT_lst_year_bal_month_mean_mean_360d
,b2.inb_loan_SCD_IDT_lst_year_bal_month_mean_mean_30d
,b2.inb_loan_SCD_IDT_lst_year_bal_month_mean_mean_90d
,b2.inb_loan_SCD_IDT_lst_year_month_bal_month_mean_mean_30d
,b2.inb_loan_SCD_IDT_lst_3_year_bal_month_mean_mean_360d
,b2.inb_loan_SCD_IDT_lst_3_year_bal_month_mean_mean_30d
,b2.inb_loan_SCD_IDT_lst_3_year_bal_month_mean_mean_90d
,b2.inb_loan_SCD_IDT_lst_3_year_month_bal_month_mean_mean_30d
,if(b2.inb_loan_SCD_IDT_lst_year_bal_month_mean_mean_360d   = 0,-999,b2.inb_loan_SCD_IDT_lst_year_bal_month_mean_mean_30d         / b2.inb_loan_SCD_IDT_lst_year_bal_month_mean_mean_360d  ) as inb_loan_SCD_IDT_lst_year_bal_month_mean_mean_30d_ratio
,if(b2.inb_loan_SCD_IDT_lst_year_bal_month_mean_mean_360d   = 0,-999,b2.inb_loan_SCD_IDT_lst_year_bal_month_mean_mean_90d         / b2.inb_loan_SCD_IDT_lst_year_bal_month_mean_mean_360d  ) as inb_loan_SCD_IDT_lst_year_bal_month_mean_mean_90d_ratio
,if(b2.inb_loan_SCD_IDT_lst_year_bal_month_mean_mean_360d   = 0,-999,b2.inb_loan_SCD_IDT_lst_year_month_bal_month_mean_mean_30d   / b2.inb_loan_SCD_IDT_lst_year_bal_month_mean_mean_360d  ) as inb_loan_SCD_IDT_lst_year_month_bal_month_mean_mean_30d_ratio
,if(b2.inb_loan_SCD_IDT_lst_3_year_bal_month_mean_mean_360d = 0,-999,b2.inb_loan_SCD_IDT_lst_3_year_bal_month_mean_mean_30d       / b2.inb_loan_SCD_IDT_lst_3_year_bal_month_mean_mean_360d) as inb_loan_SCD_IDT_lst_3_year_bal_month_mean_mean_30d_ratio
,if(b2.inb_loan_SCD_IDT_lst_3_year_bal_month_mean_mean_360d = 0,-999,b2.inb_loan_SCD_IDT_lst_3_year_bal_month_mean_mean_90d       / b2.inb_loan_SCD_IDT_lst_3_year_bal_month_mean_mean_360d) as inb_loan_SCD_IDT_lst_3_year_bal_month_mean_mean_90d_ratio
,if(b2.inb_loan_SCD_IDT_lst_3_year_bal_month_mean_mean_360d = 0,-999,b2.inb_loan_SCD_IDT_lst_3_year_month_bal_month_mean_mean_30d / b2.inb_loan_SCD_IDT_lst_3_year_bal_month_mean_mean_360d) as inb_loan_SCD_IDT_lst_3_year_month_bal_month_mean_mean_30d_ratio

,b3.inb_loan_THD_IDT_lst_year_bal_month_mean_mean_360d
,b3.inb_loan_THD_IDT_lst_year_bal_month_mean_mean_30d
,b3.inb_loan_THD_IDT_lst_year_bal_month_mean_mean_90d
,b3.inb_loan_THD_IDT_lst_year_month_bal_month_mean_mean_30d
,b3.inb_loan_THD_IDT_lst_3_year_bal_month_mean_mean_360d
,b3.inb_loan_THD_IDT_lst_3_year_bal_month_mean_mean_30d
,b3.inb_loan_THD_IDT_lst_3_year_bal_month_mean_mean_90d
,b3.inb_loan_THD_IDT_lst_3_year_month_bal_month_mean_mean_30d
,if(b3.inb_loan_THD_IDT_lst_year_bal_month_mean_mean_360d   = 0,-999,b3.inb_loan_THD_IDT_lst_year_bal_month_mean_mean_30d         / b3.inb_loan_THD_IDT_lst_year_bal_month_mean_mean_360d  ) as inb_loan_THD_IDT_lst_year_bal_month_mean_mean_30d_ratio
,if(b3.inb_loan_THD_IDT_lst_year_bal_month_mean_mean_360d   = 0,-999,b3.inb_loan_THD_IDT_lst_year_bal_month_mean_mean_90d         / b3.inb_loan_THD_IDT_lst_year_bal_month_mean_mean_360d  ) as inb_loan_THD_IDT_lst_year_bal_month_mean_mean_90d_ratio
,if(b3.inb_loan_THD_IDT_lst_year_bal_month_mean_mean_360d   = 0,-999,b3.inb_loan_THD_IDT_lst_year_month_bal_month_mean_mean_30d   / b3.inb_loan_THD_IDT_lst_year_bal_month_mean_mean_360d  ) as inb_loan_THD_IDT_lst_year_month_bal_month_mean_mean_30d_ratio
,if(b3.inb_loan_THD_IDT_lst_3_year_bal_month_mean_mean_360d = 0,-999,b3.inb_loan_THD_IDT_lst_3_year_bal_month_mean_mean_30d       / b3.inb_loan_THD_IDT_lst_3_year_bal_month_mean_mean_360d) as inb_loan_THD_IDT_lst_3_year_bal_month_mean_mean_30d_ratio
,if(b3.inb_loan_THD_IDT_lst_3_year_bal_month_mean_mean_360d = 0,-999,b3.inb_loan_THD_IDT_lst_3_year_bal_month_mean_mean_90d       / b3.inb_loan_THD_IDT_lst_3_year_bal_month_mean_mean_360d) as inb_loan_THD_IDT_lst_3_year_bal_month_mean_mean_90d_ratio
,if(b3.inb_loan_THD_IDT_lst_3_year_bal_month_mean_mean_360d = 0,-999,b3.inb_loan_THD_IDT_lst_3_year_month_bal_month_mean_mean_30d / b3.inb_loan_THD_IDT_lst_3_year_bal_month_mean_mean_360d) as inb_loan_THD_IDT_lst_3_year_month_bal_month_mean_mean_30d_ratio

,b4.inb_loan_FOU_IDT_lst_year_bal_month_mean_mean_360d
,b4.inb_loan_FOU_IDT_lst_year_bal_month_mean_mean_30d
,b4.inb_loan_FOU_IDT_lst_year_bal_month_mean_mean_90d
,b4.inb_loan_FOU_IDT_lst_year_month_bal_month_mean_mean_30d
,b4.inb_loan_FOU_IDT_lst_3_year_bal_month_mean_mean_360d
,b4.inb_loan_FOU_IDT_lst_3_year_bal_month_mean_mean_30d
,b4.inb_loan_FOU_IDT_lst_3_year_bal_month_mean_mean_90d
,b4.inb_loan_FOU_IDT_lst_3_year_month_bal_month_mean_mean_30d
,if(b4.inb_loan_FOU_IDT_lst_year_bal_month_mean_mean_360d   = 0,-999,b4.inb_loan_FOU_IDT_lst_year_bal_month_mean_mean_30d         / b4.inb_loan_FOU_IDT_lst_year_bal_month_mean_mean_360d  ) as inb_loan_FOU_IDT_lst_year_bal_month_mean_mean_30d_ratio
,if(b4.inb_loan_FOU_IDT_lst_year_bal_month_mean_mean_360d   = 0,-999,b4.inb_loan_FOU_IDT_lst_year_bal_month_mean_mean_90d         / b4.inb_loan_FOU_IDT_lst_year_bal_month_mean_mean_360d  ) as inb_loan_FOU_IDT_lst_year_bal_month_mean_mean_90d_ratio
,if(b4.inb_loan_FOU_IDT_lst_year_bal_month_mean_mean_360d   = 0,-999,b4.inb_loan_FOU_IDT_lst_year_month_bal_month_mean_mean_30d   / b4.inb_loan_FOU_IDT_lst_year_bal_month_mean_mean_360d  ) as inb_loan_FOU_IDT_lst_year_month_bal_month_mean_mean_30d_ratio
,if(b4.inb_loan_FOU_IDT_lst_3_year_bal_month_mean_mean_360d = 0,-999,b4.inb_loan_FOU_IDT_lst_3_year_bal_month_mean_mean_30d       / b4.inb_loan_FOU_IDT_lst_3_year_bal_month_mean_mean_360d) as inb_loan_FOU_IDT_lst_3_year_bal_month_mean_mean_30d_ratio
,if(b4.inb_loan_FOU_IDT_lst_3_year_bal_month_mean_mean_360d = 0,-999,b4.inb_loan_FOU_IDT_lst_3_year_bal_month_mean_mean_90d       / b4.inb_loan_FOU_IDT_lst_3_year_bal_month_mean_mean_360d) as inb_loan_FOU_IDT_lst_3_year_bal_month_mean_mean_90d_ratio
,if(b4.inb_loan_FOU_IDT_lst_3_year_bal_month_mean_mean_360d = 0,-999,b4.inb_loan_FOU_IDT_lst_3_year_month_bal_month_mean_mean_30d / b4.inb_loan_FOU_IDT_lst_3_year_bal_month_mean_mean_360d) as inb_loan_FOU_IDT_lst_3_year_month_bal_month_mean_mean_30d_ratio


,b5.inb_loan_IDT_CTG_lst_year_bal_month_mean_mean_360d
,b5.inb_loan_IDT_CTG_lst_year_bal_month_mean_mean_30d
,b5.inb_loan_IDT_CTG_lst_year_bal_month_mean_mean_90d
,b5.inb_loan_IDT_CTG_lst_year_month_bal_month_mean_mean_30d
,b5.inb_loan_IDT_CTG_lst_3_year_bal_month_mean_mean_360d
,b5.inb_loan_IDT_CTG_lst_3_year_bal_month_mean_mean_30d
,b5.inb_loan_IDT_CTG_lst_3_year_bal_month_mean_mean_90d
,b5.inb_loan_IDT_CTG_lst_3_year_month_bal_month_mean_mean_30d
,if(b5.inb_loan_IDT_CTG_lst_year_bal_month_mean_mean_360d   = 0,-999,b5.inb_loan_IDT_CTG_lst_year_bal_month_mean_mean_30d         / b5.inb_loan_IDT_CTG_lst_year_bal_month_mean_mean_360d  ) as inb_loan_IDT_CTG_lst_year_bal_month_mean_mean_30d_ratio
,if(b5.inb_loan_IDT_CTG_lst_year_bal_month_mean_mean_360d   = 0,-999,b5.inb_loan_IDT_CTG_lst_year_bal_month_mean_mean_90d         / b5.inb_loan_IDT_CTG_lst_year_bal_month_mean_mean_360d  ) as inb_loan_IDT_CTG_lst_year_bal_month_mean_mean_90d_ratio
,if(b5.inb_loan_IDT_CTG_lst_year_bal_month_mean_mean_360d   = 0,-999,b5.inb_loan_IDT_CTG_lst_year_month_bal_month_mean_mean_30d   / b5.inb_loan_IDT_CTG_lst_year_bal_month_mean_mean_360d  ) as inb_loan_IDT_CTG_lst_year_month_bal_month_mean_mean_30d_ratio
,if(b5.inb_loan_IDT_CTG_lst_3_year_bal_month_mean_mean_360d = 0,-999,b5.inb_loan_IDT_CTG_lst_3_year_bal_month_mean_mean_30d       / b5.inb_loan_IDT_CTG_lst_3_year_bal_month_mean_mean_360d) as inb_loan_IDT_CTG_lst_3_year_bal_month_mean_mean_30d_ratio
,if(b5.inb_loan_IDT_CTG_lst_3_year_bal_month_mean_mean_360d = 0,-999,b5.inb_loan_IDT_CTG_lst_3_year_bal_month_mean_mean_90d       / b5.inb_loan_IDT_CTG_lst_3_year_bal_month_mean_mean_360d) as inb_loan_IDT_CTG_lst_3_year_bal_month_mean_mean_90d_ratio
,if(b5.inb_loan_IDT_CTG_lst_3_year_bal_month_mean_mean_360d = 0,-999,b5.inb_loan_IDT_CTG_lst_3_year_month_bal_month_mean_mean_30d / b5.inb_loan_IDT_CTG_lst_3_year_bal_month_mean_mean_360d) as inb_loan_IDT_CTG_lst_3_year_month_bal_month_mean_mean_30d_ratio
from lab_bigdata_dev.idv_group_rate_sample t
left join
(select cst_id
      ,dt
      ,CASE
        WHEN IDT_CD IN ( 'H61' , 'H611' , 'H6110' , 'H612' , 'H6121' , 'H6129' , 'H613' , 'H6130' , 'H614' , 'H6140' , 'H619' , 'H6190' ) THEN '酒店行业'
        WHEN SUBSTR(IDT_CD, 1, 3) = 'C25' OR IDT_CD IN ( 'D4512' , 'F5162' , 'F5265' )                                                    THEN '成品油行业'
        WHEN SUBSTR(IDT_CD, 1, 3) = 'F52'                                                                                                 THEN '商超'
        WHEN SUBSTR(IDT_CD, 1, 3) IN ( 'C17' , 'C18' ) OR IDT_CD IN ( 'F513' , 'F5131' )                                                  THEN '纺织'
        WHEN SUBSTR(IDT_CD, 1, 3) = 'C22'                                                                                                 THEN '纸张行业'
        WHEN IDT_CD IN ( 'F512' , 'F5127' )                                                                                               THEN '饮料批发'
        WHEN IDT_CD IN ( 'C367' , 'C3670' , 'F5172' , 'F526' , 'F5263' )                                                                  THEN '汽车零配件加工'
        WHEN IDT_CD IN ( 'C137' , 'C1373' )                                                                                               THEN '炒货'
        WHEN IDT_CD IN ( 'A021' , 'A0211' , 'A0212' )                                                                                     THEN '苗木'
        WHEN IDT_CD IN ( 'C344' , 'C3443' )                                                                                               THEN '阀门'
        WHEN SUBSTR(IDT_CD, 1, 1) = 'E'                                                                                                   THEN '建筑行业'
        WHEN IDT_CD IN ( 'C3851' , 'C3853' , 'C3854' , 'C3855' , 'C3856' , 'C3879' , 'F527' )                                             THEN '家用电器'
      END AS IDT_CTG
    ,SUBSTR(IDT_CD, 1, 1)                                                              AS FRS_IDT_CD --一级行业代码
    ,SUBSTR(IDT_CD, 1, 2)                                                              AS SCD_IDT_CD --二级行业代码
    ,SUBSTR(IDT_CD, 1, 3)                                                              AS THD_IDT_CD --三级行业代码
    ,SUBSTR(IDT_CD, 1, 4)                                                              AS FOU_IDT_CD --四级行业代码
from EDW.DWS_CST_BAS_INF_DD
where dt in (select distinct date_now from lab_bigdata_dev.idv_group_rate_sample)
  and IDT_CD <> '' and SUBSTR(IDT_CD, 1, 4) <> '9999'
) t0
on t0.cst_id = t.cst_id and t.date_now = t0.dt
left join lab_bigdata_dev.tbl2_inb_loan_industry_data_cst_middle_feature_idv_group_rate_20240305 a1
on t0.FRS_IDT_CD = a1.FRS_IDT_CD
and t0.dt = a1.date_now
left join lab_bigdata_dev.tbl3_inb_loan_industry_data_cst_middle_feature_idv_group_rate_20240305 a2
on t0.SCD_IDT_CD = a2.SCD_IDT_CD
and t0.dt = a2.date_now
left join lab_bigdata_dev.tbl4_inb_loan_industry_data_cst_middle_feature_idv_group_rate_20240305 a3
on t0.THD_IDT_CD = a3.THD_IDT_CD
and t0.dt = a3.date_now
left join lab_bigdata_dev.tbl5_inb_loan_industry_data_cst_middle_feature_idv_group_rate_20240305 a4
on t0.FOU_IDT_CD = a4.FOU_IDT_CD
and t0.dt = a4.date_now
left join lab_bigdata_dev.tbl6_inb_loan_industry_data_cst_middle_feature_idv_group_rate_20240305 a5
on t0.IDT_CTG = a5.IDT_CTG
and t0.dt = a5.date_now
left join lab_bigdata_dev.tbl8_inb_loan_industry_data_middle_feature_idv_group_rate_20240305 b1
on t0.FRS_IDT_CD = b1.FRS_IDT_CD
and t0.dt = b1.date_now
left join lab_bigdata_dev.tbl9_inb_loan_industry_data_middle_feature_idv_group_rate_20240305 b2
on t0.SCD_IDT_CD = b2.SCD_IDT_CD
and t0.dt = b2.date_now
left join lab_bigdata_dev.tbl10_inb_loan_industry_data_middle_feature_idv_group_rate_20240305 b3
on t0.THD_IDT_CD = b3.THD_IDT_CD
and t0.dt = b3.date_now
left join lab_bigdata_dev.tbl11_inb_loan_industry_data_middle_feature_idv_group_rate_20240305 b4
on t0.FOU_IDT_CD = b4.FOU_IDT_CD
and t0.dt = b4.date_now
left join lab_bigdata_dev.tbl12_inb_loan_industry_data_middle_feature_idv_group_rate_20240305 b5
on t0.IDT_CTG = b5.IDT_CTG
and t0.dt = b5.date_now
;
---###end

------###---###---###---print(&quot;贷款指标任务耗时：{0:.0f}秒&quot; .format(time.time() - start_time))
---print(&quot;贷款指标计算完成，开始计算理财指标&quot;)

**专题分析报告_团办分析.sql
SELECT  一级行业
        ,count(*) 客户数
        ,sum(CASE  WHEN label = 1 THEN 1  END) 团办客户数
        ,CASE  WHEN count(*) > 0 THEN sum(CASE WHEN label = 1 THEN 1 END) / count(*) END AS 团办率
FROM    (
            SELECT  DISTINCT t.cst_id
							,t.date_now
							, t.label
                             ,idt_cd
                             ,b.chinese AS 一级行业
                             ,c.chinese AS 四级行业
            FROM    lab_bigdata_dev.idv_group_rate_sample_good t
            LEFT JOIN    adm_pub.adm_csm_cbas_idv_bas_inf_dd t1
            ON      t.cst_id = t1.cst_id
            AND     t1.dt = '20240307'
            LEFT JOIN    industry_code_map AS b --国民经济行业分类代码表
            ON      trim(substr(t1.idt_cd,1,1)) = trim(b.code)
            LEFT JOIN    industry_code_map AS c --国民经济行业分类代码表
            ON      trim(t1.idt_cd) = trim(c.code)
            WHERE   t.date_now <= '20231130'
        ) t
GROUP BY 一级行业
ORDER BY 一级行业
;


SELECT  四级行业
        ,count(*) 客户数
        ,sum(CASE  WHEN label = 1 THEN 1  END) 团办客户数
        ,CASE  WHEN count(*) > 0 THEN sum(CASE WHEN label = 1 THEN 1 END) / count(*) END AS 团办率
FROM    (
            SELECT  DISTINCT t.cst_id
							,t.date_now
							, t.label
                             ,idt_cd
                             ,b.chinese AS 一级行业
                             ,c.chinese AS 四级行业
            FROM    lab_bigdata_dev.idv_group_rate_sample_good t
            LEFT JOIN    adm_pub.adm_csm_cbas_idv_bas_inf_dd t1
            ON      t.cst_id = t1.cst_id
            AND     t1.dt = '20240307'
            LEFT JOIN    industry_code_map AS b --国民经济行业分类代码表
            ON      trim(substr(t1.idt_cd,1,1)) = trim(b.code)
            LEFT JOIN    industry_code_map AS c --国民经济行业分类代码表
            ON      trim(t1.idt_cd) = trim(c.code)
            WHERE   t.date_now <= '20231130'
        ) t
GROUP BY 四级行业
ORDER BY 四级行业
;

SELECT * FROM hz_data_clean
**专题分析报告_指标库01_03信用卡.sql
-------------以下代码（代码基本按照指标分类顺序）主要包括指标：客群分类、客户集市、信用卡、征信指标（包括征信迁移指标、行业周期指标）、贷款（包括行业周期指标）、理财、借记卡（存款、交易流水）、app、泰惠收、手机银行埋点等指标,共大约5000个指标

--1.客群分类指标（1个指标）：lab_bigdata_dev.cst_type_feature_idv_group_rate_20240305

--2.客户集市指标表：lab_bigdata_dev.adm_pub_feature_idv_group_rate_20240305

--3.信用卡指标：lab_bigdata_dev.creditcard_all_feature_idv_group_rate_20240305

--4.征信指标：lab_bigdata_dev.pboc_all_feature_idv_group_rate_20240305,20230209新增82个指标

--5.贷款指标：lab_bigdata_dev.loan_all_feature_idv_group_rate_20240305

--6.理财指标：lab_bigdata_dev.chm_all_feature_idv_group_rate_20240305

--7-1.借记卡存款指标：lab_bigdata_dev.debitcard_dep_aum_feature_idv_group_rate_20240305

--7-2.借记卡交易流水指标：lab_bigdata_dev.debitcard_tran1_feature_idv_group_rate_20240305、lab_bigdata_dev.tbl7_label1_10_debitcard_tran_feature_idv_group_rate_20240305、lab_bigdata_dev.tbl8_label11_20_debitcard_tran_feature_idv_group_rate_20240305、lab_bigdata_dev.tbl9_label21_30_debitcard_tran_feature_idv_group_rate_20240305、lab_bigdata_dev.tbl10_label31_39_debitcard_tran_feature_idv_group_rate_20240305

--8-1.app指标：20220808新增168个，lab_bigdata_dev.tbl4_app_install_30d_360d_feature_idv_group_rate_20240305

--8-2.app指标:20230704新增行业类、正负向等标签，增加663个app指标，lab_bigdata_dev.tbl4_app_install_30d_360d_feature_idv_group_rate_20240305

--9.泰惠收指标（20220826新增336个）：lab_bigdata_dev.tbl1_ths_feature_idv_group_rate_20240305、lab_bigdata_dev.tbl2_ths_feature_idv_group_rate_20240305、lab_bigdata_dev.tbl3_ths_feature_idv_group_rate_20240305

--10.泰惠收微信、支付宝通道消费类指标（20220913新增136个）:lab_bigdata_dev.tbl1_ths_wechat_consume_feature_idv_group_rate_20240305、lab_bigdata_dev.tbl2_ths_wechat_consume_feature_idv_group_rate_20240305、lab_bigdata_dev.tbl3_ths_wechat_consume_feature_idv_group_rate_20240305、lab_bigdata_dev.tbl1_ths_zfb_consume_feature_idv_group_rate_20240305、lab_bigdata_dev.tbl2_ths_zfb_consume_feature_idv_group_rate_20240305、lab_bigdata_dev.tbl3_ths_zfb_consume_feature_idv_group_rate_20240305

--11.行业周期指标：20230710增加行内贷款行业周期指标140个lab_bigdata_dev.tbl1_inb_loan_industry_feature_idv_group_rate_20240305，增加征信行业周期指标210个lab_bigdata_dev.tbl139_pboc_industry_feature_idv_group_rate_20240305

--12.征信迁移指标：20230710增加征信迁移指标188个，lab_bigdata_dev.tbl127_pboc_loan_transfer_feature_idv_group_rate_20240305、lab_bigdata_dev.tbl128_pboc_loan_query_transfer_feature_idv_group_rate_20240305

--13.手机银行埋点指标：20231115新增手机银行埋点95个指标，lab_bigdata_dev.tbl1_mobile_bank_dbp_feature_idv_group_rate_20240305



-------最终形成7张表：

--lab_bigdata_dev.all_feature1_idv_group_rate_20240305(数据集市、征信（包括征信迁移指标）、ftp指标,共722+188=910个)

--lab_bigdata_dev.all_feature2_idv_group_rate_20240305(信用卡、贷款、理财、泰惠收收单、泰惠收微信、支付宝通道消费类指标,共1112个)

--lab_bigdata_dev.all_feature3_idv_group_rate_20240305(存款日均、部分交易流水等,共1046个)

--lab_bigdata_dev.all_feature4_idv_group_rate_20240305(40个标签交易流水,共733个)

--lab_bigdata_dev.all_feature5_idv_group_rate_20240305(app指标,共168+663=831个)

--lab_bigdata_dev.all_feature6_idv_group_rate_20240305(行业周期指标（包括行内贷款行业周期和征信贷款行业周期指标),140+210=350)

--lab_bigdata_dev.all_feature7_idv_group_rate_20240305(手机银行埋点指标，共95个)



--注意： 1.aum指标计算时涉及到存款、理财类等指标，需在存款、理财类指标计算完后再计算aum；

--       2.活期、定期比例、理财比例类指标计算在交易流水指标后，计算需要在其日均计算完之后。

--		 3.回溯日期>=征信报告日期s.date_now >= rpt.report_dt(20231017)

--       4.类似31-60天类指标不建议放入模型

---###end







------###---###---###start0001

------###---###---### ---------------------------------1.客群分类指标lab_bigdata_dev.cst_type_feature_idv_group_rate_20240305--------

------###---###---### ----客群分类

------###---###---### ----工资户

-- ---start_time=time.time()

---print(&quot;开始计算客群分类指标&quot;)

drop table if exists  lab_bigdata_dev.cst_sal_idv_group_rate_20240305;

create table lab_bigdata_dev.cst_sal_idv_group_rate_20240305 as

SELECT DISTINCT T2.CST_ID

FROM EDW.CORE_KDPL_ZHMINX T1

INNER JOIN EDW.DWS_BUS_DEP_ACT_INF_DD T2

	ON  T2.DEP_ACT_ID = T1.ZHANGHAO

	AND T2.CST_ACT_ID = T1.KEHUZHAO

	AND T1.dt=T2.dt

	AND T2.DT = (select max(date_now) from lab_bigdata_dev.idv_group_rate_sample)

WHERE T1.DT <= (select max(date_now) from lab_bigdata_dev.idv_group_rate_sample)

AND T1.ZHAIYODM = 'IB0047'  --代发工资

;

------###---###---###end



------###---###---###start0002

------###---###---###--客群分类

drop table if exists lab_bigdata_dev.cst_type_feature_idv_group_rate_20240305;

create table lab_bigdata_dev.cst_type_feature_idv_group_rate_20240305 as

select

	a.cst_id

	,a.date_now

	,CASE

		when t1.cst_typ_cd = '2'  then '对公客户'

		WHEN t1.cst_typ_cd = '1' and T2.mic_entp_own_ind = '1' THEN '小微企业主'

		WHEN t1.cst_typ_cd = '1' and T2.IND_BUS_IND = '1' THEN '个体工商户'

		WHEN t1.cst_typ_cd = '1' and t2.FM_IND = '1' THEN '农民'

		WHEN T3.CST_ID IS NOT NULL THEN '代发工资户'

		WHEN  t1.cst_typ_cd = '1'  AND t2.mic_entp_own_ind <> '1' AND t2.ind_bus_ind <> '1'  AND T2.FM_IND <> '1' and

			(t2.bth_dt like '20%' or t2.bth_dt like '19%')  and datediff(GETDATE(), to_date(t2.bth_dt,'yyyymmdd'), 'yyyy')>= 65 THEN '安享退休'

		WHEN t1.cst_typ_cd = '1'  AND t2.mic_entp_own_ind <> '1' AND t2.ind_bus_ind <> '1'  AND T2.FM_IND <> '1' and

			(t2.bth_dt like '20%' or t2.bth_dt like '19%')  and t2.gdr_cd = '1' and   datediff(GETDATE(), to_date(t2.bth_dt,'yyyymmdd'), 'yyyy') < 65 and  datediff(GETDATE(), to_date(t2.bth_dt,'yyyymmdd'), 'yyyy') >= 35  then '中年男性'

		WHEN t1.cst_typ_cd = '1'  AND t2.mic_entp_own_ind <> '1' AND t2.ind_bus_ind <> '1'  AND T2.FM_IND <> '1' and

			(t2.bth_dt like '20%' or t2.bth_dt like '19%')  and t2.gdr_cd = '2' and datediff(GETDATE(), to_date(t2.bth_dt,'yyyymmdd'), 'yyyy')< 65 and datediff(GETDATE(), to_date(t2.bth_dt,'yyyymmdd'), 'yyyy')>= 35  then '中年女性'

		WHEN t1.cst_typ_cd = '1'  AND t2.mic_entp_own_ind <> '1' AND t2.ind_bus_ind <> '1'  AND T2.FM_IND <> '1' and

			(t2.bth_dt like '20%' or t2.bth_dt like '19%')  and datediff(GETDATE(), to_date(t2.bth_dt,'yyyymmdd'), 'yyyy')< 35   then '潜力青年'

		ELSE '其他' END as inb_cst_type

FROM lab_bigdata_dev.idv_group_rate_sample a

left join edw.dws_cst_bas_inf_dd t1   --所有客户

	on  a.cst_id=t1.cst_id

	and a.date_now=t1.dt

	and t1.dt <= (select max(date_now) from lab_bigdata_dev.idv_group_rate_sample)

	and t1.dt >= (select min(date_now) from lab_bigdata_dev.idv_group_rate_sample)

left join  edw.dim_cst_idv_bas_inf_dd t2  --对私客户

	on t1.cst_id = t2.cst_id

	AND t2.dt = a.date_now

	and t2.dt <= (select max(date_now) from lab_bigdata_dev.idv_group_rate_sample)

	and t2.dt >= (select min(date_now) from lab_bigdata_dev.idv_group_rate_sample)

left join lab_bigdata_dev.cst_sal_idv_group_rate_20240305 t3  --代发工资户

	on t1.cst_id = t3.cst_id

;





---print(&quot;开始计算客户集市指标&quot;)

---print(&quot;客群分类指标任务耗时：{0:.0f}秒&quot; .format(time.time() - start_time))

------###---###---###end



------###---###---###start0003

-- ---start_time=time.time()

------###---###---### ----------------------------2.客户集市指标表：lab_bigdata_dev.adm_pub_feature_idv_group_rate_20240305------------------------------------

------###---###---### -----客户集市特征

drop table if exists lab_bigdata_dev.adm_pub_feature_idv_group_rate_20240305;

create table lab_bigdata_dev.adm_pub_feature_idv_group_rate_20240305 as

select `(rownum)?+.+`

from

		(select cst.cst_id,cst.date_now

            ,bas.cst_typ

            ,bas.ntn_cd

            ,bas.gdr_cd

            ,bas.age

            ,bas.dty_cd

            ,bas.is_farmer

            ,bas.is_citizen

            ,bas.life_stg

            ,bas.crdt_rat_lev

            ,bas.emp_relat_flg

            ,bas.mc_cst_id

            ,bas.attribute

            ,bas.cst_src

            ,bas.bus_crd_grd

            ,bas.ipm_cncn_ppl_typ

            ,bas.lvrg_lmt

            ,bas.is_esp_blst

            ,bas.one_year_zhu_loan_num

            ,loan.com_loan_bal

            ,loan.cor_loan_bal

            ,loan.idv_loan_bal

            ,loan.acc_loan_bal

            ,loan.dcnt_loan_bal

            ,loan.grnt_loan_bal

            ,loan.lc_loan_bal

            ,loan.cor_com_loan_bal

            ,loan.idv_com_loan_bal

            ,loan.trd_loan_bal

            ,loan.lqd_loan_bal

            ,loan.fix_loan_bal

            ,loan.lgl_psn_loan_bal

            ,loan.idv_csm_loan_bal

            ,loan.idv_opr_loan_bal

            ,loan.sdt_loan_bal

            ,loan.crd_bal

            ,loan.deb_crd_bal

            ,loan.pdeb_crd_bal

            ,loan.acc_adv_bal

            ,loan.ast_scr_bal

            ,loan.ovd_loan_amt

            ,loan.loan_mon_avg

            ,loan.cor_loan_mon_avg

            ,loan.idv_loan_mon_avg

            ,loan.acc_loan_mon_avg

            ,loan.dcnt_loan_mon_avg

            ,loan.grnt_loan_mon_avg

            ,loan.lc_loan_mon_avg

            ,loan.cor_com_loan_mon_avg

            ,loan.idv_com_loan_mon_avg

            ,loan.trd_loan_mon_avg

            ,loan.lqd_loan_mon_avg

            ,loan.fix_loan_mon_avg

            ,loan.lgl_psn_loan_mon_avg

            ,loan.idv_xf_loan_mon_avg

            ,loan.idv_jy_loan_mon_avg

            ,loan.sdt_loan_mon_avg

            ,loan.cr_cr_crd_mon_avg

            ,loan.deb_crd_bal_mon_avg

            ,loan.pdeb_crd_bal_mon_avg

            ,loan.acc_amt

            ,loan.open_acc_bal

            ,loan.mrgn_acc_bal

            ,loan.acc_adv_mon_avg

            ,loan.ast_scr_mon_avg

            ,loan.insd_loan_bal

            ,loan.outsd_loan_bal

            ,loan.ast_loan_mon_avg

            ,loan.ast_loan_year_avg

            ,loan.fct_loan_bal

            ,loan.agn_loan_bal

            ,loan.grnt_ovd_bal

            ,loan.adv_loan_bal

            ,loan.coop_loan_bal

            ,loan.entr_loan_bal

            ,loan.ldx_loan_bal

            ,loan.ldx_loan_mon_avg_90

            ,loan.ldx_loan_bal_90

            ,loan.loan_bal_acs

            ,loan.loan_bal_acs_mon_avg

            ,loan.loan_bal_acs_year_avg

            ,loan.trd_loan_year_avg

            ,loan.crc_loan_bal

            ,loan.no_crc_loan_bal

            ,loan.crc_idv_opr_loan_bal

            ,loan.no_crc_idv_opr_loan_bal

            ,loan.crc_idv_csm_loan_bal

            ,loan.no_crc_idv_csm_loan_bal

            ,loan.crc_lqd_fnd_loan_bal

            ,loan.no_crc_lqd_fnd_loan_bal

            ,loan.fst_loan_hpdt

            ,loan.sdt_loan_year_avg

            ,loan.cr_cr_crd_year_avg

            ,loan.policy_loan_bal

            ,loan.policy_loan_mon_avg

            ,hld.is_hld_dmnd_dep

            ,hld.is_hld_tm_dep

            ,hld.is_hld_ntm_dep

            ,hld.is_hld_advs_dep

            ,hld.is_hld_lrg_dep

            ,hld.is_hld_mrgn_dep

            ,hld.is_hld_res_dep

            ,hld.is_hld_strc_dep

            ,hld.is_hld_dep_ib

            ,hld.is_hld_chm

            ,hld.is_hld_fnd

            ,hld.is_hld_bill

            ,hld.is_hld_grnt

            ,hld.is_hld_acc

            ,hld.is_hld_com_loan

            ,hld.is_hld_trd

            ,hld.is_hld_lc

            ,hld.is_hld_sdt

            ,hld.is_hld_deb_crd

            ,hld.is_hld_cr_visa

            ,hld.is_hld_pdeb_crd

            ,hld.pd_hld_nbr

            ,hld.crd_pd_hld_nbr

            ,hld.is_crs_cst

            ,hld.is_olbank

            ,hld.is_mbbank

            ,hld.is_finc_sign

            ,hld.is_proxy

            ,hld.is_phone

            ,hld.is_sms

            ,hld.is_pay

            ,hld.is_mess

            ,hld.is_hld_okv

            ,hld.is_hld_fish_pd

            ,hld.is_hld_insu_pd

            ,hld.cur_year_pre_metal

            ,hld.last_year_pre_metal

            ,hld.cur_mon_cls_chm_mtu

            ,hld.net_mon_cls_chm_mtu

            ,hld.cur_mon_dep_mtu

            ,hld.next_mon_dep_mtu

            ,hld.life_chm_no_xu

            ,hld.cur_mon_loan_mtu

            ,hld.next_mon_loan_mtu

            ,dep.dep_bal

            ,dep.dmnd_dep_bal

            ,dep.advs_dep_bal

            ,dep.tm_dep_bal

            ,dep.ntm_dep_bal

            ,dep.mrgn_dep_bal

            ,dep.agr_dep_bal

            ,dep.chm_dep_bal

            ,dep.strc_dep_bal

            ,dep.cor_dmnd_dep_bal

            ,dep.idv_dmnd_dep_bal

            ,dep.idv_pd_dep_bal

            ,dep.idv_chk_dep_bal

            ,dep.idv_dbt_dep_bal

            ,dep.cor_tm_dep_bal

            ,dep.cor_lrg_dep_bal

            ,dep.idv_tm_dep_bal

            ,dep.idv_lrg_dep_bal

            ,dep.idv_ybt_dep_bal

            ,dep.idv_jjg_dep_bal

            ,dep.idv_lq_dep_bal

            ,dep.lrg_dep_bal

            ,dep.ib_dep_bal

            ,dep.res_dep_bal

            ,dep.crd_dep_bal

            ,dep.bas_dep_bal

            ,dep.dep_bal_mon_avg

            ,dep.dmnd_dep_bal_mon_avg

            ,dep.advs_dep_bal_mon_avg

            ,dep.tm_dep_bal_mon_avg

            ,dep.ntm_dep_bal_mon_avg

            ,dep.mrgn_dep_bal_mon_avg

            ,dep.agr_dep_bal_mon_avg

            ,dep.chm_dep_bal_mon_avg

            ,dep.strc_dep_bal_mon_avg

            ,dep.cor_dmnd_dep_bal_mon_avg

            ,dep.idv_dmnd_dep_bal_mon_avg

            ,dep.idv_pd_dep_bal_mon_avg

            ,dep.idv_chk_dep_bal_mon_avg

            ,dep.idv_dbt_dep_bal_mon_avg

            ,dep.cor_tm_dep_bal_mon_avg

            ,dep.cor_lrg_dep_bal_mon_avg

            ,dep.idv_tm_dep_bal_mon_avg

            ,dep.idv_lrg_dep_bal_mon_avg

            ,dep.idv_ybt_dep_bal_mon_avg

            ,dep.idv_jjg_dep_bal_mon_avg

            ,dep.idv_lq_dep_bal_mon_avg

            ,dep.lrg_dep_bal_mon_avg

            ,dep.ib_dep_bal_mon_avg

            ,dep.res_dep_bal_mon_avg

            ,dep.crd_dep_bal_mon_avg

            ,dep.bas_dep_bal_mon_avg

            ,dep.dep_bal_year_avg

            ,dep.dep_bal_30_avg

            ,dep.dep_no_cun_bal

            ,dep.dep_no_cun_bal_mon_avg

            ,dep.last_90_days_gl_bal_avg

            ,dep.last_360_days_mon_gl_bal_avg

            ,chm.chm_bal

            ,chm.agn_chm_pd_bal

            ,chm.brk_chm_bal

            ,chm.nbrk_chm_bal

            ,chm.cls_chm_bal

            ,chm.open_chm_bal

            ,chm.agn_fnd_bal

            ,chm.agn_man_bal

            ,chm.chm_mon_avg

            ,chm.agn_chm_mon_avg

            ,chm.brk_chm_mon_avg

            ,chm.nbrk_chm_mon_avg

            ,chm.cls_chm_mon_avg

            ,chm.open_chm_mon_avg

            ,chm.agn_fnd_mon_avg

            ,chm.agn_man_mon_avg

            ,chm.cvtn_chm_bal

            ,chm.agn_chm_bal

            ,chm.chm_lot_mon_avg

            ,chm.chm_lot_year_avg

            ,chm.chm_risk_lvl

            ,chm.ast_bal_td

            ,chm.wlth_bal_td

            ,chm.chm_bal_td_cur

            ,chm.chm_bal_6m_avg

            ,chm.chm_year_avg

            ,chm.chm_avg_1y

            ,ccrc.report_no

            ,ccrc.c_bank_service_num

            ,ccrc.un_sett_credit_org_num

            ,ccrc.oth_bank_loan_org_num

            ,ccrc.un_sett_loan_rzbank_num

            ,ccrc.overdue_credit_num

            ,ccrc.ccrc_score

            ,ccrc.crd_sco_last_mon

            ,ccrc.crd_sco_last_two_mon

            ,ccrc.crd_sco_last_three_mon

            ,ccrc.is_invo_fnd_in

            ,ccrc.is_pvd_fnd_cntr_fen

            ,ccrc.is_hse_loan

            ,ccrc.sgl_max_cr_amt

            ,ccrc.loan_avg_crd_lmt

            ,ccrc.living_condition

            ,ccrc.is_mtg_and_imp_lan

            ,ccrc.is_opr_lan

            ,ccrc.oth_bank_crd_1m_mtu

            ,ccrc.oth_bank_crd_3m_mtu

            ,ccrc.oth_bank_crd_6m_mtu

            ,ccrc.late_ccrc_bank_lvrg_amt

            ,ccrc.late_crd_max_min_val_rto

            ,ccrc.rsd_inf_qty_slf_mtg

            ,othpd.pd_amt

            ,othpd.pd_cnt

            ,othpd.eff_bal_pd_cnt

            ,othpd.last_end_dt

            ,othln.oth_loan_bal

            ,othln.oth_opr_bal

            ,othln.oth_csm_bal

            ,othln.oth_oth_bal

            ,othln.oth_crd_bal

            ,othln.oth_dcn_bal

            ,othln.oth_trd_bal

            ,othln.oth_lqd_bal

            ,othln.oth_fix_bal

            ,othln.other_acc_bal

            ,othln.other_open_acc_bal

            ,othln.other_mrgn_acc_bal

            ,othln.other_acc_amt

            ,othln.oth_loan_end_date

            ,othln.oth_guan_type

            ,othln.oth_corp_loan_bal

            ,othln.oth_acc_bal

            ,othln.oth_grnt_bal

            ,othln.oth_lc_amt

            ,othln.oth_lvrg_amt

            ,othln.oth_bnk_ln_num

            ,othln.oth_dbt_card_lmt

            ,othln.oth_dbt_card_bal

            ,othln.oth_dbt_card_use_rat

            ,ROW_NUMBER() over(partition by cst.cst_id,cst.date_now) as rownum

			FROM lab_bigdata_dev.idv_group_rate_sample  cst

		left join

			adm_pub.adm_csm_cbas_idv_bas_inf_dd  bas

			on cst.cst_id=bas.cst_id

			and bas.dt in (select distinct(date_now) from lab_bigdata_dev.idv_group_rate_sample)

			and bas.dt=cst.date_now

		left join

			adm_pub.adm_csm_cbus_loan_inf_dd loan

			on cst.cst_id=loan.cst_id

			and loan.dt in (select distinct(date_now) from lab_bigdata_dev.idv_group_rate_sample)

			and loan.dt=cst.date_now

		left join

			adm_pub.adm_csm_cbus_pd_hld_inf_dd hld

			on cst.cst_id=hld.cst_id

			and hld.dt in (select distinct(date_now) from lab_bigdata_dev.idv_group_rate_sample)

			and hld.dt=cst.date_now

		left join

			adm_pub.adm_csm_cbus_dep_inf_dd dep

			on cst.cst_id=dep.cst_id

			and dep.dt in (select distinct(date_now) from lab_bigdata_dev.idv_group_rate_sample)

			and dep.dt=cst.date_now

		left join

			adm_pub.adm_csm_cbus_chm_inf_dd chm

			on cst.cst_id=chm.cst_id

			and chm.dt in (select distinct(date_now) from lab_bigdata_dev.idv_group_rate_sample)

			and chm.dt=cst.date_now

		left join

			adm_pub.adm_csm_cbas_ccrc_inf_dd ccrc

			on cst.cst_id=ccrc.cst_id

			and ccrc.dt in (select distinct(date_now) from lab_bigdata_dev.idv_group_rate_sample)

			and ccrc.dt=cst.date_now

		left join

			adm_pub.adm_csm_cbas_oth_pd_inf_dd othpd

			on cst.cst_id=othpd.cst_id

			and othpd.dt in (select distinct(date_now) from lab_bigdata_dev.idv_group_rate_sample)

			and othpd.dt=cst.date_now

		left join

			adm_pub.adm_csm_cbas_oth_ln_inf_dd othln

			on cst.cst_id=othln.cst_id

			and othln.dt in (select distinct(date_now) from lab_bigdata_dev.idv_group_rate_sample)

			and othln.dt=cst.date_now

		) a

		where rownum=1

;





---print(&quot;数据集市指标任务耗时：{0:.0f}秒&quot; .format(time.time() - start_time))

---print(&quot;数据集市指标计算完成,开始计算信用卡指标&quot;)

------###---###---###end
**专题分析报告_探索.sql
select case when 授信利率 <=6 then 1 when  授信利率 <=7 then 2  when  授信利率 <=8  then 3
			  when 授信利率 <=9  then 4 when  授信利率 >9  then 5 else null end as   授信利率
		,count(*) 客户数
        ,sum(CASE  WHEN label = 1 THEN 1  END) 团办客户数
        ,CASE  WHEN count(*) > 0 THEN sum(CASE WHEN label = 1 THEN 1 END) / count(*) END AS 团办率
from lab_bigdata_dev.idv_group_rate_sample_good  t
where   t.date_now <='20231130'
group by case when 授信利率 <=6 then 1 when  授信利率 <=7 then 2  when  授信利率 <=8  then 3
			  when 授信利率 <=9  then 4 when  授信利率 >9  then 5 else null end
;

SELECT * FROM edw.dim_cst_entp_bas_inf_dd where dt='20240115';

SELECT * FROM  edw.dws_cst_bas_inf_dd where dt='20240115' and cst_id like '2%';


--企业类型
SELECT  enttypecode --企业类型码值
        ,count(*) 客户数
        ,CASE  WHEN count(*) > 0 THEN sum(CASE WHEN label = 1 THEN 1 END) / count(*) END AS 高用信客户数占比
		,sum(CASE  WHEN label = 1 THEN 1  END) 团办客户数
FROM    (
			SELECT  DISTINCT t.cst_id
							,t.date_now
							,t.label
							,T9.job_unt_nm --企业名称 可能不唯一 一个员工在多家企业上班
							,coalesce(t3.enttypecode, t4.enttypecode) enttypecode --企业类型码值
			FROM    lab_bigdata_dev.idv_group_rate_sample_good t
			LEFT JOIN    edw.dim_cst_idv_bas_inf_dd T9 --个人客户基本信息
			ON      T.cst_id = T9.cst_id
			AND     T9.dt = '20240305'
			LEFT JOIN    edw.dws_cst_bas_inf_dd T10 --客户基本信息
			ON      T9.job_unt_nm = T10.cst_chn_nm and t10.dt='20240307'
			LEFT JOIN    (
							SELECT  t . *
									,row_number() OVER ( PARTITION BY socialcreditcode ORDER BY dt DESC ) rn
							FROM    edw.nout_gs_label_total_sub t
							WHERE   dt >= '20230101'
						) t3
			ON      t10.doc_nbr = t3.socialcreditcode
			AND     t3.rn = 1
			LEFT JOIN    (
							SELECT  t . *
									,row_number() OVER ( PARTITION BY entname ORDER BY dt DESC ) rn
							FROM    edw.nout_gs_label_total_sub t
							WHERE   dt >= '20230101'
						) t4
			ON      t10.cst_chn_nm = t4.entname
			AND     t4.rn = 1
			WHERE   t.date_now <= '20231130'
			AND     LENGTH(t9.job_unt_nm) > 3
        ) t
GROUP BY enttypecode --企业类型码值
ORDER BY enttypecode --企业类型码值
;


			SELECT  DISTINCT t.cst_id
							,t.date_now
							,t.label
							,T9.job_unt_nm --企业名称 可能不唯一 一个员工在多家企业上班
							,coalesce(t3.enttypecode, t4.enttypecode) enttypecode --企业类型码值
			FROM    lab_bigdata_dev.idv_group_rate_sample_good t
			LEFT JOIN    edw.dim_cst_idv_bas_inf_dd T9 --个人客户基本信息
			ON      T.cst_id = T9.cst_id
			AND     T9.dt = '20240305'
			LEFT JOIN    edw.dws_cst_bas_inf_dd T10 --客户基本信息
			ON     INSTR(T10.cst_chn_nm,T9.job_unt_nm)>0  and t10.dt='20240307'
			LEFT JOIN    (
							SELECT  t . *
									,row_number() OVER ( PARTITION BY socialcreditcode ORDER BY dt DESC ) rn
							FROM    edw.nout_gs_label_total_sub t
							WHERE   dt >= '20230101'
						) t3
			ON      t10.doc_nbr = t3.socialcreditcode
			AND     t3.rn = 1
			LEFT JOIN    (
							SELECT  t . *
									,row_number() OVER ( PARTITION BY entname ORDER BY dt DESC ) rn
							FROM    edw.nout_gs_label_total_sub t
							WHERE   dt >= '20230101'
						) t4
			ON     INSTR(t4.entname,T9.job_unt_nm)>0
			AND     t4.rn = 1
			WHERE   t.date_now <= '20231130'
			AND     LENGTH(t9.job_unt_nm) > 3
**专题分析报告_探索2.sql
--企业类型
SELECT  enttypecode --企业类型码值
        ,count(*) 客户数
        ,CASE  WHEN count(*) > 0 THEN sum(CASE WHEN label = 1 THEN 1 END) / count(*) END AS 高用信客户数占比
		,sum(CASE  WHEN label = 1 THEN 1  END) 团办客户数
FROM    (
			SELECT  DISTINCT t.cst_id
							,t.date_now
							,t.label
							,T9.job_unt_nm --企业名称 可能不唯一 一个员工在多家企业上班
							,coalesce(t3.enttypecode, t4.enttypecode) enttypecode --企业类型码值
			FROM    lab_bigdata_dev.idv_group_rate_sample_good t
			LEFT JOIN    edw.dim_cst_idv_bas_inf_dd T9 --个人客户基本信息
			ON      T.cst_id = T9.cst_id
			AND     T9.dt = '20240305'
			LEFT JOIN    edw.dws_cst_bas_inf_dd T10 --客户基本信息
			ON      T9.job_unt_nm = T10.cst_chn_nm and t10.dt='20240307'
			LEFT JOIN    (
							SELECT  t . *
									,row_number() OVER ( PARTITION BY socialcreditcode ORDER BY dt DESC ) rn
							FROM    edw.nout_gs_label_total_sub t
							WHERE   dt >= '20230101'
						) t3
			ON      t10.doc_nbr = t3.socialcreditcode
			AND     t3.rn = 1
			LEFT JOIN    (
							SELECT  t . *
									,row_number() OVER ( PARTITION BY entname ORDER BY dt DESC ) rn
							FROM    edw.nout_gs_label_total_sub t
							WHERE   dt >= '20230101'
						) t4
			ON      t10.cst_chn_nm = t4.entname
			AND     t4.rn = 1
			WHERE   t.date_now <= '20231130'
			AND     LENGTH(t9.job_unt_nm) > 3
        ) t
GROUP BY enttypecode --企业类型码值
ORDER BY enttypecode --企业类型码值
;
**交接_交接qbi监测.sql
drop table if exists lab_bigdata_dev.jiaojie_by_pmr;
create table if not exists lab_bigdata_dev.jiaojie_by_pmr as
SELECT  t1.org_nm  --分行机构
        ,t2.sbr_org_nm  支行机构
        ,t1.account_name --工号
        ,t1.nickname --姓名
        ,count(1)                                 AS op_cnt --操作次数
        ,count(DISTINCT substr(t1.gmt_op, 1, 10)) AS op_days --操作天数
FROM    lab_bigdata_dev.qbi_user_op t1
LEFT JOIN    edw.dim_hr_org_adm_org_tree_dd t2
ON      t1.org_id = t2.org_id
AND     t2.dt = '@@{yyyyMMdd}'
WHERE   t1.dt = MAX_PT('lab_bigdata_dev.qbi_user_op')
--AND     substr(t1.gmt_op, 1, 4) IN ( '2024' ) --操作时间
and  t1.target_nm in ('信贷交接分析','信贷交接分析APP','信贷交接分析PC版')
--AND     t1.user_type IN ( '分析师' , '开发者' ) --组织角色类
GROUP BY t1.org_nm
,t2.sbr_org_nm
, t1.account_name , t1.nickname;

SELECT * FROM jiaojie_by_pmr order by op_cnt desc ;


SELECT  substr( to_char(to_date(t1.gmt_op,'yyyy-mm-dd hh:mi:ss'),'yyyymmdd'),1,6) op_month
		,'信贷交接分析' 类型
        ,count(1)                                 AS op_cnt --操作次数
FROM    lab_bigdata_dev.qbi_user_op t1
WHERE   t1.dt = MAX_PT('lab_bigdata_dev.qbi_user_op')
and  t1.target_nm in ('信贷交接分析','信贷交接分析APP','信贷交接分析PC版')
GROUP BY substr( to_char(to_date(t1.gmt_op,'yyyy-mm-dd hh:mi:ss'),'yyyymmdd'),1,6)
order by substr( to_char(to_date(t1.gmt_op,'yyyy-mm-dd hh:mi:ss'),'yyyymmdd'),1,6);


SELECT  substr( to_char(to_date(t1.gmt_op,'yyyy-mm-dd hh:mi:ss'),'yyyymmdd'),1,6) op_month
		,case when t1.target_nm in ('信贷交接分析','信贷交接分析PC版') then 'PC端' when t1.target_nm in ('信贷交接分析APP') then 'APP' END AS 类型
        ,count(1)                                 AS op_cnt --操作次数
FROM    lab_bigdata_dev.qbi_user_op t1
WHERE   t1.dt = MAX_PT('lab_bigdata_dev.qbi_user_op')
and  t1.target_nm in ('信贷交接分析','信贷交接分析APP','信贷交接分析PC版')
GROUP BY substr( to_char(to_date(t1.gmt_op,'yyyy-mm-dd hh:mi:ss'),'yyyymmdd'),1,6),case when t1.target_nm in ('信贷交接分析','信贷交接分析PC版') then 'PC端' when t1.target_nm in ('信贷交接分析APP') then 'APP' END
order by substr( to_char(to_date(t1.gmt_op,'yyyy-mm-dd hh:mi:ss'),'yyyymmdd'),1,6)



create table if not exists lab_bigdata_dev.jiaojie_by_month as
SELECT  substr( to_char(to_date(t1.gmt_op,'yyyy-mm-dd hh:mi:ss'),'yyyymmdd'),1,6) op_month
		,'信贷交接分析' 类型
        ,count(1)                                 AS op_cnt --操作次数
FROM    lab_bigdata_dev.qbi_user_op t1
WHERE   t1.dt = MAX_PT('lab_bigdata_dev.qbi_user_op')
and  t1.target_nm in ('信贷交接分析','信贷交接分析APP','信贷交接分析PC版')
GROUP BY substr( to_char(to_date(t1.gmt_op,'yyyy-mm-dd hh:mi:ss'),'yyyymmdd'),1,6)
order by substr( to_char(to_date(t1.gmt_op,'yyyy-mm-dd hh:mi:ss'),'yyyymmdd'),1,6)

union
SELECT  substr( to_char(to_date(t1.gmt_op,'yyyy-mm-dd hh:mi:ss'),'yyyymmdd'),1,6) op_month
		,case when t1.target_nm in ('信贷交接分析','信贷交接分析PC版') then 'PC端' when t1.target_nm in ('信贷交接分析APP') then 'APP' END AS 类型
        ,count(1)                                 AS op_cnt --操作次数
FROM    lab_bigdata_dev.qbi_user_op t1
WHERE   t1.dt = MAX_PT('lab_bigdata_dev.qbi_user_op')
and  t1.target_nm in ('信贷交接分析','信贷交接分析APP','信贷交接分析PC版')
GROUP BY substr( to_char(to_date(t1.gmt_op,'yyyy-mm-dd hh:mi:ss'),'yyyymmdd'),1,6),case when t1.target_nm in ('信贷交接分析','信贷交接分析PC版') then 'PC端' when t1.target_nm in ('信贷交接分析APP') then 'APP' END
order by substr( to_char(to_date(t1.gmt_op,'yyyy-mm-dd hh:mi:ss'),'yyyymmdd'),1,6)
;
**交接分析过程管理.sql
--SELECT * FROM  EDW.DWD_BUS_LOAN_MNG_MDF_RCD_DD where dt='20240725' limit 100;

drop table if exists lab_bigdata_dev.mdf_sample_process;
create table  lab_bigdata_dev.mdf_sample_process as
select  cst_id
    ,MDF_DT
    ,mdf_qorg_cd ---变更前机构代码
    ,mdf_qppl_cd ---变更前人员代码
    ,aft_mdf_org_cd ---变更后机构代码
    ,aft_mdf_ppl_cd ---变更后人员代码
	,mdf_qorg_nm ---变更前机构
   ,busi_ctr_id
   ,'交接客户' mdf_type
    ,ctr_amt as mdf_ctr_amt --，如果有多次交接，取最早一次合同的授信金额
from
	(select *
		,row_number() over(partition by cst_id order by MDF_DT asc) as ranking  --，如果有多次交接，取最早一次
	from
		(select t1.obj_id as busi_ctr_id
			,t2.cst_id
			,SUBSTR(MDF_TM, 1, 8) as MDF_DT  --变更时间
			,mdf_qorg_cd   ---变更前机构代码
			,mdf_qppl_cd  -----变更前人员代码
			,aft_mdf_org_cd  ----变更后机构代码
			,aft_mdf_ppl_cd  ----变更后人员代码
            ,mdf_qorg_nm
			,t2.ctr_amt
		from EDW.DWD_BUS_LOAN_MNG_MDF_RCD_DD t1  --管理人变更记录
		left join  edw.dim_bus_loan_ctr_inf_dd t2
		on t1.obj_id = t2.busi_ctr_id
		and t2.dt = '20240630'
		WHERE   t1.DT = '20240630'
		AND     t1.OBJ_TYP = 'Loan'
		AND     SUBSTR(t1.MDF_TM, 1, 8) >= '20231001'
		AND     SUBSTR(t1.MDF_TM, 1, 8) <= '20240630'
		and     t1.obj_id is not null
	) ss
) sss
where ranking = 1   ----全量客户226726	226725
and coalesce(cst_id,'')<>''
;
--潜在风险提示比例=潜在风险提示/交接客户  移交方式(00/本人;01/管理者分配)
--交接类型(00/交出;01/带离;02/认领) 一个客户，多笔合同，交出人系数取最大值，接手人系数取最小值？
drop table if exists lab_bigdata_dev.mdf_process_data_ft;
create table lab_bigdata_dev.mdf_process_data_ft as
select t1.cst_id
    ,mdf_qppl_cd ---变更前人员代码
	,mdf_qorg_cd ---变更前机构代码
	,mdf_qorg_nm
    ,MDF_DT
	,mdf_type
	,t3.credit_han_coefficient --交出人调整系数
	,t3. credit_take_coefficient --接收人调整系数
	, case t4.HANDOVER_TYPE when '00' then '本人' when '01' then '管理者分配' end as HANDOVER_TYPE --移交方式(00/本人;01/管理者分配)
	,case t4.SURRENDER_TYPE when '00' then '交出' when '01' then '带离' when '02' then '认领' end as SURRENDER_TYPE --交接类型(00/交出;01/带离;02/认领)
	,case when coalesce(fish.CST_ID,'') <>'' then 1 else 0 end fish_cst --是否通过小鱼管家交接
		,t13.brc_org_id	--分行层级机构编号
		,t13.brc_org_nm --分行层级机构名称
		,t13.sbr_org_id	--支行层级机构编号
		,t13.sbr_org_nm --支行层级机构名称
from lab_bigdata_dev.mdf_sample_process t1
left join (
			select task_id,cust_id,credit_han_coefficient,credit_take_coefficient,substr(create_times,1,10) create_times,ROW_NUMBER() over(partition by cust_id,substr(create_times,1,10) order by dt desc ,credit_han_coefficient desc ,credit_take_coefficient asc) rn
			from  edw.xwdt_xw_bus_han_dep_loan t3
			where t3.dt>='20231001'
			and t3.status='02' --00未确认 01已确认 02已完成
			and t3.business_type='01' --业务类型（01：贷款，02：存款）
		) t3 --权利确认表
on t1.cst_id = t3.CUST_ID

and datediff(to_date(t1.MDF_DT,'yyyymmdd'),to_date(t3.create_times,'yyyy-mm-dd'),'dd')<=30
and datediff(to_date(t1.MDF_DT,'yyyymmdd'),to_date(t3.create_times,'yyyy-mm-dd'),'dd')>=0
left join edw.xwdt_xw_bus_han_record t4 --流程记录
on t3.task_id=t4.task_id
and t4.dt='20240724'

left join lab_bigdata_dev.mdf_process_by_fish fish ----20231001--20240630通过小鱼管家交接
on  t1.cst_id = fish.CST_ID

left join edw.dim_hr_org_mng_org_tree_dd t13 --机构树考核
on t1.mdf_qorg_cd=t13.org_id and t13.dt='20240630'
where (t3.rn=1 or t3.rn is null)
;


--通过小鱼管家交接客户数占比
SELECT brc_org_nm 分行,brc_org_id
	,count(DISTINCT cst_id)  交接客户数
	,count(distinct case when fish_cst=1 then cst_id end) 通过小鱼管家交接客户数
	,count(distinct case when fish_cst=1 then cst_id end)/count(DISTINCT cst_id) 通过小鱼管家交接客户数占比
FROM mdf_process_data_ft
group by brc_org_nm,brc_org_id
order by brc_org_id;


SELECT count(*),count(DISTINCT cst_id) FROM mdf_process_by_fish;



create table lab_bigdata_dev.mdf_process_data_fish_compare as
select t1.cst_id
    ,mdf_qppl_cd ---变更前人员代码
	,mdf_qorg_cd ---变更前机构代码
	,mdf_qorg_nm
    ,MDF_DT
	,mdf_type
	,case when coalesce(fish.CST_ID,'') <>'' then 1 else 0 end fish_cst --是否通过小鱼管家交接
		,t13.brc_org_id	--分行层级机构编号
		,t13.brc_org_nm --分行层级机构名称
		,t13.sbr_org_id	--支行层级机构编号
		,t13.sbr_org_nm --支行层级机构名称
from lab_bigdata_dev.mdf_sample_process t1
left join lab_bigdata_dev.mdf_process_by_fish fish ----20231001--20240630通过小鱼管家交接
on  t1.cst_id = fish.CST_ID
left join edw.dim_hr_org_mng_org_tree_dd t13 --机构树考核
on t1.mdf_qorg_cd=t13.org_id and t13.dt='20240630'

;
--通过小鱼管家交接客户数占比
SELECT brc_org_nm 分行,brc_org_id
	,count(DISTINCT cst_id)  交接客户数
	,count(distinct case when fish_cst=1 then cst_id end) 通过小鱼管家交接客户数
	,count(distinct case when fish_cst=1 then cst_id end)/count(DISTINCT cst_id) 通过小鱼管家交接客户数占比
FROM mdf_process_data_fish_compare
group by brc_org_nm,brc_org_id
order by brc_org_id;
**取数需求_20240517埋点台州分行.sql
SELECT  t2 . *
        ,t.irr 原利率
        ,t3.rpay_mth_cd 人行还款方式
        , round(t.irr,2)-round(coalesce(t2.irr,0),2)  差距
FROM    zx_rate_result_all_di t2
LEFT JOIN    zx_rate_result_all_di_copy_20230828_to_now t  --旧表
ON      t.id = t2.id
and    t.dt > '20230828'
and t.dt<='20231231'
left join zx_rate_calculate t3
on t.id=t3.id
where     t2.irr > 1
and   t2.dt > '20230828'
and   t2.dt <='20231231'
and t2.cst_id >'1673470657'
and abs(round(t.irr,2)-round(coalesce(t2.irr,0),2))>0.2
and t.irr<=8
and t.irr>=6
order by t2.cst_id;
**取数需求_20240521存款交接.sql
--以旧表为基础

SELECT  t . *

        ,t2.irr 新利率

		,t2.rpay_mth_cd 人行还款方式

        , round(t.irr,2)-round(coalesce(t2.irr,0),2)  差距

FROM    zx_rate_result_all_di t

LEFT JOIN    zx_benxi t2

ON      t.id = t2.id

WHERE    t.dt = '20230828'

AND     t.irr > 1

and t.cst_id>'1697102735'

and abs(round(t.irr,2)-round(coalesce(t2.irr,0),2))>0.2

order by t2.cst_id;



SELECT * FROM zx_rate_calculate where id in (

'95710b9ee4ad44e4a9504283b006f92b'

)

;

SELECT * FROM zx_rate_detail where id in (

'95710b9ee4ad44e4a9504283b006f92b'

)



create table rate_check_quar_20240830_rpay as

SELECT t.* ,t2.rpay_mth_cd

FROM zx_rate_change_quar t

left join zx_youxiao t2

on t.id=t2.id;



select count(*)

from zx_rate_change_quar

where

--  rpay_mth_cd='不区分还款方式'

-- and ctr_amt=ctr_bal

-- and ctr_bal>0

-- and

report_dt='20230828'



;



SELECT * FROM

zx_rate_result_all_di_copy_20230828_to_now；





select count(distinct socialcreditcode) as 注册企业家数

	,count(DISTINCT b.cst_id) as 建档对公客户

	,count(DISTINCT case when efe_cst_ind='1' then c.cst_id end) as 有效对公户

from (

    select *

    ,ROW_NUMBER()over(partition by socialcreditcode order by dt desc) as rk

    from edw.nout_gs_label_total_sub where dt>='00000'

) as a

LEFT JOIN edw.DWS_CST_BAS_INF_DD AS b --客户基础信息汇总表

    on a.socialcreditcode=b.DOC_NBR

    and b.dt='@@{yyyyMMdd}'

left join adm_pub.adm_csm_cbas_ind_inf_dd as c --客户集市-基础信息-客户基础标识信息

on c.cst_id=b.cst_id

and c.dt='@@{yyyyMMdd}'

where a.rk='1'

-- and a.entstatuscode='1' -- 企业状态：1 再营

and (a.address rlike '高山|海口|龙田|渔溪'

or 	a.entname rlike '高山|海口|龙田|渔溪')

;
**取数需求_20240530高德POI返回率.sql
SELECT  count(t2.id)

FROM    zx_rate_result_all_di t2

LEFT JOIN    zx_rate_result_all_di_copy_20230828_to_now t  --旧表

ON      t.id = t2.id

and    t.dt > '20230828'

and t.dt<='20231231'

left join zx_rate_calculate t3

on t.id=t3.id

where     t2.irr > 1

and   t2.dt > '20230828'

and   t2.dt <='20231231'

--and t2.cst_id >'1683922617'

and abs(round(t.irr,2)-round(coalesce(t2.irr,0),2))>0.2

and t.irr<=8

and t.irr>=6

;
**取数需求_20240603_两民覆盖率.sql
ALTER TABLE lab_bigdata_dev.ADM_PBLC_CST_CRDT_INDIV_CST_IDX_DD DROP IF EXISTS PARTITION ( DT = '20240731' );

INSERT INTO lab_bigdata_dev.ADM_PBLC_CST_CRDT_INDIV_CST_IDX_DD PARTITION (DT = '20240731')
SELECT  '9999'                                                                           AS LGP_ID --法人编号|C4'
        ,T1.CRDT_RPT_NO                                                                  AS CRDT_RPT_NO -- '征信报告编号|C32'
        ,COALESCE(T2.CST_ID, '')                                                         AS CST_ID -- '客户号|C10'
        ,COALESCE(T1.CUR_DAY_LOAN_CLSS_BAL, 0) + COALESCE(T1.CUR_DAY_CR_CRD_CLSS_BAL, 0) AS CUR_DAY_TOT_LBL_BAL -- '当日总负债余额(指标Z060401_0001)|DECIMAL(21,2)'
        ,T1.CUR_DAY_LOAN_CLSS_BAL                                                        AS CUR_DAY_LOAN_CLSS_BAL -- '当日贷款类余额(指标Z060401_0002)|DECIMAL(21,2)'
        ,T1.CUR_DAY_CR_CRD_CLSS_BAL                                                      AS CUR_DAY_CR_CRD_CLSS_BAL -- '当日信用卡类余额(指标Z060401_0003)|DECIMAL(21,2)'
        ,COALESCE(T3.CUR_DAY_REL_RPAY_BAL, 0)                                            AS CUR_DAY_REL_RPAY_BAL -- '当日相关还款余额(指标Z060401_0005)|DECIMAL(21,2)'
        ,COALESCE(T3.CUR_DAY_REL_RPAY_OVD_AMT, 0)                                        AS CUR_DAY_REL_RPAY_OVD_AMT -- '当日相关还款逾期金额(指标Z040101_0001)|DECIMAL(21,2)'
        ,COALESCE(T3.CUR_DAY_REL_RPAY_LVL5_NON_NORM_BAL, 0)                              AS CUR_DAY_REL_RPAY_LVL5_NON_NORM_BAL -- '当日相关还款五级非正常余额(指标Z040101_0002)|DECIMAL(21,2)'
        ,COALESCE(T3.CUR_DAY_REL_RPAY_AMT, 0)                                            AS CUR_DAY_REL_RPAY_AMT -- '当日相关还款金额(指标Z060401_0004)|DECIMAL(21,2)'
        ,T1.CUR_DAY_LOAN_NOT_CLS_NON_TL_BNK_ORG_NUM                                      AS CUR_DAY_LOAN_NOT_CLS_NON_TL_BNK_ORG_NUM -- '当日贷款未关闭非泰隆银行机构数(指标Z060401_0006)|BIGINT'
        ,T1.CUR_DAY_LOAN_NOT_CLS_SML_AMT_LOAN_CSM_FIN_BAL                                AS CUR_DAY_LOAN_NOT_CLS_SML_AMT_LOAN_CSM_FIN_BAL -- '当日贷款未关闭小贷消金余额(指标Z060401_0007)|DECIMAL(21,2)'
        ,T1.CUR_DAY_LOAN_NOT_CLS_SML_AMT_LOAN_CSM_FIN_ACT_NUM                            AS CUR_DAY_LOAN_NOT_CLS_SML_AMT_LOAN_CSM_FIN_ACT_NUM -- '当日贷款未关闭小贷消金账户数(指标Z060401_0008)|BIGINT'
        ,COALESCE(T3.L6M_LOAN_SHD_RPMT_AVG_AMT, 0)                                       AS L6M_LOAN_SHD_RPMT_AVG_AMT -- '近6个月贷款应还款平均金额(指标Z060401_0009)|DECIMAL(21,2)'
        ,COALESCE(T3.L6M_CR_CRD_ACT_LMT_USE_RAT, 0)                                      AS L6M_CR_CRD_ACT_LMT_USE_RAT -- '近6个月贷记卡账户额度使用率(指标Z060401_0010)|DECIMAL(21,2)'
        ,COALESCE(T13.CUR_DAY_LOAN_CLSS_FACL_AMT, 0)                                      AS CUR_DAY_LOAN_CLSS_FACL_AMT -- '当日贷款类授信金额(指标Z060401_0011)|DECIMAL(21,2)'
        ,COALESCE(T4.CUR_DAY_CR_LOAN_BNK_FACL_HGST_AMT, 0)                               AS CUR_DAY_CR_LOAN_BNK_FACL_HGST_AMT -- '当日信用贷款银行授信最高金额(指标Z060401_0012)|DECIMAL(21,2)'
        ,COALESCE(T4.CUR_DAY_GRNTE_LOAN_BNK_FACL_HGST_AMT, 0)                            AS CUR_DAY_GRNTE_LOAN_BNK_FACL_HGST_AMT -- '当日保证贷款银行授信最高金额(指标Z060401_0013)|DECIMAL(21,2)'
        ,COALESCE(T4.CUR_DAY_NON_HS_MORT_LOAN_BNK_FACL_HGST_AMT, 0)                      AS CUR_DAY_NON_HS_MORT_LOAN_BNK_FACL_HGST_AMT -- '当日非房抵押贷款银行授信最高金额(指标Z060401_0014)|DECIMAL(21,2)'
        ,COALESCE(T4.CUR_DAY_CR_LOAN_BNK_FACL_AVG_AMT, 0)                                AS CUR_DAY_CR_LOAN_BNK_FACL_AVG_AMT -- '当日信用贷款银行授信平均金额(指标Z060401_0015)|DECIMAL(21,2)'
        ,COALESCE(T4.CUR_DAY_GRNTE_LOAN_BNK_FACL_AVG_AMT, 0)                             AS CUR_DAY_GRNTE_LOAN_BNK_FACL_AVG_AMT -- '当日保证贷款银行授信平均金额(指标Z060401_0016)|DECIMAL(21,2)'
        ,COALESCE(T4.CUR_DAY_NON_HS_MORT_LOAN_BNK_FACL_AVG_AMT, 0)                       AS CUR_DAY_NON_HS_MORT_LOAN_BNK_FACL_AVG_AMT -- '当日非房抵押贷款银行授信平均金额(指标Z060401_0017)|DECIMAL(21,2)'
        ,T1.CUR_DAY_OVD_EXCD_ONE_MON_AMT                                                 AS CUR_DAY_OVD_EXCD_ONE_MON_AMT -- '当日逾期超一个月金额(指标Z040101_0003)|DECIMAL(21,2)'
        ,COALESCE(T5.L60M_OVD_EXCD_ONE_MON_ACT_NUM, 0)                                   AS L60M_OVD_EXCD_ONE_MON_ACT_NUM -- '近60个月逾期超一个月账户数(指标Z040101_0004)|DECIMAL(21,2)'
        ,COALESCE(T5.L60M_OVD_EXCD_ONE_MON_SNGL_MON_MAX_AMT, 0)                          AS L60M_OVD_EXCD_ONE_MON_SNGL_MON_MAX_AMT -- '近60个月逾期超一个月单月最大金额(指标Z040101_0005)|DECIMAL(21,2)'
        ,COALESCE(T5.L60M_OVD_EXCD_ONE_MON_PERD_NUM_MAX_VAL, 0)                          AS L60M_OVD_EXCD_ONE_MON_PERD_NUM_MAX_VAL -- '近60个月逾期超一个月期数最大值(指标Z040101_0006)|DECIMAL(21,2)'
        ,COALESCE(T6.L1M_APRV_QRY_TMS, 0)                                                AS L1M_APRV_QRY_TMS -- '近1个月审批查询次数(指标Z060401_0018)|BIGINT'
        ,COALESCE(T6.L3M_APRV_QRY_TMS, 0)                                                AS L3M_APRV_QRY_TMS -- '近3个月审批查询次数(指标Z060401_0019)|BIGINT'
        ,COALESCE(T6.L6M_APRV_QRY_TMS, 0)                                                AS L6M_APRV_QRY_TMS -- '近6个月审批查询次数(指标Z060401_0020)|BIGINT'
        ,COALESCE(T6.L12M_APRV_QRY_TMS, 0)                                               AS L12M_APRV_QRY_TMS -- '近12个月审批查询次数(指标Z060401_0021)|BIGINT'
        ,COALESCE(T6.L24M_APRV_QRY_TMS, 0)                                               AS L24M_APRV_QRY_TMS -- '近24个月审批查询次数(指标Z060401_0022)|BIGINT'
        ,COALESCE(T6.L1M_APRV_QRY_ORG_NUM, 0)                                            AS L1M_APRV_QRY_ORG_NUM -- '近1个月审批查询机构数(指标Z060401_0023)|BIGINT'
        ,COALESCE(T6.L3M_APRV_QRY_ORG_NUM, 0)                                            AS L3M_APRV_QRY_ORG_NUM -- '近3个月审批查询机构数(指标Z060401_0024)|BIGINT'
        ,COALESCE(T6.L6M_APRV_QRY_ORG_NUM, 0)                                            AS L6M_APRV_QRY_ORG_NUM -- '近6个月审批查询机构数(指标Z060401_0025)|BIGINT'
        ,COALESCE(T6.L12M_APRV_QRY_ORG_NUM, 0)                                           AS L12M_APRV_QRY_ORG_NUM -- '近12个月审批查询机构数(指标Z060401_0026)|BIGINT'
        ,COALESCE(T6.L24M_APRV_QRY_ORG_NUM, 0)                                           AS L24M_APRV_QRY_ORG_NUM -- '近24个月审批查询机构数(指标Z060401_0027)|BIGINT'
        ,COALESCE(T6.L12M_LOAN_APRV_QRY_TMS, 0)                                          AS L12M_LOAN_APRV_QRY_TMS -- '近12个月贷款审批查询次数(指标Z060401_0028)|BIGINT'
        ,COALESCE(T6.L12M_CR_CRD_APRV_QRY_TMS, 0)                                        AS L12M_CR_CRD_APRV_QRY_TMS -- '近12个月信用卡审批查询次数(指标Z060401_0029)|BIGINT'
        ,COALESCE(T6.L12M_GRNT_QUA_EXMN_QRY_TMS, 0)                                      AS L12M_GRNT_QUA_EXMN_QRY_TMS -- '近12个月担保资格审查查询次数(指标Z060401_0030)|BIGINT'
        ,T1.CUR_DAY_LOAN_CLSS_NON_HS_LOAN_BAL                                            AS CUR_DAY_LOAN_CLSS_NON_HS_LOAN_BAL -- '当日贷款类非房贷余额(指标Z060401_0049)|DECIMAL(21,2)'
        ,T1.CUR_DAY_LOAN_CLSS_BNK_ORG_BAL                                                AS CUR_DAY_LOAN_CLSS_BNK_ORG_BAL -- '当日贷款类银行机构余额(指标Z060401_0050)|DECIMAL(21,2)'
        ,T1.CUR_DAY_LOAN_CLSS_GT_ZR_ORG_NUM                                              AS CUR_DAY_LOAN_CLSS_GT_ZR_ORG_NUM -- '当日贷款类大于0机构数(指标Z060401_0051)|BIGINT'
        ,T1.CUR_DAY_LOAN_CLSS_GT_ZR_BNK_ORG_NUM                                          AS CUR_DAY_LOAN_CLSS_GT_ZR_BNK_ORG_NUM -- '当日贷款类大于0银行机构数(指标Z060401_0052)|BIGINT'
        ,T1.CUR_DAY_NORM_LOAN_GT_ZR_SML_AMT_LOAN_CSM_FIN_ORG_NUM                         AS CUR_DAY_NORM_LOAN_GT_ZR_SML_AMT_LOAN_CSM_FIN_ORG_NUM -- '当日正常贷款大于0小贷消金机构数(指标Z060401_0053)|BIGINT'
        ,T1.CUR_DAY_CR_CRD_GT_ZR_ORG_NUM                                                 AS CUR_DAY_CR_CRD_GT_ZR_ORG_NUM -- '当日信用卡大于0机构数(指标Z060401_0054)|BIGINT'
        ,COALESCE(T3.CUR_DAY_REL_RPAY_RSPBL_ACT_NUM, 0)                                  AS CUR_DAY_REL_RPAY_RSPBL_ACT_NUM -- '当日相关还款责任账户数(指标Z060401_0055)|BIGINT'
        ,COALESCE(T5.L1M_OVD_EXCD_ONE_MON_ACT_NUM, 0)                                    AS L1M_OVD_EXCD_ONE_MON_ACT_NUM -- '近1个月逾期超一个月账户数(指标Z040101_0023)|BIGINT'
        ,COALESCE(T5.L1M_OVD_EXCD_ONE_MON_AMT, 0)                                        AS L1M_OVD_EXCD_ONE_MON_AMT -- '近1个月逾期超一个月金额(指标Z040101_0024)|DECIMAL(21,2)'
        ,COALESCE(T5.PAST_MON2_OVD_EXCD_ONE_MON_ACT_NUM, 0)                              AS PAST_MON2_OVD_EXCD_ONE_MON_ACT_NUM -- '过去第2个月逾期超一个月账户数(指标Z040101_0025)|BIGINT'
        ,COALESCE(T5.PAST_MON2_OVD_EXCD_ONE_MON_AMT, 0)                                  AS PAST_MON2_OVD_EXCD_ONE_MON_AMT -- '过去第2个月逾期超一个月金额(指标Z040101_0026)|DECIMAL(21,2)'
        ,COALESCE(T5.PAST_MON3_OVD_EXCD_ONE_MON_ACT_NUM, 0)                              AS PAST_MON3_OVD_EXCD_ONE_MON_ACT_NUM -- '过去第3个月逾期超一个月账户数(指标Z040101_0027)|BIGINT'
        ,COALESCE(T5.PAST_MON3_OVD_EXCD_ONE_MON_AMT, 0)                                  AS PAST_MON3_OVD_EXCD_ONE_MON_AMT -- '过去第3个月逾期超一个月金额(指标Z040101_0028)|DECIMAL(21,2)'
        ,COALESCE(T5.PAST_MON4_OVD_EXCD_ONE_MON_ACT_NUM, 0)                              AS PAST_MON4_OVD_EXCD_ONE_MON_ACT_NUM -- '过去第4个月逾期超一个月账户数(指标Z040101_0029)|BIGINT'
        ,COALESCE(T5.PAST_MON4_OVD_EXCD_ONE_MON_AMT, 0)                                  AS PAST_MON4_OVD_EXCD_ONE_MON_AMT -- '过去第4个月逾期超一个月金额(指标Z040101_0030)|DECIMAL(21,2)'
        ,COALESCE(T5.PAST_MON5_OVD_EXCD_ONE_MON_ACT_NUM, 0)                              AS PAST_MON5_OVD_EXCD_ONE_MON_ACT_NUM -- '过去第5个月逾期超一个月账户数(指标Z040101_0031)|BIGINT'
        ,COALESCE(T5.PAST_MON5_OVD_EXCD_ONE_MON_AMT, 0)                                  AS PAST_MON5_OVD_EXCD_ONE_MON_AMT -- '过去第5个月逾期超一个月金额(指标Z040101_0032)|DECIMAL(21,2)'
        ,COALESCE(T5.PAST_MON6_OVD_EXCD_ONE_MON_ACT_NUM, 0)                              AS PAST_MON6_OVD_EXCD_ONE_MON_ACT_NUM -- '过去第6个月逾期超一个月账户数(指标Z040101_0033)|BIGINT'
        ,COALESCE(T5.PAST_MON6_OVD_EXCD_ONE_MON_AMT, 0)                                  AS PAST_MON6_OVD_EXCD_ONE_MON_AMT -- '过去第6个月逾期超一个月金额(指标Z040101_0034)|DECIMAL(21,2)'
        ,COALESCE(T5.PAST_MON7_OVD_EXCD_ONE_MON_ACT_NUM, 0)                              AS PAST_MON7_OVD_EXCD_ONE_MON_ACT_NUM -- '过去第7个月逾期超一个月账户数(指标Z040101_0035)|BIGINT'
        ,COALESCE(T5.PAST_MON7_OVD_EXCD_ONE_MON_AMT, 0)                                  AS PAST_MON7_OVD_EXCD_ONE_MON_AMT -- '过去第7个月逾期超一个月金额(指标Z040101_0036)|DECIMAL(21,2)'
        ,COALESCE(T5.PAST_MON8_OVD_EXCD_ONE_MON_ACT_NUM, 0)                              AS PAST_MON8_OVD_EXCD_ONE_MON_ACT_NUM -- '过去第8个月逾期超一个月账户数(指标Z040101_0037)|BIGINT'
        ,COALESCE(T5.PAST_MON8_OVD_EXCD_ONE_MON_AMT, 0)                                  AS PAST_MON8_OVD_EXCD_ONE_MON_AMT -- '过去第8个月逾期超一个月金额(指标Z040101_0038)|DECIMAL(21,2)'
        ,COALESCE(T5.PAST_MON9_OVD_EXCD_ONE_MON_ACT_NUM, 0)                              AS PAST_MON9_OVD_EXCD_ONE_MON_ACT_NUM -- '过去第9个月逾期超一个月账户数(指标Z040101_0039)|BIGINT'
        ,COALESCE(T5.PAST_MON9_OVD_EXCD_ONE_MON_AMT_CNT, 0)                              AS PAST_MON9_OVD_EXCD_ONE_MON_AMT_CNT -- '过去第9个月逾期超一个月金额计数(指标Z040101_0040)|DECIMAL(21,2)'
        ,COALESCE(T5.PAST_MON10_OVD_EXCD_ONE_MON_ACT_NUM, 0)                             AS PAST_MON10_OVD_EXCD_ONE_MON_ACT_NUM -- '过去第10个月逾期超一个月账户数(指标Z040101_0041)|BIGINT'
        ,COALESCE(T5.PAST_MON10_OVD_EXCD_ONE_MON_AMT, 0)                                 AS PAST_MON10_OVD_EXCD_ONE_MON_AMT -- '过去第10个月逾期超一个月金额(指标Z040101_0042)|DECIMAL(21,2)'
        ,COALESCE(T5.PAST_MON11_OVD_EXCD_ONE_MON_ACT_NUM, 0)                             AS PAST_MON11_OVD_EXCD_ONE_MON_ACT_NUM -- '过去第11个月逾期超一个月账户数(指标Z040101_0043)|BIGINT'
        ,COALESCE(T5.PAST_MON11_OVD_EXCD_ONE_MON_AMT, 0)                                 AS PAST_MON11_OVD_EXCD_ONE_MON_AMT -- '过去第11个月逾期超一个月金额(指标Z040101_0044)|DECIMAL(21,2)'
        ,COALESCE(T5.PAST_MON12_OVD_EXCD_ONE_MON_ACT_NUM, 0)                             AS PAST_MON12_OVD_EXCD_ONE_MON_ACT_NUM -- '过去第12个月逾期超一个月账户数(指标Z040101_0045)|BIGINT'
        ,COALESCE(T5.PAST_MON12_OVD_EXCD_ONE_MON_AMT, 0)                                 AS PAST_MON12_OVD_EXCD_ONE_MON_AMT -- '过去第12个月逾期超一个月金额(指标Z040101_0046)|DECIMAL(21,2)'
        ,COALESCE(T5.PAST_MON13_OVD_EXCD_ONE_MON_ACT_NUM, 0)                             AS PAST_MON13_OVD_EXCD_ONE_MON_ACT_NUM -- '过去第13个月逾期超一个月账户数(指标Z040101_0047)|BIGINT'
        ,COALESCE(T5.PAST_MON13_OVD_EXCD_ONE_MON_AMT, 0)                                 AS PAST_MON13_OVD_EXCD_ONE_MON_AMT -- '过去第13个月逾期超一个月金额(指标Z040101_0048)|DECIMAL(21,2)'
        ,COALESCE(T5.PAST_MON14_OVD_EXCD_ONE_MON_ACT_NUM, 0)                             AS PAST_MON14_OVD_EXCD_ONE_MON_ACT_NUM -- '过去第14个月逾期超一个月账户数(指标Z040101_0049)|BIGINT'
        ,COALESCE(T5.PAST_MON14_OVD_EXCD_ONE_MON_AMT, 0)                                 AS PAST_MON14_OVD_EXCD_ONE_MON_AMT -- '过去第14个月逾期超一个月金额(指标Z040101_0050)|DECIMAL(21,2)'
        ,COALESCE(T5.PAST_MON15_OVD_EXCD_ONE_MON_ACT_NUM, 0)                             AS PAST_MON15_OVD_EXCD_ONE_MON_ACT_NUM -- '过去第15个月逾期超一个月账户数(指标Z040101_0051)|BIGINT'
        ,COALESCE(T5.PAST_MON15_OVD_EXCD_ONE_MON_AMT, 0)                                 AS PAST_MON15_OVD_EXCD_ONE_MON_AMT -- '过去第15个月逾期超一个月金额(指标Z040101_0052)|DECIMAL(21,2)'
        ,COALESCE(T5.PAST_MON16_OVD_EXCD_ONE_MON_ACT_NUM, 0)                             AS PAST_MON16_OVD_EXCD_ONE_MON_ACT_NUM -- '过去第16个月逾期超一个月账户数(指标Z040101_0053)|BIGINT'
        ,COALESCE(T5.PAST_MON16_OVD_EXCD_ONE_MON_AMT, 0)                                 AS PAST_MON16_OVD_EXCD_ONE_MON_AMT -- '过去第16个月逾期超一个月金额(指标Z040101_0054)|DECIMAL(21,2)'
        ,COALESCE(T5.PAST_MON17_OVD_EXCD_ONE_MON_ACT_NUM, 0)                             AS PAST_MON17_OVD_EXCD_ONE_MON_ACT_NUM -- '过去第17个月逾期超一个月账户数(指标Z040101_0055)|BIGINT'
        ,COALESCE(T5.PAST_MON17_OVD_EXCD_ONE_MON_AMT, 0)                                 AS PAST_MON17_OVD_EXCD_ONE_MON_AMT -- '过去第17个月逾期超一个月金额(指标Z040101_0056)|DECIMAL(21,2)'
        ,COALESCE(T5.PAST_MON18_OVD_EXCD_ONE_MON_ACT_NUM, 0)                             AS PAST_MON18_OVD_EXCD_ONE_MON_ACT_NUM -- '过去第18个月逾期超一个月账户数(指标Z040101_0057)|BIGINT'
        ,COALESCE(T5.PAST_MON18_OVD_EXCD_ONE_MON_AMT, 0)                                 AS PAST_MON18_OVD_EXCD_ONE_MON_AMT -- '过去第18个月逾期超一个月金额(指标Z040101_0058)|DECIMAL(21,2)'
        ,COALESCE(T5.PAST_MON19_OVD_EXCD_ONE_MON_ACT_NUM, 0)                             AS PAST_MON19_OVD_EXCD_ONE_MON_ACT_NUM -- '过去第19个月逾期超一个月账户数(指标Z040101_0059)|BIGINT'
        ,COALESCE(T5.PAST_MON19_OVD_EXCD_ONE_MON_AMT, 0)                                 AS PAST_MON19_OVD_EXCD_ONE_MON_AMT -- '过去第19个月逾期超一个月金额(指标Z040101_0060)|DECIMAL(21,2)'
        ,COALESCE(T5.PAST_MON20_OVD_EXCD_ONE_MON_ACT_NUM, 0)                             AS PAST_MON20_OVD_EXCD_ONE_MON_ACT_NUM -- '过去第20个月逾期超一个月账户数(指标Z040101_0061)|BIGINT'
        ,COALESCE(T5.PAST_MON20_OVD_EXCD_ONE_MON_AMT, 0)                                 AS PAST_MON20_OVD_EXCD_ONE_MON_AMT -- '过去第20个月逾期超一个月金额(指标Z040101_0062)|DECIMAL(21,2)'
        ,COALESCE(T5.PAST_MON21_OVD_EXCD_ONE_MON_ACT_NUM, 0)                             AS PAST_MON21_OVD_EXCD_ONE_MON_ACT_NUM -- '过去第21个月逾期超一个月账户数(指标Z040101_0063)|BIGINT'
        ,COALESCE(T5.PAST_MON21_OVD_EXCD_ONE_MON_AMT, 0)                                 AS PAST_MON21_OVD_EXCD_ONE_MON_AMT -- '过去第21个月逾期超一个月金额(指标Z040101_0064)|DECIMAL(21,2)'
        ,COALESCE(T5.PAST_MON22_OVD_EXCD_ONE_MON_ACT_NUM, 0)                             AS PAST_MON22_OVD_EXCD_ONE_MON_ACT_NUM -- '过去第22个月逾期超一个月账户数(指标Z040101_0065)|BIGINT'
        ,COALESCE(T5.PAST_MON22_OVD_EXCD_ONE_MON_AMT, 0)                                 AS PAST_MON22_OVD_EXCD_ONE_MON_AMT -- '过去第22个月逾期超一个月金额(指标Z040101_0066)|DECIMAL(21,2)'
        ,COALESCE(T5.PAST_MON23_OVD_EXCD_ONE_MON_ACT_NUM, 0)                             AS PAST_MON23_OVD_EXCD_ONE_MON_ACT_NUM -- '过去第23个月逾期超一个月账户数(指标Z040101_0067)|BIGINT'
        ,COALESCE(T5.PAST_MON23_OVD_EXCD_ONE_MON_AMT, 0)                                 AS PAST_MON23_OVD_EXCD_ONE_MON_AMT -- '过去第23个月逾期超一个月金额(指标Z040101_0068)|DECIMAL(21,2)'
        ,T1.CUR_DAY_NON_HS_LOAN_BNK_BAL                                                  AS CUR_DAY_NON_HS_LOAN_BNK_BAL -- '当日非房贷银行余额(指标Z060401_0056)|DECIMAL(21,2)'
        ,T1.CUR_DAY_NON_HS_LOAN_GT_ZR_BNK_NUM                                            AS CUR_DAY_NON_HS_LOAN_GT_ZR_BNK_NUM -- '当日非房贷大于0银行数(指标Z060401_0057)|BIGINT'
        ,T1.CUR_DAY_NON_HS_LOAN_GT_ZR_ORG_NUM                                            AS CUR_DAY_NON_HS_LOAN_GT_ZR_ORG_NUM -- '当日非房贷大于0机构数(指标Z060401_0101)|BIGINT'
        ,CASE
           WHEN T7.CST_ID IS not NULL THEN  T1.CUR_DAY_NON_HS_LOAN_NOT_CLS_NON_TL_TOT_BAL - COALESCE(T7.CUR_DAY_NON_HS_LOAN_NOT_CLS_NON_TL_TOT_BAL, 0)
         END                                                                             AS CUR_DAY_NON_HS_LOAN_NOT_CLS_NON_TL_TOT_BAL -- '当日非房贷未关闭非泰隆总余额(指标 S000360 )|DECIMAL(21,2)'
        ,T1.DT                                                                           AS DATA_DT --数据日期
FROM    lab_bigdata_dev.TMP_ADM_PBLC_CST_CRDT_INDIV_CST_IDX_DD_01 T1
LEFT JOIN    edw.DWS_CST_CCRC_IDV_IND_INF_DI T2 --个人征信指标信息表
ON      T1.CRDT_RPT_NO = T2.REPORT_NO --征信报告编号
AND     T2.DT <= '20240731'
LEFT JOIN    lab_bigdata_dev.TMP_ADM_PBLC_CST_CRDT_INDIV_CST_IDX_DD_05 T3
ON      T1.CRDT_RPT_NO = T3.REPORT_ID
LEFT JOIN    lab_bigdata_dev.TMP_ADM_PBLC_CST_CRDT_INDIV_CST_IDX_DD_04 T4
ON      T1.CRDT_RPT_NO = T4.REPORT_ID
LEFT JOIN    lab_bigdata_dev.TMP_ADM_PBLC_CST_CRDT_INDIV_CST_IDX_DD_02 T5
ON      T1.CRDT_RPT_NO = T5.CRDT_RPT_NO
LEFT JOIN    lab_bigdata_dev.TMP_ADM_PBLC_CST_CRDT_INDIV_CST_IDX_DD_03 T6
ON      T1.CRDT_RPT_NO = T6.REPORT_ID
LEFT JOIN    (
                 SELECT  CRDT_RPT_NO
                         ,CST_ID
                         ,CUR_DAY_NON_HS_LOAN_NOT_CLS_NON_TL_TOT_BAL
                         ,ROW_NUMBER() OVER ( PARTITION BY CST_ID ORDER BY CRDT_RPT_NO DESC ) AS RN
                 FROM    lab_bigdata_dev.ADM_PBLC_CST_CRDT_INDIV_CST_IDX_DD --取3-6月的客户第一笔的贷款余额
                 WHERE   DT <= '20240430'
                 AND     DT >= '20240131'
                 AND     COALESCE(CST_ID, '') <> ''
             ) T7
ON      COALESCE(T1.CST_ID, '') = T7.CST_ID
AND     T7.RN = '1'
left join    (
                        SELECT  REPORT_ID --征信报告编号
        ,COALESCE(SUM(AGM_CREDIT_QUOTA_LOAN_AMT), 0) AS CUR_DAY_LOAN_CLSS_FACL_AMT --当日贷款类授信金额
      from lab_bigdata_dev.TMP_ADM_PBLC_NCIP_CP_M_ACCOUNT_INFO_02 --借贷信息表

                        GROUP BY REPORT_ID

			)t13
ON      T1.CRDT_RPT_NO = T13.REPORT_ID
;

drop table test_ft;
create table test_ft as
select
    CRDT_RPT_NO                                          征信报告编号32
    ,t.CST_ID                                               客户号10
    ,CUR_DAY_TOT_LBL_BAL                                  当日总负债余额_指标Z060401_0001
    ,CUR_DAY_LOAN_CLSS_BAL                                当日贷款类余额_指标Z060401_0002
    ,CUR_DAY_CR_CRD_CLSS_BAL                              当日信用卡类余额_指标Z060401_0003

    ,L6M_LOAN_SHD_RPMT_AVG_AMT                            近6个月贷款应还款平均金额_指标Z060401_0009
    ,L6M_CR_CRD_ACT_LMT_USE_RAT                           近6个月贷记卡账户额度使用率_指标Z060401_0010
    ,CUR_DAY_LOAN_CLSS_FACL_AMT                           当日贷款类授信金额_指标Z060401_0011
    ,CUR_DAY_CR_LOAN_BNK_FACL_HGST_AMT                    当日信用贷款银行授信最高金额_指标Z060401_0012
    ,CUR_DAY_GRNTE_LOAN_BNK_FACL_HGST_AMT                 当日保证贷款银行授信最高金额_指标Z060401_0013
    ,CUR_DAY_NON_HS_MORT_LOAN_BNK_FACL_HGST_AMT           当日非房抵押贷款银行授信最高金额_指标Z060401_0014
    ,CUR_DAY_CR_LOAN_BNK_FACL_AVG_AMT                     当日信用贷款银行授信平均金额_指标Z060401_0015
    ,CUR_DAY_GRNTE_LOAN_BNK_FACL_AVG_AMT                  当日保证贷款银行授信平均金额_指标Z060401_0016
    ,CUR_DAY_NON_HS_MORT_LOAN_BNK_FACL_AVG_AMT            当日非房抵押贷款银行授信平均金额_指标Z060401_0017

    ,CUR_DAY_LOAN_CLSS_NON_HS_LOAN_BAL                    当日贷款类非房贷余额_指标Z060401_0049
    ,CUR_DAY_LOAN_CLSS_BNK_ORG_BAL                        当日贷款类银行机构余额_指标Z060401_0050
    ,CUR_DAY_LOAN_CLSS_GT_ZR_ORG_NUM                      当日贷款类大于0机构数_指标Z060401_0051
    ,CUR_DAY_LOAN_CLSS_GT_ZR_BNK_ORG_NUM                  当日贷款类大于0银行机构数_指标Z060401_0052
    ,CUR_DAY_NORM_LOAN_GT_ZR_SML_AMT_LOAN_CSM_FIN_ORG_NUM 当日正常贷款大于0小贷消金机构数_指标Z060401_0053
    ,CUR_DAY_CR_CRD_GT_ZR_ORG_NUM                         当日信用卡大于0机构数_指标Z060401_0054
    ,CUR_DAY_REL_RPAY_RSPBL_ACT_NUM                       当日相关还款责任账户数_指标Z060401_0055

    ,CUR_DAY_NON_HS_LOAN_BNK_BAL                          当日非房贷银行余额_指标Z060401_0056
    ,CUR_DAY_NON_HS_LOAN_GT_ZR_BNK_NUM                    当日非房贷大于0银行数_指标Z060401_0057
    ,CUR_DAY_NON_HS_LOAN_GT_ZR_ORG_NUM                    当日非房贷大于0机构数_指标Z060401_0101

  ,报告当日总负债_个人征信
				, 客户当日贷款及大额专项分期卡余额求和_个人征信
				, 客户当日信用卡不含大额专项分期卡余额求和_个人征信
				,报告当日贷款类_不含房贷_余额求和_个人征信
				, 报告当日贷款类银行机构余额求和_个人征信
				, 报告当日贷款类_不含房贷_银行机构余额求和_个人征信

				, 报告当日贷款类余额大于0机构数计数_个人征信
				, 报告当日贷款类_不含房贷_机构数计数_个人征信 --报告当日贷款类_不含房贷_余额大于0机构数计数_个人征信
				, 报告当日贷款类余额大于0且银行机构机构数计数_个人征信
				, 报告当日贷款类正常存续余额大于0且小贷消金机构数计数_个人征信 --24:消费金融公司 51:小额贷款公司
				,报告当日信用卡类余额大于0机构数计数_个人征信

				,报告当日贷款类_不含房贷_余额大于0且银行机构机构数计数_个人征信
		,客户当日贷款未结清不含泰隆银行数计数_个人征信 --借贷账户_贷款账户_未关闭银行机构-非我行_机构数
		,客户当日贷款小额贷款及消费金融公司账户数计数_个人征信 --借贷账户_贷款账户_未关闭小贷消金_账户数
		,客户当日贷款小额贷款及消费金融公司余额求和_个人征信  --贷账户_贷款账户_未关闭小贷消金_总余额
		,t2.客户当日贷款及大额专项分期卡授信金额求和_个人征信
		,t2.客户当日信用类贷款单家银行授信金额最大值_个人征信
		,t2.客户当日保证类贷款单家银行授信金额最大值_个人征信
		,t2.客户当日抵押类贷款_不含房贷_单家银行授信金额最大值_个人征信
		,t2.客户当日信用类贷款单家银行授信金额平均值_个人征信
		,t2.客户当日保证类贷款单家银行授信金额平均值_个人征信
		,t2.客户当日抵押类贷款_不含房贷_单家银行授信金额平均值_个人征信

  -- ,客户当日贷款及大额专项分期卡余额求和_个人征信
-- ,客户当日信用卡不含大额专项分期卡余额求和_个人征信
-- ,客户当日相关还款责任余额求和_个人征信
-- ,客户当日相关还款责任逾期金额求和_个人征信
-- ,客户当日相关还款责任非正常余额求和_个人征信
-- ,客户当日相关还款责任金额求和_个人征信
-- ,客户当日相关还款责任账户数求和_个人征信
-- ,客户当日贷款未结清不含泰隆银行数计数_个人征信
-- ,客户当日贷款小额贷款及消费金融公司余额求和_个人征信
-- ,客户当日贷款小额贷款及消费金融公司账户数计数_个人征信
-- ,客户近6个月贷款平均应还款额平均值_个人征信
-- ,客户近6个月贷记卡平均透支率_个人征信
-- ,客户当日贷款及大额专项分期卡授信金额求和_个人征信
-- ,客户当日信用类贷款单家银行授信金额最大值_个人征信
-- ,客户当日保证类贷款单家银行授信金额最大值_个人征信
-- ,客户当日抵押类贷款_不含房贷_单家银行授信金额最大值_个人征信
-- ,客户当日信用类贷款单家银行授信金额平均值_个人征信
-- ,客户当日保证类贷款单家银行授信金额平均值_个人征信
-- ,客户当日抵押类贷款_不含房贷_单家银行授信金额平均值_个人征信

from lab_bigdata_dev.ADM_PBLC_CST_CRDT_INDIV_CST_IDX_DD t
left join lab_bigdata_dev.max_report_zhengxin_geren_01 t2
on t.CRDT_RPT_NO=t2.report_id
where t.dt=20240731
;

select 征信报告编号32,客户号10,当日总负债余额_指标Z060401_0001,报告当日总负债_个人征信
,    当日贷款类余额_指标Z060401_0002,客户当日贷款及大额专项分期卡余额求和_个人征信
,    当日信用卡类余额_指标Z060401_0003,客户当日信用卡不含大额专项分期卡余额求和_个人征信
   --          近6个月贷款应还款平均金额_指标Z060401_0009
    --       近6个月贷记卡账户额度使用率_指标Z060401_0010
    , 当日贷款类授信金额_指标Z060401_0011,客户当日贷款及大额专项分期卡授信金额求和_个人征信
    , 当日信用贷款银行授信最高金额_指标Z060401_0012,客户当日信用类贷款单家银行授信金额最大值_个人征信
    , 当日保证贷款银行授信最高金额_指标Z060401_0013,客户当日保证类贷款单家银行授信金额最大值_个人征信
    , 当日非房抵押贷款银行授信最高金额_指标Z060401_0014,客户当日抵押类贷款_不含房贷_单家银行授信金额最大值_个人征信
    ,                  当日信用贷款银行授信平均金额_指标Z060401_0015,客户当日信用类贷款单家银行授信金额平均值_个人征信
    ,                 当日保证贷款银行授信平均金额_指标Z060401_0016,客户当日保证类贷款单家银行授信金额平均值_个人征信
    ,         当日非房抵押贷款银行授信平均金额_指标Z060401_0017,客户当日抵押类贷款_不含房贷_单家银行授信金额平均值_个人征信
    ,                当日贷款类非房贷余额_指标Z060401_0049,报告当日贷款类_不含房贷_余额求和_个人征信
     ,                        当日贷款类银行机构余额_指标Z060401_0050,报告当日贷款类银行机构余额求和_个人征信
     ,                    当日贷款类大于0机构数_指标Z060401_0051,报告当日贷款类余额大于0机构数计数_个人征信
     ,                 当日贷款类大于0银行机构数_指标Z060401_0052,报告当日贷款类余额大于0且银行机构机构数计数_个人征信
     , 当日正常贷款大于0小贷消金机构数_指标Z060401_0053,报告当日贷款类正常存续余额大于0且小贷消金机构数计数_个人征信 --24:消费金融公司 51:小额贷款公司
     ,                       当日信用卡大于0机构数_指标Z060401_0054,报告当日信用卡类余额大于0机构数计数_个人征信
    --,CUR_DAY_REL_RPAY_RSPBL_ACT_NUM                       当日相关还款责任账户数_指标Z060401_0055  ,
     ,                          当日非房贷银行余额_指标Z060401_0056,报告当日贷款类_不含房贷_银行机构余额求和_个人征信
     ,                 当日非房贷大于0银行数_指标Z060401_0057,报告当日贷款类_不含房贷_余额大于0且银行机构机构数计数_个人征信
    ,              当日非房贷大于0机构数_指标Z060401_0101,报告当日贷款类_不含房贷_机构数计数_个人征信 --报告当日贷款类_不含房贷_余额大于0机构数计数_个人征信
from test_ft
where 征信报告编号32='2024073100091368284233' and (
      当日总负债余额_指标Z060401_0001<>报告当日总负债_个人征信
or    当日贷款类余额_指标Z060401_0002<>客户当日贷款及大额专项分期卡余额求和_个人征信
or    当日信用卡类余额_指标Z060401_0003<>客户当日信用卡不含大额专项分期卡余额求和_个人征信
   --          近6个月贷款应还款平均金额_指标Z060401_0009
    --       近6个月贷记卡账户额度使用率_指标Z060401_0010
    or 当日贷款类授信金额_指标Z060401_0011<>客户当日贷款及大额专项分期卡授信金额求和_个人征信
    or 当日信用贷款银行授信最高金额_指标Z060401_0012<>客户当日信用类贷款单家银行授信金额最大值_个人征信
    or 当日保证贷款银行授信最高金额_指标Z060401_0013<>客户当日保证类贷款单家银行授信金额最大值_个人征信
    or 当日非房抵押贷款银行授信最高金额_指标Z060401_0014<>客户当日抵押类贷款_不含房贷_单家银行授信金额最大值_个人征信
    or                  当日信用贷款银行授信平均金额_指标Z060401_0015<>客户当日信用类贷款单家银行授信金额平均值_个人征信
    or                 当日保证贷款银行授信平均金额_指标Z060401_0016<>客户当日保证类贷款单家银行授信金额平均值_个人征信
    or         当日非房抵押贷款银行授信平均金额_指标Z060401_0017<>客户当日抵押类贷款_不含房贷_单家银行授信金额平均值_个人征信
    or                当日贷款类非房贷余额_指标Z060401_0049<>报告当日贷款类_不含房贷_余额求和_个人征信
     or                        当日贷款类银行机构余额_指标Z060401_0050<>报告当日贷款类银行机构余额求和_个人征信
     or                    当日贷款类大于0机构数_指标Z060401_0051<>报告当日贷款类余额大于0机构数计数_个人征信
     or                 当日贷款类大于0银行机构数_指标Z060401_0052<>报告当日贷款类余额大于0且银行机构机构数计数_个人征信
     or 当日正常贷款大于0小贷消金机构数_指标Z060401_0053<>报告当日贷款类正常存续余额大于0且小贷消金机构数计数_个人征信 --24:消费金融公司 51:小额贷款公司
     or                       当日信用卡大于0机构数_指标Z060401_0054<>报告当日信用卡类余额大于0机构数计数_个人征信
    --,CUR_DAY_REL_RPAY_RSPBL_ACT_NUM                       当日相关还款责任账户数_指标Z060401_0055  <>
     or                          当日非房贷银行余额_指标Z060401_0056<>报告当日贷款类_不含房贷_银行机构余额求和_个人征信
     or                 当日非房贷大于0银行数_指标Z060401_0057<>报告当日贷款类_不含房贷_余额大于0且银行机构机构数计数_个人征信
    or              当日非房贷大于0机构数_指标Z060401_0101<>报告当日贷款类_不含房贷_机构数计数_个人征信 --报告当日贷款类_不含房贷_余额大于0机构数计数_个人征信



)
;

SELECT * FROM TMP_ADM_PBLC_NCIP_CP_M_ACCOUNT_INFO_02 where report_id='2024073100091368284233';


DROP TABLE IF EXISTS lab_bigdata_dev.TMP_ADM_PBLC_NCIP_CP_M_ACCOUNT_INFO_01;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.TMP_ADM_PBLC_NCIP_CP_M_ACCOUNT_INFO_01
(
    REPORT_ID                     STRING  COMMENT '征信报告编号'
    ,ORG_CODE                     STRING  COMMENT '机构代码'
    ,GRNT_MTH_TYPE                STRING  COMMENT '担保方式大类'
    ,ACT_PD_CD                    STRING  COMMENT '账户业务产品种类代码'
    ,R2_NON_DLV_LRG_AMT_INSTL_BAL DECIMAL COMMENT '大额专项分期额度'
    ,AGM_LMT_PURPOSE              STRING  COMMENT '授信协议额度用途'
    ,ACT_TYP_CD                   STRING  COMMENT '账户类型代码'
    ,LOAN_AMT                     DECIMAL COMMENT '贷款发放金额'
    ,LOAN_ORGAGM_ATMSUM           DECIMAL COMMENT '对应该机构贷款授信协议总金额'
    ,PD_CD_TYPE2                  STRING  COMMENT '业务品种小类'
    ,ORG_TYPE_BANK_FG             STRING  COMMENT '	授信机构大类型'
    ,PD_CD_TYPE1                  STRING  COMMENT '业务品种大类'
    ,BAL                          DECIMAL COMMENT '最新账户余额'
    ,IS_SELF_ORG                  STRING  COMMENT '是否我行'
    ,ACC_STATUS_TYPE              STRING  COMMENT '账户状态大类'
    ,DTRB_ORG_TYP_CD              STRING  COMMENT '发放机构类型'
    ,OVD_MONTH                    STRING  COMMENT '当前逾期月数'
    ,OVD_AMT                      DECIMAL COMMENT '当前逾期金额'
    ,ORG_TYPE                     STRING  COMMENT '机构类型'
    ,DT                           STRING  COMMENT '日期分区'
		, ACT_ID  STRING  COMMENT '账务ID'
		, AGM_NO STRING  COMMENT '授信协议编号'
		,AGM_CREDIT_QUOTA STRING COMMENT '授信协议限额'
);

INSERT into lab_bigdata_dev.TMP_ADM_PBLC_NCIP_CP_M_ACCOUNT_INFO_01
SELECT  REPORT_ID         AS REPORT_ID --征信报告编号
        ,ORG_CODE         AS ORG_CODE --机构代码
        ,GRNT_MTH_TYPE    AS GRNT_MTH_TYPE --担保方式大类
        ,ACT_PD_CD        AS ACT_PD_CD --账户业务产品种类代码
        ,CASE
           WHEN R2_NON_DLV_LRG_AMT_INSTL_BAL = ''                                                                           THEN 0
           WHEN LENGTH(REGEXP_REPLACE(R2_NON_DLV_LRG_AMT_INSTL_BAL, '[^0-9.]', '')) <> LENGTH(R2_NON_DLV_LRG_AMT_INSTL_BAL) THEN 0
           ELSE R2_NON_DLV_LRG_AMT_INSTL_BAL * COALESCE(B.CNY_EXR, 1)
         END              AS R2_NON_DLV_LRG_AMT_INSTL_BAL --大额专项分期额度
        ,AGM_LMT_PURPOSE  AS AGM_LMT_PURPOSE --授信协议额度用途
        ,ACT_TYP_CD       AS ACT_TYP_CD --	 账户类型代码
        ,CASE
           WHEN LOAN_AMT = ''                                                       THEN 0
           WHEN LENGTH(REGEXP_REPLACE(LOAN_AMT, '[^0-9.]', '')) <> LENGTH(LOAN_AMT) THEN 0
           ELSE LOAN_AMT * COALESCE(B.CNY_EXR, 1)
         END              AS LOAN_AMT --贷款发放金额
        ,CASE
           WHEN LOAN_ORGAGM_ATMSUM = ''                                                                 THEN 0
           WHEN LENGTH(REGEXP_REPLACE(LOAN_ORGAGM_ATMSUM, '[^0-9.]', '')) <> LENGTH(LOAN_ORGAGM_ATMSUM) THEN 0
           ELSE LOAN_ORGAGM_ATMSUM * COALESCE(B.CNY_EXR, 1)
         END              AS LOAN_ORGAGM_ATMSUM --对应该机构贷款授信协议总金额
        ,PD_CD_TYPE2      AS PD_CD_TYPE2 --业务品种小类
        ,ORG_TYPE_BANK_FG AS ORG_TYPE_BANK_FG --授信机构大类型
        ,PD_CD_TYPE1      AS PD_CD_TYPE1 --业务品种大类
        ,CASE
           WHEN BAL = ''                                                  THEN 0
           WHEN LENGTH(REGEXP_REPLACE(BAL, '[^0-9.]', '')) <> LENGTH(BAL) THEN 0
           ELSE BAL * COALESCE(B.CNY_EXR, 1)
         END              AS BAL -- --最新账户余额
        ,IS_SELF_ORG      AS IS_SELF_ORG --是否我行
        ,ACC_STATUS_TYPE  AS ACC_STATUS_TYPE --账户状态大类
        ,DTRB_ORG_TYP_CD  AS DTRB_ORG_TYP_CD --发放机构类型
        ,OVD_MONTH        AS OVD_MONTH --当前逾期月数
        ,CASE
           WHEN OVD_AMT = ''                                                      THEN 0
           WHEN LENGTH(REGEXP_REPLACE(OVD_AMT, '[^0-9.]', '')) <> LENGTH(OVD_AMT) THEN 0
           ELSE OVD_AMT * COALESCE(B.CNY_EXR, 1)
         END              AS OVD_AMT --当前逾期金额
        ,ORG_TYPE         AS ORG_TYPE --机构类型
        ,A.DT

		,A. ACT_ID ----账务ID
		,A.AGM_NO ----授信协议编号
		,A.AGM_CREDIT_QUOTA --授信协议限额
FROM    edw.NCIP_CP_M_ACCOUNT_INFO A --借贷信息表
LEFT JOIN    edw.DIM_BUS_COM_EXR_INF_DD B --汇率参数表
ON      A.ACT_CCY_CD = B.ISO_CCY_CD --币种英文代码
AND     B.DT = '20240731'
WHERE   A.DT = '20240731'
and coalesce(a.AGREEMENT_STATS,'1')='1' --授信协议状态1有效 或者空
and coalesce(a.ACC_STATUS_TYPE,'') not in('3','0') --非结清 ACC_STATUS_TYPE ----账户状态类型   0-未激活 1-正常存续 2-非正常存续 3-关闭 4-呆账
;


SELECT * FROM TMP_ADM_PBLC_NCIP_CP_M_ACCOUNT_INFO_01 where report_id='2024073100091368284233';

SELECT * FROM
   lab_bigdata_dev.TMP_ADM_PBLC_NCIP_CP_M_ACCOUNT_INFO_01 --借贷信息表
WHERE   DT = '20240731'
and report_id='2024073100091368284233';

SELECT * FROM edw.ncip_cp_m_account_info WHERE   DT = '20240731'
and report_id='2024073100091368284233'; -- NCIP_CP_M_ACCOUNT_INFO

SELECT * FROM edw.ncip_pd02a_creditbasicmessage WHERE   DT = '20240731'
and report_id='2024073100091368284233';


DROP TABLE IF EXISTS lab_bigdata_dev.TMP_ADM_PBLC_NCIP_CP_M_ACCOUNT_INFO_01;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.TMP_ADM_PBLC_NCIP_CP_M_ACCOUNT_INFO_01
(
    REPORT_ID                     STRING  COMMENT '征信报告编号'
    ,ORG_CODE                     STRING  COMMENT '机构代码'
    ,GRNT_MTH_TYPE                STRING  COMMENT '担保方式大类'
    ,ACT_PD_CD                    STRING  COMMENT '账户业务产品种类代码'
    ,R2_NON_DLV_LRG_AMT_INSTL_BAL DECIMAL COMMENT '大额专项分期额度'
    ,AGM_LMT_PURPOSE              STRING  COMMENT '授信协议额度用途'
    ,ACT_TYP_CD                   STRING  COMMENT '账户类型代码'
    ,LOAN_AMT                     DECIMAL COMMENT '贷款发放金额'
    ,LOAN_ORGAGM_ATMSUM           DECIMAL COMMENT '对应该机构贷款授信协议总金额'
    ,PD_CD_TYPE2                  STRING  COMMENT '业务品种小类'
    ,ORG_TYPE_BANK_FG             STRING  COMMENT '	授信机构大类型'
    ,PD_CD_TYPE1                  STRING  COMMENT '业务品种大类'
    ,BAL                          DECIMAL COMMENT '最新账户余额'
    ,IS_SELF_ORG                  STRING  COMMENT '是否我行'
    ,ACC_STATUS_TYPE              STRING  COMMENT '账户状态大类'
    ,DTRB_ORG_TYP_CD              STRING  COMMENT '发放机构类型'
    ,OVD_MONTH                    STRING  COMMENT '当前逾期月数'
    ,OVD_AMT                      DECIMAL COMMENT '当前逾期金额'
    ,ORG_TYPE                     STRING  COMMENT '机构类型'
    ,DT                           STRING  COMMENT '日期分区'
		, ACT_ID  STRING  COMMENT '账务ID'
		, AGM_NO STRING  COMMENT '授信协议编号'
		,AGM_LMT STRING COMMENT '授信协议额度'
);

INSERT into lab_bigdata_dev.TMP_ADM_PBLC_NCIP_CP_M_ACCOUNT_INFO_01
SELECT  REPORT_ID         AS REPORT_ID --征信报告编号
        ,ORG_CODE         AS ORG_CODE --机构代码
        ,GRNT_MTH_TYPE    AS GRNT_MTH_TYPE --担保方式大类
        ,ACT_PD_CD        AS ACT_PD_CD --账户业务产品种类代码
        ,CASE
           WHEN R2_NON_DLV_LRG_AMT_INSTL_BAL = ''                                                                           THEN 0
           WHEN LENGTH(REGEXP_REPLACE(R2_NON_DLV_LRG_AMT_INSTL_BAL, '[^0-9.]', '')) <> LENGTH(R2_NON_DLV_LRG_AMT_INSTL_BAL) THEN 0
           ELSE R2_NON_DLV_LRG_AMT_INSTL_BAL * COALESCE(B.CNY_EXR, 1)
         END              AS R2_NON_DLV_LRG_AMT_INSTL_BAL --大额专项分期额度
        ,AGM_LMT_PURPOSE  AS AGM_LMT_PURPOSE --授信协议额度用途
        ,ACT_TYP_CD       AS ACT_TYP_CD --	 账户类型代码
        ,CASE
           WHEN LOAN_AMT = ''                                                       THEN 0
           WHEN LENGTH(REGEXP_REPLACE(LOAN_AMT, '[^0-9.]', '')) <> LENGTH(LOAN_AMT) THEN 0
           ELSE LOAN_AMT * COALESCE(B.CNY_EXR, 1)
         END              AS LOAN_AMT --贷款发放金额
        ,CASE
           WHEN LOAN_ORGAGM_ATMSUM = ''                                                                 THEN 0
           WHEN LENGTH(REGEXP_REPLACE(LOAN_ORGAGM_ATMSUM, '[^0-9.]', '')) <> LENGTH(LOAN_ORGAGM_ATMSUM) THEN 0
           ELSE LOAN_ORGAGM_ATMSUM * COALESCE(B.CNY_EXR, 1)
         END              AS LOAN_ORGAGM_ATMSUM --对应该机构贷款授信协议总金额
        ,PD_CD_TYPE2      AS PD_CD_TYPE2 --业务品种小类
        ,ORG_TYPE_BANK_FG AS ORG_TYPE_BANK_FG --授信机构大类型
        ,PD_CD_TYPE1      AS PD_CD_TYPE1 --业务品种大类
        ,CASE
           WHEN BAL = ''                                                  THEN 0
           WHEN LENGTH(REGEXP_REPLACE(BAL, '[^0-9.]', '')) <> LENGTH(BAL) THEN 0
           ELSE BAL * COALESCE(B.CNY_EXR, 1)
         END              AS BAL -- --最新账户余额
        ,IS_SELF_ORG      AS IS_SELF_ORG --是否我行
        ,ACC_STATUS_TYPE  AS ACC_STATUS_TYPE --账户状态大类
        ,DTRB_ORG_TYP_CD  AS DTRB_ORG_TYP_CD --发放机构类型
        ,OVD_MONTH        AS OVD_MONTH --当前逾期月数
        ,CASE
           WHEN OVD_AMT = ''                                                      THEN 0
           WHEN LENGTH(REGEXP_REPLACE(OVD_AMT, '[^0-9.]', '')) <> LENGTH(OVD_AMT) THEN 0
           ELSE OVD_AMT * COALESCE(B.CNY_EXR, 1)
         END              AS OVD_AMT --当前逾期金额
        ,ORG_TYPE         AS ORG_TYPE --机构类型
        ,A.DT

		,A. ACT_ID ----账务ID
		,A.AGM_NO ----授信协议编号
		,A.AGM_LMT --授信协议额度
FROM    edw.NCIP_CP_M_ACCOUNT_INFO A --借贷信息表
LEFT JOIN    edw.DIM_BUS_COM_EXR_INF_DD B --汇率参数表
ON      A.ACT_CCY_CD = B.ISO_CCY_CD --币种英文代码
AND     B.DT = '20240731'
WHERE   A.DT = '20240731'
and coalesce(a.AGREEMENT_STATS,'1')='1' --授信协议状态1有效 或者空
and coalesce(a.ACC_STATUS_TYPE,'') not in('3','0') --非结清 ACC_STATUS_TYPE ----账户状态类型   0-未激活 1-正常存续 2-非正常存续 3-关闭 4-呆账
;



                 SELECT  G.REPORT_ID
                         ,G.AGREEMENT_NO
                         ,G.ORG_TYPE        AS AGM_ORG_TYPE ----授信协议机构类型
                         ,G.ORG_CODE        AS AGM_ORG_CODE ----授信协议机构代码
                         ,G.AGREEMENT_SIGN  AS AGM_SIGN --授信协议标识
                         ,G.LIMIT_PURPOSE   AS AGM_LMT_PURPOSE ----授信协议额度用途
                         ,G.CREDIT_LIMIT    AS AGM_LMT ----授信协议额度
                         ,G.CURRENCY        AS AGM_CCY ----授信协议币种
                         ,CASE
                            WHEN G.START_TIME IS NULL OR TRIM(G.START_TIME) = '' THEN '18991231'
                            ELSE TO_CHAR(G.START_TIME, 'yyyyMMdd')
                          END               AS AGM_START_DT --授信协议生效日期
                         ,CASE
                            WHEN G.START_TIME IS NULL OR TRIM(G.START_TIME) = '' THEN NULL
                            ELSE DATEDIFF(TO_DATE(SUBSTR(G.REPORT_ID, 1, 8), 'yyyyMMdd'), TO_DATE(SUBSTR(G.START_TIME, 1, 10), 'yyyy-MM-dd'), 'MM')
                          END               AS AGM_START_HIS_MONTH ---授信协议生效距今月份
                         ,CASE
                            WHEN SUBSTR(G.END_TIME, 1, 10) = '2099-12-31' THEN 999
                            ELSE DATEDIFF(TO_DATE(SUBSTR(G.END_TIME, 1, 10), 'yyyy-MM-dd'), TO_DATE(SUBSTR(G.START_TIME, 1, 10), 'yyyy-MM-dd'), 'MM')
                          END               AS AGM_TERM ---授信协议期限
                         ,G.END_TIME        AS AGM_END_TIME ----授信协议到期日期
                         ,G.AGREEMENT_STATS AS AGM_STATS ----授信协议状态
                         ,G.USED_LIMIT      AS AGM_USED_LMT ----授信协议已用额度
                         ,G.QUOTA_NO        AS AGM_QUOTA_NO ----授信协议限额编号
                         ,G.CREDIT_QUOTA    AS AGM_CREDIT_QUOTA ----授信协议限额
                         ,G.DT              AS DT
                 FROM    edw.NCIP_PD02A_CREDITBASICMESSAGE G
                 WHERE   G.DT = '20240731'
                 and g.report_id='2024073100091368284233'
                 ;


                             SELECT  '9999'                       AS LGP_ID --法人编号
                    ,A.ID                        AS ID --账务ID
                    ,A.REPORT_ID                 AS REPORT_ID --报告编号
                    ,A.ACCOUNT_TYPE              AS ACT_TYP_CD --账户类型代码
                    ,A.ORG_TYPE                  AS DTRB_ORG_TYP_CD --发放机构类型
                    ,A.ORG_CODE                  AS DTRB_ORG_CODE --发放机构代码
                    ,A.ACCOUNT_NUM               AS ACCOUNT_NUM --账户编号
                    ,A.ACCOUNT_ID                AS OWN_LOAN_DBIL_ID --我行贷款借据编号
                    ,A.AGREEMENT_NUM             AS AGREEMENT_NUM --授信协议编号
                    ,A.BUSINESS_TYPE             AS ACT_PD_CD --业务产品种类代码
                    ,CASE
                       WHEN A.ISSUANCE_DATE IS NULL OR TRIM(A.ISSUANCE_DATE) = '' THEN NULL
                       ELSE TO_CHAR(A.ISSUANCE_DATE, 'yyyyMMdd')
                     END                         AS ACT_START_DT --账户开立日期
                    ,CASE
                       WHEN A.ISSUANCE_DATE IS NULL OR TRIM(A.ISSUANCE_DATE) = '' THEN NULL
                       ELSE DATEDIFF(TO_DATE(SUBSTR(A.REPORT_ID, 1, 8), 'yyyyMMdd'), TO_DATE(SUBSTR(A.ISSUANCE_DATE, 1, 10), 'yyyy-MM-dd'), 'MM')
                     END                         AS ACT_START_HIS_MONTH ---账户开立距今月份
                    ,CASE
                       WHEN A.DUE_DATE IS NULL OR TRIM(A.DUE_DATE) = '' THEN '99991231'
                       ELSE TO_CHAR(A.DUE_DATE, 'yyyyMMdd')
                     END                         AS ACT_MTU_DT ---- 贷款结束日期
                    ,CASE
                       WHEN A.DUE_DATE IS NULL OR TRIM(A.DUE_DATE) = '' THEN 999
                       ELSE DATEDIFF(TO_DATE(SUBSTR(A.DUE_DATE, 1, 10), 'yyyy-MM-dd'), TO_DATE(SUBSTR(A.REPORT_ID, 1, 8), 'yyyyMMdd'), 'MM')
                     END                         AS DUE_MONTH --贷款到期剩余月份
                    ,A.CURRENCY                  AS ACT_CCY_CD ---- 币种
                    ,A.LOAN_AMOUNT               AS CTR_AMT ---- C1/D1/R4贷款金额
                    ,A.ACCOUNT_QUOTA             AS ACT_CRD_LMT ---- R1/R2/R3账户授信额度
                    ,A.SHARE_QUOTA               AS SHR_CRD_LMT ---- R2/R3共享授信额度
                    ,A.REPAY_METHOD              AS RPAY_MTH_CD ---- 还款方式
                    ,A.REPAY_RATE                AS RPAY_FRQ_CD ---- 还款频率
                    ,A.REPAY_PERIODS             AS RPAY_TRM ---- 还款期数
                    ,A.GUARANTEE_MODE            AS GRNT_MTH_CD ---- 担保方式
                    ,A.LOANISSU_METHOD           AS LOANISSU_METHOD ---- 贷款发放形式
                    ,A.LOAN_FLAG                 AS COM_BRW_IND ---- 共同借款标志
                    ,A.REPAY_STATUS              AS C1_REPAY_STATUS ---- 债券转移时的还款状态
                    ,C.ACC_STATUS                AS LAST_ACC_STATUS ---- 最新账户状态
                    ,C.CLOSE_DATE                AS CLOSE_DATE ---- 关闭日期
                    ,C.OUT_MONTH                 AS OUT_MONTH ---- 转出月份
                    ,C.BALANCE                   AS LAST_CTR_BAL ---- 最新贷款余额
                    ,C.LAST_REPDATE              AS LAST_REPDATE ---- 最近一次还款日期
                    ,C.LAST_REPMONEY             AS LAST_REPMONEY ---- 最近一次还款金额
                    ,C.FIVE_ASSORT               AS LAST_FIVE_CTG ---- 最新五级分类
                    ,C.REP_STATUS                AS LAST_REP_STATUS ---- 最新还款状态
                    ,CASE
                       WHEN C.REPORT_INFDATE IS NULL OR TRIM(C.REPORT_INFDATE) = '' THEN '18991231'
                       ELSE TO_CHAR(C.REPORT_INFDATE, 'yyyyMMdd')
                     END                         AS DTL_RPT_MAK_DT ----最新表现信息报告生成日期
                    ,E.MONTH                     AS RECENT_MONTH ----最近一次月度月份
                    ,E.ACCOUNT_STATUS            AS RECENT_ACC_STATUS ----【新】最近月度账户状态
                    ,E.BALANCE                   AS RECENT_CTR_BAL ----【新】最近月度贷款余额
                    ,E.QUOTA_USED                AS R2_RECENT_USE_LMT ---- 已用额度
                    ,CASE
                       WHEN REPLACE(E.INSTALLMENT_BALANCE, '-', '') = '' THEN 0
                     END                         AS R2_NON_DLV_LRG_AMT_INSTL_BAL ----未出单的大额专项分期余额
                    ,E.FIVE_LEVEL_CLASSIFICATION AS RECENT_FIVE_CTG ----【新】最近月度五级分类
                    ,E.REMAINING_PERIOD          AS RECENT_RMN_RPAY_TRM ----剩余还款期数
                    ,CASE
                       WHEN E.SETTLEMENT_DAY IS NULL OR TRIM(E.SETTLEMENT_DAY) = '' THEN '99991231'
                       ELSE REPLACE(E.SETTLEMENT_DAY, '-', '')
                     END                         AS RECENT_SHD_PAY_DAY ----结算/应还款日
                    ,E.REPAYMENT                 AS RECENT_CUR_MON_SHD_RPAY ----本月应还款
                    ,E.ACTUAL_REPAYMENT          AS RECENT_CUR_MON_ACTL_RPAY ----本月实还款
                    ,CASE
                       WHEN E.DATE_OF_LAST IS NULL OR TRIM(E.DATE_OF_LAST) = '' THEN '99991231'
                       ELSE REPLACE(E.DATE_OF_LAST, '-', '')
                     END                         AS RECENT_ONE_TM_RPAY_DT  -----最近一次应还款日还款日期
                    ,E.OVERDUE_PERIOD            AS RECENT_OVD_PER ----当前逾期期数
                    ,E.OVERDUE_AMOUNT            AS RECENT_OVD_AMT ----逾期金额
                    ,E.UNPAID_PRINCIPAL1         AS RECENT_OVD_NOT_PAID_PRCP_1 ----逾期未还本金1（31&mdash;60 天）
                    ,E.UNPAID_PRINCIPAL2         AS RECENT_OVD_NOT_PAID_PRCP_2 ----逾期未还本金2（61－90 天）
                    ,E.UNPAID_PRINCIPAL3         AS RECENT_OVD_NOT_PAID_PRCP_3 ----逾期未还本金3（91－180 天）
                    ,E.UNPAID_PRINCIPAL4         AS RECENT_OVD_NOT_PAID_PRCP_4 ----逾期未还本金4（180 天以上）
                    ,E.OUTSTANDING_BALANCE       AS R3_RECENT_OVDR_180_DAY_BAL ----透支180 天以上未付余额
                    ,E.USAGE_QUOTA               AS R2_RECENT_SIX_MON_AVG_USE_LMT ----最近6个月平均使用额度
                    ,E.OVERDRAFT_BALANCE         AS R3_RECENT_SIX_MON_AVG_OVDR_BAL ----最近6个月平均透支余额
                    ,E.MAX_QUOTA                 AS R2_MAX_USE_LMT ----最大使用额度
                    ,E.MAX_BALANCE               AS R3_MAX_OVDR_BAL ----最大透支余额
                    ,CASE
                       WHEN E.INFORMATION_DATE IS NULL OR TRIM(E.INFORMATION_DATE) = '' THEN '18991231'
                       ELSE TO_CHAR(E.INFORMATION_DATE, 'yyyyMMdd')
                     END                         AS RECENT_RPT_MAK_DT ----最近月度信息报告生成日期
                    ,F.INSTALLMENT_COUNT ----大额专项分期笔数
                    ,J.INSTALLMENT_LIMIT ----大额专项分期额度
                    ,J.LIMIT_START_TIME ----分期额度生效日期
                    ,J.LIMIT_END_TIME ----分期额度到期日期
                    ,J.UESD_INSTALLMENT_MONEY ----已用分期金额
                    ,COALESCE(J.ID, '')          AS ID_INSTALL
                    ,COALESCE(D.ID, '')          AS ID_60M_SUB ----最近 5 年内的历史表现信息段ID
                    ,A.DT                        AS DT
            FROM    edw.NCIP_PD01A_BASICINFOSEG A ----借款账户信息-基本信息
            LEFT JOIN    edw.NCIP_PD01B_FIRINFSEG C ----最新表现信息段
            ON      C.DT = A.DT
            AND     A.ID = C.UNION_ID
            AND     C.DT  = '20240731'
            LEFT JOIN    edw.NCIP_PD01C_MONTH_INFORMATION E ----最近一次月度表现信息
            ON      E.DT = A.DT
            AND     A.ID = E.UNION_ID
            AND     E.DT  = '20240731'
            LEFT JOIN    edw.NCIP_PD01H_INSTALMENT F ---大额专项分期信息
            ON      F.DT = A.DT
            AND     A.ID = F.UNION_ID
            AND     F.DT  = '20240731'

            LEFT JOIN    edw.NCIP_PD01H_INSTALMENTSUB J ---大额专项分期信息段sub
            ON      J.DT  = '20240731'
            AND     F.ID = J.UNION_ID
            LEFT JOIN    edw.NCIP_PD01E_REPAYSTAT60 D ----最近5年内的历史表现信息段
            ON      A.ID = D.UNION_ID
            AND     D.DT = A.DT
            AND     D.DT  = '20240731'
            WHERE   A.DT  = '20240731'
             and a.report_id='2024073100091368284233'
             and AGREEMENT_NUM='75421'
**取数需求_20240603宠物总分.sql
-- ODPS SQL 临时查询
-- **********************************************************************
-- 功能描述:
-- **
-- 创建者: 龙彬彬
-- 创建日期: 2024-11-05 09:08:51
-- **
-- 修改日志:
-- 修改日期          修改人          修改内容
-- **
-- **********************************************************************
----------------------------------------2.20241031续贷的合同限制消费贷----------------------------------------
-- 消费贷全量数据 结清客户
drop table if exists lab_bigdata_dev.xiaofei_xudai_01_20241031;
create table if not exists lab_bigdata_dev.xiaofei_xudai_01_20241031 as
SELECT  DISTINCT t4.brc_org_id  --管护分行层级机构编号
			,t4.brc_org_nm --管护分行层级机构名称
			,t3.MGR_ID --主管护客户经理工号
			,t3.MGR_NM --主管护客户经理姓名
			,t1.cst_id  --客户号
			,t1.cst_nm
			,t1.ctr_serno --合同流水号
			,t1.rvlg_typ_cd  --	循环类型代码
			,t1.exec_intr_rat --执行利率
			,t1.ctr_eff_dt  --合同生效日期
			,t1.ctr_bgn_dt --合同起始日期
			,t1.ctr_mtu_dt --合同到期日期
			,t1.tmt_dt  --终结日期
			,t1.ctr_amt --合同金额
			,t1.ctr_bal --合同余额
			,t5.bus_ctr_id --是否发生借据
			,t1.prd_no
			,t6.pd_nm
            ,t1.APLY_ACPT_SUB_CLSS_CD
FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD as t1 --合同基础信息
LEFT JOIN    edw.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD as  t2 --合同其它明细信息
    ON      t1.CTR_SERNO = t2.CTR_SERNO
    AND     t2.dt = '20241031'
LEFT JOIN edw.dwd_bus_loan_ctr_mgr_inf_dd AS T3 --信贷合同管护信息
    ON T1.CTR_SERNO=T3.CTR_SERNO
    AND T3.dt = '20241031'
inner join edw.dim_hr_org_mng_org_tree_dd as t4 --机构树_考核维度
    on T3.MGR_ORG_ID=T4.org_id
    and t4.dt = '20241031'
    and t4.brc_org_nm not like '%村镇银行%'
left join (select distinct bus_ctr_id from edw.dws_bus_loan_dbil_inf_dd where dt='20241031') as t5 --贷款借据信息汇总
on t1.CTR_SERNO=t5.bus_ctr_id
left join edw.DIM_BUS_LOAN_PRD_FRML_DD as t6 --产品信息
    on t1.prd_no=t6.prd_no
    and t6.dt='20241031'
WHERE   t1.dt = '20241031'
AND     t1.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
AND     ( t2.APLY_CHNL_CD <> 'L08'
    OR t1.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
AND     t1.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
AND     t1.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     ( t1.PRD_NO NOT IN ( '2001020101002' , '2001010101002' )
    OR nvl(t1.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
and SUBSTR(t1.prd_no, 1, 6) = '200101'  --消费贷
and t1.tmt_dt>='20240101' and t1.tmt_dt<='20241031'  and coalesce(t1.ctr_bal,0)=0
     ;

-- 结清户数
drop table if exists lab_bigdata_dev.result_xudai_xiaofei_20241031_jieqing;
create table if not exists lab_bigdata_dev.result_xudai_xiaofei_20241031_jieqing as
select brc_org_id as 机构编号
,brc_org_nm as 机构名称
,count(distinct cst_id) as 结清户数_整体
,count(distinct case when rvlg_typ_cd ='0' then cst_id end) as 结清户数_非循环贷款
,count(distinct case when rvlg_typ_cd in ('1','2') and prd_no<>'2001010101002' and ( APLY_ACPT_SUB_CLSS_CD<>'015' or prd_no not in ('2001010101003','2001010101004')) then cst_id end) as 结清户数_循环贷款_非泰e贷
,count(distinct case when prd_no='2001010101002' or ( APLY_ACPT_SUB_CLSS_CD='015' and prd_no in ('2001010101003','2001010101004')) then cst_id end) as 结清户数_泰e贷   --2001010101002泰e贷（消费） 2001010101003随贷通（消费） 2001010101004备用金（消费）
,count(distinct case when ctr_amt>=0 and ctr_amt<=100000 then cst_id end) as 结清户数_合同额度0至10万
,count(distinct case when ctr_amt>100000 and ctr_amt<=300000 then cst_id end) as 结清户数_合同额度10至30万
,count(distinct case when ctr_amt>300000  then cst_id end) as 结清户数_合同额度30万以上
from lab_bigdata_dev.xiaofei_xudai_01_20241031
group by brc_org_id,brc_org_nm;




-- 新增的口径 ： 同一风险控制号下的客户
drop table if exists lab_bigdata_dev.xiaofei_xudai_01_20241031_tongyifengxian;
create table if not exists lab_bigdata_dev.xiaofei_xudai_01_20241031_tongyifengxian as
select
			c.cst_id  --结清的同一风险控制号下的客户
            ,a.ctr_serno --合同流水号
			,a.rvlg_typ_cd  --	循环类型代码
			,a.exec_intr_rat --执行利率
			,a.ctr_eff_dt  --合同生效日期
			,a.ctr_bgn_dt --合同起始日期
			,a.ctr_mtu_dt --合同到期日期
			,a.tmt_dt  --终结日期
			,a.ctr_amt --合同金额
			,a.ctr_bal --合同余额
			,a.bus_ctr_id --是否发生借据
			,a.prd_no
			,a.pd_nm
            ,a.APLY_ACPT_SUB_CLSS_CD
from lab_bigdata_dev.xiaofei_xudai_01_20241031 as a
left join edw.DWS_CST_BAS_INF_DD as b
    on a.cst_id=b.cst_id
    and b.dt='20241031'
left join edw.DWS_CST_BAS_INF_DD as c --客户基础信息汇总表
    on b.SAM_RSK_CTRL_ID=c.SAM_RSK_CTRL_ID
    and c.dt='20241031';


-- 续贷，关联新发生业务，续贷的合同是消费贷  select * from lab_bigdata_dev.xiaofei_xudai_02 where brc_org_nm ='上海分行'
drop table if exists lab_bigdata_dev.xiaofei_xudai_02_20241031;
create table if not exists lab_bigdata_dev.xiaofei_xudai_02_20241031 as
select distinct a.*
        ,d.brc_org_id  --管护分行层级机构编号
		,d.brc_org_nm --管护分行层级机构名称
		,b.CTR_SERNO as CTR_SERNO_b
		,b.ctr_bgn_dt as  ctr_bgn_dt_xudai--合同起始日期
		,b.ctr_mtu_dt as ctr_mtu_dt_xudai--合同到期日期
		,b.tmt_dt as tmt_dt_xudai --终结日期
		,b.ctr_amt as ctr_amt_xudai--合同金额
		,b.ctr_bal as ctr_bal_xudai--合同余额
		,b.prd_no as prd_no_xudai--产品编号
		,b.rvlg_typ_cd as rvlg_typ_cd_b  --	循环类型代码
		,abs(datediff(to_date(b.ctr_bgn_dt, 'yyyymmdd'),to_date(a.tmt_dt, 'yyyymmdd'),'dd')) as jiangetianshu
 from lab_bigdata_dev.xiaofei_xudai_01_20241031_tongyifengxian as a --结清的同一风险控制号下的客户
--续贷的合同
left join (
    select distinct t1.cst_id
			,t1.CTR_SERNO
			,t1.ctr_bgn_dt --合同起始日期
			,t1.ctr_mtu_dt --合同到期日期
			,t1.rvlg_typ_cd  --	循环类型代码
			,t1.tmt_dt  --终结日期
			,t1.ctr_amt --合同金额
			,t1.ctr_bal --合同余额
			,t1.prd_no --产品编号
     from edw.DIM_BUS_LOAN_CTR_BSE_INF_DD as t1 --合同基础信息
    LEFT JOIN edw.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD as  t2 --合同其它明细信息
    ON      t1.CTR_SERNO = t2.CTR_SERNO
    AND     t2.dt = '20241031'
    WHERE   t1.dt = '20241031'
    AND     t1.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
    AND     ( t2.APLY_CHNL_CD <> 'L08'
        OR t1.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
    AND     t1.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
    AND     t1.PRD_NO <> '2001010101010' --剔除百度分期贷
    AND     ( t1.PRD_NO NOT IN ( '2001020101002' , '2001010101002' )
        OR nvl(t1.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
    and SUBSTR(t1.prd_no, 1, 6) = '200101'  --消费贷
    ) as b  --续贷的合同
on a.cst_id=b.cst_id
LEFT JOIN edw.dwd_bus_loan_ctr_mgr_inf_dd AS c --信贷合同管护信息
    ON b.CTR_SERNO=c.CTR_SERNO
    AND c.dt = '20241031'
inner join edw.dim_hr_org_mng_org_tree_dd as d --机构树_考核维度
    on c.MGR_ORG_ID=d.org_id
    and d.dt = '20241031'
    and d.brc_org_nm not like '%村镇银行%'
;

--2半自助循环 0非循环 1自助循环
--2001010101002泰e贷（消费） 2001010101003随贷通（消费） 2001010101004备用金（消费）


--同一风险控制号下的客户续贷的合同是消费贷  select * from lab_bigdata_dev.result_xudai_xiaofei_20241031_xudai;
drop table if exists lab_bigdata_dev.result_xudai_xiaofei_20241031_xudai;
create table if not exists lab_bigdata_dev.result_xudai_xiaofei_20241031_xudai as
select brc_org_id as 机构编号
,brc_org_nm as 机构名称
,count(distinct case when ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_整体
,count(distinct case when rvlg_typ_cd ='0' and ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_非循环贷款
,count(distinct case when rvlg_typ_cd in ('1','2') and prd_no<>'2001010101002'  and ( APLY_ACPT_SUB_CLSS_CD<>'015' or prd_no not in ('2001010101003','2001010101004')) and ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_循环贷款_非泰e贷
,count(distinct case when (prd_no='2001010101002' or ( APLY_ACPT_SUB_CLSS_CD='015' and prd_no in ('2001010101003','2001010101004'))) and ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_泰e贷
,count(distinct case when ctr_amt>=0 and ctr_amt<=100000 and ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_合同额度0至10万
,count(distinct case when ctr_amt>100000 and ctr_amt<=300000 and ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_合同额度10至30万
,count(distinct case when ctr_amt>300000  and ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_合同额度30万以上
from lab_bigdata_dev.xiaofei_xudai_02_20241031
group by brc_org_id,brc_org_nm;


-- 数据汇总   -- select * from lab_bigdata_dev.result_xudai_xiaofei_20241031_huizong;
drop table if exists lab_bigdata_dev.result_xudai_xiaofei_20241031_huizong;
create table if not exists lab_bigdata_dev.result_xudai_xiaofei_20241031_huizong as
select a.机构编号
,a.机构名称

,a.结清户数_整体
,b.续贷户数_整体
,b.续贷户数_整体/a.结清户数_整体 as 续贷率_整体


,a.结清户数_非循环贷款
,b.续贷户数_非循环贷款
,b.续贷户数_非循环贷款/a.结清户数_非循环贷款 as 续贷率_非循环贷款

,a.结清户数_循环贷款_非泰e贷
,b.续贷户数_循环贷款_非泰e贷
,b.续贷户数_循环贷款_非泰e贷/a.结清户数_循环贷款_非泰e贷 as 续贷率_非泰e贷

,a.结清户数_泰e贷
,b.续贷户数_泰e贷
,b.续贷户数_泰e贷/a.结清户数_泰e贷 as 续贷率_泰e贷

,a.结清户数_合同额度0至10万
,b.续贷户数_合同额度0至10万
,b.续贷户数_合同额度0至10万/a.结清户数_合同额度0至10万 as 续贷率_合同额度0至10万

,a.结清户数_合同额度10至30万
,b.续贷户数_合同额度10至30万
,b.续贷户数_合同额度10至30万/a.结清户数_合同额度10至30万 as 续贷率_合同额度10至30万

,a.结清户数_合同额度30万以上
,b.续贷户数_合同额度30万以上
,b.续贷户数_合同额度30万以上/a.结清户数_合同额度30万以上 as 续贷率_合同额度30万以上
 from lab_bigdata_dev.result_xudai_xiaofei_20241031_jieqing as a
left join lab_bigdata_dev.result_xudai_xiaofei_20241031_xudai as b
on a.机构编号=b.机构编号;

----------------------------------------2.20241031续贷的合同不限制消费贷----------------------------------------

-- 续贷，关联新发生业务，续贷的合同不限制消费贷  select * from lab_bigdata_dev.xiaofei_xudai_02 where brc_org_nm ='上海分行'
drop table if exists lab_bigdata_dev.xiaofei_xudai_not_xiaofei_20241031;
create table if not exists lab_bigdata_dev.xiaofei_xudai_not_xiaofei_20241031 as
select distinct a.*
        ,d.brc_org_id  --管护分行层级机构编号
		,d.brc_org_nm --管护分行层级机构名称
		,b.CTR_SERNO as CTR_SERNO_b
		,b.ctr_bgn_dt as  ctr_bgn_dt_xudai--合同起始日期
		,b.ctr_mtu_dt as ctr_mtu_dt_xudai--合同到期日期
		,b.tmt_dt as tmt_dt_xudai --终结日期
		,b.ctr_amt as ctr_amt_xudai--合同金额
		,b.ctr_bal as ctr_bal_xudai--合同余额
		,b.prd_no as prd_no_xudai--产品编号
		,b.rvlg_typ_cd as rvlg_typ_cd_b  --	循环类型代码
		,abs(datediff(to_date(b.ctr_bgn_dt, 'yyyymmdd'),to_date(a.tmt_dt, 'yyyymmdd'),'dd')) as jiangetianshu
 from lab_bigdata_dev.xiaofei_xudai_01_20241031_tongyifengxian as a ----结清的同一风险控制号下的客户
--续贷的合同
left join (
    select distinct t1.cst_id
			,t1.CTR_SERNO
			,t1.ctr_bgn_dt --合同起始日期
			,t1.ctr_mtu_dt --合同到期日期
			,t1.rvlg_typ_cd  --	循环类型代码
			,t1.tmt_dt  --终结日期
			,t1.ctr_amt --合同金额
			,t1.ctr_bal --合同余额
			,t1.prd_no --产品编号
     from edw.DIM_BUS_LOAN_CTR_BSE_INF_DD as t1 --合同基础信息
    LEFT JOIN edw.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD as  t2 --合同其它明细信息
    ON      t1.CTR_SERNO = t2.CTR_SERNO
    AND     t2.dt = '20241031'
    WHERE   t1.dt = '20241031'
    AND     t1.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
    AND     ( t2.APLY_CHNL_CD <> 'L08'
        OR t1.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
    AND     t1.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
    AND     t1.PRD_NO <> '2001010101010' --剔除百度分期贷
    AND     ( t1.PRD_NO NOT IN ( '2001020101002' , '2001010101002' )
        OR nvl(t1.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
  --  and SUBSTR(t1.prd_no, 1, 6) = '200101'  --消费贷
    ) as b  --续贷的合同
on a.cst_id=b.cst_id
LEFT JOIN edw.dwd_bus_loan_ctr_mgr_inf_dd AS c --信贷合同管护信息
    ON b.CTR_SERNO=c.CTR_SERNO
    AND c.dt = '20241031'
inner join edw.dim_hr_org_mng_org_tree_dd as d --机构树_考核维度
    on c.MGR_ORG_ID=d.org_id
    and d.dt = '20241031'
    and d.brc_org_nm not like '%村镇银行%'
;

--2半自助循环 0非循环 1自助循环
--2001010101002泰e贷（消费） 2001010101003随贷通（消费） 2001010101004备用金（消费）


--续贷的合同不限制消费贷  select * from lab_bigdata_dev.xiaofei_xudai_03;
drop table if exists lab_bigdata_dev.result_xudai_not_xiaofei_20241031_xudai;
create table if not exists lab_bigdata_dev.result_xudai_not_xiaofei_20241031_xudai as
select brc_org_id as 机构编号
,brc_org_nm as 机构名称
,count(distinct case when ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_整体
,count(distinct case when rvlg_typ_cd ='0' and ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_非循环贷款
,count(distinct case when rvlg_typ_cd in ('1','2') and prd_no<>'2001010101002'  and ( APLY_ACPT_SUB_CLSS_CD<>'015' or prd_no not in ('2001010101003','2001010101004')) and ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_循环贷款_非泰e贷
,count(distinct case when (prd_no='2001010101002' or ( APLY_ACPT_SUB_CLSS_CD='015' and prd_no in ('2001010101003','2001010101004'))) and ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_泰e贷
,count(distinct case when ctr_amt>=0 and ctr_amt<=100000 and ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_合同额度0至10万
,count(distinct case when ctr_amt>100000 and ctr_amt<=300000 and ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_合同额度10至30万
,count(distinct case when ctr_amt>300000  and ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_合同额度30万以上
from lab_bigdata_dev.xiaofei_xudai_not_xiaofei_20241031
group by brc_org_id,brc_org_nm;



-- 数据汇总
drop table if exists lab_bigdata_dev.result_xudai_not_xiaofei_20241031_huizong;
create table if not exists lab_bigdata_dev.result_xudai_not_xiaofei_20241031_huizong as
select a.机构编号
,a.机构名称

,a.结清户数_整体
,b.续贷户数_整体
,b.续贷户数_整体/a.结清户数_整体 as 续贷率_整体

,a.结清户数_非循环贷款
,b.续贷户数_非循环贷款
,b.续贷户数_非循环贷款/a.结清户数_非循环贷款 as 续贷率_非循环贷款

,a.结清户数_循环贷款_非泰e贷
,b.续贷户数_循环贷款_非泰e贷
,b.续贷户数_循环贷款_非泰e贷/a.结清户数_循环贷款_非泰e贷 as 续贷率_非泰e贷

,a.结清户数_泰e贷
,b.续贷户数_泰e贷
,b.续贷户数_泰e贷/a.结清户数_泰e贷 as 续贷率_泰e贷

,a.结清户数_合同额度0至10万
,b.续贷户数_合同额度0至10万
,b.续贷户数_合同额度0至10万/a.结清户数_合同额度0至10万 as 续贷率_合同额度0至10万

,a.结清户数_合同额度10至30万
,b.续贷户数_合同额度10至30万
,b.续贷户数_合同额度10至30万/a.结清户数_合同额度10至30万 as 续贷率_合同额度10至30万

,a.结清户数_合同额度30万以上
,b.续贷户数_合同额度30万以上
,b.续贷户数_合同额度30万以上/a.结清户数_合同额度30万以上 as 续贷率_合同额度30万以上
 from lab_bigdata_dev.result_xudai_xiaofei_20241031_jieqing as a
left join lab_bigdata_dev.result_xudai_not_xiaofei_20241031_xudai as b
on a.机构编号=b.机构编号;



----------------------------------------2.20231031续贷的合同限制消费贷----------------------------------------
-- 消费贷全量数据 结清客户
drop table if exists lab_bigdata_dev.xiaofei_xudai_01_20231031;
create table if not exists lab_bigdata_dev.xiaofei_xudai_01_20231031 as
SELECT  DISTINCT t4.brc_org_id  --管护分行层级机构编号
			,t4.brc_org_nm --管护分行层级机构名称
			,t3.MGR_ID --主管护客户经理工号
			,t3.MGR_NM --主管护客户经理姓名
			,t1.cst_id  --客户号
			,t1.cst_nm
			,t1.ctr_serno --合同流水号
			,t1.rvlg_typ_cd  --	循环类型代码
			,t1.exec_intr_rat --执行利率
			,t1.ctr_eff_dt  --合同生效日期
			,t1.ctr_bgn_dt --合同起始日期
			,t1.ctr_mtu_dt --合同到期日期
			,t1.tmt_dt  --终结日期
			,t1.ctr_amt --合同金额
			,t1.ctr_bal --合同余额
			,t5.bus_ctr_id --是否发生借据
			,t1.prd_no
			,t6.pd_nm
            ,t1.APLY_ACPT_SUB_CLSS_CD
FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD as t1 --合同基础信息
LEFT JOIN    edw.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD as  t2 --合同其它明细信息
    ON      t1.CTR_SERNO = t2.CTR_SERNO
    AND     t2.dt = '20231031'
LEFT JOIN edw.dwd_bus_loan_ctr_mgr_inf_dd AS T3 --信贷合同管护信息
    ON T1.CTR_SERNO=T3.CTR_SERNO
    AND T3.dt = '20231031'
inner join edw.dim_hr_org_mng_org_tree_dd as t4 --机构树_考核维度
    on T3.MGR_ORG_ID=T4.org_id
    and t4.dt = '20231031'
    and t4.brc_org_nm not like '%村镇银行%'
left join (select distinct bus_ctr_id from edw.dws_bus_loan_dbil_inf_dd where dt='20231031') as t5 --贷款借据信息汇总
on t1.CTR_SERNO=t5.bus_ctr_id
left join edw.DIM_BUS_LOAN_PRD_FRML_DD as t6 --产品信息
    on t1.prd_no=t6.prd_no
    and t6.dt='20231031'
WHERE   t1.dt = '20231031'
AND     t1.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
AND     ( t2.APLY_CHNL_CD <> 'L08'
    OR t1.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
AND     t1.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
AND     t1.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     ( t1.PRD_NO NOT IN ( '2001020101002' , '2001010101002' )
    OR nvl(t1.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
and SUBSTR(t1.prd_no, 1, 6) = '200101'  --消费贷
and t1.tmt_dt>='20230101' and t1.tmt_dt<='20231031'  and coalesce(t1.ctr_bal,0)=0
     ;

-- 结清户数
drop table if exists lab_bigdata_dev.result_xudai_xiaofei_20231031_jieqing;
create table if not exists lab_bigdata_dev.result_xudai_xiaofei_20231031_jieqing as
select brc_org_id as 机构编号
,brc_org_nm as 机构名称
,count(distinct  cst_id ) as 结清户数_整体
,count(distinct case when rvlg_typ_cd ='0' then cst_id end) as 结清户数_非循环贷款
,count(distinct case when rvlg_typ_cd in ('1','2') and prd_no<>'2001010101002' and ( APLY_ACPT_SUB_CLSS_CD<>'015' or prd_no not in ('2001010101003','2001010101004')) then cst_id end) as 结清户数_循环贷款_非泰e贷
,count(distinct case when prd_no='2001010101002' or ( APLY_ACPT_SUB_CLSS_CD='015' and prd_no in ('2001010101003','2001010101004')) then cst_id end) as 结清户数_泰e贷   --2001010101002泰e贷（消费） 2001010101003随贷通（消费） 2001010101004备用金（消费）
,count(distinct case when ctr_amt>=0 and ctr_amt<=100000 then cst_id end) as 结清户数_合同额度0至10万
,count(distinct case when ctr_amt>100000 and ctr_amt<=300000 then cst_id end) as 结清户数_合同额度10至30万
,count(distinct case when ctr_amt>300000  then cst_id end) as 结清户数_合同额度30万以上
from lab_bigdata_dev.xiaofei_xudai_01_20231031
group by brc_org_id,brc_org_nm;




-- 新增的口径 ： 同一风险控制号下的客户
drop table if exists lab_bigdata_dev.xiaofei_xudai_01_20231031_tongyifengxian;
create table if not exists lab_bigdata_dev.xiaofei_xudai_01_20231031_tongyifengxian as
select
			c.cst_id  --结清的同一风险控制号下的客户
            ,a.ctr_serno --合同流水号
			,a.rvlg_typ_cd  --	循环类型代码
			,a.exec_intr_rat --执行利率
			,a.ctr_eff_dt  --合同生效日期
			,a.ctr_bgn_dt --合同起始日期
			,a.ctr_mtu_dt --合同到期日期
			,a.tmt_dt  --终结日期
			,a.ctr_amt --合同金额
			,a.ctr_bal --合同余额
			,a.bus_ctr_id --是否发生借据
			,a.prd_no
			,a.pd_nm
            ,a.APLY_ACPT_SUB_CLSS_CD
from lab_bigdata_dev.xiaofei_xudai_01_20231031 as a
left join edw.DWS_CST_BAS_INF_DD as b
    on a.cst_id=b.cst_id
    and b.dt='20231031'
left join edw.DWS_CST_BAS_INF_DD as c --客户基础信息汇总表
    on b.SAM_RSK_CTRL_ID=c.SAM_RSK_CTRL_ID
    and c.dt='20231031';


-- 续贷，关联新发生业务，续贷的合同是消费贷  select * from lab_bigdata_dev.xiaofei_xudai_02 where brc_org_nm ='上海分行'
drop table if exists lab_bigdata_dev.xiaofei_xudai_02_20231031;
create table if not exists lab_bigdata_dev.xiaofei_xudai_02_20231031 as
select distinct a.*
        ,d.brc_org_id  --管护分行层级机构编号
		,d.brc_org_nm --管护分行层级机构名称
		,b.CTR_SERNO as CTR_SERNO_b
		,b.ctr_bgn_dt as  ctr_bgn_dt_xudai--合同起始日期
		,b.ctr_mtu_dt as ctr_mtu_dt_xudai--合同到期日期
		,b.tmt_dt as tmt_dt_xudai --终结日期
		,b.ctr_amt as ctr_amt_xudai--合同金额
		,b.ctr_bal as ctr_bal_xudai--合同余额
		,b.prd_no as prd_no_xudai--产品编号
		,b.rvlg_typ_cd as rvlg_typ_cd_b  --	循环类型代码
		,abs(datediff(to_date(b.ctr_bgn_dt, 'yyyymmdd'),to_date(a.tmt_dt, 'yyyymmdd'),'dd')) as jiangetianshu
 from lab_bigdata_dev.xiaofei_xudai_01_20231031_tongyifengxian as a --结清的同一风险控制号下的客户
--续贷的合同
left join (
    select distinct t1.cst_id
			,t1.CTR_SERNO
			,t1.ctr_bgn_dt --合同起始日期
			,t1.ctr_mtu_dt --合同到期日期
			,t1.rvlg_typ_cd  --	循环类型代码
			,t1.tmt_dt  --终结日期
			,t1.ctr_amt --合同金额
			,t1.ctr_bal --合同余额
			,t1.prd_no --产品编号
     from edw.DIM_BUS_LOAN_CTR_BSE_INF_DD as t1 --合同基础信息
    LEFT JOIN edw.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD as  t2 --合同其它明细信息
    ON      t1.CTR_SERNO = t2.CTR_SERNO
    AND     t2.dt = '20231031'
    WHERE   t1.dt = '20231031'
    AND     t1.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
    AND     ( t2.APLY_CHNL_CD <> 'L08'
        OR t1.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
    AND     t1.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
    AND     t1.PRD_NO <> '2001010101010' --剔除百度分期贷
    AND     ( t1.PRD_NO NOT IN ( '2001020101002' , '2001010101002' )
        OR nvl(t1.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
    and SUBSTR(t1.prd_no, 1, 6) = '200101'  --消费贷
    ) as b  --续贷的合同
on a.cst_id=b.cst_id
LEFT JOIN edw.dwd_bus_loan_ctr_mgr_inf_dd AS c --信贷合同管护信息
    ON b.CTR_SERNO=c.CTR_SERNO
    AND c.dt = '20231031'
inner join edw.dim_hr_org_mng_org_tree_dd as d --机构树_考核维度
    on c.MGR_ORG_ID=d.org_id
    and d.dt = '20231031'
    and d.brc_org_nm not like '%村镇银行%'
;

--2半自助循环 0非循环 1自助循环
--2001010101002泰e贷（消费） 2001010101003随贷通（消费） 2001010101004备用金（消费）


--同一风险控制号下的客户续贷的合同是消费贷  select * from lab_bigdata_dev.result_xudai_xiaofei_20231031_xudai;
drop table if exists lab_bigdata_dev.result_xudai_xiaofei_20231031_xudai;
create table if not exists lab_bigdata_dev.result_xudai_xiaofei_20231031_xudai as
select brc_org_id as 机构编号
,brc_org_nm as 机构名称
,count(distinct case when ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_整体
,count(distinct case when rvlg_typ_cd ='0' and ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_非循环贷款
,count(distinct case when rvlg_typ_cd in ('1','2') and prd_no<>'2001010101002'  and ( APLY_ACPT_SUB_CLSS_CD<>'015' or prd_no not in ('2001010101003','2001010101004')) and ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_循环贷款_非泰e贷
,count(distinct case when (prd_no='2001010101002' or ( APLY_ACPT_SUB_CLSS_CD='015' and prd_no in ('2001010101003','2001010101004'))) and ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_泰e贷
,count(distinct case when ctr_amt>=0 and ctr_amt<=100000 and ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_合同额度0至10万
,count(distinct case when ctr_amt>100000 and ctr_amt<=300000 and ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_合同额度10至30万
,count(distinct case when ctr_amt>300000  and ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_合同额度30万以上
from lab_bigdata_dev.xiaofei_xudai_02_20231031
group by brc_org_id,brc_org_nm;


-- 数据汇总
drop table if exists lab_bigdata_dev.result_xudai_xiaofei_20231031_huizong;
create table if not exists lab_bigdata_dev.result_xudai_xiaofei_20231031_huizong as
select a.机构编号
,a.机构名称

,a.结清户数_整体
,b.续贷户数_整体
,b.续贷户数_整体/a.结清户数_整体 as 续贷率_整体

,a.结清户数_非循环贷款
,b.续贷户数_非循环贷款
,b.续贷户数_非循环贷款/a.结清户数_非循环贷款 as 续贷率_非循环贷款

,a.结清户数_循环贷款_非泰e贷
,b.续贷户数_循环贷款_非泰e贷
,b.续贷户数_循环贷款_非泰e贷/a.结清户数_循环贷款_非泰e贷 as 续贷率_非泰e贷

,a.结清户数_泰e贷
,b.续贷户数_泰e贷
,b.续贷户数_泰e贷/a.结清户数_泰e贷 as 续贷率_泰e贷

,a.结清户数_合同额度0至10万
,b.续贷户数_合同额度0至10万
,b.续贷户数_合同额度0至10万/a.结清户数_合同额度0至10万 as 续贷率_合同额度0至10万

,a.结清户数_合同额度10至30万
,b.续贷户数_合同额度10至30万
,b.续贷户数_合同额度10至30万/a.结清户数_合同额度10至30万 as 续贷率_合同额度10至30万

,a.结清户数_合同额度30万以上
,b.续贷户数_合同额度30万以上
,b.续贷户数_合同额度30万以上/a.结清户数_合同额度30万以上 as 续贷率_合同额度30万以上
 from lab_bigdata_dev.result_xudai_xiaofei_20231031_jieqing as a
left join lab_bigdata_dev.result_xudai_xiaofei_20231031_xudai as b
on a.机构编号=b.机构编号;

----------------------------------------2.20231031续贷的合同不限制消费贷----------------------------------------

-- 续贷，关联新发生业务，续贷的合同不限制消费贷  select * from lab_bigdata_dev.xiaofei_xudai_02 where brc_org_nm ='上海分行'
drop table if exists lab_bigdata_dev.xiaofei_xudai_not_xiaofei_20231031;
create table if not exists lab_bigdata_dev.xiaofei_xudai_not_xiaofei_20231031 as
select distinct a.*
        ,d.brc_org_id  --管护分行层级机构编号
		,d.brc_org_nm --管护分行层级机构名称
		,b.CTR_SERNO as CTR_SERNO_b
		,b.ctr_bgn_dt as  ctr_bgn_dt_xudai--合同起始日期
		,b.ctr_mtu_dt as ctr_mtu_dt_xudai--合同到期日期
		,b.tmt_dt as tmt_dt_xudai --终结日期
		,b.ctr_amt as ctr_amt_xudai--合同金额
		,b.ctr_bal as ctr_bal_xudai--合同余额
		,b.prd_no as prd_no_xudai--产品编号
		,b.rvlg_typ_cd as rvlg_typ_cd_b  --	循环类型代码
		,abs(datediff(to_date(b.ctr_bgn_dt, 'yyyymmdd'),to_date(a.tmt_dt, 'yyyymmdd'),'dd')) as jiangetianshu
 from lab_bigdata_dev.xiaofei_xudai_01_20231031_tongyifengxian as a ----结清的同一风险控制号下的客户
--续贷的合同
left join (
    select distinct t1.cst_id
			,t1.CTR_SERNO
			,t1.ctr_bgn_dt --合同起始日期
			,t1.ctr_mtu_dt --合同到期日期
			,t1.rvlg_typ_cd  --	循环类型代码
			,t1.tmt_dt  --终结日期
			,t1.ctr_amt --合同金额
			,t1.ctr_bal --合同余额
			,t1.prd_no --产品编号
     from edw.DIM_BUS_LOAN_CTR_BSE_INF_DD as t1 --合同基础信息
    LEFT JOIN edw.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD as  t2 --合同其它明细信息
    ON      t1.CTR_SERNO = t2.CTR_SERNO
    AND     t2.dt = '20231031'
    WHERE   t1.dt = '20231031'
    AND     t1.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
    AND     ( t2.APLY_CHNL_CD <> 'L08'
        OR t1.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
    AND     t1.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
    AND     t1.PRD_NO <> '2001010101010' --剔除百度分期贷
    AND     ( t1.PRD_NO NOT IN ( '2001020101002' , '2001010101002' )
        OR nvl(t1.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
  --  and SUBSTR(t1.prd_no, 1, 6) = '200101'  --消费贷
    ) as b  --续贷的合同
on a.cst_id=b.cst_id
LEFT JOIN edw.dwd_bus_loan_ctr_mgr_inf_dd AS c --信贷合同管护信息
    ON b.CTR_SERNO=c.CTR_SERNO
    AND c.dt = '20231031'
inner join edw.dim_hr_org_mng_org_tree_dd as d --机构树_考核维度
    on c.MGR_ORG_ID=d.org_id
    and d.dt = '20231031'
    and d.brc_org_nm not like '%村镇银行%'
;

--2半自助循环 0非循环 1自助循环
--2001010101002泰e贷（消费） 2001010101003随贷通（消费） 2001010101004备用金（消费）


--续贷的合同不限制消费贷  select * from lab_bigdata_dev.xiaofei_xudai_03;
drop table if exists lab_bigdata_dev.result_xudai_not_xiaofei_20231031_xudai;
create table if not exists lab_bigdata_dev.result_xudai_not_xiaofei_20231031_xudai as
select brc_org_id as 机构编号
,brc_org_nm as 机构名称
,count(distinct case when ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_整体
,count(distinct case when rvlg_typ_cd ='0' and ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_非循环贷款
,count(distinct case when rvlg_typ_cd in ('1','2') and prd_no<>'2001010101002'  and ( APLY_ACPT_SUB_CLSS_CD<>'015' or prd_no not in ('2001010101003','2001010101004')) and ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_循环贷款_非泰e贷
,count(distinct case when (prd_no='2001010101002' or ( APLY_ACPT_SUB_CLSS_CD='015' and prd_no in ('2001010101003','2001010101004'))) and ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_泰e贷
,count(distinct case when ctr_amt>=0 and ctr_amt<=100000 and ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_合同额度0至10万
,count(distinct case when ctr_amt>100000 and ctr_amt<=300000 and ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_合同额度10至30万
,count(distinct case when ctr_amt>300000  and ctr_serno<>ctr_serno_b and jiangetianshu<=90 then cst_id end ) as 续贷户数_合同额度30万以上
from lab_bigdata_dev.xiaofei_xudai_not_xiaofei_20231031
group by brc_org_id,brc_org_nm;



-- 数据汇总
drop table if exists lab_bigdata_dev.result_xudai_not_xiaofei_20231031_huizong;
create table if not exists lab_bigdata_dev.result_xudai_not_xiaofei_20231031_huizong as
select a.机构编号
,a.机构名称

,a.结清户数_整体
,b.续贷户数_整体
,b.续贷户数_整体/a.结清户数_整体 as 续贷率_整体

,a.结清户数_非循环贷款
,b.续贷户数_非循环贷款
,b.续贷户数_非循环贷款/a.结清户数_非循环贷款 as 续贷率_非循环贷款

,a.结清户数_循环贷款_非泰e贷
,b.续贷户数_循环贷款_非泰e贷
,b.续贷户数_循环贷款_非泰e贷/a.结清户数_循环贷款_非泰e贷 as 续贷率_非泰e贷

,a.结清户数_泰e贷
,b.续贷户数_泰e贷
,b.续贷户数_泰e贷/a.结清户数_泰e贷 as 续贷率_泰e贷

,a.结清户数_合同额度0至10万
,b.续贷户数_合同额度0至10万
,b.续贷户数_合同额度0至10万/a.结清户数_合同额度0至10万 as 续贷率_合同额度0至10万

,a.结清户数_合同额度10至30万
,b.续贷户数_合同额度10至30万
,b.续贷户数_合同额度10至30万/a.结清户数_合同额度10至30万 as 续贷率_合同额度10至30万

,a.结清户数_合同额度30万以上
,b.续贷户数_合同额度30万以上
,b.续贷户数_合同额度30万以上/a.结清户数_合同额度30万以上 as 续贷率_合同额度30万以上
 from lab_bigdata_dev.result_xudai_xiaofei_20231031_jieqing as a
left join lab_bigdata_dev.result_xudai_not_xiaofei_20231031_xudai as b
on a.机构编号=b.机构编号;

--select * from lab_bigdata_dev.result_xudai_xiaofei_20241031_huizong
--select * from lab_bigdata_dev.result_xudai_not_xiaofei_20241031_huizong
--select * from lab_bigdata_dev.result_xudai_xiaofei_20231031_huizong
--select * from lab_bigdata_dev.result_xudai_not_xiaofei_20231031_huizong
**取数需求_20240604丽水促用信.sql
----汇总取促活合同
DROP TABLE IF EXISTS lab_bigdata_dev.promote_loan_cst_feature_20240531;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.promote_loan_cst_feature_20240531 AS
SELECT  t.cst_id            AS 客户号
        ,t6.cst_chn_nm      AS 中文名称
        ,t6.age             AS 年龄
        ,CASE
           WHEN t6.gdr_cd = '1' THEN '男性'
           WHEN t6.gdr_cd = '2' THEN '女性'
         END                AS 性别
        -- ,t2.sum_score_socre AS 非经营户模型分
        -- ,t3.sum_score_socre AS 经营户模型分
        ,t1.最小利率对应合同号
        ,t1.最小利率贷款产品
        ,t1.最小利率绑定金额
        ,t1.最小利率合同金额
        ,t9.cd_val_dscr     AS 结息方式
        ,t7.cst_ac_id       AS 随贷通卡号
        ,CASE
           WHEN t1.最小利率贷款产品 = '随贷通' AND t10.objectno IS NOT NULL THEN '激活'
           WHEN t1.最小利率贷款产品 = '随贷通' AND t10.objectno IS NULL     THEN '未激活'
         END                AS 随贷通是否激活
        ,t12.yanhuo_shanghu AS 烟火商户标签
        ,CASE
           WHEN datediff(to_date('20240531', 'yyyymmdd'), to_date(t4.apnt_start_dt, 'yyyymmdd'), 'dd') BETWEEN 30 AND 60                                                                               THEN '新授信客户'
		  -- WHEN datediff(to_date('20240531', 'yyyymmdd'), to_date(t4.apnt_start_dt, 'yyyymmdd'), 'dd') BETWEEN 30 AND 60 OR ( datediff(to_date('20240531', 'yyyymmdd'), to_date(t4.apnt_start_dt, 'yyyymmdd'), 'dd') > 90 AND max_end_dt = '' )                                                                                THEN '新授信客户'
           WHEN datediff(to_date('20240531', 'yyyymmdd'), to_date(max_end_dt, 'yyyymmdd'), 'dd') > 90 AND datediff(to_date(t4.apnt_mtu_dt, 'yyyymmdd'), to_date('20240531', 'yyyymmdd'), 'dd') > 90                                                                                                                            THEN '授信长期未用信客户'
           WHEN ( datediff(to_date(t4.apnt_mtu_dt, 'yyyymmdd'), to_date('20240531', 'yyyymmdd'), 'dd') <= 90 AND max_end_dt = '' ) OR ( datediff(to_date(t4.apnt_mtu_dt, 'yyyymmdd'), to_date('20240531', 'yyyymmdd'), 'dd') <= 90 AND datediff(to_date('20240531', 'yyyymmdd'), to_date(max_end_dt, 'yyyymmdd'), 'dd') > 90 ) THEN '授信即将到期客户'
         END                AS 客户生命周期
        ,CASE
           WHEN datediff(to_date('20240531', 'yyyymmdd'), to_date(t4.apnt_start_dt, 'yyyymmdd'), 'dd') BETWEEN 30 AND 60                                                                             THEN '授信30-60天内未用信的循环贷客户'
           WHEN datediff(to_date('20240531', 'yyyymmdd'), to_date(t4.apnt_start_dt, 'yyyymmdd'), 'dd') > 90 AND max_end_dt = ''                                                                      THEN '授信90天后未用信的循环贷客户'
           WHEN datediff(to_date('20240531', 'yyyymmdd'), to_date(max_end_dt, 'yyyymmdd'), 'dd') > 90 AND datediff(to_date(t4.apnt_mtu_dt, 'yyyymmdd'), to_date('20240531', 'yyyymmdd'), 'dd') > 90  THEN '距离上次用信超过90天的循环贷客户'
           WHEN datediff(to_date(t4.apnt_mtu_dt, 'yyyymmdd'), to_date('20240531', 'yyyymmdd'), 'dd') <= 90 AND max_end_dt = ''                                                                       THEN '未来90天内到期且一直未用信的随贷通客户'
           WHEN datediff(to_date(t4.apnt_mtu_dt, 'yyyymmdd'), to_date('20240531', 'yyyymmdd'), 'dd') <= 90 AND datediff(to_date('20240531', 'yyyymmdd'), to_date(max_end_dt, 'yyyymmdd'), 'dd') > 90 THEN '未来90天内到期且近90天未用信的随贷通客户'
         END                AS 客户所处阶段
        ,CASE
           WHEN ( t11.dbil_days_zx IS NULL AND t11.dbil_days IS NULL ) OR ( t11.dbil_days_zx IS NULL AND t11.dbil_days < 30 ) OR ( t11.dbil_days_zx >= 30 AND t11.dbil_days < 30 ) THEN '利率敏感客户'
           WHEN ( t11.dbil_days_zx IS NULL AND t11.dbil_days >= 30 ) OR ( t11.dbil_days_zx < 30 AND t11.dbil_days >= 30 ) OR ( t11.dbil_days_zx >= 30 AND t11.dbil_days >= 30 )    THEN '长期资金需求客户'
           WHEN t11.dbil_days_zx < 30 AND t11.dbil_days < 30                                                                                                                       THEN '短期资金需求客户'
         END                AS 客户类型
        ,CASE
           WHEN t4.dbil_cnt > 0 THEN '促复用信'
           ELSE '促首次用信'
         END                AS 场景分类
        ,t4.apnt_mtu_dt     AS 合同到期日
        ,t4.apnt_start_dt   AS 合同开始日
        ,t11.dbil_days      AS 我行借据平均天数
        ,t11.dbil_days_zx   AS 他行借据平均天数
        ,t1.最小利率合同对应利率      AS 折扣前利率
        ,t14.利率折扣
        ,t14.利率
        ,t14.predict 额度使用率_预测
        ,CASE
           WHEN ( t13.cst_id IS NOT NULL OR t13_4.客户号 IS NOT NULL OR t13_5.客户号 IS NOT NULL ) THEN 1
           ELSE 0
         END                AS 是否近二个月促用信客户打折客户
        ,t5.prm_org_id      AS 主管户机构号
        ,t5.prm_org_nm      AS 管户机构名称
        ,t5.prm_mgr_id      AS 主管户客户经理工号
        ,t5.prm_empe_nm     AS 主管户客户经理姓名
        -- ,t.prcp_bal         AS 取数点本金余额积数
        ,t.exe_intr_rat     AS 当前有普贷余额的加权月利率
        ,CASE
           WHEN t15.customer_id IS NOT NULL THEN 1
           ELSE 0
         END                AS 是否外呼黑名单
         ,T16.IF_CSM_LOAN_ID AS 经营消费标识
FROM    lab_bigdata_dev.promote_loan_target_ctr_20240531 t
LEFT JOIN    lab_bigdata_dev.promote_loan_feature_bus_inf_20240531 t1
ON      t.cst_id = t1.cst_id
LEFT JOIN    adm_pub.dsj_m2_loan_idv_gnr_unbus_md_3300_sc_r00_v01_mdl t2
ON      t.cst_id = t2.cst_id
AND     t2.dt = '20240531'
LEFT JOIN    adm_pub.dsj_m2_loan_idv_gnr_bus_md_3300_sc_r00_v01_mdl t3
ON      t.cst_id = t3.cst_id
AND     t3.dt = '20240531'
LEFT JOIN    lab_bigdata_dev.promote_loan_target_ctr_union_20240531 t4
ON      t.cst_id = t4.cst_id
AND     t1.最小利率对应合同号 = t4.busi_ctr_id
LEFT JOIN    lab_bigdata_dev.promote_loan_feature_cst_inf_20240531 t5
ON      t.cst_id = t5.cst_id
LEFT JOIN    adm_pub.adm_csm_cbas_idv_bas_inf_dd t6
ON      t.cst_id = t6.cst_id
AND     t6.dt = '20240531'
LEFT JOIN    (
                 SELECT  DISTINCT ln_lmt_ctr_id
                                  ,cst_ac_id
                 FROM    adm_pub.adm_pub_bus_svc_db_crd_inf_dd
                 WHERE   dt = '20240531'
             ) t7
ON      t1.最小利率对应合同号 = t7.ln_lmt_ctr_id
LEFT JOIN    edw.dim_bus_loan_ctr_inf_dd t8
ON      t1.最小利率对应合同号 = t8.busi_ctr_id
AND     t8.dt = '20240531'
LEFT JOIN    edw.dwd_code_library t9
ON      t8.intr_mth_cd = t9.cd_val
AND     t9.fld_nm = 'intr_mth_cd'
AND     t9.tbl_nm = 'dim_bus_loan_ctr_inf_dd'
LEFT JOIN    (
                 SELECT  objectno
                 FROM    edw.loan_cyclecontractfreeze
                 WHERE   dt = '20240531'
                 AND     reason LIKE '激活'
                 GROUP BY objectno
             ) t10
ON      t1.最小利率对应合同号 = t10.objectno
LEFT JOIN    lab_bigdata_dev.promote_loan_dbil_days_20240531 t11
ON      t.cst_id = t11.cst_id
LEFT JOIN    (
                 SELECT  DISTINCT cst_id
                                  ,yanhuo_shanghu
                 FROM    lab_bigdata_dev.wushan_yanhuo_forml_cst_target_all
                 WHERE   dt = '20240531'
             ) t12
ON      t.cst_id = t12.cst_id
LEFT JOIN    (
                 SELECT  DISTINCT cst_id
                 FROM    lab_bigdata_dev.wushan_market_case_cst_list_03
                 WHERE   case_no = 'USE_CASE_07'
                 AND     exec_date >= substr(REPLACE(add_months(to_date('20240531', 'yyyymmdd'), - 1), '-', ''), 1, 6) -- 20240400 即剔除4、5两个月份外呼的客户
                 AND     sample_class IN ( '已接通实验组' , '未接通实验组' )
             ) t13
ON      t.cst_id = t13.cst_id
-- LEFT JOIN    lab_bigdata_dev.cst_promote_loan_sdt_list_20240301 t13_1
-- ON      t.cst_id = t13_1.客户号
-- AND     t13_1.配置实验组 LIKE '%(打折)%'
LEFT JOIN    lab_bigdata_dev.cst_promote_loan_sdt_list_20240407 t13_4 -- 4月有打折不外呼的客户，此处补充
ON      t.cst_id = t13_4.客户号
AND     t13_4.配置实验组 LIKE '%(打折)%'
LEFT JOIN    cst_promote_loan_sdt_list_20240514 t13_5 -- 5月常规促用信有打折不外呼的客户，此处补充
ON      t.cst_id = t13_5.客户号
AND     t13_5.配置实验组 LIKE '%(打折)%'
LEFT JOIN    promote_discount_plan_optimal_datenow20240521 t14
ON      t1.最小利率对应合同号 = t14.业务合同编号
LEFT JOIN    edw.cout_tb_out_redlist t15
ON      t.cst_id = t15.customer_id
AND     t15.dt = '20240531'
LEFT JOIN APP_ADO.FCT_SML_LOAN_AMT_LIST_DD T16
ON t1.最小利率对应合同号 = T16.BUSI_CTR_ID
AND T16.DT = '20240531'
;


-------------------------------------------------------------------------------------------------
-- 导入2、3月客户清单：
DROP TABLE IF EXISTS ai_cyx_mid_month2and3_dbil PURGE;

CREATE TABLE ai_cyx_mid_month2and3_dbil AS
SELECT  T.CST_ID
        ,T.BUSI_CTR_ID
        ,T.exec_date
        ,T.discount
        ,T.contact_channel
        ,MAX(CASE
               WHEN T1.DBIL_ID IS NOT NULL THEN 1
               ELSE 0
             END) AS 是否转化
FROM    CYX_DISCOUNT_EXPERIMENT_CST_LIST_01 T
LEFT JOIN    (
                 SELECT  T1.bus_ctr_id
                         ,T1.DBIL_ID
                         ,NVL(CASE
                                WHEN T1.end_dt = '18991231' THEN datediff(to_date(LEAST('@@{yyyyMMdd}', T1.apnt_mtu_day), 'yyyymmdd'), to_date(dtrb_dt, 'yyyymmdd'), 'dd')
                                ELSE datediff(to_date(T1.END_DT, 'yyyymmdd'), to_date(dtrb_dt, 'yyyymmdd'), 'dd')
                              END, 0) 用信时间
                 FROM    EDW.DIM_BUS_LOAN_DBIL_INF_DD T1
                 WHERE   T1.DT = '@@{yyyyMMdd}' -- 取最新的时点观察转化情况
                 AND     T1.dtrb_dt >= '20240201' -- 取20240201之后的借据转化情况
                 AND     T1.DCNT_INTR_RAT IS NOT NULL
             ) T1
ON      T.BUSI_CTR_ID = T1.bus_ctr_id
AND     T1.用信时间 > 0
WHERE   T.CASE_COMMENT = 'COMMON'
AND     T.MONTH IN ( '202402' , '202403' )
GROUP BY T.CST_ID , T.BUSI_CTR_ID , T.exec_date , T.discount ,T.contact_channel;


-- 利率折扣调整
DROP TABLE IF EXISTS lab_bigdata_dev.promote_loan_cst_feature_discount_adj_20240531 PURGE;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.promote_loan_cst_feature_discount_adj_20240531 AS
SELECT  t1.最小利率对应合同号
        ,t2.DISCOUNT 历史折扣
        ,least(CASE
                 WHEN t2.BUSI_CTR_ID IS NOT NULL THEN ( t2.DISCOUNT - 0.1 )
                 ELSE 1
               END, t1.利率折扣) 调整后折扣

        ,T2.contact_channel AS 最近一次促销触达方式
FROM    promote_loan_cst_feature_20240531 t1
LEFT JOIN    ai_cyx_mid_month2and3_dbil t2
ON      t1.最小利率对应合同号 = t2.BUSI_CTR_ID
AND     T2.是否转化 = 0;



----汇总输出目标表  select * from lab_bigdata_dev.promote_loan_cst_feature_mubiao where 他行借据平均天数 is null
DROP TABLE IF EXISTS lab_bigdata_dev.promote_loan_cst_feature_mubiao;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.promote_loan_cst_feature_mubiao AS
select
a.col_1 as 客户号
,a.col_2 as 中文名称
,b.年龄
,b.性别
,a.col_3 as 授信额度
,a.col_4 as 绑定额度
,a.col_5 as 客户账号
,a.col_6 as 生效日期
,a.col_7 as 到期日期
,a.col_8 as 激活日期
,a.col_9 as 首次授信生效日期
,a.col_10 as 正常利率
,a.col_11 as 额度状态代码
,a.col_12 as 透支额
,a.col_13 as 日均规模
,b.最小利率对应合同号
,b.最小利率贷款产品
,b.最小利率绑定金额
,b.最小利率合同金额
,b.结息方式
,b.随贷通卡号
,b.随贷通是否激活
,b.烟火商户标签
,b.客户生命周期
,b.客户所处阶段
,b.客户类型
,b.场景分类
,b.合同到期日
,b.合同开始日
,b.我行借据平均天数
,b.他行借据平均天数
,b.折扣前利率
,b.额度使用率_预测
,b.是否近二个月促用信客户打折客户
,b.主管户机构号
,b.管户机构名称
,b.主管户客户经理工号
,b.主管户客户经理姓名
,b.当前有普贷余额的加权月利率
,b.是否外呼黑名单
,b.经营消费标识
,c.历史折扣
,c.调整后折扣
,( b.折扣前利率 * c.调整后折扣 ) AS 折扣后利率 --江杰
,c. 最近一次促销触达方式
from qbi_file_20240604_10_27_42 as a  --丽水分行客户  16789
left join LAB_BIGDATA_DEV.promote_loan_cst_feature_20240531 as b
    on a.col_1=b.客户号
left join  lab_bigdata_dev.promote_loan_cst_feature_discount_adj_20240531 as c
    on b.最小利率对应合同号=c.最小利率对应合同号
where a.pt<>''
;
SELECT * FROM promote_loan_cst_feature_20240531 where 客户生命周期='新授信客户';



-- 导入2、3月客户清单：
DROP TABLE IF EXISTS ai_cyx_mid_month2and3_dbil PURGE;

CREATE TABLE ai_cyx_mid_month2and3_dbil AS
SELECT  T.CST_ID
        ,T.BUSI_CTR_ID
        ,T.exec_date
        ,T.discount --利率折扣
        ,T.contact_channel --触达渠道
        ,MAX(CASE
               WHEN T1.DBIL_ID IS NOT NULL THEN 1
               ELSE 0
             END) AS 是否转化
FROM    CYX_DISCOUNT_EXPERIMENT_CST_LIST_01 T  --促用信每月下发清单底层表
LEFT JOIN    (
                 SELECT  T1.bus_ctr_id
                         ,T1.DBIL_ID
                         ,NVL(CASE
                                WHEN T1.end_dt = '18991231' THEN datediff(to_date(LEAST('@@{yyyyMMdd}', T1.apnt_mtu_day), 'yyyymmdd'), to_date(dtrb_dt, 'yyyymmdd'), 'dd')
                                ELSE datediff(to_date(T1.END_DT, 'yyyymmdd'), to_date(dtrb_dt, 'yyyymmdd'), 'dd')
                              END, 0) 用信时间
                 FROM    EDW.DIM_BUS_LOAN_DBIL_INF_DD T1
                 WHERE   T1.DT = '@@{yyyyMMdd}' -- 取最新的时点观察转化情况
                 AND     T1.dtrb_dt >= '20240201' -- 取20240201之后的借据转化情况
                 AND     T1.DCNT_INTR_RAT IS NOT NULL
             ) T1
ON      T.BUSI_CTR_ID = T1.bus_ctr_id
AND     T1.用信时间 > 0
WHERE   T.CASE_COMMENT = 'COMMON'  --促用信备注
AND     T.MONTH IN ( '202402' , '202403', '202404', '202405', '202406' )
GROUP BY T.CST_ID , T.BUSI_CTR_ID , T.exec_date , T.discount ,T.contact_channel;


-- 利率折扣调整
DROP TABLE IF EXISTS lab_bigdata_dev.promote_loan_cst_feature_discount_adj_20240531 PURGE;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.promote_loan_cst_feature_discount_adj_20240531 AS
SELECT  t1.最小利率对应合同号
        ,t2.DISCOUNT 历史折扣
        ,least(CASE
                 WHEN t2.BUSI_CTR_ID IS NOT NULL THEN ( t2.DISCOUNT - 0.1 )
                 ELSE 1
               END, t1.利率折扣) 调整后折扣

        ,T2.contact_channel AS 最近一次促销触达方式
FROM    promote_loan_cst_feature_20240531 t1
LEFT JOIN    ai_cyx_mid_month2and3_dbil t2
ON      t1.最小利率对应合同号 = t2.BUSI_CTR_ID
AND     T2.是否转化 = 0;




----汇总输出目标表  select * from lab_bigdata_dev.promote_loan_cst_feature_mubiao where 他行借据平均天数 is null
DROP TABLE IF EXISTS lab_bigdata_dev.promote_loan_cst_feature_mubiao;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.promote_loan_cst_feature_mubiao AS
select
a.col_1 as 客户号
,a.col_2 as 中文名称
,b.年龄
,b.性别
,a.col_3 as 授信额度
,a.col_4 as 绑定额度
,a.col_5 as 客户账号
,a.col_6 as 生效日期
,a.col_7 as 到期日期
,a.col_8 as 激活日期
,a.col_9 as 首次授信生效日期
,a.col_10 as 正常利率
,a.col_11 as 额度状态代码
,a.col_12 as 透支额
,a.col_13 as 日均规模
,b.最小利率对应合同号
,b.最小利率贷款产品
,b.最小利率绑定金额
,b.最小利率合同金额
,b.结息方式
,b.随贷通卡号
,b.随贷通是否激活
,b.烟火商户标签
,b.客户生命周期
,b.客户所处阶段
,b.客户类型
,b.场景分类
,b.合同到期日
,b.合同开始日
,b.我行借据平均天数
,b.他行借据平均天数
,b.折扣前利率
,b.额度使用率_预测
,b.是否近二个月促用信客户打折客户
,b.主管户机构号
,b.管户机构名称
,b.主管户客户经理工号
,b.主管户客户经理姓名
,b.当前有普贷余额的加权月利率
,b.是否外呼黑名单
,b.经营消费标识
,c.历史折扣
,c.调整后折扣
,( b.折扣前利率 * c.调整后折扣 ) AS 折扣后利率 --江杰
,c. 最近一次促销触达方式
from qbi_file_20240604_10_27_42 as a  --丽水分行客户  16789
left join LAB_BIGDATA_DEV.promote_loan_cst_feature_20240531 as b
    on a.col_1=b.客户号
left join  lab_bigdata_dev.promote_loan_cst_feature_discount_adj_20240531 as c
    on b.最小利率对应合同号=c.最小利率对应合同号
where a.pt<>''
;


SELECT * FROM promote_loan_cst_feature_mubiao
**取数需求_20240604绍兴促用信.sql
--1、选定要分析的合同
--1.1 合同基本信息  select count(distinct CST_ID) from lab_bigdata_dev.tmp_promote_loan_target_01_shaoxing_20240531;
drop table if exists lab_bigdata_dev.tmp_promote_loan_target_01_shaoxing_20240531;
create table if not exists lab_bigdata_dev.tmp_promote_loan_target_01_shaoxing_20240531 as
select a.客户号 AS CST_ID
      ,t1.cst_typ_cd                              --客户类型：1 对私,2 对公
      ,t1.loan_cst_typ_cd                         --信贷客户类型
      ,coalesce(t2.own_emp_id,'') as own_emp_id   --本行员工号
      ,t.serialno                                                                                           AS BUSI_CTR_ID
      ,COALESCE(t.BUSINESSTYPE, '')                                                                         AS PD_CD
      ,COALESCE(t.BUSINESSFLAG,'')                                                                          AS BUS_CD  --业务标识
      ,CASE
           WHEN COALESCE(t.CYCLEFLAG, '') = '1' THEN '1'
           ELSE '0'
         END                                                                                                AS CRC_IND -- 是否循环
      ,CASE
           WHEN COALESCE(t.CYCLEFLAG, '') = '1' AND COALESCE(t.ISSELFHELPCYCLE, '') = '1' THEN '1'
           ELSE '0'
         END                                                                                                AS IS_SLF_CRC -- 是否自助
      ,CASE
           WHEN COALESCE(t.CYCLEFLAG, '') = '1' AND COALESCE(T.isselfhelpcycle, '') IN ( '' , '0' )              THEN '1'
           WHEN COALESCE(t.CYCLEFLAG, '') = '1' AND COALESCE(t.ISSELFHELPCYCLE, '') = '1' AND COALESCE(t.CYCLETYPE, '') = '' THEN '1'
           ELSE COALESCE(t.CYCLETYPE, '')
         END                                                                                                AS CYC_TYP_CD       --循环贷款类型
      ,COALESCE(t.BUSINESSSUM, 0)                                                                           AS CTR_AMT          --合同金额
      ,COALESCE(BALANCE, 0)                                                                                 AS CTR_BAL          --合同余额
      ,COALESCE(TERMMONTH, 0)                                                                               AS TRM_MON          --期限月
      ,COALESCE(BASERATE, 0)                                                                                AS STDINR           --基准利率
      ,COALESCE(REFBUSINESSRATE, 0)                                                                         AS REF_MON_INTR_RAT --参考月利率
      --,COALESCE(BUSINESSRATE, 0)                                                                          AS INTR_RAT         --利率
      ,CASE WHEN T3.bus_ctr_id IS NOT NULL THEN T3.exe_mon_intr_rat ELSE COALESCE(t.BUSINESSRATE,0) END     AS INTR_RAT         -- 执行利率
      ,CASE
           WHEN t.PUTOUTDATE IS NULL OR TRIM(t.PUTOUTDATE) = '' THEN '18991231'
           ELSE REPLACE(t.PUTOUTDATE, '/', '')
         END                                                                                                AS APNT_START_DT --约定开始日期
      ,CASE
           WHEN t.MATURITY IS NULL OR TRIM(t.MATURITY) = '' THEN '18991231'
           ELSE REPLACE(t.MATURITY, '/', '')
         END                                                                                                AS APNT_MTU_DT --约定到期日期
      ,CASE
           WHEN t.FINISHDATE IS NULL OR TRIM(t.FINISHDATE) = '' THEN '18991231'
           ELSE REPLACE(t.FINISHDATE, '/', '')
         END                                                                                                AS END_DT --终结日期
      ,CASE
           WHEN OCCURDATE IS NULL OR TRIM(OCCURDATE) = '' THEN '18991231'
           ELSE REPLACE(OCCURDATE, '/', '')
         END                                                                                                AS HPN_DT --发生日期
      ,COALESCE(t.FREEZEFLAG, '')                                                                           AS FRZ_STS_CD  --合同状态
  from cst_id_shaoxing as a  --绍兴分行客户
  left join edw.loan_business_contract t on t.customerid=a.客户号 and t.dt=20240531
 inner join edw.dws_cst_bas_inf_dd t1 on t.customerid=t1.cst_id and t1.dt=20240531
  left join edw.dim_cst_idv_bas_inf_dd t2 on t.customerid=t2.cst_id and t2.dt=20240531
  left join (SELECT bus_ctr_id
                   ,MIN(exe_mon_intr_rat) as exe_mon_intr_rat
               FROM edw.dim_bus_loan_crc_ctr_inf_dd  --循环贷款合同信息
              WHERE DT=20240531
                AND intr_rat_mth='020'
              GROUP BY bus_ctr_id
            ) T3 ON T.serialno=T3.bus_ctr_id AND t3.exe_mon_intr_rat<>0

 ;

--1.2 取贷款月日均、合同使用情况
drop table if exists lab_bigdata_dev.tmp_promote_loan_target_02_shaoxing_20240531;
create table if not exists lab_bigdata_dev.tmp_promote_loan_target_02_shaoxing_20240531 as
select cst_id
      ,bus_ctr_id                      as busi_ctr_id
      ,sum(last_90_days_prcp_bal_acml)   as last_90_days_prcp_bal_acml
      ,count(distinct dbil_id)         as dbil_cnt                   --历史用信次数
      ,max(CASE WHEN END_DT = '18991231' THEN apnt_mtu_day ELSE end_dt END )                     as max_end_dt                 --合同最近一笔借据结清日期 2023.12.06 修改口径
      ,max(dtrb_dt)                    as max_dtrb_dt                --合同最近一笔借据生效日期
  from edw.dws_bus_loan_dbil_inf_dd
 where dt = 20240531
 group by cst_id,bus_ctr_id
;


--1.3 取额度状态为正常的随贷通绑定额度
drop table if exists lab_bigdata_dev.tmp_promote_loan_target_03_shaoxing_20240531;
create table if not exists lab_bigdata_dev.tmp_promote_loan_target_03_shaoxing_20240531 as
select distinct bus_ctr_id as busi_ctr_id
      ,bind_lmt
      ,eft_dt
      ,mtu_dt
      ,lmt_sts_cd  -- 额度状态 0正常   3未激活  4止付 5未签约  1停用  2已解约
  from edw.dwd_bus_loan_fnc_crd_lmt_inf_dd
 where dt = 20240531
;

--1.4 取数时点客户是否无贷
drop table if exists lab_bigdata_dev.tmp_promote_loan_target_04_shaoxing_20240531;
create table if not exists lab_bigdata_dev.tmp_promote_loan_target_04_shaoxing_20240531 as
select cst_id
      ,sum(prcp_bal)                   as prcp_bal                   --取数时点本金余额积数
      ,sum(last_90_days_prcp_bal_acml) as last_90_days_prcp_bal_acml --近90天本金余额积数
  from edw.dws_bus_loan_dbil_inf_dd
where dt=20240531
group by cst_id
;


--1.5 取循环贷款合同信息表中实际启用额度
drop table if exists lab_bigdata_dev.tmp_promote_loan_target_05_shaoxing_20240531;
create table if not exists lab_bigdata_dev.tmp_promote_loan_target_05_shaoxing_20240531 as
select a.bus_ctr_id as busi_ctr_id
      ,sum(a.actl_start_use_crd_lmt) as actl_start_use_crd_lmt --实际启用授信额度
  from (select REPLACE(REPLACE(REPLACE(COALESCE(TRIM(OBJECTNO), ''), CHR(13), ''), CHR(10), ''), '&quot;', '')        AS BUS_CTR_ID
              ,REPLACE(REPLACE(REPLACE(COALESCE(TRIM(CYCLELEVEL), ''), CHR(13), ''), CHR(10), ''), '&quot;', '')      AS CRC_INF_STG_ID  --循环信息阶段号
              ,COALESCE(REALSUM, 0)                                                                              AS ACTL_START_USE_CRD_LMT --实际启用授信额度
              ,row_number() over(partition by REPLACE(REPLACE(REPLACE(COALESCE(TRIM(OBJECTNO), ''), CHR(13), ''), CHR(10), ''), '&quot;', ''),REPLACE(REPLACE(REPLACE(COALESCE(TRIM(CYCLELEVEL), ''), CHR(13), ''), CHR(10), ''), '&quot;', '') order by REPLACE(REPLACE(REPLACE(COALESCE(TRIM(SERIALNO), ''), CHR(13), ''), CHR(10), ''), '&quot;', '') desc) as row_no
          from edw.LOAN_CYCLOAN_INFO   --循环贷款信息表
         where dt = 20240531
           and OBJECTTYPE = 'BusinessContract'
       ) a
 where a.row_no=1
 group by a.bus_ctr_id
;

--1.6 循环贷合同操作记录信息,取合同状态为冻结、但冻结原因为自动冻结的合同
drop table if exists lab_bigdata_dev.tmp_promote_loan_target_06_shaoxing_20240531;
create table if not exists lab_bigdata_dev.tmp_promote_loan_target_06_shaoxing_20240531 as
SELECT  a.OBJECTNO    as busi_ctr_id
       ,a.SERIALNO    as srl_nbr
       ,a.FREEZETYPE  as opr_typ
       ,a.REASONCODE  as frz_rsn_cd
       ,a.REASON      as frz_rsn
       ,a.OPERATEDATE as hdl_dt
  FROM (SELECT OBJECTNO
              ,SERIALNO
              ,FREEZETYPE
              ,REASONCODE
              ,REASON
              ,OPERATEDATE
              ,ROW_NUMBER() OVER ( PARTITION BY dt,OBJECTNO ORDER BY OPERATEDATE desc,SERIALNO DESC ) AS row_no
          FROM edw.LOAN_CYCLECONTRACTFREEZE
         WHERE dt = 20240531
       ) a
  WHERE a.row_no = 1
;

--1.7 命中精准贷后次数
drop table if exists lab_bigdata_dev.tmp_promote_loan_target_07_shaoxing_20240531;
create table if not exists lab_bigdata_dev.tmp_promote_loan_target_07_shaoxing_20240531 as
select t1.cst_id
      ,count(1) as jzdh_cnt --近一年内命中精准贷后的次数
  from (select customerid as cst_id
              ,REPLACE(startdate, '/', '') as startdate
              ,row_number() over(partition by customerid,REPLACE(startdate, '/', '') order by updatedate desc) as row_no
          from edw.loan_loan_post_task
         where dt=20240531
           and CHECKTYPE = '01'
           and coalesce(risklevel,'')<>'01'
           and startdate IS not NULL
           and TRIM(startdate) <> ''
        ) t1
 where t1.row_no=1
   and datediff(to_date(20240531,'yyyymmdd'),to_date(startdate,'yyyymmdd'),'dd')>0
   and datediff(to_date(20240531,'yyyymmdd'),to_date(startdate,'yyyymmdd'),'dd')<=365
 group by t1.cst_id
 ;


 ----循环贷款近期借据情况
drop table if exists lab_bigdata_dev.tmp_promote_loan_target_08_shaoxing_20240531;
create table if not exists lab_bigdata_dev.tmp_promote_loan_target_08_shaoxing_20240531 as
select t1.cst_id
      ,max(CASE WHEN t1.END_DT = '18991231' THEN t1.apnt_mtu_day ELSE t1.end_dt END) as max_end_dt
      ,max(t1.dtrb_dt) as max_dtrb_dt                --合同最近一笔借据生效日期
from edw.dws_bus_loan_dbil_inf_dd t1
inner join edw.dim_bus_loan_ctr_inf_dd  t2
on t1.bus_ctr_id = t2.busi_ctr_id
and t2.dt = 20240531
and (substr(t2.pd_cd,1,7) = '2010503'
    or t2.pd_cd IN ( '201050101040348' , '201050102010146' )
    or (t2.crc_ind='1' and t2.is_slf_crc = '1' and t2.cyc_typ_cd in ('1','2')) )
where t1.dt = 20240531
group by t1.cst_id;

--1.8 合并  select count(distinct cst_id) from lab_bigdata_dev.promote_loan_target_ctr_union_shaoxing_20240531;
drop table if exists lab_bigdata_dev.promote_loan_target_ctr_union_shaoxing_20240531;
create table if not exists lab_bigdata_dev.promote_loan_target_ctr_union_shaoxing_20240531 as
select t.cst_id
      ,t.loan_cst_typ_cd                     --信贷客户类型
      ,case when t.loan_cst_typ_cd='0704' then '工薪类客群' else '经营性客群' end as cst_type
      ,t1.prm_org_id                          --管户机构号
      ,t.BUSI_CTR_ID
      ,t.PD_CD
      ,case when substr(t.pd_cd,1,7)= '2010503' then '随贷通'
            when t.pd_cd IN ( '201050101040348' , '201050102010146' ) then '泰e贷'
            when (t.crc_ind='1' and t.is_slf_crc = '1' and t.cyc_typ_cd in ('1','2')) then '融e贷'
            else '其他' end as pd_nm
     ,CASE
           WHEN T.cyc_typ_cd = '1' THEN '单段'
           ELSE '多段'
         END           AS 是否单段
      ,t.CTR_AMT          --合同金额
      ,t.CTR_BAL          --合同余额
      ,t.TRM_MON          --期限月
      ,t.STDINR           --基准利率
      ,t.REF_MON_INTR_RAT --参考月利率
      ,t.INTR_RAT         --利率
      ,t.APNT_START_DT    --约定开始日期
      ,t.APNT_MTU_DT      --约定到期日期
      ,t.END_DT           --终结日期
      ,t.HPN_DT           --发生日期
      ,t.FRZ_STS_CD       --合同状态
      ,case when substr(t.pd_cd,1,7) = '2010503' then t3.bind_lmt else coalesce(t5.actl_start_use_crd_lmt,t.ctr_amt) end as bind_amt ----实际启用授信额度
      ,coalesce(t6.frz_rsn_cd,'')  as frz_rsn_cd
      ,coalesce(t6.frz_rsn,'')     as frz_rsn
      ,coalesce(t2.dbil_cnt,0)     as dbil_cnt    --历史用信次数
      ,coalesce(t2.max_end_dt,'')  as max_end_dt  --合同最近一笔借据结清日期
      ,coalesce(t2.max_dtrb_dt,'') as max_dtrb_dt --合同最近一笔借据生效日期
      ,case when t2.BUSI_CTR_ID is not null then '1' else '0' end as is_use     --是否有过用信
      ,coalesce(t2.last_90_days_prcp_bal_acml,0)     as last_90_days_prcp_bal_acml    --近90天本金余额积数
      ,coalesce(t4.prcp_bal,0)                   as prcp_bal                    --取数时点本金余额积数
      ,coalesce(t7.jzdh_cnt,0)                   as jzdh_cnt                    --近一年内命中精准贷后的次数
  from lab_bigdata_dev.tmp_promote_loan_target_01_shaoxing_20240531 t
 inner join adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t1 on t.cst_id=t1.cst_id and t1.dt=20240531
  left join lab_bigdata_dev.tmp_promote_loan_target_02_shaoxing_20240531 t2 on t.cst_id=t2.cst_id and t.BUSI_CTR_ID=t2.BUSI_CTR_ID
  left join lab_bigdata_dev.tmp_promote_loan_target_03_shaoxing_20240531 t3 on t.BUSI_CTR_ID=t3.BUSI_CTR_ID
  left join lab_bigdata_dev.tmp_promote_loan_target_04_shaoxing_20240531 t4 on t.cst_id=t4.cst_id
  left join lab_bigdata_dev.tmp_promote_loan_target_05_shaoxing_20240531 t5 on t.BUSI_CTR_ID=t5.BUSI_CTR_ID
  left join lab_bigdata_dev.tmp_promote_loan_target_06_shaoxing_20240531 t6 on t.BUSI_CTR_ID=t6.BUSI_CTR_ID
  left join lab_bigdata_dev.tmp_promote_loan_target_07_shaoxing_20240531 t7 on t.cst_id=t7.cst_id
  left join lab_bigdata_dev.tmp_promote_loan_target_08_shaoxing_20240531 t8 on t.cst_id = t8.cst_id
 where
--  t.own_emp_id=''  --非员工贷款
--    and t.cst_typ_cd='1' --客户类型：对私
  (substr(t.pd_cd,1,7)= '2010503'
        or t.pd_cd IN ( '201050101040348' , '201050102010146' )
        or (t.crc_ind='1' and t.is_slf_crc = '1' and t.cyc_typ_cd in ('1','2'))
       )  --自助循环贷款：随贷通、融e贷、泰e贷
   and t.BUS_CD <> 'J' --剔除重组
--    and (t8.max_end_dt is null
--         or datediff(to_date(20240531,'yyyymmdd'),to_date(t8.max_end_dt,'yyyymmdd'),'dd')>90
--         ) -- 90天循环贷未用信
   and pd_cd not in ('2020051800000005','2020051500000003','2020051500000002','2020051500000004','2020041400000002','2020030900000003',
'2020030900000001','2018122700000002','2018091000000001','2018081400000005','2019041200000001','2020022800000001','2020021200000003')    ----剔除政策性贷款
    -- and coalesce(t4.PRCP_BAL,0) = 0   ---客户级当前无贷
    -- and cyc_typ_cd = '1'  ----单段
    -- and coalesce(t.CTR_BAL,0) = 0 --合同当前未用信
;

-- lmt_sts_cd 额度状态代码
-- 1     停用
-- 2     已解约
-- 0     正常
-- 3     未激活
-- 4     止付
-- 5     未签约

-- wrt_off_ind 核销标识
-- 1  系统核销
-- 7  手工转不良核销
-- 9  手工核销
-- 0/空  未核销
-- 8  保险核销
drop table if exists lab_bigdata_dev.promote_loan_sunyi_model_shaoxing_20240531;
create table if not exists lab_bigdata_dev.promote_loan_sunyi_model_shaoxing_20240531 as
select cst_id,BUSI_CTR_ID,'20240531' as date_now
from lab_bigdata_dev.promote_loan_target_ctr_union_shaoxing_20240531;

--1.9 筛选满足合同起始日期条件的合同（泰e贷、随贷通、融e贷3个月）  select count(distinct cst_id) from lab_bigdata_dev.promote_loan_target_ctr_zzxh_shaoxing_20240531
drop table if exists lab_bigdata_dev.promote_loan_target_ctr_zzxh_shaoxing_20240531;
create table if not exists lab_bigdata_dev.promote_loan_target_ctr_zzxh_shaoxing_20240531 as
--随贷通
select t.*
  from lab_bigdata_dev.promote_loan_target_ctr_union_shaoxing_20240531 t
 where t.pd_nm='随贷通'
    and (t.frz_sts_cd = '1' OR ( t.frz_sts_cd = '2' and t.frz_rsn_cd='100050'))
--    and (datediff(to_date(20240531,'yyyymmdd'),to_date(t.apnt_start_dt,'yyyymmdd'),'dd') between 30 and 60
--         or datediff(to_date(20240531,'yyyymmdd'),to_date(t.apnt_start_dt,'yyyymmdd'),'dd') > 90 )--合同起始日期距今30-60天或者90天以上
--    and datediff(to_date(t.apnt_mtu_dt,'yyyymmdd'),to_date(20240531,'yyyymmdd'),'dd') > 20    --合同到期时间在取数时间20天以后 --20240325修改
and t.apnt_mtu_dt>'20240531'
--    and t.bind_amt>=20000                                       --授信额度低于1000，可能为异常合同；授信额度低于20000，用信率很低，所以限制额度高于20000
 and t.bind_amt is not null                                  --有些额度状态非正常的随贷通合同，加工后的授信额度为空，所以剔除
--    and t.INTR_RAT > 5.5                                          ----利率大于5.5
   and t.BUSI_CTR_ID in (select distinct ln_lmt_ctr_id
        from  adm_pub.adm_pub_bus_svc_db_crd_inf_dd
        where dt = '20240531'
        AND   lmt_sts_cd not in ('1','2')
        AND   nvl(wrt_off_ind,'0') = '0')   ----随贷通卡正常
-- --泰e贷
union all
select t.*
  from lab_bigdata_dev.promote_loan_target_ctr_union_shaoxing_20240531 t
 where t.pd_nm='泰e贷'
   and (t.frz_sts_cd = '1' OR ( t.frz_sts_cd = '2' and t.frz_rsn_cd='100050'))
   and t.apnt_mtu_dt>'20240531'
--    and (datediff(to_date(20240531,'yyyymmdd'),to_date(t.apnt_start_dt,'yyyymmdd'),'dd') between 30 and 60
--         or datediff(to_date(20240531,'yyyymmdd'),to_date(t.apnt_start_dt,'yyyymmdd'),'dd') > 90 )--合同起始日期距今30-60天或者90天以上
--    and datediff(to_date(t.apnt_mtu_dt,'yyyymmdd'),to_date(20240531,'yyyymmdd'),'dd')>=90    --合同到期时间在取数时间90天以后
--    and t.bind_amt>=20000                                                                           --授信额度低于1000，可能为异常合同；授信额度低于20000，用信率很低，所以限制额度高于20000
   and t.bind_amt is not null                                                                      --有些额度状态非正常的随贷通合同，加工后的授信额度为空，所以剔除
--    and t.INTR_RAT > 5.5                                                                            -----利率大于5.5
--融e贷
union all
select t.*
  from lab_bigdata_dev.promote_loan_target_ctr_union_shaoxing_20240531 t
 where t.pd_nm='融e贷'
   and (t.frz_sts_cd = '1' OR ( t.frz_sts_cd = '2' and t.frz_rsn_cd='100050'))
   and t.apnt_mtu_dt>'20240531'
--    and (datediff(to_date(20240531,'yyyymmdd'),to_date(t.apnt_start_dt,'yyyymmdd'),'dd') between 30 and 60
--         or datediff(to_date(20240531,'yyyymmdd'),to_date(t.apnt_start_dt,'yyyymmdd'),'dd') > 90 )--合同起始日期距今30-60天或者90天以上
--    and datediff(to_date(t.apnt_mtu_dt,'yyyymmdd'),to_date(20240531,'yyyymmdd'),'dd')>=90    --合同到期时间在取数时间90天以后
--    and t.bind_amt>=20000                                                                           --授信额度低于1000，可能为异常合同；授信额度低于20000，用信率很低，所以限制额度高于10000
   and t.bind_amt is not null                                                                      --有些额度状态非正常的随贷通合同，加工后的授信额度为空，所以剔除
--    and t.INTR_RAT > 5.5                                                                            --利率大于5.5
;


--1.11 目标客户
drop table if exists lab_bigdata_dev.promote_loan_target_ctr_shaoxing_20240531;
create table if not exists lab_bigdata_dev.promote_loan_target_ctr_shaoxing_20240531 as
select distinct t.cst_id
        ,t.loan_cst_typ_cd
        ,t.cst_type
        ,t.PRCP_BAL  ---取数点本金余额积数
        ,t2.exe_intr_rat  ---当前有普贷余额的加权月利率
from lab_bigdata_dev.promote_loan_target_ctr_zzxh_shaoxing_20240531 t
left join
(select cst_id
      ,SUM(CASE
            WHEN t.end_dt <> '18991231' THEN t.amt * ( DATEDIFF(to_date(t.end_dt, 'yyyymmdd'), to_date(t.dtrb_dt, 'yyyymmdd'), 'dd') + 1 ) * t.exe_intr_rat
            ELSE t.amt * ( DATEDIFF(to_date(t.apnt_mtu_day, 'yyyymmdd'), to_date(t.dtrb_dt, 'yyyymmdd'), 'dd') + 1 ) * t.exe_intr_rat
          END) / SUM(CASE
                      WHEN t.end_dt <> '18991231' THEN t.amt * ( DATEDIFF(to_date(t.end_dt, 'yyyymmdd'), to_date(t.dtrb_dt, 'yyyymmdd'), 'dd') + 1 )
                      ELSE t.amt * ( DATEDIFF(to_date(t.apnt_mtu_day, 'yyyymmdd'), to_date(t.dtrb_dt, 'yyyymmdd'), 'dd') + 1 )
                    END)  AS exe_intr_rat
from edw.dws_bus_loan_dbil_inf_dd t
where dt = '20240531'
and prcp_bal >0
group by cst_id
) t2
on t.cst_id = t2.cst_id ;

-------/* 三、取名单字段 */--------
--1、客户基本信息
--1.1社区信息
drop table if exists lab_bigdata_dev.tmp_promote_loan_feature_sq_shaoxing_20240531;
create table if not exists lab_bigdata_dev.tmp_promote_loan_feature_sq_shaoxing_20240531 as
select t.cst_id
      ,t1.cprh_cmnt_id   --综合社区编号
      ,t1.sub_cmnt_id    --子社区编号
      ,t2.cmnt_nm        --社区名称
      ,t4.employ_id      --社区主维护人工号
      ,t5.empe_nm        --社区主维护人姓名
      ,t2.afl_org_id     --社区管户团队机构号
      ,t6.unt_org_nm     --社区管户团队机构名称
      ,t6.sum_org_id     --社区管户支行机构号
      ,t6.sum_org_nm     --社区管户支行机构名称
  from lab_bigdata_dev.promote_loan_target_ctr_shaoxing_20240531 t
  left join edw.dwd_cst_mng_cmnt_rel_dd t1 on t.cst_id=t1.cst_id and t1.dt='20240531' and t1.dpd_typ_cd='1' --挂靠类型：1普惠，2小企业
  left join edw.dim_cst_mng_cmnt_inf_dd t2 on t1.sub_cmnt_id=t2.cmnt_enc and t2.dt='20240531'
  left join edw.xwdt_xw_community t3 on t1.sub_cmnt_id=t3.com_code and t3.state<>'-1' and t3.dt='20240531'
  left join edw.xwdt_xw_community_employ t4 on t3.id=t4.community_id and t4.is_main_person='1' and t4.dt='20240531'
  left join edw.dws_hr_empe_inf_dd t5 on t4.employ_id=t5.empe_id and t5.dt='20240531'
  left join edw.dim_hr_org_sum_org_rel_dd t6 on t2.afl_org_id=t6.unt_org_id and t6.SUM_ORG_LVL='Z'
                                            AND t6.ORG_RLTN_DIM_CD='WD3' AND t6.SUM_TYP_CD='1' and t6.dt='20240531' --支行
 ;

--1.2 匹配姓名、证件号、手机号、年龄、性别等基本信息
drop table if exists lab_bigdata_dev.promote_loan_feature_cst_inf_shaoxing_20240531;
create table if not exists lab_bigdata_dev.promote_loan_feature_cst_inf_shaoxing_20240531 as
select t.cst_id
      ,t0.loan_cst_typ_cd                     -- 信贷客户类型代码
      ,t15.cd_val_dscr    as loan_cst_typ     -- 信贷客户类型
      ,substr(t0.idt_cd,1,1)  as tot_idt_cd   -- 行业大类代码
      ,t10.cd_val_dscr        as tot_idt_nm   -- 行业大类
      ,t0.idt_cd                              -- 行业细类代码
      ,t11.cd_val_dscr        as idt_nm       -- 行业细类
      --管户信息
      ,t4.prm_org_id                          -- 主管户机构号
      ,t9.org_nm      as prm_org_nm           -- 主管户机构名称
      ,t5.sum_org_id  as prm_fh_org_id        -- 主管户分行机构号
      ,t5.sum_org_nm  as prm_fh_org_nm        -- 主管户分行名称
      ,t6.sum_org_id  as prm_zh_org_id        -- 主管户支行机构号
      ,t6.sum_org_nm  as prm_zh_org_nm        -- 主管户支行名称
      ,t7.sum_org_id  as prm_td_org_id        -- 主管户团队机构号
      ,t7.sum_org_nm  as prm_td_org_nm        -- 主管户团队名称
      ,t4.prm_mgr_id                          -- 主管户客户经理工号
      ,t8.empe_nm     as prm_empe_nm          -- 主管户客户经理姓名
      --社区信息
      ,t14.cprh_cmnt_id                       --综合社区编号
      ,t14.sub_cmnt_id                        --子社区编号
      ,t14.cmnt_nm                            --社区名称
      ,t14.employ_id                          --社区主维护人工号
      ,t14.empe_nm                            --社区主维护人姓名
      ,t14.afl_org_id                         --社区管户团队机构号
      ,t14.unt_org_nm                         --社区管户团队机构名称
      ,t14.sum_org_id                         --社区管户支行机构号
      ,t14.sum_org_nm                         --社区管户支行机构名称
  from lab_bigdata_dev.promote_loan_target_ctr_shaoxing_20240531 t
 inner join edw.dws_cst_bas_inf_dd t0 on t.cst_id=t0.cst_id and t0.dt='20240531'
 inner join edw.dws_cst_idv_bas_inf_dd t1 on t.cst_id=t1.cst_id and t1.dt='20240531'
  left join adm_pub_app.adm_pblc_cst_prm_mng_inf_dd  t4 on t.cst_id=t4.cst_id and t4.dt='20240531'
  left join edw.dim_hr_org_sum_org_rel_dd t5 on t4.prm_org_id=t5.UNT_ORG_ID and t5.dt='20240531'
                                            and t5.SUM_ORG_LVL='F' AND t5.ORG_RLTN_DIM_CD='WD3' AND t5.SUM_TYP_CD='1'  --分行
  left join edw.dim_hr_org_sum_org_rel_dd t6 on t4.prm_org_id=t6.UNT_ORG_ID and t6.dt='20240531'
                                            and t6.SUM_ORG_LVL='Z' AND t6.ORG_RLTN_DIM_CD='WD3' AND t6.SUM_TYP_CD='1' --支行
  left join edw.dim_hr_org_sum_org_rel_dd t7 on t4.prm_org_id=t7.UNT_ORG_ID and t7.dt='20240531'
                                            and t7.SUM_ORG_LVL='T' AND t7.ORG_RLTN_DIM_CD='WD3' AND t7.SUM_TYP_CD='1' --团队
  left join edw.dim_hr_empe_bas_inf_dd t8 on t4.prm_mgr_id=t8.empe_id and t8.dt='20240531'
  left join edw.dim_hr_org_bas_inf_dd t9 on t4.prm_org_id=t9.org_id and t9.dt='20240531'
  left join edw.dwd_code_library t10 on substr(t0.idt_cd,1,1)=t10.cd_val and t10.tbl_nm='DIM_CST_BAS_INF_DD' and t10.fld_nm='IDT_CD'
  left join edw.dwd_code_library t11 on t0.idt_cd=t11.cd_val and t11.tbl_nm='DIM_CST_BAS_INF_DD' and t11.fld_nm='IDT_CD'
  left join lab_bigdata_dev.tmp_promote_loan_feature_sq_shaoxing_20240531 t14 on t.cst_id=t14.cst_id
  left join edw.dwd_code_library t15 on t0.loan_cst_typ_cd=t15.cd_val and t15.tbl_nm='DIM_CST_BAS_INF_DD' and t15.fld_nm='LOAN_CST_TYP_CD'
 ;


--2、业务信息
--2.1 随贷通合同信息
drop table if exists lab_bigdata_dev.promote_loan_feature_sdt_shaoxing_20240531;
create table if not exists lab_bigdata_dev.promote_loan_feature_sdt_shaoxing_20240531 as
select t.cst_id
      ,t.BUSI_CTR_ID
      ,t.CTR_AMT         --随贷通_合同金额
      ,t.bind_amt        --随贷通_实际启用授信额度
      ,t.dbil_cnt        --随贷通_历史用信次数
      ,t.max_end_dt      --随贷通_合同最近一笔借据结清日期
      ,t.APNT_START_DT   --随贷通_约定开始日期
      ,t.APNT_MTU_DT     --随贷通_约定到期日期
      ,t.INTR_RAT        --随贷通_利率
      ,t.PD_CD           --随贷通_业务品种代码
      ,t.pd_nm          --随贷通_业务品种
      ,row_number() over(partition by t.cst_id order by APNT_START_DT,BUSI_CTR_ID) as row_no
  from lab_bigdata_dev.promote_loan_target_ctr_zzxh_shaoxing_20240531 t
  left join edw.dim_bus_loan_pd_inf_dd t1 on t.pd_cd=t1.pd_cd and t1.dt='20240531'
 where t.pd_nm='随贷通'
 ;

--2.2 融e贷合同信息
drop table if exists lab_bigdata_dev.promote_loan_feature_red_shaoxing_20240531;
create table if not exists lab_bigdata_dev.promote_loan_feature_red_shaoxing_20240531 as
select t.cst_id
      ,t.BUSI_CTR_ID
      ,t.CTR_AMT
      ,t.bind_amt
      ,t.dbil_cnt
      ,t.max_end_dt
      ,t.APNT_START_DT
      ,t.APNT_MTU_DT
      ,t.INTR_RAT
      ,t.PD_CD
      ,t1.pd_nm
      ,row_number() over(partition by t.cst_id order by APNT_START_DT,BUSI_CTR_ID) as row_no
  from lab_bigdata_dev.promote_loan_target_ctr_zzxh_shaoxing_20240531 t
  left join edw.dim_bus_loan_pd_inf_dd t1 on t.pd_cd=t1.pd_cd and t1.dt='20240531'
 where t.pd_nm='融e贷'
;


drop table if exists lab_bigdata_dev.promote_loan_feature_ted_shaoxing_20240531;
create table if not exists lab_bigdata_dev.promote_loan_feature_ted_shaoxing_20240531 as
select t.cst_id
      ,t.BUSI_CTR_ID
      ,t.CTR_AMT         --泰e贷_合同金额
      ,t.bind_amt        --泰e贷_实际启用授信额度
      ,t.dbil_cnt        --泰e贷_历史用信次数
      ,t.max_end_dt      --泰e贷_合同最近一笔借据结清日期
      ,t.APNT_START_DT   --泰e贷_约定开始日期
      ,t.APNT_MTU_DT     --泰e贷_约定到期日期
      ,t.INTR_RAT        --泰e贷_利率
      ,t.PD_CD           --泰e贷_业务品种代码
      ,t.pd_nm          --泰e贷_业务品种
      ,row_number() over(partition by t.cst_id order by APNT_START_DT,BUSI_CTR_ID) as row_no
  from lab_bigdata_dev.promote_loan_target_ctr_zzxh_shaoxing_20240531 t
  left join edw.dim_bus_loan_pd_inf_dd t1 on t.pd_cd=t1.pd_cd and t1.dt='20240531'
 where t.pd_nm='泰e贷'
 ;


--2.4 业务信息汇总
drop table if exists lab_bigdata_dev.promote_loan_feature_bus_inf_shaoxing_20240531;
create table if not exists lab_bigdata_dev.promote_loan_feature_bus_inf_shaoxing_20240531 as
select *
    ,case when INTR_RAT_sdt = least(coalesce(INTR_RAT_ted,100) ,coalesce(INTR_RAT_red_1,100) ,coalesce(INTR_RAT_red_2,100), coalesce(INTR_RAT_sdt,100)) then bind_amt_sdt
        when INTR_RAT_red_1 = least(coalesce(INTR_RAT_ted,100) ,coalesce(INTR_RAT_red_1,100) ,coalesce(INTR_RAT_red_2,100), coalesce(INTR_RAT_sdt,100)) then bind_amt_red_1
        when INTR_RAT_red_2  = least(coalesce(INTR_RAT_ted,100) ,coalesce(INTR_RAT_red_1,100) ,coalesce(INTR_RAT_red_2,100), coalesce(INTR_RAT_sdt,100)) then bind_amt_red_2
        when INTR_RAT_ted = least(coalesce(INTR_RAT_ted,100) ,coalesce(INTR_RAT_red_1,100) ,coalesce(INTR_RAT_red_2,100), coalesce(INTR_RAT_sdt,100)) then bind_amt_ted  end as 最小利率绑定金额
      ,case when INTR_RAT_sdt = least(coalesce(INTR_RAT_ted,100) ,coalesce(INTR_RAT_red_1,100) ,coalesce(INTR_RAT_red_2,100), coalesce(INTR_RAT_sdt,100)) then '随贷通'
        when INTR_RAT_red_1 = least(coalesce(INTR_RAT_ted,100) ,coalesce(INTR_RAT_red_1,100) ,coalesce(INTR_RAT_red_2,100), coalesce(INTR_RAT_sdt,100))
          or INTR_RAT_red_2  = least(coalesce(INTR_RAT_ted,100) ,coalesce(INTR_RAT_red_1,100) ,coalesce(INTR_RAT_red_2,100), coalesce(INTR_RAT_sdt,100)) then '融e贷'
        when INTR_RAT_ted = least(coalesce(INTR_RAT_ted,100) ,coalesce(INTR_RAT_red_1,100) ,coalesce(INTR_RAT_red_2,100), coalesce(INTR_RAT_sdt,100)) then '泰e贷' end as 最小利率贷款产品
      ,case when INTR_RAT_sdt = least(coalesce(INTR_RAT_ted,100) ,coalesce(INTR_RAT_red_1,100) ,coalesce(INTR_RAT_red_2,100), coalesce(INTR_RAT_sdt,100)) then BUSI_CTR_ID_sdt
        when INTR_RAT_red_1 = least(coalesce(INTR_RAT_ted,100) ,coalesce(INTR_RAT_red_1,100) ,coalesce(INTR_RAT_red_2,100), coalesce(INTR_RAT_sdt,100)) then BUSI_CTR_ID_red_1
        when INTR_RAT_red_2  = least(coalesce(INTR_RAT_ted,100) ,coalesce(INTR_RAT_red_1,100) ,coalesce(INTR_RAT_red_2,100), coalesce(INTR_RAT_sdt,100)) then BUSI_CTR_ID_red_2
        when INTR_RAT_ted = least(coalesce(INTR_RAT_ted,100) ,coalesce(INTR_RAT_red_1,100) ,coalesce(INTR_RAT_red_2,100), coalesce(INTR_RAT_sdt,100)) then BUSI_CTR_ID_ted    end as 最小利率对应合同号
    ,case when INTR_RAT_sdt = least(coalesce(INTR_RAT_ted,100) ,coalesce(INTR_RAT_red_1,100) ,coalesce(INTR_RAT_red_2,100), coalesce(INTR_RAT_sdt,100)) then INTR_RAT_sdt
        when INTR_RAT_red_1 = least(coalesce(INTR_RAT_ted,100) ,coalesce(INTR_RAT_red_1,100) ,coalesce(INTR_RAT_red_2,100), coalesce(INTR_RAT_sdt,100)) then INTR_RAT_red_1
        when INTR_RAT_red_2  = least(coalesce(INTR_RAT_ted,100) ,coalesce(INTR_RAT_red_1,100) ,coalesce(INTR_RAT_red_2,100), coalesce(INTR_RAT_sdt,100)) then INTR_RAT_red_2
        when INTR_RAT_ted = least(coalesce(INTR_RAT_ted,100) ,coalesce(INTR_RAT_red_1,100) ,coalesce(INTR_RAT_red_2,100), coalesce(INTR_RAT_sdt,100)) then INTR_RAT_ted  end as 最小利率合同对应利率
    ,case when INTR_RAT_sdt = least(coalesce(INTR_RAT_ted,100) ,coalesce(INTR_RAT_red_1,100) ,coalesce(INTR_RAT_red_2,100), coalesce(INTR_RAT_sdt,100)) then ctr_amt_sdt
        when INTR_RAT_red_1 = least(coalesce(INTR_RAT_ted,100) ,coalesce(INTR_RAT_red_1,100) ,coalesce(INTR_RAT_red_2,100), coalesce(INTR_RAT_sdt,100)) then ctr_amt_red_1
        when INTR_RAT_red_2  = least(coalesce(INTR_RAT_ted,100) ,coalesce(INTR_RAT_red_1,100) ,coalesce(INTR_RAT_red_2,100), coalesce(INTR_RAT_sdt,100)) then ctr_amt_red_2
        when INTR_RAT_ted = least(coalesce(INTR_RAT_ted,100) ,coalesce(INTR_RAT_red_1,100) ,coalesce(INTR_RAT_red_2,100), coalesce(INTR_RAT_sdt,100)) then ctr_amt_ted  end as 最小利率合同金额
from
(select t.cst_id
      --泰e贷合同信息
      ,t1.BUSI_CTR_ID       as BUSI_CTR_ID_ted        --泰e贷_合同编号
      ,t1.CTR_AMT           as CTR_AMT_ted            --泰e贷_合同金额
      ,t1.bind_amt          as bind_amt_ted           --泰e贷_实际启用授信额度
      ,t1.dbil_cnt          as dbil_cnt_ted           --泰e贷_历史用信次数
      ,t1.max_end_dt        as max_end_dt_ted         --泰e贷_合同最近一笔借据结清日期
      ,t1.APNT_START_DT     as APNT_START_DT_ted      --泰e贷_约定开始日期
      ,t1.APNT_MTU_DT       as APNT_MTU_DT_ted        --泰e贷_约定到期日期
      ,t1.INTR_RAT          as INTR_RAT_ted           --泰e贷_利率
      --融e贷合同信息
      ,t2.BUSI_CTR_ID       as BUSI_CTR_ID_red_1      --融e贷1_合同编号
      ,t2.CTR_AMT           as CTR_AMT_red_1          --融e贷1_合同金额
      ,t2.bind_amt          as bind_amt_red_1         --融e贷1_实际启用授信额度
      ,t2.dbil_cnt          as dbil_cnt_red_1         --融e贷1_历史用信次数
      ,t2.max_end_dt        as max_end_dt_red_1       --融e贷1_合同最近一笔借据结清日期
      ,t2.APNT_START_DT     as APNT_START_DT_red_1    --融e贷1_约定开始日期
      ,t2.APNT_MTU_DT       as APNT_MTU_DT_red_1      --融e贷1_约定到期日期
      ,t2.INTR_RAT          as INTR_RAT_red_1         --融e贷1_利率
      ,t3.BUSI_CTR_ID       as BUSI_CTR_ID_red_2      --融e贷2_合同编号
      ,t3.CTR_AMT           as CTR_AMT_red_2          --融e贷2_合同金额
      ,t3.bind_amt          as bind_amt_red_2         --融e贷2_实际启用授信额度
      ,t3.dbil_cnt          as dbil_cnt_red_2         --融e贷2_历史用信次数
      ,t3.max_end_dt        as max_end_dt_red_2       --融e贷2_合同最近一笔借据结清日期
      ,t3.APNT_START_DT     as APNT_START_DT_red_2    --融e贷2_约定开始日期
      ,t3.APNT_MTU_DT       as APNT_MTU_DT_red_2      --融e贷2_约定到期日期
      ,t3.INTR_RAT          as INTR_RAT_red_2         --融e贷2_利率
      ,t6.BUSI_CTR_ID       as BUSI_CTR_ID_sdt        --随贷通_合同编号
      ,t6.CTR_AMT           as CTR_AMT_sdt            --随贷通_合同金额
      ,t6.bind_amt          as bind_amt_sdt           --随贷通_实际启用授信额度
      ,t6.dbil_cnt          as dbil_cnt_sdt           --随贷通_历史用信次数
      ,t6.max_end_dt        as max_end_dt_sdt         --随贷通_合同最近一笔借据结清日期
      ,t6.APNT_START_DT     as APNT_START_DT_sdt      --随贷通_约定开始日期
      ,t6.APNT_MTU_DT       as APNT_MTU_DT_sdt        --随贷通_约定到期日期
      ,t6.INTR_RAT          as INTR_RAT_sdt           --随贷通_利率
from lab_bigdata_dev.promote_loan_target_ctr_shaoxing_20240531 t
left join lab_bigdata_dev.promote_loan_feature_ted_shaoxing_20240531 t1 on t.cst_id=t1.cst_id and t1.row_no=1
left join lab_bigdata_dev.promote_loan_feature_red_shaoxing_20240531 t2 on t.cst_id=t2.cst_id and t2.row_no=1
left join lab_bigdata_dev.promote_loan_feature_red_shaoxing_20240531 t3 on t.cst_id=t3.cst_id and t3.row_no=2
left join lab_bigdata_dev.promote_loan_feature_sdt_shaoxing_20240531 t6 on t.cst_id=t6.cst_id and t6.row_no=1
left join adm_pub.adm_csm_cbas_idv_bas_inf_dd t10
  on t.cst_id = t10.cst_id and t10.dt = '20240531'
) ss
;



--借据时长标签：
DROP TABLE IF EXISTS LAB_BIGDATA_DEV.promote_loan_dbil_days_shaoxing_20240531;
CREATE TABLE LAB_BIGDATA_DEV.promote_loan_dbil_days_shaoxing_20240531 AS
SELECT  DISTINCT T . *
                 ,t2.dbil_days
                 ,t3.dbil_days_zx
FROM    lab_bigdata_dev.promote_loan_target_ctr_shaoxing_20240531 T
LEFT JOIN    (
                 SELECT  t1.cst_id
                         ,avg(datediff(to_date(CASE
                                                 WHEN t2.end_dt <> '18991231' THEN t2.end_dt
                                                 ELSE least(t2.apnt_mtu_day, '20240531')
                                               END, 'yyyymmdd'), to_date(t2.dtrb_dt, 'yyyymmdd'), 'dd')) AS dbil_days
                 FROM    lab_bigdata_dev.promote_loan_target_ctr_shaoxing_20240531 t1
                 LEFT JOIN    edw.dws_bus_loan_dbil_inf_dd t2
                    ON      t1.cst_id = t2.cst_id
                    AND     t2.dt = '20240531'
                 inner join edw.dim_bus_loan_ctr_inf_dd  t3
                    on t2.bus_ctr_id = t3.busi_ctr_id
                    and t3.dt = 20240531
                    and (substr(t3.pd_cd,1,7) = '2010503'
                    or t3.pd_cd IN ( '201050101040348' , '201050102010146' )
                    or (t3.crc_ind='1' and t3.is_slf_crc = '1' and t3.cyc_typ_cd in ('1','2')) )  ---循环贷款历史用信习惯
                 WHERE   t2.BUS_CTR_ID IS NOT NULL
                 GROUP BY t1.cst_id
             ) t2
ON      t.cst_id = t2.cst_id
LEFT JOIN    (
                 SELECT  t1.cst_id
                         ,avg(datediff(to_date(CASE
                                                 WHEN cls_dt <> '99991231' THEN cls_dt
                                                 ELSE least(mtu_dt, '20240531')
                                               END, 'yyyymmdd'), to_date(start_dt, 'yyyymmdd'), 'dd')) AS dbil_days_zx
                 FROM    (
                             SELECT  *
                             FROM    (
                                         SELECT  s.cst_id
                                                 ,rpt.report_id
                                                 ,rpt.report_dt
                                                 ,ROW_NUMBER() OVER ( PARTITION BY s.cst_id ORDER BY rpt.report_dt DESC ) AS part_rank
                                         FROM    lab_bigdata_dev.promote_loan_target_ctr_shaoxing_20240531 s ----样本表
                                         LEFT JOIN    (
                                                          SELECT  DISTINCT report_no report_id
                                                                           ,to_char(to_date(report_dt, 'yyyy-mm-dd hh:mi:ss'), 'yyyymmdd') report_dt
                                                                           ,qry_rsn_cd
                                                                           ,cst_id
                                                                           ,'2' credit_report_no
                                                                           ,dt
                                                          FROM    edw.dwd_cst_ccrc_idv_rpt_jnl_di
                                                          WHERE   dt > '00000000'
                                                      ) rpt ---个人客户人行征信报告查询日志历史，包含一代和二代数据。
                                         ON      s.cst_id = rpt.cst_id
                                         AND     rpt.report_dt < '20240531'
                                     ) a
                             WHERE   a.part_rank = 1
                             AND     a.report_id IS NOT NULL
                         ) t1
                 LEFT JOIN    edw.dim_cst_ccrc_idv_loan_inf_dd t2
                 ON      t1.report_id = t2.report_id
                 AND     t2.dt = '20240531'
                 WHERE   t2.act_typ_cd IN ( 'R1' , 'R4' ) ---循环贷款
                 AND     t2.pd_cd NOT IN ( '11' , '12' , '13' ) ---过滤房贷
                 AND     ctr_amt > 0
                 GROUP BY t1.cst_id
             ) t3
ON      t.cst_id = t3.cst_id;

-- 1、征信借据平均天数=&quot;&quot;、行内借据平均天数=&quot;&quot;,即&quot;利率敏感客户&quot;,
-- 2、征信借据平均天数=&quot;&quot;、行内借据平均天数<30,即&quot;利率敏感客户&quot;,
-- 3、征信借据平均天数=&quot;&quot;、行内借据平均天数>=30,即&quot;长期资金需求客户&quot;,
-- 4、行内借据平均天数<30,征信借据平均天数<30,即&quot;短期资金需求客户&quot;,
-- 5、行内借据平均天数>=30,征信借据平均天数<30,即&quot;长期资金需求客户&quot;,
-- 6、行内借据平均天数<30,征信借据平均天数>=30),即&quot;利率敏感客户&quot;,
-- 7、行内借据平均天数>=30,征信借据平均天数>=30,即&quot;长期资金需求客户&quot;,
DROP TABLE IF EXISTS promote_loan_feature_bus_inf_MODEL_shaoxing_20240531;

CREATE TABLE promote_loan_feature_bus_inf_MODEL_shaoxing_20240531 AS
SELECT  cst_id
        ,最小利率绑定金额
        ,最小利率贷款产品
        ,最小利率对应合同号
        ,最小利率合同对应利率
        ,最小利率合同金额
FROM    promote_loan_feature_bus_inf_shaoxing_20240531;

-- SELECT * FROM  lab_bigdata_dev.promote_loan_cst_feature_shaoxing_20240531;

----汇总取促活合同
DROP TABLE IF EXISTS lab_bigdata_dev.promote_loan_cst_feature_shaoxing_20240531;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.promote_loan_cst_feature_shaoxing_20240531 AS
SELECT  t.cst_id            AS 客户号
        ,t6.cst_chn_nm      AS 中文名称
        ,t6.age             AS 年龄
        ,CASE
           WHEN t6.gdr_cd = '1' THEN '男性'
           WHEN t6.gdr_cd = '2' THEN '女性'
         END                AS 性别
        ,t2.sum_score_socre AS 非经营户模型分
        ,t3.sum_score_socre AS 经营户模型分
        ,t1.最小利率对应合同号
        ,t1.最小利率贷款产品
        ,t1.最小利率绑定金额
        ,t1.最小利率合同金额
        ,t9.cd_val_dscr     AS 结息方式
        ,t7.cst_ac_id       AS 随贷通卡号
        ,CASE
           WHEN t1.最小利率贷款产品 = '随贷通' AND t10.objectno IS NOT NULL THEN '激活'
           WHEN t1.最小利率贷款产品 = '随贷通' AND t10.objectno IS NULL     THEN '未激活'
         END                AS 随贷通是否激活
        ,t12.yanhuo_shanghu AS 烟火商户标签
        ,CASE
           WHEN datediff(to_date('20240531', 'yyyymmdd'), to_date(t4.apnt_start_dt, 'yyyymmdd'), 'dd') BETWEEN 30 AND 60                                                                               THEN '新授信客户'
		  -- WHEN datediff(to_date('20240531', 'yyyymmdd'), to_date(t4.apnt_start_dt, 'yyyymmdd'), 'dd') BETWEEN 30 AND 60 OR ( datediff(to_date('20240531', 'yyyymmdd'), to_date(t4.apnt_start_dt, 'yyyymmdd'), 'dd') > 90 AND max_end_dt = '' )                                                                                THEN '新授信客户'
           WHEN datediff(to_date('20240531', 'yyyymmdd'), to_date(max_end_dt, 'yyyymmdd'), 'dd') > 90 AND datediff(to_date(t4.apnt_mtu_dt, 'yyyymmdd'), to_date('20240531', 'yyyymmdd'), 'dd') > 90                                                                                                                            THEN '授信长期未用信客户'
           WHEN ( datediff(to_date(t4.apnt_mtu_dt, 'yyyymmdd'), to_date('20240531', 'yyyymmdd'), 'dd') <= 90 AND max_end_dt = '' ) OR ( datediff(to_date(t4.apnt_mtu_dt, 'yyyymmdd'), to_date('20240531', 'yyyymmdd'), 'dd') <= 90 AND datediff(to_date('20240531', 'yyyymmdd'), to_date(max_end_dt, 'yyyymmdd'), 'dd') > 90 ) THEN '授信即将到期客户'
         END                AS 客户生命周期
        ,CASE
           WHEN datediff(to_date('20240531', 'yyyymmdd'), to_date(t4.apnt_start_dt, 'yyyymmdd'), 'dd') BETWEEN 30 AND 60                                                                             THEN '授信30-60天内未用信的循环贷客户'
           WHEN datediff(to_date('20240531', 'yyyymmdd'), to_date(t4.apnt_start_dt, 'yyyymmdd'), 'dd') > 90 AND max_end_dt = ''                                                                      THEN '授信90天后未用信的循环贷客户'
           WHEN datediff(to_date('20240531', 'yyyymmdd'), to_date(max_end_dt, 'yyyymmdd'), 'dd') > 90 AND datediff(to_date(t4.apnt_mtu_dt, 'yyyymmdd'), to_date('20240531', 'yyyymmdd'), 'dd') > 90  THEN '距离上次用信超过90天的循环贷客户'
           WHEN datediff(to_date(t4.apnt_mtu_dt, 'yyyymmdd'), to_date('20240531', 'yyyymmdd'), 'dd') <= 90 AND max_end_dt = ''                                                                       THEN '未来90天内到期且一直未用信的随贷通客户'
           WHEN datediff(to_date(t4.apnt_mtu_dt, 'yyyymmdd'), to_date('20240531', 'yyyymmdd'), 'dd') <= 90 AND datediff(to_date('20240531', 'yyyymmdd'), to_date(max_end_dt, 'yyyymmdd'), 'dd') > 90 THEN '未来90天内到期且近90天未用信的随贷通客户'
         END                AS 客户所处阶段
        ,CASE
           WHEN ( t11.dbil_days_zx IS NULL AND t11.dbil_days IS NULL ) OR ( t11.dbil_days_zx IS NULL AND t11.dbil_days < 30 ) OR ( t11.dbil_days_zx >= 30 AND t11.dbil_days < 30 ) THEN '利率敏感客户'
           WHEN ( t11.dbil_days_zx IS NULL AND t11.dbil_days >= 30 ) OR ( t11.dbil_days_zx < 30 AND t11.dbil_days >= 30 ) OR ( t11.dbil_days_zx >= 30 AND t11.dbil_days >= 30 )    THEN '长期资金需求客户'
           WHEN t11.dbil_days_zx < 30 AND t11.dbil_days < 30                                                                                                                       THEN '短期资金需求客户'
         END                AS 客户类型
        ,CASE
           WHEN t4.dbil_cnt > 0 THEN '促复用信'
           ELSE '促首次用信'
         END                AS 场景分类
        ,t4.apnt_mtu_dt     AS 合同到期日
        ,t4.apnt_start_dt   AS 合同开始日
        ,t11.dbil_days      AS 我行借据平均天数
        ,t11.dbil_days_zx   AS 他行借据平均天数
        ,t1.最小利率合同对应利率      AS 折扣前利率
        ,t14.利率折扣
        ,t14.利率
        ,t14.predict 额度使用率_预测
        ,CASE
           WHEN ( t13.cst_id IS NOT NULL OR t13_4.客户号 IS NOT NULL OR t13_5.客户号 IS NOT NULL ) THEN 1
           ELSE 0
         END                AS 是否近二个月促用信客户打折客户
        ,t5.prm_org_id      AS 主管户机构号
        ,t5.prm_org_nm      AS 管户机构名称
        ,t5.prm_mgr_id      AS 主管户客户经理工号
        ,t5.prm_empe_nm     AS 主管户客户经理姓名
        -- ,t.prcp_bal         AS 取数点本金余额积数
        ,t.exe_intr_rat     AS 当前有普贷余额的加权月利率
        ,CASE
           WHEN t15.customer_id IS NOT NULL THEN 1
           ELSE 0
         END                AS 是否外呼黑名单
         ,T16.IF_CSM_LOAN_ID AS 经营消费标识
FROM    lab_bigdata_dev.promote_loan_target_ctr_shaoxing_20240531 t
LEFT JOIN    lab_bigdata_dev.promote_loan_feature_bus_inf_shaoxing_20240531 t1
ON      t.cst_id = t1.cst_id
LEFT JOIN    adm_pub.dsj_m2_loan_idv_gnr_unbus_md_3300_sc_r00_v01_mdl t2
ON      t.cst_id = t2.cst_id
AND     t2.dt = '20240531'
LEFT JOIN    adm_pub.dsj_m2_loan_idv_gnr_bus_md_3300_sc_r00_v01_mdl t3
ON      t.cst_id = t3.cst_id
AND     t3.dt = '20240531'
LEFT JOIN    lab_bigdata_dev.promote_loan_target_ctr_union_shaoxing_20240531 t4
ON      t.cst_id = t4.cst_id
AND     t1.最小利率对应合同号 = t4.busi_ctr_id
LEFT JOIN    lab_bigdata_dev.promote_loan_feature_cst_inf_shaoxing_20240531 t5
ON      t.cst_id = t5.cst_id
LEFT JOIN    adm_pub.adm_csm_cbas_idv_bas_inf_dd t6
ON      t.cst_id = t6.cst_id
AND     t6.dt = '20240531'
LEFT JOIN    (
                 SELECT  DISTINCT ln_lmt_ctr_id
                                  ,cst_ac_id
                 FROM    adm_pub.adm_pub_bus_svc_db_crd_inf_dd
                 WHERE   dt = '20240531'
             ) t7
ON      t1.最小利率对应合同号 = t7.ln_lmt_ctr_id
LEFT JOIN    edw.dim_bus_loan_ctr_inf_dd t8
ON      t1.最小利率对应合同号 = t8.busi_ctr_id
AND     t8.dt = '20240531'
LEFT JOIN    edw.dwd_code_library t9
ON      t8.intr_mth_cd = t9.cd_val
AND     t9.fld_nm = upper('intr_mth_cd')
AND     t9.tbl_nm = upper('dim_bus_loan_ctr_inf_dd')
LEFT JOIN    (
                 SELECT  objectno
                 FROM    edw.loan_cyclecontractfreeze
                 WHERE   dt = '20240531'
                 AND     reason LIKE '激活'
                 GROUP BY objectno
             ) t10
ON      t1.最小利率对应合同号 = t10.objectno
LEFT JOIN    lab_bigdata_dev.promote_loan_dbil_days_shaoxing_20240531 t11
ON      t.cst_id = t11.cst_id
LEFT JOIN    (
                 SELECT  DISTINCT cst_id
                                  ,yanhuo_shanghu
                 FROM    lab_bigdata_dev.wushan_yanhuo_forml_cst_target_all
                 WHERE   dt = '20240531'
             ) t12
ON      t.cst_id = t12.cst_id
LEFT JOIN    (
                 SELECT  DISTINCT cst_id
                 FROM    lab_bigdata_dev.wushan_market_case_cst_list_03
                 WHERE   case_no = 'USE_CASE_07'
                 AND     exec_date >= substr(REPLACE(add_months(to_date('20240531', 'yyyymmdd'), - 1), '-', ''), 1, 6) -- 20240400 即剔除4、5两个月份外呼的客户
                 AND     sample_class IN ( '已接通实验组' , '未接通实验组' )
             ) t13
ON      t.cst_id = t13.cst_id
-- LEFT JOIN    lab_bigdata_dev.cst_promote_loan_sdt_list_20240301 t13_1
-- ON      t.cst_id = t13_1.客户号
-- AND     t13_1.配置实验组 LIKE '%(打折)%'
LEFT JOIN    lab_bigdata_dev.cst_promote_loan_sdt_list_20240407 t13_4 -- 4月有打折不外呼的客户，此处补充
ON      t.cst_id = t13_4.客户号
AND     t13_4.配置实验组 LIKE '%(打折)%'
LEFT JOIN    cst_promote_loan_sdt_list_20240514 t13_5 -- 5月常规促用信有打折不外呼的客户，此处补充
ON      t.cst_id = t13_5.客户号
AND     t13_5.配置实验组 LIKE '%(打折)%'
LEFT JOIN    promote_discount_plan_optimal_datenow20240521 t14
ON      t1.最小利率对应合同号 = t14.业务合同编号
LEFT JOIN    edw.cout_tb_out_redlist t15
ON      t.cst_id = t15.customer_id
AND     t15.dt = '20240531'
LEFT JOIN APP_ADO.FCT_SML_LOAN_AMT_LIST_DD T16
ON t1.最小利率对应合同号 = T16.BUSI_CTR_ID
AND T16.DT = '20240531'
;


-------------------------------------------------------------------------------------------------
-- 导入2、3月客户清单：
DROP TABLE IF EXISTS ai_cyx_mid_month2and3_dbil PURGE;

CREATE TABLE ai_cyx_mid_month2and3_dbil AS
SELECT  T.CST_ID
        ,T.BUSI_CTR_ID
        ,T.exec_date
        ,T.discount --利率折扣
        ,T.contact_channel --触达渠道
        ,MAX(CASE
               WHEN T1.DBIL_ID IS NOT NULL THEN 1
               ELSE 0
             END) AS 是否转化
FROM    CYX_DISCOUNT_EXPERIMENT_CST_LIST_01 T  --促用信每月下发清单底层表
LEFT JOIN    (
                 SELECT  T1.bus_ctr_id
                         ,T1.DBIL_ID
                         ,NVL(CASE
                                WHEN T1.end_dt = '18991231' THEN datediff(to_date(LEAST('@@{yyyyMMdd}', T1.apnt_mtu_day), 'yyyymmdd'), to_date(dtrb_dt, 'yyyymmdd'), 'dd')
                                ELSE datediff(to_date(T1.END_DT, 'yyyymmdd'), to_date(dtrb_dt, 'yyyymmdd'), 'dd')
                              END, 0) 用信时间
                 FROM    EDW.DIM_BUS_LOAN_DBIL_INF_DD T1
                 WHERE   T1.DT = '@@{yyyyMMdd}' -- 取最新的时点观察转化情况
                 AND     T1.dtrb_dt >= '20240201' -- 取20240201之后的借据转化情况
                 AND     T1.DCNT_INTR_RAT IS NOT NULL
             ) T1
ON      T.BUSI_CTR_ID = T1.bus_ctr_id
AND     T1.用信时间 > 0
WHERE   T.CASE_COMMENT = 'COMMON'  --促用信备注
AND     T.MONTH IN ( '202402' , '202403', '202404', '202405', '202406' )
GROUP BY T.CST_ID , T.BUSI_CTR_ID , T.exec_date , T.discount ,T.contact_channel;


-- 利率折扣调整
DROP TABLE IF EXISTS lab_bigdata_dev.promote_loan_cst_feature_discount_adj_shaoxing_20240531 PURGE;
CREATE TABLE IF NOT EXISTS lab_bigdata_dev.promote_loan_cst_feature_discount_adj_shaoxing_20240531 AS
SELECT  t1.最小利率对应合同号
        ,t2.DISCOUNT 历史折扣
        ,least(CASE
                 WHEN t2.BUSI_CTR_ID IS NOT NULL THEN ( t2.DISCOUNT - 0.1 )
                 ELSE 1
               END, t1.利率折扣) 调整后折扣

        ,T2.contact_channel AS 最近一次促销触达方式
FROM    promote_loan_cst_feature_shaoxing_20240531 t1
LEFT JOIN    (select *
				,row_number() over (partition by  BUSI_CTR_ID order by discount asc ) as rn
				from ai_cyx_mid_month2and3_dbil
				) t2
ON      t1.最小利率对应合同号 = t2.BUSI_CTR_ID and t2.rn=1
AND     T2.是否转化 = 0;

select * from ai_cyx_mid_month2and3_dbil where BUSI_CTR_ID='BC2023121500002843';

----汇总输出目标表  select * from lab_bigdata_dev.promote_loan_cst_feature_mubiao where 他行借据平均天数 is null
DROP TABLE IF EXISTS lab_bigdata_dev.promote_loan_cst_feature_mubiao;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.promote_loan_cst_feature_mubiao AS
select
a.客户号 as 客户号
,a.备注
,t6.age             AS 年龄
,CASE
   WHEN t6.gdr_cd = '1' THEN '男性'
   WHEN t6.gdr_cd = '2' THEN '女性'
 END                AS 性别

,b.最小利率对应合同号
,b.最小利率贷款产品
,b.最小利率绑定金额
,b.最小利率合同金额
,b.结息方式
,b.随贷通卡号
,b.随贷通是否激活
,b.烟火商户标签
,b.客户生命周期
,b.客户所处阶段
,b.客户类型
,b.场景分类
,b.合同到期日
,b.合同开始日
,b.我行借据平均天数
,b.他行借据平均天数
,b.折扣前利率
,b.额度使用率_预测
,b.是否近二个月促用信客户打折客户
,b.主管户机构号
,b.管户机构名称
,b.主管户客户经理工号
,b.主管户客户经理姓名
,b.当前有普贷余额的加权月利率
,b.是否外呼黑名单
,b.经营消费标识
,c.历史折扣
,c.调整后折扣
,( b.折扣前利率 * c.调整后折扣 ) AS 折扣后利率 --江杰
,c. 最近一次促销触达方式
from cst_id_shaoxing as a  --绍兴分行客户  16789

LEFT JOIN    adm_pub.adm_csm_cbas_idv_bas_inf_dd t6
ON     a.客户号 = t6.cst_id
AND     t6.dt = '20240531'

left join LAB_BIGDATA_DEV.promote_loan_cst_feature_shaoxing_20240531 as b
    on a.客户号=b.客户号
left join  lab_bigdata_dev.promote_loan_cst_feature_discount_adj_shaoxing_20240531 as c
    on b.最小利率对应合同号=c.最小利率对应合同号

;
**取数需求_20240606泰e贷绑券.sql
drop table xudai_zx;
create table xudai_zx as
SELECT t.dt,
t.lgp_id,
t.id,
t.report_id,
t.cst_id,
t.pd_cd,
t.ccy_cd,
t.dtrb_org,
t.start_dt,
t.mtu_dt,
t.five_ctg_cd,
t.grnt_mth_cd,
t.ctr_amt,
t.ctr_bal,
t.ovd_trm,
t.ovd_amt,
t.own_loan_dbil_id,
t.rpay_mth_cd,
t.rpay_frq_cd,
t.rpay_trm,
t.com_brw_ind,
t.act_crd_lmt,
t.shr_crd_lmt,
t.act_sts_cd,
t.use_lmt,
t.non_dlv_lrg_amt_instl_bal,
t.rmn_rpay_trm,
t.shd_pay_day,
t.cur_mon_shd_rpay,
t.cur_mon_actl_rpay,
t.late_one_tm_rpay_dt,
t.ovd_not_paid_prcp_1,
t.ovd_not_paid_prcp_2,
t.ovd_not_paid_prcp_3,
t.ovd_not_paid_prcp_4,
t.ovdr_180_day_bal,
t.late_six_mon_avg_use_lmt,
t.late_six_mon_avg_ovdr_bal,
t.max_use_lmt,
t.max_ovdr_bal,
t.act_typ_cd,
t.dtrb_org_typ_cd,
t.dtl_rpt_mak_dt,
t.cls_dt,
t.act_id,
t.crd_agr_id
,t2.start_dt	贷款开始日期
,t2.mtu_dt	贷款结束日期
,t2.five_ctg_cd	五级分类代码
,t2.grnt_mth_cd	担保方式代码
,t2.ctr_amt	贷款金额
,t2.ctr_bal	贷款余额
,t2.act_id	账户编号
,t2.crd_agr_id	授信协议编号
FROM    (
            SELECT  *
            FROM    edw.dim_cst_ccrc_idv_loan_inf_dd
            WHERE   dt = '20241015'
            and substr(report_id,1,6) = '202410'
            AND     ( pd_cd = '82'   OR act_typ_cd IN ( 'D1' , 'R1' , 'R4' ) )
            AND     cls_dt >= '20221016'  --关闭日期
            AND     cls_dt <= '20241016'
            AND      act_sts_cd ='3'
        ) t --已结清为主表
LEFT JOIN    edw.dim_cst_ccrc_idv_loan_inf_dd t2
ON      t.report_id = t2.report_id
AND     t.dtrb_org = t2.dtrb_org  --机构相同
and   t2.dt = '20241015'
AND     ( t2.pd_cd = '82'    OR t2.act_typ_cd IN ( 'D1' , 'R1' , 'R4' ) )

inner join edw.dws_cst_ccrc_idv_ind_inf_di t3
on  t.report_id = t3.report_no
and t3.dt>='20241001'
and t3.wdil6m>3

where datediff(to_date(t.cls_dt,'yyyymmdd'),to_date(t2.start_dt,'yyyymmdd')) <= 7
and datediff(to_date(t2.start_dt,'yyyymmdd'),to_date(t.cls_dt,'yyyymmdd'))<= 90
--and t.grnt_mth_cd<>t2.grnt_mth_cd
;

select *
FROM  edw.dim_cst_ccrc_idv_loan_inf_dd t
where (
            SELECT  t . *
                    ,t3.union_id
                    ,t3.repay_status 还款状态
                    ,ROW_NUMBER() OVER ( PARTITION BY t3.union_id ORDER BY t3.MONTH DESC ) rn
            FROM    xudai_zx t
            INNER JOIN    edw.ncip_pd01e_repaystat60 t2 --最近60个月还款状态.union_id
            ON      t2.union_id = t.id
            AND     t2.dt >= '20241001'
            INNER JOIN    edw.ncip_pd01e_repaystat60sub t3 --最近60个月还款状态
            ON      t2.id = t3.union_id
            AND     t3.dt >= '20241001' -- ncip_pd01e_repaystat60 最近60个月还款状态.id=edw.ncip_pd01e_repaystat60sub 最近60个月还款状态sub.union_id
) t
where t.rn<=3
and 还款状态=1
;


--个人征信基础贷款信息
DROP TABLE IF EXISTS lab_bigdata_dev.max_report_zhengxin_geren;
CREATE TABLE IF NOT EXISTS lab_bigdata_dev.max_report_zhengxin_geren AS
SELECT  t2.cst_id
        ,t2.report_id
        ,substr(t2.report_id, 1, 8) report_dt
        ,t2.id
        ,CASE
           WHEN t2.dtrb_org LIKE 'ZJTLCB%' THEN '泰隆'
           ELSE t2.dtrb_org
         END AS dtrb_org --金融机构名称
        ,CASE
           WHEN t2.pd_cd = '11' THEN '个人住房商业贷款'
           WHEN t2.pd_cd = '12' THEN '个人商用房贷款'
           WHEN t2.pd_cd = '13' THEN '个人住房公积金贷款'
           WHEN t2.pd_cd = '21' THEN '个人汽车消费贷款'
           WHEN t2.pd_cd = '31' THEN '个人助学贷款'
           WHEN t2.pd_cd = '32' THEN '国家助学贷款'
           WHEN t2.pd_cd = '33' THEN '商业助学贷款'
           WHEN t2.pd_cd = '41' THEN '个人经营性贷款'
           WHEN t2.pd_cd = '42' THEN '个人创业担保贷款'
           WHEN t2.pd_cd = '51' THEN '农户贷款'
           WHEN t2.pd_cd = '52' THEN '经营性农户贷款'
           WHEN t2.pd_cd = '53' THEN '消费性农户贷款'
           WHEN t2.pd_cd = '91' THEN '其他个人消费贷款'
           WHEN t2.pd_cd = '99' THEN '其他贷款'
           WHEN t2.pd_cd = '71' THEN '准贷记卡'
           WHEN t2.pd_cd = '81' THEN '贷记卡'
           WHEN t2.pd_cd = '82' THEN '大额专项分期卡'
           WHEN t2.pd_cd = '61' THEN '约定购回式证券交易'
           WHEN t2.pd_cd = '62' THEN '股票质押式回购交易'
           WHEN t2.pd_cd = '63' THEN '融资融券业务'
           WHEN t2.pd_cd = '64' THEN '其他证券类融资'
           WHEN t2.pd_cd = '92' THEN '融资租赁业务'
           WHEN t2.pd_cd = 'A1' THEN '资产处置'
           WHEN t2.pd_cd = 'B1' THEN '代偿债务'
         END AS pd_cd_nm --贷款类型
         ,t2.pd_cd
        -- ,coalesce(t2.ctr_amt, 0) + coalesce(t2.act_crd_lmt, 0) ctr_amt --贷款合同金额
        ,CASE
            WHEN T2.act_typ_cd IN ( 'D1' , 'R4' ) THEN ( T2.CTR_AMT * T5.AVG_PRC / T5.QUO_UNT )
            WHEN T2.act_typ_cd = 'R1'             THEN ( T2.act_crd_lmt * T5.AVG_PRC / T5.QUO_UNT )
            ELSE coalesce(t2.ctr_amt, 0) + coalesce(t2.act_crd_lmt, 0)
          END                                  AS CTR_AMT
        ,t2.start_dt --贷款发放日期
        ,t2.mtu_dt --贷款到期日期
        ,t2.rpay_trm --还款期数
        ,t2.ccy_cd
        ,CASE
           WHEN t2.grnt_mth_cd = '1'            THEN '质押'
           WHEN t2.grnt_mth_cd = '2'            THEN '抵押'
           WHEN t2.grnt_mth_cd = '3'            THEN '保证'
           WHEN t2.grnt_mth_cd = '4'            THEN '信用'
           WHEN t2.grnt_mth_cd IN ( '5' , '6' ) THEN '组合'
           WHEN t2.grnt_mth_cd = '7'            THEN '农户联保'
           WHEN t2.grnt_mth_cd = '9'            THEN '其它'
         END AS grnt_mth_cd --担保方式
        ,t2.ctr_bal * T5.AVG_PRC / T5.QUO_UNT  ctr_bal --贷款余额
        ,t2.rmn_rpay_trm --剩余还款期数
        ,t2.shd_pay_day --应还款日期
        ,t2.late_one_tm_rpay_dt --最近一次实际还款日期
        ,t2.cur_mon_shd_rpay --本月应还款金额
        ,t2.cur_mon_actl_rpay --本月实还款
        ,t2.act_sts_cd --账户状态
        ,t2.dtrb_org_typ_cd
        ,CASE t2.dtrb_org_typ_cd
           WHEN '11' THEN '商业银行'
           WHEN '12' THEN '村镇银行'
           WHEN '14' THEN '住房储蓄银行'
           WHEN '15' THEN '外资银行'
           WHEN '16' THEN '财务公司'
           WHEN '21' THEN '信托公司'
           WHEN '22' THEN '融资租赁公司'
           WHEN '23' THEN '汽车金融公司'
           WHEN '24' THEN '消费金融公司'
           WHEN '25' THEN '贷款公司'
           WHEN '26' THEN '金融资产管理公司'
           WHEN '31' THEN '证券公司'
           WHEN '41' THEN '保险公司'
           WHEN '51' THEN '小额贷款公司'
           WHEN '52' THEN '公积金管理中心'
           WHEN '53' THEN '融资性担保公司'
           WHEN '54' THEN '保理公司'
           WHEN '99' THEN '其他机构'
         END AS dtrb_org_typ_nm --放款机构类型
        ,t2.act_typ_cd --账户类型代码
        ,t2.five_ctg_cd
        ,b.intr_rat
        ,t2.act_id
        ,t6.agreement_no --授信协议编号
        ,t6.credit_limit --授信额度
FROM   edw.dim_cst_ccrc_idv_loan_inf_dd t2
LEFT JOIN     edw.dim_cst_ccrc_idv_dbt_act_rat_dd b --利率
  ON      t2.report_id = b.CRD_RPT_ID
  and     t2.id=b.prm_id
  AND     t2.act_id = b.ACT_ID
  AND     b.dt = '@@{yyyyMMdd}'
LEFT JOIN     edw.dim_bus_com_exr_inf_dd t5 --汇率信息表
    ON      T2.ccy_cd =t5.iso_ccy_cd
    AND     t5.dt = '@@{yyyyMMdd}'
left join edw.ncip_pd02a_creditbasicmessage as t6 --授信协议信息基本信息
  on t2.report_id=t6.report_id
  and t2.crd_agr_id=t6.agreement_no
  and t6.dt<='@@{yyyyMMdd}'
  and t6.agreement_stats='1' --有效
WHERE substr(t2.report_id,1,8)='20240731'
and t2.dt='@@{yyyyMMdd}'
-- and     t2.act_typ_cd IN ( 'R1' , 'R4' , 'D1' )
 AND     t2.act_sts_cd <> '3'  --3:结清的贷款
 and t2.pd_cd IN ( '11' , '12' , '13' , '21' , '31' , '32' , '33' , '41' , '42' , '51' , '52' , '53' , '91' , '99' ,'82','71' , '81')
  -- WHEN T1.ACT_PD_CD IN ( '11' , '12' , '13' , '21' , '31' , '32' , '33' , '41' , '42' , '51' , '52' , '53' , '91' , '99' ) THEN '1'
           -- WHEN T1.ACT_PD_CD IN ( '82' )                                                                                            THEN '1' ----大额专项分期卡 算入贷款
           -- WHEN T1.ACT_PD_CD IN ( '61' , '62' , '63' , '64' )                                                                       THEN '3'  --61	约定购回式证券交易 62	股票质押式回购交易63	融资融券业务64	其他证券类融资
           -- WHEN T1.ACT_PD_CD IN ( '71' , '81' ) OR T1.ACT_TYP_CD IN ( 'R2' , 'R3' )                                                 THEN '2' --71	准贷记卡81	贷记卡
;
--个人授信类指标 贷款账户 合并 去重
DROP TABLE IF EXISTS lab_bigdata_dev.max_report_zhengxin_geren_ctr_amt;
CREATE TABLE IF NOT EXISTS lab_bigdata_dev.max_report_zhengxin_geren_ctr_amt AS
select distinct cst_id --注意：必须有distinct ，循环类支用要去重
        ,report_id
		,act_typ_cd
		,pd_cd
		,grnt_mth_cd
		,agreement_no --授信协议编号
        ,credit_limit --授信额度
		,CTR_AMT
		 ,dtrb_org_typ_cd
		  ,dtrb_org
from lab_bigdata_dev.max_report_zhengxin_geren
where agreement_no is not null --有授信协议
union
select cst_id --注意：无distinct ，不能去重
        ,report_id
		,act_typ_cd
		,pd_cd
		,grnt_mth_cd
		,agreement_no --授信协议编号
        ,credit_limit --授信额度
		,CTR_AMT
		 ,dtrb_org_typ_cd
		  ,dtrb_org
from lab_bigdata_dev.max_report_zhengxin_geren
where agreement_no is      null;

--个人授信类指标
DROP TABLE IF EXISTS lab_bigdata_dev.max_report_zhengxin_geren_01_02; --个人授信类指标  bal有误
CREATE TABLE IF NOT EXISTS lab_bigdata_dev.max_report_zhengxin_geren_01_02 AS
select cst_id
        ,report_id

		,coalesce(sum(case when (act_typ_cd IN ( 'R1' , 'R4' , 'D1' ) or pd_cd  IN ('82') ) and agreement_no is not null
		then credit_limit when (act_typ_cd IN ( 'R1' , 'R4' , 'D1' ) or pd_cd  IN ('82') ) and agreement_no is null then CTR_AMT end),0) as 客户当日贷款及大额专项分期卡授信金额求和_个人征信
        ,COALESCE(max(case when grnt_mth_cd='信用' and dtrb_org_typ_cd in ('11','12','14','15','52') and agreement_no is not null
		then credit_limit when grnt_mth_cd='信用' and dtrb_org_typ_cd in ('11','12','14','15','52') and agreement_no is  null then  CTR_AMT end),0) as 客户当日信用类贷款单家银行授信金额最大值_个人征信
        ,COALESCE(max(case when grnt_mth_cd='保证' and dtrb_org_typ_cd in ('11','12','14','15','52') and agreement_no is not null
		then credit_limit when grnt_mth_cd='保证' and dtrb_org_typ_cd in ('11','12','14','15','52') and agreement_no is  null then CTR_AMT end),0) as 客户当日保证类贷款单家银行授信金额最大值_个人征信
        ,COALESCE(max(case when grnt_mth_cd='抵押' and pd_cd not in ('11','12','13')  and dtrb_org_typ_cd in ('11','12','14','15','52') and agreement_no is not null
		then credit_limit when grnt_mth_cd='抵押' and pd_cd not in ('11','12','13')  and dtrb_org_typ_cd in ('11','12','14','15','52') and agreement_no is null then CTR_AMT  end),0) as 客户当日抵押类贷款_不含房贷_单家银行授信金额最大值_个人征信

        ,case when COALESCE(count(distinct case when grnt_mth_cd='信用' and dtrb_org_typ_cd in ('11','12','14','15','52') then dtrb_org end),0)=0 then 0
        else COALESCE(sum(case when grnt_mth_cd='信用' and dtrb_org_typ_cd in ('11','12','14','15','52') and agreement_no is not null then credit_limit
								when grnt_mth_cd='信用' and dtrb_org_typ_cd in ('11','12','14','15','52') and agreement_no is null then CTR_AMT end),0)
                /COALESCE(count(distinct case when grnt_mth_cd='信用' and dtrb_org_typ_cd in ('11','12','14','15','52') then dtrb_org end),0) end 客户当日信用类贷款单家银行授信金额平均值_个人征信

        ,case when COALESCE(count(distinct case when grnt_mth_cd='保证' and dtrb_org_typ_cd in ('11','12','14','15','52') then dtrb_org end),0)=0 then 0
        else COALESCE(sum(case when grnt_mth_cd='保证' and dtrb_org_typ_cd in ('11','12','14','15','52') and agreement_no is not null then credit_limit
							   when grnt_mth_cd='保证' and dtrb_org_typ_cd in ('11','12','14','15','52') and agreement_no is null then CTR_AMT end),0)
               /COALESCE(count(distinct case when grnt_mth_cd='保证' and dtrb_org_typ_cd in ('11','12','14','15','52') then dtrb_org end),0) end 客户当日保证类贷款单家银行授信金额平均值_个人征信

        ,case when COALESCE(count(distinct case when grnt_mth_cd='抵押' and pd_cd not in ('11','12','13') and dtrb_org_typ_cd in ('11','12','14','15','52') then dtrb_org end),0)=0 then 0
        else COALESCE(sum(case when grnt_mth_cd='抵押' and pd_cd not in ('11','12','13')  and dtrb_org_typ_cd in ('11','12','14','15','52') and agreement_no is not null then credit_limit
							   when grnt_mth_cd='抵押' and pd_cd not in ('11','12','13')  and dtrb_org_typ_cd in ('11','12','14','15','52') and agreement_no is null then CTR_AMT end),0)
               /COALESCE(count(distinct case when grnt_mth_cd='抵押' and pd_cd not in ('11','12','13') and dtrb_org_typ_cd in ('11','12','14','15','52') then dtrb_org end),0) end 客户当日抵押类贷款_不含房贷_单家银行授信金额平均值_个人征信

from lab_bigdata_dev.max_report_zhengxin_geren_ctr_amt
group by cst_id
        ,report_id
;

-- adm_pub.adm_csm_cbus_out_crd_idv_cad_org_info_di 、edw.ncip_zx_p_zb_info 个人征信指标信息表、edw.dws_cst_ccrc_idv_ind_inf_di
-- 增加 借贷账户_贷款账户_未关闭银行机构-非我行_机构数      ZXACT_LOANACT_UNCL_OTHBANK_ORG_CNT
-- 口径为个人征信_1_非结清 _2_非泰隆 _3_账户：非贷记卡账户_R2_准贷记卡账户_R3_ C1催收 _4_银行_其他金融机构要剔除_ 的贷款银行数
-- 2.adm_csm_cbus_out_crd_idv_cad_act_info_di、edw.ncip_zx_p_zb_info 个人征信指标信息表、edw.dws_cst_ccrc_idv_ind_inf_di
-- 增加 借贷账户_贷款账户_未关闭小贷消金_账户数 ZXACT_LOANACT_UNCL_MICFIN_ACT_CNT
-- 口径为个人征信_1_非结清 _2_非泰隆 _3_账户：非贷记卡账户_R2_准贷记卡账户_R3_ C1催收 _4_放款机构类型24:消费金融公司 51:小额贷款公司 的贷款笔数
-- 3.adm_pub.adm_csm_cbus_out_crd_idv_cad_amt_di、edw.ncip_zx_p_zb_info 个人征信指标信息表、edw.dws_cst_ccrc_idv_ind_inf_di
-- 增加 贷账户_贷款账户_未关闭小贷消金_总余额 ZXACT_LOANACT_UNCL_MICFIN_BAL_SUM
-- 口径为个人征信_1_非结清 _2_非泰隆 _3_账户：非贷记卡账户_R2_准贷记卡账户_R3_ C1催收 _4_放款机构类型24:消费金融公司 51:小额贷款公司 的贷款余额


-- 个人贷款类指标
DROP TABLE IF EXISTS lab_bigdata_dev.max_report_zhengxin_geren_01;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.max_report_zhengxin_geren_01 AS
select t.*
		--,t.客户当日贷款未结清不含泰隆银行数计数_个人征信
		--,t.客户当日贷款小额贷款及消费金融公司余额求和_个人征信
		--,t.客户当日贷款小额贷款及消费金融公司账户数计数_个人征信
		,t3.ZXACT_LOANACT_UNCL_OTHBANK_ORG_CNT 客户当日贷款未结清不含泰隆银行数计数_个人征信 --借贷账户_贷款账户_未关闭银行机构-非我行_机构数
		,t4.ZXACT_LOANACT_UNCL_MICFIN_ACT_CNT  客户当日贷款小额贷款及消费金融公司账户数计数_个人征信 --借贷账户_贷款账户_未关闭小贷消金_账户数
		,t5. ZXACT_LOANACT_UNCL_MICFIN_BAL_SUM 客户当日贷款小额贷款及消费金融公司余额求和_个人征信  --贷账户_贷款账户_未关闭小贷消金_总余额
		,t2.客户当日贷款及大额专项分期卡授信金额求和_个人征信
		,t2.客户当日信用类贷款单家银行授信金额最大值_个人征信
		,t2.客户当日保证类贷款单家银行授信金额最大值_个人征信
		,t2.客户当日抵押类贷款_不含房贷_单家银行授信金额最大值_个人征信
		,t2.客户当日信用类贷款单家银行授信金额平均值_个人征信
		,t2.客户当日保证类贷款单家银行授信金额平均值_个人征信
		,t2.客户当日抵押类贷款_不含房贷_单家银行授信金额平均值_个人征信
from (
		select cst_id
				,report_id
				,coalesce(SUM(case when act_typ_cd IN ( 'R1' , 'R4' , 'D1' ) THEN ctr_bal END ),0)	+coalesce(SUM(case when act_typ_cd IN ( 'R2' , 'R3'  ) THEN ctr_bal END),0) AS 报告当日总负债_个人征信
				,coalesce(SUM(case when ( act_typ_cd IN ( 'R1' , 'R4' , 'D1' )  or pd_cd='82' ) THEN ctr_bal END ),0) AS 客户当日贷款及大额专项分期卡余额求和_个人征信
				,coalesce(SUM(case when act_typ_cd IN ( 'R2' , 'R3'  ) and pd_cd <>'82' THEN ctr_bal END),0) AS 客户当日信用卡不含大额专项分期卡余额求和_个人征信
				,coalesce(SUM(case when ( act_typ_cd IN ( 'R1' , 'R4' , 'D1' )  or pd_cd='82' ) and pd_cd not in ('11','12','13') THEN ctr_bal END ),0) AS 报告当日贷款类_不含房贷_余额求和_个人征信
				,coalesce(SUM(case when ( act_typ_cd IN ( 'R1' , 'R4' , 'D1' )  or pd_cd='82' )  and dtrb_org_typ_cd in ('11','12','14','15','52') THEN ctr_bal END ),0) AS 报告当日贷款类银行机构余额求和_个人征信
				,coalesce(SUM(case when ( act_typ_cd IN ( 'R1' , 'R4' , 'D1' )  or pd_cd='82' ) and pd_cd not in ('11','12','13') and dtrb_org_typ_cd in ('11','12','14','15','52') THEN ctr_bal END ),0) AS 报告当日贷款类_不含房贷_银行机构余额求和_个人征信

				,coalesce(count( distinct case when ( act_typ_cd IN ( 'R1' , 'R4' , 'D1' )  or pd_cd='82' )  and ctr_bal>0 THEN dtrb_org END ),0) 报告当日贷款类余额大于0机构数计数_个人征信
				,coalesce(count( distinct case when ( act_typ_cd IN ( 'R1' , 'R4' , 'D1' )  or pd_cd='82' )  and ctr_bal>0 and pd_cd not in ('11','12','13')  THEN dtrb_org END ),0) 报告当日贷款类_不含房贷_机构数计数_个人征信 --报告当日贷款类_不含房贷_余额大于0机构数计数_个人征信
				,coalesce(count( distinct case when ( act_typ_cd IN ( 'R1' , 'R4' , 'D1' )  or pd_cd='82' )  and ctr_bal>0 and dtrb_org_typ_cd in ('11','12','14','15','52')  THEN dtrb_org END ),0) 报告当日贷款类余额大于0且银行机构机构数计数_个人征信
				,coalesce(count( distinct case when ( act_typ_cd IN ( 'R1' , 'R4' , 'D1' )  or pd_cd='82' )  and ctr_bal>0 and dtrb_org_typ_cd in ('24','51') THEN dtrb_org END ),0) 报告当日贷款类正常存续余额大于0且小贷消金机构数计数_个人征信 --24:消费金融公司 51:小额贷款公司
				,coalesce(count( distinct case when act_typ_cd IN ( 'R2' , 'R3'  ) and pd_cd <>'82' and ctr_bal>0  THEN dtrb_org END ),0) 报告当日信用卡类余额大于0机构数计数_个人征信

				,coalesce(count( distinct case when ( act_typ_cd IN ( 'R1' , 'R4' , 'D1' )  or pd_cd='82' )  and ctr_bal>0 and pd_cd not in ('11','12','13')  and dtrb_org_typ_cd in ('11','12','14','15','52') THEN dtrb_org END ),0) 报告当日贷款类_不含房贷_余额大于0且银行机构机构数计数_个人征信

		from lab_bigdata_dev.max_report_zhengxin_geren
		group by cst_id
				,report_id
)t
left join lab_bigdata_dev.max_report_zhengxin_geren_01_02 t2  --个人授信类指标
on t.report_id=t2.report_id
left join adm_pub.adm_csm_cbus_out_crd_idv_cad_org_info_di t3
on t.report_id=t3.report_id
and t3.dt='20240731'
left join adm_pub.adm_csm_cbus_out_crd_idv_cad_act_info_di t4
on t.report_id=t4.report_id
and t4.dt='20240731'
left join adm_pub.adm_csm_cbus_out_crd_idv_cad_amt_di t5
on t.report_id=t5.report_id
and t5.dt='20240731'
;
drop table test_ft;
create table test_ft as
select
    CRDT_RPT_NO                                          征信报告编号32
    ,t.CST_ID                                               客户号10
    ,CUR_DAY_TOT_LBL_BAL                                  当日总负债余额_指标Z060401_0001
    ,CUR_DAY_LOAN_CLSS_BAL                                当日贷款类余额_指标Z060401_0002
    ,CUR_DAY_CR_CRD_CLSS_BAL                              当日信用卡类余额_指标Z060401_0003

    ,L6M_LOAN_SHD_RPMT_AVG_AMT                            近6个月贷款应还款平均金额_指标Z060401_0009
    ,L6M_CR_CRD_ACT_LMT_USE_RAT                           近6个月贷记卡账户额度使用率_指标Z060401_0010
    ,CUR_DAY_LOAN_CLSS_FACL_AMT                           当日贷款类授信金额_指标Z060401_0011
    ,CUR_DAY_CR_LOAN_BNK_FACL_HGST_AMT                    当日信用贷款银行授信最高金额_指标Z060401_0012
    ,CUR_DAY_GRNTE_LOAN_BNK_FACL_HGST_AMT                 当日保证贷款银行授信最高金额_指标Z060401_0013
    ,CUR_DAY_NON_HS_MORT_LOAN_BNK_FACL_HGST_AMT           当日非房抵押贷款银行授信最高金额_指标Z060401_0014
    ,CUR_DAY_CR_LOAN_BNK_FACL_AVG_AMT                     当日信用贷款银行授信平均金额_指标Z060401_0015
    ,CUR_DAY_GRNTE_LOAN_BNK_FACL_AVG_AMT                  当日保证贷款银行授信平均金额_指标Z060401_0016
    ,CUR_DAY_NON_HS_MORT_LOAN_BNK_FACL_AVG_AMT            当日非房抵押贷款银行授信平均金额_指标Z060401_0017

    ,CUR_DAY_LOAN_CLSS_NON_HS_LOAN_BAL                    当日贷款类非房贷余额_指标Z060401_0049
    ,CUR_DAY_LOAN_CLSS_BNK_ORG_BAL                        当日贷款类银行机构余额_指标Z060401_0050
    ,CUR_DAY_LOAN_CLSS_GT_ZR_ORG_NUM                      当日贷款类大于0机构数_指标Z060401_0051
    ,CUR_DAY_LOAN_CLSS_GT_ZR_BNK_ORG_NUM                  当日贷款类大于0银行机构数_指标Z060401_0052
    ,CUR_DAY_NORM_LOAN_GT_ZR_SML_AMT_LOAN_CSM_FIN_ORG_NUM 当日正常贷款大于0小贷消金机构数_指标Z060401_0053
    ,CUR_DAY_CR_CRD_GT_ZR_ORG_NUM                         当日信用卡大于0机构数_指标Z060401_0054
    ,CUR_DAY_REL_RPAY_RSPBL_ACT_NUM                       当日相关还款责任账户数_指标Z060401_0055

    ,CUR_DAY_NON_HS_LOAN_BNK_BAL                          当日非房贷银行余额_指标Z060401_0056
    ,CUR_DAY_NON_HS_LOAN_GT_ZR_BNK_NUM                    当日非房贷大于0银行数_指标Z060401_0057
    ,CUR_DAY_NON_HS_LOAN_GT_ZR_ORG_NUM                    当日非房贷大于0机构数_指标Z060401_0101

  ,报告当日总负债_个人征信
				, 客户当日贷款及大额专项分期卡余额求和_个人征信
				, 客户当日信用卡不含大额专项分期卡余额求和_个人征信
				,报告当日贷款类_不含房贷_余额求和_个人征信
				, 报告当日贷款类银行机构余额求和_个人征信
				, 报告当日贷款类_不含房贷_银行机构余额求和_个人征信

				, 报告当日贷款类余额大于0机构数计数_个人征信
				, 报告当日贷款类_不含房贷_机构数计数_个人征信 --报告当日贷款类_不含房贷_余额大于0机构数计数_个人征信
				, 报告当日贷款类余额大于0且银行机构机构数计数_个人征信
				, 报告当日贷款类正常存续余额大于0且小贷消金机构数计数_个人征信 --24:消费金融公司 51:小额贷款公司
				,报告当日信用卡类余额大于0机构数计数_个人征信

				,报告当日贷款类_不含房贷_余额大于0且银行机构机构数计数_个人征信
		,客户当日贷款未结清不含泰隆银行数计数_个人征信 --借贷账户_贷款账户_未关闭银行机构-非我行_机构数
		,客户当日贷款小额贷款及消费金融公司账户数计数_个人征信 --借贷账户_贷款账户_未关闭小贷消金_账户数
		,客户当日贷款小额贷款及消费金融公司余额求和_个人征信  --贷账户_贷款账户_未关闭小贷消金_总余额
		,t2.客户当日贷款及大额专项分期卡授信金额求和_个人征信
		,t2.客户当日信用类贷款单家银行授信金额最大值_个人征信
		,t2.客户当日保证类贷款单家银行授信金额最大值_个人征信
		,t2.客户当日抵押类贷款_不含房贷_单家银行授信金额最大值_个人征信
		,t2.客户当日信用类贷款单家银行授信金额平均值_个人征信
		,t2.客户当日保证类贷款单家银行授信金额平均值_个人征信
		,t2.客户当日抵押类贷款_不含房贷_单家银行授信金额平均值_个人征信
		-- ,客户当日贷款及大额专项分期卡余额求和_个人征信
		-- ,客户当日信用卡不含大额专项分期卡余额求和_个人征信
		-- ,客户当日相关还款责任余额求和_个人征信
		-- ,客户当日相关还款责任逾期金额求和_个人征信
		-- ,客户当日相关还款责任非正常余额求和_个人征信
		-- ,客户当日相关还款责任金额求和_个人征信
		-- ,客户当日相关还款责任账户数求和_个人征信
		-- ,客户当日贷款未结清不含泰隆银行数计数_个人征信
		-- ,客户当日贷款小额贷款及消费金融公司余额求和_个人征信
		-- ,客户当日贷款小额贷款及消费金融公司账户数计数_个人征信
		-- ,客户近6个月贷款平均应还款额平均值_个人征信
		-- ,客户近6个月贷记卡平均透支率_个人征信
		-- ,客户当日贷款及大额专项分期卡授信金额求和_个人征信
		-- ,客户当日信用类贷款单家银行授信金额最大值_个人征信
		-- ,客户当日保证类贷款单家银行授信金额最大值_个人征信
		-- ,客户当日抵押类贷款_不含房贷_单家银行授信金额最大值_个人征信
		-- ,客户当日信用类贷款单家银行授信金额平均值_个人征信
		-- ,客户当日保证类贷款单家银行授信金额平均值_个人征信
		-- ,客户当日抵押类贷款_不含房贷_单家银行授信金额平均值_个人征信
from lab_bigdata_dev.ADM_PBLC_CST_CRDT_INDIV_CST_IDX_DD t
left join lab_bigdata_dev.max_report_zhengxin_geren_01 t2
on t.CRDT_RPT_NO=t2.report_id
where t.dt=20240731
;
select 征信报告编号32,客户号10,当日总负债余额_指标Z060401_0001,报告当日总负债_个人征信
,    当日贷款类余额_指标Z060401_0002,客户当日贷款及大额专项分期卡余额求和_个人征信
,    当日信用卡类余额_指标Z060401_0003,客户当日信用卡不含大额专项分期卡余额求和_个人征信
   --          近6个月贷款应还款平均金额_指标Z060401_0009
    --       近6个月贷记卡账户额度使用率_指标Z060401_0010
    , 当日贷款类授信金额_指标Z060401_0011,客户当日贷款及大额专项分期卡授信金额求和_个人征信
    , 当日信用贷款银行授信最高金额_指标Z060401_0012,客户当日信用类贷款单家银行授信金额最大值_个人征信
    , 当日保证贷款银行授信最高金额_指标Z060401_0013,客户当日保证类贷款单家银行授信金额最大值_个人征信
    , 当日非房抵押贷款银行授信最高金额_指标Z060401_0014,客户当日抵押类贷款_不含房贷_单家银行授信金额最大值_个人征信
    ,                  当日信用贷款银行授信平均金额_指标Z060401_0015,客户当日信用类贷款单家银行授信金额平均值_个人征信
    ,                 当日保证贷款银行授信平均金额_指标Z060401_0016,客户当日保证类贷款单家银行授信金额平均值_个人征信
    ,         当日非房抵押贷款银行授信平均金额_指标Z060401_0017,客户当日抵押类贷款_不含房贷_单家银行授信金额平均值_个人征信
    ,                当日贷款类非房贷余额_指标Z060401_0049,报告当日贷款类_不含房贷_余额求和_个人征信
     ,                        当日贷款类银行机构余额_指标Z060401_0050,报告当日贷款类银行机构余额求和_个人征信
     ,                    当日贷款类大于0机构数_指标Z060401_0051,报告当日贷款类余额大于0机构数计数_个人征信
     ,                 当日贷款类大于0银行机构数_指标Z060401_0052,报告当日贷款类余额大于0且银行机构机构数计数_个人征信
     , 当日正常贷款大于0小贷消金机构数_指标Z060401_0053,报告当日贷款类正常存续余额大于0且小贷消金机构数计数_个人征信 --24:消费金融公司 51:小额贷款公司
     ,                       当日信用卡大于0机构数_指标Z060401_0054,报告当日信用卡类余额大于0机构数计数_个人征信
    --,CUR_DAY_REL_RPAY_RSPBL_ACT_NUM                       当日相关还款责任账户数_指标Z060401_0055  ,
     ,                          当日非房贷银行余额_指标Z060401_0056,报告当日贷款类_不含房贷_银行机构余额求和_个人征信
     ,                 当日非房贷大于0银行数_指标Z060401_0057,报告当日贷款类_不含房贷_余额大于0且银行机构机构数计数_个人征信
    ,              当日非房贷大于0机构数_指标Z060401_0101,报告当日贷款类_不含房贷_机构数计数_个人征信 --报告当日贷款类_不含房贷_余额大于0机构数计数_个人征信
from test_ft
where
      当日总负债余额_指标Z060401_0001<>报告当日总负债_个人征信
or    当日贷款类余额_指标Z060401_0002<>客户当日贷款及大额专项分期卡余额求和_个人征信
or    当日信用卡类余额_指标Z060401_0003<>客户当日信用卡不含大额专项分期卡余额求和_个人征信
 /*  --          近6个月贷款应还款平均金额_指标Z060401_0009
    --       近6个月贷记卡账户额度使用率_指标Z060401_0010
    or 当日贷款类授信金额_指标Z060401_0011<>客户当日贷款及大额专项分期卡授信金额求和_个人征信
    or 当日信用贷款银行授信最高金额_指标Z060401_0012<>客户当日信用类贷款单家银行授信金额最大值_个人征信
    or 当日保证贷款银行授信最高金额_指标Z060401_0013<>客户当日保证类贷款单家银行授信金额最大值_个人征信
    or 当日非房抵押贷款银行授信最高金额_指标Z060401_0014<>客户当日抵押类贷款_不含房贷_单家银行授信金额最大值_个人征信
    or                  当日信用贷款银行授信平均金额_指标Z060401_0015<>客户当日信用类贷款单家银行授信金额平均值_个人征信
    or                 当日保证贷款银行授信平均金额_指标Z060401_0016<>客户当日保证类贷款单家银行授信金额平均值_个人征信
    or         当日非房抵押贷款银行授信平均金额_指标Z060401_0017<>客户当日抵押类贷款_不含房贷_单家银行授信金额平均值_个人征信
    or                当日贷款类非房贷余额_指标Z060401_0049<>报告当日贷款类_不含房贷_余额求和_个人征信
     or                        当日贷款类银行机构余额_指标Z060401_0050<>报告当日贷款类银行机构余额求和_个人征信
     or                    当日贷款类大于0机构数_指标Z060401_0051<>报告当日贷款类余额大于0机构数计数_个人征信
     or                 当日贷款类大于0银行机构数_指标Z060401_0052<>报告当日贷款类余额大于0且银行机构机构数计数_个人征信
     or 当日正常贷款大于0小贷消金机构数_指标Z060401_0053<>报告当日贷款类正常存续余额大于0且小贷消金机构数计数_个人征信 --24:消费金融公司 51:小额贷款公司
     or                       当日信用卡大于0机构数_指标Z060401_0054<>报告当日信用卡类余额大于0机构数计数_个人征信
    --,CUR_DAY_REL_RPAY_RSPBL_ACT_NUM                       当日相关还款责任账户数_指标Z060401_0055  <>
     or                          当日非房贷银行余额_指标Z060401_0056<>报告当日贷款类_不含房贷_银行机构余额求和_个人征信
     or                 当日非房贷大于0银行数_指标Z060401_0057<>报告当日贷款类_不含房贷_余额大于0且银行机构机构数计数_个人征信
    or              当日非房贷大于0机构数_指标Z060401_0101<>报告当日贷款类_不含房贷_机构数计数_个人征信 --报告当日贷款类_不含房贷_余额大于0机构数计数_个人征信

*/

select * from lab_bigdata_dev.TMP_ADM_PBLC_NCIP_CP_M_ACCOUNT_INFO_01
where REPORT_ID='2024073111271725784627'
and bal>0
;
**取数需求_20240619_交接到非客户经理.sql
SELECT count(*),COUNT(DISTINCT 客户号) FROM gjj_kehu_mingxi
**取数需求_202412_行业景气高德产效.sql
----------------------------------------------------筛选条件 无高德地址，未下发-对照组-------------------------------------------------------------


drop table if exists LAB_BIGDATA_DEV.yanhuo_new_loan_compare ;
CREATE TABLE LAB_BIGDATA_DEV.yanhuo_new_loan_compare as
select `(rn)?+.+` from (
SELECT t.entname 企业名称
        ,t.socialcreditcode 统一社会信用代码
        ,t.address 注册地址
        ,t.esdate 成立日期
        ,t.regcapital 注册资金
        ,t.三级行业
        ,t.四级行业
        ,t.enttype 企业类型
        ,t.legalname 法人姓名
        ,t.tel 工商企业电话

		,t13.经营地址_来源税务
		,t13.纳税信用级别 纳税信用级别_ABMCD级
		,t13.移动电话_来源税务

        ,t2.行业景气指数 行业景气指数_1至100分_分越高行业越景气
        ,t2.四级个体户总量 城市四级行业的个体户数量
        ,dbit.行业用款高峰期所属月份 -- 行业用款高峰期所属月份：基于我行贷款客户用信数据，行业贷款月日均TOP3所属月份，且行业贷款月日均>=1.02*年日均。
        ,dbit.生产经营旺季 行业生产经营旺季  --行业生产经营旺季：基于我行交易流水数据，行业月交易金额TOP3所属月份，且行业月交易金额>=1.1*年交易金额。
        ,gs.客户号
		,t11.aum_avg_360d	近360天aum日均
        ,zx.他行授信金额
        ,zx.他行贷款余额
        ,zx.他行贷款机构数
        ,zx.最近一次征信查询日期
       -- ,zx.最近一次征信分
        ,zx.小贷消金的贷款余额

		,row_number() over(partition by t.socialcreditcode order by t11.aum_avg_360d desc, zx.他行贷款余额 desc) rn
from lab_bigdata_dev.gs_1years t  --成立时间<=20230531，在营，个体户及企业的工商名单
left join lab_bigdata_dev.industry_score t2 --行业景气分
on t.城市=t2.city
and t.code=t2.code

left join lab_bigdata_dev.loan_cst_gs loan ----贷款客户（未结清，或者近3年有合同的客户清单,同一风险控制号）名下的企业都得剔除
on t.socialcreditcode=loan.统一社会信用代码

left join app_rpt.FCT_THS_MCH_INF_CESHI mch --泰惠收商户信息表 非泰惠收商户
on t.socialcreditcode=mch.mcht_licn_no
AND     mch.dt = '20240629'

left join lab_bigdata_dev.cst_gs gs --关联用：客户号，统一社会信用代码 行内客户名下 的工商（企业法人，企业都查一遍） 一个统一社会信用代码 多个客户号
on t.socialcreditcode=gs.统一社会信用代码

left join lab_bigdata_dev.bad_cst_id_all badt  --有客户号的坏客户
on gs.客户号=badt.cst_id
left join LAB_BIGDATA_DEV.GUANXISHU_ZHISHITUPU_GS_FY_DROP_LIST GS_FY  --潜在客户的法院工商坏客户
on t.entname=GS_FY.drop_name  --企业名称

left join lab_bigdata_dev.industry_4ji_trx dbit --关联字段用：行业用款高峰期
on t.code=dbit.cd_val

left join lab_bigdata_dev.other_zx_analy zx --对私对公征信汇总
on gs.客户号=zx.客户号
left join adm_pub.adm_csm_cbus_cst_fin_ast_inf_dd t11
on gs.客户号=t11.cst_id
and t11.dt='20240629'
left join (
			SELECT  社会信用代码补全主键
					,纳税人名称
					,生产经营地址 经营地址_来源税务
					,纳税信用级别
					,移动电话 移动电话_来源税务
					,ROW_NUMBER() OVER ( PARTITION BY 社会信用代码补全主键 ORDER BY 评价年度 DESC , 纳税信用级别 ASC , 移动电话 DESC ) RNow
					,评价年度
			FROM    LAB_BIGDATA_DEV.shuiwushuju --统一社会
			WHERE   评价年度 = '2022'   OR 评价年度 = 2022.0   OR 评价年度 = '2023'
			)t13
on t13.社会信用代码补全主键=t.socialcreditcode
and RNow=1

--剔除实验组
left join (

		select distinct 企业名称,统一社会信用代码,城市,注册地址,高德地址 ,法人姓名,高德商户门头 from yanhuo_new_loan_wenzhouquzhou --温州市1527  衢州市	6774
		union
		select distinct 企业名称,统一社会信用代码,城市,注册地址,高德地址 ,法人姓名,高德商户门头 from yanhuo_new_loan_6 where 城市='上海市'  --上海 150
		union
		select distinct 企业名称,统一社会信用代码,城市,注册地址,高德地址 ,法人姓名,高德商户门头 from yanhuo_new_loan --台州市	1317  宁波市	17298
		union
		select distinct 企业名称,统一社会信用代码,城市,工商地址 注册地址,高德地址 ,法人姓名,高德商户门头 from yanhuo_new_loan_hangzhou --杭州12149
		)exc
on t.socialcreditcode=exc.统一社会信用代码

where
loan.统一社会信用代码 is null  --贷款客户（未结清，或者近3年有合同的客户清单）名下的企业都得剔除
and mch.mcht_licn_no is null  ----非泰惠收商户
and coalesce(badt.bad,0)<>'1'   --有客户号的坏客户, 0 或者空
and coalesce(GS_FY.drop_name,'')=''    --潜在客户的法院工商坏客户
and t2.行业景气指数>=40
and t2.四级个体户总量>=30
and exc.统一社会信用代码 is null

)t
where t.rn=1
and t.企业名称 not in ('中国石油天然气股份有限公司浙江销售分公司','中国铁通集团有限公司浙江分公司')
and t.企业名称 not like '%中国电信%'
--like '%中国铁通%' or 企业名称 like '%中国移动%' or 企业名称 like '%中国石油%' or 企业名称 like '%中移%'  ; 企业名称 like '%中国铁塔股份'
and t.企业名称 not like '%中国移动%'
and t.企业名称 not like '%中移%'
and t.企业名称 not like '%中国铁塔股份%'
and t.企业名称 not like '%中国石化销售股份有限公司%加油站'
and t.企业名称 not like '%中海油销售浙江有限公司%加油站'
and t.企业名称 not like '%中国石油天然气股份有限公司%加油站'
and t.企业名称 not like '%浙江高速石油发展有限公司%加油站'
and t.企业名称 not like '%浙江壳牌燃油有限公司%加油站'
;

--对照组：合同做在企业名下
drop TABLE  if EXISTS  gaode_loan_compare;
create TABLE  gaode_loan_compare as
select t.统一社会信用代码
	,t.企业名称 客户名称
    ,t3.cst_id 贷款客户号
    ,t3.ctr_bgn_dt 合同起始日期
	,t3.ctr_amt  合同金额
	,t3.ctr_bal  合同余额
	,t5.prm_mgr_id	主管护客户经理工号
	,t5.prm_mgr_nm	主管护客户经理姓名
	,t5.prm_org_id	主管护机构号
	,t5.prm_org_nm	主管户机构名称
	,concat('%',t6.idv_mbl_nbr) 客户经理手机
from yanhuo_new_loan_compare t
left join edw.dws_cst_bas_inf_dd t2   --客户基础信息汇总表
on t.统一社会信用代码=t2.doc_nbr
and t2.dt='@@{yyyyMMdd}'
left join (	select cst_id
				, max(ctr_bgn_dt)  ctr_bgn_dt
				,sum(ctr_amt)  ctr_amt
				,sum(ctr_bal)  ctr_bal
			from edw.DIM_BUS_LOAN_CTR_BSE_INF_DD
			where dt='20241013'
			and  PRD_NO not in ( '2002010101001','2002010101901')
			GROUP BY  cst_id
			having min(ctr_bgn_dt)>='20240531'
			) t3   --剔除信用卡
on t2.cst_id=t3.cst_id
left  join adm_pub.adm_csm_cbas_mng_inf_dd t5 on t3.cst_id=t5.cst_id and t5.dt='@@{yyyyMMdd}'
left join edw.dws_hr_empe_inf_dd t6  on t5.prm_mgr_id=t6.empe_id and t6.dt='@@{yyyyMMdd}'
;
--对照组：合同做在企业法人名下
DROP TABLE IF EXISTS gaode_loan_cst_20241014_compare;
CREATE TABLE gaode_loan_cst_20241014_compare AS
SELECT  t1.cst_id 贷款客户号
		,in_namecn 客户名称 --高管姓名
        ,t1.ctr_bgn_dt 合同起始日期
        ,t1.ctr_amt 合同金额
        ,t1.ctr_bal 合同余额
        ,t4.统一社会信用代码

		,t5.prm_mgr_id	主管护客户经理工号
		,t5.prm_mgr_nm	主管护客户经理姓名
		,t5.prm_org_id	主管护机构号
		,t5.prm_org_nm	主管户机构名称
		,concat('%',t6.idv_mbl_nbr) 客户经理手机

FROM    (
            SELECT  cst_id
                    ,max(ctr_bgn_dt) ctr_bgn_dt
                    ,sum(ctr_amt) ctr_amt
                    ,sum(ctr_bal) ctr_bal
            FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD
            WHERE   dt = '@@{yyyyMMdd}'
            AND     PRD_NO NOT IN ( '2002010101001' , '2002010101901' ) --剔除信用卡
            GROUP BY cst_id
			having min(ctr_bgn_dt)>='20240531'  --首贷户
        ) t1
LEFT JOIN    edw.dws_cst_bas_inf_dd t2 --客户基础信息汇总表
ON      t1.cst_id = t2.cst_id
AND     t2.dt = '@@{yyyyMMdd}'
LEFT JOIN    (
                 SELECT  d.dt
                         ,d.in_ctfno --高管证件号
                         ,d.in_namecn --高管姓名
                         ,d.dt_gpr_entname --企业(机构)名称
                         ,d.dt_gpr_enttype --企业(机构)类型
                         ,d.dt_gpr_entstatus --企业状态
                         ,d.dt_gpr_creditcode --统一社会信用代码
                 FROM    (
                             SELECT  *
                                     ,row_number() OVER ( PARTITION BY dt_gpr_creditcode ORDER BY dt DESC ) AS rk
                             FROM    (
                                         SELECT  dt
                                                 ,in_ctfno --高管证件号
                                                 ,in_namecn --高管姓名
                                                 ,dt_gpr_entname --企业(机构)名称
                                                 ,dt_gpr_enttype --企业(机构)类型
                                                 ,dt_gpr_entstatus --企业状态
                                                 ,dt_gpr_creditcode --统一社会信用代码
                                         FROM    edw.nout_gs_prsn_ryposfrtd --工商个人替代-人员法人信息
                                         WHERE   dt <= '@@{yyyyMMdd}' ---------------xt:添加查得标识=1
                                         AND     gpr_ifrichard = '1'

                                         --查的标识=1
                                         UNION ALL
                                         SELECT  dt
                                                 ,gpm_ctfno in_ctfno
                                                 ,gpm_namecn in_namecn
                                                 ,gpr_entname dt_gpr_entname
                                                 ,gpr_enttype dt_gpr_enttype
                                                 ,gpr_entstatus dt_gpr_entstatus --旧表
                                                 ,gpr_creditcode AS dt_gpr_creditcode --统一社会信用代码
                                         FROM    (
                                                     SELECT  *
                                                     FROM    (
                                                                 SELECT  c.dt
                                                                         ,gpm_ctfno --被查询人证件号码
                                                                         ,gpm_namecn --被查询人姓名
                                                                         ,c.gpr_entname --企业(机构)名称
                                                                         ,c.gpr_entstatus --企业状态
                                                                         ,c.gpr_enttype --企业(机构)类型
                                                                         ,c.gpr_creditcode --统一社会信用代码
                                                                         ,ROW_NUMBER() OVER ( PARTITION BY gpm_ctfno ORDER BY gpm_hostsendtime DESC ) rn
                                                                 FROM    edw.outd_gs_person_main a --工商个人主表
                                                                 INNER JOIN    edw.outd_gs_person_ryposfr c --工商个人-人员法人信息
                                                                 ON      a.gpm_flowno = c.gpr_flowno
                                                                 AND     c.dt <= '@@{yyyyMMdd}' ---- 作为法人的企业信息
                                                                 WHERE   a.dt <= '@@{yyyyMMdd}'
                                                                 AND     substr(a.gpm_hostsendtime, 1, 8) <= '@@{yyyyMMdd}'
                                                             ) aa
                                                     WHERE   aa.rn = 1
                                                 ) cc
                                     ) bb
                         ) d
                 WHERE   d.rk = 1
                 AND     d.dt_gpr_entstatus RLIKE '在营'
             ) t3
ON      t2.doc_nbr = t3.in_ctfno
AND     t3.in_ctfno IS NOT NULL
AND     t3.dt_gpr_creditcode IS NOT NULL
left  join adm_pub.adm_csm_cbas_mng_inf_dd t5 on t1.cst_id=t5.cst_id and t5.dt='@@{yyyyMMdd}'
left join edw.dws_hr_empe_inf_dd t6  on t5.prm_mgr_id=t6.empe_id and t6.dt='@@{yyyyMMdd}'
INNER JOIN    yanhuo_new_loan_compare t4
ON      t3.dt_gpr_creditcode = t4.统一社会信用代码;


--SELECT count(distinct 统一社会信用代码),count(distinct 贷款客户号) FROM gaode_loan_cst_20241014_compare;  --2024.10更新675	673，  2024.11.25更新 696	692，限制首贷户22
--贷款做在企业及法人名下合并
drop table if exists check_result_gd_industry_compare;
create table check_result_gd_industry_compare as
select t.统一社会信用代码,t.贷款客户号,t.客户名称,合同起始日期,合同金额,合同余额,主管护客户经理工号,主管护客户经理姓名,主管护机构号,主管户机构名称,concat('%',客户经理手机) 客户经理手机,'法人' as 类型
from gaode_loan_cst_20241014_compare t
where t.贷款客户号 is not null
union
select t.统一社会信用代码,t.贷款客户号,t.客户名称,合同起始日期,合同金额,合同余额,主管护客户经理工号,主管护客户经理姓名,主管护机构号,主管户机构名称,concat('%',客户经理手机) 客户经理手机,'企业' as 类型
from gaode_loan_compare  t
where t.贷款客户号 is not null
;

select count(*) from check_result_gd_industry_compare;  --5461

select count(*) from yanhuo_new_loan_compare
**取数需求_a花呗借呗.sql
DROP TABLE IF EXISTS lab_bigdata_dev.risk_gap01;



CREATE TABLE IF NOT EXISTS lab_bigdata_dev.risk_gap01 as

SELECT

		t1.rpt_id  -- '报告编号|C22',

		,t1.cst_id  -- '客户号|C20',

		,t1.grnt_act_id  -- '担保账户编号|C8',

		,t1.grnt_act_typ_cd  -- '担保账户类型代码|C60',

		,t1.bus_mng_org_typ_cd  -- '业务管理机构类型代码|C60',

		,t1.bus_mng_org_cd  -- '业务管理机构代码|C60',

		,t1.crd_agr_id  -- '授信协议编号|C8',

		,t1.grnt_trx_bus_cls_cd  -- '担保交易业务种类细分代码|C60',

		,t1.opn_dt  -- '开立日期|C10',

		,t1.ccy_cd  -- '币种代码|C60',

		,t1.amt  金额

		,t1.mtu_dt  -- '到期日期|C10',

		,case t1.over_grnt_mth_cd    when '0' then '信用' when '1' then '保证' when '2' then '质押' when '3' then '抵押' when '4' then '组合'  else  t1.over_grnt_mth_cd end as 反担保方式 -- 0信用/免担保 1保证 2质押 3抵押 4组合

		,case t1.oth_rpay_grnt_mth_cd  when '0' then '无' when '1' then '保证金' when '2' then '第三方付款承诺' when '9' then '其他' else  t1.oth_rpay_grnt_mth_cd end as   其他还款保证方式

		,t1.mrgn_rto  保证金比例

		,t1.id  -- '征信代理键|C32'

		,t2.bal		余额

		,t2.five_ctg_cd		--五级分类代码|C60

		,t2.rsk_xpos		风险敞口

		, COALESCE(T2.BAL, 0) * ( 1 - IF(T1.MRGN_RTO = '', 0, T1.MRGN_RTO) / 100 ) 加工的风险敞口余额减保证金

		,case when abs(coalesce(t2.rsk_xpos,0) - COALESCE(T2.BAL, 0) * ( 1 - IF(T1.MRGN_RTO = '', 0, T1.MRGN_RTO) / 100 ) )<=10000 then 1 else 0 end 风险敞口是否一致

		,t2.adv_mny_ind		--代偿（垫款）标志|C60

		,t2.com_dbt_id		--共同债务标识|C60

FROM    edw.DIM_CST_CCRC_ENTP_GRNT_ACT_BAS_INF_DD T1 --担保账户基本信息--DIM_CST_CCRC_ENTP_GRNT_ACT_BAS_INF_DD

INNER JOIN    edw.DIM_CST_CCRC_ENTP_GRNT_DUTY_INF_DD T2 --在保责任信息段 --DIM_CST_CCRC_ENTP_GRNT_DUTY_INF_DD

ON      T1.ID = T2.REL_ID

AND     T1.RPT_ID = T2.RPT_ID

AND     T2.DT = '@@{yyyyMMdd}'

and substr(t2.rpt_id,1,8)>='20230101'

AND     T2.ACT_ACTV_STS_CD = '1' --取未结清的

WHERE   T1.DT = '@@{yyyyMMdd}'

and substr(t1.rpt_id,1,8)>='20230101'

;





select count( distinct case when 风险敞口是否一致=1 then t1.id else null end ) as 相等的账户数

		,sum(  case when 风险敞口是否一致=1 then 加工的风险敞口余额减保证金 else null end ) as 相等的风险敞口

		,count( distinct case when 风险敞口是否一致=0 then t1.id else null end) as 不相等的账户数

		,sum(  case when 风险敞口是否一致=0 then 加工的风险敞口余额减保证金 else null end )as 不相等的风险敞口

		,count( distinct case when 风险敞口是否一致=0 and bus_mng_org_typ_cd='00' then t1.id else null end) as 不相等且我行的账户数

		,sum(  case when 风险敞口是否一致=0 and bus_mng_org_typ_cd='00' then 加工的风险敞口余额减保证金 else null end )as 不相等且我行的风险敞口

        ,count( distinct case when 风险敞口是否一致=1 and bus_mng_org_typ_cd='00' then t1.id else null end) as 相等且我行的账户数

		,sum(  case when 风险敞口是否一致=1 and bus_mng_org_typ_cd='00' then 加工的风险敞口余额减保证金 else null end )as 相等且我行的风险敞口

from lab_bigdata_dev.risk_gap01 t1

;





select count( distinct case when 风险敞口是否一致=1 then t1.id else null end ) as 二者相等的账户数

		,sum(  case when 风险敞口是否一致=1 then 加工的风险敞口余额减保证金 else null end ) as 二者相等的风险敞口

		,count( distinct case when 风险敞口是否一致=0 then t1.id else null end) as 二者不相等的账户数

		,count( distinct case when 风险敞口是否一致=0 and  风险敞口>加工的风险敞口余额减保证金 then t1.id else null end) as 基础数据大于加工指标的账户数

		,count( distinct case when 风险敞口是否一致=0 and  风险敞口<加工的风险敞口余额减保证金 then t1.id else null end) as 基础数据小于加工指标的账户数

		,sum(  case when 风险敞口是否一致=0 then 加工的风险敞口余额减保证金 else null end )as 二者不相等的风险敞口

		,count( distinct case when 风险敞口是否一致=1 and bus_mng_org_typ_cd='00' then t1.id else null end) as 二者相等且我行的账户数

		,sum(  case when 风险敞口是否一致=1 and bus_mng_org_typ_cd='00' then 加工的风险敞口余额减保证金 else null end )as 二者相等且我行的风险敞口

		,count( distinct case when 风险敞口是否一致=0 and bus_mng_org_typ_cd='00' then t1.id else null end) as 二者不相等且我行的账户数

		,count( distinct case when 风险敞口是否一致=0 and  风险敞口>加工的风险敞口余额减保证金 and bus_mng_org_typ_cd='00' then t1.id else null end) as 基础数据大于加工指标且我行的账户数

		,count( distinct case when 风险敞口是否一致=0 and  风险敞口<加工的风险敞口余额减保证金 and bus_mng_org_typ_cd='00' then t1.id else null end) as基础数据小于加工指标且我行的账户数

		,sum(  case when 风险敞口是否一致=0 and bus_mng_org_typ_cd='00' then 加工的风险敞口余额减保证金 else null end )as 二者不相等且我行的风险敞口

from lab_bigdata_dev.risk_gap01 t1

;
**取数需求_b高德地图.sql
select 反担保方式,其他还款保证方式,sum(加工的风险敞口余额减保证金)

from lab_bigdata_dev.risk_gap01 t1

where 风险敞口是否一致=0 and bus_mng_org_typ_cd='00'

group by 反担保方式,其他还款保证方式



;
**取数需求_交接过程分析.sql
SELECT * FROM lab_bigdata_dev.NCIP_CP_M_ACCOUNT_INFO where dt='20240712' and report_id='2024071210580515186967'
**取数需求_借呗核销信贷核心对比.sql
---- 满足筛选条件的客户
DROP TABLE IF EXISTS lab_bigdata_dev.yanhuo_notbank_sample;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.yanhuo_notbank_sample AS
SELECT  a.cst_id
FROM    (
            SELECT  cst_id
                    ,sum(ctr_amt) AS ctr_amt
            FROM    edw.dim_bus_loan_ctr_inf_dd AS a
            WHERE   a.dt = '20240718'
            and a.BUS_CD NOT IN ( 'A' , 'B' , 'H' , 'I' , 'O' , 'P' ) --剔除 员工贷款
			AND (a.CHNL_CD<>'L08' OR a.PD_CD<>'201050101040335')--剔除小鱼分期
			AND a.PD_CD<>'201050101040332'--剔除 蚂蚁借呗
			AND a.PD_CD<>'201050101040319'--剔除百度分期贷
			AND (a.PD_CD NOT IN ( '201050102010146' , '201050101040348') OR a.FRZ_STS_CD<>'')--剔除未签约的泰e贷
			AND     ( ( ( a.ctr_bal > 0
				OR ( a.ctr_bal IS NULL AND     nvl(a.crc_ind, '0') = '0' )
				OR ( ( nvl(a.crc_ind, '0') <> '0' OR a.pd_cd LIKE '2010503%' )	AND     ( a.ctr_bal = 0	OR a.ctr_bal IS NULL )	AND     a.apnt_mtu_dt >= a.dt ) )
			AND     nvl(a.frz_sts_cd, ' ') NOT IN ( '3' , '4' ) )
				OR ( a.ctr_bal > 0
			AND     a.pd_cd LIKE '2010503%'
			AND     a.apnt_mtu_dt <= a.dt
			AND     a.frz_sts_cd IN ( '3' , '4' ) ) )
			AND ( a.PD_CD LIKE '201050102%' OR ( a.PD_CD LIKE '2010503%' AND a.LOAN_USG_CD LIKE '01%' ) ) --个人一般经营性贷款、经营用途随贷通
			group by cst_id having sum(ctr_amt)<='1500000'
			) AS a
INNER JOIN    (
                  SELECT  cst_id
						  ,sum( ctr_bal  ) as 非银机构贷款余额
                  FROM    lab_bigdata_dev.max_report_0715 t
				  where   dtrb_org_typ_cd not in ('商业银行','村镇银行','住房储蓄银行','外资银行','公积金管理中心')
				  and grnt_mth_cd not in ('抵押','质押')
                  GROUP BY cst_id
                   HAVING sum(ctr_bal) > '30000'
              ) AS b
ON      a.cst_id = b.cst_id;

---数据汇总
DROP TABLE IF EXISTS lab_bigdata_dev.notbank_result; --47943

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.notbank_result AS
SELECT  a.cst_id         AS 客户号
        ,a.cst_chn_nm    AS 客户名称
        ,c.brc_org_id    AS 分行机构编号
        ,c.brc_org_nm    AS 分行机构名称
        ,c.sbr_org_id    AS 支行机构编号
        ,c.sbr_org_nm    AS 支行机构名称
        ,c.tem_org_id    AS 团队机构编号
        ,c.tem_org_nm    AS 团队机构名称
        ,b.prm_mgr_id    AS 主管护客户经理工号
        ,b.prm_mgr_nm    AS 主管护客户经理姓名
        ,g.cd_val_dscr   AS 行业大类
        ,f.cd_val_dscr   AS 行业细类
        ,j.征信报告时间
        ,j.征信分
        ,e.pd_nm       AS 我行贷款产品类型
        ,d.ctr_amt       AS 我行贷款合同金额
        ,d.apnt_start_dt AS 我行贷款开始日期
        ,CASE
           WHEN d.end_dt = '18991231' THEN d.apnt_mtu_dt
           ELSE d.end_dt
         END 我行贷款到期日期
        ,CASE WHEN T1.bus_ctr_id IS NOT NULL THEN T1.exe_mon_intr_rat ELSE d.INTR_RAT END   AS 我行贷款利率
        ,h.他行贷款授信机构数
        ,h.他行贷款授信余额
        ,h.他行经营性贷款授信机构数
        ,h.他行经营性贷款授信余额
        ,h.他行经营性贷款最高月利率
        ,h.他行经营性贷款最低月利率
        ,h.他行经营性贷款加权利率
        ,h.他行消费性贷款授信机构数
        ,h.他行消费性贷款授信余额
        ,h.他行房贷金额
        ,h.他行房贷余额
        ,i.他行即将到期经营性贷款借款金额
        ,i.他行即将到期经营性贷款余额
        ,i.他行即将到期经营性贷款到期日期
        ,i.他行即将到期经营性贷款执行利率
        ,h.非银机构贷款授信机构数
        ,h.非银机构贷款授信余额
        ,h.非银机构贷款最高月利率
        ,h.非银机构贷款最低月利率
        ,h.非银机构贷款加权利率
        ,j.最近6个月贷款审核查询记录
        ,j.最近6个月贷款审批查询机构数
        ,j.当前逾期账户数
        ,j.近24个月的最大逾期期数
        ,j.近24个月逾期次数
        ,j.当前未结清逾期余额
FROM    adm_pub.adm_csm_cbas_idv_bas_inf_dd AS a --客户集市-客户基础-对私客户基础信息
INNER JOIN    lab_bigdata_dev.yanhuo_notbank_sample AS a1
ON      a.cst_id = a1.cst_id --取交集部分
LEFT JOIN    adm_pub.adm_csm_cbas_mng_inf_dd AS b --客户管户基础信息
ON      a.cst_id = b.cst_id
AND     b.dt = '20240806'
LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd AS c
ON      b.prm_org_id = c.org_id
AND     c.dt = '20240806'
INNER JOIN    edw.dim_bus_loan_ctr_inf_dd AS d
ON      a.cst_id = d.cst_id
AND     d.dt = '20240718'
AND     d.bus_cd NOT IN ( 'A' , 'B' , 'H' , 'I' , 'O' , 'P' ) --剔除 员工贷款
  AND     ( d.chnl_cd <> 'L08' OR d.pd_cd <> '201050101040335' ) --剔除 小鱼分期
  AND     d.pd_cd <> '201050101040332' --剔除 蚂蚁借呗
  AND     d.pd_cd <> '201050101040319' --剔除百度分期贷
  AND     ( d.pd_cd NOT IN ( '201050102010146' , '201050101040348' )   OR d.frz_sts_cd <> '' ) --剔除未签约的泰e贷 0签收,1正常,2冻结,3到期失效,4终止失效,5补充资料,6待综合岗签收,7待柜面签收,8终止失效,9到期失效
  AND     (    (
					( d.ctr_bal > 0  --余额>0
					  OR ( d.ctr_bal IS NULL AND     nvl(d.crc_ind, '0') = '0' )  --非循环贷 余额为空
					  OR ( ( nvl(d.crc_ind, '0') <> '0'   OR d.pd_cd LIKE '2010503%' ) AND     ( d.ctr_bal = 0  OR d.ctr_bal IS NULL )  AND     d.apnt_mtu_dt >= '20240628' )  --（循环贷 或 随贷通） 且 余额为0 且 未到期
					)
				 AND     nvl(d.frz_sts_cd, ' ') NOT IN ( '3' , '4' )  --3	到期失效  4	终止失效  冻结状态非到期失效，非终止失效

				)
		  OR ( d.ctr_bal > 0 AND     d.pd_cd LIKE '2010503%'  AND     d.apnt_mtu_dt <= '20240628'  AND     d.frz_sts_cd IN ( '3' , '4' ) )  --余额>0  且 随贷通 且到期 且 冻结状态是到期失效、终止失效
		  ) ----未终结、未到期业务
  left join (SELECT bus_ctr_id
                   ,MIN(exe_mon_intr_rat) as exe_mon_intr_rat
               FROM edw.dim_bus_loan_crc_ctr_inf_dd  --循环贷款合同信息
              WHERE DT='20240718'
                AND intr_rat_mth='020'
              GROUP BY bus_ctr_id
            ) T1 ON d.BUSI_CTR_ID=T1.bus_ctr_id AND t1.exe_mon_intr_rat<>0
left join edw.dim_bus_loan_pd_inf_dd e
on TRIM(d.pd_cd)=TRIM(e.pd_cd)
and e.dt = '20240718'

LEFT JOIN    edw.DWD_CODE_LIBRARY_dd AS f
ON      a.idt_cd = f.cd_val
AND     f.dt = '20240718'
AND     f.tbl_nm = 'DWS_CST_BAS_INF_DD'
AND     f.fld_nm = 'IDT_CD'
LEFT JOIN    edw.DWD_CODE_LIBRARY_dd AS g
ON      substr(a.idt_cd, 1, 1) = g.cd_val
AND     g.dt = '20240718'
AND     g.tbl_nm = 'DWS_CST_BAS_INF_DD'
AND     g.fld_nm = 'IDT_CD'
--他行贷款授信机构数	他行贷款授信余额	他行经营性贷款授信机构数	他行经营性贷款授信余额	他行经营性贷款最高月利率	他行经营性贷款最低月利率	他行经营性贷款加权利率	他行消费性贷款授信机构数	他行消费性贷款授信余额
--他行房贷金额	他行房贷余额	他行即将到期经营性贷款借款金额	他行即将到期经营性贷款余额	他行即将到期经营性贷款到期日期	他行即将到期经营性贷款执行利率

LEFT JOIN    (
                 SELECT  cst_id
                         ,count(DISTINCT CASE
                                           WHEN dtrb_org_typ_cd IN ( '商业银行' , '村镇银行' , '住房储蓄银行' , '外资银行' ) THEN dtrb_org
                                         END) AS 他行贷款授信机构数
                         ,sum(CASE
                                WHEN dtrb_org_typ_cd IN ( '商业银行' , '村镇银行' , '住房储蓄银行' , '外资银行' ) THEN ctr_bal
                              END)            AS 他行贷款授信余额
                         ,count(DISTINCT CASE
                                           WHEN pd_cd IN ( '个人经营性贷款' , '经营性农户贷款' ) AND dtrb_org_typ_cd IN ( '商业银行' , '村镇银行' , '住房储蓄银行' , '外资银行' ) THEN dtrb_org
                                         END) AS 他行经营性贷款授信机构数
                         ,sum(CASE
                                WHEN pd_cd IN ( '个人经营性贷款' , '经营性农户贷款' ) AND dtrb_org_typ_cd IN ( '商业银行' , '村镇银行' , '住房储蓄银行' , '外资银行' ) THEN ctr_bal
                              END)            AS 他行经营性贷款授信余额
                         ,max(CASE
                                WHEN pd_cd IN ( '个人经营性贷款' , '经营性农户贷款' ) AND dtrb_org_typ_cd IN ( '商业银行' , '村镇银行' , '住房储蓄银行' , '外资银行' ) THEN intr_rat
                              END)            AS 他行经营性贷款最高月利率
                         ,min(CASE
                                WHEN pd_cd IN ( '个人经营性贷款' , '经营性农户贷款' ) AND dtrb_org_typ_cd IN ( '商业银行' , '村镇银行' , '住房储蓄银行' , '外资银行' ) THEN intr_rat
                              END)            AS 他行经营性贷款最低月利率
                         ,CASE
                            WHEN SUM(CASE
                                       WHEN intr_rat >1 AND pd_cd IN ( '个人经营性贷款' , '经营性农户贷款' ) AND dtrb_org_typ_cd IN ( '商业银行' , '村镇银行' , '住房储蓄银行' , '外资银行' ) THEN ctr_amt
                                       ELSE 0
                                     END) = 0 THEN 0
                            ELSE round(SUM(CASE
                                             WHEN intr_rat >1 AND pd_cd IN ( '个人经营性贷款' , '经营性农户贷款' ) AND dtrb_org_typ_cd IN ( '商业银行' , '村镇银行' , '住房储蓄银行' , '外资银行' ) THEN ctr_amt * intr_rat
                                             ELSE 0
                                           END) / SUM(CASE
                                                        WHEN intr_rat >1 AND pd_cd IN ( '个人经营性贷款' , '经营性农户贷款' ) AND dtrb_org_typ_cd IN ( '商业银行' , '村镇银行' , '住房储蓄银行' , '外资银行' ) THEN ctr_amt
                                                        ELSE 0
                                                      END), 2)
                          END                 AS 他行经营性贷款加权利率
                         ,count(DISTINCT CASE
                                           WHEN pd_cd IN ( '个人汽车消费贷款' , '消费性农户贷款' , '其他个人消费贷款' ) AND dtrb_org_typ_cd IN ( '商业银行' , '村镇银行' , '住房储蓄银行' , '外资银行' ) THEN dtrb_org
                                         END) AS 他行消费性贷款授信机构数
                         ,sum(CASE
                                WHEN pd_cd IN ( '个人汽车消费贷款' , '消费性农户贷款' , '其他个人消费贷款' ) AND dtrb_org_typ_cd IN ( '商业银行' , '村镇银行' , '住房储蓄银行' , '外资银行' ) THEN ctr_bal
                              END)            AS 他行消费性贷款授信余额
                         ,sum(CASE
                                WHEN pd_cd IN ( '个人住房商业贷款' , '个人商用房贷款' , '个人住房公积金贷款' ) AND dtrb_org_typ_cd IN ( '商业银行' , '村镇银行' , '住房储蓄银行' , '外资银行' ) THEN ctr_amt
                              END)            AS 他行房贷金额
                         ,sum(CASE
                                WHEN pd_cd IN ( '个人住房商业贷款' , '个人商用房贷款' , '个人住房公积金贷款' ) AND dtrb_org_typ_cd IN ( '商业银行' , '村镇银行' , '住房储蓄银行' , '外资银行' ) THEN ctr_bal
                              END)            AS 他行房贷余额
                         ,count(DISTINCT CASE
                                           WHEN dtrb_org_typ_cd NOT IN ( '商业银行' , '村镇银行' , '住房储蓄银行' , '外资银行' ) THEN dtrb_org
                                         END) AS 非银机构贷款授信机构数
                         ,sum(CASE
                                WHEN dtrb_org_typ_cd NOT IN ( '商业银行' , '村镇银行' , '住房储蓄银行' , '外资银行' ) THEN ctr_bal
                              END)            AS 非银机构贷款授信余额
                         ,max(CASE
                                WHEN dtrb_org_typ_cd NOT IN ( '商业银行' , '村镇银行' , '住房储蓄银行' , '外资银行' ) THEN intr_rat
                              END)            AS 非银机构贷款最高月利率
                         ,min(CASE
                                WHEN dtrb_org_typ_cd NOT IN ( '商业银行' , '村镇银行' , '住房储蓄银行' , '外资银行' ) THEN intr_rat
                              END)            AS 非银机构贷款最低月利率
                         ,CASE
                            WHEN SUM(CASE
                                       WHEN intr_rat >1 AND dtrb_org_typ_cd NOT IN ( '商业银行' , '村镇银行' , '住房储蓄银行' , '外资银行' ) THEN ctr_amt
                                       ELSE 0
                                     END) = 0 THEN 0
                            ELSE round(SUM(CASE
                                             WHEN intr_rat >1 AND dtrb_org_typ_cd NOT IN ( '商业银行' , '村镇银行' , '住房储蓄银行' , '外资银行' ) THEN ctr_amt * intr_rat
                                             ELSE 0
                                           END) / SUM(CASE
                                                        WHEN intr_rat >1 AND dtrb_org_typ_cd NOT IN ( '商业银行' , '村镇银行' , '住房储蓄银行' , '外资银行' ) THEN ctr_amt
                                                        ELSE 0
                                                      END), 2)
                          END                 AS 非银机构贷款加权利率
                 FROM    lab_bigdata_dev.max_report_0715
                 WHERE   dtrb_org <> '泰隆'
                 AND     cst_id <> ''
                 GROUP BY cst_id
             ) AS h
ON      a.cst_id = h.cst_id
LEFT JOIN    (
                 SELECT  cst_id
                         ,ctr_amt AS 他行即将到期经营性贷款借款金额
                         ,ctr_bal AS 他行即将到期经营性贷款余额
                         ,mtu_dt  AS 他行即将到期经营性贷款到期日期
                         ,intr_rat    AS 他行即将到期经营性贷款执行利率
                 FROM    (
                             SELECT  *
                                     ,ROW_NUMBER() OVER ( PARTITION BY cst_id ORDER BY datediff(to_date(mtu_dt, 'yyyymmdd'), to_date('20240806', 'yyyymmdd'), 'dd') ) AS rn
                             FROM    lab_bigdata_dev.max_report_0715
                             WHERE   dtrb_org <> '泰隆'
                             AND     mtu_dt <> '18991231'
                             AND     mtu_dt <> '99991231'
                             AND     mtu_dt >= '20240806' --日期大于等于今天
                             AND     pd_cd IN ( '个人经营性贷款' , '经营性农户贷款' )
                             AND     dtrb_org_typ_cd IN ( '商业银行' , '村镇银行' , '住房储蓄银行' , '外资银行' )
                         ) AS aa
                 WHERE   aa.rn = '1'
             ) AS i
ON      a.cst_id = i.cst_id
LEFT JOIN    (
                 SELECT  cst_id
                         ,report_dt                                                                                         AS 征信报告时间
                         ,late_hly_loan_count                                                                               AS 最近6个月贷款审核查询记录
                         ,late_hly_loan_org_num                                                                             AS 最近6个月贷款审批查询机构数
                         ,c_od_acct_num                                                                                     AS 当前逾期账户数
                         ,wdi24m                                                                                            AS 近24个月的最大逾期期数
                         ,late_2y_all_od_num                                                                                AS 近24个月逾期次数
                         ,curr_unsett_od_balan                                                                              AS 当前未结清逾期余额
                         ,greatest(idv_crd_sco_val, idv_crd_sco_val2)                                                       AS 征信分 --idv_crd_sco_val个人信用评分分值 idv_crd_sco_val2个人信用评分分值2（老征信评分，仅策略使用）
                         ,ROW_NUMBER() OVER ( PARTITION BY cst_id ORDER BY substr(REPLACE(report_dt, '-', ''), 1, 8) DESC ) AS rk
                 FROM    edw.dws_cst_ccrc_idv_ind_inf_dd
                 WHERE   dt = '20240806'
 --个人征信指标信息表
             ) AS j
ON      a.cst_id = j.cst_id
AND     rk = '1'
WHERE   a.dt = '20240718';


SELECT  count(*),COUNT(DISTINCT 客户号) FROM notbank_result;--63721	47735
--lab_sharedata_dev.DWS_PH_LOAN_RSK_LBL_DD
-- 由申请人根据工作需要发起&ldquo;自建表权限申请&rdquo;流程，明确申请理由、必要性。审批流程：
-- 节点1：直接上级，审核必要性
-- 节点2：数据实验室管理员（李丹），审核自建表是否包含敏感信息等
-- 节点3：自建表创建人，审核自建表是否可开放、是否短期内稳定
-- 节点4：自建表创建人直接上级，审核是否允许开放给其他业务部门人员
-- 节点5：自建表创建人、申请人所在部门负责人
--剔除风险客户

drop table if exists lab_bigdata_dev.notbank_result_del_risk ;
CREATE TABLE lab_bigdata_dev.notbank_result_del_risk AS
SELECT  t.客户号
        ,t.客户名称
        ,t.分行机构编号
        ,t.分行机构名称
        ,t.支行机构编号
        ,t.支行机构名称
        ,t.团队机构编号
        ,t.团队机构名称
        ,t.主管护客户经理工号
        ,t.主管护客户经理姓名
        ,t.行业大类
        ,t.行业细类
        ,substr(t.征信报告时间,1,10) 征信报告时间
        ,t.我行贷款产品类型
        ,t.我行贷款合同金额
        ,t.我行贷款开始日期
        ,t.我行贷款到期日期
        ,t.我行贷款利率
        ,t.他行贷款授信机构数
        ,t.他行贷款授信余额 他行贷款贷款余额
        ,t.他行经营性贷款授信机构数
        ,t.他行经营性贷款授信余额 他行经营性贷款贷款余额
        ,t.他行经营性贷款最高月利率
        ,t.他行经营性贷款最低月利率
        ,t.他行经营性贷款加权利率
        ,t.他行消费性贷款授信机构数
        ,t.他行消费性贷款授信余额 他行消费性贷款贷款余额
        ,t.他行房贷金额
        ,t.他行房贷余额
        ,t.他行即将到期经营性贷款借款金额
        ,t.他行即将到期经营性贷款余额
        ,t.他行即将到期经营性贷款到期日期
        ,t.他行即将到期经营性贷款执行利率
        ,t.非银机构贷款授信机构数
        ,t.非银机构贷款授信余额 非银机构贷款贷款余额
        ,t.非银机构贷款最高月利率
        ,t.非银机构贷款最低月利率
        ,t.非银机构贷款加权利率
        ,t.最近6个月贷款审核查询记录
        ,t.最近6个月贷款审批查询机构数
        ,t.当前逾期账户数
        ,t.近24个月的最大逾期期数
        ,t.近24个月逾期次数
        ,t.当前未结清逾期余额
from (
		select t.*
			-- ,t2.is_yh 是否隐患业务
			-- ,t2.is_risk 是否风险贷款
			-- ,t2.rule_6  征信分较低
		-- ,t2.high_rsk_lbl 高风险客户标签
		-- ,t2.rule_19 当前逾期
		-- ,t2.rule_20 有还款责任的业务近期新增逾期
		-- ,t2.rule_22 同一风险控制号当前逾期
		-- ,t2.rule_24 征信分下降过快
		-- ,t2.rule_25 本人历史多次逾期
		-- ,t2.rule_26 同一风险控制号历史多次逾期
		-- ,t2.rule_27 禁止续贷
		-- ,t2.rule_28 人工反馈有风险
		-- ,t2.rule_29 近1年精准贷后结果曾为处置类
		-- ,t2.rule_32 本人近3年在我行有重组业务
		-- ,t2.rule_33 本人近3年在我行有预保预报业务
		-- ,t2.rule_35 近3年同一风险控制号在我行有过预保预报业务
		-- ,t2.rule_34 同一风险控制号近3年在我行有重组业务
		-- ,t2.rule_36 本人近1年触发过黑名单
		-- ,t2.rule_38 同一风险控制号近1年触发过黑名单
		-- ,t2.rule_37 本人近1年触发过灰名单
		-- ,t2.rule_39 同一风险控制号近1年触发过灰名单

		-- 过去两年内逾期三期以上（包含三期）信用卡张数&ge;2
		-- 信用卡近2年逾期次数&ge;10
		-- 贷款近2年逾期期数&ge;2
		-- 贷款近24个月的最长逾期月数&ge;3
		-- 贷款五级分类为非正常的笔数＞0
		-- ,t3.l_2_y_od_2_time_cred_num 过去两年内逾期三期以上信用卡张数
		-- ,t3.late_2y_card_od_num 近2年信用卡逾期次数
		-- ,t3.late_2_y_od_mon 近2年信贷逾期月份数
		-- ,t3.late_2y_loan_max_od_num 最近24个月贷款最长逾期月数
		--,t3.un_normal_loan_num 贷款五级分类为非正常的笔数
		,row_number() over(partition by 客户号 order by 我行贷款到期日期 asc,我行贷款利率 desc) rn2
		from lab_bigdata_dev.notbank_result t
		left join lab_sharedata_dev.DWS_PH_LOAN_RSK_LBL_DD t2 --聂佩的表
		on t.客户号=t2.cst_id
		and t2.dt='20240630'
		left join (select *
					,row_number() over(partition by cst_id order by report_no desc) rn
					from edw.dws_cst_ccrc_idv_ind_inf_di
					where dt <='20240804') t3
		on t.客户号=t3.cst_id
		and t3.rn=1
		where coalesce(t2.is_yh,'')<>'1'  --是否隐患业务
		and coalesce(t2.is_risk,'')<>'1'  --是否风险贷款
		and coalesce(t2.rule_6,'')<>'征信分较低' -- 征信分较低
		and coalesce(t2.high_rsk_lbl,'')<>'c.<=750'   --高风险客户标签a.无模型分 c.<=750 d.>750 z.other
		and coalesce(t2.rule_19,'')<>'当前逾期'   --当前逾期
		and coalesce(t2.rule_20,'')<>'有还款责任的业务近期新增逾期'   --有还款责任的业务近期新增逾期
		and coalesce(t2.rule_22,'')<>'同一风险控制号当前逾期'   --同一风险控制号当前逾期
		and coalesce(t2.rule_24,'')<>'征信分下降过快'   --征信分下降过快
		and coalesce(t2.rule_25,'')<>'本人历史多次逾期'   --本人历史多次逾期
		and coalesce(t2.rule_26,'')<>'同一风险控制号历史多次逾期'   --同一风险控制号历史多次逾期
		and coalesce(t2.rule_27,'')<>'禁止续贷客户'   --禁止续贷
		and coalesce(t2.rule_28,'')<>'人工反馈有风险'   --人工反馈有风险
		and coalesce(t2.rule_29,'')<>'近1年精准贷后结果曾为处置类'   --近1年精准贷后结果曾为处置类
		and coalesce(t2.rule_32,'')<>'本人近3年在我行有重组业务'   --本人近3年在我行有重组业务
		and coalesce(t2.rule_33,'')<>'本人近3年在我行有预保预报业务'   --本人近3年在我行有预保预报业务
		and coalesce(t2.rule_35,'')<>'同一风险控制号近3年在我行有预保预报业务'   --近3年同一风险控制号在我行有过预保预报业务
		and coalesce(t2.rule_34,'')<>'同一风险控制号近3年在我行有重组业务'   --同一风险控制号近3年在我行有重组业务
		and coalesce(t2.rule_36,'')<>'本人近1年触发过黑名单'   --本人近1年触发过黑名单
		and coalesce(t2.rule_38,'')<>'同一风险控制号近1年触发过黑名单'   --同一风险控制号近1年触发过黑名单
		and coalesce(t2.rule_37,'')<>'本人近1年触发过灰名单'   --本人近1年触发过灰名单
		and coalesce(t2.rule_39,'')<>'同一风险控制号近1年触发过灰名单'   --同一风险控制号近1年触发过灰名单

-- 贷款近24个月的最长逾期月数&ge;3
-- 过去两年内逾期三期以上（包含三期）信用卡张数&ge;2
-- 信用卡近2年逾期次数&ge;10

		and coalesce(t3.l_2_y_od_2_time_cred_num,0)<2   --过去两年内逾期三期以上（包括三期）信用卡张数
		and coalesce(t3.late_2y_card_od_num,0)<10   --近2年信用卡逾期次数
		and coalesce(t3.late_2_y_od_mon,0)<2   --近2年信贷逾期月份数
		and coalesce(t3.late_2y_loan_max_od_num,0)<3   --最近24个月贷款最长逾期月数
		and coalesce(t3.un_normal_loan_num,0)=0   --贷款五级分类为非正常的笔数

)t
where t.rn2=1
order by 征信分 desc
;



SELECT  count(*),COUNT(DISTINCT 客户号) FROM notbank_result_del_risk;--63721	47735
--lab_sharedata_dev.DWS_PH_LOAN_RSK_LBL_DD
-- 由申请人根据工作需要发起&ldquo;自建表权限申请&rdquo;流程，明确申请理由、必要性。审批流程：
-- 节点1：直接上级，审核必要性
-- 节点2：数据实验室管理员（李丹），审核自建表是否包含敏感信息等
-- 节点3：自建表创建人，审核自建表是否可开放、是否短期内稳定
-- 节点4：自建表创建人直接上级，审核是否允许开放给其他业务部门人员
-- 节点5：自建表创建人、申请人所在部门负责人
--剔除风险客户
**取数需求_利率回溯对公.sql
-- ODPS SQL
-- **********************************************************************
-- 功能描述:
-- **
-- 创建者: 龙彬彬
-- 创建日期: 2024-11-06 14:10:10
-- **
-- 修改日志:
-- 修改日期          修改人          修改内容
-- **
-- **********************************************************************

-- SELECT * FROM
-- zx_rate_result_ent_di where dt>='20240105' limit 100；


-- SELECT * FROM zx_rate_result_ent_di where dt ='20220516' and report_no ='2022051615324538462924';

-- select * from edw.NCIP_ED01A_ESAL_ACC_INF where dt ='20220516' and id ='41610d63b09a4ba18f73b5a72d2df17d';

-- SELECT * FROM edw.NCIP_ED01B_ACC_PAY_INF  where dt ='20220516' and union_id ='41610d63b09a4ba18f73b5a72d2df17d';

-- SELECT * FROM  edw.NCIP_ED01B_AC_PAY_INF_SUB  where dt ='20220516' and union_id ='53104bfda1f64b51a1a69ebea8d5f9b1';

-- SELECT * FROM lab_shd.ENT_ZX_LOAN_GUAR_CRED_INFO where dt ='20241105';

--历史回溯脚本
drop table if exists ncip_ceq_account_calculate_20200314_to_20240227;



CREATE TABLE ncip_ceq_account_calculate_20200314_to_20240227 (
	id STRING COMMENT 'id无实际意义',
	report_id STRING COMMENT '报告编号',
	le_acc_number STRING COMMENT '账户编号',
	le_account_type STRING COMMENT '账户类型',
	bm_org_number STRING COMMENT '机构代码',
	category_max STRING COMMENT '借贷业务种类大类',
	bus_category_min STRING COMMENT '借贷业务种类细分',
	loan_amount DECIMAL COMMENT '借款金额/授信金额',
	open_date STRING COMMENT '开户日期',
	due_date STRING COMMENT '到期日期',
	irr STRING COMMENT '月利率（单位：&permil;,计算得到，因部分借据应还款额为空/其他原因，导致月利率无法计算,-9999为空）',
	repay_type STRING COMMENT '还款方式（计算得到）',
	input_date STRING COMMENT '录入日期',
	gua_mode STRING COMMENT '担保方式',
	account_status STRING COMMENT '账户状态',
	over_total DECIMAL COMMENT '逾期金额',
	file_class STRING COMMENT '五级分类',
	last_apprepay_total DECIMAL COMMENT '本月应还款',
	balance DECIMAL COMMENT '贷款余额'
)
COMMENT '征信企业借贷账户利率计算回溯-临时'
PARTITIONED BY (
	dt STRING
)
LIFECYCLE 360;

INSERT OVERWRITE TABLE lab_bigdata_dev.ncip_ceq_account_calculate_20200314_to_20240227 PARTITION (dt)
select
	'' as id
    ,t.report_no as  report_id
	,t.le_acc_number as  le_acc_number
	,t.le_account_type as  le_account_type
	,t.dtrb_org as  bm_org_number
	,t.pd_cd as  category_max
	,t.bus_category_min as  bus_category_min
	,t.ctr_amt as  loan_amount
	,t.start_dt as  open_date
	,t.mtu_dt as  due_date
	,t.irr as  irr
	,t.repay_type as  repay_type
	,t.substr(report_no,1,8) as  input_date
	,t.grnt_mth_cd as  gua_mode
	,a.account_state  as  account_status --账户活动状态
	,d.over_total as  over_total --逾期总额
	,d.file_class as  file_class --五级分类
	,t.cur_mon_shd_rpay as  last_apprepay_total
	,t.ctr_bal as  balance
	,t.substr(report_no,1,8) as  dt
from zx_rate_result_ent_di t

left join edw.NCIP_ED01A_ESAL_ACC_INF A --借贷账户基本信息
on t.id=A.ID
AND T.REPORT_NO=a.report_id
and A.account_state <> '2' --账户活动状态1未结清 2结清
and a.dt>='20200314'
and a.dt=t.dt

LEFT JOIN    edw.NCIP_ED01B_ACC_PAY_INF C --还款表现
ON      A.ID = C.UNION_ID
AND c.REPORT_id=a.report_id
AND     C.DT >= '20200314'
and a.dt=c.dt

LEFT JOIN    (
                 SELECT  *
                         ,ROW_NUMBER() OVER ( PARTITION BY REPORT_ID , UNION_ID ORDER BY REPORT_INFORM_DATE DESC ) REPAY_RN
                 FROM    EDW.NCIP_ED01B_AC_PAY_INF_SUB
                 WHERE   DT <= '@@{yyyyMMdd}'
             ) d
ON      C.ID = D.UNION_ID
AND c.REPORT_id=d.report_id
AND     d.REPAY_RN = 1 -- 借贷账户还款表现明细
AND     d.DT >= '20200314'
and d.dt=c.dt
where t.dt <='20240227' and t.dt>='20200314'
;

-- SELECT * FROM ncip_ceq_account_calculate_20200314_to_20240227 where dt='20240227' and report_id in ('2024022722592762182480');

-- SELECT * FROM edw.ncip_ceq_account_calculate where dt='20240227' and report_id in ('2024022722592762182480');
-- 94835e968deac89d018deb13eda46736

-- 94835e 968dea c89d01 8deb13 eda467 36

-- SELECT id FROM edw.ncip_ceq_account_calculate where dt='20240227';

-- SELECT dt,count(*) FROM zx_rate_result_ent_di where dt>='20230620' GROUP BY  dt order by dt ;

-- SELECT DISTINCT dt FROM edw.dim_bus_com_date_st where dt>'20240130' order by dt
SELECT * FROM lab_bigdata_dev.ncip_ceq_account_calculate_20200314_to_20240227 t where t.dt ='20240227';
**取数需求_利率新旧对比_以永杰为基础.sql
--以永杰为基础
SELECT  t . *
       ,t2.irr 立英利率
        ,CASE
           WHEN t1.rpay_mth_cd = '11'                             THEN '分期等额本息'
           WHEN t1.rpay_mth_cd = '12'                             THEN '分期等额本金' --20220729更新增加 rpay_mth_cd
           WHEN t1.rpay_mth_cd = '13'                             THEN '到期还本分期结息'
           WHEN t1.rpay_mth_cd = '21'                             THEN '到期一次还本付息'
           WHEN t1.rpay_mth_cd = '31'                             THEN '按期结息，到期还本'
           WHEN t1.rpay_mth_cd = '90'                             THEN '不区分还款方式'
           WHEN ( t1.rpay_mth_cd = '' OR t1.rpay_mth_cd IS NULL ) THEN ''
         END AS 人行还款方式
        ,round(coalesce(t.RATE, 0), 2) - round(coalesce(t2.irr, 0), 2) 差距
        ,t1.five_ctg_cd 五级分类
        ,t1.cst_id
		,t2.*
    ,t1.cst_id 匹配cst
        ,t1.id 匹配id
FROM    irr_check t
LEFT JOIN    edw.dim_cst_ccrc_idv_loan_inf_dd t1
ON      t.report_id = t1.report_id
AND     t.ACCOUNT_NUM = t1.act_id --账户编号
AND     t1.dt = '20241025'
LEFT JOIN    zx_rate_result_all_di_small_12_0731 t2
ON       t1.id = t2.id

-- LEFT JOIN    zx_rate_result_all_di t2
-- ON      t1.report_id = t2.report_no
-- AND     t1.id = t2.id
-- and t2.dt='20240731'
WHERE   t.RATE > 1
AND     coalesce(t1.cst_id, '') <> ''
and    abs(round(coalesce(t.RATE, 0), 2) - round(coalesce(t2.irr, 0), 2)) > 0.02
ORDER BY t1.cst_id;
**取数需求_征信报告找身份证.sql
-- ODPS SQL
-- **********************************************************************
-- 功能描述:
-- **
-- 创建者: 龙彬彬
-- 创建日期: 2024-11-06 14:41:25
-- **
-- 修改日志:
-- 修改日期          修改人          修改内容
-- **
-- **********************************************************************
select report_id, concat(cert_no,'%')
from edw.ncip_cpq_resultinfo
where dt>='20200314'
and report_id in (
    '2023112100070382085069','2023112100030383085337','2023112100060359285273','2023112100060367485726','2023112100050349685120','2023112100050399685616','2023112100040426985472','2023112100050383385761'
,'2023112100040454585173','2023111509440772585868','2023042512220407086349','2023042512210398985320','2023042512230356285481','2024031922221616485772','2024031922231533386945','2024031922221586886814'
,'2024031922231526487198','2024031922211551486474','2024031922221607586784','2024031922201549587163','2024031922211519886819','2024031922241538486145'
)
**取数需求_征信查询原因.sql
select query_reason,count(*) as 查询数
	from edw.NCIP_PH01_RECORD
    where dt>=substr(replace(DATEADD(TO_DATE('@@{yyyyMMdd}','yyyyMMdd'),-360,'dd'),'-',''),1,8)
    group by query_reason
 order by count(*) desc
 ;
**取数需求_征信测试例子.sql
-- ODPS SQL 临时查询
-- **********************************************************************
-- 功能描述:
-- **
-- 创建者: 龙彬彬
-- 创建日期: 2024-10-22 18:17:18
-- **
-- 修改日志:
-- 修改日期          修改人          修改内容
-- **
-- **********************************************************************

SELECT * FROM edw.ncip_pe01a_afterpayinf where dt>='20240731';

SELECT * FROM  edw.ncip_PF01A_TAXUNPAID where dt>='20240731';

SELECT * FROM  edw.ncip_PF02A_JUDEMENT where dt>='20240731'; --民事判决
2024073100445297484815
2024073100515548985338
2024073122543999084860
SELECT * FROM  edw.ncip_EF03_EERU_UNIT where dt>='20240731'; --强制执行
2024073110232695981255
2024073110232695981255
2024080212503296784315
2024080212503296784315
SELECT * FROM  edw.ncip_PF04A_PUNISH where dt>='20240731'; --行政处罚
SELECT * FROM  edw.ncip_PF05A_FUND where dt>='20240731'; --公积金
2024073118243875184646
2024073123444607284984
2024073100135005085216
2024073100323464384625
2024073100324475685553

SELECT * FROM  edw.ncip_PF06A_RESCUE where dt>='20240731'; --低保
SELECT * FROM  edw.ncip_PF07A_PRACTICE where dt>='20240731'; --执业资格
2024081121583759486824	保险代理从业人员
2024082023492136986418	西式面点师三级（高级工）
2024082321574973085882	机修钳工二级（技师）
2024090216321858887351	维修电工二级（技师）

SELECT * FROM  edw.ncip_PF08A_REWARD where dt>='20240731'; --行政奖励

SELECT * FROM  edw.ncip_PF07A_PRACTICE where dt>='20240731'; --执业资格
SELECT  DISTINCT cst_id
                 ,report_no
FROM    edw.DWD_CST_CCRC_RPT_HIS_DD
WHERE   dt = '20240731'
AND     report_no IN (
   '2024081121583759486824'
,'2024082023492136986418'
,'2024082321574973085882'
,'2024090216321858887351'
,'2024100400473002487940'
,'2024100523511345787220'
,'2024100921452214486432'
,'2024101122000025085975'
,'2024101210194443586017'
,'2024101423380537885937'
,'2024101821302450286274'
,'2024101811524207986390'
,'2024101814204212685912'
,'2024102023414332685986'
,'2024081318323359583314'
,'2024081318524049582745'
,'2024081318591536583122'
,'2024081319021559482890'
,'2024081412234401982753'
,'2024081416182371182859'
,'2024081500044659582581'
,'2024081615320333382834'
,'2024081621593212382310'
,'2024081622012442682741'
,'2024081821512372682552'
,'2024082009091779682479'
,'2024082014502191581981'
,'2024082016185539182330'
,'2024082020053463581955'
,'2024082108522858782487'
,'2024082111182303982412'
,'2024082117151536082530'
,'2024082118053566282070'
,'2024082208420776481851'
,'2024082211383811981767'
,'2024082211432421582258'
,'2024082323380449082163'
,'2024082423053838581716'
,'2024082523593164981460'
,'2024082622282279781415'
,'2024082610490662581883'
,'2024082616235525881883'
,'2024082600001392081485'
,'2024082723340757281789'
,'2024082715595458881816'
,'2024083022063668581686'
,'2024083123055242581521'
,'2024090222453074884142'
,'2024090214254818484299'
,'2024090210020473383831'
,'2024090200010061083669'
,'2024090216215682983939'
,'2024090318260722783837'
,'2024090420083230784059'
,'2024090402115619883790'
,'2024090420344770483659'
,'2024090400505429183519'
,'2024090418301242783635'
,'2024090420052488083551'
,'2024090510240127084037'
,'2024090517281431083950'
,'2024090511104116683881'
,'2024090508590768783716'
,'2024090522024843583891'
,'2024090609095150483257'
,'2024090723353163983373'
,'2024090723501770283329'
,'2024090908595535083536'
,'2024090919172366683164'
,'2024090913030802183571'
,'2024090916040196583552'
,'2024091114005010583078'
,'2024091214410375083023'
,'2024091215534533183017'
,'2024091210282826982788'

 )


 select * from edw.dws_cst_ccrc_idv_ind_inf_di where dt='20240731' and c_od_amt=0
 and coalesce(late_5y_jyx_loan_od_num,0)=0
 and coalesce( late_5y_djk_max_od_num,0)>0
  and coalesce(late_5y_zdjk_max_od_num,0)=0
 limit 1000
 ;

 select * from max_report_zhengxin_geren where report_dt='20240731' and pd_cd_nm='大额专项分期卡';


 select * from max_report_zhengxin_geren where report_dt='20240731'
and         cur_mon_shd_rpay<=1.4*cur_mon_actl_rpay --本月应还款金额 cur_mon_actl_rpay --本月实还款
and         cur_mon_shd_rpay>1.1*cur_mon_actl_rpay
and pd_cd_nm='贷记卡'
**取数需求_征信非实时指.sql
--个人征信基础贷款信息
DROP TABLE IF EXISTS lab_bigdata_dev.max_report_zhengxin_geren;
CREATE TABLE IF NOT EXISTS lab_bigdata_dev.max_report_zhengxin_geren AS
SELECT  t2.cst_id
        ,t2.report_id
        ,substr(t2.report_id, 1, 8) report_dt
        ,t2.id
        ,CASE
           WHEN t2.dtrb_org LIKE 'ZJTLCB%' THEN '泰隆'
           ELSE t2.dtrb_org
         END AS dtrb_org --金融机构名称
        ,CASE
           WHEN t2.pd_cd = '11' THEN '个人住房商业贷款'
           WHEN t2.pd_cd = '12' THEN '个人商用房贷款'
           WHEN t2.pd_cd = '13' THEN '个人住房公积金贷款'
           WHEN t2.pd_cd = '21' THEN '个人汽车消费贷款'
           WHEN t2.pd_cd = '31' THEN '个人助学贷款'
           WHEN t2.pd_cd = '32' THEN '国家助学贷款'
           WHEN t2.pd_cd = '33' THEN '商业助学贷款'
           WHEN t2.pd_cd = '41' THEN '个人经营性贷款'
           WHEN t2.pd_cd = '42' THEN '个人创业担保贷款'
           WHEN t2.pd_cd = '51' THEN '农户贷款'
           WHEN t2.pd_cd = '52' THEN '经营性农户贷款'
           WHEN t2.pd_cd = '53' THEN '消费性农户贷款'
           WHEN t2.pd_cd = '91' THEN '其他个人消费贷款'
           WHEN t2.pd_cd = '99' THEN '其他贷款'
           WHEN t2.pd_cd = '71' THEN '准贷记卡'
           WHEN t2.pd_cd = '81' THEN '贷记卡'
           WHEN t2.pd_cd = '82' THEN '大额专项分期卡'
           WHEN t2.pd_cd = '61' THEN '约定购回式证券交易'
           WHEN t2.pd_cd = '62' THEN '股票质押式回购交易'
           WHEN t2.pd_cd = '63' THEN '融资融券业务'
           WHEN t2.pd_cd = '64' THEN '其他证券类融资'
           WHEN t2.pd_cd = '92' THEN '融资租赁业务'
           WHEN t2.pd_cd = 'A1' THEN '资产处置'
           WHEN t2.pd_cd = 'B1' THEN '代偿债务'
         END AS pd_cd_nm --贷款类型
         ,t2.pd_cd
        -- ,coalesce(t2.ctr_amt, 0) + coalesce(t2.act_crd_lmt, 0) ctr_amt --贷款合同金额
        ,CASE
            WHEN T2.act_typ_cd IN ( 'D1' , 'R4' ) THEN ( T2.CTR_AMT * T5.AVG_PRC / T5.QUO_UNT )
            WHEN T2.act_typ_cd = 'R1'             THEN ( T2.act_crd_lmt * T5.AVG_PRC / T5.QUO_UNT )
            ELSE coalesce(t2.ctr_amt, 0) + coalesce(t2.act_crd_lmt, 0)
          END                                  AS CTR_AMT
        ,t2.start_dt --贷款发放日期
        ,t2.mtu_dt --贷款到期日期
        ,t2.rpay_trm --还款期数
        ,t2.ccy_cd
        ,CASE
           WHEN t2.grnt_mth_cd = '1'            THEN '质押'
           WHEN t2.grnt_mth_cd = '2'            THEN '抵押'
           WHEN t2.grnt_mth_cd = '3'            THEN '保证'
           WHEN t2.grnt_mth_cd = '4'            THEN '信用'
           WHEN t2.grnt_mth_cd IN ( '5' , '6' ) THEN '组合'
           WHEN t2.grnt_mth_cd = '7'            THEN '农户联保'
           WHEN t2.grnt_mth_cd = '9'            THEN '其它'
         END AS grnt_mth_cd --担保方式
        ,t2.ctr_bal * T5.AVG_PRC / T5.QUO_UNT  ctr_bal --贷款余额
        ,t2.rmn_rpay_trm --剩余还款期数
        ,t2.shd_pay_day --应还款日期
        ,t2.late_one_tm_rpay_dt --最近一次实际还款日期
        ,t2.cur_mon_shd_rpay --本月应还款金额
        ,t2.cur_mon_actl_rpay --本月实还款
        ,t2.act_sts_cd --账户状态
        ,t2.dtrb_org_typ_cd
        ,CASE t2.dtrb_org_typ_cd
           WHEN '11' THEN '商业银行'
           WHEN '12' THEN '村镇银行'
           WHEN '14' THEN '住房储蓄银行'
           WHEN '15' THEN '外资银行'
           WHEN '16' THEN '财务公司'
           WHEN '21' THEN '信托公司'
           WHEN '22' THEN '融资租赁公司'
           WHEN '23' THEN '汽车金融公司'
           WHEN '24' THEN '消费金融公司'
           WHEN '25' THEN '贷款公司'
           WHEN '26' THEN '金融资产管理公司'
           WHEN '31' THEN '证券公司'
           WHEN '41' THEN '保险公司'
           WHEN '51' THEN '小额贷款公司'
           WHEN '52' THEN '公积金管理中心'
           WHEN '53' THEN '融资性担保公司'
           WHEN '54' THEN '保理公司'
           WHEN '99' THEN '其他机构'
         END AS dtrb_org_typ_nm --放款机构类型
        ,t2.act_typ_cd --账户类型代码
        ,t2.five_ctg_cd
        ,b.intr_rat
        ,t2.act_id
        ,t6.agreement_no --授信协议编号
        ,t6.credit_limit --授信额度
FROM   edw.dim_cst_ccrc_idv_loan_inf_dd t2
LEFT JOIN     edw.dim_cst_ccrc_idv_dbt_act_rat_dd b --利率
  ON      t2.report_id = b.CRD_RPT_ID
  and     t2.id=b.prm_id
  AND     t2.act_id = b.ACT_ID
  AND     b.dt = '@@{yyyyMMdd}'
LEFT JOIN     edw.dim_bus_com_exr_inf_dd t5 --汇率信息表
    ON      T2.ccy_cd =t5.iso_ccy_cd
    AND     t5.dt = '20240731'
left join edw.ncip_pd02a_creditbasicmessage as t6 --授信协议信息基本信息
  on t2.report_id=t6.report_id
  and t2.crd_agr_id=t6.agreement_no
  and t6.dt<='@@{yyyyMMdd}'
  and t6.agreement_stats='1' --有效
WHERE substr(t2.report_id,1,8)='20240731'
and t2.dt='@@{yyyyMMdd}'
-- and     t2.act_typ_cd IN ( 'R1' , 'R4' , 'D1' )
 AND     t2.act_sts_cd <> '3'  --3:结清的贷款
 and t2.pd_cd IN ( '11' , '12' , '13' , '21' , '31' , '32' , '33' , '41' , '42' , '51' , '52' , '53' , '91' , '99' ,'82','71' , '81')
  -- WHEN T1.ACT_PD_CD IN ( '11' , '12' , '13' , '21' , '31' , '32' , '33' , '41' , '42' , '51' , '52' , '53' , '91' , '99' ) THEN '1'
           -- WHEN T1.ACT_PD_CD IN ( '82' )                                                                                            THEN '1' ----大额专项分期卡 算入贷款
           -- WHEN T1.ACT_PD_CD IN ( '61' , '62' , '63' , '64' )                                                                       THEN '3'  --61	约定购回式证券交易 62	股票质押式回购交易63	融资融券业务64	其他证券类融资
           -- WHEN T1.ACT_PD_CD IN ( '71' , '81' ) OR T1.ACT_TYP_CD IN ( 'R2' , 'R3' )                                                 THEN '2' --71	准贷记卡81	贷记卡
;
--个人授信类指标 贷款账户 合并 去重
DROP TABLE IF EXISTS lab_bigdata_dev.max_report_zhengxin_geren_ctr_amt;
CREATE TABLE IF NOT EXISTS lab_bigdata_dev.max_report_zhengxin_geren_ctr_amt AS
select distinct cst_id --注意：必须有distinct ，循环类支用要去重
        ,report_id
		,act_typ_cd
		,pd_cd
		,grnt_mth_cd
		,agreement_no --授信协议编号
        ,credit_limit --授信额度
		,CTR_AMT
		 ,dtrb_org_typ_cd
		  ,dtrb_org
from lab_bigdata_dev.max_report_zhengxin_geren
where agreement_no is not null --有授信协议
union
select cst_id --注意：无distinct ，不能去重
        ,report_id
		,act_typ_cd
		,pd_cd
		,grnt_mth_cd
		,agreement_no --授信协议编号
        ,credit_limit --授信额度
		,CTR_AMT
		 ,dtrb_org_typ_cd
		  ,dtrb_org
from lab_bigdata_dev.max_report_zhengxin_geren
where agreement_no is      null;

--个人授信类指标
DROP TABLE IF EXISTS lab_bigdata_dev.max_report_zhengxin_geren_01_02; --个人授信类指标  bal有误
CREATE TABLE IF NOT EXISTS lab_bigdata_dev.max_report_zhengxin_geren_01_02 AS
select cst_id
        ,report_id

		,coalesce(sum(case when (act_typ_cd IN ( 'R1' , 'R4' , 'D1' ) or pd_cd  IN ('82') ) and agreement_no is not null
		then credit_limit when (act_typ_cd IN ( 'R1' , 'R4' , 'D1' ) or pd_cd  IN ('82') ) and agreement_no is null then CTR_AMT end),0) as 客户当日贷款及大额专项分期卡授信金额求和_个人征信
        ,COALESCE(max(case when grnt_mth_cd='信用' and dtrb_org_typ_cd in ('11','12','14','15','52') and agreement_no is not null
		then credit_limit when grnt_mth_cd='信用' and dtrb_org_typ_cd in ('11','12','14','15','52') and agreement_no is  null then  CTR_AMT end),0) as 客户当日信用类贷款单家银行授信金额最大值_个人征信
        ,COALESCE(max(case when grnt_mth_cd='保证' and dtrb_org_typ_cd in ('11','12','14','15','52') and agreement_no is not null
		then credit_limit when grnt_mth_cd='保证' and dtrb_org_typ_cd in ('11','12','14','15','52') and agreement_no is  null then CTR_AMT end),0) as 客户当日保证类贷款单家银行授信金额最大值_个人征信
        ,COALESCE(max(case when grnt_mth_cd='抵押' and pd_cd not in ('11','12','13')  and dtrb_org_typ_cd in ('11','12','14','15','52') and agreement_no is not null
		then credit_limit when grnt_mth_cd='抵押' and pd_cd not in ('11','12','13')  and dtrb_org_typ_cd in ('11','12','14','15','52') and agreement_no is null then CTR_AMT  end),0) as 客户当日抵押类贷款_不含房贷_单家银行授信金额最大值_个人征信

        ,case when COALESCE(count(distinct case when grnt_mth_cd='信用' and dtrb_org_typ_cd in ('11','12','14','15','52') then dtrb_org end),0)=0 then 0
        else COALESCE(sum(case when grnt_mth_cd='信用' and dtrb_org_typ_cd in ('11','12','14','15','52') and agreement_no is not null then credit_limit
								when grnt_mth_cd='信用' and dtrb_org_typ_cd in ('11','12','14','15','52') and agreement_no is null then CTR_AMT end),0)
                /COALESCE(count(distinct case when grnt_mth_cd='信用' and dtrb_org_typ_cd in ('11','12','14','15','52') then dtrb_org end),0) end 客户当日信用类贷款单家银行授信金额平均值_个人征信

        ,case when COALESCE(count(distinct case when grnt_mth_cd='保证' and dtrb_org_typ_cd in ('11','12','14','15','52') then dtrb_org end),0)=0 then 0
        else COALESCE(sum(case when grnt_mth_cd='保证' and dtrb_org_typ_cd in ('11','12','14','15','52') and agreement_no is not null then credit_limit
							   when grnt_mth_cd='保证' and dtrb_org_typ_cd in ('11','12','14','15','52') and agreement_no is null then CTR_AMT end),0)
               /COALESCE(count(distinct case when grnt_mth_cd='保证' and dtrb_org_typ_cd in ('11','12','14','15','52') then dtrb_org end),0) end 客户当日保证类贷款单家银行授信金额平均值_个人征信

        ,case when COALESCE(count(distinct case when grnt_mth_cd='抵押' and pd_cd not in ('11','12','13') and dtrb_org_typ_cd in ('11','12','14','15','52') then dtrb_org end),0)=0 then 0
        else COALESCE(sum(case when grnt_mth_cd='抵押' and pd_cd not in ('11','12','13')  and dtrb_org_typ_cd in ('11','12','14','15','52') and agreement_no is not null then credit_limit
							   when grnt_mth_cd='抵押' and pd_cd not in ('11','12','13')  and dtrb_org_typ_cd in ('11','12','14','15','52') and agreement_no is null then CTR_AMT end),0)
               /COALESCE(count(distinct case when grnt_mth_cd='抵押' and pd_cd not in ('11','12','13') and dtrb_org_typ_cd in ('11','12','14','15','52') then dtrb_org end),0) end 客户当日抵押类贷款_不含房贷_单家银行授信金额平均值_个人征信

from lab_bigdata_dev.max_report_zhengxin_geren_ctr_amt
group by cst_id
        ,report_id
;

-- adm_pub.adm_csm_cbus_out_crd_idv_cad_org_info_di 、edw.ncip_zx_p_zb_info 个人征信指标信息表、edw.dws_cst_ccrc_idv_ind_inf_di
-- 增加 借贷账户_贷款账户_未关闭银行机构-非我行_机构数      ZXACT_LOANACT_UNCL_OTHBANK_ORG_CNT
-- 口径为个人征信_1_非结清 _2_非泰隆 _3_账户：非贷记卡账户_R2_准贷记卡账户_R3_ C1催收 _4_银行_其他金融机构要剔除_ 的贷款银行数
-- 2.adm_csm_cbus_out_crd_idv_cad_act_info_di、edw.ncip_zx_p_zb_info 个人征信指标信息表、edw.dws_cst_ccrc_idv_ind_inf_di
-- 增加 借贷账户_贷款账户_未关闭小贷消金_账户数 ZXACT_LOANACT_UNCL_MICFIN_ACT_CNT
-- 口径为个人征信_1_非结清 _2_非泰隆 _3_账户：非贷记卡账户_R2_准贷记卡账户_R3_ C1催收 _4_放款机构类型24:消费金融公司 51:小额贷款公司 的贷款笔数
-- 3.adm_pub.adm_csm_cbus_out_crd_idv_cad_amt_di、edw.ncip_zx_p_zb_info 个人征信指标信息表、edw.dws_cst_ccrc_idv_ind_inf_di
-- 增加 贷账户_贷款账户_未关闭小贷消金_总余额 ZXACT_LOANACT_UNCL_MICFIN_BAL_SUM
-- 口径为个人征信_1_非结清 _2_非泰隆 _3_账户：非贷记卡账户_R2_准贷记卡账户_R3_ C1催收 _4_放款机构类型24:消费金融公司 51:小额贷款公司 的贷款余额


-- 个人贷款类指标
DROP TABLE IF EXISTS lab_bigdata_dev.max_report_zhengxin_geren_01;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.max_report_zhengxin_geren_01 AS
select t.*
		--,t.客户当日贷款未结清不含泰隆银行数计数_个人征信
		--,t.客户当日贷款小额贷款及消费金融公司余额求和_个人征信
		--,t.客户当日贷款小额贷款及消费金融公司账户数计数_个人征信
		,t3.ZXACT_LOANACT_UNCL_OTHBANK_ORG_CNT 客户当日贷款未结清不含泰隆银行数计数_个人征信 --借贷账户_贷款账户_未关闭银行机构-非我行_机构数
		,t4.ZXACT_LOANACT_UNCL_MICFIN_ACT_CNT  客户当日贷款小额贷款及消费金融公司账户数计数_个人征信 --借贷账户_贷款账户_未关闭小贷消金_账户数
		,t5. ZXACT_LOANACT_UNCL_MICFIN_BAL_SUM 客户当日贷款小额贷款及消费金融公司余额求和_个人征信  --贷账户_贷款账户_未关闭小贷消金_总余额
		,t2.客户当日贷款及大额专项分期卡授信金额求和_个人征信
		,t2.客户当日信用类贷款单家银行授信金额最大值_个人征信
		,t2.客户当日保证类贷款单家银行授信金额最大值_个人征信
		,t2.客户当日抵押类贷款_不含房贷_单家银行授信金额最大值_个人征信
		,t2.客户当日信用类贷款单家银行授信金额平均值_个人征信
		,t2.客户当日保证类贷款单家银行授信金额平均值_个人征信
		,t2.客户当日抵押类贷款_不含房贷_单家银行授信金额平均值_个人征信
from (
		select cst_id
				,report_id
				,coalesce(SUM(case when act_typ_cd IN ( 'R1' , 'R4' , 'D1' ) THEN ctr_bal END ),0)	+coalesce(SUM(case when act_typ_cd IN ( 'R2' , 'R3'  ) THEN ctr_bal END),0) AS 报告当日总负债_个人征信
				,coalesce(SUM(case when ( act_typ_cd IN ( 'R1' , 'R4' , 'D1' )  or pd_cd='82' ) THEN ctr_bal END ),0) AS 客户当日贷款及大额专项分期卡余额求和_个人征信
				,coalesce(SUM(case when act_typ_cd IN ( 'R2' , 'R3'  ) and pd_cd <>'82' THEN ctr_bal END),0) AS 客户当日信用卡不含大额专项分期卡余额求和_个人征信
				,coalesce(SUM(case when ( act_typ_cd IN ( 'R1' , 'R4' , 'D1' )  or pd_cd='82' ) and pd_cd not in ('11','12','13') THEN ctr_bal END ),0) AS 报告当日贷款类_不含房贷_余额求和_个人征信
				,coalesce(SUM(case when ( act_typ_cd IN ( 'R1' , 'R4' , 'D1' )  or pd_cd='82' )  and dtrb_org_typ_cd in ('11','12','14','15','52') THEN ctr_bal END ),0) AS 报告当日贷款类银行机构余额求和_个人征信
				,coalesce(SUM(case when ( act_typ_cd IN ( 'R1' , 'R4' , 'D1' )  or pd_cd='82' ) and pd_cd not in ('11','12','13') and dtrb_org_typ_cd in ('11','12','14','15','52') THEN ctr_bal END ),0) AS 报告当日贷款类_不含房贷_银行机构余额求和_个人征信

				,coalesce(count( distinct case when ( act_typ_cd IN ( 'R1' , 'R4' , 'D1' )  or pd_cd='82' )  and ctr_bal>0 THEN dtrb_org END ),0) 报告当日贷款类余额大于0机构数计数_个人征信
				,coalesce(count( distinct case when ( act_typ_cd IN ( 'R1' , 'R4' , 'D1' )  or pd_cd='82' )  and ctr_bal>0 and pd_cd not in ('11','12','13')  THEN dtrb_org END ),0) 报告当日贷款类_不含房贷_机构数计数_个人征信 --报告当日贷款类_不含房贷_余额大于0机构数计数_个人征信
				,coalesce(count( distinct case when ( act_typ_cd IN ( 'R1' , 'R4' , 'D1' )  or pd_cd='82' )  and ctr_bal>0 and dtrb_org_typ_cd in ('11','12','14','15','52')  THEN dtrb_org END ),0) 报告当日贷款类余额大于0且银行机构机构数计数_个人征信
				,coalesce(count( distinct case when ( act_typ_cd IN ( 'R1' , 'R4' , 'D1' )  or pd_cd='82' )  and ctr_bal>0 and dtrb_org_typ_cd in ('24','51') THEN dtrb_org END ),0) 报告当日贷款类正常存续余额大于0且小贷消金机构数计数_个人征信 --24:消费金融公司 51:小额贷款公司
				,coalesce(count( distinct case when act_typ_cd IN ( 'R2' , 'R3'  ) and pd_cd <>'82' and ctr_bal>0  THEN dtrb_org END ),0) 报告当日信用卡类余额大于0机构数计数_个人征信

				,coalesce(count( distinct case when ( act_typ_cd IN ( 'R1' , 'R4' , 'D1' )  or pd_cd='82' )  and ctr_bal>0 and pd_cd not in ('11','12','13')  and dtrb_org_typ_cd in ('11','12','14','15','52') THEN dtrb_org END ),0) 报告当日贷款类_不含房贷_余额大于0且银行机构机构数计数_个人征信

		from lab_bigdata_dev.max_report_zhengxin_geren
		group by cst_id
				,report_id
)t
left join lab_bigdata_dev.max_report_zhengxin_geren_01_02 t2  --个人授信类指标
on t.report_id=t2.report_id
left join adm_pub.adm_csm_cbus_out_crd_idv_cad_org_info_di t3
on t.report_id=t3.report_id
and t3.dt='20240731'
left join adm_pub.adm_csm_cbus_out_crd_idv_cad_act_info_di t4
on t.report_id=t4.report_id
and t4.dt='20240731'
left join adm_pub.adm_csm_cbus_out_crd_idv_cad_amt_di t5
on t.report_id=t5.report_id
and t5.dt='20240731'
;
drop table test_ft;
create table test_ft as
select
    CRDT_RPT_NO                                          征信报告编号32
    ,t.CST_ID                                               客户号10
    ,CUR_DAY_TOT_LBL_BAL                                  当日总负债余额_指标Z060401_0001
    ,CUR_DAY_LOAN_CLSS_BAL                                当日贷款类余额_指标Z060401_0002
    ,CUR_DAY_CR_CRD_CLSS_BAL                              当日信用卡类余额_指标Z060401_0003

    ,L6M_LOAN_SHD_RPMT_AVG_AMT                            近6个月贷款应还款平均金额_指标Z060401_0009
    ,L6M_CR_CRD_ACT_LMT_USE_RAT                           近6个月贷记卡账户额度使用率_指标Z060401_0010
    ,CUR_DAY_LOAN_CLSS_FACL_AMT                           当日贷款类授信金额_指标Z060401_0011
    ,CUR_DAY_CR_LOAN_BNK_FACL_HGST_AMT                    当日信用贷款银行授信最高金额_指标Z060401_0012
    ,CUR_DAY_GRNTE_LOAN_BNK_FACL_HGST_AMT                 当日保证贷款银行授信最高金额_指标Z060401_0013
    ,CUR_DAY_NON_HS_MORT_LOAN_BNK_FACL_HGST_AMT           当日非房抵押贷款银行授信最高金额_指标Z060401_0014
    ,CUR_DAY_CR_LOAN_BNK_FACL_AVG_AMT                     当日信用贷款银行授信平均金额_指标Z060401_0015
    ,CUR_DAY_GRNTE_LOAN_BNK_FACL_AVG_AMT                  当日保证贷款银行授信平均金额_指标Z060401_0016
    ,CUR_DAY_NON_HS_MORT_LOAN_BNK_FACL_AVG_AMT            当日非房抵押贷款银行授信平均金额_指标Z060401_0017

    ,CUR_DAY_LOAN_CLSS_NON_HS_LOAN_BAL                    当日贷款类非房贷余额_指标Z060401_0049
    ,CUR_DAY_LOAN_CLSS_BNK_ORG_BAL                        当日贷款类银行机构余额_指标Z060401_0050
    ,CUR_DAY_LOAN_CLSS_GT_ZR_ORG_NUM                      当日贷款类大于0机构数_指标Z060401_0051
    ,CUR_DAY_LOAN_CLSS_GT_ZR_BNK_ORG_NUM                  当日贷款类大于0银行机构数_指标Z060401_0052
    ,CUR_DAY_NORM_LOAN_GT_ZR_SML_AMT_LOAN_CSM_FIN_ORG_NUM 当日正常贷款大于0小贷消金机构数_指标Z060401_0053
    ,CUR_DAY_CR_CRD_GT_ZR_ORG_NUM                         当日信用卡大于0机构数_指标Z060401_0054
    ,CUR_DAY_REL_RPAY_RSPBL_ACT_NUM                       当日相关还款责任账户数_指标Z060401_0055

    ,CUR_DAY_NON_HS_LOAN_BNK_BAL                          当日非房贷银行余额_指标Z060401_0056
    ,CUR_DAY_NON_HS_LOAN_GT_ZR_BNK_NUM                    当日非房贷大于0银行数_指标Z060401_0057
    ,CUR_DAY_NON_HS_LOAN_GT_ZR_ORG_NUM                    当日非房贷大于0机构数_指标Z060401_0101

  ,报告当日总负债_个人征信
				, 客户当日贷款及大额专项分期卡余额求和_个人征信
				, 客户当日信用卡不含大额专项分期卡余额求和_个人征信
				,报告当日贷款类_不含房贷_余额求和_个人征信
				, 报告当日贷款类银行机构余额求和_个人征信
				, 报告当日贷款类_不含房贷_银行机构余额求和_个人征信

				, 报告当日贷款类余额大于0机构数计数_个人征信
				, 报告当日贷款类_不含房贷_机构数计数_个人征信 --报告当日贷款类_不含房贷_余额大于0机构数计数_个人征信
				, 报告当日贷款类余额大于0且银行机构机构数计数_个人征信
				, 报告当日贷款类正常存续余额大于0且小贷消金机构数计数_个人征信 --24:消费金融公司 51:小额贷款公司
				,报告当日信用卡类余额大于0机构数计数_个人征信

				,报告当日贷款类_不含房贷_余额大于0且银行机构机构数计数_个人征信
		,客户当日贷款未结清不含泰隆银行数计数_个人征信 --借贷账户_贷款账户_未关闭银行机构-非我行_机构数
		,客户当日贷款小额贷款及消费金融公司账户数计数_个人征信 --借贷账户_贷款账户_未关闭小贷消金_账户数
		,客户当日贷款小额贷款及消费金融公司余额求和_个人征信  --贷账户_贷款账户_未关闭小贷消金_总余额
		,t2.客户当日贷款及大额专项分期卡授信金额求和_个人征信
		,t2.客户当日信用类贷款单家银行授信金额最大值_个人征信
		,t2.客户当日保证类贷款单家银行授信金额最大值_个人征信
		,t2.客户当日抵押类贷款_不含房贷_单家银行授信金额最大值_个人征信
		,t2.客户当日信用类贷款单家银行授信金额平均值_个人征信
		,t2.客户当日保证类贷款单家银行授信金额平均值_个人征信
		,t2.客户当日抵押类贷款_不含房贷_单家银行授信金额平均值_个人征信
		-- ,客户当日贷款及大额专项分期卡余额求和_个人征信
		-- ,客户当日信用卡不含大额专项分期卡余额求和_个人征信
		-- ,客户当日相关还款责任余额求和_个人征信
		-- ,客户当日相关还款责任逾期金额求和_个人征信
		-- ,客户当日相关还款责任非正常余额求和_个人征信
		-- ,客户当日相关还款责任金额求和_个人征信
		-- ,客户当日相关还款责任账户数求和_个人征信
		-- ,客户当日贷款未结清不含泰隆银行数计数_个人征信
		-- ,客户当日贷款小额贷款及消费金融公司余额求和_个人征信
		-- ,客户当日贷款小额贷款及消费金融公司账户数计数_个人征信
		-- ,客户近6个月贷款平均应还款额平均值_个人征信
		-- ,客户近6个月贷记卡平均透支率_个人征信
		-- ,客户当日贷款及大额专项分期卡授信金额求和_个人征信
		-- ,客户当日信用类贷款单家银行授信金额最大值_个人征信
		-- ,客户当日保证类贷款单家银行授信金额最大值_个人征信
		-- ,客户当日抵押类贷款_不含房贷_单家银行授信金额最大值_个人征信
		-- ,客户当日信用类贷款单家银行授信金额平均值_个人征信
		-- ,客户当日保证类贷款单家银行授信金额平均值_个人征信
		-- ,客户当日抵押类贷款_不含房贷_单家银行授信金额平均值_个人征信
from lab_bigdata_dev.ADM_PBLC_CST_CRDT_INDIV_CST_IDX_DD t
left join lab_bigdata_dev.max_report_zhengxin_geren_01 t2
on t.CRDT_RPT_NO=t2.report_id
where t.dt=20240731
;

    ,t2.prm_org_nm 机构
from test_ft t
left join adm_pub.adm_csm_cbas_mng_inf_dd t2
on t.客户号10=t2.cst_id
and t2.dt='20241015'
SELECT * FROM lab_bigdata_dev.max_report_zhengxin_geren where report_id='2024073100510387784159' and ctr_bal>0;

SELECT * FROM edw.NCIP_PC02F_SUBACCTINFO t2 where report_id='2024073100510387784159' and t2.dt='20241015'




SELECT  t.report_id
FROM    (
            SELECT  DISTINCT report_id
            FROM    edw.NCIP_PC02E_NOLOANINFO t2
            WHERE   t2.dt = '20240731'
            AND     recentsix_repay > 0 ----非循环贷账户汇总信息
        ) t
INNER JOIN    (
                  SELECT  DISTINCT report_id
                  FROM    edw.NCIP_PC02F_SUBACCTINFO t2
                  WHERE   t2.dt = '20240731'
                  AND     recentsix_repay > 0  ----循环额度下分账户信息汇总
              ) t2
ON      t.report_id = t2.report_id
INNER JOIN    (
                  SELECT  DISTINCT report_id
                  FROM    edw.NCIP_PC02G_RECREDITINFO t2
                  WHERE   t2.dt = '20240731'
                  AND     recentsix_repay > 0  ----循环贷账户汇总信息
              ) t3
ON      t.report_id = t3.report_id;


2024073100002359084933
2024073100002910384996

1040981885


SELECT * FROM edw.NCIP_PC02E_NOLOANINFO t2 where  t2.dt='20240731'  and recentsix_repay>0  and report_id='2024073114410577084115'  ----非循环贷账户汇总信息
id	report_id	adminorg_num	account_num	total_credit	balance	recentsix_repay	dt
94835e9690cb78ce0191078560101e97	2024073114410577084115	5	5	1689900	965554	54057	20240731

SELECT D1_ACTUNCL_L6MRPAY_AVG,R4_ACTUNCL_L6MRPAY_AVG,R1_ACTUNCL_L6MRPAY_AVG
 FROM edw.NCIP_CP_M_BASIC_INFO t2 where  t2.dt='20240731'    and report_id='2024073100510387784159' ----循环额度下分账户信息汇总


SELECT * FROM edw.NCIP_PC02G_RECREDITINFO t2 where  t2.dt='20240731'  and recentsix_repay>0  and report_id='2024073114410577084115' ----循环贷账户汇总信息

SELECT  REPORT_ID AS REPORT_ID --报告编号
        ,CAST(coalesce(D1_ACTUNCL_L6MRPAY_AVG, 0) + coalesce(R4_ACTUNCL_L6MRPAY_AVG, 0) + coalesce(R1_ACTUNCL_L6MRPAY_AVG, 0) AS DECIMAL) L6M_LOAN_SHD_RPMT_AVG_AMT --近6个月贷款应还款平均金额(指标Z060401_0009)
FROM    edw.NCIP_CP_M_BASIC_INFO --征信基本信息与信息概要
WHERE   DT = '20240731'
AND     report_id = '2024073114410577084115'

AND     report_id = '2024073100510387784159'
 ----循环贷账户汇总信息

测试客户2024073100510387784159，1695253034








SELECT  REPORT_ID AS REPORT_ID --报告编号
        ,D1_ACTUNCL_L6MRPAY_AVG 近6个月应还款D1
        ,R4_ACTUNCL_L6MRPAY_AVG 近6个月应还款R4
        ,R1_ACTUNCL_L6MRPAY_AVG 近6个月应还款R1
FROM    edw.NCIP_CP_M_BASIC_INFO --征信基本信息与信息概要
WHERE   DT = '20240731'
AND     report_id = '2024073114410577084115' --测试客户2024073114410577084115，1695253034
**取数需求_行内利率填充.sql
-- ODPS SQL
-- **********************************************************************
-- 功能描述:
-- **
-- 创建者: 龙彬彬
-- 创建日期: 2024-11-03 16:39:54
--和二中心确认 edw.dim_bus_loan_crc_ctr_inf_dd --循环贷款合同信息 是不是作废了
--drop table if exists lab_bigdata_dev.tl_rate;
create table  lab_bigdata_dev.tl_rate as
--合同利率
SELECT  t1.cst_id
        ,t1.CTR_SERNO
        ,t1.EXEC_INTR_RAT AS INTR_RAT -- 执行利率
		,'合同' as 类型
FROM  edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t1
WHERE   t1.dt = '@@{yyyyMMdd}'
AND     (  t1.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
AND     t1.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
AND     t1.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     ( t1.PRD_NO NOT IN ( '2001020101002' , '2001010101002' )   OR nvl(t1.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
and t1.PRD_NO not in ( '2002010101001','2002010101901') --剔除信用卡
--未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
AND     ( ( t1.CTR_STS_CD IN ( '2' , '4' )
AND     t1.TMT_DT = '18991231'
AND     to_date(t1.CTR_MTU_DT, 'yyyyMMdd') >= to_date('@@{yyyyMMdd}', 'yyyyMMdd') )
    OR t1.CTR_BAL > 0 )

union
--借据利率
SELECT  t.cst_id
		,t.dbil_id
        ,t.exec_intr_rat ----借据利率
		,'借据' as 类型
FROM    edw.dim_bus_loan_dbil_inf_dd t
--对借据表限制在 未到期的合同
inner join edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t1
on t1.CTR_SERNO=t.ctr_serno
and t1.dt = '@@{yyyyMMdd}'
and   (  t1.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
AND     t1.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
AND     t1.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     ( t1.PRD_NO NOT IN ( '2001020101002' , '2001010101002' )   OR nvl(t1.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
and t1.PRD_NO not in ( '2002010101001','2002010101901') --剔除信用卡
--未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
AND     ( ( t1.CTR_STS_CD IN ( '2' , '4' )
AND     t1.TMT_DT = '18991231'
AND     to_date(t1.CTR_MTU_DT, 'yyyyMMdd') >= to_date('@@{yyyyMMdd}', 'yyyyMMdd') )
    OR t1.CTR_BAL > 0 )
WHERE   t.dt = '@@{yyyyMMdd}'
;

SELECT * FROM     edw.dim_bus_loan_dbil_inf_dd t  WHERE   t.dt = '@@{yyyyMMdd}'
**取数需求_负债报告测试.sql
-- ODPS SQL
-- **********************************************************************
-- 功能描述:
-- **
-- 创建者: 龙彬彬
-- 创建日期: 2024-11-01 14:58:52
-- **
-- 修改日志:
-- 修改日期          修改人          修改内容
-- **
-- **********************************************************************

                SELECT  G.REPORT_ID
                         ,G.AGREEMENT_NO
                         ,G.ORG_TYPE        AS AGM_ORG_TYPE ----授信协议机构类型
                         ,G.ORG_CODE        AS AGM_ORG_CODE ----授信协议机构代码
                         ,G.AGREEMENT_SIGN  AS AGM_SIGN --授信协议标识
                         ,G.LIMIT_PURPOSE   AS AGM_LMT_PURPOSE ----授信协议额度用途
                         ,G.CREDIT_LIMIT    AS AGM_LMT ----授信协议额度
                         ,G.CURRENCY        AS AGM_CCY ----授信协议币种
                         ,CASE
                            WHEN G.START_TIME IS NULL OR TRIM(G.START_TIME) = '' THEN '18991231'
                            ELSE TO_CHAR(G.START_TIME, 'yyyyMMdd')
                          END               AS AGM_START_DT --授信协议生效日期
                         ,CASE
                            WHEN G.START_TIME IS NULL OR TRIM(G.START_TIME) = '' THEN NULL
                            ELSE DATEDIFF(TO_DATE(SUBSTR(G.REPORT_ID, 1, 8), 'yyyyMMdd'), TO_DATE(SUBSTR(G.START_TIME, 1, 10), 'yyyy-MM-dd'), 'MM')
                          END               AS AGM_START_HIS_MONTH ---授信协议生效距今月份
                         ,CASE
                            WHEN SUBSTR(G.END_TIME, 1, 10) = '2099-12-31' THEN 999
                            ELSE DATEDIFF(TO_DATE(SUBSTR(G.END_TIME, 1, 10), 'yyyy-MM-dd'), TO_DATE(SUBSTR(G.START_TIME, 1, 10), 'yyyy-MM-dd'), 'MM')
                          END               AS AGM_TERM ---授信协议期限
                         ,G.END_TIME        AS AGM_END_TIME ----授信协议到期日期
                         ,G.AGREEMENT_STATS AS AGM_STATS ----授信协议状态
                         ,G.USED_LIMIT      AS AGM_USED_LMT ----授信协议已用额度
                         ,G.QUOTA_NO        AS AGM_QUOTA_NO ----授信协议限额编号
                         ,G.CREDIT_QUOTA    AS AGM_CREDIT_QUOTA ----授信协议限额
                         ,G.DT              AS DT
                 FROM    edw.NCIP_PD02A_CREDITBASICMESSAGE G
                 WHERE   G.DT = '20240731'
                 and g.report_id='2024073100045179184549';

                 SELECT five_ctg_type,count(*) FROM edw.ncip_cp_m_account_info where dt='20240731' group by five_ctg_type;


                   select distinct fi.*
        from edw.NCIP_pd01a_basicinfoseg ba
        left join edw.NCIP_cp_m_account_info fi on  fi.report_id = ba.report_id  and fi.act_id = ba.id and fi.dt='20240731'
        left join edw.NCIP_pd01e_repaystat60 re on re.report_id = ba.report_id  and   re.union_id = ba.id and re.dt='20240731'
        left join edw.NCIP_pd01e_repaystat60sub res on res.report_id = ba.report_id  and res.union_id = re.id and res.dt='20240731'
        where  (
        (
        ba.account_type = 'D1' and res.repay_status in ('1','2','3','4','5','6','7','D','Z','B') and  fi.acc_status in ('1','3','5')
        and  (fi.five_ctg in ('1','9')    or  fi.five_ctg is null)
        )
        or (
        ba.account_type = 'R1' and res.repay_status in ('1','2','3','4','5','6','7','D','Z','B') and  fi.acc_status in ('1','3')
        and  (fi.five_ctg in ('1','9')    or  fi.five_ctg is null)
        )
        or (
        ba.account_type = 'R4' and res.repay_status in ('1','2','3','4','5','6','7','D','Z','B') and  fi.acc_status in ('1','3')
        and  (fi.five_ctg in ('1','9')    or  fi.five_ctg is null)
        )
        or (
        ba.account_type = 'R2' and res.repay_status in ('1','2','3','4','5','6','7','B') and  fi.acc_status in ('1','2','4')
        and  (fi.five_ctg in ('1','9')    or  fi.five_ctg is null)
        )
        or (
        ba.account_type = 'R3' and res.repay_status in ('3','4','5','6','7','B') and  fi.acc_status in ('1','2','4')
        and  (fi.five_ctg in ('1','9')    or  fi.five_ctg is null)
            )
        )
		and ba.report_id='2024073116520330085143'
     and ba.dt='20240731';




SELECT  DISTINCT fi . *
FROM    edw.NCIP_pd01a_basicinfoseg ba
LEFT JOIN    edw.NCIP_cp_m_account_info fi
ON      fi.act_id = ba.id
AND     fi.report_id = ba.report_id and fi.dt='20240731'
WHERE   ( ( ba.account_type = 'D1'
AND     ( fi.acc_status IN ( '2' , '4' , '6' , '7' , '8' )
    OR fi.FIVE_CTG_TYPE IN ( '2' , '3' ) ) )
    OR ( ba.account_type = 'R1'
AND     ( fi.acc_status IN ( '2' , '4' , '5' , '6' , '8' )
    OR fi.FIVE_CTG_TYPE IN ( '2' , '3' ) ) )
    OR ( ba.account_type = 'R4'
AND     ( fi.acc_status IN ( '2' , '4' , '6' , '8' )
    OR fi.FIVE_CTG_TYPE IN ( '2' , '3' ) ) )
    OR ( ba.account_type IN ( 'R2' , 'R3' )
AND     ( fi.acc_status IN ( '3' , '31' , '5' , '8' )
    OR fi.FIVE_CTG_TYPE IN ( '2' , '3' ) ) ) )

    		and ba.report_id='2024073116520330085143'
     and ba.dt='20240731';
**备份2.0_to立英_T0HGL_ORG_TAG_IND_DD_2_CLWH_XZTM_0.sql
-- ODPS SQL
-- **********************************************************************
-- 功能描述:
-- **
-- 创建者: 卫少洁
-- 创建日期: 2023-08-28 16:24:19
-- **
-- 修改日志:
-- 修改日期          修改人          修改内容
-- **
-- **********************************************************************

--指标结果表HGL_ORG_TAG_IND_DD_2_01；第一次建表时跑，后面只需每次插入分区即可
-- DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01;
-- CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01
-- (
--     ORG_ID   STRING --考核机构
--     ,IND_ID  STRING --指标代码
--     ,CUR_VAL DECIMAL --指标值
-- )
-- COMMENT
-- '合格率2.0指标宽表-加工中间表'
-- PARTITIONED BY
-- (
--     DT STRING COMMENT '日期分区'
-- );

-- LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG;--考核机构树（钱塘支行调整到支行层级）
--20240228调整,24年不再对钱塘支行单独调整，机构树在24年已把该支行调整为杭州分行下属的正常支行，无需单独处理
drop table if exists LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG purge;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG AS
select distinct
    dt
    ,brc_org_id
    ,if(ORG_ID like '3302052%' and dt<='20231231',sbs_org_id,sbr_org_id) sbr_org_id
    ,if(ORG_ID like '3302052%' and dt<='20231231',sbr_org_id,tem_org_id) tem_org_id
    ,org_id
from edw.dim_hr_org_mng_org_tree_dd
where dt in ('${data_dt}',to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd'),CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')) --输入月末，上月末，上年末三个时点数据
;


-- DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_KHJL;
-- CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_KHJL
-- (
--     DATA_DT STRING --数据日期
--     ,ORG_ID   STRING --考核机构
--     ,mon      STRING   --当前月份
--     ,mon_num   STRING  --截止当前累计月份数
--     ,emp_num DECIMAL --指标值
-- )
-- COMMENT
-- '合格率2.0指标中间表-当年每月末转正客户经理数'
-- PARTITIONED BY
-- (
--     DT STRING COMMENT '日期分区'
-- );

-- &sum;累积到当前时间的月份数*月末转正客户经理人数/&sum;（1+2+3+当前月份数)例如：当前月5月，1-5月月末转正客户经理人数分别是：5人、5人、4人、6人、8人，时间加权转正客户经理人数=（5*5+4*5+3*4+2*6+1*8）/（1+2+3+4+5）=5.133人
--2月末是写死的2023年0228，2024年0229

ALTER TABLE LAB_BIGDATA_DEV.HGL_ORG_KHJL DROP IF EXISTS PARTITION ( DT = ${data_dt} );
INSERT into  LAB_BIGDATA_DEV.HGL_ORG_KHJL PARTITION ( DT = ${data_dt} )
SELECT  t.dt as DATA_DT
        ,org.tem_org_id AS org_id
        ,case when substr(t.dt,5,2)='01' then 1
              when substr(t.dt,5,2)='02' then 2
              when substr(t.dt,5,2)='03' then 3
              when substr(t.dt,5,2)='04' then 4
              when substr(t.dt,5,2)='05' then 5
              when substr(t.dt,5,2)='06' then 6
              when substr(t.dt,5,2)='07' then 7
              when substr(t.dt,5,2)='08' then 8
              when substr(t.dt,5,2)='09' then 9
              when substr(t.dt,5,2)='10' then 10
              when substr(t.dt,5,2)='11' then 11
              when substr(t.dt,5,2)='12' then 12
        else null
        end  as  mon
        ,case when substr(t.dt,5,4)='0131' then int('${MM}')
              when (substr(t.dt,5,4)='0228' or substr(t.dt,5,4)='0229') then int('${MM}')-1
              when substr(t.dt,5,4)='0331' then int('${MM}')-2
              when substr(t.dt,5,4)='0430' then int('${MM}')-3
              when substr(t.dt,5,4)='0531' then int('${MM}')-4
              when substr(t.dt,5,4)='0630' then int('${MM}')-5
              when substr(t.dt,5,4)='0731' then int('${MM}')-6
              when substr(t.dt,5,4)='0831' then int('${MM}')-7
              when substr(t.dt,5,4)='0930' then int('${MM}')-8
              when substr(t.dt,5,4)='1031' then int('${MM}')-9
              when substr(t.dt,5,4)='1130' then int('${MM}')-10
              when substr(t.dt,5,4)='1231' then int('${MM}')-11
        else null
        end  as  mon_num
        ,count(1)   as emp_num
FROM    edw.dws_hr_empe_inf_dd t  --员工汇总信息
LEFT JOIN    edw.dim_hr_org_job_inf_dd p  --职位信息
ON      t.pos_enc = p.pos_id   --职位编码关联
AND     t.dt = p.dt
AND     p.dt in ('@@{yyyy-1y}0131','@@{yyyy-1y}0229','@@{yyyy-1y}0331','@@{yyyy-1y}0430','@@{yyyy-1y}0531','@@{yyyy-1y}0630','@@{yyyy-1y}0731','@@{yyyy-1y}0831','@@{yyyy-1y}0930','@@{yyyy-1y}1031','@@{yyyy-1y}1130','@@{yyyy-1y}1231','@@{yyyy}0131','@@{yyyy}0228','@@{yyyy}0331','@@{yyyy}0430','@@{yyyy}0531','@@{yyyy}0630','@@{yyyy}0731','@@{yyyy}0831','@@{yyyy}0930','@@{yyyy}1031','@@{yyyy}1130','@@{yyyy}1231')
inner join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt=${data_dt}
WHERE   1 = 1
AND     t.lbr_tp_sts IN ( '4' )
and     t.empe_sts_cd='2'  --在职
and     p.dty_id in ('P3010','P3020')
AND     pos_nm LIKE '%客户经理%'
AND     t.dt in ('@@{yyyy-1y}0131','@@{yyyy-1y}0229','@@{yyyy-1y}0331','@@{yyyy-1y}0430','@@{yyyy-1y}0531','@@{yyyy-1y}0630','@@{yyyy-1y}0731','@@{yyyy-1y}0831','@@{yyyy-1y}0930','@@{yyyy-1y}1031','@@{yyyy-1y}1130','@@{yyyy-1y}1231','@@{yyyy}0131','@@{yyyy}0228','@@{yyyy}0331','@@{yyyy}0430','@@{yyyy}0531','@@{yyyy}0630','@@{yyyy}0731','@@{yyyy}0831','@@{yyyy}0930','@@{yyyy}1031','@@{yyyy}1130','@@{yyyy}1231')
and     t.dt<=${data_dt}
and     t.dt>='@@{yyyy}0101'
and     nvl(org.tem_org_id,'')<>''
GROUP BY t.dt,org.tem_org_id
union all
SELECT  t.dt as DATA_DT
        ,org.sbr_org_id AS org_id
        ,case when substr(t.dt,5,2)='01' then 1
              when substr(t.dt,5,2)='02' then 2
              when substr(t.dt,5,2)='03' then 3
              when substr(t.dt,5,2)='04' then 4
              when substr(t.dt,5,2)='05' then 5
              when substr(t.dt,5,2)='06' then 6
              when substr(t.dt,5,2)='07' then 7
              when substr(t.dt,5,2)='08' then 8
              when substr(t.dt,5,2)='09' then 9
              when substr(t.dt,5,2)='10' then 10
              when substr(t.dt,5,2)='11' then 11
              when substr(t.dt,5,2)='12' then 12
        else null
        end  as  mon
        ,case when substr(t.dt,5,4)='0131' then int('${MM}')
              when (substr(t.dt,5,4)='0228' or substr(t.dt,5,4)='0229') then int('${MM}')-1
              when substr(t.dt,5,4)='0331' then int('${MM}')-2
              when substr(t.dt,5,4)='0430' then int('${MM}')-3
              when substr(t.dt,5,4)='0531' then int('${MM}')-4
              when substr(t.dt,5,4)='0630' then int('${MM}')-5
              when substr(t.dt,5,4)='0731' then int('${MM}')-6
              when substr(t.dt,5,4)='0831' then int('${MM}')-7
              when substr(t.dt,5,4)='0930' then int('${MM}')-8
              when substr(t.dt,5,4)='1031' then int('${MM}')-9
              when substr(t.dt,5,4)='1130' then int('${MM}')-10
              when substr(t.dt,5,4)='1231' then int('${MM}')-11
        else null
        end  as  mon_num
        ,count(1)   as emp_num
FROM    edw.dws_hr_empe_inf_dd t
LEFT JOIN    edw.dim_hr_org_job_inf_dd p
ON      t.pos_enc = p.pos_id
AND     t.dt = p.dt
AND     p.dt in ('@@{yyyy-1y}0131','@@{yyyy-1y}0229','@@{yyyy-1y}0331','@@{yyyy-1y}0430','@@{yyyy-1y}0531','@@{yyyy-1y}0630','@@{yyyy-1y}0731','@@{yyyy-1y}0831','@@{yyyy-1y}0930','@@{yyyy-1y}1031','@@{yyyy-1y}1130','@@{yyyy-1y}1231','@@{yyyy}0131','@@{yyyy}0228','@@{yyyy}0331','@@{yyyy}0430','@@{yyyy}0531','@@{yyyy}0630','@@{yyyy}0731','@@{yyyy}0831','@@{yyyy}0930','@@{yyyy}1031','@@{yyyy}1130','@@{yyyy}1231')
inner join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt=${data_dt}
WHERE   1 = 1
AND     t.lbr_tp_sts IN ( '4' )
and     t.empe_sts_cd='2'  --在职
and     p.dty_id in ('P3010','P3020')
AND     pos_nm LIKE '%客户经理%'
AND     t.dt in ('@@{yyyy-1y}0131','@@{yyyy-1y}0229','@@{yyyy-1y}0331','@@{yyyy-1y}0430','@@{yyyy-1y}0531','@@{yyyy-1y}0630','@@{yyyy-1y}0731','@@{yyyy-1y}0831','@@{yyyy-1y}0930','@@{yyyy-1y}1031','@@{yyyy-1y}1130','@@{yyyy-1y}1231','@@{yyyy}0131','@@{yyyy}0228','@@{yyyy}0331','@@{yyyy}0430','@@{yyyy}0531','@@{yyyy}0630','@@{yyyy}0731','@@{yyyy}0831','@@{yyyy}0930','@@{yyyy}1031','@@{yyyy}1130','@@{yyyy}1231')
and     t.dt<=${data_dt}
and     t.dt>='@@{yyyy}0101'
and     nvl(org.sbr_org_id,'')<>''
GROUP BY t.dt,org.sbr_org_id
union all
SELECT  t.dt as DATA_DT
        ,org.brc_org_id AS org_id
        ,case when substr(t.dt,5,2)='01' then 1
              when substr(t.dt,5,2)='02' then 2
              when substr(t.dt,5,2)='03' then 3
              when substr(t.dt,5,2)='04' then 4
              when substr(t.dt,5,2)='05' then 5
              when substr(t.dt,5,2)='06' then 6
              when substr(t.dt,5,2)='07' then 7
              when substr(t.dt,5,2)='08' then 8
              when substr(t.dt,5,2)='09' then 9
              when substr(t.dt,5,2)='10' then 10
              when substr(t.dt,5,2)='11' then 11
              when substr(t.dt,5,2)='12' then 12
        else null
        end  as  mon
        ,case when substr(t.dt,5,4)='0131' then int('${MM}')
              when (substr(t.dt,5,4)='0228' or substr(t.dt,5,4)='0229') then int('${MM}')-1
              when substr(t.dt,5,4)='0331' then int('${MM}')-2
              when substr(t.dt,5,4)='0430' then int('${MM}')-3
              when substr(t.dt,5,4)='0531' then int('${MM}')-4
              when substr(t.dt,5,4)='0630' then int('${MM}')-5
              when substr(t.dt,5,4)='0731' then int('${MM}')-6
              when substr(t.dt,5,4)='0831' then int('${MM}')-7
              when substr(t.dt,5,4)='0930' then int('${MM}')-8
              when substr(t.dt,5,4)='1031' then int('${MM}')-9
              when substr(t.dt,5,4)='1130' then int('${MM}')-10
              when substr(t.dt,5,4)='1231' then int('${MM}')-11
        else null
        end  as  mon_num
        ,count(1)   as emp_num
FROM    edw.dws_hr_empe_inf_dd t
LEFT JOIN    edw.dim_hr_org_job_inf_dd p
ON      t.pos_enc = p.pos_id
AND     t.dt = p.dt
AND     p.dt in ('@@{yyyy-1y}0131','@@{yyyy-1y}0229','@@{yyyy-1y}0331','@@{yyyy-1y}0430','@@{yyyy-1y}0531','@@{yyyy-1y}0630','@@{yyyy-1y}0731','@@{yyyy-1y}0831','@@{yyyy-1y}0930','@@{yyyy-1y}1031','@@{yyyy-1y}1130','@@{yyyy-1y}1231','@@{yyyy}0131','@@{yyyy}0228','@@{yyyy}0331','@@{yyyy}0430','@@{yyyy}0531','@@{yyyy}0630','@@{yyyy}0731','@@{yyyy}0831','@@{yyyy}0930','@@{yyyy}1031','@@{yyyy}1130','@@{yyyy}1231')
inner join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt=${data_dt}
WHERE   1 = 1
AND     t.lbr_tp_sts IN ( '4' )
and     t.empe_sts_cd='2'  --在职
and     p.dty_id in ('P3010','P3020')
AND     pos_nm LIKE '%客户经理%'
AND     t.dt in ('@@{yyyy-1y}0131','@@{yyyy-1y}0229','@@{yyyy-1y}0331','@@{yyyy-1y}0430','@@{yyyy-1y}0531','@@{yyyy-1y}0630','@@{yyyy-1y}0731','@@{yyyy-1y}0831','@@{yyyy-1y}0930','@@{yyyy-1y}1031','@@{yyyy-1y}1130','@@{yyyy-1y}1231','@@{yyyy}0131','@@{yyyy}0228','@@{yyyy}0331','@@{yyyy}0430','@@{yyyy}0531','@@{yyyy}0630','@@{yyyy}0731','@@{yyyy}0831','@@{yyyy}0930','@@{yyyy}1031','@@{yyyy}1130','@@{yyyy}1231')
and     t.dt<=${data_dt}
and     t.dt>='@@{yyyy}0101'
and     nvl(org.brc_org_id,'')<>''
GROUP BY t.dt,org.brc_org_id
;

-- DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL;
-- CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
-- (
--     DATA_DT STRING --数据日期
--     ,ORG_ID   STRING --考核机构
--     ,mon      STRING   --当前月份
--     ,mon_num   STRING  --截止当前累计月份数
--     ,emp_num DECIMAL --指标值
-- )
-- COMMENT
-- '合格率2.0指标中间表-当年每月末全量客户经理和服务经理数'
-- PARTITIONED BY
-- (
--     DT STRING COMMENT '日期分区'
-- );

-- 用工状态：已上岗，岗位分类：营销序列员工-普惠金融客户经理、营销序列员工-小企业客户经理、柜面序列员工-柜员


ALTER TABLE LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL DROP IF EXISTS PARTITION ( DT = ${data_dt} )
;
INSERT into  LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL PARTITION ( DT = ${data_dt} )
SELECT  t.dt as DATA_DT
        ,org.tem_org_id AS org_id
        ,case when substr(t.dt,5,2)='01' then 1
              when substr(t.dt,5,2)='02' then 2
              when substr(t.dt,5,2)='03' then 3
              when substr(t.dt,5,2)='04' then 4
              when substr(t.dt,5,2)='05' then 5
              when substr(t.dt,5,2)='06' then 6
              when substr(t.dt,5,2)='07' then 7
              when substr(t.dt,5,2)='08' then 8
              when substr(t.dt,5,2)='09' then 9
              when substr(t.dt,5,2)='10' then 10
              when substr(t.dt,5,2)='11' then 11
              when substr(t.dt,5,2)='12' then 12
        else null
        end  as  mon
        ,case when substr(t.dt,5,4)='0131' then int('${MM}')
              when (substr(t.dt,5,4)='0228' or substr(t.dt,5,4)='0229') then int('${MM}')-1
              when substr(t.dt,5,4)='0331' then int('${MM}')-2
              when substr(t.dt,5,4)='0430' then int('${MM}')-3
              when substr(t.dt,5,4)='0531' then int('${MM}')-4
              when substr(t.dt,5,4)='0630' then int('${MM}')-5
              when substr(t.dt,5,4)='0731' then int('${MM}')-6
              when substr(t.dt,5,4)='0831' then int('${MM}')-7
              when substr(t.dt,5,4)='0930' then int('${MM}')-8
              when substr(t.dt,5,4)='1031' then int('${MM}')-9
              when substr(t.dt,5,4)='1130' then int('${MM}')-10
              when substr(t.dt,5,4)='1231' then int('${MM}')-11
        else null
        end  as  mon_num
        ,count(1)   as emp_num
FROM    edw.dws_hr_empe_inf_dd t
LEFT JOIN    edw.dim_hr_org_job_inf_dd p
ON      t.pos_enc = p.pos_id
AND     t.dt = p.dt
AND     p.dt in ('@@{yyyy-1y}0131','@@{yyyy-1y}0229','@@{yyyy-1y}0331','@@{yyyy-1y}0430','@@{yyyy-1y}0531','@@{yyyy-1y}0630','@@{yyyy-1y}0731','@@{yyyy-1y}0831','@@{yyyy-1y}0930','@@{yyyy-1y}1031','@@{yyyy-1y}1130','@@{yyyy-1y}1231','@@{yyyy}0131','@@{yyyy}0228','@@{yyyy}0331','@@{yyyy}0430','@@{yyyy}0531','@@{yyyy}0630','@@{yyyy}0731','@@{yyyy}0831','@@{yyyy}0930','@@{yyyy}1031','@@{yyyy}1130','@@{yyyy}1231')
inner join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt=${data_dt}
WHERE   1 = 1
AND     t.lbr_tp_sts IN ( '4' )  --已上岗
and     t.empe_sts_cd='2'  --在职
and     p.dty_id in ('P3010','P3020','P4010')
AND     (pos_nm LIKE '%客户经理%' or pos_nm LIKE '%服务经理%')
AND     t.dt in ('@@{yyyy-1y}0131','@@{yyyy-1y}0229','@@{yyyy-1y}0331','@@{yyyy-1y}0430','@@{yyyy-1y}0531','@@{yyyy-1y}0630','@@{yyyy-1y}0731','@@{yyyy-1y}0831','@@{yyyy-1y}0930','@@{yyyy-1y}1031','@@{yyyy-1y}1130','@@{yyyy-1y}1231','@@{yyyy}0131','@@{yyyy}0228','@@{yyyy}0331','@@{yyyy}0430','@@{yyyy}0531','@@{yyyy}0630','@@{yyyy}0731','@@{yyyy}0831','@@{yyyy}0930','@@{yyyy}1031','@@{yyyy}1130','@@{yyyy}1231')
and     t.dt<=${data_dt}
and     t.dt>='@@{yyyy}0101'
and     nvl(org.tem_org_id,'')<>''
GROUP BY t.dt,org.tem_org_id
union all
SELECT  t.dt as DATA_DT
        ,org.sbr_org_id AS org_id
        ,case when substr(t.dt,5,2)='01' then 1
              when substr(t.dt,5,2)='02' then 2
              when substr(t.dt,5,2)='03' then 3
              when substr(t.dt,5,2)='04' then 4
              when substr(t.dt,5,2)='05' then 5
              when substr(t.dt,5,2)='06' then 6
              when substr(t.dt,5,2)='07' then 7
              when substr(t.dt,5,2)='08' then 8
              when substr(t.dt,5,2)='09' then 9
              when substr(t.dt,5,2)='10' then 10
              when substr(t.dt,5,2)='11' then 11
              when substr(t.dt,5,2)='12' then 12
        else null
        end  as  mon
        ,case when substr(t.dt,5,4)='0131' then int('${MM}')
              when (substr(t.dt,5,4)='0228' or substr(t.dt,5,4)='0229') then int('${MM}')-1
              when substr(t.dt,5,4)='0331' then int('${MM}')-2
              when substr(t.dt,5,4)='0430' then int('${MM}')-3
              when substr(t.dt,5,4)='0531' then int('${MM}')-4
              when substr(t.dt,5,4)='0630' then int('${MM}')-5
              when substr(t.dt,5,4)='0731' then int('${MM}')-6
              when substr(t.dt,5,4)='0831' then int('${MM}')-7
              when substr(t.dt,5,4)='0930' then int('${MM}')-8
              when substr(t.dt,5,4)='1031' then int('${MM}')-9
              when substr(t.dt,5,4)='1130' then int('${MM}')-10
              when substr(t.dt,5,4)='1231' then int('${MM}')-11
        else null
        end  as  mon_num
        ,count(1)   as emp_num
FROM    edw.dws_hr_empe_inf_dd t
LEFT JOIN    edw.dim_hr_org_job_inf_dd p
ON      t.pos_enc = p.pos_id
AND     t.dt = p.dt
AND     p.dt in ('@@{yyyy-1y}0131','@@{yyyy-1y}0229','@@{yyyy-1y}0331','@@{yyyy-1y}0430','@@{yyyy-1y}0531','@@{yyyy-1y}0630','@@{yyyy-1y}0731','@@{yyyy-1y}0831','@@{yyyy-1y}0930','@@{yyyy-1y}1031','@@{yyyy-1y}1130','@@{yyyy-1y}1231','@@{yyyy}0131','@@{yyyy}0228','@@{yyyy}0331','@@{yyyy}0430','@@{yyyy}0531','@@{yyyy}0630','@@{yyyy}0731','@@{yyyy}0831','@@{yyyy}0930','@@{yyyy}1031','@@{yyyy}1130','@@{yyyy}1231')
inner join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt=${data_dt}
WHERE   1 = 1
AND     t.lbr_tp_sts IN ( '4' )
and     t.empe_sts_cd='2'  --在职
and     p.dty_id in ('P3010','P3020','P4010')
AND     (pos_nm LIKE '%客户经理%' or pos_nm LIKE '%服务经理%')
AND     t.dt in ('@@{yyyy-1y}0131','@@{yyyy-1y}0229','@@{yyyy-1y}0331','@@{yyyy-1y}0430','@@{yyyy-1y}0531','@@{yyyy-1y}0630','@@{yyyy-1y}0731','@@{yyyy-1y}0831','@@{yyyy-1y}0930','@@{yyyy-1y}1031','@@{yyyy-1y}1130','@@{yyyy-1y}1231','@@{yyyy}0131','@@{yyyy}0228','@@{yyyy}0331','@@{yyyy}0430','@@{yyyy}0531','@@{yyyy}0630','@@{yyyy}0731','@@{yyyy}0831','@@{yyyy}0930','@@{yyyy}1031','@@{yyyy}1130','@@{yyyy}1231')
and     t.dt<=${data_dt}
and     t.dt>='@@{yyyy}0101'
and     nvl(org.sbr_org_id,'')<>''
GROUP BY t.dt,org.sbr_org_id
union all
SELECT  t.dt as DATA_DT
        ,org.brc_org_id AS org_id
        ,case when substr(t.dt,5,2)='01' then 1
              when substr(t.dt,5,2)='02' then 2
              when substr(t.dt,5,2)='03' then 3
              when substr(t.dt,5,2)='04' then 4
              when substr(t.dt,5,2)='05' then 5
              when substr(t.dt,5,2)='06' then 6
              when substr(t.dt,5,2)='07' then 7
              when substr(t.dt,5,2)='08' then 8
              when substr(t.dt,5,2)='09' then 9
              when substr(t.dt,5,2)='10' then 10
              when substr(t.dt,5,2)='11' then 11
              when substr(t.dt,5,2)='12' then 12
        else null
        end  as  mon
        ,case when substr(t.dt,5,4)='0131' then int('${MM}')
              when (substr(t.dt,5,4)='0228' or substr(t.dt,5,4)='0229') then int('${MM}')-1
              when substr(t.dt,5,4)='0331' then int('${MM}')-2
              when substr(t.dt,5,4)='0430' then int('${MM}')-3
              when substr(t.dt,5,4)='0531' then int('${MM}')-4
              when substr(t.dt,5,4)='0630' then int('${MM}')-5
              when substr(t.dt,5,4)='0731' then int('${MM}')-6
              when substr(t.dt,5,4)='0831' then int('${MM}')-7
              when substr(t.dt,5,4)='0930' then int('${MM}')-8
              when substr(t.dt,5,4)='1031' then int('${MM}')-9
              when substr(t.dt,5,4)='1130' then int('${MM}')-10
              when substr(t.dt,5,4)='1231' then int('${MM}')-11
        else null
        end  as  mon_num
        ,count(1)   as emp_num
FROM    edw.dws_hr_empe_inf_dd t
LEFT JOIN    edw.dim_hr_org_job_inf_dd p
ON      t.pos_enc = p.pos_id
AND     t.dt = p.dt
AND     p.dt in ('@@{yyyy-1y}0131','@@{yyyy-1y}0229','@@{yyyy-1y}0331','@@{yyyy-1y}0430','@@{yyyy-1y}0531','@@{yyyy-1y}0630','@@{yyyy-1y}0731','@@{yyyy-1y}0831','@@{yyyy-1y}0930','@@{yyyy-1y}1031','@@{yyyy-1y}1130','@@{yyyy-1y}1231','@@{yyyy}0131','@@{yyyy}0228','@@{yyyy}0331','@@{yyyy}0430','@@{yyyy}0531','@@{yyyy}0630','@@{yyyy}0731','@@{yyyy}0831','@@{yyyy}0930','@@{yyyy}1031','@@{yyyy}1130','@@{yyyy}1231')
inner join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
WHERE   1 = 1
AND     t.lbr_tp_sts IN ( '4' )
and     t.empe_sts_cd='2'  --在职
and     p.dty_id in ('P3010','P3020','P4010')
AND     (pos_nm LIKE '%客户经理%' or pos_nm LIKE '%服务经理%')
AND     t.dt in ('@@{yyyy-1y}0131','@@{yyyy-1y}0229','@@{yyyy-1y}0331','@@{yyyy-1y}0430','@@{yyyy-1y}0531','@@{yyyy-1y}0630','@@{yyyy-1y}0731','@@{yyyy-1y}0831','@@{yyyy-1y}0930','@@{yyyy-1y}1031','@@{yyyy-1y}1130','@@{yyyy-1y}1231','@@{yyyy}0131','@@{yyyy}0228','@@{yyyy}0331','@@{yyyy}0430','@@{yyyy}0531','@@{yyyy}0630','@@{yyyy}0731','@@{yyyy}0831','@@{yyyy}0930','@@{yyyy}1031','@@{yyyy}1130','@@{yyyy}1231')
and     t.dt<=${data_dt}
and     t.dt>='@@{yyyy}0101'
and     nvl(org.brc_org_id,'')<>''
GROUP BY t.dt,org.brc_org_id
;

drop table if exists LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_01 purge;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_01 AS
SELECT  org.tem_org_id                               AS ORG_ID
        ,sum(CASE
               WHEN t1.efe_dep_cst_ind = '1' AND t3.efe_dep_cst_ind = '1' THEN 1
               ELSE 0
             END)  AS CLWH2_0002_01
        ,sum(CASE
               WHEN t1.efe_dep_cst_ind = '1' AND t3.efe_dep_cst_ind = '1' THEN 1
               ELSE 0
             END) / IF(sum(CASE
                             WHEN t1.efe_dep_cst_ind = '1' THEN 1
                             ELSE 0
                           END) = 0, NULL, sum(CASE
                                                 WHEN t1.efe_dep_cst_ind = '1' THEN 1
                                                 ELSE 0
                                               END)) AS CLWH2_0002
        ,sum(nvl(t5.mon_acm_bal_avg, 0))  as CLWH2_0018_01
        ,sum(nvl(t4.mon_acm_bal_avg, 0))  as CLWH2_0018_02
        ,sum(nvl(t4.mon_acm_bal_avg, 0))/IF( sum(nvl(t5.mon_acm_bal_avg, 0))= 0, NULL, sum(nvl(t5.mon_acm_bal_avg, 0)))  as CLWH2_0018
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1   --客户集市-基础信息-客户基础标识信息
LEFT JOIN    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t3
ON      t1.CST_ID = t3.CST_ID
AND     t3.dt = '${data_dt}'
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T3.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = '${data_dt}'
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN    (
                 SELECT  cst_id
                         ,sum(mon_acm_bal * d2.avg_prc / d2.quo_unt) / substr('${yyyy-1-1231}', 7, 2) AS mon_acm_bal_avg ---月日均余额
                 FROM    edw.dws_bus_fin_ftp_act_smy_inf_dd d1 ----FTP账户信息汇总表
                 LEFT JOIN    edw.dim_bus_com_exr_inf_dd d2   ----汇率信息
                 ON      d1.ccy_cd = d2.ccy_cd
                 AND     d2.dt = ${yyyy-1-1231}
                 WHERE   d1.dt = ${yyyy-1-1231}
                 AND     substr(d1.pd_cd, 1, 4) = '8201' ----筛选存款业务
                 GROUP BY cst_id
             ) T5   ----按客户号对客户的日均进行汇总折成人民币
ON      T1.CST_ID = T5.CST_ID and t1.efe_dep_cst_ind = '1'  --存款有效户标识
LEFT JOIN    (
                 SELECT  cst_id
                         ,sum(mon_acm_bal * d2.avg_prc / d2.quo_unt) / substr('${data_dt}', 7, 2) AS mon_acm_bal_avg ---月日均余额
                 FROM    edw.dws_bus_fin_ftp_act_smy_inf_dd d1 ----FTP账户信息汇总表
                 LEFT JOIN    edw.dim_bus_com_exr_inf_dd d2   ----汇率信息
                 ON      d1.ccy_cd = d2.ccy_cd
                 AND     d2.dt = '${data_dt}'
                 WHERE   d1.dt = '${data_dt}'
                 AND     substr(d1.pd_cd, 1, 4) = '8201' ----筛选存款业务
                 GROUP BY cst_id
             ) T4   ----按客户号对客户的日均进行汇总折成人民币
ON      T1.CST_ID = T4.CST_ID and t1.efe_dep_cst_ind = '1'
WHERE   t1.dt = ${yyyy-1-1231}
AND     nvl(org.tem_org_id, '') <> ''
GROUP BY org.tem_org_id
UNION ALL
SELECT  org.sbr_org_id                               AS ORG_ID
        ,sum(CASE
               WHEN t1.efe_dep_cst_ind = '1' AND t3.efe_dep_cst_ind = '1' THEN 1
               ELSE 0
             END)  AS CLWH2_0002_01
        ,sum(CASE
               WHEN t1.efe_dep_cst_ind = '1' AND t3.efe_dep_cst_ind = '1' THEN 1
               ELSE 0
             END) / IF(sum(CASE
                             WHEN t1.efe_dep_cst_ind = '1' THEN 1
                             ELSE 0
                           END) = 0, NULL, sum(CASE
                                                 WHEN t1.efe_dep_cst_ind = '1' THEN 1
                                                 ELSE 0
                                               END)) AS CLWH2_0002
        ,sum(nvl(t5.mon_acm_bal_avg, 0))  as CLWH2_0018_01
        ,sum(nvl(t4.mon_acm_bal_avg, 0))  as CLWH2_0018_02
        ,sum(nvl(t4.mon_acm_bal_avg, 0))/IF( sum(nvl(t5.mon_acm_bal_avg, 0))= 0, NULL, sum(nvl(t5.mon_acm_bal_avg, 0)))  as CLWH2_0018
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t3
ON      t1.CST_ID = t3.CST_ID
AND     t3.dt = '${data_dt}'
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T3.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = '${data_dt}'
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN    (
                 SELECT  cst_id
                         ,sum(mon_acm_bal * d2.avg_prc / d2.quo_unt) / substr('${yyyy-1-1231}', 7, 2) AS mon_acm_bal_avg ---月日均余额
                 FROM    edw.dws_bus_fin_ftp_act_smy_inf_dd d1 ----FTP账户信息汇总表
                 LEFT JOIN    edw.dim_bus_com_exr_inf_dd d2   ----汇率信息
                 ON      d1.ccy_cd = d2.ccy_cd
                 AND     d2.dt = ${yyyy-1-1231}
                 WHERE   d1.dt = ${yyyy-1-1231}
                 AND     substr(d1.pd_cd, 1, 4) = '8201' ----筛选存款业务
                 GROUP BY cst_id
             ) T5   ----按客户号对客户的日均进行汇总折成人民币
ON      T1.CST_ID = T5.CST_ID and t1.efe_dep_cst_ind = '1'
LEFT JOIN    (
                 SELECT  cst_id
                         ,sum(mon_acm_bal * d2.avg_prc / d2.quo_unt) / substr('${data_dt}', 7, 2) AS mon_acm_bal_avg ---月日均余额
                 FROM    edw.dws_bus_fin_ftp_act_smy_inf_dd d1 ----FTP账户信息汇总表
                 LEFT JOIN    edw.dim_bus_com_exr_inf_dd d2   ----汇率信息
                 ON      d1.ccy_cd = d2.ccy_cd
                 AND     d2.dt = '${data_dt}'
                 WHERE   d1.dt = '${data_dt}'
                 AND     substr(d1.pd_cd, 1, 4) = '8201' ----筛选存款业务
                 GROUP BY cst_id
             ) T4   ----按客户号对客户的日均进行汇总折成人民币
ON      T1.CST_ID = T4.CST_ID and t1.efe_dep_cst_ind = '1'
WHERE   t1.dt = ${yyyy-1-1231}
AND     nvl(org.sbr_org_id, '') <> ''
GROUP BY org.sbr_org_id
UNION ALL
SELECT  org.brc_org_id                               AS ORG_ID
        ,sum(CASE
               WHEN t1.efe_dep_cst_ind = '1' AND t3.efe_dep_cst_ind = '1' THEN 1
               ELSE 0
             END)  AS CLWH2_0002_01
        ,sum(CASE
               WHEN t1.efe_dep_cst_ind = '1' AND t3.efe_dep_cst_ind = '1' THEN 1
               ELSE 0
             END) / IF(sum(CASE
                             WHEN t1.efe_dep_cst_ind = '1' THEN 1
                             ELSE 0
                           END) = 0, NULL, sum(CASE
                                                 WHEN t1.efe_dep_cst_ind = '1' THEN 1
                                                 ELSE 0
                                               END)) AS CLWH2_0002
        ,sum(nvl(t5.mon_acm_bal_avg, 0))  as CLWH2_0018_01
        ,sum(nvl(t4.mon_acm_bal_avg, 0))  as CLWH2_0018_02
        ,sum(nvl(t4.mon_acm_bal_avg, 0))/IF( sum(nvl(t5.mon_acm_bal_avg, 0))= 0, NULL, sum(nvl(t5.mon_acm_bal_avg, 0)))  as CLWH2_0018
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t3
ON      t1.CST_ID = t3.CST_ID
AND     t3.dt = '${data_dt}'
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户主管户信息
ON      T3.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = '${data_dt}'
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN    (
                 SELECT  cst_id
                         ,sum(mon_acm_bal * d2.avg_prc / d2.quo_unt) / substr('${yyyy-1-1231}', 7, 2) AS mon_acm_bal_avg ---月日均余额
                 FROM    edw.dws_bus_fin_ftp_act_smy_inf_dd d1 ----FTP账户信息汇总表
                 LEFT JOIN    edw.dim_bus_com_exr_inf_dd d2   ----汇率信息
                 ON      d1.ccy_cd = d2.ccy_cd
                 AND     d2.dt = ${yyyy-1-1231}
                 WHERE   d1.dt = ${yyyy-1-1231}
                 AND     substr(d1.pd_cd, 1, 4) = '8201' ----筛选存款业务
                 GROUP BY cst_id
             ) T5   ----按客户号对客户的日均进行汇总折成人民币
ON      T1.CST_ID = T5.CST_ID and t1.efe_dep_cst_ind = '1'
LEFT JOIN    (
                 SELECT  cst_id
                         ,sum(mon_acm_bal * d2.avg_prc / d2.quo_unt) / substr('${data_dt}', 7, 2) AS mon_acm_bal_avg ---月日均余额
                 FROM    edw.dws_bus_fin_ftp_act_smy_inf_dd d1 ----FTP账户信息汇总表
                 LEFT JOIN    edw.dim_bus_com_exr_inf_dd d2   ----汇率信息
                 ON      d1.ccy_cd = d2.ccy_cd
                 AND     d2.dt = '${data_dt}'
                 WHERE   d1.dt = '${data_dt}'
                 AND     substr(d1.pd_cd, 1, 4) = '8201' ----筛选存款业务
                 GROUP BY cst_id
             ) T4   ----按客户号对客户的日均进行汇总折成人民币
ON      T1.CST_ID = T4.CST_ID and t1.efe_dep_cst_ind = '1'
WHERE   t1.dt = ${yyyy-1-1231}
AND     nvl(org.brc_org_id, '') <> ''
GROUP BY org.brc_org_id
;

drop table if exists LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_02 purge;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_02 AS
SELECT  org.tem_org_id                               AS ORG_ID
        ,sum(CASE
               WHEN t1.efe_loan_cst_ind = '1' AND t3.efe_loan_cst_ind = '1' THEN 1
               ELSE 0
             END)    AS CLWH2_0003_01
        ,sum(CASE
               WHEN t1.efe_loan_cst_ind = '1' AND t3.efe_loan_cst_ind = '1' THEN 1
               ELSE 0
             END) / IF(sum(CASE
                             WHEN t1.efe_loan_cst_ind = '1' THEN 1
                             ELSE 0
                           END) = 0, NULL, sum(CASE
                                                 WHEN t1.efe_loan_cst_ind = '1' THEN 1
                                                 ELSE 0
                                               END)) AS CLWH2_0003
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t3
ON      t1.CST_ID = t3.CST_ID
AND     t3.dt = '${data_dt}'
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T3.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = '${data_dt}'
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
WHERE   t1.dt = ${yyyy-1-1231}
AND     nvl(org.tem_org_id, '') <> ''
GROUP BY org.tem_org_id
UNION ALL
SELECT  org.sbr_org_id                               AS ORG_ID
        ,sum(CASE
               WHEN t1.efe_loan_cst_ind = '1' AND t3.efe_loan_cst_ind = '1' THEN 1
               ELSE 0
             END)    AS CLWH2_0003_01
        ,sum(CASE
               WHEN t1.efe_loan_cst_ind = '1' AND t3.efe_loan_cst_ind = '1' THEN 1
               ELSE 0
             END) / IF(sum(CASE
                             WHEN t1.efe_loan_cst_ind = '1' THEN 1
                             ELSE 0
                           END) = 0, NULL, sum(CASE
                                                 WHEN t1.efe_loan_cst_ind = '1' THEN 1
                                                 ELSE 0
                                               END)) AS CLWH2_0003
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t3
ON      t1.CST_ID = t3.CST_ID
AND     t3.dt = '${data_dt}'
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T3.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = '${data_dt}'
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
WHERE   t1.dt = ${yyyy-1-1231}
AND     nvl(org.sbr_org_id, '') <> ''
GROUP BY org.sbr_org_id
UNION ALL
SELECT  org.brc_org_id                               AS ORG_ID
        ,sum(CASE
               WHEN t1.efe_loan_cst_ind = '1' AND t3.efe_loan_cst_ind = '1' THEN 1
               ELSE 0
             END)    AS CLWH2_0003_01
        ,sum(CASE
               WHEN t1.efe_loan_cst_ind = '1' AND t3.efe_loan_cst_ind = '1' THEN 1
               ELSE 0
             END) / IF(sum(CASE
                             WHEN t1.efe_loan_cst_ind = '1' THEN 1
                             ELSE 0
                           END) = 0, NULL, sum(CASE
                                                 WHEN t1.efe_loan_cst_ind = '1' THEN 1
                                                 ELSE 0
                                               END)) AS CLWH2_0003
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t3
ON      t1.CST_ID = t3.CST_ID
AND     t3.dt = '${data_dt}'
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T3.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = '${data_dt}'
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
WHERE   t1.dt = ${yyyy-1-1231}
AND     nvl(org.brc_org_id, '') <> ''
GROUP BY org.brc_org_id
;

drop table if exists LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_03 purge;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_03 AS
SELECT  org.tem_org_id                               AS ORG_ID
        ,sum(CASE
               WHEN t1.efe_wlth_cst_ind = '1'  THEN 1
               ELSE 0
             END)  AS CLWH2_0004_01
        ,sum(CASE
               WHEN t1.efe_wlth_cst_ind = '1'  THEN 1
               ELSE 0
             END) / IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CLWH2_0004
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${data_dt}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3
ON      org.tem_org_id = t3.org_id
WHERE   t1.dt = ${data_dt}
AND     nvl(org.tem_org_id, '') <> ''
GROUP BY org.tem_org_id,t3.avg_emp_num
union all
SELECT  org.sbr_org_id                               AS ORG_ID
        ,sum(CASE
               WHEN t1.efe_wlth_cst_ind = '1'  THEN 1
               ELSE 0
             END)  AS CLWH2_0004_01
        ,sum(CASE
               WHEN t1.efe_wlth_cst_ind = '1'  THEN 1
               ELSE 0
             END) / IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CLWH2_0004
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${data_dt}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3
ON      org.sbr_org_id = t3.org_id
WHERE   t1.dt = ${data_dt}
AND     nvl(org.sbr_org_id, '') <> ''
GROUP BY org.sbr_org_id,t3.avg_emp_num
union all
SELECT  org.brc_org_id                               AS ORG_ID
        ,sum(CASE
               WHEN t1.efe_wlth_cst_ind = '1'  THEN 1
               ELSE 0
             END)  AS CLWH2_0004_01
        ,sum(CASE
               WHEN t1.efe_wlth_cst_ind = '1'  THEN 1
               ELSE 0
             END) / IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CLWH2_0004
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${data_dt}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3
ON      org.brc_org_id = t3.org_id
WHERE   t1.dt = ${data_dt}
AND     nvl(org.brc_org_id, '') <> ''
GROUP BY org.brc_org_id,t3.avg_emp_num
;

drop table if exists LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_04 purge;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_04 AS
SELECT  org.tem_org_id                               AS ORG_ID
        ,sum(CASE
                      WHEN t1.efe_inter_stl_cst_ind = '1'  THEN 1
                      ELSE 0
                    END)     as CLWH2_0005_01
        ,sum(CASE
               WHEN t1.efe_inter_stl_cst_ind = '1'  THEN 1
               ELSE 0
             END) / IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CLWH2_0005
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${data_dt}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3
ON      org.tem_org_id = t3.org_id
WHERE   t1.dt = ${data_dt}
AND     nvl(org.tem_org_id, '') <> ''
GROUP BY org.tem_org_id,t3.avg_emp_num
union all
SELECT  org.sbr_org_id                               AS ORG_ID
        ,sum(CASE
                      WHEN t1.efe_inter_stl_cst_ind = '1'  THEN 1
                      ELSE 0
                    END)     as CLWH2_0005_01
        ,sum(CASE
               WHEN t1.efe_inter_stl_cst_ind = '1'  THEN 1
               ELSE 0
             END) / IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CLWH2_0005
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${data_dt}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3
ON      org.sbr_org_id = t3.org_id
WHERE   t1.dt = ${data_dt}
AND     nvl(org.sbr_org_id, '') <> ''
GROUP BY org.sbr_org_id,t3.avg_emp_num
union all
SELECT  org.brc_org_id                               AS ORG_ID
        ,sum(CASE
                      WHEN t1.efe_inter_stl_cst_ind = '1'  THEN 1
                      ELSE 0
                    END)     as CLWH2_0005_01
        ,sum(CASE
               WHEN t1.efe_inter_stl_cst_ind = '1'  THEN 1
               ELSE 0
             END) / IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CLWH2_0005
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${data_dt}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3
ON      org.brc_org_id = t3.org_id
WHERE   t1.dt = ${data_dt}
AND     nvl(org.brc_org_id, '') <> ''
GROUP BY org.brc_org_id,t3.avg_emp_num
;

drop table if exists LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_05 purge;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_05 AS
SELECT  org.tem_org_id      AS ORG_ID
        ,sum(CASE
                      WHEN t4.efe_loan_cst_ind = '1' THEN 1
                      ELSE 0
                    END)  as  CLWH2_0009_01
        ,sum(CASE
               WHEN t4.efe_loan_cst_ind = '1' THEN 1
               ELSE 0
             END) / count(t1.cst_id)                 as CLWH2_0009
FROM    (
            SELECT  t.cst_id
                    ,sum(t.ctr_amt * T1.AVG_PRC / T1.QUO_UNT) AS sum_ctr_amt
            FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t   --合同基本信息
            INNER JOIN    edw.dim_bus_com_exr_inf_dd t1 --汇率信息表
            ON      t.BSN_CCY_CD = t1.ccy_cd --币种代码
            AND     t1.dt = ${yyyy-1-1231}
            LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
            ON      t.CTR_SERNO = t2.CTR_SERNO
            AND     t2.dt =${yyyy-1-1231}
            WHERE   t.dt = ${yyyy-1-1231}
			AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
            AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
            AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
            AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
            AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
            AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
            --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
            AND     (
             ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
            OR t.CTR_BAL > 0
              )
            AND     NOT EXISTS (
                                   SELECT  'x'
                                   FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t2
                                   WHERE   t.CTR_SERNO = t2.CTR_SERNO
                                   AND     t2.dt = ${yyyy-1-1231}
                                   AND     t2.PRD_NO in ('2001020101003','2001010101003')
                                   AND     t2.CTR_BGN_DT > t2.dt
                               ) --剔除提前续卡随贷通
            GROUP BY t.cst_id
        ) t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = ${data_dt}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN    adm_pub.adm_csm_cbas_ind_inf_dd t4
ON      t1.cst_id = t4.cst_id
AND     t4.dt = ${data_dt}
where  org.tem_org_id <> ''
GROUP BY org.tem_org_id
UNION ALL
SELECT  org.sbr_org_id       AS ORG_ID
        ,sum(CASE
                      WHEN t4.efe_loan_cst_ind = '1' THEN 1
                      ELSE 0
                    END)  as  CLWH2_0009_01
        ,sum(CASE
               WHEN t4.efe_loan_cst_ind = '1' THEN 1
               ELSE 0
             END) / count(t1.cst_id)                 as CLWH2_0009
FROM    (
SELECT  t.cst_id
          ,sum(t.ctr_amt * T1.AVG_PRC / T1.QUO_UNT) AS sum_ctr_amt
            FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t   --合同基本信息
            INNER JOIN    edw.dim_bus_com_exr_inf_dd t1 --汇率信息表
            ON      t.BSN_CCY_CD = t1.ccy_cd --币种代码
            AND     t1.dt = ${yyyy-1-1231}
            LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
            ON      t.CTR_SERNO = t2.CTR_SERNO
            AND     t2.dt =${yyyy-1-1231}
            WHERE   t.dt = ${yyyy-1-1231}
           	AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
            AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
            AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
            AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
            AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
            AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
            --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
            AND     (
             ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
            OR t.CTR_BAL > 0
              )
            AND     NOT EXISTS (
                                   SELECT  'x'
                                   FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t2
                                   WHERE   t.CTR_SERNO = t2.CTR_SERNO
                                   AND     t2.dt = ${yyyy-1-1231}
                                   AND     t2.PRD_NO in ('2001020101003','2001010101003')
                                   AND     t2.CTR_BGN_DT > t2.dt
                               ) --剔除提前续卡随贷通
            GROUP BY t.cst_id
        ) t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = ${data_dt}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN    adm_pub.adm_csm_cbas_ind_inf_dd t4
ON      t1.cst_id = t4.cst_id
AND     t4.dt = ${data_dt}
where  org.sbr_org_id <> ''
GROUP BY org.sbr_org_id
UNION ALL
SELECT  org.brc_org_id       AS ORG_ID
        ,sum(CASE
                      WHEN t4.efe_loan_cst_ind = '1' THEN 1
                      ELSE 0
                    END)  as  CLWH2_0009_01
        ,sum(CASE
               WHEN t4.efe_loan_cst_ind = '1' THEN 1
               ELSE 0
             END) / count(t1.cst_id)                 as CLWH2_0009
FROM    (
 SELECT  t.cst_id
                    ,sum(t.ctr_amt * T1.AVG_PRC / T1.QUO_UNT) AS sum_ctr_amt
            FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t   --合同基本信息
            INNER JOIN    edw.dim_bus_com_exr_inf_dd t1 --汇率信息表
            ON      t.BSN_CCY_CD = t1.ccy_cd --币种代码
            AND     t1.dt = ${yyyy-1-1231}
            LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
            ON      t.CTR_SERNO = t2.CTR_SERNO
            AND     t2.dt =${yyyy-1-1231}
            WHERE   t.dt = ${yyyy-1-1231}
          	AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
            AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
            AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
            AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
            AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
            AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
            --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
            AND     (
             ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
            OR t.CTR_BAL > 0
              )
            AND     NOT EXISTS (
                                   SELECT  'x'
                                   FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t2
                                   WHERE   t.CTR_SERNO = t2.CTR_SERNO
                                   AND     t2.dt = ${yyyy-1-1231}
                                   AND     t2.PRD_NO in ('2001020101003','2001010101003')
                                   AND     t2.CTR_BGN_DT > t2.dt
                               ) --剔除提前续卡随贷通
            GROUP BY t.cst_id
        ) t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = ${data_dt}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN    adm_pub.adm_csm_cbas_ind_inf_dd t4
ON      t1.cst_id = t4.cst_id
AND     t4.dt = ${data_dt}
where  org.brc_org_id <> ''
GROUP BY org.brc_org_id
;

drop table if exists LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_06 purge;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_06 AS
SELECT  t1.tem_org_id                        AS ORG_ID
        ,(t1.CUR_VAL1+t2.CUR_VAL2)    as   CLWH2_0011_01
        ,(t1.CUR_VAL1+t2.CUR_VAL2)/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CLWH2_0011
from (
SELECT  org.tem_org_id
        ,sum(t1.dep_bal_mon_avg) - sum(t4.dep_bal_mon_avg) AS CUR_VAL1
FROM    adm_pub.adm_csm_cbus_dep_inf_dd t1   --客户集市-业务信息-客户存款业务信息表
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2  --客户主管护
ON      t1.cst_id = t2.cst_id
AND     t2.dt = ${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd t4
ON      t1.cst_id = t4.cst_id
AND     t4.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt},'yyyymmdd'),-1,'yyyy'),'yyyy'),'1231')
WHERE   t1.dt = ${data_dt}
and     t1.dep_bal_mon_avg - nvl(t4.dep_bal_mon_avg, 0) > 0
AND     t1.cst_id NOT IN (
                             SELECT  t1.cst_id
                             FROM    edw.dws_bus_dep_act_inf_dd t1
                             WHERE   t1.dt = ${data_dt}
                             GROUP BY t1.cst_id
                              HAVING min(t1.opn_dt) >= CONCAT(TO_CHAR(TO_DATE(${data_dt},'yyyymmdd'),'yyyy'),'0101')
                         )
and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id
)t1  --存量存款客户增额规模
LEFT JOIN (
SELECT  org.tem_org_id
        ,sum(t1.dep_bal_mon_avg) - nvl(sum(t4.dep_bal_mon_avg),0)  AS CUR_VAL2
FROM    adm_pub.adm_csm_cbus_dep_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = ${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd t4
ON      t1.cst_id = t4.cst_id
AND     t4.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
WHERE   t1.dt = ${data_dt}
AND     t1.dep_bal_mon_avg - nvl(t4.dep_bal_mon_avg, 0) < 0
and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id
)t2 on t1.tem_org_id=t2.tem_org_id
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
where dt= ${data_dt}
GROUP BY org_id
) t3
ON      t1.tem_org_id = t3.org_id
GROUP BY t1.tem_org_id,t1.CUR_VAL1,t2.CUR_VAL2, t3.avg_emp_num
union ALL
SELECT  t1.sbr_org_id                        AS ORG_ID
        ,(t1.CUR_VAL1+t2.CUR_VAL2)    as   CLWH2_0011_01
        ,(t1.CUR_VAL1+t2.CUR_VAL2)/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CLWH2_0011
from (
SELECT  org.sbr_org_id
        ,sum(t1.dep_bal_mon_avg) - sum(t4.dep_bal_mon_avg) AS CUR_VAL1
FROM    adm_pub.adm_csm_cbus_dep_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = ${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd t4
ON      t1.cst_id = t4.cst_id
AND     t4.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt},'yyyymmdd'),-1,'yyyy'),'yyyy'),'1231')
WHERE   t1.dt = ${data_dt}
and     t1.dep_bal_mon_avg - nvl(t4.dep_bal_mon_avg, 0) > 0
AND     t1.cst_id NOT IN (
                             SELECT  t1.cst_id
                             FROM    edw.dws_bus_dep_act_inf_dd t1
                             WHERE   t1.dt = ${data_dt}
                             GROUP BY t1.cst_id
                              HAVING min(t1.opn_dt) >= CONCAT(TO_CHAR(TO_DATE(${data_dt},'yyyymmdd'),'yyyy'),'0101')
                         )
and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id
)t1  --增额客户较年初增额规模
LEFT JOIN (
SELECT  org.sbr_org_id
        ,sum(t1.dep_bal_mon_avg) - nvl(sum(t4.dep_bal_mon_avg),0)  AS CUR_VAL2
FROM    adm_pub.adm_csm_cbus_dep_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = ${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd t4
ON      t1.cst_id = t4.cst_id
AND     t4.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
WHERE   t1.dt = ${data_dt}
AND     t1.dep_bal_mon_avg - nvl(t4.dep_bal_mon_avg, 0) < 0
-- AND     t1.dep_bal_mon_avg > 0
and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id
)t2 on t1.sbr_org_id=t2.sbr_org_id   --减额客户较年初减额规模
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
where dt= ${data_dt}
GROUP BY org_id
) t3
ON      t1.sbr_org_id = t3.org_id
group by t1.sbr_org_id,t1.CUR_VAL1,t2.CUR_VAL2 , t3.avg_emp_num
union ALL
SELECT  t1.brc_org_id                        AS ORG_ID
        ,(t1.CUR_VAL1+t2.CUR_VAL2)    as   CLWH2_0011_01
        ,(t1.CUR_VAL1+t2.CUR_VAL2)/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CLWH2_0011
from (
SELECT  org.brc_org_id
        ,sum(t1.dep_bal_mon_avg) - sum(t4.dep_bal_mon_avg) AS CUR_VAL1
FROM    adm_pub.adm_csm_cbus_dep_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = ${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd t4
ON      t1.cst_id = t4.cst_id
AND     t4.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt},'yyyymmdd'),-1,'yyyy'),'yyyy'),'1231')
WHERE   t1.dt = ${data_dt}
and     t1.dep_bal_mon_avg - nvl(t4.dep_bal_mon_avg, 0) > 0
AND     t1.cst_id NOT IN (
                             SELECT  t1.cst_id
                             FROM    edw.dws_bus_dep_act_inf_dd t1
                             WHERE   t1.dt = ${data_dt}
                             GROUP BY t1.cst_id
                              HAVING min(t1.opn_dt) >= CONCAT(TO_CHAR(TO_DATE(${data_dt},'yyyymmdd'),'yyyy'),'0101')
                         )
and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id
)t1  --存量存款客户增额规模
LEFT JOIN (
SELECT  org.brc_org_id
        ,sum(t1.dep_bal_mon_avg) - nvl(sum(t4.dep_bal_mon_avg), 0)  AS CUR_VAL2
FROM    adm_pub.adm_csm_cbus_dep_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = ${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd t4
ON      t1.cst_id = t4.cst_id
AND     t4.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
WHERE   t1.dt = ${data_dt}
AND     t1.dep_bal_mon_avg - nvl(t4.dep_bal_mon_avg, 0) < 0
and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id
)t2 on t1.brc_org_id=t2.brc_org_id
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
where dt= ${data_dt}
GROUP BY org_id
) t3
ON      t1.brc_org_id = t3.org_id
group by t1.brc_org_id,t1.CUR_VAL1,t2.CUR_VAL2 , t3.avg_emp_num
;

drop table if exists LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_07 purge;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_07 AS
SELECT  org.tem_org_id                               AS ORG_ID
        ,sum(t1.inc_cst_num)       as  CLWH2_0012_01
        ,sum(t1.inc_cst_num)/IF(sum(t1.last_opr_cst_num) = 0, NULL, sum(t1.last_opr_cst_num) )      AS CLWH2_0012
from app_rpt.fct_cst_opr_loan_prt_dd t1   --经营性信贷客户当年流失与增减额情况报表
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t1.org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
where t1.dt=${data_dt}
and  t1.rsk_hidden_cd='剔除风险退出'
and  t1.org_type='T'
GROUP BY org.tem_org_id
union all
SELECT  org.sbr_org_id                               AS ORG_ID
        ,sum(t1.inc_cst_num)       as  CLWH2_0012_01
        ,sum(t1.inc_cst_num)/IF(sum(t1.last_opr_cst_num) = 0, NULL, sum(t1.last_opr_cst_num) )      AS CLWH2_0012
from app_rpt.fct_cst_opr_loan_prt_dd t1  --经营性信贷客户当年流失与增减额情况报表
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t1.org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
where t1.dt=${data_dt}
and  t1.rsk_hidden_cd='剔除风险退出'
and  t1.org_type='Z'
GROUP BY org.sbr_org_id
union all
SELECT  org.brc_org_id                               AS ORG_ID
        ,sum(t1.inc_cst_num)       as  CLWH2_0012_01
        ,sum(t1.inc_cst_num)/IF(sum(t1.last_opr_cst_num) = 0, NULL, sum(t1.last_opr_cst_num) )      AS CLWH2_0012
from app_rpt.fct_cst_opr_loan_prt_dd t1
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t1.org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
where t1.dt=${data_dt}
and  t1.rsk_hidden_cd='剔除风险退出'
and  t1.org_type='F'
GROUP BY org.brc_org_id
;

drop table if exists LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_08 purge;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_08 AS
SELECT  org.tem_org_id                               AS ORG_ID
        ,sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t4.loan_bal_acs_mon_avg
               ELSE 0
             END)   as  CLWH2_0014_01
        ,sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.loan_bal_acs_mon_avg
               ELSE 0
             END)   as  CLWH2_0014_02
        ,(sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t4.loan_bal_acs_mon_avg
               ELSE 0
             END) -  sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.loan_bal_acs_mon_avg
               ELSE 0
             END)) / IF(sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.loan_bal_acs_mon_avg
               ELSE 0
             END) = 0, NULL, sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.loan_bal_acs_mon_avg
               ELSE 0
             END)) AS   CLWH2_0014
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1  --客户基础标识
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${yyyy-1-1231}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN    ADM_PUB.adm_csm_cbus_loan_inf_dd t3   --客户集市-业务信息-客户贷款业务信息表
ON      t1.CST_ID = t3.CST_ID
AND     t3.dt = ${yyyy-1-1231}
LEFT JOIN    ADM_PUB.adm_csm_cbus_loan_inf_dd t4   --客户集市-业务信息-客户贷款业务信息表
ON      t1.CST_ID = t4.CST_ID
AND     t4.dt = ${data_dt}
WHERE   t1.dt = ${yyyy-1-1231}
AND     nvl(org.tem_org_id, '') <> ''
GROUP BY org.tem_org_id
UNION ALL
SELECT  org.sbr_org_id                               AS ORG_ID
        ,sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t4.loan_bal_acs_mon_avg
               ELSE 0
             END)   as  CLWH2_0014_01
        ,sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.loan_bal_acs_mon_avg
               ELSE 0
             END)   as  CLWH2_0014_02
        ,(sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t4.loan_bal_acs_mon_avg
               ELSE 0
             END) -  sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.loan_bal_acs_mon_avg
               ELSE 0
             END)) / IF(sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.loan_bal_acs_mon_avg
               ELSE 0
             END) = 0, NULL, sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.loan_bal_acs_mon_avg
               ELSE 0
             END)) AS   CLWH2_0014
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT =${yyyy-1-1231}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN    ADM_PUB.adm_csm_cbus_loan_inf_dd t3
ON      t1.CST_ID = t3.CST_ID
AND     t3.dt = ${yyyy-1-1231}
LEFT JOIN    ADM_PUB.adm_csm_cbus_loan_inf_dd t4
ON      t1.CST_ID = t4.CST_ID
AND     t4.dt = ${data_dt}
WHERE   t1.dt = ${yyyy-1-1231}
AND     nvl(org.sbr_org_id, '') <> ''
GROUP BY org.sbr_org_id
UNION ALL
SELECT  org.brc_org_id                               AS ORG_ID
        ,sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t4.loan_bal_acs_mon_avg
               ELSE 0
             END)   as  CLWH2_0014_01
        ,sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.loan_bal_acs_mon_avg
               ELSE 0
             END)   as  CLWH2_0014_02
        ,(sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t4.loan_bal_acs_mon_avg
               ELSE 0
             END) -  sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.loan_bal_acs_mon_avg
               ELSE 0
             END)) / IF(sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.loan_bal_acs_mon_avg
               ELSE 0
             END) = 0, NULL, sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.loan_bal_acs_mon_avg
               ELSE 0
             END)) AS   CLWH2_0014
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${yyyy-1-1231}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN    ADM_PUB.adm_csm_cbus_loan_inf_dd t3
ON      t1.CST_ID = t3.CST_ID
AND     t3.dt = ${yyyy-1-1231}
LEFT JOIN    ADM_PUB.adm_csm_cbus_loan_inf_dd t4
ON      t1.CST_ID = t4.CST_ID
AND     t4.dt = ${data_dt}
WHERE   t1.dt = ${yyyy-1-1231}
AND     nvl(org.brc_org_id, '') <> ''
GROUP BY org.brc_org_id
;

drop table if exists LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_09 purge;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_09 AS
SELECT  org.tem_org_id                               AS ORG_ID
        ,sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t4.mon_acm_prcp_bal_acml_avg
               ELSE 0
             END)   as  CLWH2_0015_01
        ,sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.mon_acm_prcp_bal_acml_avg
               ELSE 0
             END)   as  CLWH2_0015_02
        ,(sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t4.mon_acm_prcp_bal_acml_avg
               ELSE 0
             END)-sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.mon_acm_prcp_bal_acml_avg
               ELSE 0
             END)) / IF(sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.mon_acm_prcp_bal_acml_avg
               ELSE 0
             END) = 0, NULL, sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.mon_acm_prcp_bal_acml_avg
               ELSE 0
             END)) AS CLWH2_0015
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${yyyy-1-1231}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN    (
                 SELECT  TT4.cst_id
                         ,SUM(NVL(TT4.mon_acm_prcp_bal_acml * TT5.avg_prc / 100, 0)) / substr(${yyyy-1-1231}, 7, 2) AS mon_acm_prcp_bal_acml_avg
                 FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD TT3   ----信贷合同信息表
                 INNER JOIN    edw.dws_bus_loan_dbil_inf_dd TT4   ----贷款借据信息汇总表
                 ON      TT3.CTR_SERNO = TT4.bus_ctr_id    ----信贷合同编号关联
                 AND     TT4.DT = ${yyyy-1-1231}
                 LEFT JOIN    edw.dim_bus_com_exr_inf_dd TT5   ----汇率信息
                 ON      tt4.ccy_cd = tt5.ccy_cd
                 AND     TT5.DT = ${yyyy-1-1231}
                 WHERE   TT3.DT = ${yyyy-1-1231}
                 AND     (
				          SUBSTR(TT3.PRD_NO,1,6) IN ('200102','100101','100105')  --200102 个人经营性贷款, 流动资金贷款  100101 ,固定资产贷款 100105
                       OR SUBSTR(TT3.PRD_NO, 1, 4) IN ( '1003')
					     )
                 AND     TT3.BSN_MARK_CD <> '04'--业务标识代码重组,   01	员工贷款 04	重组业务 05	协作业务 03	预保预报业务
                 AND     ( TT3.CTR_BAL > 0 --余额>0
                     OR ( TT3.CTR_BAL = 0
                 AND     TT3.CTR_MTU_DT >= ${yyyy-1-1231} --约定到期日期大于等于当前
                 AND     NVL(TT3.CTR_STS_CD, ' ')  IN ( '2' , '4' ) --个人经营性贷款业务未到期、未终结---冻结状态代码
                 AND     TT3.TMT_DT = '18991231' --终结日期=18991231即为合同未终结
) --合同未结清
)
                 GROUP BY TT4.cst_id
             ) t3
ON      t1.CST_ID = t3.CST_ID
LEFT JOIN    (
                 SELECT  TT4.cst_id
                         ,SUM(NVL(TT4.mon_acm_prcp_bal_acml * TT5.avg_prc / 100, 0)) / substr(${data_dt}, 7, 2) AS mon_acm_prcp_bal_acml_avg
                 FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD TT3   ----信贷合同信息表
                 INNER JOIN    edw.dws_bus_loan_dbil_inf_dd TT4   ----贷款借据信息汇总表
                 ON      TT3.CTR_SERNO = TT4.bus_ctr_id    ----信贷合同编号关联
                 AND     TT4.DT = ${data_dt}
                 LEFT JOIN    edw.dim_bus_com_exr_inf_dd TT5   ----汇率信息
                 ON      tt4.ccy_cd = tt5.ccy_cd
                 AND     TT5.DT = ${data_dt}
                 WHERE   TT3.DT = ${data_dt}
                 AND     (
				          SUBSTR(TT3.PRD_NO,1,6) IN ('200102','100101','100105')  --200102 个人经营性贷款, 流动资金贷款  100101 ,固定资产贷款 100105
                       OR SUBSTR(TT3.PRD_NO, 1, 4) IN ( '1003')
					     )
                 AND     TT3.BSN_MARK_CD <> '04'--业务标识代码重组,   01	员工贷款 04	重组业务 05	协作业务 03	预保预报业务
                 AND     ( TT3.CTR_BAL > 0 --余额>0
                     OR ( TT3.CTR_BAL = 0
                 AND     TT3.CTR_MTU_DT >=${data_dt}--约定到期日期大于等于当前
                 AND     NVL(TT3.CTR_STS_CD, ' ') IN ( '2' , '4' ) --个人经营性贷款业务未到期、未终结---冻结状态代码
                 AND     TT3.TMT_DT = '18991231' --终结日期=18991231即为合同未终结
) --合同未结清
)
                 GROUP BY TT4.cst_id
             ) t4
ON      t1.CST_ID = t4.CST_ID
WHERE   t1.dt = ${yyyy-1-1231}
AND     nvl(org.tem_org_id, '') <> ''
GROUP BY org.tem_org_id
UNION ALL
SELECT  org.sbr_org_id                               AS ORG_ID
        ,sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t4.mon_acm_prcp_bal_acml_avg
               ELSE 0
             END)   as  CLWH2_0015_01
        ,sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.mon_acm_prcp_bal_acml_avg
               ELSE 0
             END)   as  CLWH2_0015_02
        ,(sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t4.mon_acm_prcp_bal_acml_avg
               ELSE 0
             END)-sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.mon_acm_prcp_bal_acml_avg
               ELSE 0
             END)) / IF(sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.mon_acm_prcp_bal_acml_avg
               ELSE 0
             END) = 0, NULL, sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.mon_acm_prcp_bal_acml_avg
               ELSE 0
             END)) AS CLWH2_0015
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${yyyy-1-1231}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN    (
                 SELECT  TT4.cst_id
                         ,SUM(NVL(TT4.mon_acm_prcp_bal_acml * TT5.avg_prc / 100, 0)) / substr(${yyyy-1-1231}, 7, 2) AS mon_acm_prcp_bal_acml_avg
                 FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD TT3   ----信贷合同信息表
                 INNER JOIN    edw.dws_bus_loan_dbil_inf_dd TT4   ----贷款借据信息汇总表
                 ON      TT3.CTR_SERNO = TT4.bus_ctr_id    ----信贷合同编号关联
                 AND     TT4.DT = ${yyyy-1-1231}
                 LEFT JOIN    edw.dim_bus_com_exr_inf_dd TT5   ----汇率信息
                 ON      tt4.ccy_cd = tt5.ccy_cd
                 AND     TT5.DT = ${yyyy-1-1231}
                 WHERE   TT3.DT = ${yyyy-1-1231}
                 AND     (
				          SUBSTR(TT3.PRD_NO,1,6) IN ('200102','100101','100105')  --200102 个人经营性贷款, 流动资金贷款  100101 ,固定资产贷款 100105
                       OR SUBSTR(TT3.PRD_NO, 1, 4) IN ( '1003')
					     )
                 AND     TT3.BSN_MARK_CD <> '04'--业务标识代码重组,   01	员工贷款 04	重组业务 05	协作业务 03	预保预报业务
                 AND     ( TT3.CTR_BAL > 0 --余额>0
                     OR ( TT3.CTR_BAL = 0
                 AND     TT3.CTR_MTU_DT >= ${yyyy-1-1231} --约定到期日期大于等于当前
                 AND     NVL(TT3.CTR_STS_CD, ' ')  IN ( '2' , '4' ) --个人经营性贷款业务未到期、未终结---冻结状态代码
                 AND     TT3.TMT_DT = '18991231' --终结日期=18991231即为合同未终结
) --合同未结清
)
                 GROUP BY TT4.cst_id
             ) t3
ON      t1.CST_ID = t3.CST_ID
LEFT JOIN    (
                 SELECT  TT4.cst_id
                         ,SUM(NVL(TT4.mon_acm_prcp_bal_acml * TT5.avg_prc / 100, 0)) / substr(${data_dt}, 7, 2) AS mon_acm_prcp_bal_acml_avg
                 FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD TT3   ----信贷合同信息表
                 INNER JOIN    edw.dws_bus_loan_dbil_inf_dd TT4   ----贷款借据信息汇总表
                 ON      TT3.CTR_SERNO = TT4.bus_ctr_id    ----信贷合同编号关联
                 AND     TT4.DT = ${data_dt}
                 LEFT JOIN    edw.dim_bus_com_exr_inf_dd TT5   ----汇率信息
                 ON      tt4.ccy_cd = tt5.ccy_cd
                 AND     TT5.DT = ${data_dt}
                 WHERE   TT3.DT = ${data_dt}
                 AND     (
				          SUBSTR(TT3.PRD_NO,1,6) IN ('200102','100101','100105')  --200102 个人经营性贷款, 流动资金贷款  100101 ,固定资产贷款 100105
                       OR SUBSTR(TT3.PRD_NO, 1, 4) IN ( '1003')
					     )
                 AND     TT3.BSN_MARK_CD <> '04'--业务标识代码重组,   01	员工贷款 04	重组业务 05	协作业务 03	预保预报业务
                 AND     ( TT3.CTR_BAL > 0 --余额>0
                     OR ( TT3.CTR_BAL = 0
                 AND     TT3.CTR_MTU_DT >= ${data_dt} --约定到期日期大于等于当前
                 AND     NVL(TT3.CTR_STS_CD, ' ')  IN ( '2' , '4' ) --个人经营性贷款业务未到期、未终结---冻结状态代码
                 AND     TT3.TMT_DT = '18991231' --终结日期=18991231即为合同未终结
) --合同未结清
)
                 GROUP BY TT4.cst_id
             ) t4
ON      t1.CST_ID = t4.CST_ID
WHERE   t1.dt = ${yyyy-1-1231}
AND     nvl(org.sbr_org_id, '') <> ''
GROUP BY org.sbr_org_id
UNION ALL
SELECT  org.brc_org_id                               AS ORG_ID
        ,sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t4.mon_acm_prcp_bal_acml_avg
               ELSE 0
             END)   as  CLWH2_0015_01
        ,sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.mon_acm_prcp_bal_acml_avg
               ELSE 0
             END)   as  CLWH2_0015_02
        ,(sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t4.mon_acm_prcp_bal_acml_avg
               ELSE 0
             END)-sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.mon_acm_prcp_bal_acml_avg
               ELSE 0
             END)) / IF(sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.mon_acm_prcp_bal_acml_avg
               ELSE 0
             END) = 0, NULL, sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.mon_acm_prcp_bal_acml_avg
               ELSE 0
             END)) AS CLWH2_0015
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${yyyy-1-1231}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN    (
                 SELECT  TT4.cst_id
                         ,SUM(NVL(TT4.mon_acm_prcp_bal_acml * TT5.avg_prc / 100, 0)) / substr(${yyyy-1-1231}, 7, 2) AS mon_acm_prcp_bal_acml_avg
                 FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD TT3   ----信贷合同信息表
                 INNER JOIN    edw.dws_bus_loan_dbil_inf_dd TT4   ----贷款借据信息汇总表
                 ON      TT3.CTR_SERNO = TT4.bus_ctr_id    ----信贷合同编号关联
                 AND     TT4.DT = ${yyyy-1-1231}
                 LEFT JOIN    edw.dim_bus_com_exr_inf_dd TT5   ----汇率信息
                 ON      tt4.ccy_cd = tt5.ccy_cd
                 AND     TT5.DT = ${yyyy-1-1231}
                 WHERE   TT3.DT = ${yyyy-1-1231}
                 AND     (
				          SUBSTR(TT3.PRD_NO,1,6) IN ('200102','100101','100105')  --200102 个人经营性贷款, 流动资金贷款  100101 ,固定资产贷款 100105
                       OR SUBSTR(TT3.PRD_NO, 1, 4) IN ( '1003')
					     )
                 AND     TT3.BSN_MARK_CD <> '04'--业务标识代码重组,   01	员工贷款 04	重组业务 05	协作业务 03	预保预报业务
                 AND     ( TT3.CTR_BAL > 0 --余额>0
                     OR ( TT3.CTR_BAL = 0
                 AND     TT3.CTR_MTU_DT >= ${yyyy-1-1231} --约定到期日期大于等于当前
                 AND     NVL(TT3.CTR_STS_CD, ' ') IN ( '2' , '4' )  --个人经营性贷款业务未到期、未终结---冻结状态代码
                 AND     TT3.TMT_DT = '18991231' --终结日期=18991231即为合同未终结
) --合同未结清
)
                 GROUP BY TT4.cst_id
             ) t3
ON      t1.CST_ID = t3.CST_ID
LEFT JOIN    (
                 SELECT  TT4.cst_id
                         ,SUM(NVL(TT4.mon_acm_prcp_bal_acml * TT5.avg_prc / 100, 0)) / substr(${data_dt}, 7, 2) AS mon_acm_prcp_bal_acml_avg
                 FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD TT3   ----信贷合同信息表
                 INNER JOIN    edw.dws_bus_loan_dbil_inf_dd TT4   ----贷款借据信息汇总表
                 ON      TT3.CTR_SERNO = TT4.bus_ctr_id    ----信贷合同编号关联
                 AND     TT4.DT = ${data_dt}
                 LEFT JOIN    edw.dim_bus_com_exr_inf_dd TT5   ----汇率信息
                 ON      tt4.ccy_cd = tt5.ccy_cd
                 AND     TT5.DT = ${data_dt}
                 WHERE   TT3.DT = ${data_dt}
                 AND     (
				          SUBSTR(TT3.PRD_NO,1,6) IN ('200102','100101','100105')  --200102 个人经营性贷款, 流动资金贷款  100101 ,固定资产贷款 100105
                       OR SUBSTR(TT3.PRD_NO, 1, 4) IN ( '1003')
					     )
                 AND     TT3.BSN_MARK_CD <> '04'--业务标识代码重组,   01	员工贷款 04	重组业务 05	协作业务 03	预保预报业务
                 AND     ( TT3.CTR_BAL > 0 --余额>0
                     OR ( TT3.CTR_BAL = 0
                 AND     TT3.CTR_MTU_DT >= ${data_dt} --约定到期日期大于等于当前
                 AND     NVL(TT3.CTR_STS_CD, ' ') IN ( '2' , '4' ) --个人经营性贷款业务未到期、未终结---冻结状态代码
                 AND     TT3.TMT_DT = '18991231' --终结日期=18991231即为合同未终结
) --合同未结清
)
                 GROUP BY TT4.cst_id
             ) t4
ON      t1.CST_ID = t4.CST_ID
WHERE   t1.dt = ${yyyy-1-1231}
AND     nvl(org.brc_org_id, '') <> ''
GROUP BY org.brc_org_id
;

drop table if exists LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_10 purge;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_10 AS
SELECT  org.tem_org_id                               AS ORG_ID
        ,sum(t1.inc_cst_amt)/IF(sum(t1.last_opr_loan_amt) = 0, NULL, sum(t1.last_opr_loan_amt))  as CLWH2_0017_01
        ,sum(t1.inc_cst_amt)/IF(sum(t1.last_opr_loan_amt) = 0, NULL, sum(t1.last_opr_loan_amt))- sum(t2.inc_cst_amt)/IF(sum(t2.last_opr_loan_amt) = 0, NULL, sum(t2.last_opr_loan_amt))      AS CLWH2_0017
from app_rpt.fct_cst_opr_loan_prt_dd t1
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t1.org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
left join  app_rpt.fct_cst_opr_loan_prt_dd T2
on t1.org_id=t2.org_id and t2.rsk_hidden_cd='剔除风险退出' and t2.org_type='T'
and t2.dt=to_char(TO_DATE(add_months(TO_DATE(t1.dt,'yyyymmdd'),-1),'yyyy-mm-dd'),'yyyymmdd')
where t1.dt=${data_dt}
and  t1.rsk_hidden_cd='剔除风险退出'
and  t1.org_type='T'
and  substr(t1.org_id,1,7)<>'3302052' --剔除钱塘小微
GROUP BY org.tem_org_id
union all
SELECT  org.sbr_org_id                               AS ORG_ID
        ,sum(t1.inc_cst_amt)/IF(sum(t1.last_opr_loan_amt) = 0, NULL, sum(t1.last_opr_loan_amt))  as CLWH2_0017_01
        ,sum(t1.inc_cst_amt)/IF(sum(t1.last_opr_loan_amt) = 0, NULL, sum(t1.last_opr_loan_amt))- sum(t2.inc_cst_amt)/IF(sum(t2.last_opr_loan_amt) = 0, NULL, sum(t2.last_opr_loan_amt))      AS CLWH2_0017
from app_rpt.fct_cst_opr_loan_prt_dd t1
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t1.org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
left join  app_rpt.fct_cst_opr_loan_prt_dd T2
on t1.org_id=t2.org_id and t2.rsk_hidden_cd='剔除风险退出' and t2.org_type='Z'
and t2.dt=to_char(TO_DATE(add_months(TO_DATE(t1.dt,'yyyymmdd'),-1),'yyyy-mm-dd'),'yyyymmdd')
where t1.dt=${data_dt}
and  t1.rsk_hidden_cd='剔除风险退出'
and  t1.org_type='Z'
and  substr(t1.org_id,1,7)<>'3302052' --剔除钱塘小微
GROUP BY org.sbr_org_id
union all
SELECT  org.brc_org_id                               AS ORG_ID
        ,sum(t1.inc_cst_amt)/IF(sum(t1.last_opr_loan_amt) = 0, NULL, sum(t1.last_opr_loan_amt))  as CLWH2_0017_01
        ,sum(t1.inc_cst_amt)/IF(sum(t1.last_opr_loan_amt) = 0, NULL, sum(t1.last_opr_loan_amt))- sum(t2.inc_cst_amt)/IF(sum(t2.last_opr_loan_amt) = 0, NULL, sum(t2.last_opr_loan_amt))      AS CLWH2_0017
from app_rpt.fct_cst_opr_loan_prt_dd t1
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t1.org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
left join  app_rpt.fct_cst_opr_loan_prt_dd T2
on t1.org_id=t2.org_id and t2.rsk_hidden_cd='剔除风险退出' and t2.org_type='F'
and t2.dt=to_char(TO_DATE(add_months(TO_DATE(t1.dt,'yyyymmdd'),-1),'yyyy-mm-dd'),'yyyymmdd')
where t1.dt=${data_dt}
and  t1.rsk_hidden_cd='剔除风险退出'
and  t1.org_type='F'
GROUP BY org.brc_org_id
;



--单独插入钱塘支行缺失指标:该逻辑适用24年以后数据
-- 信贷客户增额率较上月变动	CLWH2_0017
drop table if exists LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_10_QT purge;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_10_QT AS
SELECT  org.tem_org_id                               AS ORG_ID
        ,sum(t1.inc_cst_amt)/IF(sum(t1.last_opr_loan_amt) = 0, NULL, sum(t1.last_opr_loan_amt))  as CLWH2_0017_01
        ,sum(t1.inc_cst_amt)/IF(sum(t1.last_opr_loan_amt) = 0, NULL, sum(t1.last_opr_loan_amt))- sum(t2.inc_cst_amt)/IF(sum(t2.last_opr_loan_amt) = 0, NULL, sum(t2.last_opr_loan_amt))      AS CLWH2_0017
from app_rpt.fct_cst_opr_loan_prt_dd t1
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t1.org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
left join  app_rpt.fct_cst_opr_loan_prt_dd T2
on t1.org_id=t2.org_id and t2.rsk_hidden_cd='剔除风险退出' and t2.org_type in ('Z','T')
and t2.dt=to_char(TO_DATE(add_months(TO_DATE(t1.dt,'yyyymmdd'),-1),'yyyy-mm-dd'),'yyyymmdd')
where t1.dt=${data_dt}
and  t1.rsk_hidden_cd='剔除风险退出'
and  t1.org_type='T'
and  substr(t1.org_id,1,7)='3302052' --单独插入钱塘小微
GROUP BY org.tem_org_id
union all
SELECT  org.sbr_org_id                               AS ORG_ID
        ,sum(t1.inc_cst_amt)/IF(sum(t1.last_opr_loan_amt) = 0, NULL, sum(t1.last_opr_loan_amt))  as CLWH2_0017_01
        ,sum(t1.inc_cst_amt)/IF(sum(t1.last_opr_loan_amt) = 0, NULL, sum(t1.last_opr_loan_amt))- sum(t2.inc_cst_amt)/IF(sum(t2.last_opr_loan_amt) = 0, NULL, sum(t2.last_opr_loan_amt))      AS CLWH2_0017
from app_rpt.fct_cst_opr_loan_prt_dd t1
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t1.org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
left join  app_rpt.fct_cst_opr_loan_prt_dd T2
on t1.org_id=t2.org_id and t2.rsk_hidden_cd='剔除风险退出' and t2.org_type in ('Z','H')
and t2.dt=to_char(TO_DATE(add_months(TO_DATE(t1.dt,'yyyymmdd'),-1),'yyyy-mm-dd'),'yyyymmdd')
where t1.dt=${data_dt}
and  t1.rsk_hidden_cd='剔除风险退出'
and  t1.org_type='Z'
and  substr(t1.org_id,1,7)='3302052' --单独插入钱塘小微
GROUP BY org.sbr_org_id
;





--**************************新增拓面**********************************
DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_XZTM_01;
CREATE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_XZTM_01 as
select  org.tem_org_id   as org_id
        ,count(distinct if(t5.cst_id is null,t1.cst_id,null))  as  XZTM_0002
        ,sum(if(t5.cst_id is null,t1.ctr_amt,0))/10000            as  XZTM_0003
        ,count(distinct if(t5.cst_id is null,t1.cst_id,null))/if(count(distinct t1.cst_id)=0,null,count(distinct t1.cst_id)) XZTM_0001
from    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t1  --合同基础信息
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
on      t1.cst_id = t2.cst_id
and     t2.dt = '${data_dt}'
LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD L --合同其它明细信息
ON      t1.CTR_SERNO = L.CTR_SERNO
AND     L.dt ='${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
inner JOIN    (
                SELECT  t.cst_id
                    ,sum(t.ctr_amt) AS sum_ctr_amt
            FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t   --合同基本信息
            LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
            ON      t.CTR_SERNO = t2.CTR_SERNO
            AND     t2.dt ='${data_dt}'
            WHERE   t.dt = '${data_dt}'
           	AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
            AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
            AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
            AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
            AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
            AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
            --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
            AND     (
             ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
            OR t.CTR_BAL > 0
              )
            GROUP BY t.cst_id
            HAVING sum(t.ctr_amt) >= 10000 ----金额1万元（含）以上
              ) t4
ON      t1.cst_id = t4.cst_id
left join (
    SELECT  distinct cst_id
    FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t5
    WHERE   t5.dt = to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'yyyy'), -1, 'dd'), 'yyyymmdd')
    AND     ( t5.PRD_NO NOT IN ( '2001010101002' , '2001020101002' )
                OR t5.CTR_STS_CD <> '') --剔除未签约的泰e贷
) t5 on t1.cst_id=t5.cst_id
where   1 = 1
	AND     T1.PRD_NO <> '2002010101001' --剔除信用卡合同
  AND     T1.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
  AND     ( L.APLY_CHNL_CD <> 'L08' OR T1.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
  AND     T1.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
  AND     T1.PRD_NO <> '2001010101010' --剔除百度分期贷
  AND     ( T1.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(T1.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
  --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
  AND     (
   ( T1.CTR_STS_CD IN ( '2' , '4' ) AND T1.TMT_DT = '18991231' AND to_date(T1.CTR_MTU_DT, 'yyyyMMdd') >= to_date(T1.dt, 'yyyyMMdd') )
  OR T1.CTR_BAL  > 0
    )
and     t1.CTR_BGN_DT >= to_char(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'yyyy'), 'yyyymmdd')   --本年新增授信
and     t1.dt = '${data_dt}'
and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id
union all
select  org.sbr_org_id   as org_id
        ,count(distinct if(t5.cst_id is null,t1.cst_id,null))  as  XZTM_0002
        ,sum(if(t5.cst_id is null,t1.ctr_amt,0))/10000            as  XZTM_0003
        ,count(distinct if(t5.cst_id is null,t1.cst_id,null))/if(count(distinct t1.cst_id)=0,null,count(distinct t1.cst_id)) XZTM_0001
from    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
on      t1.cst_id = t2.cst_id
and     t2.dt = '${data_dt}'
LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD L --合同其它明细信息
ON      t1.CTR_SERNO = L.CTR_SERNO
AND     L.dt ='${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
inner JOIN    (
                  SELECT  t.cst_id
                          ,sum(t.ctr_amt) AS sum_ctr_amt
                  FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t
                  LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
                  ON      t.CTR_SERNO = t2.CTR_SERNO
                  AND     t2.dt ='${data_dt}'
                  WHERE   t.dt = '${data_dt}'
                           	AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
            AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
            AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
            AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
            AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
            AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
            --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
            AND     (
             ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
            OR t.CTR_BAL > 0
              )
                  GROUP BY t.cst_id
                   HAVING sum(t.ctr_amt) >= 10000 ----金额1万元（含）以上
              ) t4
ON      t1.cst_id = t4.cst_id
left join (
    SELECT  distinct cst_id
    FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t5
    WHERE   t5.dt = to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'yyyy'), -1, 'dd'), 'yyyymmdd')
    AND     ( t5.PRD_NO NOT IN ( '2001010101002' , '2001020101002' ) OR t5.CTR_STS_CD <> '') --剔除未签约的泰e贷
) t5 on t1.cst_id=t5.cst_id
where   1 = 1
AND     T1.PRD_NO <> '2002010101001' --剔除信用卡合同
AND     T1.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
AND     ( L.APLY_CHNL_CD <> 'L08' OR T1.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
AND     T1.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
AND     T1.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     ( T1.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(T1.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
--未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
AND     (
 ( T1.CTR_STS_CD IN ( '2' , '4' ) AND T1.TMT_DT = '18991231' AND to_date(T1.CTR_MTU_DT, 'yyyyMMdd') >= to_date(T1.dt, 'yyyyMMdd') )
OR T1.CTR_BAL  > 0
  )
and     t1.CTR_BGN_DT >= to_char(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'yyyy'), 'yyyymmdd')   --本年新增授信
and     t1.dt = '${data_dt}'
and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id
union all
select  org.brc_org_id   as org_id
        ,count(distinct if(t5.cst_id is null,t1.cst_id,null))  as  XZTM_0002
        ,sum(if(t5.cst_id is null,t1.ctr_amt,0))/10000            as  XZTM_0003
        ,count(distinct if(t5.cst_id is null,t1.cst_id,null))/if(count(distinct t1.cst_id)=0,null,count(distinct t1.cst_id)) XZTM_0001
from    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
on      t1.cst_id = t2.cst_id
and     t2.dt = '${data_dt}'
LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD L --合同其它明细信息
ON      t1.CTR_SERNO = L.CTR_SERNO
AND     L.dt ='${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
inner JOIN    (
                  SELECT  t.cst_id
                          ,sum(t.ctr_amt) AS sum_ctr_amt
                  FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t
                  LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
                  ON      t.CTR_SERNO = t2.CTR_SERNO
                  AND     t2.dt ='${data_dt}'
                  WHERE   t.dt = '${data_dt}'
                    	AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
            AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
            AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
            AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
            AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
            AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
            --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
            AND     (
             ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
            OR t.CTR_BAL > 0
              )
                  GROUP BY t.cst_id
                   HAVING sum(t.ctr_amt) >= 10000 ----金额1万元（含）以上
              ) t4
ON      t1.cst_id = t4.cst_id
left join (
    SELECT  distinct cst_id
    FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t5
    WHERE   t5.dt = to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'yyyy'), -1, 'dd'), 'yyyymmdd')
    AND     ( t5.PRD_NO NOT IN ( '2001010101002' , '2001020101002' )
                OR t5.CTR_STS_CD <> '' ) --剔除未签约的泰e贷
) t5 on t1.cst_id=t5.cst_id
where   1 = 1
AND     T1.PRD_NO <> '2002010101001' --剔除信用卡合同
AND     T1.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
AND     ( L.APLY_CHNL_CD <> 'L08' OR T1.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
AND     T1.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
AND     T1.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     ( T1.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(T1.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
--未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
AND     (
 ( T1.CTR_STS_CD IN ( '2' , '4' ) AND T1.TMT_DT = '18991231' AND to_date(T1.CTR_MTU_DT, 'yyyyMMdd') >= to_date(T1.dt, 'yyyyMMdd') )
OR T1.CTR_BAL  > 0
  )
and     t1.CTR_BGN_DT >= to_char(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'yyyy'), 'yyyymmdd')   --本年新增授信
and     t1.dt = '${data_dt}'
and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id
;

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_XZTM_02;
CREATE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_XZTM_02 as
SELECT  org.tem_org_id   as org_id
        ,sum(t.mon_acm_prcp_bal_acml * t1.avg_prc / t1.quo_unt /
                  (datediff(to_date('${data_dt}', 'yyyymmdd'), datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), 'dd') + 1)) AS XZTM_0004
FROM    edw.dws_bus_loan_dbil_inf_dd t   --
inner join    edw.dim_bus_com_exr_inf_dd t1 --汇率信息表
on      t.ccy_cd = t1.ccy_cd --币种代码
and     t1.dt = '${data_dt}'
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      t.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD L --合同其它明细信息
ON      t.bus_ctr_id = L.CTR_SERNO
AND     L.dt ='${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
INNER JOIN    (
                  SELECT  t.cst_id
                          ,sum(t.ctr_amt) AS sum_ctr_amt
                  FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t   --合同基础信息
                  LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
                  ON      t.CTR_SERNO = t2.CTR_SERNO
                  AND     t2.dt ='${data_dt}'
                  WHERE   t.dt = '${data_dt}'
                  and     not exists (select 1 from edw.DIM_BUS_LOAN_CTR_BSE_INF_DD a
                                       where 1 = 1
                                         and t.cst_id = a.cst_id
                                         and (a.PRD_NO NOT IN ( '2001010101002' , '2001020101002' ) OR a.CTR_STS_CD <> '') --剔除未签约的泰e贷
                                         and a.dt = to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'yyyy'), -1, 'dd'), 'yyyymmdd'))
                 AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
                 AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
                 AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
                 AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
                 AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
                 AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
                 --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
                 AND     (
                  ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
                 OR t.CTR_BAL > 0
                 )
			      AND     t.CTR_BGN_DT >= to_char(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'yyyy'), 'yyyymmdd')   --本年新增授信
                  GROUP BY t.cst_id
                   HAVING sum(t.ctr_amt) >= 10000 ----金额1万元（含）以上
              ) t4
ON      t.cst_id = t4.cst_id
LEFT JOIN edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t5
ON      t.bus_ctr_id = t5.CTR_SERNO
AND     t5.dt = '${data_dt}'
WHERE   1 = 1
AND     (t.mon_acm_prcp_bal_acml > 0 or t.prcp_bal > 0)
AND     t5.PRD_NO NOT LIKE '1002%' ----剔除票据
AND     t5.BSN_MARK_CD NOT IN ( '01' ) --剔除 员工贷款    01	员工贷款 04	重组业务 05	协作业务 03	预保预报业务
AND     (
   L.APLY_CHNL_cd <> 'L08'    --渠道代码，金融云
              or   t5.PRD_NO <> '2001010101007' ) --剔除 小鱼分期
AND     t5.PRD_NO <> '2001010101008' --剔除 蚂蚁借呗
AND     t5.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     (t5.PRD_NO NOT IN ( '2001010101002' , '2001020101002' )
                OR t5.CTR_STS_CD <> '' ) --剔除未签约的泰e贷
AND     t.dt = '${data_dt}'
and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id

union all
SELECT  org.sbr_org_id   as org_id
        ,sum(t.mon_acm_prcp_bal_acml * t1.avg_prc / t1.quo_unt /
                  (datediff(to_date('${data_dt}', 'yyyymmdd'), datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), 'dd') + 1)) AS XZTM_0004
FROM    edw.dws_bus_loan_dbil_inf_dd t
inner join    edw.dim_bus_com_exr_inf_dd t1 --汇率信息表
on      t.ccy_cd = t1.ccy_cd --币种代码
and     t1.dt = '${data_dt}'
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      t.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD L --合同其它明细信息
ON       t.bus_ctr_id  = L.CTR_SERNO
AND     L.dt ='${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
INNER JOIN    (
                  SELECT  t.cst_id
                          ,sum(t.ctr_amt) AS sum_ctr_amt
                  FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t
                  LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
                  ON      t.CTR_SERNO = t2.CTR_SERNO
                  AND     t2.dt ='${data_dt}'
                  WHERE   t.dt = '${data_dt}'
                  and     not exists (select 1 from edw.DIM_BUS_LOAN_CTR_BSE_INF_DD a
                                       where 1 = 1
                                         and t.cst_id = a.cst_id
                                         and (a.PRD_NO NOT IN ( '2001010101002' , '2001020101002' ) OR a.CTR_STS_CD <> '') --剔除未签约的泰e贷
                                         and a.dt = to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'yyyy'), -1, 'dd'), 'yyyymmdd'))
                 AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
                 AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
                 AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
                 AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
                 AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
                 AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
                 --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
                 AND     (
                  ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
                 OR t.CTR_BAL > 0
                 )
                  AND     t.CTR_BGN_DT >= to_char(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'yyyy'), 'yyyymmdd')   --本年新增授信
                  GROUP BY t.cst_id
                   HAVING sum(t.ctr_amt) >= 10000 ----金额1万元（含）以上
              ) t4
ON      t.cst_id = t4.cst_id
LEFT JOIN edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t5
ON      t.bus_ctr_id = t5.CTR_SERNO
AND     t5.dt = '${data_dt}'
WHERE   1 = 1
AND     (t.mon_acm_prcp_bal_acml > 0 or t.prcp_bal > 0)
AND     t5.PRD_NO NOT LIKE '1002%' ----剔除票据
AND     t5.BSN_MARK_CD NOT IN ( '01' ) --剔除 员工贷款    01	员工贷款 04	重组业务 05	协作业务 03	预保预报业务
AND     (
L.APLY_CHNL_cd <> 'L08'  --渠道代码，金融云
            or     t5.PRD_NO <> '2001010101007' ) --剔除 小鱼分期
AND     t5.PRD_NO <> '2001010101008' --剔除 蚂蚁借呗
AND     t5.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     (t5.PRD_NO NOT IN ( '2001010101002' , '2001020101002' )
                OR t5.CTR_STS_CD <> '' ) --剔除未签约的泰e贷
AND     t.dt = '${data_dt}'
and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id

union all
SELECT  org.brc_org_id   as org_id
        ,sum(t.mon_acm_prcp_bal_acml * t1.avg_prc / t1.quo_unt /
                  (datediff(to_date('${data_dt}', 'yyyymmdd'), datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), 'dd') + 1)) AS XZTM_0004
FROM    edw.dws_bus_loan_dbil_inf_dd t
inner join    edw.dim_bus_com_exr_inf_dd t1 --汇率信息表
on      t.ccy_cd = t1.ccy_cd --币种代码
and     t1.dt = '${data_dt}'
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      t.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD L --合同其它明细信息
ON       t.bus_ctr_id  = L.CTR_SERNO
AND     L.dt ='${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
INNER JOIN    (
                  SELECT  t.cst_id
                          ,sum(t.ctr_amt) AS sum_ctr_amt
                  FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t
                  LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
                  ON      t.CTR_SERNO = t2.CTR_SERNO
                  AND     t2.dt ='${data_dt}'
				  WHERE   t.dt = '${data_dt}'
                  and     not exists (select 1 from edw.DIM_BUS_LOAN_CTR_BSE_INF_DD a
                                       where 1 = 1
                                         and t.cst_id = a.cst_id
                                         and (a.PRD_NO NOT IN ( '2001010101002' , '2001020101002' ) OR a.CTR_STS_CD <> '') --剔除未签约的泰e贷
                                         and a.dt = to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'yyyy'), -1, 'dd'), 'yyyymmdd'))
                            AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
                 AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
                 AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
                 AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
                 AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
                 AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
                 --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
                 AND     (
                  ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
                 OR t.CTR_BAL > 0
                 )
                  AND     t.CTR_BGN_DT >= to_char(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'yyyy'), 'yyyymmdd')   --本年新增授信
                  GROUP BY t.cst_id
                   HAVING sum(t.ctr_amt) >= 10000 ----金额1万元（含）以上
              ) t4
ON      t.cst_id = t4.cst_id
LEFT JOIN edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t5
ON      t.bus_ctr_id = t5.CTR_SERNO
AND     t5.dt = '${data_dt}'
WHERE   1 = 1
AND     (t.mon_acm_prcp_bal_acml > 0 or t.prcp_bal > 0)
AND     t5.PRD_NO NOT LIKE '1002%' ----剔除票据
AND     t5.BSN_MARK_CD NOT IN ( '01' ) --剔除 员工贷款    01	员工贷款 04	重组业务 05	协作业务 03	预保预报业务
AND     (
  L.APLY_CHNL_cd <> 'L08'  --渠道代码，金融云
               or    t5.PRD_NO <> '2001010101007' ) --剔除 小鱼分期
AND     t5.PRD_NO <> '2001010101008' --剔除 蚂蚁借呗
AND     t5.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     (t5.PRD_NO NOT IN ( '2001010101002' , '2001020101002') OR t5.CTR_STS_CD <> '' ) --剔除未签约的泰e贷
AND     t.dt = '${data_dt}'
and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id
;

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_XZTM_03;
CREATE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_XZTM_03 as
SELECT  org.tem_org_id as org_id
        ,count(DISTINCT t1.cst_id) AS XZTM_0008
        ,sum(case when substr(t1.cst_id,1,1) in (0,2,6,8) then 1 else 0 end) AS XZTM2_0007
        ,count(DISTINCT decode(t5.efe_dep_cst_ind, '1', t1.cst_id, null))                as XZTM_0011
        ,sum(if(t1.cst_id is not null,t4.dep_bal_mon_avg, 0))            AS XZTM_0009
FROM  adm_pub.adm_csm_cbus_dep_inf_dd t4
left join (
            SELECT  t1.cst_id
                    ,min(t1.opn_dt)
            FROM    edw.dws_bus_dep_act_inf_dd t1 --存款账户信息汇总
            WHERE   t1.dt = '${data_dt}'
            GROUP BY t1.cst_id
             HAVING min(t1.opn_dt) >= to_char(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'yyyy'), 'yyyymmdd')
        ) t1 ON t1.cst_id = t4.cst_id
AND     t4.dt = '${data_dt}'
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      t4.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN   adm_pub.adm_csm_cbas_ind_inf_dd t5
ON      t4.cst_id = t5.cst_id
AND     t5.dt = '${data_dt}'
where t4.dt='${data_dt}'
and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id
union all
SELECT  org.sbr_org_id as org_id
        ,count(DISTINCT t1.cst_id) AS XZTM_0008
        ,sum(case when substr(t1.cst_id,1,1) in (0,2,6,8) then 1 else 0 end) AS XZTM2_0007
        ,count(DISTINCT decode(t5.efe_dep_cst_ind, '1', t1.cst_id, null))                as XZTM_0011
        ,sum(if(t1.cst_id is not null,t4.dep_bal_mon_avg, 0))            AS XZTM_0009
FROM  adm_pub.adm_csm_cbus_dep_inf_dd t4
left join (
            SELECT  t1.cst_id
                    ,min(t1.opn_dt)
            FROM    edw.dws_bus_dep_act_inf_dd t1 --存款账户信息汇总
            WHERE   t1.dt = '${data_dt}'
            GROUP BY t1.cst_id
             HAVING min(t1.opn_dt) >= to_char(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'yyyy'), 'yyyymmdd')
        ) t1 ON t1.cst_id = t4.cst_id
AND     t4.dt = '${data_dt}'
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      t4.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN   adm_pub.adm_csm_cbas_ind_inf_dd t5
ON      t4.cst_id = t5.cst_id
AND     t5.dt = '${data_dt}'
where t4.dt='${data_dt}'
and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id
union all
SELECT  org.brc_org_id as org_id
        ,count(DISTINCT t1.cst_id) AS XZTM_0008
        ,sum(case when substr(t1.cst_id,1,1) in (0,2,6,8) then 1 else 0 end) AS XZTM2_0007
        ,count(DISTINCT decode(t5.efe_dep_cst_ind, '1', t1.cst_id, null))                as XZTM_0011
        ,sum(if(t1.cst_id is not null,t4.dep_bal_mon_avg, 0))            AS XZTM_0009
FROM  adm_pub.adm_csm_cbus_dep_inf_dd t4
left join (
            SELECT  t1.cst_id
                    ,min(t1.opn_dt)
            FROM    edw.dws_bus_dep_act_inf_dd t1 --存款账户信息汇总
            WHERE   t1.dt = '${data_dt}'
            GROUP BY t1.cst_id
             HAVING min(t1.opn_dt) >= to_char(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'yyyy'), 'yyyymmdd')
        ) t1 ON t1.cst_id = t4.cst_id
AND     t4.dt = '${data_dt}'
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      t4.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN   adm_pub.adm_csm_cbas_ind_inf_dd t5
ON      t4.cst_id = t5.cst_id
AND     t5.dt = '${data_dt}'
where t4.dt='${data_dt}'
and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id
;

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_XZTM_04;
CREATE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_XZTM_04 as
SELECT  org.tem_org_id              as ORG_ID
        ,count(DISTINCT t1.cst_id)              as XZTM2_0002_01
        ,count(DISTINCT t1.cst_id)/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )     AS XZTM2_0002
FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t1   --合同基础信息
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = ${data_dt}
LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD L --合同其它明细信息
ON      t1.CTR_SERNO = L.CTR_SERNO
AND     L.dt =${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id  and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3
on nvl(org.tem_org_id, '0') = nvl(t3.org_id, '0')
INNER JOIN    (
                  SELECT  t.cst_id
                          ,sum(t.ctr_amt) AS sum_ctr_amt
                  FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t   --合同基础信息
                  LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
                  ON      t.CTR_SERNO = t2.CTR_SERNO
                  AND     t2.dt =${data_dt}
                  WHERE   t.dt = ${data_dt}
                   AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
                 AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
                 AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
                 AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
                 AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
                 AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
                 --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
                 AND     (
                  ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
                 OR t.CTR_BAL > 0
                 )
                  GROUP BY t.cst_id
                   HAVING sum(t.ctr_amt) >= 10000
 ----金额1万元（含）以上
              ) t4
ON      t1.cst_id = t4.cst_id
INNER JOIN    (
                  SELECT  distinct cst_id
                  FROM    adm_pub.adm_csm_cbas_ind_inf_dd
                  WHERE   dt = ${data_dt}
                  AND     efe_loan_cst_ind = '1'
 ---有效信贷户标识
              ) t5
ON      t1.cst_id = t5.cst_id
WHERE   1 = 1
AND     NOT EXISTS (
                       SELECT  1
                       FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t5
                       WHERE   t1.cst_id = t5.cst_id
                       AND     t5.dt = to_char(dateadd(datetrunc(to_date(${data_dt}, 'yyyymmdd'), 'yyyy'), - 1, 'dd'), 'yyyymmdd')
                       AND     ( t5.PRD_NO NOT IN ( '2001010101002' , '2001020101002' ) OR t5.CTR_STS_CD <> '') --剔除未签约的泰e贷
                   )
AND     T1.PRD_NO <> '2002010101001' --剔除信用卡合同
AND     T1.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
AND     ( L.APLY_CHNL_CD <> 'L08' OR T1.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
AND     T1.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
AND     T1.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     ( T1.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(T1.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
--未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
AND     (
 ( T1.CTR_STS_CD IN ( '2' , '4' ) AND T1.TMT_DT = '18991231' AND to_date(T1.CTR_MTU_DT, 'yyyyMMdd') >= to_date(T1.dt, 'yyyyMMdd') )
OR T1.CTR_BAL  > 0
  )
AND     t1.CTR_BGN_DT >= to_char(datetrunc(to_date(${data_dt}, 'yyyymmdd'), 'yyyy'), 'yyyymmdd') --本年新增授信
AND     t1.dt = ${data_dt}
and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id,t3.avg_emp_num

union all
SELECT  org.sbr_org_id              as ORG_ID
        ,count(DISTINCT t1.cst_id)              as XZTM2_0002_01
        ,count(DISTINCT t1.cst_id)/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )     AS XZTM2_0002
FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = ${data_dt}
LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD L --合同其它明细信息
ON      t1.CTR_SERNO = L.CTR_SERNO
AND     L.dt =${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id  and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3
on nvl(org.sbr_org_id, '0') = nvl(t3.org_id, '0')
INNER JOIN    (
                  SELECT  t.cst_id
                          ,sum(t.ctr_amt) AS sum_ctr_amt
                  FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t
                  LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
                  ON      t.CTR_SERNO = t2.CTR_SERNO
                  AND     t2.dt =${data_dt}
                  WHERE   t.dt = ${data_dt}
                           AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
                 AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
                 AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
                 AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
                 AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
                 AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
                 --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
                 AND     (
                  ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
                 OR t.CTR_BAL > 0
                 )
                  GROUP BY t.cst_id
                   HAVING sum(t.ctr_amt) >= 10000
              ) t4
ON      t1.cst_id = t4.cst_id
INNER JOIN    (
                  SELECT  distinct cst_id
                  FROM    adm_pub.adm_csm_cbas_ind_inf_dd
                  WHERE   dt = ${data_dt}
                  AND     efe_loan_cst_ind = '1'
              ) t5
ON      t1.cst_id = t5.cst_id
WHERE   1 = 1
AND     NOT EXISTS (
                       SELECT  1
                       FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t5
                       WHERE   t1.cst_id = t5.cst_id
                       AND     t5.dt = to_char(dateadd(datetrunc(to_date(${data_dt}, 'yyyymmdd'), 'yyyy'), - 1, 'dd'), 'yyyymmdd')
                       AND     ( t5.PRD_NO NOT IN ( '2001010101002' , '2001020101002' ) OR t5.CTR_STS_CD <> '') --剔除未签约的泰e贷
                   )
AND     T1.PRD_NO <> '2002010101001' --剔除信用卡合同
AND     T1.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
AND     ( L.APLY_CHNL_CD <> 'L08' OR T1.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
AND     T1.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
AND     T1.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     ( T1.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(T1.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
--未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
AND     (
 ( T1.CTR_STS_CD IN ( '2' , '4' ) AND T1.TMT_DT = '18991231' AND to_date(T1.CTR_MTU_DT, 'yyyyMMdd') >= to_date(T1.dt, 'yyyyMMdd') )
OR T1.CTR_BAL  > 0
  )
AND     t1.CTR_BGN_DT >= to_char(datetrunc(to_date(${data_dt}, 'yyyymmdd'), 'yyyy'), 'yyyymmdd') --本年新增授信
AND     t1.dt = ${data_dt}
and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id,t3.avg_emp_num

union all
SELECT  org.brc_org_id              as ORG_ID
        ,count(DISTINCT t1.cst_id)              as XZTM2_0002_01
        ,count(DISTINCT t1.cst_id)/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )     AS XZTM2_0002
FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = ${data_dt}
LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD L --合同其它明细信息
ON      t1.CTR_SERNO = L.CTR_SERNO
AND     L.dt =${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id  and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3
on nvl(org.brc_org_id, '0') = nvl(t3.org_id, '0')
INNER JOIN    (
                  SELECT  t.cst_id
                          ,sum(t.ctr_amt) AS sum_ctr_amt
                  FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t
                  LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
                  ON      t.CTR_SERNO = t2.CTR_SERNO
                  AND     t2.dt =${data_dt}
                  WHERE   t.dt = ${data_dt}
                           AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
                 AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
                 AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
                 AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
                 AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
                 AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
                 --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
                 AND     (
                  ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
                 OR t.CTR_BAL > 0
                 )
                  GROUP BY t.cst_id
                   HAVING sum(t.ctr_amt) >= 10000
              ) t4
ON      t1.cst_id = t4.cst_id
INNER JOIN    (
                  SELECT  distinct cst_id
                  FROM    adm_pub.adm_csm_cbas_ind_inf_dd
                  WHERE   dt = ${data_dt}
                  AND     efe_loan_cst_ind = '1'
              ) t5
ON      t1.cst_id = t5.cst_id
WHERE   1 = 1
AND     NOT EXISTS (
                       SELECT  1
                       FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t5
                       WHERE   t1.cst_id = t5.cst_id
                       AND     t5.dt = to_char(dateadd(datetrunc(to_date(${data_dt}, 'yyyymmdd'), 'yyyy'), - 1, 'dd'), 'yyyymmdd')
                       AND     ( t5.PRD_NO NOT IN ( '2001010101002' , '2001020101002' ) OR t5.CTR_STS_CD <> '') --剔除未签约的泰e贷
                   )
AND     T1.PRD_NO <> '2002010101001' --剔除信用卡合同
AND     T1.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
AND     ( L.APLY_CHNL_CD <> 'L08' OR T1.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
AND     T1.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
AND     T1.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     ( T1.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(T1.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
--未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
AND     (
 ( T1.CTR_STS_CD IN ( '2' , '4' ) AND T1.TMT_DT = '18991231' AND to_date(T1.CTR_MTU_DT, 'yyyyMMdd') >= to_date(T1.dt, 'yyyyMMdd') )
OR T1.CTR_BAL  > 0
  )
AND     t1.CTR_BGN_DT >= to_char(datetrunc(to_date(${data_dt}, 'yyyymmdd'), 'yyyy'), 'yyyymmdd') --本年新增授信
AND     t1.dt = ${data_dt}
and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id,t3.avg_emp_num
;





**备份2.0_to立英_T1HGL_ORG_TAG_IND_DD_2_DWJS_DJGL_1.sql
-- ODPS SQL
-- **********************************************************************
-- 功能描述:
-- **
-- 创建者: 卫少洁
-- 创建日期: 2023-08-28 16:24:19
-- **
-- 修改日志:
-- 修改日期          修改人          修改内容
-- **
-- **********************************************************************

--**************************队伍建设**********************************
drop table if exists LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_01 purge;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_01 AS
SELECT  A.org_id as ORG_ID
        ,A.COUNT_NUM   as  DWJS2_0001_01
        ,nvl(B.COUNT_NUM, 0)  as DWJS2_0001_02
        ,nvl(B.COUNT_NUM, 0) / A.COUNT_NUM AS DWJS2_0001
FROM    (
            SELECT  org.tem_org_id org_id
                    ,count(1) AS COUNT_NUM
            FROM    edw.dws_hr_empe_inf_dd t
            left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
            WHERE   t.dt = '${data_dt}'
                AND t.empe_sts_cd = '2'
                and nvl(org.tem_org_id,'')<>''
            GROUP BY org.tem_org_id
            union all
            SELECT  org.sbr_org_id org_id
                    ,count(1) AS COUNT_NUM
            FROM    edw.dws_hr_empe_inf_dd t
            left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
            WHERE   t.dt = '${data_dt}'
                AND t.empe_sts_cd = '2'
                and nvl(org.sbr_org_id,'')<>''
            GROUP BY org.sbr_org_id
            union all
            SELECT  org.brc_org_id org_id
                    ,count(1) AS COUNT_NUM
            FROM    edw.dws_hr_empe_inf_dd t
            left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
            WHERE   t.dt = '${data_dt}'
                AND t.empe_sts_cd = '2'
                and nvl(org.brc_org_id,'')<>''
            GROUP BY org.brc_org_id
        ) A
LEFT JOIN    (
                 SELECT  org.tem_org_id org_id
                         ,count(1) AS COUNT_NUM
                 FROM    edw.dws_hr_empe_inf_dd t
                 left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
                 WHERE   t.dt = '${data_dt}'
                    AND     t.quit_dt BETWEEN to_char(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'yyyy'), 'yyyymmdd') AND '${data_dt}'
                    AND     t.empe_sts_cd = '3'
                    and nvl(org.tem_org_id,'')<>''
                 GROUP BY org.tem_org_id
                 union all
                 SELECT  org.sbr_org_id org_id
                         ,count(1) AS COUNT_NUM
                 FROM    edw.dws_hr_empe_inf_dd t
                 left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
                 WHERE   t.dt = '${data_dt}'
                    AND     t.quit_dt BETWEEN to_char(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'yyyy'), 'yyyymmdd') AND '${data_dt}'
                    AND     t.empe_sts_cd = '3'
                --     AND t.empe_sts_cd = '2'
                    and nvl(org.sbr_org_id,'')<>''
                 GROUP BY org.sbr_org_id
                 union all
                 SELECT  org.brc_org_id org_id
                         ,count(1) AS COUNT_NUM
                 FROM    edw.dws_hr_empe_inf_dd t
                 left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
                 WHERE   t.dt = '${data_dt}'
                    AND     t.quit_dt BETWEEN to_char(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'yyyy'), 'yyyymmdd') AND '${data_dt}'
                    AND     t.empe_sts_cd = '3'
                --     AND t.empe_sts_cd = '2'
                    and nvl(org.brc_org_id,'')<>''
                 GROUP BY org.brc_org_id
             ) B
ON      A.org_id = B.org_id
;

drop table if exists LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_02 purge;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_02 AS
SELECT  org.tem_org_id as ORG_ID
        ,count(distinct t1.EMPE_ID) as DWJS2_0004_01
        ,count(distinct t1.EMPE_ID)/IF(t3.emp_num = 0, NULL, t3.emp_num ) as DWJS2_0004
FROM    edw.dws_hr_empe_inf_dd t
inner join edw.dim_hr_empe_mgr_qua_inf_dd t1   --客户经理资质信息,模型层
on     t.empe_id=t1.EMPE_ID and t1.dt=${data_dt}
LEFT JOIN    edw.dim_hr_org_job_inf_dd p  --职位信息
ON      t.pos_enc = p.pos_id
AND     t.dt = p.dt
inner join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  LAB_BIGDATA_DEV.HGL_ORG_KHJL t3
on nvl(org.tem_org_id, '0') = nvl(t3.org_id, '0') and t3.dt=${data_dt} and t3.DATA_DT=${data_dt}
WHERE   1 = 1
and     t.empe_sts_cd='2'  --在职
and     p.dty_id in ('P3010','P3020')
AND     p.pos_nm LIKE '%客户经理%'
and     t1.STS_CD = '1' --状态为启用
and     t1.QUA_SUB_CLS_CD in ('0060003','0060004','0060005','0060006')  --三级及以上调查资质
-- and     t1.VLD_STS_CD = '1' --状态为有效，新表废弃
and     t.dt=${data_dt}
and     nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id,t3.emp_num
union all
SELECT  org.sbr_org_id as ORG_ID
        ,count(distinct t1.EMPE_ID) as DWJS2_0004_01
        ,count(distinct t1.EMPE_ID)/IF(t3.emp_num = 0, NULL, t3.emp_num ) as DWJS2_0004
FROM    edw.dws_hr_empe_inf_dd t
inner join edw.dim_hr_empe_mgr_qua_inf_dd t1  --客户经理资质
on     t.empe_id=t1.EMPE_ID and t1.dt=${data_dt}
LEFT JOIN    edw.dim_hr_org_job_inf_dd p
ON      t.pos_enc = p.pos_id
AND     t.dt = p.dt
inner join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  LAB_BIGDATA_DEV.HGL_ORG_KHJL t3
on nvl(org.sbr_org_id, '0') = nvl(t3.org_id, '0') and t3.dt=${data_dt} and t3.DATA_DT=${data_dt}
WHERE   1 = 1
and     t.empe_sts_cd='2'  --在职
and     p.dty_id in ('P3010','P3020')
AND     p.pos_nm LIKE '%客户经理%'
and     t1.STS_CD = '1' --状态为启用
and     t1.QUA_SUB_CLS_CD in ('0060003','0060004','0060005','0060006')  --三级及以上调查资质
-- and     t1.VLD_STS_CD = '1' --状态为有效
and     t.dt=${data_dt}
and     nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id,t3.emp_num
union all
SELECT  org.brc_org_id as ORG_ID
        ,count(distinct t1.EMPE_ID) as DWJS2_0004_01
        ,count(distinct t1.EMPE_ID)/IF(t3.emp_num = 0, NULL, t3.emp_num ) as DWJS2_0004
FROM    edw.dws_hr_empe_inf_dd t
inner join edw.dim_hr_empe_mgr_qua_inf_dd t1
on     t.empe_id=t1.EMPE_ID and t1.dt=${data_dt}
LEFT JOIN    edw.dim_hr_org_job_inf_dd p
ON      t.pos_enc = p.pos_id
AND     t.dt = p.dt
inner join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  LAB_BIGDATA_DEV.HGL_ORG_KHJL t3
on nvl(org.brc_org_id, '0') = nvl(t3.org_id, '0') and t3.dt=${data_dt} and t3.DATA_DT=${data_dt}
WHERE   1 = 1
and     t.empe_sts_cd='2'  --在职
and     p.dty_id in ('P3010','P3020')
AND     p.pos_nm LIKE '%客户经理%'
and     t1.STS_CD = '1' --状态为启用
and     t1.QUA_SUB_CLS_CD in ('0060003','0060004','0060005','0060006')  --三级及以上调查资质
-- and     t1.VLD_STS_CD = '1' --状态为有效
and     t.dt=${data_dt}
and     nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id,t3.emp_num
;

drop table if exists LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_03 purge;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_03 AS
select  org.tem_org_id                                                            as  ORG_ID
        ,nvl(sum(t.year_acm_bal), 0)/10000                                        as DWJS2_0006_01
        ,nvl(sum(t.year_acm_bal), 0)/10000/ IF(e1.avg_emp_num = 0, NULL, e1.avg_emp_num )      as  DWJS2_0006
from edw.dws_bus_fin_ftp_org_pft_los_inf_dd t  --FTP机构损益信息表
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
where dt= ${data_dt}
GROUP BY org_id
) e1  on nvl(org.tem_org_id, '0') = nvl(e1.org_id, '0')
where     t.dt = '${data_dt}'
and  t.ccy_cd='ZHRMB' --本外币合计
and  t.prj_id_cd in ('03','29') --存款和贷款业务利息净收入
and  t.ORG_TYP_CD='2'  --考核
and   t.org_hbr_cd='6' --团队
and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id,e1.avg_emp_num
union all
select  org.sbr_org_id                                                            as  ORG_ID
        ,nvl(sum(t.year_acm_bal), 0)/10000                                        as DWJS2_0006_01
        ,nvl(sum(t.year_acm_bal), 0)/10000/ IF(e1.avg_emp_num = 0, NULL, e1.avg_emp_num )      as  DWJS2_0006
from edw.dws_bus_fin_ftp_org_pft_los_inf_dd t
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
where dt= ${data_dt}
GROUP BY org_id
) e1  on nvl(org.sbr_org_id, '0') = nvl(e1.org_id, '0')
where     t.dt = '${data_dt}'
and  t.ccy_cd='ZHRMB' --本外币合计
and  t.prj_id_cd in ('03','29') --存款和贷款业务利息净收入
and  t.ORG_TYP_CD='2'  --考核
and   t.org_hbr_cd='5' --支行
and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id, e1.avg_emp_num
union all
select  org.brc_org_id                                                            as  ORG_ID
        ,nvl(sum(t.year_acm_bal), 0)/10000                                        as DWJS2_0006_01
        ,nvl(sum(t.year_acm_bal), 0)/10000/ IF(e1.avg_emp_num = 0, NULL, e1.avg_emp_num )      as  DWJS2_0006
from edw.dws_bus_fin_ftp_org_pft_los_inf_dd t
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
where dt= ${data_dt}
GROUP BY org_id
) e1  on nvl(org.brc_org_id, '0') = nvl(e1.org_id, '0')
where     t.dt = '${data_dt}'
and  t.ccy_cd='ZHRMB' --本外币合计
and  t.prj_id_cd in ('03','29') --存款和贷款业务利息净收入
and  t.ORG_TYP_CD='2'  --考核
and   t.org_hbr_cd='3' --分行
and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id, e1.avg_emp_num
;

drop table if exists LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_04 purge;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_04 AS
select  org.tem_org_id                                                            as  ORG_ID
        ,nvl(sum(t.year_acm_bal), 0)/10000                                        as  DWJS2_0007_01
       ,nvl(sum(t.year_acm_bal), 0)/10000/ IF(e1.avg_emp_num = 0, NULL, e1.avg_emp_num )      as  DWJS2_0007
from edw.dws_bus_fin_ftp_org_pft_los_inf_dd t
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
where dt= ${data_dt}
GROUP BY org_id
) e1  on nvl(org.tem_org_id, '0') = nvl(e1.org_id, '0')
where     t.dt = '${data_dt}'
and  t.ccy_cd='ZHRMB' --本外币合计
and  t.prj_id_cd='29' --存款业务利息净收入
and  t.ORG_TYP_CD='2'  --考核
and   t.org_hbr_cd='6' --团队
and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id, e1.avg_emp_num
union all
select  org.sbr_org_id                                                            as  ORG_ID
        ,nvl(sum(t.year_acm_bal), 0)/10000                                        as  DWJS2_0007_01
       ,nvl(sum(t.year_acm_bal), 0)/10000/ IF(e1.avg_emp_num = 0, NULL, e1.avg_emp_num )      as  DWJS2_0007
from edw.dws_bus_fin_ftp_org_pft_los_inf_dd t
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
where dt= ${data_dt}
GROUP BY org_id
) e1  on nvl(org.sbr_org_id, '0') = nvl(e1.org_id, '0')
where     t.dt = '${data_dt}'
and  t.ccy_cd='ZHRMB' --本外币合计
and  t.prj_id_cd='29' --存款业务利息净收入
and  t.ORG_TYP_CD='2'  --考核
and   t.org_hbr_cd='5' --支行
and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id, e1.avg_emp_num
union all
select  org.brc_org_id                                                            as  ORG_ID
        ,nvl(sum(t.year_acm_bal), 0)/10000                                        as  DWJS2_0007_01
       ,nvl(sum(t.year_acm_bal), 0)/10000/ IF(e1.avg_emp_num = 0, NULL, e1.avg_emp_num )      as  DWJS2_0007
from edw.dws_bus_fin_ftp_org_pft_los_inf_dd t
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
where dt= ${data_dt}
GROUP BY org_id
) e1  on nvl(org.brc_org_id, '0') = nvl(e1.org_id, '0')
where     t.dt = '${data_dt}'
and  t.ccy_cd='ZHRMB' --本外币合计
and  t.prj_id_cd='29' --存款业务利息净收入
and  t.ORG_TYP_CD='2'  --考核
and   t.org_hbr_cd='3' --分行
and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id, e1.avg_emp_num
;

drop table if exists LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_05 purge;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_05 AS
select  org.tem_org_id                                                            as  ORG_ID
        ,nvl(sum(t.year_acm_bal), 0)/10000                                        as DWJS2_0008_01
       ,nvl(sum(t.year_acm_bal), 0)/10000/ IF(e1.avg_emp_num = 0, NULL, e1.avg_emp_num )      as  DWJS2_0008
from edw.dws_bus_fin_ftp_org_pft_los_inf_dd t
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) e1  on nvl(org.tem_org_id, '0') = nvl(e1.org_id, '0')
where     t.dt = '${data_dt}'
and  t.ccy_cd='ZHRMB' --本外币合计
and  t.prj_id_cd='03' --贷款业务利息净收入
and  t.ORG_TYP_CD='2'  --考核
and   t.org_hbr_cd='6' --团队
and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id, e1.avg_emp_num
union all
select  org.sbr_org_id                                                            as  ORG_ID
        ,nvl(sum(t.year_acm_bal), 0)/10000                                        as DWJS2_0008_01
       ,nvl(sum(t.year_acm_bal), 0)/10000/ IF(e1.avg_emp_num = 0, NULL, e1.avg_emp_num )      as  DWJS2_0008
from edw.dws_bus_fin_ftp_org_pft_los_inf_dd t
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) e1  on nvl(org.sbr_org_id, '0') = nvl(e1.org_id, '0')
where     t.dt = '${data_dt}'
and  t.ccy_cd='ZHRMB' --本外币合计
and  t.prj_id_cd='03' --贷款业务利息净收入
and  t.ORG_TYP_CD='2'  --考核
and   t.org_hbr_cd='5' --支行
and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id, e1.avg_emp_num
union all
select  org.brc_org_id                                                            as  ORG_ID
        ,nvl(sum(t.year_acm_bal), 0)/10000                                        as DWJS2_0008_01
       ,nvl(sum(t.year_acm_bal), 0)/10000/ IF(e1.avg_emp_num = 0, NULL, e1.avg_emp_num )      as  DWJS2_0008
from edw.dws_bus_fin_ftp_org_pft_los_inf_dd t
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) e1  on nvl(org.brc_org_id, '0') = nvl(e1.org_id, '0')
where     t.dt = '${data_dt}'
and  t.ccy_cd='ZHRMB' --本外币合计
and  t.prj_id_cd='03' --贷款业务利息净收入
and  t.ORG_TYP_CD='2'  --考核
and   t.org_hbr_cd='3' --分行
and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id, e1.avg_emp_num
;

drop table if exists LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_06 purge;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_06 AS
select  org.tem_org_id                                                            as  ORG_ID
        ,nvl(sum(t1.mth_avg_amt), 0)/10000                                        as DWJS2_0009_01
        ,nvl(sum(t1.mth_avg_amt), 0)/10000/ IF(e1.avg_emp_num = 0, NULL, e1.avg_emp_num )      as  DWJS2_0009
from    app_rpt.fct_ifd_mgr_dep_pd_rlpty t1 ---普惠金融部-存款分产品统计表
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.acs_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
where dt= ${data_dt}
GROUP BY org_id
) e1  on nvl(org.tem_org_id, '0') = nvl(e1.org_id, '0')
where  t1.dt = '${data_dt}'
and    t1.ACG_STC_MSR_ID  IN (10000000,20000000,30000000,40000000,50000000,60000000)
and  t1.ccy_cd='CN' --本外币合计
and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id, e1.avg_emp_num
union all
select  org.sbr_org_id                                                            as  ORG_ID
        ,nvl(sum(t1.mth_avg_amt), 0)/10000                                        as DWJS2_0009_01
        ,nvl(sum(t1.mth_avg_amt), 0)/10000/ IF(e1.avg_emp_num = 0, NULL, e1.avg_emp_num )      as  DWJS2_0009
from    app_rpt.fct_ifd_mgr_dep_pd_rlpty t1 ---普惠金融部-存款分产品统计表
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.acs_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
where dt= ${data_dt}
GROUP BY org_id
) e1  on nvl(org.sbr_org_id, '0') = nvl(e1.org_id, '0')
where  t1.dt = '${data_dt}'
and    t1.ACG_STC_MSR_ID  IN (10000000,20000000,30000000,40000000,50000000,60000000)
and  t1.ccy_cd='CN' --本外币合计
and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id, e1.avg_emp_num
union all
select  org.brc_org_id                                                            as  ORG_ID
        ,nvl(sum(t1.mth_avg_amt), 0)/10000                                        as DWJS2_0009_01
        ,nvl(sum(t1.mth_avg_amt), 0)/10000/ IF(e1.avg_emp_num = 0, NULL, e1.avg_emp_num )      as  DWJS2_0009
from    app_rpt.fct_ifd_mgr_dep_pd_rlpty t1 ---存款账户管护汇总信息
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.acs_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
where dt= ${data_dt}
GROUP BY org_id
) e1  on nvl(org.brc_org_id, '0') = nvl(e1.org_id, '0')
where  t1.dt = '${data_dt}'
and    t1.ACG_STC_MSR_ID  IN (10000000,20000000,30000000,40000000,50000000,60000000)
and  t1.ccy_cd='CN' --本外币合计
and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id, e1.avg_emp_num
;

drop table if exists LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_07 purge;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_07 AS
SELECT  org.tem_org_id                                                                       as  ORG_ID
        ,round(sum(t.mon_acm_prcp_bal_acml * t1.avg_prc / t1.quo_unt /
                  (datediff(to_date('${data_dt}', 'yyyymmdd'), datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), 'dd') + 1)), 2)     as DWJS2_0010_01
        ,round(sum(t.mon_acm_prcp_bal_acml * t1.avg_prc / t1.quo_unt /
                  (datediff(to_date('${data_dt}', 'yyyymmdd'), datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), 'dd') + 1)), 2)/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )     as  DWJS2_0010
FROM    edw.dws_bus_loan_dbil_inf_dd t   --贷款借据汇总
inner join    edw.dim_bus_com_exr_inf_dd t1 --汇率信息表
on      t1.ccy_cd = t.ccy_cd --币种代码
and     t1.dt = '${data_dt}'
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD L --合同其它明细信息
ON      t.bus_ctr_id = L.CTR_SERNO
AND     L.dt ='${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
INNER JOIN    (
                  SELECT  t.cst_id
                          ,sum(t.ctr_amt) AS sum_ctr_amt
                  FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t  --合同基础信息
                 LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
                 ON      t.CTR_SERNO = t2.CTR_SERNO
                AND     t2.dt ='${data_dt}'
                  WHERE   t.dt = '${data_dt}'
                  AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
                 AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
                 AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
                 AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
                 AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
                 AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
                 --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
                 AND     (
                  ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
                 OR t.CTR_BAL > 0
                 )
                  GROUP BY t.cst_id
                   HAVING sum(t.ctr_amt) >= 10000 ----金额1万元（含）以上
              ) t4
ON      t.cst_id = t4.cst_id
LEFT JOIN edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t5
ON      t.bus_ctr_id = t5.CTR_SERNO
AND     t5.dt = '${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= '${data_dt}'
GROUP BY org_id
) t3  on nvl(org.tem_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = '${data_dt}'
)
AND     (t.mon_acm_prcp_bal_acml > 0 or t.prcp_bal > 0)
AND     t5.PRD_NO NOT LIKE '1002%' ----剔除票据
AND     t5.BSN_MARK_CD NOT IN ( '01' ) --剔除 员工贷款    01	员工贷款 04	重组业务 05	协作业务 03	预保预报业务
and  L.APLY_CHNL_cd <> 'L08'  --渠道代码，金融云
AND     (
  -- t5.APLY_CHNL_cd <> 'L08'  --渠道代码，金融云
                t5.PRD_NO <> '2001010101007' ) --剔除 小鱼分期
AND     t5.PRD_NO <> '2001010101008' --剔除 蚂蚁借呗
AND     t5.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     (t5.PRD_NO NOT IN ( '2001010101002' , '2001020101002') OR t5.CTR_STS_CD <> '' ) --剔除未签约的泰e贷
AND     t.dt = '${data_dt}'
and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id, t3.avg_emp_num

UNION ALL
SELECT  org.sbr_org_id                                                                       as  ORG_ID
        ,round(sum(t.mon_acm_prcp_bal_acml * t1.avg_prc / t1.quo_unt /
                  (datediff(to_date('${data_dt}', 'yyyymmdd'), datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), 'dd') + 1)), 2)     as DWJS2_0010_01
        ,round(sum(t.mon_acm_prcp_bal_acml * t1.avg_prc / t1.quo_unt /
                  (datediff(to_date('${data_dt}', 'yyyymmdd'), datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), 'dd') + 1)), 2)/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )     as  DWJS2_0010
FROM    edw.dws_bus_loan_dbil_inf_dd t
inner join    edw.dim_bus_com_exr_inf_dd t1 --汇率信息表
on      t.ccy_cd = t1.ccy_cd --币种代码
and     t1.dt = '${data_dt}'
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD L --合同其它明细信息
ON      t.bus_ctr_id = L.CTR_SERNO
AND     L.dt ='${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
INNER JOIN    (
                  SELECT  t.cst_id
                          ,sum(t.ctr_amt) AS sum_ctr_amt
                  FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t
                 LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
                 ON      t.CTR_SERNO = t2.CTR_SERNO
                AND     t2.dt ='${data_dt}'
                  WHERE   t.dt = '${data_dt}'
                 AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
                 AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
                 AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
                 AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
                 AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
                 AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
                 --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
                 AND     (
                  ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
                 OR t.CTR_BAL > 0
                 )
                  GROUP BY t.cst_id
                   HAVING sum(t.ctr_amt) >= 10000 ----金额1万元（含）以上
              ) t4
ON      t.cst_id = t4.cst_id
LEFT JOIN edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t5  --合同基础信息
ON      t.bus_ctr_id = t5.CTR_SERNO
AND     t5.dt = '${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3  on nvl(org.sbr_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = '${data_dt}'
)
AND     (t.mon_acm_prcp_bal_acml > 0 or t.prcp_bal > 0)
AND     t5.PRD_NO NOT LIKE '1002%' ----剔除票据
AND     t5.BSN_MARK_CD NOT IN ( '01' ) --剔除 员工贷款    01	员工贷款 04	重组业务 05	协作业务 03	预保预报业务
and L.APLY_CHNL_cd <> 'L08'  --渠道代码，金融云
AND     (
  -- t5.APLY_CHNL_cd <> 'L08'  --渠道代码，金融云
                 t5.PRD_NO <> '2001010101007' ) --剔除 小鱼分期
AND     t5.PRD_NO <> '2001010101008' --剔除 蚂蚁借呗
AND     t5.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     (t5.PRD_NO NOT IN ( '2001010101002' , '2001020101002') OR t5.CTR_STS_CD <> '' ) --剔除未签约的泰e贷
AND     t.dt = '${data_dt}'
and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id, t3.avg_emp_num

UNION ALL
SELECT  org.brc_org_id                                                                       as  ORG_ID
        ,round(sum(t.mon_acm_prcp_bal_acml * t1.avg_prc / t1.quo_unt /
                  (datediff(to_date('${data_dt}', 'yyyymmdd'), datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), 'dd') + 1)), 2)     as DWJS2_0010_01
        ,round(sum(t.mon_acm_prcp_bal_acml * t1.avg_prc / t1.quo_unt /
                  (datediff(to_date('${data_dt}', 'yyyymmdd'), datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), 'dd') + 1)), 2)/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )     as  DWJS2_0010
FROM    edw.dws_bus_loan_dbil_inf_dd t
inner join    edw.dim_bus_com_exr_inf_dd t1 --汇率信息表
on      t.ccy_cd = t1.ccy_cd --币种代码
and     t1.dt = '${data_dt}'
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD L --合同其它明细信息
ON      t.bus_ctr_id = L.CTR_SERNO
AND     L.dt ='${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
INNER JOIN    (
                  SELECT  t.cst_id
                          ,sum(t.ctr_amt) AS sum_ctr_amt
                  FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t
                 LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
                 ON      t.CTR_SERNO = t2.CTR_SERNO
                AND     t2.dt ='${data_dt}'
                  WHERE   t.dt = '${data_dt}'
            AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
                 AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
                 AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
                 AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
                 AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
                 AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
                 --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
                 AND     (
                  ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
                 OR t.CTR_BAL > 0
                 )
                  GROUP BY t.cst_id
                   HAVING sum(t.ctr_amt) >= 10000 ----金额1万元（含）以上
              ) t4
ON      t.cst_id = t4.cst_id
LEFT JOIN edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t5
ON      t.bus_ctr_id = t5.CTR_SERNO
AND     t5.dt = '${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3  on nvl(org.brc_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = '${data_dt}'
)
AND     (t.mon_acm_prcp_bal_acml > 0 or t.prcp_bal > 0)
AND     t5.PRD_NO NOT LIKE '1002%' ----剔除票据
AND     t5.BSN_MARK_CD NOT IN ( '01' ) --剔除 员工贷款    01	员工贷款 04	重组业务 05	协作业务 03	预保预报业务
and L.APLY_CHNL_cd <> 'L08'  --渠道代码，金融云
AND     (
  -- t5.APLY_CHNL_cd <> 'L08'  --渠道代码，金融云
                 t5.PRD_NO <> '2001010101007' ) --剔除 小鱼分期
AND     t5.PRD_NO <> '2001010101008' --剔除 蚂蚁借呗
AND     t5.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     (t5.PRD_NO NOT IN ( '2001010101002' , '2001020101002') OR t5.CTR_STS_CD <> '' ) --剔除未签约的泰e贷
AND     t.dt = '${data_dt}'
and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id, t3.avg_emp_num
;

drop table if exists LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_08 purge;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_08 AS
SELECT  org.tem_org_id                                                                      as  ORG_ID
        ,SUM(DECODE(t1.efe_cst_ind, '1', 1, 0))                                             as DWJS2_0011_01
        ,SUM(DECODE(t1.efe_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                      as  DWJS2_0011
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1  --客户集市-基础信息-客户基础标识信息
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3  on nvl(org.tem_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = '${data_dt}'
)
  AND   t1.dt = '${data_dt}'
  and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id, t3.avg_emp_num
UNION ALL
SELECT  org.sbr_org_id                                                                      as  ORG_ID
        ,SUM(DECODE(t1.efe_cst_ind, '1', 1, 0))                                             as DWJS2_0011_01
        ,SUM(DECODE(t1.efe_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                      as  DWJS2_0011
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3  on nvl(org.sbr_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = '${data_dt}'
)
  AND   t1.dt = '${data_dt}'
  and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id, t3.avg_emp_num
UNION ALL
SELECT  org.brc_org_id                                                                      as  ORG_ID
        ,SUM(DECODE(t1.efe_cst_ind, '1', 1, 0))                                             as DWJS2_0011_01
        ,SUM(DECODE(t1.efe_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                      as  DWJS2_0011
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3  on nvl(org.brc_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = '${data_dt}'
)
  AND   t1.dt = '${data_dt}'
  and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id, t3.avg_emp_num
;

drop table if exists LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_09 purge;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_09 AS
SELECT  org.tem_org_id                                                                     as  ORG_ID
        ,SUM(DECODE(t1.efe_loan_cst_ind, '1', 1, 0))                                       as  DWJS2_0012_01
        ,SUM(DECODE(t1.efe_loan_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                 as  DWJS2_0012
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3  on nvl(org.tem_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = '${data_dt}'
)
  AND   t1.dt = '${data_dt}'
  and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id, t3.avg_emp_num
UNION ALL
SELECT  org.sbr_org_id                                                                     as  ORG_ID
        ,SUM(DECODE(t1.efe_loan_cst_ind, '1', 1, 0))                                       as  DWJS2_0012_01
        ,SUM(DECODE(t1.efe_loan_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                 as  DWJS2_0012
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3  on nvl(org.sbr_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = '${data_dt}'
)
  AND   t1.dt = '${data_dt}'
  and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id, t3.avg_emp_num
UNION ALL
SELECT  org.brc_org_id                                                                     as  ORG_ID
        ,SUM(DECODE(t1.efe_loan_cst_ind, '1', 1, 0))                                       as  DWJS2_0012_01
        ,SUM(DECODE(t1.efe_loan_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                 as  DWJS2_0012
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3  on nvl(org.brc_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = '${data_dt}'
)
  AND   t1.dt = '${data_dt}'
  and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id, t3.avg_emp_num
;

drop table if exists LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_10 purge;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_10 AS
SELECT  org.tem_org_id                                                                     as  ORG_ID
        ,SUM(DECODE(t1.efe_dep_cst_ind, '1', 1, 0))                                        as  DWJS2_0013_01
        ,SUM(DECODE(t1.efe_dep_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                  as  DWJS2_0013
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3  on nvl(org.tem_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = '${data_dt}'
)
  AND   t1.dt = '${data_dt}'
  and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id, t3.avg_emp_num
UNION ALL
SELECT  org.sbr_org_id                                                                     as  ORG_ID
        ,SUM(DECODE(t1.efe_dep_cst_ind, '1', 1, 0))                                        as  DWJS2_0013_01
        ,SUM(DECODE(t1.efe_dep_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                  as  DWJS2_0013
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3  on nvl(org.sbr_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = '${data_dt}'
)
  AND   t1.dt = '${data_dt}'
  and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id, t3.avg_emp_num
UNION ALL
SELECT  org.brc_org_id                                                                     as  ORG_ID
        ,SUM(DECODE(t1.efe_dep_cst_ind, '1', 1, 0))                                        as  DWJS2_0013_01
        ,SUM(DECODE(t1.efe_dep_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                  as  DWJS2_0013
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3  on nvl(org.brc_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = '${data_dt}'
)
  AND   t1.dt = '${data_dt}'
  and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id, t3.avg_emp_num
;

--**************************定价管理**********************************
DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_01;
CREATE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_01 as
select
    t1.gz_org_id org_id
    ,t1.intr_inc_xps_mon_acm   AS   DJGL2_0001_01
    ,t1.mon_acm_bal            AS   DJGL2_0001_02
    ,t1.intr_inc_xps_mon_acm/if(t1.mon_acm_bal=0,null,t1.mon_acm_bal)/t1.dom*t1.doy*100 as DJGL2_0001
    ,t2.intr_inc_xps_qtr_acm   as   DJGL2_0006_01
    ,t2.qtr_acm_bal            as   DJGL2_0006_02
    ,t2.intr_inc_xps_qtr_acm/if(t2.qtr_acm_bal=0,null,t2.qtr_acm_bal)/t2.doq*t2.doy*100 as DJGL2_0006_03
    ,t1.intr_inc_xps_mon_acm/if(t1.mon_acm_bal=0,null,t1.mon_acm_bal)/t1.dom*t1.doy*100 - t2.intr_inc_xps_qtr_acm/if(t2.qtr_acm_bal=0,null,t2.qtr_acm_bal)/t2.doq*t2.doy*100  as DJGL2_0006
from (SELECT ${data_dt}, '贷款', org.tem_org_id as gz_org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal  --余额
       ,sum(t.mon_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1)) / 10000   as mon_acm_bal  --月日均
       ,sum(t.intr_inc_xps_mon_acm  * hl.cny_exr) / 10000    as intr_inc_xps_mon_acm   --月度利息
       ,sum(t.fnl_ftp_intr_mon_acm  * hl.cny_exr) / 10000    as fnl_ftp_intr_mon_acm   --月度FTP利息
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1  dom --月度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   doy --年度天数
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt =  ${data_dt}
    ) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = ${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt='${data_dt}'
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
    AND SUBSTR(t.pd_cd, 1, 4) ='8101'
  and SUBSTR(t.pd_cd, 1, 6) <>'810102'
  and nvl(org.tem_org_id,'')<>''
group by org.tem_org_id
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1  --月度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   --年度天数
)t1
LEFT JOIN
(SELECT CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'), '贷款', org.tem_org_id as gz_org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal  --余额
       ,sum(t.qtr_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1)) / 10000                           as qtr_acm_bal  --季日均
       ,sum(t.intr_inc_xps_qtr_acm * hl.cny_exr) / 10000    as intr_inc_xps_qtr_acm  --季度利息
       ,sum(t.fnl_ftp_intr_qtr_acm * hl.cny_exr) / 10000    as fnl_ftp_intr_qtr_acm --季度FTP利息
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1  doq --季度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   doy --年度天数
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt =  CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
    ) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
    AND SUBSTR(t.pd_cd, 1, 4) ='8101'
  and SUBSTR(t.pd_cd, 1, 6) <>'810102'
  and nvl(org.tem_org_id,'')<>''
group by org.tem_org_id
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1   --季度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   --年度天数
)t2  on  t1.gz_org_id=t2.gz_org_id
union all
select
    t1.gz_org_id org_id
    ,t1.intr_inc_xps_mon_acm   AS   DJGL2_0001_01
    ,t1.mon_acm_bal            AS   DJGL2_0001_02
    ,t1.intr_inc_xps_mon_acm/if(t1.mon_acm_bal=0,null,t1.mon_acm_bal)/t1.dom*t1.doy*100 as DJGL2_0001
    ,t2.intr_inc_xps_qtr_acm   as   DJGL2_0006_01
    ,t2.qtr_acm_bal            as   DJGL2_0006_02
    ,t2.intr_inc_xps_qtr_acm/if(t2.qtr_acm_bal=0,null,t2.qtr_acm_bal)/t2.doq*t2.doy*100 as DJGL2_0006_03
    ,t1.intr_inc_xps_mon_acm/if(t1.mon_acm_bal=0,null,t1.mon_acm_bal)/t1.dom*t1.doy*100 - t2.intr_inc_xps_qtr_acm/if(t2.qtr_acm_bal=0,null,t2.qtr_acm_bal)/t2.doq*t2.doy*100  as DJGL2_0006
from (SELECT ${data_dt}, '贷款', org.sbr_org_id as gz_org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal  --余额
       ,sum(t.mon_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1)) / 10000                           as mon_acm_bal  --月日均
       ,sum(t.intr_inc_xps_mon_acm  * hl.cny_exr) / 10000    as intr_inc_xps_mon_acm   --月度利息
       ,sum(t.fnl_ftp_intr_mon_acm  * hl.cny_exr) / 10000    as fnl_ftp_intr_mon_acm   --月度FTP利息
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1  dom --月度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   doy --年度天数
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt =  ${data_dt}
    ) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = ${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt='${data_dt}'
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
  AND SUBSTR(t.pd_cd, 1, 4) ='8101'
  and SUBSTR(t.pd_cd, 1, 6) <>'810102'
  and nvl(org.sbr_org_id,'')<>''
group by org.sbr_org_id
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1   --月度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   --年度天数
)t1
LEFT JOIN
(SELECT CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'), '贷款', org.sbr_org_id as gz_org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal  --余额
       ,sum(t.qtr_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1)) / 10000                           as qtr_acm_bal  --季日均
       ,sum(t.intr_inc_xps_qtr_acm * hl.cny_exr) / 10000    as intr_inc_xps_qtr_acm  --季度利息
       ,sum(t.fnl_ftp_intr_qtr_acm * hl.cny_exr) / 10000    as fnl_ftp_intr_qtr_acm --季度FTP利息
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1  doq --季度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   doy --年度天数
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt =  CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
    ) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
  AND SUBSTR(t.pd_cd, 1, 4) ='8101'
  and SUBSTR(t.pd_cd, 1, 6) <>'810102'
  and nvl(org.sbr_org_id,'')<>''
group by org.sbr_org_id
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1   --季度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   --年度天数
)t2  on  t1.gz_org_id=t2.gz_org_id
union all
select
    t1.gz_org_id org_id
    ,t1.intr_inc_xps_mon_acm   AS   DJGL2_0001_01
    ,t1.mon_acm_bal            AS   DJGL2_0001_02
    ,t1.intr_inc_xps_mon_acm/if(t1.mon_acm_bal=0,null,t1.mon_acm_bal)/t1.dom*t1.doy*100 as DJGL2_0001
    ,t2.intr_inc_xps_qtr_acm   as   DJGL2_0006_01
    ,t2.qtr_acm_bal            as   DJGL2_0006_02
    ,t2.intr_inc_xps_qtr_acm/if(t2.qtr_acm_bal=0,null,t2.qtr_acm_bal)/t2.doq*t2.doy*100 as DJGL2_0006_03
    ,t1.intr_inc_xps_mon_acm/if(t1.mon_acm_bal=0,null,t1.mon_acm_bal)/t1.dom*t1.doy*100 - t2.intr_inc_xps_qtr_acm/if(t2.qtr_acm_bal=0,null,t2.qtr_acm_bal)/t2.doq*t2.doy*100  as DJGL2_0006
from (SELECT ${data_dt}, '贷款', org.brc_org_id as gz_org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal  --余额
       ,sum(t.mon_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1)) / 10000                           as mon_acm_bal  --月日均
       ,sum(t.intr_inc_xps_mon_acm  * hl.cny_exr) / 10000    as intr_inc_xps_mon_acm   --月度利息
       ,sum(t.fnl_ftp_intr_mon_acm  * hl.cny_exr) / 10000    as fnl_ftp_intr_mon_acm   --月度FTP利息
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1  dom --月度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   doy --年度天数
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt =  ${data_dt}
    ) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = ${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt='${data_dt}'
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
  AND SUBSTR(t.pd_cd, 1, 4) ='8101'
  and SUBSTR(t.pd_cd, 1, 6) <>'810102'
  and nvl(org.brc_org_id,'')<>''
group by org.brc_org_id
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1   --月度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   --年度天数
)t1
LEFT JOIN
(SELECT CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'), '贷款', org.brc_org_id as gz_org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal  --余额
       ,sum(t.qtr_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1)) / 10000       as qtr_acm_bal  --季日均
       ,sum(t.intr_inc_xps_qtr_acm * hl.cny_exr) / 10000    as intr_inc_xps_qtr_acm  --季度利息
       ,sum(t.fnl_ftp_intr_qtr_acm * hl.cny_exr) / 10000    as fnl_ftp_intr_qtr_acm --季度FTP利息
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1  doq --季度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   doy --年度天数
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt =  CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
    ) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
  AND SUBSTR(t.pd_cd, 1, 4) ='8101'
  and SUBSTR(t.pd_cd, 1, 6) <>'810102'
  and nvl(org.brc_org_id,'')<>''
group by org.brc_org_id
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1   --季度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   --年度天数
)t2  on  t1.gz_org_id=t2.gz_org_id
;

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_02;
CREATE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_02 as
select
     t1.gz_org_id org_id
     ,t1.intr_inc_xps_mon_acm   as DJGL2_0002_01
     ,t1.mon_acm_bal            as DJGL2_0002_02
     ,t1.intr_inc_xps_mon_acm/if(t1.mon_acm_bal=0,null,t1.mon_acm_bal)/t1.dom*t1.doy*100 as DJGL2_0002
     ,t2.intr_inc_xps_qtr_acm   as   DJGL2_0007_01
     ,t2.qtr_acm_bal            as   DJGL2_0007_02
     ,t2.intr_inc_xps_qtr_acm/if(t2.qtr_acm_bal=0,null,t2.qtr_acm_bal)/t2.doq*t2.doy*100 as DJGL2_0007_03
     ,t1.intr_inc_xps_mon_acm/if(t1.mon_acm_bal=0,null,t1.mon_acm_bal)/t1.dom*t1.doy*100 - t2.intr_inc_xps_qtr_acm/if(t2.qtr_acm_bal=0,null,t2.qtr_acm_bal)/t2.doq*t2.doy*100  as DJGL2_0007
from (SELECT ${data_dt}, '存款', org.tem_org_id as gz_org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal
       ,sum(t.mon_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1)) / 10000                           as mon_acm_bal
       ,sum(t.intr_inc_xps_mon_acm  * hl.cny_exr) / 10000    as intr_inc_xps_mon_acm
       ,sum(t.fnl_ftp_intr_mon_acm  * hl.cny_exr) / 10000    as fnl_ftp_intr_mon_acm
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1  dom --月度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   doy --年度天数
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt = ${data_dt}
) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = ${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt='${data_dt}'
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
  AND SUBSTR(t.pd_cd, 1, 4) = '8201'
 and  nvl(org.tem_org_id,'')<>''
group by org.tem_org_id
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1   --月度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   --年度天数
)t1
LEFT JOIN
(SELECT CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'), '存款', org.tem_org_id as gz_org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal
       ,sum(t.qtr_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1)) / 10000                           as qtr_acm_bal
       ,sum(t.intr_inc_xps_qtr_acm  * hl.cny_exr) / 10000    as intr_inc_xps_qtr_acm
       ,sum(t.fnl_ftp_intr_qtr_acm  * hl.cny_exr) / 10000    as fnl_ftp_intr_qtr_acm
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1  doq --季度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   doy --年度天数
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
  AND SUBSTR(t.pd_cd, 1, 4) = '8201'
 and  nvl(org.tem_org_id,'')<>''
group by org.tem_org_id
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1  --季度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   --年度天数
)t2  on t1.gz_org_id=t2.gz_org_id
union all
select
     t1.gz_org_id org_id
     ,t1.intr_inc_xps_mon_acm   as DJGL2_0002_01
     ,t1.mon_acm_bal            as DJGL2_0002_02
     ,t1.intr_inc_xps_mon_acm/if(t1.mon_acm_bal=0,null,t1.mon_acm_bal)/t1.dom*t1.doy*100 as DJGL2_0002
     ,t2.intr_inc_xps_qtr_acm   as   DJGL2_0007_01
     ,t2.qtr_acm_bal            as   DJGL2_0007_02
     ,t2.intr_inc_xps_qtr_acm/if(t2.qtr_acm_bal=0,null,t2.qtr_acm_bal)/t2.doq*t2.doy*100 as DJGL2_0007_03
     ,t1.intr_inc_xps_mon_acm/if(t1.mon_acm_bal=0,null,t1.mon_acm_bal)/t1.dom*t1.doy*100 - t2.intr_inc_xps_qtr_acm/if(t2.qtr_acm_bal=0,null,t2.qtr_acm_bal)/t2.doq*t2.doy*100  as DJGL2_0007
from (SELECT ${data_dt}, '存款', org.sbr_org_id as gz_org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal
       ,sum(t.mon_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1)) / 10000                           as mon_acm_bal
       ,sum(t.intr_inc_xps_mon_acm  * hl.cny_exr) / 10000    as intr_inc_xps_mon_acm
       ,sum(t.fnl_ftp_intr_mon_acm  * hl.cny_exr) / 10000    as fnl_ftp_intr_mon_acm
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1  dom --月度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   doy --年度天数
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt = ${data_dt}
) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = ${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt='${data_dt}'
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
  AND SUBSTR(t.pd_cd, 1, 4) = '8201'
 and  nvl(org.sbr_org_id,'')<>''
group by org.sbr_org_id
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1   --月度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   --年度天数
)t1
LEFT JOIN
(SELECT CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'), '存款', org.sbr_org_id as gz_org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal
       ,sum(t.qtr_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1)) / 10000                           as qtr_acm_bal
       ,sum(t.intr_inc_xps_qtr_acm  * hl.cny_exr) / 10000    as intr_inc_xps_qtr_acm
       ,sum(t.fnl_ftp_intr_qtr_acm  * hl.cny_exr) / 10000    as fnl_ftp_intr_qtr_acm
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1  doq --季度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   doy --年度天数
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
  AND SUBSTR(t.pd_cd, 1, 4) = '8201'
 and  nvl(org.sbr_org_id,'')<>''
group by org.sbr_org_id
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1  --季度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   --年度天数
)t2  on t1.gz_org_id=t2.gz_org_id
union all
select
     t1.gz_org_id org_id
     ,t1.intr_inc_xps_mon_acm   as DJGL2_0002_01
     ,t1.mon_acm_bal            as DJGL2_0002_02
     ,t1.intr_inc_xps_mon_acm/if(t1.mon_acm_bal=0,null,t1.mon_acm_bal)/t1.dom*t1.doy*100 as DJGL2_0002
     ,t2.intr_inc_xps_qtr_acm   as   DJGL2_0007_01
     ,t2.qtr_acm_bal            as   DJGL2_0007_02
     ,t2.intr_inc_xps_qtr_acm/if(t2.qtr_acm_bal=0,null,t2.qtr_acm_bal)/t2.doq*t2.doy*100 as DJGL2_0007_03
     ,t1.intr_inc_xps_mon_acm/if(t1.mon_acm_bal=0,null,t1.mon_acm_bal)/t1.dom*t1.doy*100 - t2.intr_inc_xps_qtr_acm/if(t2.qtr_acm_bal=0,null,t2.qtr_acm_bal)/t2.doq*t2.doy*100  as DJGL2_0007
from (SELECT ${data_dt}, '存款', org.brc_org_id as gz_org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal
       ,sum(t.mon_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1)) / 10000                           as mon_acm_bal
       ,sum(t.intr_inc_xps_mon_acm  * hl.cny_exr) / 10000    as intr_inc_xps_mon_acm
       ,sum(t.fnl_ftp_intr_mon_acm  * hl.cny_exr) / 10000    as fnl_ftp_intr_mon_acm
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1  dom --月度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   doy --年度天数
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt = ${data_dt}
) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = ${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt='${data_dt}'
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
  AND SUBSTR(t.pd_cd, 1, 4) = '8201'
 and  nvl(org.brc_org_id,'')<>''
group by org.brc_org_id
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1   --月度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   --年度天数
)t1
LEFT JOIN
(SELECT CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'), '存款', org.brc_org_id as gz_org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal
       ,sum(t.qtr_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1)) / 10000                           as qtr_acm_bal
       ,sum(t.intr_inc_xps_qtr_acm  * hl.cny_exr) / 10000    as intr_inc_xps_qtr_acm
       ,sum(t.fnl_ftp_intr_qtr_acm  * hl.cny_exr) / 10000    as fnl_ftp_intr_qtr_acm
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1  doq --季度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   doy --年度天数
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
  AND SUBSTR(t.pd_cd, 1, 4) = '8201'
 and  nvl(org.brc_org_id,'')<>''
group by org.brc_org_id
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1  --季度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   --年度天数
)t2  on t1.gz_org_id=t2.gz_org_id
;

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_03;
CREATE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_03 as
select
     t1.gz_org_id org_id
     ,t1.intr_inc_xps_mon_acm   as DJGL2_0003_01
     ,t1.mon_acm_bal            as DJGL2_0003_02
     ,t1.intr_inc_xps_mon_acm/if(t1.mon_acm_bal=0,null,t1.mon_acm_bal)/t1.dom*t1.doy*100 as DJGL2_0003
     ,t2.intr_inc_xps_qtr_acm   as   DJGL2_0008_01
     ,t2.qtr_acm_bal            as   DJGL2_0008_02
     ,t2.intr_inc_xps_qtr_acm/if(t2.qtr_acm_bal=0,null,t2.qtr_acm_bal)/t2.doq*t2.doy*100 as DJGL2_0008_03
     ,t1.intr_inc_xps_mon_acm/if(t1.mon_acm_bal=0,null,t1.mon_acm_bal)/t1.dom*t1.doy*100 - t2.intr_inc_xps_qtr_acm/if(t2.qtr_acm_bal=0,null,t2.qtr_acm_bal)/t2.doq*t2.doy*100  as DJGL2_0008
from (SELECT ${data_dt}, '存款', org.tem_org_id as gz_org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal
       ,sum(t.mon_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1)) / 10000                           as mon_acm_bal
       ,sum(t.intr_inc_xps_mon_acm  * hl.cny_exr) / 10000    as intr_inc_xps_mon_acm
       ,sum(t.fnl_ftp_intr_mon_acm  * hl.cny_exr) / 10000    as fnl_ftp_intr_mon_acm
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1  dom --月度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   doy --年度天数
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt = ${data_dt}
) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = ${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt='${data_dt}'
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
  AND SUBSTR(t.pd_cd, 1, 4) = '8201'   --8201，剔除8201010103，8201010106，8201010109，8201010203
  AND SUBSTR(t.pd_cd, 1, 10)<>'8201010103'
  AND SUBSTR(t.pd_cd, 1, 10)<>'8201010203'
  AND SUBSTR(t.pd_cd, 1, 10)<>'8201010106'
  AND SUBSTR(t.pd_cd, 1, 10)<>'8201010109'
 and  nvl(org.tem_org_id,'')<>''
group by org.tem_org_id
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1   --月度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   --年度天数
)t1
LEFT JOIN
(SELECT CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'), '存款', org.tem_org_id as gz_org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal
       ,sum(t.qtr_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1)) / 10000                           as qtr_acm_bal
       ,sum(t.intr_inc_xps_qtr_acm  * hl.cny_exr) / 10000    as intr_inc_xps_qtr_acm
       ,sum(t.fnl_ftp_intr_qtr_acm  * hl.cny_exr) / 10000    as fnl_ftp_intr_qtr_acm
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1  doq --季度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   doy --年度天数
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
  AND SUBSTR(t.pd_cd, 1, 4) = '8201'   --8201，剔除8201010103，8201010106，8201010109，8201010203
  AND SUBSTR(t.pd_cd, 1, 10)<>'8201010103'
  AND SUBSTR(t.pd_cd, 1, 10)<>'8201010203'
  AND SUBSTR(t.pd_cd, 1, 10)<>'8201010106'
  AND SUBSTR(t.pd_cd, 1, 10)<>'8201010109'
 and  nvl(org.tem_org_id,'')<>''
group by org.tem_org_id
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1  --季度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   --年度天数
)t2  on t1.gz_org_id=t2.gz_org_id
union all
select
     t1.gz_org_id org_id
     ,t1.intr_inc_xps_mon_acm   as DJGL2_0003_01
     ,t1.mon_acm_bal            as DJGL2_0003_02
     ,t1.intr_inc_xps_mon_acm/if(t1.mon_acm_bal=0,null,t1.mon_acm_bal)/t1.dom*t1.doy*100 as DJGL2_0003
     ,t2.intr_inc_xps_qtr_acm   as   DJGL2_0008_01
     ,t2.qtr_acm_bal            as   DJGL2_0008_02
     ,t2.intr_inc_xps_qtr_acm/if(t2.qtr_acm_bal=0,null,t2.qtr_acm_bal)/t2.doq*t2.doy*100 as DJGL2_0008_03
     ,t1.intr_inc_xps_mon_acm/if(t1.mon_acm_bal=0,null,t1.mon_acm_bal)/t1.dom*t1.doy*100 - t2.intr_inc_xps_qtr_acm/if(t2.qtr_acm_bal=0,null,t2.qtr_acm_bal)/t2.doq*t2.doy*100  as DJGL2_0008
from (SELECT ${data_dt}, '存款', org.sbr_org_id as gz_org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal
       ,sum(t.mon_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1)) / 10000                           as mon_acm_bal
       ,sum(t.intr_inc_xps_mon_acm  * hl.cny_exr) / 10000    as intr_inc_xps_mon_acm
       ,sum(t.fnl_ftp_intr_mon_acm  * hl.cny_exr) / 10000    as fnl_ftp_intr_mon_acm
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1  dom --月度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   doy --年度天数
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt = ${data_dt}
) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = ${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt='${data_dt}'
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
  AND SUBSTR(t.pd_cd, 1, 4) = '8201'   --8201，剔除8201010103，8201010106，8201010109，8201010203
  AND SUBSTR(t.pd_cd, 1, 10)<>'8201010103'
  AND SUBSTR(t.pd_cd, 1, 10)<>'8201010203'
  AND SUBSTR(t.pd_cd, 1, 10)<>'8201010106'
  AND SUBSTR(t.pd_cd, 1, 10)<>'8201010109'
 and  nvl(org.sbr_org_id,'')<>''
group by org.sbr_org_id
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1   --月度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   --年度天数
)t1
LEFT JOIN
(SELECT CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'), '存款', org.sbr_org_id as gz_org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal
       ,sum(t.qtr_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1)) / 10000                           as qtr_acm_bal
       ,sum(t.intr_inc_xps_qtr_acm  * hl.cny_exr) / 10000    as intr_inc_xps_qtr_acm
       ,sum(t.fnl_ftp_intr_qtr_acm  * hl.cny_exr) / 10000    as fnl_ftp_intr_qtr_acm
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1  doq --季度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   doy --年度天数
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
  AND SUBSTR(t.pd_cd, 1, 4) = '8201'   --8201，剔除8201010103，8201010106，8201010109，8201010203
  AND SUBSTR(t.pd_cd, 1, 10)<>'8201010103'
  AND SUBSTR(t.pd_cd, 1, 10)<>'8201010203'
  AND SUBSTR(t.pd_cd, 1, 10)<>'8201010106'
  AND SUBSTR(t.pd_cd, 1, 10)<>'8201010109'
 and  nvl(org.sbr_org_id,'')<>''
group by org.sbr_org_id
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1  --季度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   --年度天数
)t2  on t1.gz_org_id=t2.gz_org_id
union all
select
     t1.gz_org_id org_id
     ,t1.intr_inc_xps_mon_acm   as DJGL2_0003_01
     ,t1.mon_acm_bal            as DJGL2_0003_02
     ,t1.intr_inc_xps_mon_acm/if(t1.mon_acm_bal=0,null,t1.mon_acm_bal)/t1.dom*t1.doy*100 as DJGL2_0003
     ,t2.intr_inc_xps_qtr_acm   as   DJGL2_0008_01
     ,t2.qtr_acm_bal            as   DJGL2_0008_02
     ,t2.intr_inc_xps_qtr_acm/if(t2.qtr_acm_bal=0,null,t2.qtr_acm_bal)/t2.doq*t2.doy*100 as DJGL2_0008_03
     ,t1.intr_inc_xps_mon_acm/if(t1.mon_acm_bal=0,null,t1.mon_acm_bal)/t1.dom*t1.doy*100 - t2.intr_inc_xps_qtr_acm/if(t2.qtr_acm_bal=0,null,t2.qtr_acm_bal)/t2.doq*t2.doy*100  as DJGL2_0008
from (SELECT ${data_dt}, '存款', org.brc_org_id as gz_org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal
       ,sum(t.mon_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1)) / 10000                           as mon_acm_bal
       ,sum(t.intr_inc_xps_mon_acm  * hl.cny_exr) / 10000    as intr_inc_xps_mon_acm
       ,sum(t.fnl_ftp_intr_mon_acm  * hl.cny_exr) / 10000    as fnl_ftp_intr_mon_acm
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1  dom --月度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   doy --年度天数
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt = ${data_dt}
) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = ${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt='${data_dt}'
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
  AND SUBSTR(t.pd_cd, 1, 4) = '8201'   --8201，剔除8201010103，8201010106，8201010109，8201010203
  AND SUBSTR(t.pd_cd, 1, 10)<>'8201010103'
  AND SUBSTR(t.pd_cd, 1, 10)<>'8201010203'
  AND SUBSTR(t.pd_cd, 1, 10)<>'8201010106'
  AND SUBSTR(t.pd_cd, 1, 10)<>'8201010109'
 and  nvl(org.brc_org_id,'')<>''
group by org.brc_org_id
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1   --月度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   --年度天数
)t1
LEFT JOIN
(SELECT CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'), '存款', org.brc_org_id as gz_org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal
       ,sum(t.qtr_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1)) / 10000                           as qtr_acm_bal
       ,sum(t.intr_inc_xps_qtr_acm  * hl.cny_exr) / 10000    as intr_inc_xps_qtr_acm
       ,sum(t.fnl_ftp_intr_qtr_acm  * hl.cny_exr) / 10000    as fnl_ftp_intr_qtr_acm
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1  doq --季度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   doy --年度天数
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
  AND SUBSTR(t.pd_cd, 1, 4) = '8201'   --8201，剔除8201010103，8201010106，8201010109，8201010203
  AND SUBSTR(t.pd_cd, 1, 10)<>'8201010103'
  AND SUBSTR(t.pd_cd, 1, 10)<>'8201010203'
  AND SUBSTR(t.pd_cd, 1, 10)<>'8201010106'
  AND SUBSTR(t.pd_cd, 1, 10)<>'8201010109'
 and  nvl(org.brc_org_id,'')<>''
group by org.brc_org_id
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'q'), 'dd') + 1  --季度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   --年度天数
)t2  on t1.gz_org_id=t2.gz_org_id
;

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_04;
CREATE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_04 as
select
     gz_org_id org_id
     ,intr_inc_xps_mon_acm   as DJGL2_0004_01
     ,mon_acm_bal            as DJGL2_0004_02
     ,intr_inc_xps_mon_acm/if(mon_acm_bal=0,null,mon_acm_bal)/dom*doy*100 as DJGL2_0004
from (SELECT ${data_dt}, '存款', org.tem_org_id as gz_org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal
       ,sum(t.mon_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1)) / 10000                           as mon_acm_bal
       ,sum(t.intr_inc_xps_mon_acm  * hl.cny_exr) / 10000    as intr_inc_xps_mon_acm
       ,sum(t.fnl_ftp_intr_mon_acm  * hl.cny_exr) / 10000    as fnl_ftp_intr_mon_acm
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1  dom --月度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   doy --年度天数
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt = ${data_dt}
) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = ${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt='${data_dt}'
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
  AND SUBSTR(t.pd_cd, 1, 10)='8201010301'   --8201010301
 and  nvl(org.tem_org_id,'')<>''
group by org.tem_org_id
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1   --月度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   --年度天数
)t
union all
select
     gz_org_id org_id
     ,intr_inc_xps_mon_acm   as DJGL2_0004_01
     ,mon_acm_bal            as DJGL2_0004_02
     ,intr_inc_xps_mon_acm/if(mon_acm_bal=0,null,mon_acm_bal)/dom*doy*100 as DJGL2_0004
from (SELECT ${data_dt}, '存款', org.sbr_org_id as gz_org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal
       ,sum(t.mon_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1)) / 10000                           as mon_acm_bal
       ,sum(t.intr_inc_xps_mon_acm  * hl.cny_exr) / 10000    as intr_inc_xps_mon_acm
       ,sum(t.fnl_ftp_intr_mon_acm  * hl.cny_exr) / 10000    as fnl_ftp_intr_mon_acm
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1  dom --月度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   doy --年度天数
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt = ${data_dt}
) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = ${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
  AND SUBSTR(t.pd_cd, 1, 10)='8201010301'   --8201010301
 and  nvl(org.sbr_org_id,'')<>''
group by org.sbr_org_id
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1   --月度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   --年度天数
)t
union all
select
     gz_org_id org_id
     ,intr_inc_xps_mon_acm   as DJGL2_0004_01
     ,mon_acm_bal            as DJGL2_0004_02
     ,intr_inc_xps_mon_acm/if(mon_acm_bal=0,null,mon_acm_bal)/dom*doy*100 as DJGL2_0004
from (SELECT ${data_dt}, '存款', org.brc_org_id as gz_org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal
       ,sum(t.mon_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1)) / 10000                           as mon_acm_bal
       ,sum(t.intr_inc_xps_mon_acm  * hl.cny_exr) / 10000    as intr_inc_xps_mon_acm
       ,sum(t.fnl_ftp_intr_mon_acm  * hl.cny_exr) / 10000    as fnl_ftp_intr_mon_acm
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1  dom --月度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   doy --年度天数
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt = ${data_dt}
) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = ${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt='${data_dt}'
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
  AND SUBSTR(t.pd_cd, 1, 10)='8201010301'   --8201010301
 and  nvl(org.brc_org_id,'')<>''
group by org.brc_org_id
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1   --月度天数
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')   --年度天数
)t
;

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_05;
CREATE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_05 as
SELECT  t3.tem_org_id  as  org_id
        ,SUM(CASE
               WHEN t.end_dt <> '18991231' THEN t.amt * t5.avg_prc / t5.quo_unt * ( DATEDIFF(to_date(t.end_dt, 'yyyymmdd'), to_date(t.dtrb_dt, 'yyyymmdd'), 'dd') + 1 ) * t.exe_intr_rat
               ELSE t.amt * t5.avg_prc / t5.quo_unt * ( DATEDIFF(to_date(t.apnt_mtu_day, 'yyyymmdd'), to_date(t.dtrb_dt, 'yyyymmdd'), 'dd') + 1 ) * t.exe_intr_rat
             END) / SUM(CASE
                          WHEN t.end_dt <> '18991231' THEN t.amt * t5.avg_prc / t5.quo_unt * ( DATEDIFF(to_date(t.end_dt, 'yyyymmdd'), to_date(t.dtrb_dt, 'yyyymmdd'), 'dd') + 1 )
                          ELSE t.amt * t5.avg_prc / t5.quo_unt * ( DATEDIFF(to_date(t.apnt_mtu_day, 'yyyymmdd'), to_date(t.dtrb_dt, 'yyyymmdd'), 'dd') + 1 )
                        END) * 1.2 AS DJGL2_0010
FROM    edw.dws_bus_loan_dbil_inf_dd t
INNER JOIN  (
              SELECT
                   A1.*
              FROM  edw.DIM_BUS_LOAN_CTR_BSE_INF_DD  A1
              LEFT JOIN   EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD A2 --合同其它明细信息
              ON      A1.CTR_SERNO = A2.CTR_SERNO
              AND     A2.dt ='${data_dt}'
              WHERE   A1.DT = ${data_dt}
              AND     A1.BSN_MARK_CD NOT IN ( '01' ) --剔除 员工贷款    01	员工贷款 04	重组业务 05	协作业务 03	预保预报业务
              AND     (
                          A2.APLY_CHNL_cd <> 'L08'  --渠道代码，金融云
                       OR     A1.PRD_NO <> '2001010101007' ) --剔除 小鱼分期
              AND     A1.PRD_NO <> '2001010101008' --剔除 蚂蚁借呗
              AND     A1.PRD_NO <> '2001010101010' --剔除百度分期贷
              AND     (A1.PRD_NO NOT IN ( '2001010101002' , '2001020101002') OR A1.CTR_STS_CD <> '' ) --剔除未签约的泰e贷
              AND     A1.PRD_NO NOT LIKE '1002%' ----剔除票据
                 ) T1
ON      t.bus_ctr_id = t1.CTR_SERNO
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t.cst_id = t2.cst_id
AND     t2.dt = ${data_dt}
INNER JOIN    edw.dim_hr_org_mng_org_tree_dd t3
ON      t2.prm_org_id = t3.org_id
AND     t3.dt = ${data_dt}
INNER JOIN    edw.dim_bus_com_exr_inf_dd t5 --汇率信息表
ON      t.ccy_cd = t5.ccy_cd --币种代码
AND     t5.dt = ${data_dt}
WHERE   t.dt = ${data_dt}
AND     t.mon_acm_prcp_bal_acml > 0
AND     substr(t.dtrb_dt,1,4)=TO_CHAR(TO_DATE(${data_dt}, 'yyyymmdd'), 'yyyy') ----当年发放
AND     NOT EXISTS (
                       SELECT  'X'
                       FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t0
                       WHERE   t.cst_id = t0.cst_id
                       AND     t0.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
                   ) ----2023年新增客户
GROUP BY t3.tem_org_id
union all
SELECT  t3.sbr_org_id  as  org_id
        ,SUM(CASE
               WHEN t.end_dt <> '18991231' THEN t.amt * t5.avg_prc / t5.quo_unt * ( DATEDIFF(to_date(t.end_dt, 'yyyymmdd'), to_date(t.dtrb_dt, 'yyyymmdd'), 'dd') + 1 ) * t.exe_intr_rat
               ELSE t.amt * t5.avg_prc / t5.quo_unt * ( DATEDIFF(to_date(t.apnt_mtu_day, 'yyyymmdd'), to_date(t.dtrb_dt, 'yyyymmdd'), 'dd') + 1 ) * t.exe_intr_rat
             END) / SUM(CASE
                          WHEN t.end_dt <> '18991231' THEN t.amt * t5.avg_prc / t5.quo_unt * ( DATEDIFF(to_date(t.end_dt, 'yyyymmdd'), to_date(t.dtrb_dt, 'yyyymmdd'), 'dd') + 1 )
                          ELSE t.amt * t5.avg_prc / t5.quo_unt * ( DATEDIFF(to_date(t.apnt_mtu_day, 'yyyymmdd'), to_date(t.dtrb_dt, 'yyyymmdd'), 'dd') + 1 )
                        END) * 1.2 AS DJGL2_0010
FROM    edw.dws_bus_loan_dbil_inf_dd t
INNER JOIN  (
              SELECT
                   A1.*
              FROM  edw.DIM_BUS_LOAN_CTR_BSE_INF_DD  A1
              LEFT JOIN   EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD A2 --合同其它明细信息
              ON      A1.CTR_SERNO = A2.CTR_SERNO
              AND     A2.dt ='${data_dt}'
              WHERE   A1.DT = ${data_dt}
              AND     A1.BSN_MARK_CD NOT IN ( '01' ) --剔除 员工贷款    01	员工贷款 04	重组业务 05	协作业务 03	预保预报业务
              AND     (
                          A2.APLY_CHNL_cd <> 'L08'  --渠道代码，金融云
                       OR     A1.PRD_NO <> '2001010101007' ) --剔除 小鱼分期
              AND     A1.PRD_NO <> '2001010101008' --剔除 蚂蚁借呗
              AND     A1.PRD_NO <> '2001010101010' --剔除百度分期贷
              AND     (A1.PRD_NO NOT IN ( '2001010101002' , '2001020101002') OR A1.CTR_STS_CD <> '' ) --剔除未签约的泰e贷
              AND     A1.PRD_NO NOT LIKE '1002%' ----剔除票据
                 ) T1
ON      t.bus_ctr_id = t1.CTR_SERNO
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t.cst_id = t2.cst_id
AND     t2.dt = ${data_dt}
INNER JOIN    edw.dim_hr_org_mng_org_tree_dd t3
ON      t2.prm_org_id = t3.org_id
AND     t3.dt = ${data_dt}
INNER JOIN    edw.dim_bus_com_exr_inf_dd t5 --汇率信息表
ON      t.ccy_cd = t5.ccy_cd --币种代码
AND     t5.dt = ${data_dt}
WHERE   t.dt = ${data_dt}
AND     t.mon_acm_prcp_bal_acml > 0
AND     substr(t.dtrb_dt,1,4)=TO_CHAR(TO_DATE(${data_dt}, 'yyyymmdd'), 'yyyy') ----当年发放
AND     NOT EXISTS (
                       SELECT  'X'
                       FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t0
                       WHERE   t.cst_id = t0.cst_id
                       AND     t0.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
                   ) ----2023年新增客户
GROUP BY t3.sbr_org_id
union all
SELECT  t3.brc_org_id  as  org_id
        ,SUM(CASE
               WHEN t.end_dt <> '18991231' THEN t.amt * t5.avg_prc / t5.quo_unt * ( DATEDIFF(to_date(t.end_dt, 'yyyymmdd'), to_date(t.dtrb_dt, 'yyyymmdd'), 'dd') + 1 ) * t.exe_intr_rat
               ELSE t.amt * t5.avg_prc / t5.quo_unt * ( DATEDIFF(to_date(t.apnt_mtu_day, 'yyyymmdd'), to_date(t.dtrb_dt, 'yyyymmdd'), 'dd') + 1 ) * t.exe_intr_rat
             END) / SUM(CASE
                          WHEN t.end_dt <> '18991231' THEN t.amt * t5.avg_prc / t5.quo_unt * ( DATEDIFF(to_date(t.end_dt, 'yyyymmdd'), to_date(t.dtrb_dt, 'yyyymmdd'), 'dd') + 1 )
                          ELSE t.amt * t5.avg_prc / t5.quo_unt * ( DATEDIFF(to_date(t.apnt_mtu_day, 'yyyymmdd'), to_date(t.dtrb_dt, 'yyyymmdd'), 'dd') + 1 )
                        END) * 1.2 AS DJGL2_0010
FROM    edw.dws_bus_loan_dbil_inf_dd t
INNER JOIN  (
              SELECT
                   A1.*
              FROM  edw.DIM_BUS_LOAN_CTR_BSE_INF_DD  A1
              LEFT JOIN   EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD A2 --合同其它明细信息
              ON      A1.CTR_SERNO = A2.CTR_SERNO
              AND     A2.dt ='${data_dt}'
              WHERE   A1.DT = ${data_dt}
              AND     A1.BSN_MARK_CD NOT IN ( '01' ) --剔除 员工贷款    01	员工贷款 04	重组业务 05	协作业务 03	预保预报业务
              AND     (
                          A2.APLY_CHNL_cd <> 'L08'  --渠道代码，金融云
                       OR     A1.PRD_NO <> '2001010101007' ) --剔除 小鱼分期
              AND     A1.PRD_NO <> '2001010101008' --剔除 蚂蚁借呗
              AND     A1.PRD_NO <> '2001010101010' --剔除百度分期贷
              AND     (A1.PRD_NO NOT IN ( '2001010101002' , '2001020101002') OR A1.CTR_STS_CD <> '' ) --剔除未签约的泰e贷
              AND     A1.PRD_NO NOT LIKE '1002%' ----剔除票据
                 ) T1
ON      t.bus_ctr_id = t1.CTR_SERNO
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t.cst_id = t2.cst_id
AND     t2.dt = ${data_dt}
INNER JOIN    edw.dim_hr_org_mng_org_tree_dd t3
ON      t2.prm_org_id = t3.org_id
AND     t3.dt = ${data_dt}
INNER JOIN    edw.dim_bus_com_exr_inf_dd t5 --汇率信息表
ON      t.ccy_cd = t5.ccy_cd --币种代码
AND     t5.dt = ${data_dt}
WHERE   t.dt = ${data_dt}
AND     t.mon_acm_prcp_bal_acml > 0
AND     substr(t.dtrb_dt,1,4)=TO_CHAR(TO_DATE(${data_dt}, 'yyyymmdd'), 'yyyy') ----当年发放
AND     NOT EXISTS (
                       SELECT  'X'
                       FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t0
                       WHERE   t.cst_id = t0.cst_id
                       AND     t0.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
                   ) ----2023年新增客户
GROUP BY t3.brc_org_id
;
--新增DJGL2_0011 贷款月日均（含贴现）[万元] ，口径为01033报表贷款月日均合计
DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_06;
CREATE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_06 as
SELECT  t3.tem_org_id  org_id
 ,SUM(AVG_BAL)/10000.00 AS DJGL2_0011                  -- 日均余额
from  app_rpt.fct_dep_loan_rat_strc_moni t
left join edw.dim_hr_org_mng_org_tree_dd t5
on    t.org_id=t5.org_id and t5.dt=t.dt
INNER JOIN    edw.dim_hr_org_mng_org_tree_dd t3
ON      t.org_id = t3.org_id
AND     t3.dt = ${data_dt}
where t.dt=${data_dt}
and   t.product_name in ('贷款','贸易融资','准贷记卡','票据业务','其他信用卡','其他贷款')    --全量贷款合计
and   t.flag='02'     --频率月
and   t.table_type in ('1','2')  --表内+表外
and   t.iso_currency_cd ='ZHRMB' --本外币合计
and   t.due_type in  ('01','')           --数据类型含逾期
and   t.RATE_NAME IN ('0','(0,8]','(8,12]','(12,+OO)')
GROUP BY t3.tem_org_id
union all
SELECT  t3.sbr_org_id  org_id
 ,SUM(AVG_BAL)/10000.00 AS DJGL2_0011                  -- 日均余额
from  app_rpt.fct_dep_loan_rat_strc_moni t
left join edw.dim_hr_org_mng_org_tree_dd t5
on    t.org_id=t5.org_id and t5.dt=t.dt
INNER JOIN    edw.dim_hr_org_mng_org_tree_dd t3
ON      t.org_id = t3.org_id
AND     t3.dt = ${data_dt}
where t.dt=${data_dt}
and   t.product_name in ('贷款','贸易融资','准贷记卡','票据业务','其他信用卡','其他贷款')    --全量贷款合计
and   t.flag='02'     --频率月
and   t.table_type in ('1','2')  --表内+表外
and   t.iso_currency_cd ='ZHRMB' --本外币合计
and   t.due_type in  ('01','')           --数据类型含逾期
and   t.RATE_NAME IN ('0','(0,8]','(8,12]','(12,+OO)')
GROUP BY t3.sbr_org_id
union all
SELECT  t3.brc_org_id  org_id
 ,SUM(AVG_BAL)/10000.00 AS DJGL2_0011                  -- 日均余额
from  app_rpt.fct_dep_loan_rat_strc_moni t
left join edw.dim_hr_org_mng_org_tree_dd t5
on    t.org_id=t5.org_id and t5.dt=t.dt
INNER JOIN    edw.dim_hr_org_mng_org_tree_dd t3
ON      t.org_id = t3.org_id
AND     t3.dt = ${data_dt}
where t.dt=${data_dt}
and   t.product_name in ('贷款','贸易融资','准贷记卡','票据业务','其他信用卡','其他贷款')    --全量贷款合计
and   t.flag='02'     --频率月
and   t.table_type in ('1','2')  --表内+表外
and   t.iso_currency_cd ='ZHRMB' --本外币合计
and   t.due_type in  ('01','')           --数据类型含逾期
and   t.RATE_NAME IN ('0','(0,8]','(8,12]','(12,+OO)')
GROUP BY t3.brc_org_id
;




**备份2.0_to立英_T2HGL_ORG_TAG_IND_DD_2_JGGL_ZHJY_2_改成借据表跑经营性_消费性贷款月日均.sql
-- ODPS SQL
-- **********************************************************************
-- 功能描述:
-- **
-- 创建者: 卫少洁
-- 创建日期: 2023-11-16 15:43:46
-- **
-- 修改日志:
-- 修改日期          修改人          修改内容
-- **
-- **********************************************************************



--**************************结构管理**********************************
DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_01;
CREATE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_01 as
SELECT tt.org_id  as org_id
       ,tt.JGGL2_0001_01
       ,tt.JGGL2_0001_02
       ,tt.JGGL2_0001
       ,tt.JGGL2_0002_01
       ,tt.JGGL2_0002
       ,tt.JGGL2_0003_01
       ,tt.JGGL2_0003
       ,t2.JGGL2_0013_01
       ,t2.JGGL2_0013_02
       ,t2.JGGL2_0013_03
       ,tt.JGGL2_0001-t2.JGGL2_0013_03  as JGGL2_0013
       ,t2.JGGL2_0014_01
       ,t2.JGGL2_0014_02
       ,tt.JGGL2_0002-t2.JGGL2_0014_02  as JGGL2_0014
       ,t2.JGGL2_0015_01
       ,t2.JGGL2_0015_02
       ,tt.JGGL2_0003-t2.JGGL2_0015_02  as JGGL2_0015
from (
select
    t1.org_id  as  org_id
       ,sum(t1.mon_acm_bal)   as  JGGL2_0001_01
       ,sum(if(mon_acm_bal>100,mon_acm_bal,0))  as  JGGL2_0001_02
       ,sum(if(mon_acm_bal>100,mon_acm_bal,0))/if(sum(t1.mon_acm_bal)=0,null,sum(t1.mon_acm_bal)) as JGGL2_0001
       ,sum(if(mon_acm_bal<=50,mon_acm_bal,0))  as  JGGL2_0002_01
       ,sum(if(mon_acm_bal<=50,mon_acm_bal,0))/if(sum(t1.mon_acm_bal)=0,null,sum(t1.mon_acm_bal)) as JGGL2_0002
       ,sum(if(rn<=10,mon_acm_bal,0))   as  JGGL2_0003_01
       ,sum(if(rn<=10,mon_acm_bal,0))/if(sum(t1.mon_acm_bal)=0,null,sum(t1.mon_acm_bal)) as JGGL2_0003
from (
SELECT ${data_dt} as dt, t.cst_id,
       org.tem_org_id as org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal
       ,sum(t.mon_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1)) / 10000                           as mon_acm_bal
       ,sum(t.intr_inc_xps_mon_acm  * hl.cny_exr) / 10000    as intr_inc_xps_mon_acm
       ,sum(t.fnl_ftp_intr_mon_acm  * hl.cny_exr) / 10000    as fnl_ftp_intr_mon_acm
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1  as mon_days
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')  as year_days
        ,row_number() over (partition by org.tem_org_id
        order by sum(t.mon_acm_bal * hl.cny_exr /
                    (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1)) desc) as rn
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal, cst_id,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a   --FTP账户汇总信息表
        where a.dt =  ${data_dt}
          and mon_acm_bal <> 0
) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = ${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt='${data_dt}'
left join app_iftp.adm_papp_ftp_dim_ftp_product_dd p  --FTP产品纬度表
       on t.pd_cd = p.p_lvl0_id
left join edw.dim_bus_act_itm_dd q  --会计科目
       on t.itm_cd = q.act_itm_id
      and q.dt = ${data_dt}
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
  AND SUBSTR(t.pd_cd, 1, 4) = '8201'
  and nvl(org.tem_org_id,'')<>''
group by t.cst_id, org.tem_org_id,
         datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1,
         DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')
) t1
group by t1.org_id
)tt
LEFT JOIN (
select
    t1.org_id  as  org_id
       ,sum(t1.mon_acm_bal)   as  JGGL2_0013_01
       ,sum(if(mon_acm_bal>100,mon_acm_bal,0))  as  JGGL2_0013_02
       ,sum(if(mon_acm_bal>100,mon_acm_bal,0))/if(sum(t1.mon_acm_bal)=0,null,sum(t1.mon_acm_bal)) as JGGL2_0013_03
       ,sum(if(mon_acm_bal<=50,mon_acm_bal,0))  as  JGGL2_0014_01
       ,sum(if(mon_acm_bal<=50,mon_acm_bal,0))/if(sum(t1.mon_acm_bal)=0,null,sum(t1.mon_acm_bal)) as JGGL2_0014_02
       ,sum(if(rn<=10,mon_acm_bal,0))   as  JGGL2_0015_01
       ,sum(if(rn<=10,mon_acm_bal,0))/if(sum(t1.mon_acm_bal)=0,null,sum(t1.mon_acm_bal)) as JGGL2_0015_02
from (
SELECT CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') as dt, t.cst_id,
       org.tem_org_id as org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal
       ,sum(t.mon_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1)) / 10000                           as mon_acm_bal
       ,sum(t.intr_inc_xps_mon_acm  * hl.cny_exr) / 10000    as intr_inc_xps_mon_acm
       ,sum(t.fnl_ftp_intr_mon_acm  * hl.cny_exr) / 10000    as fnl_ftp_intr_mon_acm
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1  as mon_days
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')  as year_days
        ,row_number() over (partition by org.tem_org_id
        order by sum(t.mon_acm_bal * hl.cny_exr /
                    (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1)) desc) as rn
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal, cst_id,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt =  CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
          and mon_acm_bal <> 0
) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join app_iftp.adm_papp_ftp_dim_ftp_product_dd p
       on t.pd_cd = p.p_lvl0_id
left join edw.dim_bus_act_itm_dd q
       on t.itm_cd = q.act_itm_id
      and q.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
  AND SUBSTR(t.pd_cd, 1, 4) = '8201'
  and nvl(org.tem_org_id,'')<>''
group by t.cst_id, org.tem_org_id,
         datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1,
         DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')
) t1
group by t1.org_id
)t2  on tt.org_id=t2.org_id
union all
SELECT tt.org_id  as org_id
       ,tt.JGGL2_0001_01
       ,tt.JGGL2_0001_02
       ,tt.JGGL2_0001
       ,tt.JGGL2_0002_01
       ,tt.JGGL2_0002
       ,tt.JGGL2_0003_01
       ,tt.JGGL2_0003
       ,t2.JGGL2_0013_01
       ,t2.JGGL2_0013_02
       ,t2.JGGL2_0013_03
       ,tt.JGGL2_0001-t2.JGGL2_0013_03  as JGGL2_0013
       ,t2.JGGL2_0014_01
       ,t2.JGGL2_0014_02
       ,tt.JGGL2_0002-t2.JGGL2_0014_02  as JGGL2_0014
       ,t2.JGGL2_0015_01
       ,t2.JGGL2_0015_02
       ,tt.JGGL2_0003-t2.JGGL2_0015_02  as JGGL2_0015
from (
select
    t1.org_id  as  org_id
       ,sum(t1.mon_acm_bal)   as  JGGL2_0001_01
       ,sum(if(mon_acm_bal>100,mon_acm_bal,0))  as  JGGL2_0001_02
       ,sum(if(mon_acm_bal>100,mon_acm_bal,0))/if(sum(t1.mon_acm_bal)=0,null,sum(t1.mon_acm_bal)) as JGGL2_0001
       ,sum(if(mon_acm_bal<=50,mon_acm_bal,0))  as  JGGL2_0002_01
       ,sum(if(mon_acm_bal<=50,mon_acm_bal,0))/if(sum(t1.mon_acm_bal)=0,null,sum(t1.mon_acm_bal)) as JGGL2_0002
       ,sum(if(rn<=10,mon_acm_bal,0))   as  JGGL2_0003_01
       ,sum(if(rn<=10,mon_acm_bal,0))/if(sum(t1.mon_acm_bal)=0,null,sum(t1.mon_acm_bal)) as JGGL2_0003
from (
SELECT ${data_dt} as dt, t.cst_id,
       org.sbr_org_id as org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal
       ,sum(t.mon_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1)) / 10000                           as mon_acm_bal
       ,sum(t.intr_inc_xps_mon_acm  * hl.cny_exr) / 10000    as intr_inc_xps_mon_acm
       ,sum(t.fnl_ftp_intr_mon_acm  * hl.cny_exr) / 10000    as fnl_ftp_intr_mon_acm
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1  as mon_days
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')  as year_days
        ,row_number() over (partition by org.sbr_org_id
        order by sum(t.mon_acm_bal * hl.cny_exr /
                    (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1)) desc) as rn
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal, cst_id,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt =  ${data_dt}
          and mon_acm_bal <> 0
) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = ${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt='${data_dt}'
left join app_iftp.adm_papp_ftp_dim_ftp_product_dd p
       on t.pd_cd = p.p_lvl0_id
left join edw.dim_bus_act_itm_dd q
       on t.itm_cd = q.act_itm_id
      and q.dt = ${data_dt}
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
  AND SUBSTR(t.pd_cd, 1, 4) = '8201'
  and nvl(org.sbr_org_id,'')<>''
group by t.cst_id, org.sbr_org_id,
         datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1,
         DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')
) t1
group by t1.org_id
)tt
LEFT JOIN (
select
    t1.org_id  as  org_id
       ,sum(t1.mon_acm_bal)   as  JGGL2_0013_01
       ,sum(if(mon_acm_bal>100,mon_acm_bal,0))  as  JGGL2_0013_02
       ,sum(if(mon_acm_bal>100,mon_acm_bal,0))/if(sum(t1.mon_acm_bal)=0,null,sum(t1.mon_acm_bal)) as JGGL2_0013_03
       ,sum(if(mon_acm_bal<=50,mon_acm_bal,0))  as  JGGL2_0014_01
       ,sum(if(mon_acm_bal<=50,mon_acm_bal,0))/if(sum(t1.mon_acm_bal)=0,null,sum(t1.mon_acm_bal)) as JGGL2_0014_02
       ,sum(if(rn<=10,mon_acm_bal,0))   as  JGGL2_0015_01
       ,sum(if(rn<=10,mon_acm_bal,0))/if(sum(t1.mon_acm_bal)=0,null,sum(t1.mon_acm_bal)) as JGGL2_0015_02
from (
SELECT CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') as dt, t.cst_id,
       org.sbr_org_id as org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal
       ,sum(t.mon_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1)) / 10000                           as mon_acm_bal
       ,sum(t.intr_inc_xps_mon_acm  * hl.cny_exr) / 10000    as intr_inc_xps_mon_acm
       ,sum(t.fnl_ftp_intr_mon_acm  * hl.cny_exr) / 10000    as fnl_ftp_intr_mon_acm
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1  as mon_days
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')  as year_days
        ,row_number() over (partition by org.sbr_org_id
        order by sum(t.mon_acm_bal * hl.cny_exr /
                    (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1)) desc) as rn
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal, cst_id,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt =  CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
          and mon_acm_bal <> 0
) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join app_iftp.adm_papp_ftp_dim_ftp_product_dd p
       on t.pd_cd = p.p_lvl0_id
left join edw.dim_bus_act_itm_dd q
       on t.itm_cd = q.act_itm_id
      and q.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
  AND SUBSTR(t.pd_cd, 1, 4) = '8201'
  and nvl(org.sbr_org_id,'')<>''
group by t.cst_id, org.sbr_org_id,
         datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1,
         DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')
) t1
group by t1.org_id
)t2  on tt.org_id=t2.org_id
union all
SELECT tt.org_id  as org_id
       ,tt.JGGL2_0001_01
       ,tt.JGGL2_0001_02
       ,tt.JGGL2_0001
       ,tt.JGGL2_0002_01
       ,tt.JGGL2_0002
       ,tt.JGGL2_0003_01
       ,tt.JGGL2_0003
       ,t2.JGGL2_0013_01
       ,t2.JGGL2_0013_02
       ,t2.JGGL2_0013_03
       ,tt.JGGL2_0001-t2.JGGL2_0013_03  as JGGL2_0013
       ,t2.JGGL2_0014_01
       ,t2.JGGL2_0014_02
       ,tt.JGGL2_0002-t2.JGGL2_0014_02  as JGGL2_0014
       ,t2.JGGL2_0015_01
       ,t2.JGGL2_0015_02
       ,tt.JGGL2_0003-t2.JGGL2_0015_02  as JGGL2_0015
from (
select
    t1.org_id  as  org_id
       ,sum(t1.mon_acm_bal)   as  JGGL2_0001_01
       ,sum(if(mon_acm_bal>100,mon_acm_bal,0))  as  JGGL2_0001_02
       ,sum(if(mon_acm_bal>100,mon_acm_bal,0))/if(sum(t1.mon_acm_bal)=0,null,sum(t1.mon_acm_bal)) as JGGL2_0001
       ,sum(if(mon_acm_bal<=50,mon_acm_bal,0))  as  JGGL2_0002_01
       ,sum(if(mon_acm_bal<=50,mon_acm_bal,0))/if(sum(t1.mon_acm_bal)=0,null,sum(t1.mon_acm_bal)) as JGGL2_0002
       ,sum(if(rn<=10,mon_acm_bal,0))   as  JGGL2_0003_01
       ,sum(if(rn<=10,mon_acm_bal,0))/if(sum(t1.mon_acm_bal)=0,null,sum(t1.mon_acm_bal)) as JGGL2_0003
from (
SELECT ${data_dt} as dt, t.cst_id,
       org.brc_org_id as org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal
       ,sum(t.mon_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1)) / 10000                           as mon_acm_bal
       ,sum(t.intr_inc_xps_mon_acm  * hl.cny_exr) / 10000    as intr_inc_xps_mon_acm
       ,sum(t.fnl_ftp_intr_mon_acm  * hl.cny_exr) / 10000    as fnl_ftp_intr_mon_acm
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1  as mon_days
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')  as year_days
        ,row_number() over (partition by org.brc_org_id
        order by sum(t.mon_acm_bal * hl.cny_exr /
                    (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1)) desc) as rn
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal, cst_id,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt =  ${data_dt}
          and mon_acm_bal <> 0
) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = ${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt='${data_dt}'
left join app_iftp.adm_papp_ftp_dim_ftp_product_dd p
       on t.pd_cd = p.p_lvl0_id
left join edw.dim_bus_act_itm_dd q
       on t.itm_cd = q.act_itm_id
      and q.dt = ${data_dt}
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
  AND SUBSTR(t.pd_cd, 1, 4) = '8201'
  and nvl(org.brc_org_id,'')<>''
group by t.cst_id, org.brc_org_id,
         datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1,
         DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')
) t1
group by t1.org_id
)tt
LEFT JOIN (
select
    t1.org_id  as  org_id
       ,sum(t1.mon_acm_bal)   as  JGGL2_0013_01
       ,sum(if(mon_acm_bal>100,mon_acm_bal,0))  as  JGGL2_0013_02
       ,sum(if(mon_acm_bal>100,mon_acm_bal,0))/if(sum(t1.mon_acm_bal)=0,null,sum(t1.mon_acm_bal)) as JGGL2_0013_03
       ,sum(if(mon_acm_bal<=50,mon_acm_bal,0))  as  JGGL2_0014_01
       ,sum(if(mon_acm_bal<=50,mon_acm_bal,0))/if(sum(t1.mon_acm_bal)=0,null,sum(t1.mon_acm_bal)) as JGGL2_0014_02
       ,sum(if(rn<=10,mon_acm_bal,0))   as  JGGL2_0015_01
       ,sum(if(rn<=10,mon_acm_bal,0))/if(sum(t1.mon_acm_bal)=0,null,sum(t1.mon_acm_bal)) as JGGL2_0015_02
from (
SELECT CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') as dt, t.cst_id,
       org.brc_org_id as org_id
       ,sum(t.cur_bal  * hl.cny_exr) / 10000 as cur_bal
       ,sum(t.mon_acm_bal * hl.cny_exr /
        (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1)) / 10000                           as mon_acm_bal
       ,sum(t.intr_inc_xps_mon_acm  * hl.cny_exr) / 10000    as intr_inc_xps_mon_acm
       ,sum(t.fnl_ftp_intr_mon_acm  * hl.cny_exr) / 10000    as fnl_ftp_intr_mon_acm
       ,datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1  as mon_days
       ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')  as year_days
        ,row_number() over (partition by org.brc_org_id
        order by sum(t.mon_acm_bal * hl.cny_exr /
                    (datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1)) desc) as rn
 FROM (select dt, src_act_id, acs_org_cd, pd_cd, itm_cd, dat_src_cd, ccy_cd,
              cur_bal, cst_id,
              mon_acm_bal, intr_inc_xps_mon_acm, fnl_ftp_intr_mon_acm,
              qtr_acm_bal, intr_inc_xps_qtr_acm, fnl_ftp_intr_qtr_acm,
              year_acm_bal, intr_inc_xps_year_acm, fnl_ftp_intr_year_acm
         from edw.dws_bus_fin_ftp_act_smy_inf_dd a
        where a.dt =  CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
          and mon_acm_bal <> 0
) t
LEFT JOIN    edw.dim_bus_com_exr_inf_dd hl --汇率信息
ON      t.ccy_cd = hl.ccy_cd
AND     hl.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.acs_org_cd=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join app_iftp.adm_papp_ftp_dim_ftp_product_dd p
       on t.pd_cd = p.p_lvl0_id
left join edw.dim_bus_act_itm_dd q
       on t.itm_cd = q.act_itm_id
      and q.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
WHERE (t.intr_inc_xps_year_acm <> 0 or t.fnl_ftp_intr_year_acm <> 0 or t.cur_bal <> 0 or t.year_acm_bal <> 0)
  AND SUBSTR(t.pd_cd, 1, 4) = '8201'
  and nvl(org.brc_org_id,'')<>''
group by t.cst_id, org.brc_org_id,
         datediff(to_date(t.dt, 'yyyymmdd'),
                  datetrunc(dateadd(to_date(t.dt, 'yyyymmdd'), -1, 'dd'), 'mm'), 'dd') + 1,
         DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'),
        DATETRUNC(to_date(t.dt, 'yyyymmdd'), 'yyyy'), 'dd')
) t1
group by t1.org_id
)t2  on tt.org_id=t2.org_id
;

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02;
CREATE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02 as
SELECT
        t.org_id
        ,t.JGGL2_0004_01
        ,t.JGGL2_0004_02
        ,t.JGGL2_0004
        ,t.JGGL2_0005_01
        ,t.JGGL2_0005
        ,t.JGGL2_0006_01
        ,t.JGGL2_0006
        ,t.JGGL2_0007_01
        ,t.JGGL2_0007_02
        ,t.JGGL2_0007
        ,t2.JGGL2_0016_01
        ,t2.JGGL2_0016_02
        ,t2.JGGL2_0016_03
        ,t.JGGL2_0004-t2.JGGL2_0016_03   as  JGGL2_0016
        ,t2.JGGL2_0017_01
        ,t2.JGGL2_0017_02
        ,t.JGGL2_0005-t2.JGGL2_0017_02   as JGGL2_0017
        ,t2.JGGL2_0018_01
        ,t2.JGGL2_0018_02
        ,t.JGGL2_0006-t2.JGGL2_0018_02   as JGGL2_0018
        ,t2.JGGL2_0019_01
        ,t2.JGGL2_0019_02
        ,t2.JGGL2_0019_03
        ,t.JGGL2_0007-t2.JGGL2_0019_03   as JGGL2_0019
from (
select  org.tem_org_id                                                            as  ORG_ID
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID='12050000',mth_avg_amt,0))/10000                as  JGGL2_0004_01
        ,nvl(sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)), 0)/10000     as JGGL2_0004_02
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID='12050000',mth_avg_amt,0))
        /IF(sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) = 0, NULL, sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) )  as JGGL2_0004
        ,sum(if(t1.ACG_STC_MSR_ID='30000000',mth_avg_amt,0))/10000                as JGGL2_0005_01
        ,sum(if(t1.ACG_STC_MSR_ID='30000000',mth_avg_amt,0))
        /IF(sum(if(t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) = 0, NULL, sum(if( t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) )  as JGGL2_0005
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11010000','12010000'),mth_avg_amt,0))/10000      as JGGL2_0006_01
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11010000','12010000'),mth_avg_amt,0))
        /IF(sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) = 0, NULL, sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) )  as JGGL2_0006
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020000','12020000'),mth_avg_amt,0))/10000      as  JGGL2_0007_01
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020001','11020002','11020003','11020004','12020001','12020002','12020003','12020004'),mth_avg_amt,0))/10000    as  JGGL2_0007_02
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020001','11020002','11020003','11020004','12020001','12020002','12020003','12020004'),mth_avg_amt,0))
        /IF(sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020000','12020000'),mth_avg_amt,0)) = 0, NULL, sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020000','12020000'),mth_avg_amt,0)) )  as JGGL2_0007
from    app_rpt.fct_ifd_mgr_dep_pd_rlpty t1 ---普惠金融部-存款分产品统计表
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.acs_org_id=org.org_id and org.dt='${data_dt}'
where  t1.dt = '${data_dt}'
and  t1.ccy_cd='CN' --本外币合计
-- and  t1.acs_tp_cd<>'6'   --关联性质剔除资源性存款
and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id
)t
LEFT JOIN (
select  org.tem_org_id                                                            as  ORG_ID
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID='12050000',mth_avg_amt,0))/10000                as  JGGL2_0016_01
        ,nvl(sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)), 0)/10000     as JGGL2_0016_02
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID='12050000',mth_avg_amt,0))
        /IF(sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) = 0, NULL, sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) )  as JGGL2_0016_03
        ,sum(if(t1.ACG_STC_MSR_ID='30000000',mth_avg_amt,0))/10000                as JGGL2_0017_01
        ,sum(if(t1.ACG_STC_MSR_ID='30000000',mth_avg_amt,0))
        /IF(sum(if(t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) = 0, NULL, sum(if(t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) )  as JGGL2_0017_02
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11010000','12010000'),mth_avg_amt,0))/10000      as JGGL2_0018_01
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11010000','12010000'),mth_avg_amt,0))
        /IF(sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) = 0, NULL, sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) )  as JGGL2_0018_02
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020000','12020000'),mth_avg_amt,0))/10000      as  JGGL2_0019_01
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020001','11020002','11020003','11020004','12020001','12020002','12020003','12020004'),mth_avg_amt,0))/10000    as  JGGL2_0019_02
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020001','11020002','11020003','11020004','12020001','12020002','12020003','12020004'),mth_avg_amt,0))
        /IF(sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020000','12020000'),mth_avg_amt,0)) = 0, NULL, sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020000','12020000'),mth_avg_amt,0)) )  as JGGL2_0019_03
from    app_rpt.fct_ifd_mgr_dep_pd_rlpty t1 ---普惠金融部-存款分产品统计表
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.acs_org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
where  t1.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
and  t1.ccy_cd='CN' --本外币合计
and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id
)t2  on t.ORG_ID=t2.org_id
union all
SELECT
        t.org_id
        ,t.JGGL2_0004_01
        ,t.JGGL2_0004_02
        ,t.JGGL2_0004
        ,t.JGGL2_0005_01
        ,t.JGGL2_0005
        ,t.JGGL2_0006_01
        ,t.JGGL2_0006
        ,t.JGGL2_0007_01
        ,t.JGGL2_0007_02
        ,t.JGGL2_0007
        ,t2.JGGL2_0016_01
        ,t2.JGGL2_0016_02
        ,t2.JGGL2_0016_03
        ,t.JGGL2_0004-t2.JGGL2_0016_03   as  JGGL2_0016
        ,t2.JGGL2_0017_01
        ,t2.JGGL2_0017_02
        ,t.JGGL2_0005-t2.JGGL2_0017_02   as JGGL2_0017
        ,t2.JGGL2_0018_01
        ,t2.JGGL2_0018_02
        ,t.JGGL2_0006-t2.JGGL2_0018_02   as JGGL2_0018
        ,t2.JGGL2_0019_01
        ,t2.JGGL2_0019_02
        ,t2.JGGL2_0019_03
        ,t.JGGL2_0007-t2.JGGL2_0019_03   as JGGL2_0019
from (
select  org.sbr_org_id                                                            as  ORG_ID
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID='12050000',mth_avg_amt,0))/10000                as  JGGL2_0004_01
        ,nvl(sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)), 0)/10000     as JGGL2_0004_02
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID='12050000',mth_avg_amt,0))
        /IF(sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) = 0, NULL, sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) )  as JGGL2_0004
        ,sum(if(t1.ACG_STC_MSR_ID='30000000',mth_avg_amt,0))/10000                as JGGL2_0005_01
        ,sum(if(t1.ACG_STC_MSR_ID='30000000',mth_avg_amt,0))
        /IF(sum(if(t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) = 0, NULL, sum(if( t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) )  as JGGL2_0005
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11010000','12010000'),mth_avg_amt,0))/10000      as JGGL2_0006_01
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11010000','12010000'),mth_avg_amt,0))
        /IF(sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) = 0, NULL, sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) )  as JGGL2_0006
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020000','12020000'),mth_avg_amt,0))/10000      as  JGGL2_0007_01
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020001','11020002','11020003','11020004','12020001','12020002','12020003','12020004'),mth_avg_amt,0))/10000    as  JGGL2_0007_02
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020001','11020002','11020003','11020004','12020001','12020002','12020003','12020004'),mth_avg_amt,0))
        /IF(sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020000','12020000'),mth_avg_amt,0)) = 0, NULL, sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020000','12020000'),mth_avg_amt,0)) )  as JGGL2_0007
from    app_rpt.fct_ifd_mgr_dep_pd_rlpty t1 ---存款账户管护汇总信息
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.acs_org_id=org.org_id and org.dt='${data_dt}'
where  t1.dt = '${data_dt}'
and  t1.ccy_cd='CN' --本外币合计
and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id
)t
LEFT JOIN (
select  org.sbr_org_id                                                            as  ORG_ID
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID='12050000',mth_avg_amt,0))/10000                as  JGGL2_0016_01
        ,nvl(sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)), 0)/10000     as JGGL2_0016_02
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID='12050000',mth_avg_amt,0))
        /IF(sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) = 0, NULL, sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) )  as JGGL2_0016_03
        ,sum(if(t1.ACG_STC_MSR_ID='30000000',mth_avg_amt,0))/10000                as JGGL2_0017_01
        ,sum(if(t1.ACG_STC_MSR_ID='30000000',mth_avg_amt,0))
        /IF(sum(if(t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) = 0, NULL, sum(if(t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) )  as JGGL2_0017_02
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11010000','12010000'),mth_avg_amt,0))/10000      as JGGL2_0018_01
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11010000','12010000'),mth_avg_amt,0))
        /IF(sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) = 0, NULL, sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) )  as JGGL2_0018_02
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020000','12020000'),mth_avg_amt,0))/10000      as  JGGL2_0019_01
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020001','11020002','11020003','11020004','12020001','12020002','12020003','12020004'),mth_avg_amt,0))/10000    as  JGGL2_0019_02
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020001','11020002','11020003','11020004','12020001','12020002','12020003','12020004'),mth_avg_amt,0))
        /IF(sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020000','12020000'),mth_avg_amt,0)) = 0, NULL, sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020000','12020000'),mth_avg_amt,0)) )  as JGGL2_0019_03
from    app_rpt.fct_ifd_mgr_dep_pd_rlpty t1 ---存款账户管护汇总信息
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.acs_org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
where  t1.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
and  t1.ccy_cd='CN' --本外币合计
and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id
)t2  on t.ORG_ID=t2.org_id
union all
SELECT
        t.org_id
        ,t.JGGL2_0004_01
        ,t.JGGL2_0004_02
        ,t.JGGL2_0004
        ,t.JGGL2_0005_01
        ,t.JGGL2_0005
        ,t.JGGL2_0006_01
        ,t.JGGL2_0006
        ,t.JGGL2_0007_01
        ,t.JGGL2_0007_02
        ,t.JGGL2_0007
        ,t2.JGGL2_0016_01
        ,t2.JGGL2_0016_02
        ,t2.JGGL2_0016_03
        ,t.JGGL2_0004-t2.JGGL2_0016_03   as  JGGL2_0016
        ,t2.JGGL2_0017_01
        ,t2.JGGL2_0017_02
        ,t.JGGL2_0005-t2.JGGL2_0017_02   as JGGL2_0017
        ,t2.JGGL2_0018_01
        ,t2.JGGL2_0018_02
        ,t.JGGL2_0006-t2.JGGL2_0018_02   as JGGL2_0018
        ,t2.JGGL2_0019_01
        ,t2.JGGL2_0019_02
        ,t2.JGGL2_0019_03
        ,t.JGGL2_0007-t2.JGGL2_0019_03   as JGGL2_0019
from (
select  org.brc_org_id                                                            as  ORG_ID
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID='12050000',mth_avg_amt,0))/10000                as  JGGL2_0004_01
        ,nvl(sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)), 0)/10000     as JGGL2_0004_02
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID='12050000',mth_avg_amt,0))
        /IF(sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) = 0, NULL, sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) )  as JGGL2_0004
        ,sum(if(t1.ACG_STC_MSR_ID='30000000',mth_avg_amt,0))/10000                as JGGL2_0005_01
        ,sum(if(t1.ACG_STC_MSR_ID='30000000',mth_avg_amt,0))
        /IF(sum(if(t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) = 0, NULL, sum(if(t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) )  as JGGL2_0005
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11010000','12010000'),mth_avg_amt,0))/10000      as JGGL2_0006_01
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11010000','12010000'),mth_avg_amt,0))
        /IF(sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) = 0, NULL, sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) )  as JGGL2_0006
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020000','12020000'),mth_avg_amt,0))/10000      as  JGGL2_0007_01
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020001','11020002','11020003','11020004','12020001','12020002','12020003','12020004'),mth_avg_amt,0))/10000    as  JGGL2_0007_02
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020001','11020002','11020003','11020004','12020001','12020002','12020003','12020004'),mth_avg_amt,0))
        /IF(sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020000','12020000'),mth_avg_amt,0)) = 0, NULL, sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020000','12020000'),mth_avg_amt,0)) )  as JGGL2_0007
from    app_rpt.fct_ifd_mgr_dep_pd_rlpty t1 ---存款账户管护汇总信息
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.acs_org_id=org.org_id and org.dt='${data_dt}'
where  t1.dt = '${data_dt}'
and  t1.ccy_cd='CN' --本外币合计
and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id
)t
LEFT JOIN (
select  org.brc_org_id                                                            as  ORG_ID
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID='12050000',mth_avg_amt,0))/10000                as  JGGL2_0016_01
        ,nvl(sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)), 0)/10000     as JGGL2_0016_02
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID='12050000',mth_avg_amt,0))
        /IF(sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) = 0, NULL, sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) )  as JGGL2_0016_03
        ,sum(if(t1.ACG_STC_MSR_ID='30000000',mth_avg_amt,0))/10000                as JGGL2_0017_01
        ,sum(if(t1.ACG_STC_MSR_ID='30000000',mth_avg_amt,0))
        /IF(sum(if(t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) = 0, NULL, sum(if(t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) )  as JGGL2_0017_02
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11010000','12010000'),mth_avg_amt,0))/10000      as JGGL2_0018_01
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11010000','12010000'),mth_avg_amt,0))
        /IF(sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) = 0, NULL, sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('10000000','20000000','30000000','40000000','50000000','60000000'),mth_avg_amt,0)) )  as JGGL2_0018_02
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020000','12020000'),mth_avg_amt,0))/10000      as  JGGL2_0019_01
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020001','11020002','11020003','11020004','12020001','12020002','12020003','12020004'),mth_avg_amt,0))/10000    as  JGGL2_0019_02
        ,sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020001','11020002','11020003','11020004','12020001','12020002','12020003','12020004'),mth_avg_amt,0))
        /IF(sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020000','12020000'),mth_avg_amt,0)) = 0, NULL, sum(if(t1.acs_tp_cd<>'6'  and  t1.ACG_STC_MSR_ID in ('11020000','12020000'),mth_avg_amt,0)) )  as JGGL2_0019_03
from    app_rpt.fct_ifd_mgr_dep_pd_rlpty t1 ---存款账户管护汇总信息
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.acs_org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
where  t1.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
and  t1.ccy_cd='CN' --本外币合计
and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id
)t2  on t.ORG_ID=t2.org_id
;


DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_03;
CREATE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_03 as
SELECT  t1.org_id
        ,t1.JGGL2_0008_01
        ,t1.JGGL2_0008_02
        ,t1.JGGL2_0008
        ,t1.JGGL2_0009_01
        ,t1.JGGL2_0009
        ,t1.JGGL2_0012_01
        ,t1.JGGL2_0012
        ,t2.JGGL2_0020_01
        ,t2.JGGL2_0020_02
        ,t2.JGGL2_0020_03
        ,t1.JGGL2_0008-t2.JGGL2_0020_03   as JGGL2_0020
        ,t2.JGGL2_0021_01
        ,t2.JGGL2_0021_02
        ,t1.JGGL2_0009-t2.JGGL2_0021_02   as JGGL2_0021
        ,t2.JGGL2_0022_01
        ,t2.JGGL2_0022_02
        ,t1.JGGL2_0012-t2.JGGL2_0022_02   as JGGL2_0022
from (
SELECT   org.tem_org_id  as org_id
          ,sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0))/10000.00 AS JGGL2_0008_01   -- 日均
          ,sum(if(t.rate_desc ='(0,2]',t.AVG_BAL,0))/10000.00 AS JGGL2_0008_02
          ,sum(if(t.rate_desc ='(0,2]',t.AVG_BAL,0))/IF(sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) = 0, NULL, sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) )  as JGGL2_0008
          ,sum(if(t.rate_desc ='(2,3.55]',t.AVG_BAL,0))/10000.00 AS JGGL2_0009_01
          ,sum(if(t.rate_desc ='(2,3.55]',t.AVG_BAL,0))/IF(sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) = 0, NULL, sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) )  as JGGL2_0009
          ,sum(if(t.rate_desc ='(3.55,+OO)',t.AVG_BAL,0))/10000.00 AS JGGL2_0012_01
          ,sum(if(t.rate_desc ='(3.55,+OO)',t.AVG_BAL,0))/IF(sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) = 0, NULL, sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) )   as  JGGL2_0012
from  app_rpt.fct_dep_loan_rat_strc_moni t
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
where t.dt='${data_dt}'
and   t.product_name ='存款'    --存款维度
and   t.flag='02'     --频率月
and   t.table_type in ('1','2')  --表内+表外
and   t.iso_currency_cd ='ZHRMB' --本外币合计
and   t.due_type ='01'           --数据类型含逾期
and   t.product_type<>'3'    --剔除个人一本通存款
and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id
)t1
LEFT JOIN (
SELECT   org.tem_org_id  as org_id
          ,sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0))/10000.00 AS JGGL2_0020_01   -- 日均
          ,sum(if(t.rate_desc ='(0,2]',t.AVG_BAL,0))/10000.00 AS JGGL2_0020_02
          ,sum(if(t.rate_desc ='(0,2]',t.AVG_BAL,0))/IF(sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) = 0, NULL, sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) )  as JGGL2_0020_03
          ,sum(if(t.rate_desc ='(2,3.55]',t.AVG_BAL,0))/10000.00 AS JGGL2_0021_01
          ,sum(if(t.rate_desc ='(2,3.55]',t.AVG_BAL,0))/IF(sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) = 0, NULL, sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) )  as JGGL2_0021_02
          ,sum(if(t.rate_desc ='(3.55,+OO)',t.AVG_BAL,0))/10000.00 AS JGGL2_0022_01
          ,sum(if(t.rate_desc ='(3.55,+OO)',t.AVG_BAL,0))/IF(sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) = 0, NULL, sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) )   as  JGGL2_0022_02
from  app_rpt.fct_dep_loan_rat_strc_moni t
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
where t.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
and   t.product_name ='存款'    --存款维度
and   t.flag='02'     --频率月
and   t.table_type in ('1','2')  --表内+表外
and   t.iso_currency_cd ='ZHRMB' --本外币合计
and   t.due_type ='01'           --数据类型含逾期
and   t.product_type<>'3'    --剔除个人一本通存款
and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id
)t2 on t1.org_id=t2.org_id
union all
SELECT  t1.org_id
        ,t1.JGGL2_0008_01
        ,t1.JGGL2_0008_02
        ,t1.JGGL2_0008
        ,t1.JGGL2_0009_01
        ,t1.JGGL2_0009
        ,t1.JGGL2_0012_01
        ,t1.JGGL2_0012
        ,t2.JGGL2_0020_01
        ,t2.JGGL2_0020_02
        ,t2.JGGL2_0020_03
        ,t1.JGGL2_0008-t2.JGGL2_0020_03   as JGGL2_0020
        ,t2.JGGL2_0021_01
        ,t2.JGGL2_0021_02
        ,t1.JGGL2_0009-t2.JGGL2_0021_02   as JGGL2_0021
        ,t2.JGGL2_0022_01
        ,t2.JGGL2_0022_02
        ,t1.JGGL2_0012-t2.JGGL2_0022_02   as JGGL2_0022
from (
SELECT   org.sbr_org_id  as org_id
          ,sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0))/10000.00 AS JGGL2_0008_01   -- 日均
          ,sum(if(t.rate_desc ='(0,2]',t.AVG_BAL,0))/10000.00 AS JGGL2_0008_02
          ,sum(if(t.rate_desc ='(0,2]',t.AVG_BAL,0))/IF(sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) = 0, NULL, sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) )  as JGGL2_0008
          ,sum(if(t.rate_desc ='(2,3.55]',t.AVG_BAL,0))/10000.00 AS JGGL2_0009_01
          ,sum(if(t.rate_desc ='(2,3.55]',t.AVG_BAL,0))/IF(sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) = 0, NULL, sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) )  as JGGL2_0009
          ,sum(if(t.rate_desc ='(3.55,+OO)',t.AVG_BAL,0))/10000.00 AS JGGL2_0012_01
          ,sum(if(t.rate_desc ='(3.55,+OO)',t.AVG_BAL,0))/IF(sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) = 0, NULL, sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) )   as  JGGL2_0012
from  app_rpt.fct_dep_loan_rat_strc_moni t
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
where t.dt='${data_dt}'
and   t.product_name ='存款'    --存款维度
and   t.flag='02'     --频率月
and   t.table_type in ('1','2')  --表内+表外
and   t.iso_currency_cd ='ZHRMB' --本外币合计
and   t.due_type ='01'           --数据类型含逾期
and   t.product_type<>'3'    --剔除个人一本通存款
and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id
)t1
LEFT JOIN (
SELECT   org.sbr_org_id  as org_id
          ,sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0))/10000.00 AS JGGL2_0020_01   -- 日均
          ,sum(if(t.rate_desc ='(0,2]',t.AVG_BAL,0))/10000.00 AS JGGL2_0020_02
          ,sum(if(t.rate_desc ='(0,2]',t.AVG_BAL,0))/IF(sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) = 0, NULL, sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) )  as JGGL2_0020_03
          ,sum(if(t.rate_desc ='(2,3.55]',t.AVG_BAL,0))/10000.00 AS JGGL2_0021_01
          ,sum(if(t.rate_desc ='(2,3.55]',t.AVG_BAL,0))/IF(sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) = 0, NULL, sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) )  as JGGL2_0021_02
          ,sum(if(t.rate_desc ='(3.55,+OO)',t.AVG_BAL,0))/10000.00 AS JGGL2_0022_01
          ,sum(if(t.rate_desc ='(3.55,+OO)',t.AVG_BAL,0))/IF(sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) = 0, NULL, sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) )   as  JGGL2_0022_02
from  app_rpt.fct_dep_loan_rat_strc_moni t
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
where t.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
and   t.product_name ='存款'    --存款维度
and   t.flag='02'     --频率月
and   t.table_type in ('1','2')  --表内+表外
and   t.iso_currency_cd ='ZHRMB' --本外币合计
and   t.due_type ='01'           --数据类型含逾期
and   t.product_type<>'3'    --剔除个人一本通存款
and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id
)t2 on t1.org_id=t2.org_id
union all
SELECT  t1.org_id
        ,t1.JGGL2_0008_01
        ,t1.JGGL2_0008_02
        ,t1.JGGL2_0008
        ,t1.JGGL2_0009_01
        ,t1.JGGL2_0009
        ,t1.JGGL2_0012_01
        ,t1.JGGL2_0012
        ,t2.JGGL2_0020_01
        ,t2.JGGL2_0020_02
        ,t2.JGGL2_0020_03
        ,t1.JGGL2_0008-t2.JGGL2_0020_03   as JGGL2_0020
        ,t2.JGGL2_0021_01
        ,t2.JGGL2_0021_02
        ,t1.JGGL2_0009-t2.JGGL2_0021_02   as JGGL2_0021
        ,t2.JGGL2_0022_01
        ,t2.JGGL2_0022_02
        ,t1.JGGL2_0012-t2.JGGL2_0022_02   as JGGL2_0022
from (
SELECT   org.brc_org_id  as org_id
          ,sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0))/10000.00 AS JGGL2_0008_01   -- 日均
          ,sum(if(t.rate_desc ='(0,2]',t.AVG_BAL,0))/10000.00 AS JGGL2_0008_02
          ,sum(if(t.rate_desc ='(0,2]',t.AVG_BAL,0))/IF(sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) = 0, NULL, sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) )  as JGGL2_0008
          ,sum(if(t.rate_desc ='(2,3.55]',t.AVG_BAL,0))/10000.00 AS JGGL2_0009_01
          ,sum(if(t.rate_desc ='(2,3.55]',t.AVG_BAL,0))/IF(sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) = 0, NULL, sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) )  as JGGL2_0009
          ,sum(if(t.rate_desc ='(3.55,+OO)',t.AVG_BAL,0))/10000.00 AS JGGL2_0012_01
          ,sum(if(t.rate_desc ='(3.55,+OO)',t.AVG_BAL,0))/IF(sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) = 0, NULL, sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) )   as  JGGL2_0012
from  app_rpt.fct_dep_loan_rat_strc_moni t
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
where t.dt='${data_dt}'
and   t.product_name ='存款'    --存款维度
and   t.flag='02'     --频率月
and   t.table_type in ('1','2')  --表内+表外
and   t.iso_currency_cd ='ZHRMB' --本外币合计
and   t.due_type ='01'           --数据类型含逾期
and   t.product_type<>'3'    --剔除个人一本通存款
and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id
)t1
LEFT JOIN (
SELECT   org.brc_org_id  as org_id
          ,sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0))/10000.00 AS JGGL2_0020_01   -- 日均
          ,sum(if(t.rate_desc ='(0,2]',t.AVG_BAL,0))/10000.00 AS JGGL2_0020_02
          ,sum(if(t.rate_desc ='(0,2]',t.AVG_BAL,0))/IF(sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) = 0, NULL, sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) )  as JGGL2_0020_03
          ,sum(if(t.rate_desc ='(2,3.55]',t.AVG_BAL,0))/10000.00 AS JGGL2_0021_01
          ,sum(if(t.rate_desc ='(2,3.55]',t.AVG_BAL,0))/IF(sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) = 0, NULL, sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) )  as JGGL2_0021_02
          ,sum(if(t.rate_desc ='(3.55,+OO)',t.AVG_BAL,0))/10000.00 AS JGGL2_0022_01
          ,sum(if(t.rate_desc ='(3.55,+OO)',t.AVG_BAL,0))/IF(sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) = 0, NULL, sum(if(t.rate_desc not in ('(0,2]','(2,3.55]'),t.AVG_BAL,0)) )   as  JGGL2_0022_02
from  app_rpt.fct_dep_loan_rat_strc_moni t
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
where t.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
and   t.product_name ='存款'    --存款维度
and   t.flag='02'     --频率月
and   t.table_type in ('1','2')  --表内+表外
and   t.iso_currency_cd ='ZHRMB' --本外币合计
and   t.due_type ='01'           --数据类型含逾期
and   t.product_type<>'3'    --剔除个人一本通存款
and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id
)t2 on t1.org_id=t2.org_id
;


DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04;
CREATE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 as
SELECT  t.ORG_ID
        ,t.JGGL2_0023_01
        ,t.JGGL2_0023_02
        ,t.JGGL2_0023
        ,t.JGGL2_0025_01
        ,t.JGGL2_0025
        ,t.JGGL2_0028_01
        ,t.JGGL2_0028_02
        ,t.JGGL2_0028_03
        ,t.JGGL2_0023-t.JGGL2_0028_03  as JGGL2_0028
        ,t.JGGL2_0030_01
        ,t.JGGL2_0030_02
        ,t.JGGL2_0025-t.JGGL2_0030_02  as JGGL2_0030
        ,t.JGGL2_0033_01
        ,t.JGGL2_0033_02
        ,t.JGGL2_0033_03
        ,t.JGGL2_0023-t.JGGL2_0033_03  as JGGL2_0033
        ,t.JGGL2_0035_01
        ,t.JGGL2_0035_02
        ,t.JGGL2_0025-t.JGGL2_0035_02  as JGGL2_0035
        --,t2.JGGL2_0024_01
        --,t2.JGGL2_0024_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01)  as JGGL2_0024
        --,t2.JGGL2_0029_01
        --,t2.JGGL2_0029_01/if(t.JGGL2_0028_01=0,null,t.JGGL2_0028_01)  as JGGL2_0029_02
        --,(t2.JGGL2_0024_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01))-(t2.JGGL2_0029_01/if(t.JGGL2_0028_01=0,null,t.JGGL2_0028_01))  as JGGL2_0029
        --,t2.JGGL2_0034_01
        --,t2.JGGL2_0034_01/if(t.JGGL2_0033_01=0,null,t.JGGL2_0033_01)  as JGGL2_0034_02
        --,(t2.JGGL2_0024_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01))-(t2.JGGL2_0034_01/if(t.JGGL2_0033_01=0,null,t.JGGL2_0033_01))  as JGGL2_0034
        ,t3.JGGL2_0026_01
        ,t3.JGGL2_0026_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01)  as JGGL2_0026
        ,t3.JGGL2_0027_01
        ,t3.JGGL2_0027_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01)  as JGGL2_0027
        ,t3.JGGL2_0031_01
        ,t3.JGGL2_0031_01/if(t.JGGL2_0028_01=0,null,t.JGGL2_0028_01)  as JGGL2_0031_02
        ,(t3.JGGL2_0026_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01))-(t3.JGGL2_0031_01/if(t.JGGL2_0028_01=0,null,t.JGGL2_0028_01))  as JGGL2_0031
        ,t3.JGGL2_0032_01
        ,t3.JGGL2_0032_01/if(t.JGGL2_0028_01=0,null,t.JGGL2_0028_01)  as JGGL2_0032_02
        ,(t3.JGGL2_0027_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01))-(t3.JGGL2_0032_01/if(t.JGGL2_0028_01=0,null,t.JGGL2_0028_01))  as JGGL2_0032
        ,t3.JGGL2_0036_01
        ,t3.JGGL2_0036_01/if(t.JGGL2_0033_01=0,null,t.JGGL2_0033_01)  as JGGL2_0036_02
        ,(t3.JGGL2_0026_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01))-(t3.JGGL2_0036_01/if(t.JGGL2_0033_01=0,null,t.JGGL2_0033_01))  as JGGL2_0036
        ,t3.JGGL2_0037_01
        ,t3.JGGL2_0037_01/if(t.JGGL2_0033_01=0,null,t.JGGL2_0033_01)  as JGGL2_0037_02
        ,(t3.JGGL2_0027_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01))-(t3.JGGL2_0037_01/if(t.JGGL2_0033_01=0,null,t.JGGL2_0033_01))  as JGGL2_0037
from (
select  org.tem_org_id                                                            as  ORG_ID
        ,sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0))/10000              as  JGGL2_0023_01
        ,sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID='100005',mth_avg_bal_amt,0))/10000              as  JGGL2_0023_02
        ,sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID='100005',mth_avg_bal_amt,0))
        /IF(sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) = 0, NULL, sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) )  as JGGL2_0023
        ,sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID in ('100012','100013'),mth_avg_bal_amt,0))/10000              as  JGGL2_0025_01
        ,sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID in ('100012','100013'),mth_avg_bal_amt,0))
        /IF(sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) = 0, NULL, sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) )  as JGGL2_0025
        ,sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0))/10000              as  JGGL2_0028_01
        ,sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID='100005',mth_avg_bal_amt,0))/10000              as  JGGL2_0028_02
        ,sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID='100005',mth_avg_bal_amt,0))
        /IF(sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) = 0, NULL, sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) )  as JGGL2_0028_03
        ,sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID in ('100012','100013'),mth_avg_bal_amt,0))/10000              as  JGGL2_0030_01
        ,sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID in ('100012','100013'),mth_avg_bal_amt,0))
        /IF(sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) = 0, NULL, sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) )  as JGGL2_0030_02
        ,sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0))/10000              as  JGGL2_0033_01
        ,sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID='100005',mth_avg_bal_amt,0))/10000              as  JGGL2_0033_02
        ,sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID='100005',mth_avg_bal_amt,0))
        /IF(sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) = 0, NULL, sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) )  as JGGL2_0033_03
        ,sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID in ('100012','100013'),mth_avg_bal_amt,0))/10000              as  JGGL2_0035_01
        ,sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID in ('100012','100013'),mth_avg_bal_amt,0))
        /IF(sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) = 0, NULL, sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) )  as JGGL2_0035_02
from    app_rpt.fct_fpd_ln_by_pd t1 ---贷款分产品统计表
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.acg_org_id=org.org_id and org.dt=t1.dt
where  t1.dt in  ('${data_dt}',to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd'),CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'))
and  t1.ccy_cd='CN' --本外币合计
and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id
)t
-- left JOIN (
-- select  org.tem_org_id                                                            as  ORG_ID
--         ,t1.policy_loan_mon_avg/10000  as JGGL2_0024_01
--         ,(t1.policy_loan_mon_avg-t1.policy_loan_last_mon_mon_avg)/10000   as  JGGL2_0029_01   --政策性贷款月日均-上月末
--         ,(t1.policy_loan_mon_avg-t1.policy_loan_last_year_mon_avg)/10000  as  JGGL2_0034_01   --政策性贷款月日均-上年末
-- from    app_rpt.fct_bus_loan_low_intr_sum_inf_dd t1
-- left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.org_id=org.org_id and org.dt='${data_dt}'
-- where  t1.dt = '${data_dt}'
-- and    t1.org_lvl='T'   --团队
-- and nvl(org.tem_org_id,'')<>''
-- )t2  on  t.ORG_ID=t2.ORG_ID
left join (
SELECT  org.tem_org_id                                                            as  ORG_ID
        ,sum(if(t1.dt='${data_dt}' and (SUBSTR(T1.pd_cd,1,6) = '200102' OR SUBSTR(T1.pd_cd,1,4)='1001' OR  SUBSTR(T1.pd_cd,1,1)='4'),t1.mon_acm_prcp_bal_acml*T2.cny_exr/10000,0))/ SUBSTR('${data_dt}',7,2)     as  JGGL2_0026_01
        ,sum(if(t1.dt='${data_dt}' and SUBSTR(T1.pd_cd,1,6) = '200101',t1.mon_acm_prcp_bal_acml*T2.cny_exr/10000,0))/ SUBSTR('${data_dt}',7,2)               as  JGGL2_0027_01
        ,sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and (SUBSTR(T1.pd_cd,1,6) = '200102' OR SUBSTR(T1.pd_cd,1,4)='1001' OR  SUBSTR(T1.pd_cd,1,1)='4'),t1.mon_acm_prcp_bal_acml*T2.cny_exr/10000,0))/ SUBSTR(to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd'),7,2)   as  JGGL2_0031_01
        ,sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and SUBSTR(T1.pd_cd,1,6) = '200101',t1.mon_acm_prcp_bal_acml*T2.cny_exr/10000,0)) / SUBSTR(to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd'),7,2)            as  JGGL2_0032_01
        ,sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and (SUBSTR(T1.pd_cd,1,6) = '200102' OR SUBSTR(T1.pd_cd,1,4)='1001' OR  SUBSTR(T1.pd_cd,1,1)='4'),t1.mon_acm_prcp_bal_acml*T2.cny_exr/10000,0)) / SUBSTR(CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'),7,2)        as  JGGL2_0036_01
        ,sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and SUBSTR(T1.pd_cd,1,6) = '200101',t1.mon_acm_prcp_bal_acml*T2.cny_exr/10000,0)) / SUBSTR(CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'),7,2)                as  JGGL2_0037_01
FROM    edw.dws_bus_loan_dbil_inf_dd t1  --贷款借据汇总表
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.acs_org_id=org.org_id and org.dt=t1.dt
left join edw.dim_bus_com_exr_inf_dd t2 --汇率信息
ON   T1.ccy_cd = T2.ccy_cd
and t1.dt=t2.dt
AND  T2.DT in  ('${data_dt}',to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd'),CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'))
where  t1.dt in  ('${data_dt}',to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd'),CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'))
--AND     t1.ORG_FLG = '0'    -- 汇总层级0团队1分行
AND    ( SUBSTR(T1.pd_cd,1,6) IN ('200101','200102')  OR SUBSTR(T1.pd_cd,1,4)='1001' OR  SUBSTR(T1.pd_cd,1,1)='4' )
AND     T1.pd_cd NOT IN ('2001010101003','2001020101003') --剔除随贷通
-- AND     t1.PD_FLG IN ( '2' , '1' , '3' )  -- 业务品种  【1：个人经营；2：个人消费；3：对公一般贷款；4：贸易融资；5：随贷通】
and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id
)t3  on  t.ORG_ID=t3.org_id
union all
SELECT  t.ORG_ID
        ,t.JGGL2_0023_01
        ,t.JGGL2_0023_02
        ,t.JGGL2_0023
        ,t.JGGL2_0025_01
        ,t.JGGL2_0025
        ,t.JGGL2_0028_01
        ,t.JGGL2_0028_02
        ,t.JGGL2_0028_03
        ,t.JGGL2_0023-t.JGGL2_0028_03  as JGGL2_0028
        ,t.JGGL2_0030_01
        ,t.JGGL2_0030_02
        ,t.JGGL2_0025-t.JGGL2_0030_02  as JGGL2_0030
        ,t.JGGL2_0033_01
        ,t.JGGL2_0033_02
        ,t.JGGL2_0033_03
        ,t.JGGL2_0023-t.JGGL2_0033_03  as JGGL2_0033
        ,t.JGGL2_0035_01
        ,t.JGGL2_0035_02
        ,t.JGGL2_0025-t.JGGL2_0035_02  as JGGL2_0035
        --,t2.JGGL2_0024_01
        --,t2.JGGL2_0024_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01)  as JGGL2_0024
        --,t2.JGGL2_0029_01
        --,t2.JGGL2_0029_01/if(t.JGGL2_0028_01=0,null,t.JGGL2_0028_01)  as JGGL2_0029_02
        --,(t2.JGGL2_0024_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01))-(t2.JGGL2_0029_01/if(t.JGGL2_0028_01=0,null,t.JGGL2_0028_01))  as JGGL2_0029
        --,t2.JGGL2_0034_01
        --,t2.JGGL2_0034_01/if(t.JGGL2_0033_01=0,null,t.JGGL2_0033_01)  as JGGL2_0034_02
        --,(t2.JGGL2_0024_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01))-(t2.JGGL2_0034_01/if(t.JGGL2_0033_01=0,null,t.JGGL2_0033_01))  as JGGL2_0034
        ,t3.JGGL2_0026_01
        ,t3.JGGL2_0026_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01)  as JGGL2_0026
        ,t3.JGGL2_0027_01
        ,t3.JGGL2_0027_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01)  as JGGL2_0027
        ,t3.JGGL2_0031_01
        ,t3.JGGL2_0031_01/if(t.JGGL2_0028_01=0,null,t.JGGL2_0028_01)  as JGGL2_0031_02
        ,(t3.JGGL2_0026_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01))-(t3.JGGL2_0031_01/if(t.JGGL2_0028_01=0,null,t.JGGL2_0028_01))  as JGGL2_0031
        ,t3.JGGL2_0032_01
        ,t3.JGGL2_0032_01/if(t.JGGL2_0028_01=0,null,t.JGGL2_0028_01)  as JGGL2_0032_02
        ,(t3.JGGL2_0027_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01))-(t3.JGGL2_0032_01/if(t.JGGL2_0028_01=0,null,t.JGGL2_0028_01))  as JGGL2_0032
        ,t3.JGGL2_0036_01
        ,t3.JGGL2_0036_01/if(t.JGGL2_0033_01=0,null,t.JGGL2_0033_01)  as JGGL2_0036_02
        ,(t3.JGGL2_0026_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01))-(t3.JGGL2_0036_01/if(t.JGGL2_0033_01=0,null,t.JGGL2_0033_01))  as JGGL2_0036
        ,t3.JGGL2_0037_01
        ,t3.JGGL2_0037_01/if(t.JGGL2_0033_01=0,null,t.JGGL2_0033_01)  as JGGL2_0037_02
        ,(t3.JGGL2_0027_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01))-(t3.JGGL2_0037_01/if(t.JGGL2_0033_01=0,null,t.JGGL2_0033_01))  as JGGL2_0037
from (
select  org.sbr_org_id                                                            as  ORG_ID
        ,sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0))/10000              as  JGGL2_0023_01
        ,sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID='100005',mth_avg_bal_amt,0))/10000              as  JGGL2_0023_02
        ,sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID='100005',mth_avg_bal_amt,0))
        /IF(sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) = 0, NULL, sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) )  as JGGL2_0023
        ,sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID in ('100012','100013'),mth_avg_bal_amt,0))/10000              as  JGGL2_0025_01
        ,sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID in ('100012','100013'),mth_avg_bal_amt,0))
        /IF(sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) = 0, NULL, sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) )  as JGGL2_0025
        ,sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0))/10000              as  JGGL2_0028_01
        ,sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID='100005',mth_avg_bal_amt,0))/10000              as  JGGL2_0028_02
        ,sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID='100005',mth_avg_bal_amt,0))
        /IF(sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) = 0, NULL, sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) )  as JGGL2_0028_03
        ,sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID in ('100012','100013'),mth_avg_bal_amt,0))/10000              as  JGGL2_0030_01
        ,sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID in ('100012','100013'),mth_avg_bal_amt,0))
        /IF(sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) = 0, NULL, sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) )  as JGGL2_0030_02
        ,sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0))/10000              as  JGGL2_0033_01
        ,sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID='100005',mth_avg_bal_amt,0))/10000              as  JGGL2_0033_02
        ,sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID='100005',mth_avg_bal_amt,0))
        /IF(sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) = 0, NULL, sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) )  as JGGL2_0033_03
        ,sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID in ('100012','100013'),mth_avg_bal_amt,0))/10000              as  JGGL2_0035_01
        ,sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID in ('100012','100013'),mth_avg_bal_amt,0))
        /IF(sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) = 0, NULL, sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) )  as JGGL2_0035_02
from    app_rpt.fct_fpd_ln_by_pd t1 ---贷款分产品统计表
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.acg_org_id=org.org_id and org.dt=t1.dt
where  t1.dt in  ('${data_dt}',to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd'),CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'))
and  t1.ccy_cd='CN' --本外币合计
and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id
)t
-- left JOIN (
-- select  org.sbr_org_id                                                            as  ORG_ID
--         ,t1.policy_loan_mon_avg/10000  as JGGL2_0024_01
--         ,(t1.policy_loan_mon_avg-t1.policy_loan_last_mon_mon_avg)/10000   as  JGGL2_0029_01
--         ,(t1.policy_loan_mon_avg-t1.policy_loan_last_year_mon_avg)/10000  as  JGGL2_0034_01
-- from    app_rpt.fct_bus_loan_low_intr_sum_inf_dd t1
-- left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.org_id=org.org_id and org.dt='${data_dt}'
-- where  t1.dt = '${data_dt}'
-- and    t1.org_lvl='Z'     --支行
-- and nvl(org.sbr_org_id,'')<>''
-- )t2  on  t.ORG_ID=t2.ORG_ID
left join (
SELECT  org.sbr_org_id                                                            as  ORG_ID
        ,sum(if(t1.dt='${data_dt}' and (SUBSTR(T1.pd_cd,1,6) = '200102' OR SUBSTR(T1.pd_cd,1,4)='1001' OR  SUBSTR(T1.pd_cd,1,1)='4'),t1.mon_acm_prcp_bal_acml*T2.cny_exr/10000,0))/ SUBSTR('${data_dt}',7,2)     as  JGGL2_0026_01
        ,sum(if(t1.dt='${data_dt}' and SUBSTR(T1.pd_cd,1,6) = '200101',t1.mon_acm_prcp_bal_acml*T2.cny_exr/10000,0))/ SUBSTR('${data_dt}',7,2)               as  JGGL2_0027_01
        ,sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and (SUBSTR(T1.pd_cd,1,6) = '200102' OR SUBSTR(T1.pd_cd,1,4)='1001' OR  SUBSTR(T1.pd_cd,1,1)='4'),t1.mon_acm_prcp_bal_acml*T2.cny_exr/10000,0))/ SUBSTR(to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd'),7,2)   as  JGGL2_0031_01
        ,sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and SUBSTR(T1.pd_cd,1,6) = '200101',t1.mon_acm_prcp_bal_acml*T2.cny_exr/10000,0)) / SUBSTR(to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd'),7,2)            as  JGGL2_0032_01
        ,sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and (SUBSTR(T1.pd_cd,1,6) = '200102' OR SUBSTR(T1.pd_cd,1,4)='1001' OR  SUBSTR(T1.pd_cd,1,1)='4'),t1.mon_acm_prcp_bal_acml*T2.cny_exr/10000,0)) / SUBSTR(CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'),7,2)        as  JGGL2_0036_01
        ,sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and SUBSTR(T1.pd_cd,1,6) = '200101',t1.mon_acm_prcp_bal_acml*T2.cny_exr/10000,0)) / SUBSTR(CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'),7,2)                as  JGGL2_0037_01
FROM    edw.dws_bus_loan_dbil_inf_dd t1  --贷款借据汇总
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.acs_org_id=org.org_id and org.dt=t1.dt
left join edw.dim_bus_com_exr_inf_dd t2 --汇率信息
ON   T1.ccy_cd = T2.ccy_cd
and t1.dt=t2.dt
AND  T2.DT in  ('${data_dt}',to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd'),CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'))
where  t1.dt in  ('${data_dt}',to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd'),CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'))
--AND     t1.ORG_FLG = '0'    -- 汇总层级0团队1分行
AND    ( SUBSTR(T1.pd_cd,1,6) IN ('200101','200102')  OR SUBSTR(T1.pd_cd,1,4)='1001' OR  SUBSTR(T1.pd_cd,1,1)='4' )
AND     T1.pd_cd NOT IN ('2001010101003','2001020101003') --剔除随贷通
-- AND     t1.PD_FLG IN ( '2' , '1' , '3' )  -- 业务品种  【1：个人经营；2：个人消费；3：对公一般贷款；4：贸易融资；5：随贷通】
and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id
)t3  on  t.ORG_ID=t3.org_id
union all
SELECT  t.ORG_ID
        ,t.JGGL2_0023_01
        ,t.JGGL2_0023_02
        ,t.JGGL2_0023
        ,t.JGGL2_0025_01
        ,t.JGGL2_0025
        ,t.JGGL2_0028_01
        ,t.JGGL2_0028_02
        ,t.JGGL2_0028_03
        ,t.JGGL2_0023-t.JGGL2_0028_03  as JGGL2_0028
        ,t.JGGL2_0030_01
        ,t.JGGL2_0030_02
        ,t.JGGL2_0025-t.JGGL2_0030_02  as JGGL2_0030
        ,t.JGGL2_0033_01
        ,t.JGGL2_0033_02
        ,t.JGGL2_0033_03
        ,t.JGGL2_0023-t.JGGL2_0033_03  as JGGL2_0033
        ,t.JGGL2_0035_01
        ,t.JGGL2_0035_02
        ,t.JGGL2_0025-t.JGGL2_0035_02  as JGGL2_0035
        --,t2.JGGL2_0024_01
        --,t2.JGGL2_0024_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01)  as JGGL2_0024
        --,t2.JGGL2_0029_01
        --,t2.JGGL2_0029_01/if(t.JGGL2_0028_01=0,null,t.JGGL2_0028_01)  as JGGL2_0029_02
        --,(t2.JGGL2_0024_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01))-(t2.JGGL2_0029_01/if(t.JGGL2_0028_01=0,null,t.JGGL2_0028_01))  as JGGL2_0029
        --,t2.JGGL2_0034_01
        --t2.JGGL2_0034_01/if(t.JGGL2_0033_01=0,null,t.JGGL2_0033_01)  as JGGL2_0034_02
        --,(t2.JGGL2_0024_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01))-(t2.JGGL2_0034_01/if(t.JGGL2_0033_01=0,null,t.JGGL2_0033_01))  as JGGL2_0034
        ,t3.JGGL2_0026_01
        ,t3.JGGL2_0026_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01)  as JGGL2_0026
        ,t3.JGGL2_0027_01
        ,t3.JGGL2_0027_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01)  as JGGL2_0027
        ,t3.JGGL2_0031_01
        ,t3.JGGL2_0031_01/if(t.JGGL2_0028_01=0,null,t.JGGL2_0028_01)  as JGGL2_0031_02
        ,(t3.JGGL2_0026_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01))-(t3.JGGL2_0031_01/if(t.JGGL2_0028_01=0,null,t.JGGL2_0028_01))  as JGGL2_0031
        ,t3.JGGL2_0032_01
        ,t3.JGGL2_0032_01/if(t.JGGL2_0028_01=0,null,t.JGGL2_0028_01)  as JGGL2_0032_02
        ,(t3.JGGL2_0027_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01))-(t3.JGGL2_0032_01/if(t.JGGL2_0028_01=0,null,t.JGGL2_0028_01))  as JGGL2_0032
        ,t3.JGGL2_0036_01
        ,t3.JGGL2_0036_01/if(t.JGGL2_0033_01=0,null,t.JGGL2_0033_01)  as JGGL2_0036_02
        ,(t3.JGGL2_0026_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01))-(t3.JGGL2_0036_01/if(t.JGGL2_0033_01=0,null,t.JGGL2_0033_01))  as JGGL2_0036
        ,t3.JGGL2_0037_01
        ,t3.JGGL2_0037_01/if(t.JGGL2_0033_01=0,null,t.JGGL2_0033_01)  as JGGL2_0037_02
        ,(t3.JGGL2_0027_01/if(t.JGGL2_0023_01=0,null,t.JGGL2_0023_01))-(t3.JGGL2_0037_01/if(t.JGGL2_0033_01=0,null,t.JGGL2_0033_01))  as JGGL2_0037
from (
select  org.brc_org_id                                                            as  ORG_ID
        ,sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0))/10000              as  JGGL2_0023_01
        ,sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID='100005',mth_avg_bal_amt,0))/10000              as  JGGL2_0023_02
        ,sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID='100005',mth_avg_bal_amt,0))
        /IF(sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) = 0, NULL, sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) )  as JGGL2_0023
        ,sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID in ('100012','100013'),mth_avg_bal_amt,0))/10000              as  JGGL2_0025_01
        ,sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID in ('100012','100013'),mth_avg_bal_amt,0))
        /IF(sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) = 0, NULL, sum(if(t1.dt='${data_dt}' and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) )  as JGGL2_0025
        ,sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0))/10000              as  JGGL2_0028_01
        ,sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID='100005',mth_avg_bal_amt,0))/10000              as  JGGL2_0028_02
        ,sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID='100005',mth_avg_bal_amt,0))
        /IF(sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) = 0, NULL, sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) )  as JGGL2_0028_03
        ,sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID in ('100012','100013'),mth_avg_bal_amt,0))/10000              as  JGGL2_0030_01
        ,sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID in ('100012','100013'),mth_avg_bal_amt,0))
        /IF(sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) = 0, NULL, sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) )  as JGGL2_0030_02
        ,sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0))/10000              as  JGGL2_0033_01
        ,sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID='100005',mth_avg_bal_amt,0))/10000              as  JGGL2_0033_02
        ,sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID='100005',mth_avg_bal_amt,0))
        /IF(sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) = 0, NULL, sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) )  as JGGL2_0033_03
        ,sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID in ('100012','100013'),mth_avg_bal_amt,0))/10000              as  JGGL2_0035_01
        ,sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID in ('100012','100013'),mth_avg_bal_amt,0))
        /IF(sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) = 0, NULL, sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t1.ACG_STC_MSR_ID='100014',mth_avg_bal_amt,0)) )  as JGGL2_0035_02
from    app_rpt.fct_fpd_ln_by_pd t1 ---贷款分产品统计表
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.acg_org_id=org.org_id and org.dt=t1.dt
where  t1.dt in  ('${data_dt}',to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd'),CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'))
and  t1.ccy_cd='CN' --本外币合计
and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id
)t
-- left JOIN (
-- select  org.brc_org_id                                                            as  ORG_ID
--         ,t1.policy_loan_mon_avg/10000  as JGGL2_0024_01
--         ,(t1.policy_loan_mon_avg-t1.policy_loan_last_mon_mon_avg)/10000   as  JGGL2_0029_01
--         ,(t1.policy_loan_mon_avg-t1.policy_loan_last_year_mon_avg)/10000  as  JGGL2_0034_01
-- from    app_rpt.fct_bus_loan_low_intr_sum_inf_dd t1
-- left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.org_id=org.org_id and org.dt='${data_dt}'
-- where  t1.dt = '${data_dt}'
-- and    t1.org_lvl='F'  --分行
-- and nvl(org.brc_org_id,'')<>''
-- )t2  on  t.ORG_ID=t2.ORG_ID
left join (
SELECT  org.brc_org_id                                                            as  ORG_ID
        ,sum(if(t1.dt='${data_dt}' and (SUBSTR(T1.pd_cd,1,6) = '200102' OR SUBSTR(T1.pd_cd,1,4)='1001' OR  SUBSTR(T1.pd_cd,1,1)='4'),t1.mon_acm_prcp_bal_acml*T2.cny_exr/10000,0))/ SUBSTR('${data_dt}',7,2)     as  JGGL2_0026_01
        ,sum(if(t1.dt='${data_dt}' and SUBSTR(T1.pd_cd,1,6) = '200101',t1.mon_acm_prcp_bal_acml*T2.cny_exr/10000,0))/ SUBSTR('${data_dt}',7,2)               as  JGGL2_0027_01
        ,sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and (SUBSTR(T1.pd_cd,1,6) = '200102' OR SUBSTR(T1.pd_cd,1,4)='1001' OR  SUBSTR(T1.pd_cd,1,1)='4'),t1.mon_acm_prcp_bal_acml*T2.cny_exr/10000,0))/ SUBSTR(to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd'),7,2)   as  JGGL2_0031_01
        ,sum(if(t1.dt=to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd') and SUBSTR(T1.pd_cd,1,6) = '200101',t1.mon_acm_prcp_bal_acml*T2.cny_exr/10000,0)) / SUBSTR(to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd'),7,2)            as  JGGL2_0032_01
        ,sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and (SUBSTR(T1.pd_cd,1,6) = '200102' OR SUBSTR(T1.pd_cd,1,4)='1001' OR  SUBSTR(T1.pd_cd,1,1)='4'),t1.mon_acm_prcp_bal_acml*T2.cny_exr/10000,0)) / SUBSTR(CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'),7,2)        as  JGGL2_0036_01
        ,sum(if(t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and SUBSTR(T1.pd_cd,1,6) = '200101',t1.mon_acm_prcp_bal_acml*T2.cny_exr/10000,0)) / SUBSTR(CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'),7,2)                as  JGGL2_0037_01
FROM    edw.dws_bus_loan_dbil_inf_dd t1  --贷款借据表
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.acs_org_id=org.org_id and org.dt=t1.dt
left join edw.dim_bus_com_exr_inf_dd t2 --汇率信息
ON   T1.ccy_cd = T2.ccy_cd
and t1.dt=t2.dt
AND  T2.DT in  ('${data_dt}',to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd'),CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'))
where  t1.dt in  ('${data_dt}',to_char(dateadd(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), -1, 'dd'), 'yyyymmdd'),CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'))
--AND     t1.ORG_FLG = '0'    -- 汇总层级0团队1分行
AND    ( SUBSTR(T1.pd_cd,1,6) IN ('200101','200102')  OR SUBSTR(T1.pd_cd,1,4)='1001' OR  SUBSTR(T1.pd_cd,1,1)='4' )
AND     T1.pd_cd NOT IN ('2001010101003','2001020101003') --剔除随贷通
-- AND     t1.PD_FLG IN ( '2' , '1' , '3' )  -- 业务品种  【1：个人经营；2：个人消费；3：对公一般贷款；4：贸易融资；5：随贷通】
and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id
)t3  on  t.ORG_ID=t3.org_id
;

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05;
CREATE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 as
SELECT t.org_id  as org_id
       ,sum(if(t.cst_type='1',loan_mon_avg_cur,0))/10000   as JGGL2_0038_02
       ,sum(loan_mon_avg_cur)/10000   as  JGGL2_0038_01
       ,sum(if(t.cst_type='1',loan_mon_avg_cur,0))/if(sum(loan_mon_avg_cur) = 0, NULL, sum(loan_mon_avg_cur))  as JGGL2_0038
       ,sum(if(t.cst_type='2',loan_mon_avg_cur,0))/10000   as JGGL2_0039_01
       ,sum(if(t.cst_type='2',loan_mon_avg_cur,0))/if(sum(loan_mon_avg_cur) = 0, NULL, sum(loan_mon_avg_cur))  as JGGL2_0039
       ,sum(if(t.cst_type='3',loan_mon_avg_cur,0))/10000   as JGGL2_0040_01
       ,sum(if(t.cst_type='3',loan_mon_avg_cur,0))/if(sum(loan_mon_avg_cur) = 0, NULL, sum(loan_mon_avg_cur))  as JGGL2_0040
       ,sum(if(t.cst_type='4',loan_mon_avg_cur,0))/10000   as JGGL2_0041_01
       ,sum(if(t.cst_type='4',loan_mon_avg_cur,0))/if(sum(loan_mon_avg_cur) = 0, NULL, sum(loan_mon_avg_cur))  as JGGL2_0041
       ,sum(if(t.cst_type='5',loan_mon_avg_cur,0))/10000   as JGGL2_0042_01
       ,sum(if(t.cst_type='5',loan_mon_avg_cur,0))/if(sum(loan_mon_avg_cur) = 0, NULL, sum(loan_mon_avg_cur))  as JGGL2_0042
       ,sum(if(t.cst_type in ('6','7'),loan_mon_avg_cur,0))/10000   as JGGL2_0043_01
       ,sum(if(t.cst_type in ('6','7'),loan_mon_avg_cur,0))/if(sum(loan_mon_avg_cur) = 0, NULL, sum(loan_mon_avg_cur))  as JGGL2_0043
       ,sum(if(t.cst_type='1',loan_mon_avg_lsty,0))/10000   as JGGL2_0044_02
       ,sum(loan_mon_avg_lsty)/10000   as  JGGL2_0044_01
       ,sum(if(t.cst_type='1',loan_mon_avg_lsty,0))/if(sum(loan_mon_avg_lsty) = 0, NULL, sum(loan_mon_avg_lsty))  as JGGL2_0044_03
       ,sum(if(t.cst_type='1',loan_mon_avg_cur,0))/if(sum(loan_mon_avg_cur) = 0, NULL, sum(loan_mon_avg_cur))-sum(if(t.cst_type='1',loan_mon_avg_lsty,0))/if(sum(loan_mon_avg_lsty) = 0, NULL, sum(loan_mon_avg_lsty)) as JGGL2_0044
       ,sum(if(t.cst_type='2',loan_mon_avg_lsty,0))/10000   as JGGL2_0045_01
       ,sum(if(t.cst_type='2',loan_mon_avg_lsty,0))/if(sum(loan_mon_avg_lsty) = 0, NULL, sum(loan_mon_avg_lsty))  as JGGL2_0045_02
       ,sum(if(t.cst_type='2',loan_mon_avg_cur,0))/if(sum(loan_mon_avg_cur) = 0, NULL, sum(loan_mon_avg_cur))-sum(if(t.cst_type='2',loan_mon_avg_lsty,0))/if(sum(loan_mon_avg_lsty) = 0, NULL, sum(loan_mon_avg_lsty)) as JGGL2_0045
       ,sum(if(t.cst_type='3',loan_mon_avg_lsty,0))/10000   as JGGL2_0046_01
       ,sum(if(t.cst_type='3',loan_mon_avg_lsty,0))/if(sum(loan_mon_avg_lsty) = 0, NULL, sum(loan_mon_avg_lsty))  as JGGL2_0046_02
       ,sum(if(t.cst_type='3',loan_mon_avg_cur,0))/if(sum(loan_mon_avg_cur) = 0, NULL, sum(loan_mon_avg_cur))-sum(if(t.cst_type='3',loan_mon_avg_lsty,0))/if(sum(loan_mon_avg_lsty) = 0, NULL, sum(loan_mon_avg_lsty)) as JGGL2_0046
       ,sum(if(t.cst_type='4',loan_mon_avg_lsty,0))/10000   as JGGL2_0047_01
       ,sum(if(t.cst_type='4',loan_mon_avg_lsty,0))/if(sum(loan_mon_avg_lsty) = 0, NULL, sum(loan_mon_avg_lsty))  as JGGL2_0047_02
       ,sum(if(t.cst_type='4',loan_mon_avg_cur,0))/if(sum(loan_mon_avg_cur) = 0, NULL, sum(loan_mon_avg_cur))-sum(if(t.cst_type='4',loan_mon_avg_lsty,0))/if(sum(loan_mon_avg_lsty) = 0, NULL, sum(loan_mon_avg_lsty)) as JGGL2_0047
       ,sum(if(t.cst_type='5',loan_mon_avg_lsty,0))/10000   as JGGL2_0048_01
       ,sum(if(t.cst_type='5',loan_mon_avg_lsty,0))/if(sum(loan_mon_avg_lsty) = 0, NULL, sum(loan_mon_avg_lsty))  as JGGL2_0048_02
       ,sum(if(t.cst_type='5',loan_mon_avg_cur,0))/if(sum(loan_mon_avg_cur) = 0, NULL, sum(loan_mon_avg_cur))-sum(if(t.cst_type='5',loan_mon_avg_lsty,0))/if(sum(loan_mon_avg_lsty) = 0, NULL, sum(loan_mon_avg_lsty)) as JGGL2_0048
       ,sum(if(t.cst_type in ('6','7'),loan_mon_avg_lsty,0))/10000   as JGGL2_0049_01
       ,sum(if(t.cst_type in ('6','7'),loan_mon_avg_lsty,0))/if(sum(loan_mon_avg_lsty) = 0, NULL, sum(loan_mon_avg_lsty))  as JGGL2_0049_02
       ,sum(if(t.cst_type in ('6','7'),loan_mon_avg_cur,0))/if(sum(loan_mon_avg_cur) = 0, NULL, sum(loan_mon_avg_cur))-sum(if(t.cst_type in ('6','7'),loan_mon_avg_lsty,0))/if(sum(loan_mon_avg_lsty) = 0, NULL, sum(loan_mon_avg_lsty)) as JGGL2_0049
from app_rpt.FCT_LOAN_MON_AVG_ORG_STAT t
where t.dt='${data_dt}'
GROUP BY t.org_id
;



--**************************综合经营**********************************
DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_01;
CREATE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_01 as
select  t.org_id      as   ORG_ID
        ,t.ZHJY2_0001_01
        ,t.ZHJY2_0001_02
        ,t.ZHJY2_0001
        ,t1.ZHJY2_0002_01
        ,t1.ZHJY2_0002_02
        ,t1.ZHJY2_0002_03
        ,t.ZHJY2_0001-t1.ZHJY2_0002_03  as ZHJY2_0002
from  (
SELECT  t.org_id
        ,sum(t.loss_cst_num) as ZHJY2_0001_01
        ,sum(t.last_opr_cst_num) as ZHJY2_0001_02
        ,sum(t.loss_cst_num)/sum(t.last_opr_cst_num) AS ZHJY2_0001
from  app_rpt.fct_cst_opr_loan_prt_dd  t
where t.dt=${data_dt}
and   t.org_type in ('F','Z','T')
and   t.rsk_hidden_cd='剔除风险退出'
and   substr(t.org_id,1,7)<>'3302052' --剔除钱塘小微
GROUP BY t.org_id
)t
left join (
SELECT  t.org_id
        ,sum(t.loss_cst_num)  as ZHJY2_0002_01
        ,sum(t.last_opr_cst_num)  as ZHJY2_0002_02
        ,sum(t.loss_cst_num)/sum(t.last_opr_cst_num) AS ZHJY2_0002_03
from  app_rpt.fct_cst_opr_loan_prt_dd  t
where t.dt=to_char(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'),'yyyyMMdd')
and   t.org_type in ('F','Z','T')
and   t.rsk_hidden_cd='剔除风险退出'
and   substr(t.org_id,1,7)<>'3302052' --剔除钱塘小微
GROUP BY t.org_id
)t1  on t.org_id=t1.org_id
;

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_02;
CREATE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_02 as
SELECT  t.ORG_ID    as  ORG_ID
        ,t.ZHJY2_0003_01
        ,t.ZHJY2_0003_02
        ,t.ZHJY2_0003
        ,t.ZHJY2_0004_01
        ,t.ZHJY2_0004_02
        ,t.ZHJY2_0004
        ,t1.ZHJY2_0005_01
        ,t1.ZHJY2_0005_02
        ,t1.ZHJY2_0005_03
        ,t.ZHJY2_0003 - t1.ZHJY2_0005_03             as ZHJY2_0005
from (
SELECT org.tem_org_id    as  ORG_ID
        ,sum(case when t.bind_lmt>0 then 1 else 0 end)  as ZHJY2_0003_01
        ,count(t.cst_id)                                as ZHJY2_0003_02
        ,sum(case when t.bind_lmt>0 then 1 else 0 end)/IF(count(t.cst_id) = 0, NULL, count(t.cst_id) ) as ZHJY2_0003
        ,sum(t.prcp_bal_avg_m)/IF(sum(case when t.bind_lmt>0 then 1 else 0 end) = 0, NULL, sum(case when t.bind_lmt>0 then 1 else 0 end) )  as ZHJY2_0004_01
        ,sum(t.bind_lmt)/IF(sum(case when t.bind_lmt>0 then 1 else 0 end) = 0, NULL, sum(case when t.bind_lmt>0 then 1 else 0 end) )  as ZHJY2_0004_02
        ,(sum(t.prcp_bal_avg_m)/IF(sum(case when t.bind_lmt>0 then 1 else 0 end) = 0, NULL, sum(case when t.bind_lmt>0 then 1 else 0 end)) )
        /
        (sum(t.bind_lmt)/IF(sum(case when t.bind_lmt>0 then 1 else 0 end) = 0, NULL, sum(case when t.bind_lmt>0 then 1 else 0 end) ))  as ZHJY2_0004
from app_rpt.fct_buss_loan_alc_fnc_card_dd t
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
where t.dt=${data_dt}
GROUP BY org.tem_org_id
) t
left join (
SELECT  org.tem_org_id    as  ORG_ID
        ,sum(case when t.bind_lmt>0 then 1 else 0 end)  as ZHJY2_0005_01
        ,count(t.cst_id)   as  ZHJY2_0005_02
        ,sum(case when t.bind_lmt>0 then 1 else 0 end)/IF(count(t.cst_id) = 0, NULL, count(t.cst_id) )  as ZHJY2_0005_03
from app_rpt.fct_buss_loan_alc_fnc_card_dd t
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
where t.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
GROUP BY org.tem_org_id
)t1 on t.ORG_ID=t1.ORG_ID
UNION ALL
SELECT  t.ORG_ID    as  ORG_ID
        ,t.ZHJY2_0003_01
        ,t.ZHJY2_0003_02
        ,t.ZHJY2_0003
        ,t.ZHJY2_0004_01
        ,t.ZHJY2_0004_02
        ,t.ZHJY2_0004
        ,t1.ZHJY2_0005_01
        ,t1.ZHJY2_0005_02
        ,t1.ZHJY2_0005_03
        ,t.ZHJY2_0003 - t1.ZHJY2_0005_03             as ZHJY2_0005
from (
SELECT org.sbr_org_id    as  ORG_ID
        ,sum(case when t.bind_lmt>0 then 1 else 0 end)  as ZHJY2_0003_01
        ,count(t.cst_id)                                as ZHJY2_0003_02
        ,sum(case when t.bind_lmt>0 then 1 else 0 end)/IF(count(t.cst_id) = 0, NULL, count(t.cst_id) ) as ZHJY2_0003
        ,sum(t.prcp_bal_avg_m)/IF(sum(case when t.bind_lmt>0 then 1 else 0 end) = 0, NULL, sum(case when t.bind_lmt>0 then 1 else 0 end) )  as ZHJY2_0004_01
        ,sum(t.bind_lmt)/IF(sum(case when t.bind_lmt>0 then 1 else 0 end) = 0, NULL, sum(case when t.bind_lmt>0 then 1 else 0 end) )  as ZHJY2_0004_02
        ,(sum(t.prcp_bal_avg_m)/IF(sum(case when t.bind_lmt>0 then 1 else 0 end) = 0, NULL, sum(case when t.bind_lmt>0 then 1 else 0 end)) )
        /
        (sum(t.bind_lmt)/IF(sum(case when t.bind_lmt>0 then 1 else 0 end) = 0, NULL, sum(case when t.bind_lmt>0 then 1 else 0 end) ))  as ZHJY2_0004
from app_rpt.fct_buss_loan_alc_fnc_card_dd t
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
where t.dt=${data_dt}
GROUP BY org.sbr_org_id
) t
left join (
SELECT  org.sbr_org_id    as  ORG_ID
        ,sum(case when t.bind_lmt>0 then 1 else 0 end)  as ZHJY2_0005_01
        ,count(t.cst_id)   as  ZHJY2_0005_02
        ,sum(case when t.bind_lmt>0 then 1 else 0 end)/IF(count(t.cst_id) = 0, NULL, count(t.cst_id) )  as ZHJY2_0005_03
from app_rpt.fct_buss_loan_alc_fnc_card_dd t
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
where t.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
GROUP BY org.sbr_org_id
)t1 on t.ORG_ID=t1.ORG_ID
UNION ALL
SELECT  t.ORG_ID    as  ORG_ID
        ,t.ZHJY2_0003_01
        ,t.ZHJY2_0003_02
        ,t.ZHJY2_0003
        ,t.ZHJY2_0004_01
        ,t.ZHJY2_0004_02
        ,t.ZHJY2_0004
        ,t1.ZHJY2_0005_01
        ,t1.ZHJY2_0005_02
        ,t1.ZHJY2_0005_03
        ,t.ZHJY2_0003 - t1.ZHJY2_0005_03             as ZHJY2_0005
from (
SELECT org.brc_org_id    as  ORG_ID
        ,sum(case when t.bind_lmt>0 then 1 else 0 end)  as ZHJY2_0003_01
        ,count(t.cst_id)                                as ZHJY2_0003_02
        ,sum(case when t.bind_lmt>0 then 1 else 0 end)/IF(count(t.cst_id) = 0, NULL, count(t.cst_id) ) as ZHJY2_0003
        ,sum(t.prcp_bal_avg_m)/IF(sum(case when t.bind_lmt>0 then 1 else 0 end) = 0, NULL, sum(case when t.bind_lmt>0 then 1 else 0 end) )  as ZHJY2_0004_01
        ,sum(t.bind_lmt)/IF(sum(case when t.bind_lmt>0 then 1 else 0 end) = 0, NULL, sum(case when t.bind_lmt>0 then 1 else 0 end) )  as ZHJY2_0004_02
        ,(sum(t.prcp_bal_avg_m)/IF(sum(case when t.bind_lmt>0 then 1 else 0 end) = 0, NULL, sum(case when t.bind_lmt>0 then 1 else 0 end)) )
        /
        (sum(t.bind_lmt)/IF(sum(case when t.bind_lmt>0 then 1 else 0 end) = 0, NULL, sum(case when t.bind_lmt>0 then 1 else 0 end) ))  as ZHJY2_0004
from app_rpt.fct_buss_loan_alc_fnc_card_dd t
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
where t.dt=${data_dt}
GROUP BY org.brc_org_id
) t
left join (
SELECT  org.brc_org_id    as  ORG_ID
        ,sum(case when t.bind_lmt>0 then 1 else 0 end)  as ZHJY2_0005_01
        ,count(t.cst_id)   as  ZHJY2_0005_02
        ,sum(case when t.bind_lmt>0 then 1 else 0 end)/IF(count(t.cst_id) = 0, NULL, count(t.cst_id) )  as ZHJY2_0005_03
from app_rpt.fct_buss_loan_alc_fnc_card_dd t
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
where t.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
GROUP BY org.brc_org_id
)t1 on t.ORG_ID=t1.ORG_ID
;

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_03;
CREATE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_03 as
SELECT  t1.tem_org_id   as ORG_ID
        ,nvl(sum(t1.dep_avg_y), 0)/10000    as   ZHJY2_0006_01
        ,nvl(sum(t1.loan_avg_y), 0)/10000   as   ZHJY2_0006_02
        ,nvl(sum(t1.dep_avg_y), 0)/if(sum(t1.loan_avg_y)=0, null,sum(t1.loan_avg_y))  AS ZHJY2_0006
        ,nvl(sum(t2.dep_avg_y), 0)/10000    as   ZHJY2_0007_01
        ,nvl(sum(t2.loan_avg_y), 0)/10000   as   ZHJY2_0007_02
        ,nvl(sum(t2.dep_avg_y), 0)/if(sum(t2.loan_avg_y)=0, null,sum(t2.loan_avg_y))  AS ZHJY2_0007_03
        ,(nvl(sum(t1.dep_avg_y), 0)/if(sum(t1.loan_avg_y)=0, null,sum(t1.loan_avg_y)))-(nvl(sum(t2.dep_avg_y), 0)/if(sum(t2.loan_avg_y)=0, null,sum(t2.loan_avg_y)))   as  ZHJY2_0007
FROM (
SELECT  org.tem_org_id,t1.dep_avg_y,t1.loan_avg_y
from  app_rpt.fct_opr_ln_cst_dep_rply_sam_rsk t1
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.org_id=org.org_id and org.dt='${data_dt}'
where t1.dt=${data_dt}
and  t1.org_type='T'
and nvl(org.tem_org_id,'')<>''
)t1
left join (
SELECT  org.tem_org_id,t1.dep_avg_y,t1.loan_avg_y
from  app_rpt.fct_opr_ln_cst_dep_rply_sam_rsk t1
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
where t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
and  t1.org_type='T'
and nvl(org.tem_org_id,'')<>''
)t2 on t1.tem_org_id=t2.tem_org_id
GROUP BY t1.tem_org_id
union all
SELECT  t1.sbr_org_id   as ORG_ID
        ,nvl(sum(t1.dep_avg_y), 0)/10000    as   ZHJY2_0006_01
        ,nvl(sum(t1.loan_avg_y), 0)/10000   as   ZHJY2_0006_02
        ,nvl(sum(t1.dep_avg_y), 0)/if(sum(t1.loan_avg_y)=0, null,sum(t1.loan_avg_y))  AS ZHJY2_0006
        ,nvl(sum(t2.dep_avg_y), 0)/10000    as   ZHJY2_0007_01
        ,nvl(sum(t2.loan_avg_y), 0)/10000   as   ZHJY2_0007_02
        ,nvl(sum(t2.dep_avg_y), 0)/if(sum(t2.loan_avg_y)=0, null,sum(t2.loan_avg_y))  AS ZHJY2_0007_03
        ,(nvl(sum(t1.dep_avg_y), 0)/if(sum(t1.loan_avg_y)=0, null,sum(t1.loan_avg_y)))-(nvl(sum(t2.dep_avg_y), 0)/if(sum(t2.loan_avg_y)=0, null,sum(t2.loan_avg_y)))   as  ZHJY2_0007
FROM (
SELECT  org.sbr_org_id,t1.dep_avg_y,t1.loan_avg_y
from  app_rpt.fct_opr_ln_cst_dep_rply_sam_rsk t1
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.org_id=org.org_id and org.dt='${data_dt}'
where t1.dt=${data_dt}
and  t1.org_type='Z'
and nvl(org.sbr_org_id,'')<>''
)t1
left join (
SELECT  org.sbr_org_id,t1.dep_avg_y,t1.loan_avg_y
from  app_rpt.fct_opr_ln_cst_dep_rply_sam_rsk t1
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
where t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
and  t1.org_type='Z'
and nvl(org.sbr_org_id,'')<>''
)t2 on t1.sbr_org_id=t2.sbr_org_id
GROUP BY t1.sbr_org_id
union all
SELECT  t1.brc_org_id   as ORG_ID
        ,nvl(sum(t1.dep_avg_y), 0)/10000    as   ZHJY2_0006_01
        ,nvl(sum(t1.loan_avg_y), 0)/10000   as   ZHJY2_0006_02
        ,nvl(sum(t1.dep_avg_y), 0)/if(sum(t1.loan_avg_y)=0, null,sum(t1.loan_avg_y))  AS ZHJY2_0006
        ,nvl(sum(t2.dep_avg_y), 0)/10000    as   ZHJY2_0007_01
        ,nvl(sum(t2.loan_avg_y), 0)/10000   as   ZHJY2_0007_02
        ,nvl(sum(t2.dep_avg_y), 0)/if(sum(t2.loan_avg_y)=0, null,sum(t2.loan_avg_y))  AS ZHJY2_0007_03
        ,(nvl(sum(t1.dep_avg_y), 0)/if(sum(t1.loan_avg_y)=0, null,sum(t1.loan_avg_y)))-(nvl(sum(t2.dep_avg_y), 0)/if(sum(t2.loan_avg_y)=0, null,sum(t2.loan_avg_y)))   as  ZHJY2_0007
FROM (
SELECT  org.brc_org_id,t1.dep_avg_y,t1.loan_avg_y
from  app_rpt.fct_opr_ln_cst_dep_rply_sam_rsk t1
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.org_id=org.org_id and org.dt='${data_dt}'
where t1.dt=${data_dt}
and  t1.org_type='F'
and nvl(org.brc_org_id,'')<>''
)t1
left join (
SELECT  org.brc_org_id,t1.dep_avg_y,t1.loan_avg_y
from  app_rpt.fct_opr_ln_cst_dep_rply_sam_rsk t1
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
where t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
and  t1.org_type='F'
and nvl(org.brc_org_id,'')<>''
)t2 on t1.brc_org_id=t2.brc_org_id
GROUP BY t1.brc_org_id
;

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_04;
CREATE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_04 as
SELECT  t.ORG_ID  as ORG_ID
        ,t.ZHJY2_0008_01
        ,t.ZHJY2_0008_02
        ,t.ZHJY2_0008
        ,t1.ZHJY2_0009_01
        ,t1.ZHJY2_0009_02
        ,t1.ZHJY2_0009_03
        ,t.ZHJY2_0008 - t1.ZHJY2_0009_03  as ZHJY2_0009
from  (
SELECT  org.tem_org_id    as ORG_ID
        ,count(distinct t1.cst_id)   as  ZHJY2_0008_01
        ,nvl(count(distinct decode(t4.efe_dep_cst_ind, '1', t1.cst_id, 'xxxx')) - 1, 0)  as  ZHJY2_0008_02
        , nvl(count(distinct decode(t4.efe_dep_cst_ind, '1', t1.cst_id, 'xxxx')) - 1, 0)/if(count(distinct t1.cst_id)=0,null, count(distinct t1.cst_id))  AS ZHJY2_0008
from    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t1 --合同基础信息
left join    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
on      t1.cst_id = t2.cst_id
and     t2.dt = ${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD L --合同其它明细信息
ON      t1.CTR_SERNO = L.CTR_SERNO
AND     L.dt ='${data_dt}'
left join     adm_pub.adm_csm_cbas_ind_inf_dd t4
on      t1.cst_id = t4.cst_id
and     (t4.efe_cst_ind = '1' or t4.efe_loan_cst_ind = '1' or t4.efe_dep_cst_ind = '1')
and     t4.dt = ${data_dt}
INNER JOIN    (
                  SELECT  t.cst_id
                          ,sum(t.ctr_amt) AS sum_ctr_amt
                  FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t
				  LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
                  ON      t.CTR_SERNO = t2.CTR_SERNO
                   AND     t2.dt ='${data_dt}'
                  WHERE   t.dt = ${data_dt}
                  AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
                 AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
                 AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
                 AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
                 AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
                 AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
                 --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
                 AND     (
                  ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
                 OR t.CTR_BAL > 0
                 )
                  GROUP BY t.cst_id
                   HAVING sum(t.ctr_amt) >= 10000 ----金额1万元（含）以上
              ) t5
ON      t1.cst_id = t5.cst_id
where   1 = 1
AND     T1.PRD_NO <> '2002010101001' --剔除信用卡合同
AND     T1.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
AND     ( L.APLY_CHNL_CD <> 'L08' OR T1.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
AND     T1.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
AND     T1.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     ( T1.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(T1.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
--未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
AND     (
 ( T1.CTR_STS_CD IN ( '2' , '4' ) AND T1.TMT_DT = '18991231' AND TO_DATE(T1.CTR_MTU_DT, 'yyyyMMdd') >= TO_DATE(T1.DT, 'yyyyMMdd') )
OR T1.CTR_BAL  > 0
  )
and     t1.dt = ${data_dt}
and nvl(org.tem_org_id,'')<>''
group by org.tem_org_id
)t
LEFT JOIN (
SELECT  org.tem_org_id    as ORG_ID
        ,count(distinct t1.cst_id)   as  ZHJY2_0009_01
        ,nvl(count(distinct decode(t4.efe_dep_cst_ind, '1', t1.cst_id, 'xxxx')) - 1, 0)  as  ZHJY2_0009_02
        , nvl(count(distinct decode(t4.efe_dep_cst_ind, '1', t1.cst_id, 'xxxx')) - 1, 0)/if(count(distinct t1.cst_id)=0,null, count(distinct t1.cst_id))  AS ZHJY2_0009_03
from    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t1
left join    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
on      t1.cst_id = t2.cst_id
and     t2.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD L --合同其它明细信息
ON      t1.CTR_SERNO = L.CTR_SERNO
AND     L.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join     adm_pub.adm_csm_cbas_ind_inf_dd t4
on      t1.cst_id = t4.cst_id
and     (t4.efe_cst_ind = '1' or t4.efe_loan_cst_ind = '1' or t4.efe_dep_cst_ind = '1')
and     t4.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
INNER JOIN    (
                  SELECT  t.cst_id
                          ,sum(t.ctr_amt) AS sum_ctr_amt
                  FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t
				  LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
                 ON      t.CTR_SERNO = t2.CTR_SERNO
                AND     t2.dt =CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
                  WHERE   t.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
                     AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
                 AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
                 AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
                 AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
                 AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
                 AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
                 --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
                 AND     (
                  ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
                 OR t.CTR_BAL > 0
                 )
                  GROUP BY t.cst_id
                   HAVING sum(t.ctr_amt) >= 10000 ----金额1万元（含）以上
              ) t5
ON      t1.cst_id = t5.cst_id
where   1 = 1
AND     T1.PRD_NO <> '2002010101001' --剔除信用卡合同
AND     T1.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
AND     ( L.APLY_CHNL_CD <> 'L08' OR T1.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
AND     T1.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
AND     T1.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     ( T1.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(T1.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
--未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
AND     (
 ( T1.CTR_STS_CD IN ( '2' , '4' ) AND T1.TMT_DT = '18991231' AND TO_DATE(T1.CTR_MTU_DT, 'yyyyMMdd') >= TO_DATE(T1.DT, 'yyyyMMdd') )
OR T1.CTR_BAL  > 0
  )
and     t1.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
and nvl(org.tem_org_id,'')<>''
group by org.tem_org_id
)t1 on t.ORG_ID=t1.ORG_ID
union all
SELECT  t.ORG_ID  as ORG_ID
        ,t.ZHJY2_0008_01
        ,t.ZHJY2_0008_02
        ,t.ZHJY2_0008
        ,t1.ZHJY2_0009_01
        ,t1.ZHJY2_0009_02
        ,t1.ZHJY2_0009_03
        ,t.ZHJY2_0008 - t1.ZHJY2_0009_03  as ZHJY2_0009
from  (
SELECT  org.sbr_org_id    as ORG_ID
        ,count(distinct t1.cst_id)   as  ZHJY2_0008_01
        ,nvl(count(distinct decode(t4.efe_dep_cst_ind, '1', t1.cst_id, 'xxxx')) - 1, 0)  as  ZHJY2_0008_02
        , nvl(count(distinct decode(t4.efe_dep_cst_ind, '1', t1.cst_id, 'xxxx')) - 1, 0)/if(count(distinct t1.cst_id)=0,null, count(distinct t1.cst_id))  AS ZHJY2_0008
from    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t1
left join    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
on      t1.cst_id = t2.cst_id
and     t2.dt = ${data_dt}
LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD L --合同其它明细信息
ON      t1.CTR_SERNO = L.CTR_SERNO
AND     L.dt ='${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
left join     adm_pub.adm_csm_cbas_ind_inf_dd t4
on      t1.cst_id = t4.cst_id
and     (t4.efe_cst_ind = '1' or t4.efe_loan_cst_ind = '1' or t4.efe_dep_cst_ind = '1')
and     t4.dt = ${data_dt}
INNER JOIN    (
                  SELECT  t.cst_id
                          ,sum(t.ctr_amt) AS sum_ctr_amt
                  FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t
				  LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
                   ON      t.CTR_SERNO = t2.CTR_SERNO
                  AND     t2.dt ='${data_dt}'
                  WHERE   t.dt = ${data_dt}
               AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
                 AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
                 AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
                 AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
                 AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
                 AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
                 --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
                 AND     (
                  ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
                 OR t.CTR_BAL > 0
                 )
                  GROUP BY t.cst_id
                   HAVING sum(t.ctr_amt) >= 10000 ----金额1万元（含）以上
              ) t5
ON      t1.cst_id = t5.cst_id
where   1 = 1
AND     T1.PRD_NO <> '2002010101001' --剔除信用卡合同
AND     T1.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
AND     ( L.APLY_CHNL_CD <> 'L08' OR T1.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
AND     T1.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
AND     T1.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     ( T1.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(T1.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
--未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
AND     (
 ( T1.CTR_STS_CD IN ( '2' , '4' ) AND T1.TMT_DT = '18991231' AND TO_DATE(T1.CTR_MTU_DT, 'yyyyMMdd') >= TO_DATE(T1.DT, 'yyyyMMdd') )
OR T1.CTR_BAL  > 0
  )
and     t1.dt = ${data_dt}
and nvl(org.sbr_org_id,'')<>''
group by org.sbr_org_id
)t
LEFT JOIN (
SELECT  org.sbr_org_id    as ORG_ID
        ,count(distinct t1.cst_id)   as  ZHJY2_0009_01
        ,nvl(count(distinct decode(t4.efe_dep_cst_ind, '1', t1.cst_id, 'xxxx')) - 1, 0)  as  ZHJY2_0009_02
        , nvl(count(distinct decode(t4.efe_dep_cst_ind, '1', t1.cst_id, 'xxxx')) - 1, 0)/if(count(distinct t1.cst_id)=0,null, count(distinct t1.cst_id))  AS ZHJY2_0009_03
from    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t1
left join    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
on      t1.cst_id = t2.cst_id
and     t2.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD L --合同其它明细信息
ON      t1.CTR_SERNO = L.CTR_SERNO
AND     L.dt =CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join     adm_pub.adm_csm_cbas_ind_inf_dd t4
on      t1.cst_id = t4.cst_id
and     (t4.efe_cst_ind = '1' or t4.efe_loan_cst_ind = '1' or t4.efe_dep_cst_ind = '1')
and     t4.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
INNER JOIN    (
                  SELECT  t.cst_id
                          ,sum(t.ctr_amt) AS sum_ctr_amt
                  FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t
				  LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
                 ON      t.CTR_SERNO = t2.CTR_SERNO
                AND     t2.dt =CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
                  WHERE   t.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
                     AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
                 AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
                 AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
                 AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
                 AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
                 AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
                 --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
                 AND     (
                  ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
                 OR t.CTR_BAL > 0
                 )
                  GROUP BY t.cst_id
                   HAVING sum(t.ctr_amt) >= 10000 ----金额1万元（含）以上
              ) t5
ON      t1.cst_id = t5.cst_id
where   1 = 1
AND     T1.PRD_NO <> '2002010101001' --剔除信用卡合同
AND     T1.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
AND     ( L.APLY_CHNL_CD <> 'L08' OR T1.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
AND     T1.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
AND     T1.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     ( T1.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(T1.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
--未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
AND     (
 ( T1.CTR_STS_CD IN ( '2' , '4' ) AND T1.TMT_DT = '18991231' AND TO_DATE(T1.CTR_MTU_DT, 'yyyyMMdd') >= TO_DATE(T1.DT, 'yyyyMMdd') )
OR T1.CTR_BAL  > 0
  )
and     t1.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
and nvl(org.sbr_org_id,'')<>''
group by org.sbr_org_id
)t1 on t.ORG_ID=t1.ORG_ID
union all
SELECT  t.ORG_ID  as ORG_ID
        ,t.ZHJY2_0008_01
        ,t.ZHJY2_0008_02
        ,t.ZHJY2_0008
        ,t1.ZHJY2_0009_01
        ,t1.ZHJY2_0009_02
        ,t1.ZHJY2_0009_03
        ,t.ZHJY2_0008 - t1.ZHJY2_0009_03  as ZHJY2_0009
from  (
SELECT  org.brc_org_id    as ORG_ID
        ,count(distinct t1.cst_id)   as  ZHJY2_0008_01
        ,nvl(count(distinct decode(t4.efe_dep_cst_ind, '1', t1.cst_id, 'xxxx')) - 1, 0)  as  ZHJY2_0008_02
        , nvl(count(distinct decode(t4.efe_dep_cst_ind, '1', t1.cst_id, 'xxxx')) - 1, 0)/if(count(distinct t1.cst_id)=0,null, count(distinct t1.cst_id))  AS ZHJY2_0008
from    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t1
left join    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
on      t1.cst_id = t2.cst_id
and     t2.dt = ${data_dt}
LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD L --合同其它明细信息
ON      t1.CTR_SERNO = L.CTR_SERNO
AND     L.dt ='${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
left join     adm_pub.adm_csm_cbas_ind_inf_dd t4
on      t1.cst_id = t4.cst_id
and     (t4.efe_cst_ind = '1' or t4.efe_loan_cst_ind = '1' or t4.efe_dep_cst_ind = '1')
and     t4.dt = ${data_dt}
INNER JOIN    (
                  SELECT  t.cst_id
                          ,sum(t.ctr_amt) AS sum_ctr_amt
                  FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t
				  LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
                 ON      t.CTR_SERNO = t2.CTR_SERNO
                AND     t2.dt ='${data_dt}'
                  WHERE   t.dt = ${data_dt}
                                 AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
                 AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
                 AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
                 AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
                 AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
                 AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
                 --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
                 AND     (
                  ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
                 OR t.CTR_BAL > 0
                 )
                  GROUP BY t.cst_id
                   HAVING sum(t.ctr_amt) >= 10000 ----金额1万元（含）以上
              ) t5
ON      t1.cst_id = t5.cst_id
where   1 = 1
AND     T1.PRD_NO <> '2002010101001' --剔除信用卡合同
AND     T1.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
AND     ( L.APLY_CHNL_CD <> 'L08' OR T1.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
AND     T1.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
AND     T1.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     ( T1.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(T1.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
--未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
AND     (
 ( T1.CTR_STS_CD IN ( '2' , '4' ) AND T1.TMT_DT = '18991231' AND TO_DATE(T1.CTR_MTU_DT, 'yyyyMMdd') >= TO_DATE(T1.DT, 'yyyyMMdd') )
OR T1.CTR_BAL  > 0
  )
and     t1.dt = ${data_dt}
and nvl(org.brc_org_id,'')<>''
group by org.brc_org_id
)t
LEFT JOIN (
SELECT  org.brc_org_id    as ORG_ID
        ,count(distinct t1.cst_id)   as  ZHJY2_0009_01
        ,nvl(count(distinct decode(t4.efe_dep_cst_ind, '1', t1.cst_id, 'xxxx')) - 1, 0)  as  ZHJY2_0009_02
        , nvl(count(distinct decode(t4.efe_dep_cst_ind, '1', t1.cst_id, 'xxxx')) - 1, 0)/if(count(distinct t1.cst_id)=0,null, count(distinct t1.cst_id))  AS ZHJY2_0009_03
from    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t1
left join    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
on      t1.cst_id = t2.cst_id
and     t2.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD L --合同其它明细信息
ON      t1.CTR_SERNO = L.CTR_SERNO
AND     L.dt =CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join     adm_pub.adm_csm_cbas_ind_inf_dd t4
on      t1.cst_id = t4.cst_id
and     (t4.efe_cst_ind = '1' or t4.efe_loan_cst_ind = '1' or t4.efe_dep_cst_ind = '1')
and     t4.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
INNER JOIN    (
                  SELECT  t.cst_id
                          ,sum(t.ctr_amt) AS sum_ctr_amt
                  FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t
				  LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
                 ON      t.CTR_SERNO = t2.CTR_SERNO
                AND     t2.dt =CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
                  WHERE   t.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
                                     AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
                 AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
                 AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
                 AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
                 AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
                 AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
                 --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
                 AND     (
                  ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
                 OR t.CTR_BAL > 0
                 )
                  GROUP BY t.cst_id
                   HAVING sum(t.ctr_amt) >= 10000 ----金额1万元（含）以上
              ) t5
ON      t1.cst_id = t5.cst_id
where   1 = 1
AND     T1.PRD_NO <> '2002010101001' --剔除信用卡合同
AND     T1.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
AND     ( L.APLY_CHNL_CD <> 'L08' OR T1.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
AND     T1.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
AND     T1.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     ( T1.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(T1.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
--未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
AND     (
 ( T1.CTR_STS_CD IN ( '2' , '4' ) AND T1.TMT_DT = '18991231' AND TO_DATE(T1.CTR_MTU_DT, 'yyyyMMdd') >= TO_DATE(T1.DT, 'yyyyMMdd') )
OR T1.CTR_BAL  > 0
  )
and     t1.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
and nvl(org.brc_org_id,'')<>''
group by org.brc_org_id
)t1 on t.ORG_ID=t1.ORG_ID
;

DROP TABLE IF EXISTS lab_bigdata_dev.TMP_FCT_BUSS_LOAN_CST_DEP_RETURNS_DTL_02_CUR;
CREATE TABLE IF NOT EXISTS lab_bigdata_dev.TMP_FCT_BUSS_LOAN_CST_DEP_RETURNS_DTL_02_CUR
(
    CST_ID      STRING  COMMENT '客户编号'
    ,LN_AVG_M   DECIMAL COMMENT '贷款月日均'
    ,TRFI_AVG_M DECIMAL COMMENT '贸易融资月日均'
    ,LN_AVG_Y   DECIMAL COMMENT '贷款年日均'
    ,TRFI_AVG_Y DECIMAL COMMENT '贸易融资年日均'
);
INSERT INTO lab_bigdata_dev.TMP_FCT_BUSS_LOAN_CST_DEP_RETURNS_DTL_02_CUR
SELECT  T1.CST_ID
        ,SUM(CASE
            --    WHEN SUBSTR(T1.PD_CD, 1, 7) IN ( '2010401' , '2010501' , '2010503' ) THEN COALESCE(T1.MON_ACM_PRCP_BAL_ACML, 0) * T3.AVG_PRC / T3.QUO_UNT / ${dd}
               WHEN SUBSTR(T1.PD_CD, 1, 4) IN ('2001' , '1001' ) THEN COALESCE(T1.MON_ACM_PRCP_BAL_ACML, 0) * T3.AVG_PRC / T3.QUO_UNT / ${dd}
               ELSE 0
             END) AS LN_AVG_M
        ,SUM(CASE
               WHEN SUBSTR(T1.PD_CD, 1, 4) = '1003' THEN COALESCE(T1.MON_ACM_PRCP_BAL_ACML, 0) * T3.AVG_PRC / T3.QUO_UNT / ${dd}
               ELSE 0
             END) AS TRFI_AVG_M
        ,SUM(CASE
               WHEN SUBSTR(T1.PD_CD, 1, 4) IN ( '2001' , '1001' ) THEN COALESCE(T1.YEAR_ACM_PRCP_BAL_ACML, 0) * T3.AVG_PRC / T3.QUO_UNT / ( DATEDIFF(TO_DATE(T1.DT, 'YYYYMMDD'), TO_DATE(CONCAT(SUBSTR(T1.DT, 1, 4), '0101'), 'YYYYMMDD'), 'DD') + 1 )
               ELSE 0
             END) AS LN_AVG_Y
        ,SUM(CASE
               WHEN SUBSTR(T1.PD_CD, 1, 4) = '1003' THEN COALESCE(T1.YEAR_ACM_PRCP_BAL_ACML, 0) * T3.AVG_PRC / T3.QUO_UNT / ( DATEDIFF(TO_DATE(T1.DT, 'YYYYMMDD'), TO_DATE(CONCAT(SUBSTR(T1.DT, 1, 4), '0101'), 'YYYYMMDD'), 'DD') + 1 )
               ELSE 0
             END) AS TRFI_AVG_Y
FROM    edw.DWS_BUS_LOAN_DBIL_INF_DD T1 -- 贷款借据信息汇总
INNER JOIN    edw.DIM_BUS_COM_EXR_INF_DD T3 -- 汇率参数表
ON      T1.CCY_CD = T3.CCY_CD
AND     T3.DT = ${data_dt}
LEFT JOIN    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD T4 --合同基本信息
ON      T4.CTR_SERNO = T1.BUS_CTR_ID
AND     T4.DT = ${data_dt}
WHERE   T1.DT = ${data_dt}
AND     (           (
				          SUBSTR(T4.PRD_NO,1,6) IN ('200102','100101','100105 ')  --200102 个人经营性贷款, 流动资金贷款  100101 ,固定资产贷款 100105
                       OR SUBSTR(T4.PRD_NO, 1, 4) IN ( '1003')
					     )
    OR ( T1.PD_CD LIKE '1003%'
AND     SUBSTR(T1.PD_CD,1,8) <> '10030202' -- 开立进口信用证
AND     T1.PD_CD not in('1003030101001','1003030201001','1003030101002')-- (国内贸易融资只包含国内信用证)--贸易融资
) )
GROUP BY T1.CST_ID;

DROP TABLE IF EXISTS lab_bigdata_dev.TMP_FCT_BUSS_LOAN_CST_DEP_RETURNS_DTL_02_CUR_1231;
CREATE TABLE IF NOT EXISTS lab_bigdata_dev.TMP_FCT_BUSS_LOAN_CST_DEP_RETURNS_DTL_02_CUR_1231
(
    CST_ID      STRING  COMMENT '客户编号'
    ,LN_AVG_M   DECIMAL COMMENT '贷款月日均'
    ,TRFI_AVG_M DECIMAL COMMENT '贸易融资月日均'
    ,LN_AVG_Y   DECIMAL COMMENT '贷款年日均'
    ,TRFI_AVG_Y DECIMAL COMMENT '贸易融资年日均'
);
INSERT INTO lab_bigdata_dev.TMP_FCT_BUSS_LOAN_CST_DEP_RETURNS_DTL_02_CUR_1231
SELECT  T1.CST_ID
        ,SUM(CASE
               WHEN SUBSTR(T1.PD_CD, 1, 4) IN ('2001' , '1001') THEN COALESCE(T1.MON_ACM_PRCP_BAL_ACML, 0) * T3.AVG_PRC / T3.QUO_UNT / 31
               ELSE 0
             END) AS LN_AVG_M
        ,SUM(CASE
               WHEN SUBSTR(T1.PD_CD, 1, 4) = '1003' THEN COALESCE(T1.MON_ACM_PRCP_BAL_ACML, 0) * T3.AVG_PRC / T3.QUO_UNT / 31
               ELSE 0
             END) AS TRFI_AVG_M
        ,SUM(CASE
               WHEN SUBSTR(T1.PD_CD, 1,4) IN ('2001' , '1001') THEN COALESCE(T1.YEAR_ACM_PRCP_BAL_ACML, 0) * T3.AVG_PRC / T3.QUO_UNT / ( DATEDIFF(TO_DATE(T1.DT, 'YYYYMMDD'), TO_DATE(CONCAT(SUBSTR(T1.DT, 1, 4), '0101'), 'YYYYMMDD'), 'DD') + 1 )
               ELSE 0
             END) AS LN_AVG_Y
        ,SUM(CASE
               WHEN SUBSTR(T1.PD_CD, 1, 4) = '1003' THEN COALESCE(T1.YEAR_ACM_PRCP_BAL_ACML, 0) * T3.AVG_PRC / T3.QUO_UNT / ( DATEDIFF(TO_DATE(T1.DT, 'YYYYMMDD'), TO_DATE(CONCAT(SUBSTR(T1.DT, 1, 4), '0101'), 'YYYYMMDD'), 'DD') + 1 )
               ELSE 0
             END) AS TRFI_AVG_Y
FROM    edw.DWS_BUS_LOAN_DBIL_INF_DD T1 -- 贷款借据信息汇总
INNER JOIN    edw.DIM_BUS_COM_EXR_INF_DD T3 -- 汇率参数表
ON      T1.CCY_CD = T3.CCY_CD
AND     T3.DT = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD T4 --贷款合同表
ON      T4.CTR_SERNO = T1.BUS_CTR_ID
AND     T4.DT = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
WHERE   T1.DT = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
AND     (           (
				          SUBSTR(T4.PRD_NO,1,6) IN ('200102','100101','100105')  --200102 个人经营性贷款, 流动资金贷款  100101 ,固定资产贷款 100105
                       OR SUBSTR(T4.PRD_NO, 1, 4) IN ( '1003')
					     )
    OR ( T1.PD_CD LIKE '1003%'
AND     SUBSTR(T1.PD_CD,1,8) <> '10030202' -- 开立进口信用证
AND     T1.PD_CD not in('1003030101001','1003030201001','1003030101002')-- (国内贸易融资只包含国内信用证)--贸易融资
) )
GROUP BY T1.CST_ID;

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_05;
CREATE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_05 as
SELECT  t1.tem_org_id   as ORG_ID
        ,t1.ZHJY2_0010_01
        ,t1.ZHJY2_0010_02
        ,t1.ZHJY2_0010
        ,t2.ZHJY2_0011_01
        ,t2.ZHJY2_0011_02
        ,t2.ZHJY2_0011_03
        ,t1.ZHJY2_0010 - t2.ZHJY2_0011_03  as ZHJY2_0011
FROM (
SELECT  org.tem_org_id
        ,nvl(count(distinct decode(t4.efe_dep_cst_ind, '1', t1.cst_id, 'xxxx')) - 1, 0)  as ZHJY2_0010_01
        ,count(distinct t1.cst_id)   as  ZHJY2_0010_02
        ,nvl(count(distinct decode(t4.efe_dep_cst_ind, '1', t1.cst_id, 'xxxx')) - 1, 0) / count(distinct t1.cst_id) as ZHJY2_0010
from  lab_bigdata_dev.TMP_FCT_BUSS_LOAN_CST_DEP_RETURNS_DTL_02_CUR  t1
left join    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
on      t1.cst_id = t2.cst_id
and     t2.dt = ${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
left join     adm_pub.adm_csm_cbas_ind_inf_dd t4
on      t1.cst_id = t4.cst_id
and     t4.dt = ${data_dt}
WHERE   ( T1.LN_AVG_M + T1.TRFI_AVG_M ) > 0
GROUP BY org.tem_org_id
)t1
left join (
SELECT  org.tem_org_id
        ,nvl(count(distinct decode(t4.efe_dep_cst_ind, '1', t1.cst_id, 'xxxx')) - 1, 0)  as ZHJY2_0011_01
        ,count(distinct t1.cst_id)   as  ZHJY2_0011_02
        ,nvl(count(distinct decode(t4.efe_dep_cst_ind, '1', t1.cst_id, 'xxxx')) - 1, 0) / count(distinct t1.cst_id) as ZHJY2_0011_03
from  lab_bigdata_dev.TMP_FCT_BUSS_LOAN_CST_DEP_RETURNS_DTL_02_CUR_1231  t1
left join    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
on      t1.cst_id = t2.cst_id
and     t2.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join     adm_pub.adm_csm_cbas_ind_inf_dd t4
on      t1.cst_id = t4.cst_id
and     t4.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
WHERE   ( T1.LN_AVG_M + T1.TRFI_AVG_M ) > 0
GROUP BY org.tem_org_id
)t2 on t1.tem_org_id=t2.tem_org_id
union all
SELECT  t1.sbr_org_id   as ORG_ID
        ,t1.ZHJY2_0010_01
        ,t1.ZHJY2_0010_02
        ,t1.ZHJY2_0010
        ,t2.ZHJY2_0011_01
        ,t2.ZHJY2_0011_02
        ,t2.ZHJY2_0011_03
        ,t1.ZHJY2_0010 - t2.ZHJY2_0011_03  as ZHJY2_0011
FROM (
SELECT  org.sbr_org_id
        ,nvl(count(distinct decode(t4.efe_dep_cst_ind, '1', t1.cst_id, 'xxxx')) - 1, 0)  as ZHJY2_0010_01
        ,count(distinct t1.cst_id)   as  ZHJY2_0010_02
        ,nvl(count(distinct decode(t4.efe_dep_cst_ind, '1', t1.cst_id, 'xxxx')) - 1, 0) / count(distinct t1.cst_id) as ZHJY2_0010
from  lab_bigdata_dev.TMP_FCT_BUSS_LOAN_CST_DEP_RETURNS_DTL_02_CUR  t1
left join    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
on      t1.cst_id = t2.cst_id
and     t2.dt = ${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
left join     adm_pub.adm_csm_cbas_ind_inf_dd t4
on      t1.cst_id = t4.cst_id
and     t4.dt = ${data_dt}
WHERE   ( T1.LN_AVG_M + T1.TRFI_AVG_M ) > 0
GROUP BY org.sbr_org_id
)t1
left join (
SELECT  org.sbr_org_id
        ,nvl(count(distinct decode(t4.efe_dep_cst_ind, '1', t1.cst_id, 'xxxx')) - 1, 0)  as ZHJY2_0011_01
        ,count(distinct t1.cst_id)   as  ZHJY2_0011_02
        ,nvl(count(distinct decode(t4.efe_dep_cst_ind, '1', t1.cst_id, 'xxxx')) - 1, 0) / count(distinct t1.cst_id) as ZHJY2_0011_03
from  lab_bigdata_dev.TMP_FCT_BUSS_LOAN_CST_DEP_RETURNS_DTL_02_CUR_1231  t1
left join    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
on      t1.cst_id = t2.cst_id
and     t2.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join     adm_pub.adm_csm_cbas_ind_inf_dd t4
on      t1.cst_id = t4.cst_id
and     t4.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
WHERE   ( T1.LN_AVG_M + T1.TRFI_AVG_M ) > 0
GROUP BY org.sbr_org_id
)t2 on t1.sbr_org_id=t2.sbr_org_id
union all
SELECT  t1.brc_org_id   as ORG_ID
        ,t1.ZHJY2_0010_01
        ,t1.ZHJY2_0010_02
        ,t1.ZHJY2_0010
        ,t2.ZHJY2_0011_01
        ,t2.ZHJY2_0011_02
        ,t2.ZHJY2_0011_03
        ,t1.ZHJY2_0010 - t2.ZHJY2_0011_03  as ZHJY2_0011
FROM (
SELECT  org.brc_org_id
        ,nvl(count(distinct decode(t4.efe_dep_cst_ind, '1', t1.cst_id, 'xxxx')) - 1, 0)  as ZHJY2_0010_01
        ,count(distinct t1.cst_id)   as  ZHJY2_0010_02
        ,nvl(count(distinct decode(t4.efe_dep_cst_ind, '1', t1.cst_id, 'xxxx')) - 1, 0) / count(distinct t1.cst_id) as ZHJY2_0010
from  lab_bigdata_dev.TMP_FCT_BUSS_LOAN_CST_DEP_RETURNS_DTL_02_CUR  t1
left join    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
on      t1.cst_id = t2.cst_id
and     t2.dt = ${data_dt}
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
left join     adm_pub.adm_csm_cbas_ind_inf_dd t4
on      t1.cst_id = t4.cst_id
and     t4.dt = ${data_dt}
WHERE   ( T1.LN_AVG_M + T1.TRFI_AVG_M ) > 0
GROUP BY org.brc_org_id
)t1
left join (
SELECT  org.brc_org_id
        ,nvl(count(distinct decode(t4.efe_dep_cst_ind, '1', t1.cst_id, 'xxxx')) - 1, 0)  as ZHJY2_0011_01
        ,count(distinct t1.cst_id)   as  ZHJY2_0011_02
        ,nvl(count(distinct decode(t4.efe_dep_cst_ind, '1', t1.cst_id, 'xxxx')) - 1, 0) / count(distinct t1.cst_id) as ZHJY2_0011_03
from  lab_bigdata_dev.TMP_FCT_BUSS_LOAN_CST_DEP_RETURNS_DTL_02_CUR_1231  t1
left join    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
on      t1.cst_id = t2.cst_id
and     t2.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join     adm_pub.adm_csm_cbas_ind_inf_dd t4
on      t1.cst_id = t4.cst_id
and     t4.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
WHERE   ( T1.LN_AVG_M + T1.TRFI_AVG_M ) > 0
GROUP BY org.brc_org_id
)t2 on t1.brc_org_id=t2.brc_org_id
;

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_06;
CREATE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_06 as
SELECT  org.tem_org_id    as org_id
        ,count(distinct t1.cst_id)   as  ZHJY2_0012_01
        ,nvl(count(distinct case when t1.pd_hld_qty_risk>=3  then t1.cst_id  else 'xxxx' end ) - 1, 0)  as  ZHJY2_0012_02
        ,nvl(count(distinct case when t1.pd_hld_qty_risk>=3  then t1.cst_id  else 'xxxx' end ) - 1, 0)/count(distinct t1.cst_id)   as ZHJY2_0012
        ,nvl(count(distinct decode(t1.dls_ind, '1', t1.cst_id, 'xxxx')) - 1, 0)  as ZHJY2_0013_01
        ,nvl(count(distinct decode(t1.dls_ind, '1', t1.cst_id, 'xxxx')) - 1, 0)/count(distinct t1.cst_id)  as ZHJY2_0013
from  adm_pub.adm_pub_crs_sell_pd_inf_dd_v2_v3 t1
LEFT JOIN LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.prm_org_id=org.org_id and org.dt='${data_dt}'
where   t1.dt=${data_dt}
AND     t1.EFE_LOAN_CST_IND = '1'
AND     t1.OWN_EMP_ID = '0'
AND     t1.OWN_EMP_LOAN = '0'
AND     t1.PRM_ORG_ID <> ''
AND     t1.LOAN_PD_HLD_QTY_RISK > 0
GROUP BY org.tem_org_id
union all
SELECT  org.sbr_org_id    as org_id
        ,count(distinct t1.cst_id)   as  ZHJY2_0012_01
        ,nvl(count(distinct case when t1.pd_hld_qty_risk>=3  then t1.cst_id  else 'xxxx' end ) - 1, 0)  as  ZHJY2_0012_02
        ,nvl(count(distinct case when t1.pd_hld_qty_risk>=3  then t1.cst_id  else 'xxxx' end ) - 1, 0)/count(distinct t1.cst_id)   as ZHJY2_0012
        ,nvl(count(distinct decode(t1.dls_ind, '1', t1.cst_id, 'xxxx')) - 1, 0)  as ZHJY2_0013_01
        ,nvl(count(distinct decode(t1.dls_ind, '1', t1.cst_id, 'xxxx')) - 1, 0)/count(distinct t1.cst_id)  as ZHJY2_0013
from  adm_pub.adm_pub_crs_sell_pd_inf_dd_v2_v3 t1
LEFT JOIN LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.prm_org_id=org.org_id and org.dt='${data_dt}'
where   t1.dt=${data_dt}
AND     t1.EFE_LOAN_CST_IND = '1'
AND     t1.OWN_EMP_ID = '0'
AND     t1.OWN_EMP_LOAN = '0'
AND     t1.PRM_ORG_ID <> ''
AND     t1.LOAN_PD_HLD_QTY_RISK > 0
GROUP BY org.sbr_org_id
union all
SELECT  org.brc_org_id    as org_id
        ,count(distinct t1.cst_id)   as  ZHJY2_0012_01
        ,nvl(count(distinct case when t1.pd_hld_qty_risk>=3  then t1.cst_id  else 'xxxx' end ) - 1, 0)  as  ZHJY2_0012_02
        ,nvl(count(distinct case when t1.pd_hld_qty_risk>=3  then t1.cst_id  else 'xxxx' end ) - 1, 0)/count(distinct t1.cst_id)   as ZHJY2_0012
        ,nvl(count(distinct decode(t1.dls_ind, '1', t1.cst_id, 'xxxx')) - 1, 0)  as ZHJY2_0013_01
        ,nvl(count(distinct decode(t1.dls_ind, '1', t1.cst_id, 'xxxx')) - 1, 0)/count(distinct t1.cst_id)  as ZHJY2_0013
from  adm_pub.adm_pub_crs_sell_pd_inf_dd_v2_v3 t1
LEFT JOIN LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.prm_org_id=org.org_id and org.dt='${data_dt}'
where   t1.dt=${data_dt}
AND     t1.EFE_LOAN_CST_IND = '1'
AND     t1.OWN_EMP_ID = '0'
AND     t1.OWN_EMP_LOAN = '0'
AND     t1.PRM_ORG_ID <> ''
AND     t1.LOAN_PD_HLD_QTY_RISK > 0
GROUP BY org.brc_org_id
;

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07;
CREATE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07 as
SELECT  t1.org_id
        ,t1.ZHJY2_0014_01
        ,t1.ZHJY2_0014_02
        ,t1.ZHJY2_0014
        ,t1.ZHJY2_0015_01
        ,t1.ZHJY2_0015
        ,t1.ZHJY2_0016_01
        ,t1.ZHJY2_0016
        ,t2.ZHJY2_0017_01
        ,t2.ZHJY2_0017_02
        ,t2.ZHJY2_0017_03
        ,t1.ZHJY2_0014-t2.ZHJY2_0017_03       as ZHJY2_0017
        ,t2.ZHJY2_0018_01
        ,t2.ZHJY2_0018_02
        ,t1.ZHJY2_0015-t2.ZHJY2_0018_02      as  ZHJY2_0018
        ,t2.ZHJY2_0019_01
        ,t2.ZHJY2_0019_02
        ,t1.ZHJY2_0016-t2.ZHJY2_0019_02     as ZHJY2_0019
from (
SELECT  t1.org_id
        ,SUM(t1.is_cur_dft_cst_qty)+SUM(t1.cncn_val_cst_qty)+SUM(t1.zero_val_cst_qty)+SUM(t1.v1_val_cst_qty)+SUM(t1.v2_val_cst_qty)+SUM(t1.v3_val_cst_qty)+SUM(t1.v4_val_cst_qty)
        +SUM(t1.v5_val_cst_qty)+SUM(t1.v6_val_cst_qty)+SUM(t1.v7_val_cst_qty)+SUM(t1.v8_val_cst_qty)  as ZHJY2_0014_01
        ,SUM(t1.v5_val_cst_qty)+SUM(t1.v6_val_cst_qty)+SUM(t1.v7_val_cst_qty)+SUM(t1.v8_val_cst_qty)  as ZHJY2_0014_02
        ,(SUM(t1.v5_val_cst_qty)+SUM(t1.v6_val_cst_qty)+SUM(t1.v7_val_cst_qty)+SUM(t1.v8_val_cst_qty))/(SUM(t1.is_cur_dft_cst_qty)+SUM(t1.cncn_val_cst_qty)+SUM(t1.zero_val_cst_qty)
        +SUM(t1.v1_val_cst_qty)+SUM(t1.v2_val_cst_qty)+SUM(t1.v3_val_cst_qty)+SUM(t1.v4_val_cst_qty)+SUM(t1.v5_val_cst_qty)+SUM(t1.v6_val_cst_qty)+SUM(t1.v7_val_cst_qty)+SUM(t1.v8_val_cst_qty))  as ZHJY2_0014
        ,SUM(t1.v3_val_cst_qty)+SUM(t1.v4_val_cst_qty)  as ZHJY2_0015_01
        ,(SUM(t1.v3_val_cst_qty)+SUM(t1.v4_val_cst_qty))/(SUM(t1.is_cur_dft_cst_qty)+SUM(t1.cncn_val_cst_qty)+SUM(t1.zero_val_cst_qty)+SUM(t1.v1_val_cst_qty)+SUM(t1.v2_val_cst_qty)
        +SUM(t1.v3_val_cst_qty)+SUM(t1.v4_val_cst_qty)+SUM(t1.v5_val_cst_qty)+SUM(t1.v6_val_cst_qty)+SUM(t1.v7_val_cst_qty)+SUM(t1.v8_val_cst_qty))    as ZHJY2_0015
        ,SUM(t1.cncn_val_cst_qty)+SUM(t1.zero_val_cst_qty)+SUM(t1.v1_val_cst_qty)+SUM(t1.v2_val_cst_qty)  as ZHJY2_0016_01
        ,(SUM(t1.cncn_val_cst_qty)+SUM(t1.zero_val_cst_qty)+SUM(t1.v1_val_cst_qty)+SUM(t1.v2_val_cst_qty))/(SUM(t1.is_cur_dft_cst_qty)+SUM(t1.cncn_val_cst_qty)+SUM(t1.zero_val_cst_qty)
        +SUM(t1.v1_val_cst_qty)+SUM(t1.v2_val_cst_qty)+SUM(t1.v3_val_cst_qty)+SUM(t1.v4_val_cst_qty)+SUM(t1.v5_val_cst_qty)+SUM(t1.v6_val_cst_qty)+SUM(t1.v7_val_cst_qty)+SUM(t1.v8_val_cst_qty))  as ZHJY2_0016
from    app_rpt.FCT_CST_VAL_DIS_RPT  t1
where   t1.dt=${data_dt}
and   t1.org_type in ('F','Z','T')
and   t1.stat_dim='紧密关联人维度'
and   t1.cst_typ_cd='全选'
and   substr(t1.org_id,1,7)<>'3302052' --剔除钱塘小微
GROUP BY t1.org_id
)t1
left join (
SELECT  t1.org_id
        ,SUM(t1.is_cur_dft_cst_qty)+SUM(t1.cncn_val_cst_qty)+SUM(t1.zero_val_cst_qty)+SUM(t1.v1_val_cst_qty)+SUM(t1.v2_val_cst_qty)+SUM(t1.v3_val_cst_qty)+SUM(t1.v4_val_cst_qty)
        +SUM(t1.v5_val_cst_qty)+SUM(t1.v6_val_cst_qty)+SUM(t1.v7_val_cst_qty)+SUM(t1.v8_val_cst_qty)  as ZHJY2_0017_01
        ,SUM(t1.v5_val_cst_qty)+SUM(t1.v6_val_cst_qty)+SUM(t1.v7_val_cst_qty)+SUM(t1.v8_val_cst_qty)  as ZHJY2_0017_02
        ,(SUM(t1.v5_val_cst_qty)+SUM(t1.v6_val_cst_qty)+SUM(t1.v7_val_cst_qty)+SUM(t1.v8_val_cst_qty))/(SUM(t1.is_cur_dft_cst_qty)+SUM(t1.cncn_val_cst_qty)+SUM(t1.zero_val_cst_qty)
        +SUM(t1.v1_val_cst_qty)+SUM(t1.v2_val_cst_qty)+SUM(t1.v3_val_cst_qty)+SUM(t1.v4_val_cst_qty)+SUM(t1.v5_val_cst_qty)+SUM(t1.v6_val_cst_qty)+SUM(t1.v7_val_cst_qty)+SUM(t1.v8_val_cst_qty))  as ZHJY2_0017_03
        ,SUM(t1.v3_val_cst_qty)+SUM(t1.v4_val_cst_qty)  as ZHJY2_0018_01
        ,(SUM(t1.v3_val_cst_qty)+SUM(t1.v4_val_cst_qty))/(SUM(t1.is_cur_dft_cst_qty)+SUM(t1.cncn_val_cst_qty)+SUM(t1.zero_val_cst_qty)+SUM(t1.v1_val_cst_qty)+SUM(t1.v2_val_cst_qty)
        +SUM(t1.v3_val_cst_qty)+SUM(t1.v4_val_cst_qty)+SUM(t1.v5_val_cst_qty)+SUM(t1.v6_val_cst_qty)+SUM(t1.v7_val_cst_qty)+SUM(t1.v8_val_cst_qty))    as ZHJY2_0018_02
        ,SUM(t1.cncn_val_cst_qty)+SUM(t1.zero_val_cst_qty)+SUM(t1.v1_val_cst_qty)+SUM(t1.v2_val_cst_qty)  as ZHJY2_0019_01
        ,(SUM(t1.cncn_val_cst_qty)+SUM(t1.zero_val_cst_qty)+SUM(t1.v1_val_cst_qty)+SUM(t1.v2_val_cst_qty))/(SUM(t1.is_cur_dft_cst_qty)+SUM(t1.cncn_val_cst_qty)+SUM(t1.zero_val_cst_qty)
        +SUM(t1.v1_val_cst_qty)+SUM(t1.v2_val_cst_qty)+SUM(t1.v3_val_cst_qty)+SUM(t1.v4_val_cst_qty)+SUM(t1.v5_val_cst_qty)+SUM(t1.v6_val_cst_qty)+SUM(t1.v7_val_cst_qty)+SUM(t1.v8_val_cst_qty))  as ZHJY2_0019_02
from    app_rpt.FCT_CST_VAL_DIS_RPT  t1
where   t1.dt= CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
and   t1.org_type in ('F','Z','T')
and   t1.stat_dim='紧密关联人维度'
and   t1.cst_typ_cd='全选'
and   substr(t1.org_id,1,7)<>'3302052' --剔除钱塘小微
GROUP BY t1.org_id
)t2 on t1.org_id=t2.org_id
;

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_08;
CREATE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_08 as
SELECT  t1.org_id
        ,sum(t1.val_net_ris_qty)  as  ZHJY2_0020
        ,(sum(t1.cst_val)/if(sum(t1.cst_val_last_year)=0,null, sum(t1.cst_val_last_year)))-1   as ZHJY2_0021
from    app_rpt.fct_cst_val_adv_rpt  t1
where   t1.dt=${data_dt}
and   t1.org_type in ('F','Z','T')
and   t1.stat_dim='紧密关联客户维度'
and   t1.val_ris_sta='全选'
GROUP BY t1.org_id
;


**备份2.0_to立英_T3HGL_ORG_TAG_IND_DD_2_显示职能数据.sql
-- ODPS SQL
-- **********************************************************************
-- 功能描述:
-- **
-- 创建者: 卫少洁
-- 创建日期: 2022-04-18 17:27:12
-- **
-- 修改日志:
-- 修改日期          修改人          修改内容
-- **
-- **********************************************************************
-- desc LAB_BIGDATA_DEV.hgl_org_tag_ind_weight_2;--权重配置表
-- desc LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_INF_DD_2; --模块名称和指标名称
-- desc LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_SGLR_2;--手工指标：需筛选数据日期
-- 分行和支行职能数据不剔除，排名剔除
--钱塘支行放入支行层级，不排名计算

--插入指标底表
ALTER TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01 DROP IF EXISTS PARTITION (dt = ${data_dt});
--**************************存量维护**********************************
INSERT INTO LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01 PARTITION (dt = ${data_dt})
-- 全部客户经理	KHJL_0001
SELECT  T.ORG_ID                               AS ORG_ID
        ,'KHJL_0001'                       AS IND_ID
        ,T.emp_num                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_KHJL T
WHERE T.DT = ${data_dt}
AND   T.DATA_DT = ${data_dt}
UNION ALL
-- 时间加权转正客户经理人数	KHJL_0002
SELECT  T.ORG_ID                               AS ORG_ID
        ,'KHJL_0002'                           AS IND_ID
        ,sum(T.mon_num*T.emp_num)/sum(T.mon)   AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_KHJL T
WHERE T.DT = ${data_dt}
GROUP BY T.ORG_ID
UNION ALL
-- 时间加权（全量客户经理+服务经理）人数	KHJL_0003
SELECT  T.ORG_ID                               AS ORG_ID
        ,'KHJL_0003'                           AS IND_ID
        ,sum(T.mon_num*T.emp_num)/sum(T.mon)   AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL T
WHERE T.DT = ${data_dt}
GROUP BY T.ORG_ID
UNION ALL
-- 有效户数		CLWH2_0001_01
SELECT  t2.ORG_ID
        ,'CLWH2_0001_01' AS IND_ID
        ,COALESCE(t2.CUR_AMT, 0)  AS CUR_VAL
FROM     (
    select org_id, cur_amt
    from adm_ind.adm_ind_org_tag_cst_org_ind_dd  a   --指标集市-机构指标结果表-标签应用表
    where  dt = ${data_dt}
    and    ind_id='CSTFCK00011'  --有效客户数
)t2
UNION ALL
-- 正式客户		CLWH2_0001_02
SELECT  t1.ORG_ID
        ,'CLWH2_0001_02' AS IND_ID
        ,if(t1.CUR_AMT=0,null, t1.CUR_AMT) AS CUR_VAL
FROM (
    select org_id,cur_amt
    from adm_ind.adm_ind_org_tag_cst_org_ind_dd  a
    where  dt = ${data_dt}
    and    ind_id='CSTFCK00002'  --现有客户
) t1
UNION ALL
-- 有效户数占比		CLWH2_0001
SELECT  t1.ORG_ID
        ,'CLWH2_0001' AS IND_ID
        ,abs(COALESCE(t2.CUR_AMT, 0) / if(t1.CUR_AMT=0,null, t1.CUR_AMT)) AS CUR_VAL
FROM (
    select org_id,cur_amt
    from adm_ind.adm_ind_org_tag_cst_org_ind_dd  a
    where  dt = ${data_dt}
    and    ind_id='CSTFCK00002'
) t1
LEFT JOIN    (
    select org_id, cur_amt
    from adm_ind.adm_ind_org_tag_cst_org_ind_dd  a
    where  dt = ${data_dt}
    and    ind_id='CSTFCK00011'
)t2 ON      t1.ORG_ID = t2.ORG_ID
UNION ALL
-- 上年末有效存款户当前时点还是有效存款户数		CLWH2_0002_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0002_01'                       AS IND_ID
        ,T.CLWH2_0002_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_01 T
UNION ALL
-- 上年末有效存款户的留存率		CLWH2_0002
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0002'                       AS IND_ID
        ,T.CLWH2_0002                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_01 T
UNION ALL
-- 上年末有效存款日均规模留存率	 	CLWH2_0018
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0018'                       AS IND_ID
        ,T.CLWH2_0018                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_01 T
UNION ALL
-- 上年末有效存款户日均规模	 	CLWH2_0018_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0018_01'                       AS IND_ID
        ,T.CLWH2_0018_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_01 T
UNION ALL
-- 上年末有效存款户当前时点日均规模     CLWH2_0018_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0018_02'                       AS IND_ID
        ,T.CLWH2_0018_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_01 T
UNION ALL
-- 上年末有效信贷户当前时点还是有效贷款户数		CLWH2_0003_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0003_01'                       AS IND_ID
        ,T.CLWH2_0003_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_02 T
UNION ALL
-- 上年末有效信贷户的留存率		CLWH2_0003
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0003'                       AS IND_ID
        ,T.CLWH2_0003                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_02 T
UNION ALL
-- 有效户数占比较年初变动		CLWH2_0006
SELECT  t1.ORG_ID
        ,'CLWH2_0006' AS IND_ID
        ,abs(COALESCE(t2.CUR_AMT, 0) / if(t1.CUR_AMT=0,null, t1.CUR_AMT))-abs(COALESCE(t4.CUR_AMT, 0) / if(t3.CUR_AMT=0,null, t3.CUR_AMT)) AS CUR_VAL
FROM (
    select org_id,cur_amt
    from adm_ind.adm_ind_org_tag_cst_org_ind_dd  a
    where  dt = ${data_dt}
    and    ind_id='CSTFCK00002'
) t1
LEFT JOIN    (
    select org_id, cur_amt
    from adm_ind.adm_ind_org_tag_cst_org_ind_dd  a
    where  dt = ${data_dt}
    and    ind_id='CSTFCK00011'
) AS t2 ON      t1.ORG_ID = t2.ORG_ID
LEFT JOIN    (
    select org_id,cur_amt
    from adm_ind.adm_ind_org_tag_cst_org_ind_dd  a
    where  dt = ${yyyy-1-1231}
    and    ind_id='CSTFCK00002'
) t3 on    t1.ORG_ID = t3.ORG_ID
LEFT JOIN    (
    select org_id, cur_amt
    from adm_ind.adm_ind_org_tag_cst_org_ind_dd  a
    where  dt = ${yyyy-1-1231}
    and    ind_id='CSTFCK00011'
)t4 ON      t1.ORG_ID = t4.ORG_ID
;

INSERT INTO LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01 PARTITION (dt = ${data_dt})
-- 财富有效户	CLWH2_0004_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0004_01'                       AS IND_ID
        ,T.CLWH2_0004_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_03 T
UNION ALL
-- 人均财富有效户		CLWH2_0004
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0004'                       AS IND_ID
        ,T.CLWH2_0004                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_03 T
UNION ALL
-- 国业有效户	CLWH2_0005_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0005_01'                       AS IND_ID
        ,T.CLWH2_0005_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_04 T
UNION ALL
-- 人均国业有效户		CLWH2_0005
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0005'                       AS IND_ID
        ,T.CLWH2_0005                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_04 T
UNION ALL
-- 人均财富有效户较年初变动		CLWH2_0007
SELECT  t1.tem_org_id                               AS ORG_ID
        ,'CLWH2_0007'                                AS IND_ID
        ,t1.CUR_VAL-t2.CUR_VAL   as CUR_VAL
from (
SELECT   org.tem_org_id
,sum(CASE
               WHEN t1.efe_wlth_cst_ind = '1'  THEN 1
               ELSE 0
             END) / IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CUR_VAL
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${data_dt}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3
ON      org.tem_org_id = t3.org_id
WHERE   t1.dt = ${data_dt}
AND     nvl(org.tem_org_id, '') <> ''
GROUP BY org.tem_org_id,t3.avg_emp_num
)t1
LEFT JOIN (
  SELECT   org.tem_org_id
,sum(CASE
               WHEN t1.efe_wlth_cst_ind = '1'  THEN 1
               ELSE 0
             END) / IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CUR_VAL
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${yyyy-1-1231}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${yyyy-1-1231}
GROUP BY org_id
) t3
ON      org.tem_org_id = t3.org_id
WHERE   t1.dt = ${yyyy-1-1231}
AND     nvl(org.tem_org_id, '') <> ''
GROUP BY org.tem_org_id,t3.avg_emp_num
)t2 on t1.tem_org_id=t2.tem_org_id
union ALL
SELECT  t1.sbr_org_id                               AS ORG_ID
        ,'CLWH2_0007'                                AS IND_ID
        ,t1.CUR_VAL-t2.CUR_VAL   as CUR_VAL
from (
SELECT   org.sbr_org_id
,sum(CASE
               WHEN t1.efe_wlth_cst_ind = '1'  THEN 1
               ELSE 0
             END) / IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CUR_VAL
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${data_dt}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3
ON      org.sbr_org_id = t3.org_id
WHERE   t1.dt = ${data_dt}
AND     nvl(org.sbr_org_id, '') <> ''
GROUP BY org.sbr_org_id,t3.avg_emp_num
)t1
LEFT JOIN (
  SELECT   org.sbr_org_id
,sum(CASE
               WHEN t1.efe_wlth_cst_ind = '1'  THEN 1
               ELSE 0
             END) / IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CUR_VAL
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${yyyy-1-1231}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${yyyy-1-1231}
GROUP BY org_id
) t3
ON      org.sbr_org_id = t3.org_id
WHERE   t1.dt = ${yyyy-1-1231}
AND     nvl(org.sbr_org_id, '') <> ''
GROUP BY org.sbr_org_id,t3.avg_emp_num
)t2 on t1.sbr_org_id=t2.sbr_org_id
union ALL
SELECT  t1.brc_org_id                               AS ORG_ID
        ,'CLWH2_0007'                                AS IND_ID
        ,t1.CUR_VAL-t2.CUR_VAL   as CUR_VAL
from (
SELECT   org.brc_org_id
,sum(CASE
               WHEN t1.efe_wlth_cst_ind = '1'  THEN 1
               ELSE 0
             END) / IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CUR_VAL
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${data_dt}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3
ON      org.brc_org_id = t3.org_id
WHERE   t1.dt = ${data_dt}
AND     nvl(org.brc_org_id, '') <> ''
GROUP BY org.brc_org_id,t3.avg_emp_num
)t1
LEFT JOIN (
  SELECT   org.brc_org_id
,sum(CASE
               WHEN t1.efe_wlth_cst_ind = '1'  THEN 1
               ELSE 0
             END) / IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CUR_VAL
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${yyyy-1-1231}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${yyyy-1-1231}
GROUP BY org_id
) t3
ON      org.brc_org_id = t3.org_id
WHERE   t1.dt = ${yyyy-1-1231}
AND     nvl(org.brc_org_id, '') <> ''
GROUP BY org.brc_org_id,t3.avg_emp_num
)t2 on t1.brc_org_id=t2.brc_org_id
union all
-- 人均国业有效户较年初变动		CLWH2_0008
SELECT  t1.tem_org_id                               AS ORG_ID
        ,'CLWH2_0008'                               AS IND_ID
        ,t1.CUR_VAL-t2.CUR_VAL   as CUR_VAL
from (
SELECT   org.tem_org_id
,sum(CASE
               WHEN t1.efe_inter_stl_cst_ind = '1'  THEN 1
               ELSE 0
             END) / IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CUR_VAL
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${data_dt}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3
ON      org.tem_org_id = t3.org_id
WHERE   t1.dt = ${data_dt}
AND     nvl(org.tem_org_id, '') <> ''
GROUP BY org.tem_org_id,t3.avg_emp_num
)t1
LEFT JOIN (
  SELECT   org.tem_org_id
,sum(CASE
               WHEN t1.efe_inter_stl_cst_ind = '1'  THEN 1
               ELSE 0
             END) / IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CUR_VAL
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${yyyy-1-1231}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${yyyy-1-1231}
GROUP BY org_id
) t3
ON      org.tem_org_id = t3.org_id
WHERE   t1.dt = ${yyyy-1-1231}
AND     nvl(org.tem_org_id, '') <> ''
GROUP BY org.tem_org_id,t3.avg_emp_num
)t2 on t1.tem_org_id=t2.tem_org_id
union ALL
SELECT  t1.sbr_org_id                               AS ORG_ID
        ,'CLWH2_0008'                                AS IND_ID
        ,t1.CUR_VAL-t2.CUR_VAL   as CUR_VAL
from (
SELECT   org.sbr_org_id
,sum(CASE
               WHEN t1.efe_inter_stl_cst_ind = '1'  THEN 1
               ELSE 0
             END) / IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CUR_VAL
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${data_dt}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3
ON      org.sbr_org_id = t3.org_id
WHERE   t1.dt = ${data_dt}
AND     nvl(org.sbr_org_id, '') <> ''
GROUP BY org.sbr_org_id,t3.avg_emp_num
)t1
LEFT JOIN (
  SELECT   org.sbr_org_id
,sum(CASE
               WHEN t1.efe_inter_stl_cst_ind = '1'  THEN 1
               ELSE 0
             END) / IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CUR_VAL
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${yyyy-1-1231}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${yyyy-1-1231}
GROUP BY org_id
) t3
ON      org.sbr_org_id = t3.org_id
WHERE   t1.dt = ${yyyy-1-1231}
AND     nvl(org.sbr_org_id, '') <> ''
GROUP BY org.sbr_org_id,t3.avg_emp_num
)t2 on t1.sbr_org_id=t2.sbr_org_id
union ALL
SELECT  t1.brc_org_id                               AS ORG_ID
        ,'CLWH2_0008'                                AS IND_ID
        ,t1.CUR_VAL-t2.CUR_VAL   as CUR_VAL
from (
SELECT   org.brc_org_id
,sum(CASE
               WHEN t1.efe_inter_stl_cst_ind = '1'  THEN 1
               ELSE 0
             END) / IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CUR_VAL
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${data_dt}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3
ON      org.brc_org_id = t3.org_id
WHERE   t1.dt = ${data_dt}
AND     nvl(org.brc_org_id, '') <> ''
GROUP BY org.brc_org_id,t3.avg_emp_num
)t1
LEFT JOIN (
  SELECT   org.brc_org_id
,sum(CASE
               WHEN t1.efe_inter_stl_cst_ind = '1'  THEN 1
               ELSE 0
             END) / IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CUR_VAL
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${yyyy-1-1231}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${yyyy-1-1231}
GROUP BY org_id
) t3
ON      org.brc_org_id = t3.org_id
WHERE   t1.dt = ${yyyy-1-1231}
AND     nvl(org.brc_org_id, '') <> ''
GROUP BY org.brc_org_id,t3.avg_emp_num
)t2 on t1.brc_org_id=t2.brc_org_id
;

INSERT INTO LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01 PARTITION (dt = ${data_dt})
-- 上年末存量授信客户中当前时点有效信贷户数	CLWH2_0009_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0009_01'                       AS IND_ID
        ,T.CLWH2_0009_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_05 T
union ALL
-- CLWH2_0009 存量授信客户中有效信贷户转化率
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0009'                       AS IND_ID
        ,T.CLWH2_0009                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_05 T
;

INSERT INTO LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01 PARTITION (dt = ${data_dt})
-- 存量存款客户中较年初增减净额	CLWH2_0011_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0011_01'                       AS IND_ID
        ,T.CLWH2_0011_01/10000                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_06 T
union ALL
-- CLWH2_0011 存量存款人均净增额（存量存款客户中减额客户较年初减额规模+存量存款客户中增额客户较年初增额规模）/时间加权（全量客户经理+服务经理）人数
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0011'                       AS IND_ID
        ,T.CLWH2_0011/10000                        AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_06 T
;

INSERT INTO LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01 PARTITION (dt = ${data_dt})
-- 本年度内授信金额增加的客户数	CLWH2_0012_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0012_01'                       AS IND_ID
        ,T.CLWH2_0012_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_07 T
union all
-- 存量信贷客户中增额客户数占比		CLWH2_0012 原合格率1.0中CLWH_0016
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0012'                       AS IND_ID
        ,T.CLWH2_0012                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_07 T
union all
-- 存量信贷客户中增额客户数占比较上月变动	新增	CLWH2_0013
SELECT  org.tem_org_id                               AS ORG_ID
        ,'CLWH2_0013'                                AS IND_ID
        ,sum(t1.inc_cst_num)/IF(sum(t1.last_opr_cst_num) = 0, NULL, sum(t1.last_opr_cst_num) )-sum(t2.inc_cst_num)/IF(sum(t2.last_opr_cst_num) = 0, NULL, sum(t2.last_opr_cst_num) )      AS CUR_VAL
from app_rpt.fct_cst_opr_loan_prt_dd t1
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t1.org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
left join  app_rpt.fct_cst_opr_loan_prt_dd T2
on t1.org_id=t2.org_id and t2.rsk_hidden_cd='剔除风险退出' and t2.org_type='T'
and t2.dt=to_char(TO_DATE(add_months(TO_DATE(t1.dt,'yyyymmdd'),-1),'yyyy-mm-dd'),'yyyymmdd')
where t1.dt=${data_dt}
and  t1.rsk_hidden_cd='剔除风险退出'
and  t1.org_type='T'
and  substr(t1.org_id,1,7)<>'3302052' --剔除钱塘小微后面单独计算
GROUP BY org.tem_org_id
union all
SELECT  org.sbr_org_id                               AS ORG_ID
        ,'CLWH2_0013'                                AS IND_ID
        ,sum(t1.inc_cst_num)/IF(sum(t1.last_opr_cst_num) = 0, NULL, sum(t1.last_opr_cst_num) )-sum(t2.inc_cst_num)/IF(sum(t2.last_opr_cst_num) = 0, NULL, sum(t2.last_opr_cst_num) )     AS CUR_VAL
from app_rpt.fct_cst_opr_loan_prt_dd t1
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t1.org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
left join  app_rpt.fct_cst_opr_loan_prt_dd T2
on t1.org_id=t2.org_id and t2.rsk_hidden_cd='剔除风险退出' and t2.org_type='Z'
and t2.dt=to_char(TO_DATE(add_months(TO_DATE(t1.dt,'yyyymmdd'),-1),'yyyy-mm-dd'),'yyyymmdd')
where t1.dt=${data_dt}
and  t1.rsk_hidden_cd='剔除风险退出'
and  t1.org_type='Z'
and  substr(t1.org_id,1,7)<>'3302052' --剔除钱塘小微后面单独计算
GROUP BY org.sbr_org_id
union all
SELECT  org.brc_org_id                               AS ORG_ID
        ,'CLWH2_0013'                                AS IND_ID
        ,sum(t1.inc_cst_num)/IF(sum(t1.last_opr_cst_num) = 0, NULL, sum(t1.last_opr_cst_num) )-sum(t2.inc_cst_num)/IF(sum(t2.last_opr_cst_num) = 0, NULL, sum(t2.last_opr_cst_num) )      AS CUR_VAL
from app_rpt.fct_cst_opr_loan_prt_dd t1
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t1.org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
left join  app_rpt.fct_cst_opr_loan_prt_dd T2
on t1.org_id=t2.org_id and t2.rsk_hidden_cd='剔除风险退出' and t2.org_type='F'
and t2.dt=to_char(TO_DATE(add_months(TO_DATE(t1.dt,'yyyymmdd'),-1),'yyyy-mm-dd'),'yyyymmdd')
where t1.dt=${data_dt}
and  t1.rsk_hidden_cd='剔除风险退出'
and  t1.org_type='F'
GROUP BY org.brc_org_id
union all
-- 上年末有效信贷户当前月贷款月日均	CLWH2_0014_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0014_01'                       AS IND_ID
        ,T.CLWH2_0014_01/10000                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_08 T
union all
-- 上年末有效信贷户上年末贷款月日均	CLWH2_0014_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0014_02'                       AS IND_ID
        ,T.CLWH2_0014_02/10000                        AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_08 T
union all
-- 存量客户贷款增速	新增	CLWH2_0014
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0014'                       AS IND_ID
        ,T.CLWH2_0014                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_08 T
union all
-- 上年末有效信贷户当前月经营性贷款月日均	CLWH2_0015_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0015_01'                       AS IND_ID
        ,T.CLWH2_0015_01/10000                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_09 T
union all
-- 上年末有效信贷户上年末经营性贷款月日均	CLWH2_0015_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0015_02'                       AS IND_ID
        ,T.CLWH2_0015_02/10000                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_09 T
union all
-- 存量客户经营性贷款增速	新增	CLWH2_0015
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0015'                       AS IND_ID
        ,T.CLWH2_0015                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_09 T
union all
-- 存量贷款人均净增额	新增	CLWH2_0016
SELECT  org.tem_org_id                               AS ORG_ID
        ,'CLWH2_0016'                                AS IND_ID
        ,(sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t4.loan_bal_acs_mon_avg
               ELSE 0
             END)-sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.loan_bal_acs_mon_avg
               ELSE 0
             END))/10000/IF(t5.avg_emp_num = 0, NULL, t5.avg_emp_num ) AS CUR_VAL
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${yyyy-1-1231}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN    ADM_PUB.adm_csm_cbus_loan_inf_dd t3
ON      t1.CST_ID = t3.CST_ID
AND     t3.dt = ${yyyy-1-1231}
LEFT JOIN    ADM_PUB.adm_csm_cbus_loan_inf_dd t4
ON      t1.CST_ID = t4.CST_ID
AND     t4.dt = ${data_dt}
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
where dt= ${yyyy-1-1231}
GROUP BY org_id
) t5
ON      org.tem_org_id = t5.org_id
WHERE   t1.dt = ${yyyy-1-1231}
AND     nvl(org.tem_org_id, '') <> ''
GROUP BY org.tem_org_id,t5.avg_emp_num
UNION ALL
SELECT  org.sbr_org_id                               AS ORG_ID
        ,'CLWH2_0016'                                AS IND_ID
        ,(sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t4.loan_bal_acs_mon_avg
               ELSE 0
             END)-sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.loan_bal_acs_mon_avg
               ELSE 0
             END))/10000/IF(t5.avg_emp_num = 0, NULL, t5.avg_emp_num ) AS CUR_VAL
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${yyyy-1-1231}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN    ADM_PUB.adm_csm_cbus_loan_inf_dd t3
ON      t1.CST_ID = t3.CST_ID
AND     t3.dt = ${yyyy-1-1231}
LEFT JOIN    ADM_PUB.adm_csm_cbus_loan_inf_dd t4
ON      t1.CST_ID = t4.CST_ID
AND     t4.dt = ${data_dt}
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
where dt= ${yyyy-1-1231}
GROUP BY org_id
) t5
ON      org.sbr_org_id = t5.org_id
WHERE   t1.dt = ${yyyy-1-1231}
AND     nvl(org.sbr_org_id, '') <> ''
GROUP BY org.sbr_org_id, t5.avg_emp_num
UNION ALL
SELECT  org.brc_org_id                               AS ORG_ID
        ,'CLWH2_0016'                                AS IND_ID
        ,(sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t4.loan_bal_acs_mon_avg
               ELSE 0
             END)-sum(CASE
               WHEN t1.efe_loan_cst_ind = '1'  THEN t3.loan_bal_acs_mon_avg
               ELSE 0
             END))/10000/IF(t5.avg_emp_num = 0, NULL, t5.avg_emp_num ) AS CUR_VAL
FROM    ADM_PUB.ADM_CSM_CBAS_IND_INF_DD t1
LEFT JOIN    ADM_PUB_APP.ADM_PBLC_CST_PRM_MNG_INF_DD T2 --客户管护新表
ON      T1.CST_ID = T2.CST_ID
AND     t2.prm_org_id <> ''
AND     T2.DT = ${yyyy-1-1231}
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t2.prm_org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
LEFT JOIN    ADM_PUB.adm_csm_cbus_loan_inf_dd t3
ON      t1.CST_ID = t3.CST_ID
AND     t3.dt = ${yyyy-1-1231}
LEFT JOIN    ADM_PUB.adm_csm_cbus_loan_inf_dd t4
ON      t1.CST_ID = t4.CST_ID
AND     t4.dt = ${data_dt}
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
where dt= ${yyyy-1-1231}
GROUP BY org_id
) t5
ON      org.brc_org_id = t5.org_id
WHERE   t1.dt = ${yyyy-1-1231}
AND     nvl(org.brc_org_id, '') <> ''
GROUP BY org.brc_org_id, t5.avg_emp_num
union all
-- 信贷客户增额率	CLWH2_0017_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0017_01'                       AS IND_ID
        ,T.CLWH2_0017_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_10 T
union all
-- 信贷客户增额率较上月变动	CLWH2_0017
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0017'                       AS IND_ID
        ,T.CLWH2_0017                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_10 T
;
INSERT INTO LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01 PARTITION (dt = ${data_dt})
-- 存量信贷客户中增额客户数占比较上月变动	新增	CLWH2_0013
SELECT  org.tem_org_id                               AS ORG_ID
        ,'CLWH2_0013'                                AS IND_ID
        ,sum(t1.inc_cst_num)/IF(sum(t1.last_opr_cst_num) = 0, NULL, sum(t1.last_opr_cst_num) )-sum(t2.inc_cst_num)/IF(sum(t2.last_opr_cst_num) = 0, NULL, sum(t2.last_opr_cst_num) )      AS CUR_VAL
from app_rpt.fct_cst_opr_loan_prt_dd t1
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t1.org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
left join  app_rpt.fct_cst_opr_loan_prt_dd T2
on t1.org_id=t2.org_id and t2.rsk_hidden_cd='剔除风险退出' and t2.org_type in ('Z','T')
and t2.dt=to_char(TO_DATE(add_months(TO_DATE(t1.dt,'yyyymmdd'),-1),'yyyy-mm-dd'),'yyyymmdd')
where t1.dt=${data_dt}
and  t1.rsk_hidden_cd='剔除风险退出'
and  t1.org_type='T'
and  substr(t1.org_id,1,7)='3302052' --单独插入钱塘小微
GROUP BY org.tem_org_id
union all
SELECT  org.sbr_org_id                               AS ORG_ID
        ,'CLWH2_0013'                                AS IND_ID
        ,sum(t1.inc_cst_num)/IF(sum(t1.last_opr_cst_num) = 0, NULL, sum(t1.last_opr_cst_num) )-sum(t2.inc_cst_num)/IF(sum(t2.last_opr_cst_num) = 0, NULL, sum(t2.last_opr_cst_num) )     AS CUR_VAL
from app_rpt.fct_cst_opr_loan_prt_dd t1
INNER JOIN    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org
ON      t1.org_id = org.org_id and org.dt='${data_dt}'
AND     org.org_id <> ''
left join  app_rpt.fct_cst_opr_loan_prt_dd T2
on t1.org_id=t2.org_id and t2.rsk_hidden_cd='剔除风险退出' and t2.org_type in ('Z','H')
and t2.dt=to_char(TO_DATE(add_months(TO_DATE(t1.dt,'yyyymmdd'),-1),'yyyy-mm-dd'),'yyyymmdd')
where t1.dt=${data_dt}
and  t1.rsk_hidden_cd='剔除风险退出'
and  t1.org_type='Z'
and  substr(t1.org_id,1,7)='3302052' --单独插入钱塘小微
GROUP BY org.sbr_org_id
UNION ALL
-- 信贷客户增额率	CLWH2_0017_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0017_01'                       AS IND_ID
        ,T.CLWH2_0017_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_10_QT T
union all
-- 信贷客户增额率较上月变动	CLWH2_0017
SELECT  T.ORG_ID                               AS ORG_ID
        ,'CLWH2_0017'                       AS IND_ID
        ,T.CLWH2_0017                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_CLWH_10_QT T
;

--**************************新增拓面**********************************
INSERT INTO LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01 PARTITION (dt = ${data_dt})
-- 当年新增首笔授信客户数	XZTM2_0001_01
select
    t1.org_id as ORG_ID
    ,'XZTM2_0001_01' as IND_ID
    ,t1.XZTM_0002  AS CUR_VAL
from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_XZTM_01 t1

union all
-- 当年人均首笔授信客户数	新增	XZTM2_0001
select
    t1.org_id as ORG_ID
    ,'XZTM2_0001' as IND_ID
    ,t1.XZTM_0002 / IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CUR_VAL
from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_XZTM_01 t1
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3
ON      t1.org_id = t3.org_id
group by t1.org_id,t1.XZTM_0002,t3.avg_emp_num
union all
-- 当年新增首笔有效信贷户数	XZTM2_0002_01
SELECT  T.ORG_ID                            AS ORG_ID
        ,'XZTM2_0002_01'                       AS IND_ID
        ,T.XZTM2_0002_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_XZTM_04 T
union all
-- 当年人均首笔有效信贷户	XZTM2_0002
SELECT  T.ORG_ID                            AS ORG_ID
        ,'XZTM2_0002'                       AS IND_ID
        ,T.XZTM2_0002                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_XZTM_04 T

union all
-- 当年首笔授信客户授信额	XZTM2_0003_01
select
    t1.org_id as ORG_ID
    ,'XZTM2_0003_01' as IND_ID
    ,t1.XZTM_0003   AS CUR_VAL
from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_XZTM_01 t1
union all
-- 当年人均新增授信客户授信规模	XZTM2_0003
select
    t1.org_id as ORG_ID
    ,'XZTM2_0003' as IND_ID
    ,t1.XZTM_0003 / IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CUR_VAL
from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_XZTM_01 t1
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3
ON      t1.org_id = t3.org_id
group by t1.org_id,t1.XZTM_0003,t3.avg_emp_num
union all
-- 当年人均新增授信客户授信规模	XZTM2_0004_01
select
    t1.org_id as ORG_ID
    ,'XZTM2_0004_01' as IND_ID
    ,t1.XZTM_0004/10000   AS CUR_VAL
from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_XZTM_02 t1
union all
-- 当年人均新增授信客户用信规模	XZTM2_0004
select
    t1.org_id as ORG_ID
    ,'XZTM2_0004' as IND_ID
    ,t1.XZTM_0004/10000 / IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CUR_VAL   --拆子指标的时候注意也拆分成万元
from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_XZTM_02 t1
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3
ON      t1.org_id = t3.org_id
group by t1.org_id,t1.XZTM_0004,t3.avg_emp_num
union all
-- 当年新开存款户	XZTM2_0005_01
select
    t1.org_id as ORG_ID
    ,'XZTM2_0005_01' as IND_ID
    ,t1.XZTM_0008   AS CUR_VAL
from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_XZTM_03 t1
union all
-- 当年人均新开存款户数	XZTM2_0005
select
    t1.org_id as ORG_ID
    ,'XZTM2_0005' as IND_ID
    ,t1.XZTM_0008/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CUR_VAL
from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_XZTM_03 t1
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
where dt= ${data_dt}
GROUP BY org_id
) t3
ON      t1.org_id = t3.org_id
group by t1.org_id,t1.XZTM_0008,t3.avg_emp_num
union all
-- 当年新开存款有效户	XZTM2_0006_01
select
    t1.org_id as ORG_ID
    ,'XZTM2_0006_01' as IND_ID
    ,t1.XZTM_0011   AS CUR_VAL
from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_XZTM_03 t1
union all
-- 当年人均新增存款有效户	XZTM2_0006
select
    t1.org_id as ORG_ID
    ,'XZTM2_0006' as IND_ID
    ,t1.XZTM_0011/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CUR_VAL
from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_XZTM_03 t1
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
where dt= ${data_dt}
GROUP BY org_id
) t3
ON      t1.org_id = t3.org_id
group by t1.org_id,t1.XZTM_0011,t3.avg_emp_num
union all
-- 当年新开存款户中对公户数	XZTM2_0007_01
select
    t1.org_id as ORG_ID
    ,'XZTM2_0007_01' as IND_ID
    ,t1.XZTM2_0007   AS CUR_VAL
from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_XZTM_03 t1
union all
-- 当年人均新开对公存款户数	XZTM2_0007
select
    t1.org_id as ORG_ID
    ,'XZTM2_0007' as IND_ID
    ,t1.XZTM2_0007/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CUR_VAL
from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_XZTM_03 t1
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
where dt= ${data_dt}
GROUP BY org_id
) t3
ON      t1.org_id = t3.org_id
group by t1.org_id,t1.XZTM2_0007,t3.avg_emp_num
union all
-- 当年新开存款户存款规模	XZTM2_0008_01
select
    t1.org_id as ORG_ID
    ,'XZTM2_0008_01' as IND_ID
    ,t1.XZTM_0009/10000   AS CUR_VAL
from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_XZTM_03 t1
union all
-- 当年人均新开存款户存款规模	XZTM2_0008
select
    t1.org_id as ORG_ID
    ,'XZTM2_0008' as IND_ID
    ,t1.XZTM_0009/10000/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num ) AS CUR_VAL
from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_XZTM_03 t1
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
where dt= ${data_dt}
GROUP BY org_id
) t3
ON      t1.org_id = t3.org_id
group by t1.org_id,t1.XZTM_0009,t3.avg_emp_num
;


INSERT INTO LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01 PARTITION (dt = ${data_dt})
-- 在职人员	DWJS2_0001_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DWJS2_0001_01'                       AS IND_ID
        ,T.DWJS2_0001_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_01 T
union all
-- 离职人员	DWJS2_0001_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DWJS2_0001_02'                       AS IND_ID
        ,T.DWJS2_0001_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_01 T
union all
-- 离职率	DWJS2_0001
SELECT  T.ORG_ID                            AS ORG_ID
        ,'DWJS2_0001'                       AS IND_ID
        ,T.DWJS2_0001                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_01 T
union all
-- 三级以上信贷资质客户经理	DWJS2_0004_01
SELECT  T.ORG_ID                            AS ORG_ID
        ,'DWJS2_0004_01'                       AS IND_ID
        ,T.DWJS2_0004_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_02 T
union all
-- 三级以上信贷资质客户经理占比	DWJS2_0004
SELECT  T.ORG_ID                            AS ORG_ID
        ,'DWJS2_0004'                       AS IND_ID
        ,T.DWJS2_0004                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_02 T
union all
-- 三级以上信贷资质客户经理占比较年初	DWJS2_0005
SELECT  t1.tem_org_id as ORG_ID
        ,'DWJS2_0005' as IND_ID
        ,CUR_VAL1-CUR_VAL2 as CUR_VAL
from (
SELECT  org.tem_org_id
        ,count(distinct t1.EMPE_ID)/IF(t3.emp_num = 0, NULL, t3.emp_num ) as CUR_VAL1
FROM    edw.dws_hr_empe_inf_dd t
inner join edw.dim_hr_empe_mgr_qua_inf_dd t1   --客户经理资质
on     t.empe_id=t1.EMPE_ID and t1.dt=${data_dt}
LEFT JOIN    edw.dim_hr_org_job_inf_dd p
ON      t.pos_enc = p.pos_id
AND     t.dt = p.dt
inner join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  LAB_BIGDATA_DEV.HGL_ORG_KHJL t3
on nvl(org.tem_org_id, '0') = nvl(t3.org_id, '0') and t3.dt=${data_dt} and t3.DATA_DT=${data_dt}
WHERE   1 = 1
and     t.empe_sts_cd='2'  --在职
and     p.dty_id in ('P3010','P3020')
AND     p.pos_nm LIKE '%客户经理%'
and     t1.STS_CD = '1' --状态为启用
and     t1.QUA_SUB_CLS_CD in ('0060003','0060004','0060005','0060006')  --三级及以上调查资质
-- and     t1.VLD_STS_CD = '1' --状态为有效
and     t.dt=${data_dt}
and     nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id,t3.emp_num
)t1
left join (
SELECT  org.tem_org_id
        ,count(distinct t1.EMPE_ID)/IF(t3.emp_num = 0, NULL, t3.emp_num ) as CUR_VAL2
FROM    edw.dws_hr_empe_inf_dd t
inner join edw.dim_hr_empe_mgr_qua_inf_dd t1
on     t.empe_id=t1.EMPE_ID and t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN    edw.dim_hr_org_job_inf_dd p
ON      t.pos_enc = p.pos_id
AND     t.dt = p.dt
inner join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN  LAB_BIGDATA_DEV.HGL_ORG_KHJL t3
on nvl(org.tem_org_id, '0') = nvl(t3.org_id, '0') and t3.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t3.DATA_DT=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
WHERE   1 = 1
and     t.empe_sts_cd='2'  --在职
and     p.dty_id in ('P3010','P3020')
AND     p.pos_nm LIKE '%客户经理%'
and     t1.STS_CD = '1' --状态为启用
and     t1.QUA_SUB_CLS_CD in ('0060003','0060004','0060005','0060006')  --三级及以上调查资质
-- and     t1.VLD_STS_CD = '1' --状态为有效
and     t.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
and     nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id,t3.emp_num
)t2 on t1.tem_org_id=t2.tem_org_id
union all
SELECT  t1.sbr_org_id as ORG_ID
        ,'DWJS2_0005' as IND_ID
        ,CUR_VAL1-CUR_VAL2 as CUR_VAL
from (
SELECT  org.sbr_org_id
        ,count(distinct t1.EMPE_ID)/IF(t3.emp_num = 0, NULL, t3.emp_num ) as CUR_VAL1
FROM    edw.dws_hr_empe_inf_dd t
inner join edw.dim_hr_empe_mgr_qua_inf_dd t1
on     t.empe_id=t1.EMPE_ID and t1.dt=${data_dt}
LEFT JOIN    edw.dim_hr_org_job_inf_dd p
ON      t.pos_enc = p.pos_id
AND     t.dt = p.dt
inner join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  LAB_BIGDATA_DEV.HGL_ORG_KHJL t3
on nvl(org.sbr_org_id, '0') = nvl(t3.org_id, '0') and t3.dt=${data_dt} and t3.DATA_DT=${data_dt}
WHERE   1 = 1
and     t.empe_sts_cd='2'  --在职
and     p.dty_id in ('P3010','P3020')
AND     p.pos_nm LIKE '%客户经理%'
and     t1.STS_CD = '1' --状态为启用
and     t1.QUA_SUB_CLS_CD in ('0060003','0060004','0060005','0060006')  --三级及以上调查资质
-- and     t1.VLD_STS_CD = '1' --状态为有效
and     t.dt=${data_dt}
and     nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id,t3.emp_num
)t1
left join (
SELECT  org.sbr_org_id
        ,count(distinct t1.EMPE_ID)/IF(t3.emp_num = 0, NULL, t3.emp_num ) as CUR_VAL2
FROM    edw.dws_hr_empe_inf_dd t
inner join edw.dim_hr_empe_mgr_qua_inf_dd t1
on     t.empe_id=t1.EMPE_ID and t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN    edw.dim_hr_org_job_inf_dd p
ON      t.pos_enc = p.pos_id
AND     t.dt = p.dt
inner join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN  LAB_BIGDATA_DEV.HGL_ORG_KHJL t3
on nvl(org.sbr_org_id, '0') = nvl(t3.org_id, '0') and t3.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t3.DATA_DT=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
WHERE   1 = 1
and     t.empe_sts_cd='2'  --在职
and     p.dty_id in ('P3010','P3020')
AND     p.pos_nm LIKE '%客户经理%'
and     t1.STS_CD = '1' --状态为启用
and     t1.QUA_SUB_CLS_CD in ('0060003','0060004','0060005','0060006')  --三级及以上调查资质
-- and     t1.VLD_STS_CD = '1' --状态为有效
and     t.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
and     nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id,t3.emp_num
)t2 on t1.sbr_org_id=t2.sbr_org_id
union all
SELECT  t1.brc_org_id as ORG_ID
        ,'DWJS2_0005' as IND_ID
        ,CUR_VAL1-CUR_VAL2 as CUR_VAL
from (
SELECT  org.brc_org_id
        ,count(distinct t1.EMPE_ID)/IF(t3.emp_num = 0, NULL, t3.emp_num ) as CUR_VAL1
FROM    edw.dws_hr_empe_inf_dd t
inner join edw.dim_hr_empe_mgr_qua_inf_dd t1
on     t.empe_id=t1.EMPE_ID and t1.dt=${data_dt}
LEFT JOIN    edw.dim_hr_org_job_inf_dd p
ON      t.pos_enc = p.pos_id
AND     t.dt = p.dt
inner join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  LAB_BIGDATA_DEV.HGL_ORG_KHJL t3
on nvl(org.brc_org_id, '0') = nvl(t3.org_id, '0') and t3.dt=${data_dt} and t3.DATA_DT=${data_dt}
WHERE   1 = 1
and     t.empe_sts_cd='2'  --在职
and     p.dty_id in ('P3010','P3020')
AND     p.pos_nm LIKE '%客户经理%'
and     t1.STS_CD = '1' --状态为启用
and     t1.QUA_SUB_CLS_CD in ('0060003','0060004','0060005','0060006')  --三级及以上调查资质
-- and     t1.VLD_STS_CD = '1' --状态为有效
and     t.dt=${data_dt}
and     nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id,t3.emp_num
)t1
left join (
SELECT  org.brc_org_id
        ,count(distinct t1.EMPE_ID)/IF(t3.emp_num = 0, NULL, t3.emp_num ) as CUR_VAL2
FROM    edw.dws_hr_empe_inf_dd t
inner join edw.dim_hr_empe_mgr_qua_inf_dd t1
on     t.empe_id=t1.EMPE_ID and t1.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN    edw.dim_hr_org_job_inf_dd p
ON      t.pos_enc = p.pos_id
AND     t.dt = p.dt
inner join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN  LAB_BIGDATA_DEV.HGL_ORG_KHJL t3
on nvl(org.brc_org_id, '0') = nvl(t3.org_id, '0') and t3.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231') and t3.DATA_DT=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
WHERE   1 = 1
and     t.empe_sts_cd='2'  --在职
and     p.dty_id in ('P3010','P3020')
AND     p.pos_nm LIKE '%客户经理%'
and     t1.STS_CD = '1' --状态为启用
and     t1.QUA_SUB_CLS_CD in ('0060003','0060004','0060005','0060006')  --三级及以上调查资质
-- and     t1.VLD_STS_CD = '1' --状态为有效
and     t.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
and     nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id,t3.emp_num
)t2 on t1.brc_org_id=t2.brc_org_id

union all
-- 支行FTP营收	DWJS2_0006_01
SELECT  T.ORG_ID                            AS ORG_ID
        ,'DWJS2_0006_01'                       AS IND_ID
        ,T.DWJS2_0006_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_03 T
union all
-- 支行人均全量FTP营收	DWJS2_0006	新增
SELECT  T.ORG_ID                            AS ORG_ID
        ,'DWJS2_0006'                       AS IND_ID
        ,T.DWJS2_0006                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_03 T
union all
-- 支行存款FTP营收	DWJS2_0007_01
SELECT  T.ORG_ID                            AS ORG_ID
        ,'DWJS2_0007_01'                       AS IND_ID
        ,T.DWJS2_0007_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_04 T
union all
-- 转正客户经理人均存款FTP营收	DWJS2_0007	新增
SELECT  T.ORG_ID                            AS ORG_ID
        ,'DWJS2_0007'                       AS IND_ID
        ,T.DWJS2_0007                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_04 T
union all
-- 支行贷款FTP营收	DWJS2_0008_01
SELECT  T.ORG_ID                            AS ORG_ID
        ,'DWJS2_0008_01'                       AS IND_ID
        ,T.DWJS2_0008_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_05 T
union all
-- 转正客户经理人均贷款FTP营收	DWJS2_0008	新增
SELECT  T.ORG_ID                            AS ORG_ID
        ,'DWJS2_0008'                       AS IND_ID
        ,T.DWJS2_0008                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_05 T
union all
-- 支行存款月日均	DWJS2_0009_01
SELECT  T.ORG_ID                            AS ORG_ID
        ,'DWJS2_0009_01'                       AS IND_ID
        ,T.DWJS2_0009_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_06 T
union all
-- 支行人均存款月日均 	DWJS2_0009
SELECT  T.ORG_ID                            AS ORG_ID
        ,'DWJS2_0009'                       AS IND_ID
        ,T.DWJS2_0009                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_06 T

union all
-- 转正客户经理管护贷款月日均	DWJS2_0010_01
SELECT  T.ORG_ID                            AS ORG_ID
        ,'DWJS2_0010_01'                       AS IND_ID
        ,T.DWJS2_0010_01/10000                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_07 T
union all
-- 转正客户经理人均贷款月日均 	DWJS2_0010
SELECT  T.ORG_ID                            AS ORG_ID
        ,'DWJS2_0010'                       AS IND_ID
        ,T.DWJS2_0010/10000                        AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_07 T
union all
-- 转正客户经理管护有效户	DWJS2_0011_01
SELECT  T.ORG_ID                            AS ORG_ID
        ,'DWJS2_0011_01'                       AS IND_ID
        ,T.DWJS2_0011_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_08 T
union all
-- 转正客户经理人均有效户数	DWJS2_0011
SELECT  T.ORG_ID                            AS ORG_ID
        ,'DWJS2_0011'                       AS IND_ID
        ,T.DWJS2_0011                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_08 T
union all
-- 转正客户经理管护有效存款户	DWJS2_0012_01
SELECT  T.ORG_ID                            AS ORG_ID
        ,'DWJS2_0012_01'                       AS IND_ID
        ,T.DWJS2_0012_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_09 T
union all
-- 转正客户经理人均有效信贷户数	DWJS2_0012
SELECT  T.ORG_ID                            AS ORG_ID
        ,'DWJS2_0012'                       AS IND_ID
        ,T.DWJS2_0012                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_09 T
union all
-- 转正客户经理管护有效信贷户	DWJS2_0013_01
SELECT  T.ORG_ID                            AS ORG_ID
        ,'DWJS2_0013_01'                       AS IND_ID
        ,T.DWJS2_0013_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_10 T
union all
-- 转正客户经理人均有效存款户数	DWJS2_0013
SELECT  T.ORG_ID                            AS ORG_ID
        ,'DWJS2_0013'                       AS IND_ID
        ,T.DWJS2_0013                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_DWJS_10 T

union all
-- 支行人均存款月日均较年初增量	DWJS2_0017
SELECT  t1.tem_org_id              as  ORG_ID
        ,'DWJS2_0017'              as  IND_ID
        ,t1.CUR_VAL1-t2.CUR_VAL2   as  CUR_VAL
from (
select  org.tem_org_id
        ,nvl(sum(t1.mth_avg_amt), 0)/10000/ IF(e1.avg_emp_num = 0, NULL, e1.avg_emp_num )      as  CUR_VAL1
from    app_rpt.fct_ifd_mgr_dep_pd_rlpty t1 ---存款账户管护汇总信息
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.acs_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
where dt= ${data_dt}
GROUP BY org_id
) e1  on nvl(org.tem_org_id, '0') = nvl(e1.org_id, '0')
where  t1.dt = '${data_dt}'
and    t1.ACG_STC_MSR_ID  IN (10000000,20000000,30000000,40000000,50000000,60000000)
and  t1.ccy_cd='CN' --本外币合计
and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id, e1.avg_emp_num
)t1
left join (
select  org.tem_org_id
        ,nvl(sum(t1.mth_avg_amt), 0)/10000/ IF(e1.avg_emp_num = 0, NULL, e1.avg_emp_num )      as  CUR_VAL2
from    app_rpt.fct_ifd_mgr_dep_pd_rlpty t1 ---存款账户管护汇总信息
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.acs_org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
where dt= CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
GROUP BY org_id
) e1  on nvl(org.tem_org_id, '0') = nvl(e1.org_id, '0')
where  t1.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
and    t1.ACG_STC_MSR_ID  IN (10000000,20000000,30000000,40000000,50000000,60000000)
and  t1.ccy_cd='CN' --本外币合计
and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id, e1.avg_emp_num
)t2 on t1.tem_org_id=t2.tem_org_id
union all
SELECT  t1.sbr_org_id              as  ORG_ID
        ,'DWJS2_0017'              as  IND_ID
        ,t1.CUR_VAL1-t2.CUR_VAL2   as  CUR_VAL
from (
select  org.sbr_org_id
        ,nvl(sum(t1.mth_avg_amt), 0)/10000/ IF(e1.avg_emp_num = 0, NULL, e1.avg_emp_num )      as  CUR_VAL1
from    app_rpt.fct_ifd_mgr_dep_pd_rlpty t1 ---存款账户管护汇总信息
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.acs_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
where dt= ${data_dt}
GROUP BY org_id
) e1  on nvl(org.sbr_org_id, '0') = nvl(e1.org_id, '0')
where  t1.dt = '${data_dt}'
and    t1.ACG_STC_MSR_ID  IN (10000000,20000000,30000000,40000000,50000000,60000000)
and  t1.ccy_cd='CN' --本外币合计
and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id, e1.avg_emp_num
)t1
left join (
select  org.sbr_org_id
        ,nvl(sum(t1.mth_avg_amt), 0)/10000/ IF(e1.avg_emp_num = 0, NULL, e1.avg_emp_num )      as  CUR_VAL2
from    app_rpt.fct_ifd_mgr_dep_pd_rlpty t1 ---存款账户管护汇总信息
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.acs_org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
where dt= CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
GROUP BY org_id
) e1  on nvl(org.sbr_org_id, '0') = nvl(e1.org_id, '0')
where  t1.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
and    t1.ACG_STC_MSR_ID  IN (10000000,20000000,30000000,40000000,50000000,60000000)
and  t1.ccy_cd='CN' --本外币合计
and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id, e1.avg_emp_num
)t2 on t1.sbr_org_id=t2.sbr_org_id
union all
SELECT  t1.brc_org_id              as  ORG_ID
        ,'DWJS2_0017'              as  IND_ID
        ,t1.CUR_VAL1-t2.CUR_VAL2   as  CUR_VAL
from (
select  org.brc_org_id
        ,nvl(sum(t1.mth_avg_amt), 0)/10000/ IF(e1.avg_emp_num = 0, NULL, e1.avg_emp_num )      as  CUR_VAL1
from    app_rpt.fct_ifd_mgr_dep_pd_rlpty t1 ---普惠金融部-存款分产品统计表
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.acs_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
where dt= ${data_dt}
GROUP BY org_id
) e1  on nvl(org.brc_org_id, '0') = nvl(e1.org_id, '0')
where  t1.dt = '${data_dt}'
and    t1.ACG_STC_MSR_ID  IN (10000000,20000000,30000000,40000000,50000000,60000000)
and  t1.ccy_cd='CN' --本外币合计
and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id, e1.avg_emp_num
)t1
left join (
select  org.brc_org_id
        ,nvl(sum(t1.mth_avg_amt), 0)/10000/ IF(e1.avg_emp_num = 0, NULL, e1.avg_emp_num )      as  CUR_VAL2
from    app_rpt.fct_ifd_mgr_dep_pd_rlpty t1 ---普惠金融部-存款分产品统计表
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t1.acs_org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL_FWJL
where dt= CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
GROUP BY org_id
) e1  on nvl(org.brc_org_id, '0') = nvl(e1.org_id, '0')
where  t1.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
and    t1.ACG_STC_MSR_ID  IN (10000000,20000000,30000000,40000000,50000000,60000000)
and  t1.ccy_cd='CN' --本外币合计
and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id, e1.avg_emp_num
)t2 on t1.brc_org_id=t2.brc_org_id

union all
-- 转正客户经理人均贷款月日均较年初增量	DWJS2_0018
SELECT  t1.tem_org_id              as  ORG_ID
        ,'DWJS2_0018'              as  IND_ID
        ,(t1.CUR_VAL1-t2.CUR_VAL2)/10000   as  CUR_VAL
from (
SELECT  org.tem_org_id
        ,round(sum(t.mon_acm_prcp_bal_acml * t1.avg_prc / t1.quo_unt /
                  (datediff(to_date('${data_dt}', 'yyyymmdd'), datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), 'dd') + 1)), 2)/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )     as  CUR_VAL1
FROM    edw.dws_bus_loan_dbil_inf_dd t
inner join    edw.dim_bus_com_exr_inf_dd t1 --汇率信息表
on      t1.ccy_cd = t.ccy_cd --币种代码
and     t1.dt = '${data_dt}'
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD L --合同其它明细信息
ON      t.bus_ctr_id = L.CTR_SERNO
AND     L.dt ='${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
INNER JOIN    (
                  SELECT  t.cst_id
                          ,sum(t.ctr_amt) AS sum_ctr_amt
                  FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t
                 LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
                 ON      t.CTR_SERNO = t2.CTR_SERNO
                AND     t2.dt ='${data_dt}'
                  WHERE   t.dt = '${data_dt}'
                  AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
                 AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
                 AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
                 AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
                 AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
                 AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
                 --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
                 AND     (
                  ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
                 OR t.CTR_BAL > 0
                 )
                  GROUP BY t.cst_id
                   HAVING sum(t.ctr_amt) >= 10000 ----金额1万元（含）以上
              ) t4
ON      t.cst_id = t4.cst_id
LEFT JOIN edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t5
ON      t.bus_ctr_id = t5.CTR_SERNO
AND     t5.dt = '${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3  on nvl(org.tem_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = '${data_dt}'
)
AND     (t.mon_acm_prcp_bal_acml > 0 or t.prcp_bal > 0)
AND     t5.PRD_NO NOT LIKE '1002%' ----剔除票据
AND     t5.BSN_MARK_CD NOT IN ( '01' ) --剔除 员工贷款    01	员工贷款 04	重组业务 05	协作业务 03	预保预报业务
and L.APLY_CHNL_cd <> 'L08'  --渠道代码，金融云
AND     (
  -- t5.APLY_CHNL_cd <> 'L08'  --渠道代码，金融云
                 t5.PRD_NO <> '2001010101007' ) --剔除 小鱼分期
AND     t5.PRD_NO <> '2001010101008' --剔除 蚂蚁借呗
AND     t5.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     (t5.PRD_NO NOT IN ( '2001010101002' , '2001020101002') OR t5.CTR_STS_CD <> '' ) --剔除未签约的泰e贷
AND     t.dt = '${data_dt}'
and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id, t3.avg_emp_num
)t1
left join (
SELECT  org.tem_org_id
        ,round(sum(t.mon_acm_prcp_bal_acml * t1.avg_prc / t1.quo_unt /
                  (datediff(to_date(CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'), 'yyyymmdd'), datetrunc(to_date(CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'), 'yyyymmdd'), 'mm'), 'dd') + 1)), 2)/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )     as  CUR_VAL2
FROM    edw.dws_bus_loan_dbil_inf_dd t
inner join    edw.dim_bus_com_exr_inf_dd t1 --汇率信息表
on      t1.ccy_cd = t.ccy_cd --币种代码
and     t1.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t.cst_id = t2.cst_id
AND     t2.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD L --合同其它明细信息
ON      t.bus_ctr_id = L.CTR_SERNO
AND     L.dt =CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
INNER JOIN    (
                  SELECT  t.cst_id
                          ,sum(t.ctr_amt) AS sum_ctr_amt
                  FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t
                  LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
                 ON      t.CTR_SERNO = t2.CTR_SERNO
                AND     t2.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
                  WHERE   t.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
                 AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
                 AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
                 AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
                 AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
                 AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
                 AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
                 --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
                 AND     (
                  ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
                 OR t.CTR_BAL > 0
                 )
                  GROUP BY t.cst_id
                   HAVING sum(t.ctr_amt) >= 10000 ----金额1万元（含）以上
              ) t4
ON      t.cst_id = t4.cst_id
LEFT JOIN edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t5
ON      t.bus_ctr_id = t5.CTR_SERNO
AND     t5.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
GROUP BY org_id
) t3  on nvl(org.tem_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
)
AND     (t.mon_acm_prcp_bal_acml > 0 or t.prcp_bal > 0)
AND     t5.PRD_NO NOT LIKE '1002%' ----剔除票据
AND     t5.BSN_MARK_CD NOT IN ( '01' ) --剔除 员工贷款    01	员工贷款 04	重组业务 05	协作业务 03	预保预报业务
and L.APLY_CHNL_cd <> 'L08'  --渠道代码，金融云
AND     (
  -- t5.APLY_CHNL_cd <> 'L08'  --渠道代码，金融云
                t5.PRD_NO <> '2001010101007' ) --剔除 小鱼分期
AND     t5.PRD_NO <> '2001010101008' --剔除 蚂蚁借呗
AND     t5.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     (t5.PRD_NO NOT IN ( '2001010101002' , '2001020101002') OR t5.CTR_STS_CD <> '' ) --剔除未签约的泰e贷
AND     t.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id, t3.avg_emp_num
)t2 on t1.tem_org_id=t2.tem_org_id

union all
SELECT  t1.sbr_org_id              as  ORG_ID
        ,'DWJS2_0018'              as  IND_ID
        ,(t1.CUR_VAL1-t2.CUR_VAL2)/10000   as  CUR_VAL
from (
SELECT  org.sbr_org_id
        ,round(sum(t.mon_acm_prcp_bal_acml * t1.avg_prc / t1.quo_unt /
                  (datediff(to_date('${data_dt}', 'yyyymmdd'), datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), 'dd') + 1)), 2)/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )     as  CUR_VAL1
FROM    edw.dws_bus_loan_dbil_inf_dd t
inner join    edw.dim_bus_com_exr_inf_dd t1 --汇率信息表
on      t1.ccy_cd = t.ccy_cd --币种代码
and     t1.dt = '${data_dt}'
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD L --合同其它明细信息
ON      t.bus_ctr_id = L.CTR_SERNO
AND     L.dt ='${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
INNER JOIN    (
                  SELECT  t.cst_id
                          ,sum(t.ctr_amt) AS sum_ctr_amt
                  FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t
                  LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
                 ON      t.CTR_SERNO = t2.CTR_SERNO
                AND     t2.dt ='${data_dt}'
                  WHERE   t.dt = '${data_dt}'
               AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
                 AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
                 AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
                 AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
                 AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
                 AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
                 --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
                 AND     (
                  ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
                 OR t.CTR_BAL > 0
                 )
                  GROUP BY t.cst_id
                   HAVING sum(t.ctr_amt) >= 10000 ----金额1万元（含）以上
              ) t4
ON      t.cst_id = t4.cst_id
LEFT JOIN edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t5
ON      t.bus_ctr_id = t5.CTR_SERNO
AND     t5.dt = '${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3  on nvl(org.sbr_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = '${data_dt}'
)
AND     (t.mon_acm_prcp_bal_acml > 0 or t.prcp_bal > 0)
AND     t5.PRD_NO NOT LIKE '1002%' ----剔除票据
AND     t5.BSN_MARK_CD NOT IN ( '01' ) --剔除 员工贷款    01	员工贷款 04	重组业务 05	协作业务 03	预保预报业务
and  L.APLY_CHNL_cd <> 'L08'  --渠道代码，金融云
AND     (
  -- t5.APLY_CHNL_cd <> 'L08'  --渠道代码，金融云
                 t5.PRD_NO <> '2001010101007' ) --剔除 小鱼分期
AND     t5.PRD_NO <> '2001010101008' --剔除 蚂蚁借呗
AND     t5.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     (t5.PRD_NO NOT IN ( '2001010101002' , '2001020101002') OR t5.CTR_STS_CD <> '' ) --剔除未签约的泰e贷
AND     t.dt = '${data_dt}'
and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id, t3.avg_emp_num
)t1
left join (
SELECT  org.sbr_org_id
        ,round(sum(t.mon_acm_prcp_bal_acml * t1.avg_prc / t1.quo_unt /
                  (datediff(to_date(CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'), 'yyyymmdd'), datetrunc(to_date(CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'), 'yyyymmdd'), 'mm'), 'dd') + 1)), 2)/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )     as  CUR_VAL2
FROM    edw.dws_bus_loan_dbil_inf_dd t
inner join    edw.dim_bus_com_exr_inf_dd t1 --汇率信息表
on      t1.ccy_cd = t.ccy_cd --币种代码
and     t1.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t.cst_id = t2.cst_id
AND     t2.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD L --合同其它明细信息
ON      t.bus_ctr_id = L.CTR_SERNO
AND     L.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
INNER JOIN    (
                  SELECT  t.cst_id
                          ,sum(t.ctr_amt) AS sum_ctr_amt
                  FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t
                 LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
                 ON      t.CTR_SERNO = t2.CTR_SERNO
                AND     t2.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
                  WHERE   t.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
             AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
                 AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
                 AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
                 AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
                 AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
                 AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
                 --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
                 AND     (
                  ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
                 OR t.CTR_BAL > 0
                 )
                  GROUP BY t.cst_id
                   HAVING sum(t.ctr_amt) >= 10000 ----金额1万元（含）以上
              ) t4
ON      t.cst_id = t4.cst_id
LEFT JOIN edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t5
ON      t.bus_ctr_id = t5.CTR_SERNO
AND     t5.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
GROUP BY org_id
) t3  on nvl(org.sbr_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
)
AND     (t.mon_acm_prcp_bal_acml > 0 or t.prcp_bal > 0)
AND     t5.PRD_NO NOT LIKE '1002%' ----剔除票据
AND     t5.BSN_MARK_CD NOT IN ( '01' ) --剔除 员工贷款    01	员工贷款 04	重组业务 05	协作业务 03	预保预报业务
and L.APLY_CHNL_cd <> 'L08'  --渠道代码，金融云
AND     (
  -- t5.APLY_CHNL_cd <> 'L08'  --渠道代码，金融云
                t5.PRD_NO <> '2001010101007' ) --剔除 小鱼分期
AND     t5.PRD_NO <> '2001010101008' --剔除 蚂蚁借呗
AND     t5.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     (t5.PRD_NO NOT IN ( '2001010101002' , '2001020101002') OR t5.CTR_STS_CD <> '' ) --剔除未签约的泰e贷
AND     t.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id, t3.avg_emp_num
)t2 on t1.sbr_org_id=t2.sbr_org_id

union all
SELECT  t1.brc_org_id              as  ORG_ID
        ,'DWJS2_0018'              as  IND_ID
        ,(t1.CUR_VAL1-t2.CUR_VAL2)/10000   as  CUR_VAL
from (
SELECT  org.brc_org_id
        ,round(sum(t.mon_acm_prcp_bal_acml * t1.avg_prc / t1.quo_unt /
                  (datediff(to_date('${data_dt}', 'yyyymmdd'), datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'mm'), 'dd') + 1)), 2)/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )     as  CUR_VAL1
FROM    edw.dws_bus_loan_dbil_inf_dd t
inner join    edw.dim_bus_com_exr_inf_dd t1 --汇率信息表
on      t1.ccy_cd = t.ccy_cd --币种代码
and     t1.dt = '${data_dt}'
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD L --合同其它明细信息
ON      t.bus_ctr_id = L.CTR_SERNO
AND     L.dt ='${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
INNER JOIN    (
                  SELECT  t.cst_id
                          ,sum(t.ctr_amt) AS sum_ctr_amt
                  FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t
                  LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
                 ON      t.CTR_SERNO = t2.CTR_SERNO
                AND     t2.dt ='${data_dt}'
                  WHERE   t.dt = '${data_dt}'
             AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
                 AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
                 AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
                 AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
                 AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
                 AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
                 --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
                 AND     (
                  ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
                 OR t.CTR_BAL > 0
                 )
                  GROUP BY t.cst_id
                   HAVING sum(t.ctr_amt) >= 10000 ----金额1万元（含）以上
              ) t4
ON      t.cst_id = t4.cst_id
LEFT JOIN edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t5
ON      t.bus_ctr_id = t5.CTR_SERNO
AND     t5.dt = '${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3  on nvl(org.brc_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = '${data_dt}'
)
AND     (t.mon_acm_prcp_bal_acml > 0 or t.prcp_bal > 0)
AND     t5.PRD_NO NOT LIKE '1002%' ----剔除票据
AND     t5.BSN_MARK_CD NOT IN ( '01' ) --剔除 员工贷款    01	员工贷款 04	重组业务 05	协作业务 03	预保预报业务
and L.APLY_CHNL_cd <> 'L08'  --渠道代码，金融云
AND     (
  -- t5.APLY_CHNL_cd <> 'L08'  --渠道代码，金融云
                 t5.PRD_NO <> '2001010101007' ) --剔除 小鱼分期
AND     t5.PRD_NO <> '2001010101008' --剔除 蚂蚁借呗
AND     t5.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     (t5.PRD_NO NOT IN ( '2001010101002' , '2001020101002') OR t5.CTR_STS_CD <> '' ) --剔除未签约的泰e贷
AND     t.dt = '${data_dt}'
and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id, t3.avg_emp_num
)t1
left join (
SELECT  org.brc_org_id
        ,round(sum(t.mon_acm_prcp_bal_acml * t1.avg_prc / t1.quo_unt /
                  (datediff(to_date(CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'), 'yyyymmdd'), datetrunc(to_date(CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231'), 'yyyymmdd'), 'mm'), 'dd') + 1)), 2)/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )     as  CUR_VAL2
FROM    edw.dws_bus_loan_dbil_inf_dd t
inner join    edw.dim_bus_com_exr_inf_dd t1 --汇率信息表
on      t1.ccy_cd = t.ccy_cd --币种代码
and     t1.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t.cst_id = t2.cst_id
AND     t2.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD L --合同其它明细信息
ON      t.bus_ctr_id = L.CTR_SERNO
AND     L.dt =CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
INNER JOIN    (
                  SELECT  t.cst_id
                          ,sum(t.ctr_amt) AS sum_ctr_amt
                  FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t
                  LEFT JOIN    EDW.DIM_BUS_LOAN_CTR_OTH_DTL_INF_DD t2 --合同其它明细信息
                 ON      t.CTR_SERNO = t2.CTR_SERNO
                AND     t2.dt ='${data_dt}'
                  WHERE   t.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
                AND     t.PRD_NO <> '2002010101001' --剔除信用卡合同
                 AND     t.BSN_MARK_CD NOT IN ( '01' ) --剔除  员工贷款
                 AND     ( t2.APLY_CHNL_CD <> 'L08' OR t.PRD_NO <> '2001010101007' ) --剔除  小鱼分期
                 AND     t.PRD_NO <> '2001010101008' --剔除  蚂蚁借呗
                 AND     t.PRD_NO <> '2001010101010' --剔除百度分期贷
                 AND     ( t.PRD_NO NOT IN ( '2001020101002' , '2001010101002' ) OR nvl(t.CTR_STS_CD, '') <> '' )  --剔除未签约的泰e贷
                 --未结清未终结新口径：状态为正常/冻结且终结日期为空且到期日未到期，或余额大于0
                 AND     (
                  ( t.CTR_STS_CD IN ( '2' , '4' ) AND t.TMT_DT = '18991231' AND to_date(t.CTR_MTU_DT, 'yyyyMMdd') >= to_date(t.dt, 'yyyyMMdd') )
                 OR t.CTR_BAL > 0
                 )
                  GROUP BY t.cst_id
                   HAVING sum(t.ctr_amt) >= 10000 ----金额1万元（含）以上
              ) t4
ON      t.cst_id = t4.cst_id
LEFT JOIN edw.DIM_BUS_LOAN_CTR_BSE_INF_DD t5
ON      t.bus_ctr_id = t5.CTR_SERNO
AND     t5.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
GROUP BY org_id
) t3  on nvl(org.brc_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
)
AND     (t.mon_acm_prcp_bal_acml > 0 or t.prcp_bal > 0)
AND     t5.PRD_NO NOT LIKE '1002%' ----剔除票据
AND     t5.BSN_MARK_CD NOT IN ( '01' ) --剔除 员工贷款    01	员工贷款 04	重组业务 05	协作业务 03	预保预报业务
and L.APLY_CHNL_cd <> 'L08'  --渠道代码，金融云
AND     (
  -- t5.APLY_CHNL_cd <> 'L08'  --渠道代码，金融云
              t5.PRD_NO <> '2001010101007' ) --剔除 小鱼分期
AND     t5.PRD_NO <> '2001010101008' --剔除 蚂蚁借呗
AND     t5.PRD_NO <> '2001010101010' --剔除百度分期贷
AND     (t5.PRD_NO NOT IN ( '2001010101002' , '2001020101002') OR t5.CTR_STS_CD <> '' ) --剔除未签约的泰e贷
AND     t.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id, t3.avg_emp_num
)t2 on t1.brc_org_id=t2.brc_org_id

union all
-- 转正客户经理人均有效户数较年初增量	DWJS2_0019
SELECT  t1.tem_org_id              as  ORG_ID
        ,'DWJS2_0019'              as  IND_ID
        ,t1.CUR_VAL1-t2.CUR_VAL2   as  CUR_VAL
from (
SELECT  org.tem_org_id
        ,SUM(DECODE(t1.efe_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                      as  CUR_VAL1
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3  on nvl(org.tem_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = '${data_dt}'
)
  AND   t1.dt = '${data_dt}'
  and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id, t3.avg_emp_num
)t1
left join (
SELECT  org.tem_org_id
        ,SUM(DECODE(t1.efe_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                      as  CUR_VAL2
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
GROUP BY org_id
) t3  on nvl(org.tem_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
)
  AND   t1.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
  and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id, t3.avg_emp_num
)t2 on t1.tem_org_id=t2.tem_org_id
union all
SELECT  t1.sbr_org_id              as  ORG_ID
        ,'DWJS2_0019'              as  IND_ID
        ,t1.CUR_VAL1-t2.CUR_VAL2   as  CUR_VAL
from (
SELECT  org.sbr_org_id
        ,SUM(DECODE(t1.efe_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                      as  CUR_VAL1
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3  on nvl(org.sbr_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = '${data_dt}'
)
  AND   t1.dt = '${data_dt}'
  and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id, t3.avg_emp_num
)t1
left join (
SELECT  org.sbr_org_id
        ,SUM(DECODE(t1.efe_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                      as  CUR_VAL2
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
GROUP BY org_id
) t3  on nvl(org.sbr_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
)
  AND   t1.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
  and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id, t3.avg_emp_num
)t2 on t1.sbr_org_id=t2.sbr_org_id
union all
SELECT  t1.brc_org_id              as  ORG_ID
        ,'DWJS2_0019'              as  IND_ID
        ,t1.CUR_VAL1-t2.CUR_VAL2   as  CUR_VAL
from (
SELECT  org.brc_org_id
        ,SUM(DECODE(t1.efe_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                      as  CUR_VAL1
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3  on nvl(org.brc_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = '${data_dt}'
)
  AND   t1.dt = '${data_dt}'
  and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id, t3.avg_emp_num
)t1
left join (
SELECT  org.brc_org_id
        ,SUM(DECODE(t1.efe_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                      as  CUR_VAL2
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
GROUP BY org_id
) t3  on nvl(org.brc_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
)
  AND   t1.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
  and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id, t3.avg_emp_num
)t2 on t1.brc_org_id=t2.brc_org_id

union all
-- 转正客户经理人均有效信贷户数较年初增量	DWJS2_0020
SELECT  t1.tem_org_id              as  ORG_ID
        ,'DWJS2_0020'              as  IND_ID
        ,t1.CUR_VAL1-t2.CUR_VAL2   as  CUR_VAL
from (
SELECT  org.tem_org_id
        ,SUM(DECODE(t1.efe_loan_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                 as  CUR_VAL1
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3  on nvl(org.tem_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = '${data_dt}'
)
  AND   t1.dt = '${data_dt}'
  and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id, t3.avg_emp_num
)t1
left join (
SELECT  org.tem_org_id
        ,SUM(DECODE(t1.efe_loan_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                 as  CUR_VAL2
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
GROUP BY org_id
) t3  on nvl(org.tem_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
)
  AND   t1.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
  and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id, t3.avg_emp_num
)t2 on t1.tem_org_id=t2.tem_org_id
union all
SELECT  t1.sbr_org_id              as  ORG_ID
        ,'DWJS2_0020'              as  IND_ID
        ,t1.CUR_VAL1-t2.CUR_VAL2   as  CUR_VAL
from (
SELECT  org.sbr_org_id
        ,SUM(DECODE(t1.efe_loan_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                 as  CUR_VAL1
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3  on nvl(org.sbr_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = '${data_dt}'
)
  AND   t1.dt = '${data_dt}'
  and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id, t3.avg_emp_num
)t1
left join (
SELECT  org.sbr_org_id
        ,SUM(DECODE(t1.efe_loan_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                 as  CUR_VAL2
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
GROUP BY org_id
) t3  on nvl(org.sbr_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
)
  AND   t1.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
  and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id, t3.avg_emp_num
)t2 on t1.sbr_org_id=t2.sbr_org_id
union all
SELECT  t1.brc_org_id              as  ORG_ID
        ,'DWJS2_0020'              as  IND_ID
        ,t1.CUR_VAL1-t2.CUR_VAL2   as  CUR_VAL
from (
SELECT  org.brc_org_id
        ,SUM(DECODE(t1.efe_loan_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                 as  CUR_VAL1
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3  on nvl(org.brc_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = '${data_dt}'
)
  AND   t1.dt = '${data_dt}'
  and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id, t3.avg_emp_num
)t1
left join (
SELECT  org.brc_org_id
        ,SUM(DECODE(t1.efe_loan_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                 as  CUR_VAL2
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
GROUP BY org_id
) t3  on nvl(org.brc_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
)
  AND   t1.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
  and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id, t3.avg_emp_num
)t2 on t1.brc_org_id=t2.brc_org_id

union all
-- 转正客户经理人均有效存款户数较年初增量	DWJS2_0021
SELECT  t1.tem_org_id              as  ORG_ID
        ,'DWJS2_0021'              as  IND_ID
        ,t1.CUR_VAL1-t2.CUR_VAL2   as  CUR_VAL
from (
SELECT  org.tem_org_id
        ,SUM(DECODE(t1.efe_dep_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                  as  CUR_VAL1
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3  on nvl(org.tem_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = '${data_dt}'
)
  AND   t1.dt = '${data_dt}'
  and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id, t3.avg_emp_num
)t1
left join (
SELECT  org.tem_org_id
        ,SUM(DECODE(t1.efe_dep_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                  as  CUR_VAL2
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
GROUP BY org_id
) t3  on nvl(org.tem_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
)
  AND   t1.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
  and nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id, t3.avg_emp_num
)t2 on t1.tem_org_id=t2.tem_org_id
union all
SELECT  t1.sbr_org_id              as  ORG_ID
        ,'DWJS2_0021'              as  IND_ID
        ,t1.CUR_VAL1-t2.CUR_VAL2   as  CUR_VAL
from (
SELECT  org.sbr_org_id
        ,SUM(DECODE(t1.efe_dep_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                  as  CUR_VAL1
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3  on nvl(org.sbr_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = '${data_dt}'
)
  AND   t1.dt = '${data_dt}'
  and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id, t3.avg_emp_num
)t1
left join (
SELECT  org.sbr_org_id
        ,SUM(DECODE(t1.efe_dep_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                  as  CUR_VAL2
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
GROUP BY org_id
) t3  on nvl(org.sbr_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
)
  AND   t1.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
  and nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id, t3.avg_emp_num
)t2 on t1.sbr_org_id=t2.sbr_org_id
union all
SELECT  t1.brc_org_id              as  ORG_ID
        ,'DWJS2_0021'              as  IND_ID
        ,t1.CUR_VAL1-t2.CUR_VAL2   as  CUR_VAL
from (
SELECT  org.brc_org_id
        ,SUM(DECODE(t1.efe_dep_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                  as  CUR_VAL1
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = '${data_dt}'
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt='${data_dt}'
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= ${data_dt}
GROUP BY org_id
) t3  on nvl(org.brc_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = '${data_dt}'
)
  AND   t1.dt = '${data_dt}'
  and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id, t3.avg_emp_num
)t1
left join (
SELECT  org.brc_org_id
        ,SUM(DECODE(t1.efe_dep_cst_ind, '1', 1, 0))/IF(t3.avg_emp_num = 0, NULL, t3.avg_emp_num )                  as  CUR_VAL2
FROM    adm_pub.adm_csm_cbas_ind_inf_dd t1
LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd t2
ON      t1.cst_id = t2.cst_id
AND     t2.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t2.prm_org_id=org.org_id and org.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
LEFT JOIN  (
SELECT org_id,   sum(mon_num*emp_num)/sum(mon) as avg_emp_num
from LAB_BIGDATA_DEV.HGL_ORG_KHJL
where dt= CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
GROUP BY org_id
) t3  on nvl(org.brc_org_id, '0') = nvl(t3.org_id, '0')
WHERE   1 = 1
  AND EXISTS (SELECT 1
                FROM    edw.dws_hr_empe_inf_dd t
                LEFT JOIN edw.dim_hr_org_job_inf_dd p
                       ON t.pos_enc = p.pos_id
                      AND t.dt = p.dt
               WHERE   1 = 1
                 AND   t2.prm_mgr_id = t.empe_id
                 AND   t.lbr_tp_sts = '4'
                 AND   LENGTH(t.quit_dt) <> 8
                 AND   p.pos_nm like '%客户经理%'
                 AND   t.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
)
  AND   t1.dt = CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
  and nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id, t3.avg_emp_num
)t2 on t1.brc_org_id=t2.brc_org_id
;


INSERT INTO LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01 PARTITION (dt = ${data_dt})
-- 贷款利息收入	DJGL2_0001_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0001_01'                       AS IND_ID
        ,T.DJGL2_0001_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_01 T
UNION ALL
-- 贷款月日均	DJGL2_0001_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0001_02'                       AS IND_ID
        ,T.DJGL2_0001_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_01 T
UNION ALL
-- 贷款收息率（月频）	DJGL2_0001
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0001'                       AS IND_ID
        ,T.DJGL2_0001                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_01 T
UNION ALL
-- 贷款利息收入-上年四季度累计	DJGL2_0006_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0006_01'                       AS IND_ID
        ,T.DJGL2_0006_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_01 T
UNION ALL
-- 贷款季日均-上年四季度	       DJGL2_0006_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0006_02'                       AS IND_ID
        ,T.DJGL2_0006_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_01 T
UNION ALL
-- 贷款收息率-上年四季度季频	DJGL2_0006_03
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0006_03'                       AS IND_ID
        ,T.DJGL2_0006_03                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_01 T
UNION ALL
-- 收息率变动	DJGL2_0006
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0006'                       AS IND_ID
        ,T.DJGL2_0006                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_01 T
UNION ALL
-- 存款利息支出	DJGL2_0002_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0002_01'                       AS IND_ID
        ,T.DJGL2_0002_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_02 T
UNION ALL
-- 存款月日均	DJGL2_0002_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0002_02'                       AS IND_ID
        ,T.DJGL2_0002_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_02 T
UNION ALL
-- 存款付息率（月频）	DJGL2_0002
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0002'                       AS IND_ID
        ,T.DJGL2_0002                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_02 T
UNION ALL
-- 存款利息支出-上年四季度累计	DJGL2_0007_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0007_01'                       AS IND_ID
        ,T.DJGL2_0007_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_02 T
UNION ALL
-- 存款季日均-上年四季度	DJGL2_0007_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0007_02'                       AS IND_ID
        ,T.DJGL2_0007_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_02 T
UNION ALL
-- 存款付息率-上年四季度季频	DJGL2_0007_03
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0007_03'                       AS IND_ID
        ,T.DJGL2_0007_03                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_02 T
UNION ALL
-- 付息率变动	DJGL2_0007
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0007'                       AS IND_ID
        ,T.DJGL2_0007                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_02 T
UNION ALL
-- 存款利息支出（剔除一本通）	DJGL2_0003_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0003_01'                       AS IND_ID
        ,T.DJGL2_0003_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_03 T
UNION ALL
-- 存款月日均（剔除一本通）	DJGL2_0003_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0003_02'                       AS IND_ID
        ,T.DJGL2_0003_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_03 T
UNION ALL
-- 存款付息率（月频剔除一本通）	DJGL2_0003
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0003'                       AS IND_ID
        ,T.DJGL2_0003                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_03 T
UNION ALL
-- 存款利息支出（剔除一本通）-上年四季度累计	DJGL2_0008_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0008_01'                       AS IND_ID
        ,T.DJGL2_0008_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_03 T
UNION ALL
-- 存款季日均（剔除一本通）-上年四季度	DJGL2_0008_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0008_02'                       AS IND_ID
        ,T.DJGL2_0008_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_03 T
UNION ALL
-- 存款付息率（剔除一本通）-上年四季度季频	DJGL2_0008_03
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0008_03'                       AS IND_ID
        ,T.DJGL2_0008_03                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_03 T
UNION ALL
-- 存款付息率（剔除一本通）变动	DJGL2_0008
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0008'                       AS IND_ID
        ,T.DJGL2_0008                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_03 T
UNION ALL
-- 资源性利息存款支出	DJGL2_0004_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0004_01'                       AS IND_ID
        ,T.DJGL2_0004_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_04 T
UNION ALL
-- 资源性存款月日均	DJGL2_0004_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0004_02'                       AS IND_ID
        ,T.DJGL2_0004_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_04 T
UNION ALL
-- 资源性存款付息率	DJGL2_0004
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0004'                       AS IND_ID
        ,T.DJGL2_0004                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_04 T
UNION ALL
-- 存贷利差	DJGL2_0005   贷款收息率 - 存款付息率
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0005'                          AS IND_ID
        ,T.DJGL2_0001-t2.DJGL2_0002               AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_01 T
LEFT JOIN LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_02 t2
on  t.ORG_ID=t2.ORG_ID
UNION ALL
-- 存贷利差-上年四季度季频	DJGL2_0009_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0009_01'                          AS IND_ID
        ,T.DJGL2_0006_03-t2.DJGL2_0007_03               AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_01 T
LEFT JOIN LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_02 t2
on  t.ORG_ID=t2.ORG_ID
UNION ALL
-- 利差变动	DJGL2_0009
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0009'                          AS IND_ID
        ,(T.DJGL2_0001-t2.DJGL2_0002)-(T.DJGL2_0006_03-t2.DJGL2_0007_03)      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_01 T
LEFT JOIN LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_02 t2
on  t.ORG_ID=t2.ORG_ID
UNION ALL
-- 新增客户发放利率	DJGL2_0010
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0010'                       AS IND_ID
        ,T.DJGL2_0010                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_05 T
UNION ALL
-- DJGL2_0011	贷款月日均（含贴现）[万元]
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DJGL2_0011'                       AS IND_ID
        ,T.DJGL2_0011                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_DJGL_06 T
;

INSERT INTO LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01 PARTITION (dt = ${data_dt})
-- 总存款月日均	JGGL2_0001_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0001_01'                       AS IND_ID
        ,T.JGGL2_0001_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_01 T
UNION ALL
-- 月日均100万以上存款	JGGL2_0001_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0001_02'                       AS IND_ID
        ,T.JGGL2_0001_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_01 T
UNION ALL
-- 100万以上占比 	JGGL2_0001
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0001'                       AS IND_ID
        ,T.JGGL2_0001                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_01 T
UNION ALL
-- 月日均50万以下存款	JGGL2_0002_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0002_01'                       AS IND_ID
        ,T.JGGL2_0002_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_01 T
UNION ALL
-- 50万及以下占比	JGGL2_0002
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0002'                       AS IND_ID
        ,T.JGGL2_0002                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_01 T
UNION ALL
-- 最大10户存款月日均	JGGL2_0003_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0003_01'                       AS IND_ID
        ,T.JGGL2_0003_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_01 T
UNION ALL
-- 最大10户占比 	JGGL2_0003
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0003'                       AS IND_ID
        ,T.JGGL2_0003                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_01 T
UNION ALL
-- 总存款月日均-上年末	 JGGL2_0013_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0013_01'                       AS IND_ID
        ,T.JGGL2_0013_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_01 T
UNION ALL
-- 月日均100万以上存款-上年末 JGGL2_0013_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0013_02'                       AS IND_ID
        ,T.JGGL2_0013_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_01 T
UNION ALL
-- 100万以上占比-上年末	JGGL2_0013_03
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0013_03'                       AS IND_ID
        ,T.JGGL2_0013_03                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_01 T
UNION ALL
-- 100万以上占比较年初	JGGL2_0013
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0013'                       AS IND_ID
        ,T.JGGL2_0013                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_01 T
UNION ALL
-- 月日均50万以下存款-上年末	JGGL2_0014_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0014_01'                       AS IND_ID
        ,T.JGGL2_0014_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_01 T
UNION ALL
-- 50万及以下占比-上年末	JGGL2_0014_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0014_02'                       AS IND_ID
        ,T.JGGL2_0014_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_01 T
UNION ALL
-- 50万及以下占比较年初	JGGL2_0014
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0014'                       AS IND_ID
        ,T.JGGL2_0014                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_01 T
UNION ALL
-- 最大10户存款月日均-上年末	JGGL2_0015_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0015_01'                       AS IND_ID
        ,T.JGGL2_0015_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_01 T
UNION ALL
-- 最大10户占比-上年末	JGGL2_0015_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0015_02'                       AS IND_ID
        ,T.JGGL2_0015_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_01 T
UNION ALL
-- 最大10户占比较年初	JGGL2_0015
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0015'                       AS IND_ID
        ,T.JGGL2_0015                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_01 T
UNION ALL
-- 保证金存款（剔除资源性）	JGGL2_0004_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0004_01'                       AS IND_ID
        ,T.JGGL2_0004_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02 T
UNION ALL
-- 存款（K）	JGGL2_0004_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0004_02'                       AS IND_ID
        ,T.JGGL2_0004_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02 T
UNION ALL
-- 保证金存款占比	JGGL2_0004
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0004'                       AS IND_ID
        ,T.JGGL2_0004                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02 T
UNION ALL
-- 资源性存款	JGGL2_0005_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0005_01'                       AS IND_ID
        ,T.JGGL2_0005_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02 T
UNION ALL
-- 资源性存款占比	JGGL2_0005
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0005'                       AS IND_ID
        ,T.JGGL2_0005                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02 T
UNION ALL
-- 活期存款(剔除资源性）	JGGL2_0006_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0006_01'                       AS IND_ID
        ,T.JGGL2_0006_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02 T
UNION ALL
-- 活期存款占比	JGGL2_0006
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0006'                       AS IND_ID
        ,T.JGGL2_0006                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02 T
UNION ALL
-- 定期存款月日均(剔除资源性）	JGGL2_0007_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0007_01'                       AS IND_ID
        ,T.JGGL2_0007_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02 T
UNION ALL
-- 1年期及以下定期月日均(剔除资源性）	JGGL2_0007_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0007_02'                       AS IND_ID
        ,T.JGGL2_0007_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02 T
UNION ALL
-- 1年期及以下定期占定期存款占比	JGGL2_0007
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0007'                       AS IND_ID
        ,T.JGGL2_0007                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02 T
UNION ALL
-- 保证金存款（剔除资源性）-上年末	JGGL2_0016_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0016_01'                       AS IND_ID
        ,T.JGGL2_0016_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02 T
UNION ALL
-- 存款（K）月日均 -上年末	JGGL2_0016_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0016_02'                       AS IND_ID
        ,T.JGGL2_0016_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02 T
UNION ALL
-- 保证金存款占比-上年末	JGGL2_0016_03
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0016_03'                       AS IND_ID
        ,T.JGGL2_0016_03                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02 T
UNION ALL
-- 保证金存款占比较年初	JGGL2_0016
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0016'                       AS IND_ID
        ,T.JGGL2_0016                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02 T
UNION ALL
-- 资源性存款-上年末	JGGL2_0017_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0017_01'                       AS IND_ID
        ,T.JGGL2_0017_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02 T
UNION ALL
-- 资源性存款占比-上年末	JGGL2_0017_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0017_02'                       AS IND_ID
        ,T.JGGL2_0017_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02 T
UNION ALL
-- 资源性存款占比较年初	JGGL2_0017
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0017'                       AS IND_ID
        ,T.JGGL2_0017                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02 T
UNION ALL
-- 活期存款(剔除资源性）-上年末	JGGL2_0018_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0018_01'                       AS IND_ID
        ,T.JGGL2_0018_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02 T
UNION ALL
-- 活期存款占比-上年末	JGGL2_0018_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0018_02'                       AS IND_ID
        ,T.JGGL2_0018_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02 T
UNION ALL
-- 活期存款占比较年初	JGGL2_0018
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0018'                       AS IND_ID
        ,T.JGGL2_0018                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02 T
UNION ALL
-- 定期存款月日均(剔除资源性）-上年末	JGGL2_0019_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0019_01'                       AS IND_ID
        ,T.JGGL2_0019_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02 T
UNION ALL
-- 1年期及以下定期月日均(剔除资源性）-上年末	JGGL2_0019_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0019_02'                       AS IND_ID
        ,T.JGGL2_0019_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02 T
UNION ALL
-- 1年期及以下定期占定期存款占比-上年末	JGGL2_0019_03
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0019_03'                       AS IND_ID
        ,T.JGGL2_0019_03                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02 T
UNION ALL
-- 1年期及以下定期占定期存款占比较年初	JGGL2_0019
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0019'                       AS IND_ID
        ,T.JGGL2_0019                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_02 T
UNION ALL
-- 存款月日均（不含一本通）	JGGL2_0008_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0008_01'                       AS IND_ID
        ,T.JGGL2_0008_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_03 T
UNION ALL
-- 0-2.25%低付息存款月日均	JGGL2_0008_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0008_02'                       AS IND_ID
        ,T.JGGL2_0008_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_03 T
UNION ALL
-- 0-2.25%低付息存款占比	JGGL2_0008
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0008'                       AS IND_ID
        ,T.JGGL2_0008                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_03 T
UNION ALL
-- 2.25%-3.5%存款月日均	JGGL2_0009_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0009_01'                       AS IND_ID
        ,T.JGGL2_0009_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_03 T
UNION ALL
-- 2.25%-3.5%存款占比	JGGL2_0009
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0009'                       AS IND_ID
        ,T.JGGL2_0009                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_03 T
UNION ALL
-- 3.5%以上存款月日均	JGGL2_0012_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0012_01'                       AS IND_ID
        ,T.JGGL2_0012_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_03 T
UNION ALL
-- 3.5%以上存款占比	JGGL2_0012
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0012'                       AS IND_ID
        ,T.JGGL2_0012                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_03 T
UNION ALL
-- 存款月日均（不含一本通）-上年末	JGGL2_0020_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0020_01'                       AS IND_ID
        ,T.JGGL2_0020_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_03 T
UNION ALL
-- 0-2.25%低付息存款月日均-上年末	JGGL2_0020_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0020_02'                       AS IND_ID
        ,T.JGGL2_0020_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_03 T
UNION ALL
-- 0-2.25%低付息存款占比-上年末	JGGL2_0020_03
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0020_03'                       AS IND_ID
        ,T.JGGL2_0020_03                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_03 T
UNION ALL
-- 0-2.25%低付息存款占比较年初	JGGL2_0020
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0020'                       AS IND_ID
        ,T.JGGL2_0020                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_03 T
UNION ALL
-- 2.25%-3.5%存款月日均-上年末	JGGL2_0021_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0021_01'                       AS IND_ID
        ,T.JGGL2_0021_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_03 T
UNION ALL
-- 2.25%-3.5%存款占比-上年末	JGGL2_0021_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0021_02'                       AS IND_ID
        ,T.JGGL2_0021_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_03 T
UNION ALL
-- 2.25%-3.5%存款占比较年初	JGGL2_0021
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0021'                       AS IND_ID
        ,T.JGGL2_0021                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_03 T
UNION ALL
-- 3.5%以上存款月日均-上年末	JGGL2_0022_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0022_01'                       AS IND_ID
        ,T.JGGL2_0022_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_03 T
UNION ALL
-- 3.5%以上存款占比-上年末	JGGL2_0022_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0022_02'                       AS IND_ID
        ,T.JGGL2_0022_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_03 T
UNION ALL
-- 3.5%以上存款占比较年初	JGGL2_0022
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0022'                       AS IND_ID
        ,T.JGGL2_0022                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_03 T
UNION ALL
-- 贷款(k)月日均	JGGL2_0023_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0023_01'                       AS IND_ID
        ,T.JGGL2_0023_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 贸易融资月日均	JGGL2_0023_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0023_02'                       AS IND_ID
        ,T.JGGL2_0023_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 贸易融资占比	JGGL2_0023
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0023'                       AS IND_ID
        ,T.JGGL2_0023                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 贷款(k)月日均-上月末	JGGL2_0028_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0028_01'                       AS IND_ID
        ,T.JGGL2_0028_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 贸易融资月日均-上月末	JGGL2_0028_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0028_02'                       AS IND_ID
        ,T.JGGL2_0028_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 贸易融资占比-上月末	JGGL2_0028_03
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0028_03'                       AS IND_ID
        ,T.JGGL2_0028_03                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 贸易融资占比较上月	JGGL2_0028
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0028'                       AS IND_ID
        ,T.JGGL2_0028                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 贷款(k)月日均-上年末	JGGL2_0033_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0033_01'                       AS IND_ID
        ,T.JGGL2_0033_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 贸易融资月日均-上年末	JGGL2_0033_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0033_02'                       AS IND_ID
        ,T.JGGL2_0033_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 贸易融资占比-上年末	JGGL2_0033_03
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0033_03'                       AS IND_ID
        ,T.JGGL2_0033_03                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 贸易融资占比较年初	JGGL2_0033
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0033'                       AS IND_ID
        ,T.JGGL2_0033                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
--UNION ALL
-- --政策性贷款月日均	JGGL2_0024_01
-- SELECT  T.ORG_ID                               AS ORG_ID
--         ,'JGGL2_0024_01'                       AS IND_ID
--         --,T.JGGL2_0024_01                       AS CUR_VAL
--          ,CAST('0' AS Decimal)                     AS CUR_VAL
-- FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
-- UNION ALL
-- -- 政策性贷款占比	JGGL2_0024
-- SELECT  T.ORG_ID                               AS ORG_ID
--         ,'JGGL2_0024'                       AS IND_ID
--         --,T.JGGL2_0024                       AS CUR_VAL
--         ,CAST('0' AS Decimal)                 AS CUR_VAL
-- FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
-- UNION ALL
-- -- 政策性贷款月日均-上月末	JGGL2_0029_01
-- SELECT  T.ORG_ID                               AS ORG_ID
--         ,'JGGL2_0029_01'                       AS IND_ID
--         --,T.JGGL2_0029_01                       AS CUR_VAL
--         ,CAST('0' AS Decimal)                    AS CUR_VAL
-- FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
-- UNION ALL
-- -- 政策性贷款占比-上月末	JGGL2_0029_02
-- SELECT  T.ORG_ID                               AS ORG_ID
--         ,'JGGL2_0029_02'                       AS IND_ID
--         --,T.JGGL2_0029_02                       AS CUR_VAL
--         ,CAST('0' AS Decimal)                  AS CUR_VAL
-- FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
-- UNION ALL
-- -- 政策性贷款占比较上月	JGGL2_0029
-- SELECT  T.ORG_ID                               AS ORG_ID
--         ,'JGGL2_0029'                       AS IND_ID
--         --,T.JGGL2_0029                       AS CUR_VAL
--         ,CAST('0' AS Decimal)                 AS CUR_VAL
-- FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
-- UNION ALL
-- -- 政策性贷款月日均-上年末	JGGL2_0034_01
-- SELECT  T.ORG_ID                               AS ORG_ID
--         ,'JGGL2_0034_01'                       AS IND_ID
--         --,T.JGGL2_0034_01                       AS CUR_VAL
--         ,CAST('0' AS Decimal)                  AS CUR_VAL
-- FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
-- UNION ALL
-- -- 政策性贷款占比-上年末	JGGL2_0034_02
-- SELECT  T.ORG_ID                               AS ORG_ID
--         ,'JGGL2_0034_02'                       AS IND_ID
--         --,T.JGGL2_0034_02                       AS CUR_VAL
--         ,CAST('0' AS Decimal)                AS CUR_VAL
-- FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
-- UNION ALL
-- -- 政策性贷款占比较年初	JGGL2_0034
-- SELECT  T.ORG_ID                               AS ORG_ID
--         ,'JGGL2_0034'                       AS IND_ID
--         --,T.JGGL2_0034                       AS CUR_VAL
--         ,CAST('0' AS Decimal)                 AS CUR_VAL
-- FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 随贷通月日均	JGGL2_0025_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0025_01'                       AS IND_ID
        ,T.JGGL2_0025_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 随贷通占比	JGGL2_0025
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0025'                       AS IND_ID
        ,T.JGGL2_0025                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 随贷通月日均-上月末	JGGL2_0030_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0030_01'                       AS IND_ID
        ,T.JGGL2_0030_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 随贷通占比-上月末	JGGL2_0030_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0030_02'                       AS IND_ID
        ,T.JGGL2_0030_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 随贷通占比较上月	JGGL2_0030
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0030'                       AS IND_ID
        ,T.JGGL2_0030                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 随贷通月日均-上年末	JGGL2_0035_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0035_01'                       AS IND_ID
        ,T.JGGL2_0035_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 随贷通占比-上年末	JGGL2_0035_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0035_02'                       AS IND_ID
        ,T.JGGL2_0035_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 随贷通占比较年初	JGGL2_0035
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0035'                       AS IND_ID
        ,T.JGGL2_0035                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 经营性贷款月日均	JGGL2_0026_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0026_01'                       AS IND_ID
        ,T.JGGL2_0026_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 经营性贷款占比	JGGL2_0026
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0026'                       AS IND_ID
        ,T.JGGL2_0026                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 经营性贷款月日均-上月末	JGGL2_0031_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0031_01'                       AS IND_ID
        ,T.JGGL2_0031_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 经营性贷款占比-上月末	JGGL2_0031_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0031_02'                       AS IND_ID
        ,T.JGGL2_0031_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 经营性贷款占比较上月	JGGL2_0031
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0031'                       AS IND_ID
        ,T.JGGL2_0031                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 经营性贷款月日均-上年末	JGGL2_0036_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0036_01'                       AS IND_ID
        ,T.JGGL2_0036_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 经营性贷款占比-上年末	JGGL2_0036_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0036_02'                       AS IND_ID
        ,T.JGGL2_0036_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 经营性贷款占比较年初	JGGL2_0036
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0036'                       AS IND_ID
        ,T.JGGL2_0036                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 消费性贷款月日均	JGGL2_0027_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0027_01'                       AS IND_ID
        ,T.JGGL2_0027_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 消费性贷款占比	JGGL2_0027
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0027'                       AS IND_ID
        ,T.JGGL2_0027                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 消费性贷款月日均-上月末	JGGL2_0032_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0032_01'                       AS IND_ID
        ,T.JGGL2_0032_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 消费性贷款占比-上月末	JGGL2_0032_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0032_02'                       AS IND_ID
        ,T.JGGL2_0032_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 消费性贷款占比较上月	JGGL2_0032
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0032'                       AS IND_ID
        ,T.JGGL2_0032                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 消费性贷款月日均-上年末	JGGL2_0037_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0037_01'                       AS IND_ID
        ,T.JGGL2_0037_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 消费性贷款占比-上年末	JGGL2_0037_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0037_02'                       AS IND_ID
        ,T.JGGL2_0037_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 消费性贷款占比较年初	JGGL2_0037
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0037'                       AS IND_ID
        ,T.JGGL2_0037                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_04 T
UNION ALL
-- 授信客户贷款月日均	JGGL2_0038_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0038_01'                       AS IND_ID
        ,T.JGGL2_0038_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- (0,30万元]授信客户贷款月日均	JGGL2_0038_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0038_02'                       AS IND_ID
        ,T.JGGL2_0038_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- (0,30万元]授信月日均占比	JGGL2_0038
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0038'                       AS IND_ID
        ,T.JGGL2_0038                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- （30万元,50万元]授信月日均	JGGL2_0039_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0039_01'                       AS IND_ID
        ,T.JGGL2_0039_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- （30万元,50万元]授信月日均占比	JGGL2_0039
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0039'                       AS IND_ID
        ,T.JGGL2_0039                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- （50万元,100万元]授信月日均	JGGL2_0040_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0040_01'                       AS IND_ID
        ,T.JGGL2_0040_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- （50万元,100万元]授信月日均占比	JGGL2_0040
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0040'                       AS IND_ID
        ,T.JGGL2_0040                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- （100万元,150万元]授信月日均	JGGL2_0041_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0041_01'                       AS IND_ID
        ,T.JGGL2_0041_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- （100万元,150万元]授信月日均占比	JGGL2_0041
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0041'                       AS IND_ID
        ,T.JGGL2_0041                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- （150万元,300万元]授信月日均	JGGL2_0042_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0042_01'                       AS IND_ID
        ,T.JGGL2_0042_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- （150万元,300万元]授信月日均占比	JGGL2_0042
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0042'                       AS IND_ID
        ,T.JGGL2_0042                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- （300万元,&infin;）授信月日均	JGGL2_0043_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0043_01'                       AS IND_ID
        ,T.JGGL2_0043_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- （300万元,&infin;）授信月日均占比	JGGL2_0043
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0043'                       AS IND_ID
        ,T.JGGL2_0043                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- 授信客户贷款月日均-上年末	JGGL2_0044_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0044_01'                       AS IND_ID
        ,T.JGGL2_0044_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- (0,30万元]授信客户贷款月日均-上年末	JGGL2_0044_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0044_02'                       AS IND_ID
        ,T.JGGL2_0044_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- (0,30万元]授信月日均占比-上年末	JGGL2_0044_03
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0044_03'                       AS IND_ID
        ,T.JGGL2_0044_03                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- (0,30万元]授信月日均占比较年初	JGGL2_0044
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0044'                       AS IND_ID
        ,T.JGGL2_0044                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- （30万元,50万元]授信月日均-上年末	JGGL2_0045_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0045_01'                       AS IND_ID
        ,T.JGGL2_0045_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- （30万元,50万元]授信月日均占比-上年末	JGGL2_0045_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0045_02'                       AS IND_ID
        ,T.JGGL2_0045_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- （30万元,50万元]授信月日均占比较年初	JGGL2_0045
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0045'                       AS IND_ID
        ,T.JGGL2_0045                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- （50万元,100万元]授信月日均-上年末	JGGL2_0046_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0046_01'                       AS IND_ID
        ,T.JGGL2_0046_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- （50万元,100万元]授信月日均占比-上年末	JGGL2_0046_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0046_02'                       AS IND_ID
        ,T.JGGL2_0046_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- （50万元,100万元]授信月日均占比较年初	JGGL2_0046
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0046'                       AS IND_ID
        ,T.JGGL2_0046                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- （100万元,150万元]授信月日均-上年末	JGGL2_0047_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0047_01'                       AS IND_ID
        ,T.JGGL2_0047_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- （100万元,150万元]授信月日均占比-上年末	JGGL2_0047_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0047_02'                       AS IND_ID
        ,T.JGGL2_0047_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- （100万元,150万元]授信月日均占比较年初	JGGL2_0047
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0047'                       AS IND_ID
        ,T.JGGL2_0047                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- （150万元,300万元]授信月日均-上年末	JGGL2_0048_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0048_01'                       AS IND_ID
        ,T.JGGL2_0048_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- （150万元,300万元]授信月日均占比-上年末	JGGL2_0048_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0048_02'                       AS IND_ID
        ,T.JGGL2_0048_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- （150万元,300万元]授信月日均占比较年初	JGGL2_0048
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0048'                       AS IND_ID
        ,T.JGGL2_0048                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- （300万元,&infin;）授信月日均-上年末	JGGL2_0049_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0049_01'                       AS IND_ID
        ,T.JGGL2_0049_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- （300万元,&infin;）授信月日均占比-上年末	JGGL2_0049_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0049_02'                       AS IND_ID
        ,T.JGGL2_0049_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
UNION ALL
-- （300万元,&infin;）授信月日均占比较年初	JGGL2_0049
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JGGL2_0049'                       AS IND_ID
        ,T.JGGL2_0049                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_JGGL_05 T
;

INSERT INTO LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01 PARTITION (dt = ${data_dt})
-- 当年流失信贷客户	ZHJY2_0001_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0001_01'                       AS IND_ID
        ,T.ZHJY2_0001_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_01 T
UNION ALL
-- 上年末经营性有效信贷户数	ZHJY2_0001_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0001_02'                       AS IND_ID
        ,T.ZHJY2_0001_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_01 T
UNION ALL
-- 信贷客户流失率	ZHJY2_0001
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0001'                       AS IND_ID
        ,T.ZHJY2_0001                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_01 T
UNION ALL
-- 当年流失信贷客户-上年同期值	ZHJY2_0002_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0002_01'                       AS IND_ID
        ,T.ZHJY2_0002_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_01 T
UNION ALL
-- 上年末经营性有效信贷户数-上年同期值	ZHJY2_0002_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0002_02'                       AS IND_ID
        ,T.ZHJY2_0002_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_01 T
UNION ALL
-- 信贷客户流失率-上年同期值	ZHJY2_0002_03
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0002_03'                       AS IND_ID
        ,T.ZHJY2_0002_03                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_01 T
UNION ALL
-- 信贷客户流失率同比变动	ZHJY2_0002
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0002'                       AS IND_ID
        ,T.ZHJY2_0002                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_01 T
UNION ALL
-- 配随贷通卡客户数	ZHJY2_0003_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0003_01'                       AS IND_ID
        ,T.ZHJY2_0003_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_02 T
UNION ALL
-- 经营性贷款客户数	ZHJY2_0003_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0003_02'                       AS IND_ID
        ,T.ZHJY2_0003_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_02 T
UNION ALL
-- 配卡率	ZHJY2_0003
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0003'                       AS IND_ID
        ,T.ZHJY2_0003                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_02 T
UNION ALL
-- 配卡用信户均	ZHJY2_0004_01  配卡用信户均=用信日均/配随贷通卡客户数
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0004_01'                       AS IND_ID
        ,T.ZHJY2_0004_01/10000                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_02 T
UNION ALL
-- 配卡户均	ZHJY2_0004_02  配卡户均=绑定额度/配随贷通卡客户数
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0004_02'                       AS IND_ID
        ,T.ZHJY2_0004_02/10000                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_02 T
UNION ALL
-- 配卡用信率	ZHJY2_0004 配卡用信率=配卡用信户均/配卡户均
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0004'                       AS IND_ID
        ,T.ZHJY2_0004                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_02 T
UNION ALL
-- 配随贷通卡客户数-上年末	ZHJY2_0005_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0005_01'                       AS IND_ID
        ,T.ZHJY2_0005_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_02 T
UNION ALL
-- 经营性贷款客户数-上年末	ZHJY2_0005_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0005_02'                       AS IND_ID
        ,T.ZHJY2_0005_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_02 T
UNION ALL
-- 配卡率-上年末	ZHJY2_0005_03
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0005_03'                       AS IND_ID
        ,T.ZHJY2_0005_03                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_02 T
UNION ALL
-- 配卡率较年初变动	ZHJY2_0005
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0005'                       AS IND_ID
        ,T.ZHJY2_0005                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_02 T
UNION ALL
-- 同一风险控制号下所有经营性客户的存款年日均汇总	ZHJY2_0006_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0006_01'                       AS IND_ID
        ,T.ZHJY2_0006_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_03 T
UNION ALL
-- 同一风险控制号下所有经营性客户的贷款年日均汇总	ZHJY2_0006_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0006_02'                       AS IND_ID
        ,T.ZHJY2_0006_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_03 T
UNION ALL
-- 存款回报率（年）	ZHJY2_0006
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0006'                       AS IND_ID
        ,T.ZHJY2_0006                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_03 T
UNION ALL
-- 同一风险控制号下所有经营性客户的存款年日均汇总-上年末	ZHJY2_0007_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0007_01'                       AS IND_ID
        ,T.ZHJY2_0007_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_03 T
UNION ALL
-- 同一风险控制号下所有经营性客户的贷款年日均汇总-上年末	ZHJY2_0007_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0007_02'                       AS IND_ID
        ,T.ZHJY2_0007_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_03 T
UNION ALL
-- 存款回报率(年)-上年末	ZHJY2_0007_03
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0007_03'                       AS IND_ID
        ,T.ZHJY2_0007_03                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_03 T
UNION ALL
-- 存款回报率(年)较年初变动	ZHJY2_0007
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0007'                       AS IND_ID
        ,T.ZHJY2_0007                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_03 T
UNION ALL
-- 授信户数	ZHJY2_0008_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0008_01'                       AS IND_ID
        ,T.ZHJY2_0008_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_04 T
UNION ALL
-- 授信户中有效存款户数	ZHJY2_0008_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0008_02'                       AS IND_ID
        ,T.ZHJY2_0008_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_04 T
UNION ALL
-- 授信客户中有效存款户占比	ZHJY2_0008
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0008'                       AS IND_ID
        ,T.ZHJY2_0008                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_04 T
UNION ALL
-- 授信户数-上年末	ZHJY2_0009_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0009_01'                       AS IND_ID
        ,T.ZHJY2_0009_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_04 T
UNION ALL
-- 授信户中有效存款户数-上年末	ZHJY2_0009_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0009_02'                       AS IND_ID
        ,T.ZHJY2_0009_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_04 T
UNION ALL
-- 授信客户中有效存款户占比-上年末 ZHJY2_0009_03
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0009_03'                       AS IND_ID
        ,T.ZHJY2_0009_03                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_04 T
UNION ALL
-- 授信客户中有效存款户占比较年初变动	ZHJY2_0009
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0009'                       AS IND_ID
        ,T.ZHJY2_0009                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_04 T
UNION ALL
-- 经营性贷款户中有效存款户	ZHJY2_0010_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0010_01'                       AS IND_ID
        ,T.ZHJY2_0010_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_05 T
UNION ALL
-- 经营性贷款户	ZHJY2_0010_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0010_02'                       AS IND_ID
        ,T.ZHJY2_0010_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_05 T
UNION ALL
-- 经营性贷款户中有效存款户占比	ZHJY2_0010
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0010'                       AS IND_ID
        ,T.ZHJY2_0010                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_05 T
UNION ALL
-- 经营性贷款户中有效存款户-上年末	ZHJY2_0011_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0011_01'                       AS IND_ID
        ,T.ZHJY2_0011_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_05 T
UNION ALL
-- 经营性贷款户-上年末	ZHJY2_0011_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0011_02'                       AS IND_ID
        ,T.ZHJY2_0011_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_05 T
UNION ALL
-- 经营性贷款户中有效存款户占比-上年末	ZHJY2_0011_03
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0011_03'                       AS IND_ID
        ,T.ZHJY2_0011_03                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_05 T
UNION ALL
-- 经营性贷款户中有效存款户占比较年初变动	ZHJY2_0011
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0011'                       AS IND_ID
        ,T.ZHJY2_0011                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_05 T
UNION ALL
-- 有效信贷户	ZHJY2_0012_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0012_01'                       AS IND_ID
        ,T.ZHJY2_0012_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_06 T
UNION ALL
-- 客户产品持有数&ge;3客户数	ZHJY2_0012_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0012_02'                       AS IND_ID
        ,T.ZHJY2_0012_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_06 T
UNION ALL
-- 客户产品持有数&ge;3客户占比	ZHJY2_0012
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0012'                       AS IND_ID
        ,T.ZHJY2_0012                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_06 T
UNION ALL
-- &quot;存贷汇&quot;均覆盖客户数	ZHJY2_0013_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0013_01'                       AS IND_ID
        ,T.ZHJY2_0013_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_06 T
UNION ALL
-- &quot;存贷汇&quot;均覆盖客户数占比	ZHJY2_0013
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0013'                       AS IND_ID
        ,T.ZHJY2_0013                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_06 T
UNION ALL
-- 客户数	ZHJY2_0014_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0014_01'                       AS IND_ID
        ,T.ZHJY2_0014_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07 T
UNION ALL
-- A类客户数	ZHJY2_0014_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0014_02'                       AS IND_ID
        ,T.ZHJY2_0014_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07 T
UNION ALL
-- A类客户占比	ZHJY2_0014
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0014'                       AS IND_ID
        ,T.ZHJY2_0014                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07 T
UNION ALL
-- B类客户数	ZHJY2_0015_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0015_01'                       AS IND_ID
        ,T.ZHJY2_0015_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07 T
UNION ALL
-- B类客户占比	ZHJY2_0015
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0015'                       AS IND_ID
        ,T.ZHJY2_0015                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07 T
UNION ALL
-- C类客户数	ZHJY2_0016_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0016_01'                       AS IND_ID
        ,T.ZHJY2_0016_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07 T
UNION ALL
-- C类客户占比	ZHJY2_0016
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0016'                       AS IND_ID
        ,T.ZHJY2_0016                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07 T
UNION ALL
-- 客户数-上年末	    ZHJY2_0017_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0017_01'                       AS IND_ID
        ,T.ZHJY2_0017_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07 T
UNION ALL
-- A类客户数-上年末	    ZHJY2_0017_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0017_02'                       AS IND_ID
        ,T.ZHJY2_0017_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07 T
UNION ALL
-- A类客户占比-上年末   ZHJY2_0017_03
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0017_03'                       AS IND_ID
        ,T.ZHJY2_0017_03                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07 T
UNION ALL
-- A类客户占比较年初	ZHJY2_0017
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0017'                       AS IND_ID
        ,T.ZHJY2_0017                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07 T
UNION ALL
-- B类客户数-上年末	    ZHJY2_0018_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0018_01'                       AS IND_ID
        ,T.ZHJY2_0018_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07 T
UNION ALL
-- B类客户占比-上年末   ZHJY2_0018_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0018_02'                       AS IND_ID
        ,T.ZHJY2_0018_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07 T
UNION ALL
-- B类客户占比较年初	ZHJY2_0018
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0018'                       AS IND_ID
        ,T.ZHJY2_0018                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07 T
UNION ALL
-- C类客户数-上年末	    ZHJY2_0019_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0019_01'                       AS IND_ID
        ,T.ZHJY2_0019_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07 T
UNION ALL
-- C类客户占比-上年末   ZHJY2_0019_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0019_02'                       AS IND_ID
        ,T.ZHJY2_0019_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07 T
UNION ALL
-- C类客户占比较年初	ZHJY2_0019
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0019'                       AS IND_ID
        ,T.ZHJY2_0019                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07 T
UNION ALL
-- 价值净进阶客户数	ZHJY2_0020
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0020'                       AS IND_ID
        ,T.ZHJY2_0020                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_08 T
UNION ALL
-- 紧密客户关联体价值进阶率	ZHJY2_0021
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0021'                       AS IND_ID
        ,T.ZHJY2_0021                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_08 T
;

--单独计算钱塘支行
DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_01_QT;
CREATE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_01_QT as
select  t.org_id      as   ORG_ID
        ,t.ZHJY2_0001_01
        ,t.ZHJY2_0001_02
        ,t.ZHJY2_0001
        ,t1.ZHJY2_0002_01
        ,t1.ZHJY2_0002_02
        ,t1.ZHJY2_0002_03
        ,t.ZHJY2_0001-t1.ZHJY2_0002_03  as ZHJY2_0002
from  (
SELECT  t.org_id
        ,sum(t.loss_cst_num) as ZHJY2_0001_01
        ,sum(t.last_opr_cst_num) as ZHJY2_0001_02
        ,sum(t.loss_cst_num)/sum(t.last_opr_cst_num) AS ZHJY2_0001
from  app_rpt.fct_cst_opr_loan_prt_dd  t
where t.dt=${data_dt}
and   t.org_type in ('F','Z','T')
and   t.rsk_hidden_cd='剔除风险退出'
and   substr(t.org_id,1,7)='3302052' --单独插入钱塘小微
GROUP BY t.org_id
)t
left join (
SELECT  t.org_id
        ,sum(t.loss_cst_num)  as ZHJY2_0002_01
        ,sum(t.last_opr_cst_num)  as ZHJY2_0002_02
        ,sum(t.loss_cst_num)/sum(t.last_opr_cst_num) AS ZHJY2_0002_03
from  app_rpt.fct_cst_opr_loan_prt_dd  t
where t.dt=CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
and   t.org_type in ('F','Z','T','H')
and   t.rsk_hidden_cd='剔除风险退出'
and   substr(t.org_id,1,7)='3302052' --单独插入钱塘小微
GROUP BY t.org_id
)t1  on t.org_id=t1.org_id
;

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07_QT;
CREATE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07_QT as
SELECT  t1.org_id
        ,t1.ZHJY2_0014_01
        ,t1.ZHJY2_0014_02
        ,t1.ZHJY2_0014
        ,t1.ZHJY2_0015_01
        ,t1.ZHJY2_0015
        ,t1.ZHJY2_0016_01
        ,t1.ZHJY2_0016
        ,t2.ZHJY2_0017_01
        ,t2.ZHJY2_0017_02
        ,t2.ZHJY2_0017_03
        ,t1.ZHJY2_0014-t2.ZHJY2_0017_03       as ZHJY2_0017
        ,t2.ZHJY2_0018_01
        ,t2.ZHJY2_0018_02
        ,t1.ZHJY2_0015-t2.ZHJY2_0018_02      as  ZHJY2_0018
        ,t2.ZHJY2_0019_01
        ,t2.ZHJY2_0019_02
        ,t1.ZHJY2_0016-t2.ZHJY2_0019_02     as ZHJY2_0019
from (
SELECT  t1.org_id
        ,SUM(t1.is_cur_dft_cst_qty)+SUM(t1.cncn_val_cst_qty)+SUM(t1.zero_val_cst_qty)+SUM(t1.v1_val_cst_qty)+SUM(t1.v2_val_cst_qty)+SUM(t1.v3_val_cst_qty)+SUM(t1.v4_val_cst_qty)
        +SUM(t1.v5_val_cst_qty)+SUM(t1.v6_val_cst_qty)+SUM(t1.v7_val_cst_qty)+SUM(t1.v8_val_cst_qty)  as ZHJY2_0014_01
        ,SUM(t1.v5_val_cst_qty)+SUM(t1.v6_val_cst_qty)+SUM(t1.v7_val_cst_qty)+SUM(t1.v8_val_cst_qty)  as ZHJY2_0014_02
        ,(SUM(t1.v5_val_cst_qty)+SUM(t1.v6_val_cst_qty)+SUM(t1.v7_val_cst_qty)+SUM(t1.v8_val_cst_qty))/(SUM(t1.is_cur_dft_cst_qty)+SUM(t1.cncn_val_cst_qty)+SUM(t1.zero_val_cst_qty)
        +SUM(t1.v1_val_cst_qty)+SUM(t1.v2_val_cst_qty)+SUM(t1.v3_val_cst_qty)+SUM(t1.v4_val_cst_qty)+SUM(t1.v5_val_cst_qty)+SUM(t1.v6_val_cst_qty)+SUM(t1.v7_val_cst_qty)+SUM(t1.v8_val_cst_qty))  as ZHJY2_0014
        ,SUM(t1.v3_val_cst_qty)+SUM(t1.v4_val_cst_qty)  as ZHJY2_0015_01
        ,(SUM(t1.v3_val_cst_qty)+SUM(t1.v4_val_cst_qty))/(SUM(t1.is_cur_dft_cst_qty)+SUM(t1.cncn_val_cst_qty)+SUM(t1.zero_val_cst_qty)+SUM(t1.v1_val_cst_qty)+SUM(t1.v2_val_cst_qty)
        +SUM(t1.v3_val_cst_qty)+SUM(t1.v4_val_cst_qty)+SUM(t1.v5_val_cst_qty)+SUM(t1.v6_val_cst_qty)+SUM(t1.v7_val_cst_qty)+SUM(t1.v8_val_cst_qty))    as ZHJY2_0015
        ,SUM(t1.cncn_val_cst_qty)+SUM(t1.zero_val_cst_qty)+SUM(t1.v1_val_cst_qty)+SUM(t1.v2_val_cst_qty)  as ZHJY2_0016_01
        ,(SUM(t1.cncn_val_cst_qty)+SUM(t1.zero_val_cst_qty)+SUM(t1.v1_val_cst_qty)+SUM(t1.v2_val_cst_qty))/(SUM(t1.is_cur_dft_cst_qty)+SUM(t1.cncn_val_cst_qty)+SUM(t1.zero_val_cst_qty)
        +SUM(t1.v1_val_cst_qty)+SUM(t1.v2_val_cst_qty)+SUM(t1.v3_val_cst_qty)+SUM(t1.v4_val_cst_qty)+SUM(t1.v5_val_cst_qty)+SUM(t1.v6_val_cst_qty)+SUM(t1.v7_val_cst_qty)+SUM(t1.v8_val_cst_qty))  as ZHJY2_0016
from    app_rpt.FCT_CST_VAL_DIS_RPT  t1
where   t1.dt=${data_dt}
and   t1.org_type in ('F','Z','T')
and   t1.stat_dim='紧密关联人维度'
and   t1.cst_typ_cd='全选'
and   substr(t1.org_id,1,7)='3302052' --单独插入钱塘小微
GROUP BY t1.org_id
)t1
left join (
SELECT  t1.org_id
        ,SUM(t1.is_cur_dft_cst_qty)+SUM(t1.cncn_val_cst_qty)+SUM(t1.zero_val_cst_qty)+SUM(t1.v1_val_cst_qty)+SUM(t1.v2_val_cst_qty)+SUM(t1.v3_val_cst_qty)+SUM(t1.v4_val_cst_qty)
        +SUM(t1.v5_val_cst_qty)+SUM(t1.v6_val_cst_qty)+SUM(t1.v7_val_cst_qty)+SUM(t1.v8_val_cst_qty)  as ZHJY2_0017_01
        ,SUM(t1.v5_val_cst_qty)+SUM(t1.v6_val_cst_qty)+SUM(t1.v7_val_cst_qty)+SUM(t1.v8_val_cst_qty)  as ZHJY2_0017_02
        ,(SUM(t1.v5_val_cst_qty)+SUM(t1.v6_val_cst_qty)+SUM(t1.v7_val_cst_qty)+SUM(t1.v8_val_cst_qty))/(SUM(t1.is_cur_dft_cst_qty)+SUM(t1.cncn_val_cst_qty)+SUM(t1.zero_val_cst_qty)
        +SUM(t1.v1_val_cst_qty)+SUM(t1.v2_val_cst_qty)+SUM(t1.v3_val_cst_qty)+SUM(t1.v4_val_cst_qty)+SUM(t1.v5_val_cst_qty)+SUM(t1.v6_val_cst_qty)+SUM(t1.v7_val_cst_qty)+SUM(t1.v8_val_cst_qty))  as ZHJY2_0017_03
        ,SUM(t1.v3_val_cst_qty)+SUM(t1.v4_val_cst_qty)  as ZHJY2_0018_01
        ,(SUM(t1.v3_val_cst_qty)+SUM(t1.v4_val_cst_qty))/(SUM(t1.is_cur_dft_cst_qty)+SUM(t1.cncn_val_cst_qty)+SUM(t1.zero_val_cst_qty)+SUM(t1.v1_val_cst_qty)+SUM(t1.v2_val_cst_qty)
        +SUM(t1.v3_val_cst_qty)+SUM(t1.v4_val_cst_qty)+SUM(t1.v5_val_cst_qty)+SUM(t1.v6_val_cst_qty)+SUM(t1.v7_val_cst_qty)+SUM(t1.v8_val_cst_qty))    as ZHJY2_0018_02
        ,SUM(t1.cncn_val_cst_qty)+SUM(t1.zero_val_cst_qty)+SUM(t1.v1_val_cst_qty)+SUM(t1.v2_val_cst_qty)  as ZHJY2_0019_01
        ,(SUM(t1.cncn_val_cst_qty)+SUM(t1.zero_val_cst_qty)+SUM(t1.v1_val_cst_qty)+SUM(t1.v2_val_cst_qty))/(SUM(t1.is_cur_dft_cst_qty)+SUM(t1.cncn_val_cst_qty)+SUM(t1.zero_val_cst_qty)
        +SUM(t1.v1_val_cst_qty)+SUM(t1.v2_val_cst_qty)+SUM(t1.v3_val_cst_qty)+SUM(t1.v4_val_cst_qty)+SUM(t1.v5_val_cst_qty)+SUM(t1.v6_val_cst_qty)+SUM(t1.v7_val_cst_qty)+SUM(t1.v8_val_cst_qty))  as ZHJY2_0019_02
from    app_rpt.FCT_CST_VAL_DIS_RPT  t1
where   t1.dt= CONCAT(TO_CHAR(DATEADD(TO_DATE(${data_dt}, 'yyyymmdd'), - 1, 'yyyy'), 'yyyy'), '1231')
and   t1.org_type in ('F','Z','T','H')
and   t1.stat_dim='紧密关联人维度'
and   t1.cst_typ_cd='全选'
and   substr(t1.org_id,1,7)='3302052' --单独插入钱塘小微
GROUP BY t1.org_id
)t2 on t1.org_id=t2.org_id
;

INSERT INTO LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01 PARTITION (dt = ${data_dt})
-- 当年流失信贷客户	ZHJY2_0001_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0001_01'                       AS IND_ID
        ,T.ZHJY2_0001_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_01_QT T
UNION ALL
-- 上年末经营性有效信贷户数	ZHJY2_0001_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0001_02'                       AS IND_ID
        ,T.ZHJY2_0001_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_01_QT T
UNION ALL
-- 信贷客户流失率	ZHJY2_0001
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0001'                       AS IND_ID
        ,T.ZHJY2_0001                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_01_QT T
UNION ALL
-- 当年流失信贷客户-上年同期值	ZHJY2_0002_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0002_01'                       AS IND_ID
        ,T.ZHJY2_0002_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_01_QT T
UNION ALL
-- 上年末经营性有效信贷户数-上年同期值	ZHJY2_0002_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0002_02'                       AS IND_ID
        ,T.ZHJY2_0002_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_01_QT T
UNION ALL
-- 信贷客户流失率-上年同期值	ZHJY2_0002_03
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0002_03'                       AS IND_ID
        ,T.ZHJY2_0002_03                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_01_QT T
UNION ALL
-- 信贷客户流失率同比变动	ZHJY2_0002
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0002'                       AS IND_ID
        ,T.ZHJY2_0002                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_01_QT T
UNION ALL
-- 客户数	ZHJY2_0014_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0014_01'                       AS IND_ID
        ,T.ZHJY2_0014_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07_QT T
UNION ALL
-- A类客户数	ZHJY2_0014_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0014_02'                       AS IND_ID
        ,T.ZHJY2_0014_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07_QT T
UNION ALL
-- A类客户占比	ZHJY2_0014
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0014'                       AS IND_ID
        ,T.ZHJY2_0014                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07_QT T
UNION ALL
-- B类客户数	ZHJY2_0015_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0015_01'                       AS IND_ID
        ,T.ZHJY2_0015_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07_QT T
UNION ALL
-- B类客户占比	ZHJY2_0015
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0015'                       AS IND_ID
        ,T.ZHJY2_0015                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07_QT T
UNION ALL
-- C类客户数	ZHJY2_0016_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0016_01'                       AS IND_ID
        ,T.ZHJY2_0016_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07_QT T
UNION ALL
-- C类客户占比	ZHJY2_0016
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0016'                       AS IND_ID
        ,T.ZHJY2_0016                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07_QT T
UNION ALL
-- 客户数-上年末	    ZHJY2_0017_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0017_01'                       AS IND_ID
        ,T.ZHJY2_0017_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07_QT T
UNION ALL
-- A类客户数-上年末	    ZHJY2_0017_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0017_02'                       AS IND_ID
        ,T.ZHJY2_0017_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07_QT T
UNION ALL
-- A类客户占比-上年末   ZHJY2_0017_03
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0017_03'                       AS IND_ID
        ,T.ZHJY2_0017_03                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07_QT T
UNION ALL
-- A类客户占比较年初	ZHJY2_0017
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0017'                       AS IND_ID
        ,T.ZHJY2_0017                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07_QT T
UNION ALL
-- B类客户数-上年末	    ZHJY2_0018_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0018_01'                       AS IND_ID
        ,T.ZHJY2_0018_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07_QT T
UNION ALL
-- B类客户占比-上年末   ZHJY2_0018_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0018_02'                       AS IND_ID
        ,T.ZHJY2_0018_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07_QT T
UNION ALL
-- B类客户占比较年初	ZHJY2_0018
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0018'                       AS IND_ID
        ,T.ZHJY2_0018                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07_QT T
UNION ALL
-- C类客户数-上年末	    ZHJY2_0019_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0019_01'                       AS IND_ID
        ,T.ZHJY2_0019_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07_QT T
UNION ALL
-- C类客户占比-上年末   ZHJY2_0019_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0019_02'                       AS IND_ID
        ,T.ZHJY2_0019_02                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07_QT T
UNION ALL
-- C类客户占比较年初	ZHJY2_0019
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZHJY2_0019'                       AS IND_ID
        ,T.ZHJY2_0019                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01_ZHJY_07_QT T
;

-- DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2;
-- CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2
-- (
--     DATA_DT       STRING  COMMENT '数据日期'
--     ,CPY_ORG_ID   STRING  COMMENT '法人机构编号'
--     ,CPY_ORG_NM   STRING  COMMENT '法人机构名称'
--     ,BRC_ORG_ID   STRING  COMMENT '分行机构编号'
--     ,BRC_ORG_NM   STRING  COMMENT '分行机构名称'
--     ,SBR_ORG_ID   STRING  COMMENT '支行机构编号'
--     ,SBR_ORG_NM   STRING  COMMENT '支行机构名称'
--     ,TEM_ORG_ID   STRING  COMMENT '团队机构编号'
--     ,TEM_ORG_NM   STRING  COMMENT '团队机构名称'
--     ,ORG_ID       STRING  COMMENT '考核机构代码'
--     ,ORG_NM       STRING  COMMENT '考核机构名称'
--     ,IND_ID       STRING  COMMENT '指标编号'
--     ,IND_NM       STRING  COMMENT '指标名称'
--     ,DATA_CLASS   STRING  COMMENT '模块类别'
--     ,CUR_VAL_ZS   STRING COMMENT '指标值展示'
--     ,CUR_VAL      DECIMAL COMMENT '指标值'
--     -- ,MI_VAL_ZS    STRING COMMENT '上月末值展示'
--     -- ,MI_VAL       DECIMAL COMMENT '上月末值'
--     -- ,MI_CMP_VAL_ZS   STRING COMMENT '较月初展示'
--     -- ,MI_CMP_VAL   DECIMAL COMMENT '较月初'
--     -- ,QI_VAL_ZS       STRING COMMENT '上季末值展示'
--     -- ,QI_VAL       DECIMAL COMMENT '上季末值'
--     -- ,QI_CMP_VAL_ZS   STRING COMMENT '较季初展示'
--     -- ,QI_CMP_VAL   DECIMAL COMMENT '较季初'
--     -- ,YI_VAL_ZS       STRING COMMENT '上年末值展示'
--     -- ,YI_VAL       DECIMAL COMMENT '上年末值'
--     -- ,YI_CMP_VAL_ZS   STRING COMMENT '较年初展示'
--     -- ,YI_CMP_VAL   DECIMAL COMMENT '较年初'
--     ,CUR_RNK      INT     COMMENT '指标值排名'
--     -- ,YI_CMP_RNK   INT     COMMENT '较年初排名'
--     ,IND_LVL      STRING  COMMENT '指标层级'
--     ,CP_CLS       STRING  COMMENT '对比类型'
--     ,ORG_NUM  INT     COMMENT '机构数'
--     ,flag         STRING  COMMENT 'FLAG_是否主指标数据1为指标值2为子指标'
--     ,score_class  STRING  COMMENT 'SCORE_CLASS权重类型'
--     ,score        DECIMAL COMMENT 'SCORE_指标评分'
-- )
-- COMMENT
-- '合格率机构指标宽表'
-- PARTITIONED BY
-- (
--     DT STRING COMMENT '日期分区'
-- );

-- 无权重
-- DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_SMP PURGE;
-- CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_SMP
-- (
--     DATA_DT       STRING  COMMENT '数据日期'
--     ,CPY_ORG_ID   STRING  COMMENT '法人机构编号'
--     ,CPY_ORG_NM   STRING  COMMENT '法人机构名称'
--     ,BRC_ORG_ID   STRING  COMMENT '分行机构编号'
--     ,BRC_ORG_NM   STRING  COMMENT '分行机构名称'
--     ,SBR_ORG_ID   STRING  COMMENT '支行机构编号'
--     ,SBR_ORG_NM   STRING  COMMENT '支行机构名称'
--     ,TEM_ORG_ID   STRING  COMMENT '团队机构编号'
--     ,TEM_ORG_NM   STRING  COMMENT '团队机构名称'
--     ,ORG_ID       STRING  COMMENT '考核机构代码'
--     ,ORG_NM       STRING  COMMENT '考核机构名称'
--     ,IND_ID       STRING  COMMENT '指标编号'
--     ,IND_NM       STRING  COMMENT '指标名称'
--     ,DATA_CLASS   STRING  COMMENT '模块类别'
--     ,CUR_VAL_ZS   STRING COMMENT '指标值展示'
--     ,CUR_VAL      DECIMAL COMMENT '指标值'
--     -- ,MI_VAL_ZS    STRING COMMENT '上月末值展示'
--     -- ,MI_VAL       DECIMAL COMMENT '上月末值'
--     -- ,MI_CMP_VAL_ZS   STRING COMMENT '较月初展示'
--     -- ,MI_CMP_VAL   DECIMAL COMMENT '较月初'
--     -- ,QI_VAL_ZS       STRING COMMENT '上季末值展示'
--     -- ,QI_VAL       DECIMAL COMMENT '上季末值'
--     -- ,QI_CMP_VAL_ZS   STRING COMMENT '较季初展示'
--     -- ,QI_CMP_VAL   DECIMAL COMMENT '较季初'
--     -- ,YI_VAL_ZS       STRING COMMENT '上年末值展示'
--     -- ,YI_VAL       DECIMAL COMMENT '上年末值'
--     -- ,YI_CMP_VAL_ZS   STRING COMMENT '较年初展示'
--     -- ,YI_CMP_VAL   DECIMAL COMMENT '较年初'
--     ,CUR_RNK      INT     COMMENT '指标值排名'
--     -- ,YI_CMP_RNK   INT     COMMENT '较年初排名'
--     ,IND_LVL      STRING  COMMENT '指标层级'
--     ,CP_CLS       STRING  COMMENT '对比类型'
--     ,ORG_NUM  INT     COMMENT '机构数'
--     ,flag         STRING  COMMENT 'FLAG_是否主指标数据1为指标值2为子指标'
-- )
-- COMMENT
-- '合格率机构指标宽表-无权重'
-- PARTITIONED BY
-- (
--     DT STRING COMMENT '日期分区'
-- );


DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_tmp;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_tmp
(
    DATA_DT       STRING  COMMENT '数据日期'
    ,CPY_ORG_ID   STRING  COMMENT '法人机构编号'
    ,CPY_ORG_NM   STRING  COMMENT '法人机构名称'
    ,BRC_ORG_ID   STRING  COMMENT '分行机构编号'
    ,BRC_ORG_NM   STRING  COMMENT '分行机构名称'
    ,SBR_ORG_ID   STRING  COMMENT '支行机构编号'
    ,SBR_ORG_NM   STRING  COMMENT '支行机构名称'
    ,TEM_ORG_ID   STRING  COMMENT '团队机构编号'
    ,TEM_ORG_NM   STRING  COMMENT '团队机构名称'
    ,ORG_ID       STRING  COMMENT '考核机构代码'
    ,ORG_NM       STRING  COMMENT '考核机构名称'
    ,IND_ID       STRING  COMMENT '指标编号'
    ,IND_NM       STRING  COMMENT '指标名称'
    ,DATA_CLASS   STRING  COMMENT '模块类别'
    ,CUR_VAL      DECIMAL COMMENT '指标值'
    ,CUR_RNK      INT     COMMENT '指标值排名'
    ,IND_LVL      STRING  COMMENT '指标层级'
    ,CP_CLS       STRING  COMMENT '对比类型'
    ,ORG_NUM  INT     COMMENT '机构数'
    ,flag         STRING  COMMENT 'FLAG_是否主指标数据1为指标值2为月趋势差值3为季趋势差值4为年趋势差值'
    ,score_class  STRING  COMMENT 'SCORE_CLASS权重类型'
    ,score        DECIMAL COMMENT 'SCORE_指标评分'
)
COMMENT '合格率机构指标临时表'
;


INSERT overwrite TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_tmp
SELECT  '${bizdate}'
		,t2.cpy_org_id
		,t2.cpy_org_nm
		,t2.brc_org_id
		,t2.brc_org_nm
		,t2.sbr_org_id
		,t2.sbr_org_nm
		,t2.tem_org_id
		,t2.tem_org_nm
		,t1.org_id
		,t2.org_nm
		,t1.IND_ID
        ,t8.IND_NM
        ,t8.DATA_CLASS
		,t1.CUR_VAL
        ,null as CUR_RNK
        ,null as IND_LVL
        ,null as CP_CLS
        ,null as ORG_NUM
        ,null as flag
        ,null as score_class
        ,null as score
FROM LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_01 t1  --指标中间表
left join edw.dim_hr_org_mng_org_tree_dd t2    --考核机构
on   t1.ORG_ID=t2.ORG_ID and t2.dt='${bizdate}' and t2.eff_sts_ind='1'
left join  (
    SELECT distinct DATA_CLASS,IND_ID,IND_NM
    from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_INF_DD_2
    where  pt=max_pt('LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_INF_DD_2')
)t8       --补充指标名称
on   t1.IND_ID=t8.IND_ID
where  t1.dt = '${bizdate}'
and (t2.ORG_ID<>nvl(t2.sbs_org_id,'')) -- 剔除区域合计
and (t2.brc_org_nm regexp '分行$|村镇银行$|^总行营业部$'
    or t2.sbr_org_nm regexp '支行$|营业部$')
    -- or t2.sbs_org_nm='杭州钱塘小微综合支行'
union all
-- --插入手工指标录入
SELECT  '${bizdate}'
		,t2.cpy_org_id
		,t2.cpy_org_nm
		,t2.brc_org_id
		,t2.brc_org_nm
    ,t2.sbr_org_id
    ,t2.sbr_org_nm
    ,t2.tem_org_id
    ,t2.tem_org_nm
		,t2.org_id
		,t2.org_nm
		,t1.IND_ID
    ,t3.IND_NM
    ,t3.DATA_CLASS
		,t1.CUR_VAL
    ,null as CUR_RNK
    ,null as IND_LVL
    ,null as CP_CLS
    ,null as ORG_NUM
    ,null as flag
    ,null as score_class
    ,null as score
FROM   LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_SGLR_2 t1  --手工录入指标
left join edw.dim_hr_org_mng_org_tree_dd t2    --考核机构
on   t1.sbr_org_id=t2.ORG_ID and t2.dt='${bizdate}'
left join  (
    SELECT distinct DATA_CLASS,IND_ID,IND_NM
    from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_INF_DD_2
    where  pt=max_pt('LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_INF_DD_2')
)t3       --补充指标名称
on   t1.IND_ID=t3.IND_ID
where t1.pt<=max_pt('LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_SGLR_2')
and   t1.data_dt='${bizdate}'
-- and (t2.ORG_ID<>nvl(t2.sbs_org_id,'') or t2.ORG_ID='330205200') -- 剔除区域合计
and (t2.ORG_ID<>nvl(t2.sbs_org_id,'')) -- 剔除区域合计
and (t2.brc_org_nm regexp '分行$|村镇银行$|^总行营业部$'
    or t2.sbr_org_nm regexp '支行$|营业部$')
;

-- 无数据机构补0
insert overwrite table LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_tmp
select
    a.DATA_DT,
    a.CPY_ORG_ID,
    a.CPY_ORG_NM,
    a.BRC_ORG_ID,
    a.BRC_ORG_NM,
    a.SBR_ORG_ID,
    a.SBR_ORG_NM,
    a.TEM_ORG_ID,
    a.TEM_ORG_NM,
    a.ORG_ID,
    a.ORG_NM,
    b.IND_ID,
    b.IND_NM,
    b.DATA_CLASS,
    CUR_VAL,
    CUR_RNK,
    IND_LVL,
    CP_CLS,
    ORG_NUM,
    flag,
    score_class,
    score
from (
    select
        distinct    DATA_DT,
                    CPY_ORG_ID,
                    CPY_ORG_NM,
                    BRC_ORG_ID,
                    BRC_ORG_NM,
                    SBR_ORG_ID,
                    SBR_ORG_NM,
                    TEM_ORG_ID,
                    TEM_ORG_NM,
                    ORG_ID,
                    ORG_NM,
                    1 as pk
    from  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_tmp a
) a inner join (
    select
        distinct    IND_ID,
                    IND_NM,
                    DATA_CLASS,
                    1 as pk
    from  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_tmp b
) b on a.pk=b.pk
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_tmp c on a.org_id=c.org_id and b.IND_ID=c.IND_ID
where a.org_id not regexp '^3301091|^3301092|^3301093|^3301094|^3301095|^3301096|^3301097|^3301098|^3301099' -- 剔除已撤销支行数据
;

-- 格式化、排名、插入正式表
insert overwrite table LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2 PARTITION (dt = '${bizdate}')
select
    DATA_DT,
    CPY_ORG_ID,
    CPY_ORG_NM,
    BRC_ORG_ID,
    BRC_ORG_NM,
    SBR_ORG_ID,
    SBR_ORG_NM,
    TEM_ORG_ID,
    TEM_ORG_NM,
    ORG_ID,
    ORG_NM,
    IND_ID,
    IND_NM,
    DATA_CLASS,
    case when IND_ID in ('DWJS2_0001_01','DWJS2_0001_02','DWJS2_0004_01','KHJL_0001','DWJS2_0011_01','DWJS2_0012_01','DWJS2_0013_01','XZTM2_0001_01','XZTM2_0002_01','XZTM2_0005_01','XZTM2_0006_01','XZTM2_0007_01','CLWH2_0001_01','CLWH2_0001_02','CLWH2_0002_01','CLWH2_0003_01','CLWH2_0004_01','CLWH2_0005_01','CLWH2_0009_01','CLWH2_0012_01','CLWH2_0012_02','ZHJY2_0001_01','ZHJY2_0001_02','ZHJY2_0002_01','ZHJY2_0002_02','ZHJY2_0003_01','ZHJY2_0003_02','ZHJY2_0005_01','ZHJY2_0005_02','ZHJY2_0008_01','ZHJY2_0008_02','ZHJY2_0009_01','ZHJY2_0009_02','ZHJY2_0010_01','ZHJY2_0010_02','ZHJY2_0011_01','ZHJY2_0011_02','ZHJY2_0012_01','ZHJY2_0012_02','ZHJY2_0013_01','ZHJY2_0014_01','ZHJY2_0014_02','ZHJY2_0015_01','ZHJY2_0016_01','ZHJY2_0017_01','ZHJY2_0017_02','ZHJY2_0018_01','ZHJY2_0019_01','ZHJY2_0020')  then round(CUR_VAL,0)
         when IND_ID in ('DWJS2_0006_01','KHJL_0002','KHJL_0003','DWJS2_0006','DWJS2_0007_01','DWJS2_0007','DWJS2_0008_01','DWJS2_0008','DWJS2_0009_01','DWJS2_0009','DWJS2_0010_01','DWJS2_0010','DWJS2_0011','DWJS2_0012','DWJS2_0013','DWJS2_0017','DWJS2_0018','DWJS2_0019','DWJS2_0020','DWJS2_0021','XZTM2_0001','XZTM2_0002','XZTM2_0003_01','XZTM2_0003','XZTM2_0004_01','XZTM2_0004','XZTM2_0005','XZTM2_0006','XZTM2_0007','XZTM2_0008_01','XZTM2_0008','CLWH2_0004','CLWH2_0005','CLWH2_0007','CLWH2_0008','CLWH2_0011_01','CLWH2_0011','CLWH2_0014_01','CLWH2_0014_02','CLWH2_0015_01','CLWH2_0015_02','CLWH2_0016','ZHJY2_0004_01','ZHJY2_0004_02','ZHJY2_0006_01','ZHJY2_0006_02','ZHJY2_0007_01','ZHJY2_0007_02','DJGL2_0001_01','DJGL2_0001_02','DJGL2_0002_01','DJGL2_0002_02','DJGL2_0003_01','DJGL2_0003_02','DJGL2_0004_01','DJGL2_0004_02','DJGL2_0006_01','DJGL2_0006_02','DJGL2_0007_01','DJGL2_0007_02','DJGL2_0008_01','DJGL2_0008_02','JGGL2_0001_01','JGGL2_0001_02','JGGL2_0002_01','JGGL2_0003_01','JGGL2_0004_01','JGGL2_0004_02','JGGL2_0005_01','JGGL2_0006_01','JGGL2_0007_01','JGGL2_0007_02','JGGL2_0008_01','JGGL2_0008_02','JGGL2_0009_01','JGGL2_0012_01','JGGL2_0013_01','JGGL2_0013_02','JGGL2_0014_01','JGGL2_0015_01','JGGL2_0016_01','JGGL2_0016_02','JGGL2_0017_01','JGGL2_0018_01','JGGL2_0019_01','JGGL2_0019_02','JGGL2_0020_01','JGGL2_0020_02','JGGL2_0021_01','JGGL2_0022_01','JGGL2_0023_01','JGGL2_0023_02','JGGL2_0024_01','JGGL2_0025_01','JGGL2_0026_01','JGGL2_0027_01','JGGL2_0028_01','JGGL2_0028_02','JGGL2_0029_01','JGGL2_0030_01','JGGL2_0031_01','JGGL2_0032_01','JGGL2_0033_01','JGGL2_0033_02','JGGL2_0034_01','JGGL2_0035_01','JGGL2_0036_01','JGGL2_0037_01','JGGL2_0038_01','JGGL2_0038_02','JGGL2_0039_01','JGGL2_0040_01','JGGL2_0041_01','JGGL2_0042_01','JGGL2_0043_01','JGGL2_0044_01','JGGL2_0044_02','JGGL2_0045_01','JGGL2_0046_01','JGGL2_0047_01','JGGL2_0048_01','JGGL2_0049_01')  then round(CUR_VAL,2)
         when IND_ID in ('DWJS2_0001','DWJS2_0004','DWJS2_0005','CLWH2_0001','CLWH2_0002','CLWH2_0003','CLWH2_0006','CLWH2_0009','CLWH2_0012','CLWH2_0013','CLWH2_0014','CLWH2_0015','CLWH2_0017_01','CLWH2_0017','ZHJY2_0001','ZHJY2_0002_03','ZHJY2_0002','ZHJY2_0003','ZHJY2_0004','ZHJY2_0005_03','ZHJY2_0005','ZHJY2_0006','ZHJY2_0007_03','ZHJY2_0007','ZHJY2_0008','ZHJY2_0009_03','ZHJY2_0009','ZHJY2_0010','ZHJY2_0011_03','ZHJY2_0011','ZHJY2_0012','ZHJY2_0013','ZHJY2_0014','ZHJY2_0015','ZHJY2_0016','ZHJY2_0017_03','ZHJY2_0017','ZHJY2_0018_02','ZHJY2_0018','ZHJY2_0019_02','ZHJY2_0019','ZHJY2_0021','DJGL2_0001','DJGL2_0002','DJGL2_0003','DJGL2_0004','DJGL2_0005','DJGL2_0006_03','DJGL2_0006','DJGL2_0007_03','DJGL2_0007','DJGL2_0008_03','DJGL2_0008','DJGL2_0009_01','DJGL2_0009','DJGL2_0010','JGGL2_0001','JGGL2_0002','JGGL2_0003','JGGL2_0004','JGGL2_0005','JGGL2_0006','JGGL2_0007','JGGL2_0008','JGGL2_0009','JGGL2_0012','JGGL2_0013_03','JGGL2_0013','JGGL2_0014_02','JGGL2_0014','JGGL2_0015_02','JGGL2_0015','JGGL2_0016_03','JGGL2_0016','JGGL2_0017_02','JGGL2_0017','JGGL2_0018_02','JGGL2_0018','JGGL2_0019_03','JGGL2_0019','JGGL2_0020_03','JGGL2_0020','JGGL2_0021_02','JGGL2_0021','JGGL2_0022_02','JGGL2_0022','JGGL2_0023','JGGL2_0024','JGGL2_0025','JGGL2_0026','JGGL2_0027','JGGL2_0028_03','JGGL2_0028','JGGL2_0029_02','JGGL2_0029','JGGL2_0030_02','JGGL2_0030','JGGL2_0031_02','JGGL2_0031','JGGL2_0032_02','JGGL2_0032','JGGL2_0033_03','JGGL2_0033','JGGL2_0034_02','JGGL2_0034','JGGL2_0035_02','JGGL2_0035','JGGL2_0036_02','JGGL2_0036','JGGL2_0037_02','JGGL2_0037','JGGL2_0038','JGGL2_0039','JGGL2_0040','JGGL2_0041','JGGL2_0042','JGGL2_0043','JGGL2_0044_03','JGGL2_0044','JGGL2_0045_02','JGGL2_0045','JGGL2_0046_02','JGGL2_0046','JGGL2_0047_02','JGGL2_0047','JGGL2_0048_02','JGGL2_0048','JGGL2_0049_02','JGGL2_0049')  then concat(round(CUR_VAL,4)*100,'%')
         else CUR_VAL
    end CUR_VAL_ZS,
    case when IND_ID in ('DWJS2_0001_01','DWJS2_0001_02','DWJS2_0004_01','KHJL_0001','DWJS2_0011_01','DWJS2_0012_01','DWJS2_0013_01','XZTM2_0001_01','XZTM2_0002_01','XZTM2_0005_01','XZTM2_0006_01','XZTM2_0007_01','CLWH2_0001_01','CLWH2_0001_02','CLWH2_0002_01','CLWH2_0003_01','CLWH2_0004_01','CLWH2_0005_01','CLWH2_0009_01','CLWH2_0012_01','CLWH2_0012_02','ZHJY2_0001_01','ZHJY2_0001_02','ZHJY2_0002_01','ZHJY2_0002_02','ZHJY2_0003_01','ZHJY2_0003_02','ZHJY2_0005_01','ZHJY2_0005_02','ZHJY2_0008_01','ZHJY2_0008_02','ZHJY2_0009_01','ZHJY2_0009_02','ZHJY2_0010_01','ZHJY2_0010_02','ZHJY2_0011_01','ZHJY2_0011_02','ZHJY2_0012_01','ZHJY2_0012_02','ZHJY2_0013_01','ZHJY2_0014_01','ZHJY2_0014_02','ZHJY2_0015_01','ZHJY2_0016_01','ZHJY2_0017_01','ZHJY2_0017_02','ZHJY2_0018_01','ZHJY2_0019_01','ZHJY2_0020')  then round(CUR_VAL,0)
         when IND_ID in ('DWJS2_0006_01','KHJL_0002','KHJL_0003','DWJS2_0006','DWJS2_0007_01','DWJS2_0007','DWJS2_0008_01','DWJS2_0008','DWJS2_0009_01','DWJS2_0009','DWJS2_0010_01','DWJS2_0010','DWJS2_0011','DWJS2_0012','DWJS2_0013','DWJS2_0017','DWJS2_0018','DWJS2_0019','DWJS2_0020','DWJS2_0021','XZTM2_0001','XZTM2_0002','XZTM2_0003_01','XZTM2_0003','XZTM2_0004_01','XZTM2_0004','XZTM2_0005','XZTM2_0006','XZTM2_0007','XZTM2_0008_01','XZTM2_0008','CLWH2_0004','CLWH2_0005','CLWH2_0007','CLWH2_0008','CLWH2_0011_01','CLWH2_0011','CLWH2_0014_01','CLWH2_0014_02','CLWH2_0015_01','CLWH2_0015_02','CLWH2_0016','ZHJY2_0004_01','ZHJY2_0004_02','ZHJY2_0006_01','ZHJY2_0006_02','ZHJY2_0007_01','ZHJY2_0007_02','DJGL2_0001_01','DJGL2_0001_02','DJGL2_0002_01','DJGL2_0002_02','DJGL2_0003_01','DJGL2_0003_02','DJGL2_0004_01','DJGL2_0004_02','DJGL2_0006_01','DJGL2_0006_02','DJGL2_0007_01','DJGL2_0007_02','DJGL2_0008_01','DJGL2_0008_02','JGGL2_0001_01','JGGL2_0001_02','JGGL2_0002_01','JGGL2_0003_01','JGGL2_0004_01','JGGL2_0004_02','JGGL2_0005_01','JGGL2_0006_01','JGGL2_0007_01','JGGL2_0007_02','JGGL2_0008_01','JGGL2_0008_02','JGGL2_0009_01','JGGL2_0012_01','JGGL2_0013_01','JGGL2_0013_02','JGGL2_0014_01','JGGL2_0015_01','JGGL2_0016_01','JGGL2_0016_02','JGGL2_0017_01','JGGL2_0018_01','JGGL2_0019_01','JGGL2_0019_02','JGGL2_0020_01','JGGL2_0020_02','JGGL2_0021_01','JGGL2_0022_01','JGGL2_0023_01','JGGL2_0023_02','JGGL2_0024_01','JGGL2_0025_01','JGGL2_0026_01','JGGL2_0027_01','JGGL2_0028_01','JGGL2_0028_02','JGGL2_0029_01','JGGL2_0030_01','JGGL2_0031_01','JGGL2_0032_01','JGGL2_0033_01','JGGL2_0033_02','JGGL2_0034_01','JGGL2_0035_01','JGGL2_0036_01','JGGL2_0037_01','JGGL2_0038_01','JGGL2_0038_02','JGGL2_0039_01','JGGL2_0040_01','JGGL2_0041_01','JGGL2_0042_01','JGGL2_0043_01','JGGL2_0044_01','JGGL2_0044_02','JGGL2_0045_01','JGGL2_0046_01','JGGL2_0047_01','JGGL2_0048_01','JGGL2_0049_01')  then round(CUR_VAL,2)
         when IND_ID in ('DWJS2_0001','DWJS2_0004','DWJS2_0005','CLWH2_0001','CLWH2_0002','CLWH2_0003','CLWH2_0006','CLWH2_0009','CLWH2_0012','CLWH2_0013','CLWH2_0014','CLWH2_0015','CLWH2_0017_01','CLWH2_0017','ZHJY2_0001','ZHJY2_0002_03','ZHJY2_0002','ZHJY2_0003','ZHJY2_0004','ZHJY2_0005_03','ZHJY2_0005','ZHJY2_0006','ZHJY2_0007_03','ZHJY2_0007','ZHJY2_0008','ZHJY2_0009_03','ZHJY2_0009','ZHJY2_0010','ZHJY2_0011_03','ZHJY2_0011','ZHJY2_0012','ZHJY2_0013','ZHJY2_0014','ZHJY2_0015','ZHJY2_0016','ZHJY2_0017_03','ZHJY2_0017','ZHJY2_0018_02','ZHJY2_0018','ZHJY2_0019_02','ZHJY2_0019','ZHJY2_0021','DJGL2_0001','DJGL2_0002','DJGL2_0003','DJGL2_0004','DJGL2_0005','DJGL2_0006_03','DJGL2_0006','DJGL2_0007_03','DJGL2_0007','DJGL2_0008_03','DJGL2_0008','DJGL2_0009_01','DJGL2_0009','DJGL2_0010','JGGL2_0001','JGGL2_0002','JGGL2_0003','JGGL2_0004','JGGL2_0005','JGGL2_0006','JGGL2_0007','JGGL2_0008','JGGL2_0009','JGGL2_0012','JGGL2_0013_03','JGGL2_0013','JGGL2_0014_02','JGGL2_0014','JGGL2_0015_02','JGGL2_0015','JGGL2_0016_03','JGGL2_0016','JGGL2_0017_02','JGGL2_0017','JGGL2_0018_02','JGGL2_0018','JGGL2_0019_03','JGGL2_0019','JGGL2_0020_03','JGGL2_0020','JGGL2_0021_02','JGGL2_0021','JGGL2_0022_02','JGGL2_0022','JGGL2_0023','JGGL2_0024','JGGL2_0025','JGGL2_0026','JGGL2_0027','JGGL2_0028_03','JGGL2_0028','JGGL2_0029_02','JGGL2_0029','JGGL2_0030_02','JGGL2_0030','JGGL2_0031_02','JGGL2_0031','JGGL2_0032_02','JGGL2_0032','JGGL2_0033_03','JGGL2_0033','JGGL2_0034_02','JGGL2_0034','JGGL2_0035_02','JGGL2_0035','JGGL2_0036_02','JGGL2_0036','JGGL2_0037_02','JGGL2_0037','JGGL2_0038','JGGL2_0039','JGGL2_0040','JGGL2_0041','JGGL2_0042','JGGL2_0043','JGGL2_0044_03','JGGL2_0044','JGGL2_0045_02','JGGL2_0045','JGGL2_0046_02','JGGL2_0046','JGGL2_0047_02','JGGL2_0047','JGGL2_0048_02','JGGL2_0048','JGGL2_0049_02','JGGL2_0049')  then round(CUR_VAL,4)
         else CUR_VAL
    end CUR_VAL,
    case
    when case
            when nvl(brc_org_id,'')<>'' and nvl(sbr_org_id,'')='' and brc_org_nm regexp '分行$|村镇银行$|^总行营业部$' then cpy_org_id
            when nvl(sbr_org_id,'')<>'' and nvl(tem_org_id,'')='' and sbr_org_nm not regexp '虚拟'              then brc_org_id
            when nvl(tem_org_id,'')<>'' and tem_org_nm not regexp '虚拟'                             then sbr_org_id
            else null
        end is not null
    then rank() over(partition by IND_ID,case
                                    when nvl(brc_org_id,'')<>'' and nvl(sbr_org_id,'')='' and brc_org_nm regexp '分行$|村镇银行$|^总行营业部$' then cpy_org_id
                                    when nvl(sbr_org_id,'')<>'' and nvl(tem_org_id,'')=''  and sbr_org_nm not regexp '虚拟'              then brc_org_id
                                    when nvl(tem_org_id,'')<>'' and tem_org_nm not regexp '虚拟'                             then sbr_org_id
                                    else null
                                end
                                order by
                                if(IND_ID in ('DWJS2_0001_02','DWJS2_0001','ZHJY2_0001_01','ZHJY2_0001','ZHJY2_0002_01','ZHJY2_0002_03','ZHJY2_0002','DJGL2_0002_01','DJGL2_0002','DJGL2_0003_01','DJGL2_0003','DJGL2_0004_01','DJGL2_0004','DJGL2_0007_01','DJGL2_0007_03','DJGL2_0007','DJGL2_0008_01','DJGL2_0008_03','DJGL2_0008','JGGL2_0003_01','JGGL2_0003','JGGL2_0005_01','JGGL2_0005','JGGL2_0015_01','JGGL2_0015_02','JGGL2_0015','JGGL2_0017_01','JGGL2_0017_02','JGGL2_0017'),
                                                0-CUR_VAL,CUR_VAL)         desc
        )
    end as CUR_RNK,
    case
        when nvl(cpy_org_id,'')<>'' and nvl(brc_org_id,'')='' then '法人'
        when nvl(brc_org_id,'')<>'' and nvl(sbr_org_id,'')='' then '分行'
        when nvl(sbr_org_id,'')<>'' and nvl(tem_org_id,'')='' then '支行'
        when nvl(tem_org_id,'')<>''                           then '团队'
    end as IND_LVL,
    '分行内'  as CP_CLS,
    case
    when case
                                   when nvl(brc_org_id,'')<>'' and nvl(sbr_org_id,'')='' and brc_org_nm regexp '分行$|村镇银行$|^总行营业部$' then cpy_org_id
                                    when nvl(sbr_org_id,'')<>'' and nvl(tem_org_id,'')=''  and sbr_org_nm not regexp '虚拟'              then brc_org_id
                                    when nvl(tem_org_id,'')<>'' and tem_org_nm not regexp '虚拟'                             then sbr_org_id
            else null
        end is not null
    then COUNT(DISTINCT ORG_ID) over(partition by IND_ID,case
                                    when nvl(brc_org_id,'')<>'' and nvl(sbr_org_id,'')='' and brc_org_nm regexp '分行$|村镇银行$|^总行营业部$' then cpy_org_id
                                    when nvl(sbr_org_id,'')<>'' and nvl(tem_org_id,'')=''  and sbr_org_nm not regexp '虚拟'              then brc_org_id
                                    when nvl(tem_org_id,'')<>'' and tem_org_nm not regexp '虚拟'                             then sbr_org_id
                                else null
                            end
        )
    end as ORG_NUM
    ,flag
    ,score_class
    ,score
from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_tmp a
union all
select
    DATA_DT,
    CPY_ORG_ID,
    CPY_ORG_NM,
    BRC_ORG_ID,
    BRC_ORG_NM,
    SBR_ORG_ID,
    SBR_ORG_NM,
    TEM_ORG_ID,
    TEM_ORG_NM,
    ORG_ID,
    ORG_NM,
    IND_ID,
    IND_NM,
    DATA_CLASS,
    case when IND_ID in ('DWJS2_0001_01','DWJS2_0001_02','DWJS2_0004_01','KHJL_0001','DWJS2_0011_01','DWJS2_0012_01','DWJS2_0013_01','XZTM2_0001_01','XZTM2_0002_01','XZTM2_0005_01','XZTM2_0006_01','XZTM2_0007_01','CLWH2_0001_01','CLWH2_0001_02','CLWH2_0002_01','CLWH2_0003_01','CLWH2_0004_01','CLWH2_0005_01','CLWH2_0009_01','CLWH2_0012_01','CLWH2_0012_02','ZHJY2_0001_01','ZHJY2_0001_02','ZHJY2_0002_01','ZHJY2_0002_02','ZHJY2_0003_01','ZHJY2_0003_02','ZHJY2_0005_01','ZHJY2_0005_02','ZHJY2_0008_01','ZHJY2_0008_02','ZHJY2_0009_01','ZHJY2_0009_02','ZHJY2_0010_01','ZHJY2_0010_02','ZHJY2_0011_01','ZHJY2_0011_02','ZHJY2_0012_01','ZHJY2_0012_02','ZHJY2_0013_01','ZHJY2_0014_01','ZHJY2_0014_02','ZHJY2_0015_01','ZHJY2_0016_01','ZHJY2_0017_01','ZHJY2_0017_02','ZHJY2_0018_01','ZHJY2_0019_01','ZHJY2_0020')  then round(CUR_VAL,0)
         when IND_ID in ('DWJS2_0006_01','KHJL_0002','KHJL_0003','DWJS2_0006','DWJS2_0007_01','DWJS2_0007','DWJS2_0008_01','DWJS2_0008','DWJS2_0009_01','DWJS2_0009','DWJS2_0010_01','DWJS2_0010','DWJS2_0011','DWJS2_0012','DWJS2_0013','DWJS2_0017','DWJS2_0018','DWJS2_0019','DWJS2_0020','DWJS2_0021','XZTM2_0001','XZTM2_0002','XZTM2_0003_01','XZTM2_0003','XZTM2_0004_01','XZTM2_0004','XZTM2_0005','XZTM2_0006','XZTM2_0007','XZTM2_0008_01','XZTM2_0008','CLWH2_0004','CLWH2_0005','CLWH2_0007','CLWH2_0008','CLWH2_0011_01','CLWH2_0011','CLWH2_0014_01','CLWH2_0014_02','CLWH2_0015_01','CLWH2_0015_02','CLWH2_0016','ZHJY2_0004_01','ZHJY2_0004_02','ZHJY2_0006_01','ZHJY2_0006_02','ZHJY2_0007_01','ZHJY2_0007_02','DJGL2_0001_01','DJGL2_0001_02','DJGL2_0002_01','DJGL2_0002_02','DJGL2_0003_01','DJGL2_0003_02','DJGL2_0004_01','DJGL2_0004_02','DJGL2_0006_01','DJGL2_0006_02','DJGL2_0007_01','DJGL2_0007_02','DJGL2_0008_01','DJGL2_0008_02','JGGL2_0001_01','JGGL2_0001_02','JGGL2_0002_01','JGGL2_0003_01','JGGL2_0004_01','JGGL2_0004_02','JGGL2_0005_01','JGGL2_0006_01','JGGL2_0007_01','JGGL2_0007_02','JGGL2_0008_01','JGGL2_0008_02','JGGL2_0009_01','JGGL2_0012_01','JGGL2_0013_01','JGGL2_0013_02','JGGL2_0014_01','JGGL2_0015_01','JGGL2_0016_01','JGGL2_0016_02','JGGL2_0017_01','JGGL2_0018_01','JGGL2_0019_01','JGGL2_0019_02','JGGL2_0020_01','JGGL2_0020_02','JGGL2_0021_01','JGGL2_0022_01','JGGL2_0023_01','JGGL2_0023_02','JGGL2_0024_01','JGGL2_0025_01','JGGL2_0026_01','JGGL2_0027_01','JGGL2_0028_01','JGGL2_0028_02','JGGL2_0029_01','JGGL2_0030_01','JGGL2_0031_01','JGGL2_0032_01','JGGL2_0033_01','JGGL2_0033_02','JGGL2_0034_01','JGGL2_0035_01','JGGL2_0036_01','JGGL2_0037_01','JGGL2_0038_01','JGGL2_0038_02','JGGL2_0039_01','JGGL2_0040_01','JGGL2_0041_01','JGGL2_0042_01','JGGL2_0043_01','JGGL2_0044_01','JGGL2_0044_02','JGGL2_0045_01','JGGL2_0046_01','JGGL2_0047_01','JGGL2_0048_01','JGGL2_0049_01')  then round(CUR_VAL,2)
         when IND_ID in ('DWJS2_0001','DWJS2_0004','DWJS2_0005','CLWH2_0001','CLWH2_0002','CLWH2_0003','CLWH2_0006','CLWH2_0009','CLWH2_0012','CLWH2_0013','CLWH2_0014','CLWH2_0015','CLWH2_0017_01','CLWH2_0017','ZHJY2_0001','ZHJY2_0002_03','ZHJY2_0002','ZHJY2_0003','ZHJY2_0004','ZHJY2_0005_03','ZHJY2_0005','ZHJY2_0006','ZHJY2_0007_03','ZHJY2_0007','ZHJY2_0008','ZHJY2_0009_03','ZHJY2_0009','ZHJY2_0010','ZHJY2_0011_03','ZHJY2_0011','ZHJY2_0012','ZHJY2_0013','ZHJY2_0014','ZHJY2_0015','ZHJY2_0016','ZHJY2_0017_03','ZHJY2_0017','ZHJY2_0018_02','ZHJY2_0018','ZHJY2_0019_02','ZHJY2_0019','ZHJY2_0021','DJGL2_0001','DJGL2_0002','DJGL2_0003','DJGL2_0004','DJGL2_0005','DJGL2_0006_03','DJGL2_0006','DJGL2_0007_03','DJGL2_0007','DJGL2_0008_03','DJGL2_0008','DJGL2_0009_01','DJGL2_0009','DJGL2_0010','JGGL2_0001','JGGL2_0002','JGGL2_0003','JGGL2_0004','JGGL2_0005','JGGL2_0006','JGGL2_0007','JGGL2_0008','JGGL2_0009','JGGL2_0012','JGGL2_0013_03','JGGL2_0013','JGGL2_0014_02','JGGL2_0014','JGGL2_0015_02','JGGL2_0015','JGGL2_0016_03','JGGL2_0016','JGGL2_0017_02','JGGL2_0017','JGGL2_0018_02','JGGL2_0018','JGGL2_0019_03','JGGL2_0019','JGGL2_0020_03','JGGL2_0020','JGGL2_0021_02','JGGL2_0021','JGGL2_0022_02','JGGL2_0022','JGGL2_0023','JGGL2_0024','JGGL2_0025','JGGL2_0026','JGGL2_0027','JGGL2_0028_03','JGGL2_0028','JGGL2_0029_02','JGGL2_0029','JGGL2_0030_02','JGGL2_0030','JGGL2_0031_02','JGGL2_0031','JGGL2_0032_02','JGGL2_0032','JGGL2_0033_03','JGGL2_0033','JGGL2_0034_02','JGGL2_0034','JGGL2_0035_02','JGGL2_0035','JGGL2_0036_02','JGGL2_0036','JGGL2_0037_02','JGGL2_0037','JGGL2_0038','JGGL2_0039','JGGL2_0040','JGGL2_0041','JGGL2_0042','JGGL2_0043','JGGL2_0044_03','JGGL2_0044','JGGL2_0045_02','JGGL2_0045','JGGL2_0046_02','JGGL2_0046','JGGL2_0047_02','JGGL2_0047','JGGL2_0048_02','JGGL2_0048','JGGL2_0049_02','JGGL2_0049')  then concat(round(CUR_VAL,4)*100,'%')
         else CUR_VAL
    end CUR_VAL_ZS,
    case when IND_ID in ('DWJS2_0001_01','DWJS2_0001_02','DWJS2_0004_01','KHJL_0001','DWJS2_0011_01','DWJS2_0012_01','DWJS2_0013_01','XZTM2_0001_01','XZTM2_0002_01','XZTM2_0005_01','XZTM2_0006_01','XZTM2_0007_01','CLWH2_0001_01','CLWH2_0001_02','CLWH2_0002_01','CLWH2_0003_01','CLWH2_0004_01','CLWH2_0005_01','CLWH2_0009_01','CLWH2_0012_01','CLWH2_0012_02','ZHJY2_0001_01','ZHJY2_0001_02','ZHJY2_0002_01','ZHJY2_0002_02','ZHJY2_0003_01','ZHJY2_0003_02','ZHJY2_0005_01','ZHJY2_0005_02','ZHJY2_0008_01','ZHJY2_0008_02','ZHJY2_0009_01','ZHJY2_0009_02','ZHJY2_0010_01','ZHJY2_0010_02','ZHJY2_0011_01','ZHJY2_0011_02','ZHJY2_0012_01','ZHJY2_0012_02','ZHJY2_0013_01','ZHJY2_0014_01','ZHJY2_0014_02','ZHJY2_0015_01','ZHJY2_0016_01','ZHJY2_0017_01','ZHJY2_0017_02','ZHJY2_0018_01','ZHJY2_0019_01','ZHJY2_0020')  then round(CUR_VAL,0)
         when IND_ID in ('DWJS2_0006_01','KHJL_0002','KHJL_0003','DWJS2_0006','DWJS2_0007_01','DWJS2_0007','DWJS2_0008_01','DWJS2_0008','DWJS2_0009_01','DWJS2_0009','DWJS2_0010_01','DWJS2_0010','DWJS2_0011','DWJS2_0012','DWJS2_0013','DWJS2_0017','DWJS2_0018','DWJS2_0019','DWJS2_0020','DWJS2_0021','XZTM2_0001','XZTM2_0002','XZTM2_0003_01','XZTM2_0003','XZTM2_0004_01','XZTM2_0004','XZTM2_0005','XZTM2_0006','XZTM2_0007','XZTM2_0008_01','XZTM2_0008','CLWH2_0004','CLWH2_0005','CLWH2_0007','CLWH2_0008','CLWH2_0011_01','CLWH2_0011','CLWH2_0014_01','CLWH2_0014_02','CLWH2_0015_01','CLWH2_0015_02','CLWH2_0016','ZHJY2_0004_01','ZHJY2_0004_02','ZHJY2_0006_01','ZHJY2_0006_02','ZHJY2_0007_01','ZHJY2_0007_02','DJGL2_0001_01','DJGL2_0001_02','DJGL2_0002_01','DJGL2_0002_02','DJGL2_0003_01','DJGL2_0003_02','DJGL2_0004_01','DJGL2_0004_02','DJGL2_0006_01','DJGL2_0006_02','DJGL2_0007_01','DJGL2_0007_02','DJGL2_0008_01','DJGL2_0008_02','JGGL2_0001_01','JGGL2_0001_02','JGGL2_0002_01','JGGL2_0003_01','JGGL2_0004_01','JGGL2_0004_02','JGGL2_0005_01','JGGL2_0006_01','JGGL2_0007_01','JGGL2_0007_02','JGGL2_0008_01','JGGL2_0008_02','JGGL2_0009_01','JGGL2_0012_01','JGGL2_0013_01','JGGL2_0013_02','JGGL2_0014_01','JGGL2_0015_01','JGGL2_0016_01','JGGL2_0016_02','JGGL2_0017_01','JGGL2_0018_01','JGGL2_0019_01','JGGL2_0019_02','JGGL2_0020_01','JGGL2_0020_02','JGGL2_0021_01','JGGL2_0022_01','JGGL2_0023_01','JGGL2_0023_02','JGGL2_0024_01','JGGL2_0025_01','JGGL2_0026_01','JGGL2_0027_01','JGGL2_0028_01','JGGL2_0028_02','JGGL2_0029_01','JGGL2_0030_01','JGGL2_0031_01','JGGL2_0032_01','JGGL2_0033_01','JGGL2_0033_02','JGGL2_0034_01','JGGL2_0035_01','JGGL2_0036_01','JGGL2_0037_01','JGGL2_0038_01','JGGL2_0038_02','JGGL2_0039_01','JGGL2_0040_01','JGGL2_0041_01','JGGL2_0042_01','JGGL2_0043_01','JGGL2_0044_01','JGGL2_0044_02','JGGL2_0045_01','JGGL2_0046_01','JGGL2_0047_01','JGGL2_0048_01','JGGL2_0049_01')  then round(CUR_VAL,2)
         when IND_ID in ('DWJS2_0001','DWJS2_0004','DWJS2_0005','CLWH2_0001','CLWH2_0002','CLWH2_0003','CLWH2_0006','CLWH2_0009','CLWH2_0012','CLWH2_0013','CLWH2_0014','CLWH2_0015','CLWH2_0017_01','CLWH2_0017','ZHJY2_0001','ZHJY2_0002_03','ZHJY2_0002','ZHJY2_0003','ZHJY2_0004','ZHJY2_0005_03','ZHJY2_0005','ZHJY2_0006','ZHJY2_0007_03','ZHJY2_0007','ZHJY2_0008','ZHJY2_0009_03','ZHJY2_0009','ZHJY2_0010','ZHJY2_0011_03','ZHJY2_0011','ZHJY2_0012','ZHJY2_0013','ZHJY2_0014','ZHJY2_0015','ZHJY2_0016','ZHJY2_0017_03','ZHJY2_0017','ZHJY2_0018_02','ZHJY2_0018','ZHJY2_0019_02','ZHJY2_0019','ZHJY2_0021','DJGL2_0001','DJGL2_0002','DJGL2_0003','DJGL2_0004','DJGL2_0005','DJGL2_0006_03','DJGL2_0006','DJGL2_0007_03','DJGL2_0007','DJGL2_0008_03','DJGL2_0008','DJGL2_0009_01','DJGL2_0009','DJGL2_0010','JGGL2_0001','JGGL2_0002','JGGL2_0003','JGGL2_0004','JGGL2_0005','JGGL2_0006','JGGL2_0007','JGGL2_0008','JGGL2_0009','JGGL2_0012','JGGL2_0013_03','JGGL2_0013','JGGL2_0014_02','JGGL2_0014','JGGL2_0015_02','JGGL2_0015','JGGL2_0016_03','JGGL2_0016','JGGL2_0017_02','JGGL2_0017','JGGL2_0018_02','JGGL2_0018','JGGL2_0019_03','JGGL2_0019','JGGL2_0020_03','JGGL2_0020','JGGL2_0021_02','JGGL2_0021','JGGL2_0022_02','JGGL2_0022','JGGL2_0023','JGGL2_0024','JGGL2_0025','JGGL2_0026','JGGL2_0027','JGGL2_0028_03','JGGL2_0028','JGGL2_0029_02','JGGL2_0029','JGGL2_0030_02','JGGL2_0030','JGGL2_0031_02','JGGL2_0031','JGGL2_0032_02','JGGL2_0032','JGGL2_0033_03','JGGL2_0033','JGGL2_0034_02','JGGL2_0034','JGGL2_0035_02','JGGL2_0035','JGGL2_0036_02','JGGL2_0036','JGGL2_0037_02','JGGL2_0037','JGGL2_0038','JGGL2_0039','JGGL2_0040','JGGL2_0041','JGGL2_0042','JGGL2_0043','JGGL2_0044_03','JGGL2_0044','JGGL2_0045_02','JGGL2_0045','JGGL2_0046_02','JGGL2_0046','JGGL2_0047_02','JGGL2_0047','JGGL2_0048_02','JGGL2_0048','JGGL2_0049_02','JGGL2_0049')  then round(CUR_VAL,4)
         else CUR_VAL
    end CUR_VAL,
    rank() over(partition by IND_ID
                                order by
                                if(IND_ID in ('DWJS2_0001_02','DWJS2_0001','ZHJY2_0001_01','ZHJY2_0001','ZHJY2_0002_01','ZHJY2_0002_03','ZHJY2_0002','DJGL2_0002_01','DJGL2_0002','DJGL2_0003_01','DJGL2_0003','DJGL2_0004_01','DJGL2_0004','DJGL2_0007_01','DJGL2_0007_03','DJGL2_0007','DJGL2_0008_01','DJGL2_0008_03','DJGL2_0008','JGGL2_0003_01','JGGL2_0003','JGGL2_0005_01','JGGL2_0005','JGGL2_0015_01','JGGL2_0015_02','JGGL2_0015','JGGL2_0017_01','JGGL2_0017_02','JGGL2_0017'),
                                                0-CUR_VAL,CUR_VAL)         desc
        )
     as CUR_RNK,
    case
        when nvl(sbr_org_id,'')<>'' and nvl(tem_org_id,'')='' then '支行'
    end as IND_LVL,
    '母行全行'  as CP_CLS,
    COUNT(DISTINCT ORG_ID) over(partition by IND_ID)  as ORG_NUM
    ,flag
    ,score_class
    ,score
from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_tmp a
where  nvl(sbr_org_id,'')<>'' and nvl(tem_org_id,'')='' and sbr_org_nm not regexp '虚拟'
and  substr(brc_org_id,3,1)<>'6'  --母行
union all
select
    DATA_DT,
    CPY_ORG_ID,
    CPY_ORG_NM,
    BRC_ORG_ID,
    BRC_ORG_NM,
    SBR_ORG_ID,
    SBR_ORG_NM,
    TEM_ORG_ID,
    TEM_ORG_NM,
    ORG_ID,
    ORG_NM,
    IND_ID,
    IND_NM,
    DATA_CLASS,
    case when IND_ID in ('DWJS2_0001_01','DWJS2_0001_02','DWJS2_0004_01','KHJL_0001','DWJS2_0011_01','DWJS2_0012_01','DWJS2_0013_01','XZTM2_0001_01','XZTM2_0002_01','XZTM2_0005_01','XZTM2_0006_01','XZTM2_0007_01','CLWH2_0001_01','CLWH2_0001_02','CLWH2_0002_01','CLWH2_0003_01','CLWH2_0004_01','CLWH2_0005_01','CLWH2_0009_01','CLWH2_0012_01','CLWH2_0012_02','ZHJY2_0001_01','ZHJY2_0001_02','ZHJY2_0002_01','ZHJY2_0002_02','ZHJY2_0003_01','ZHJY2_0003_02','ZHJY2_0005_01','ZHJY2_0005_02','ZHJY2_0008_01','ZHJY2_0008_02','ZHJY2_0009_01','ZHJY2_0009_02','ZHJY2_0010_01','ZHJY2_0010_02','ZHJY2_0011_01','ZHJY2_0011_02','ZHJY2_0012_01','ZHJY2_0012_02','ZHJY2_0013_01','ZHJY2_0014_01','ZHJY2_0014_02','ZHJY2_0015_01','ZHJY2_0016_01','ZHJY2_0017_01','ZHJY2_0017_02','ZHJY2_0018_01','ZHJY2_0019_01','ZHJY2_0020')  then round(CUR_VAL,0)
         when IND_ID in ('DWJS2_0006_01','KHJL_0002','KHJL_0003','DWJS2_0006','DWJS2_0007_01','DWJS2_0007','DWJS2_0008_01','DWJS2_0008','DWJS2_0009_01','DWJS2_0009','DWJS2_0010_01','DWJS2_0010','DWJS2_0011','DWJS2_0012','DWJS2_0013','DWJS2_0017','DWJS2_0018','DWJS2_0019','DWJS2_0020','DWJS2_0021','XZTM2_0001','XZTM2_0002','XZTM2_0003_01','XZTM2_0003','XZTM2_0004_01','XZTM2_0004','XZTM2_0005','XZTM2_0006','XZTM2_0007','XZTM2_0008_01','XZTM2_0008','CLWH2_0004','CLWH2_0005','CLWH2_0007','CLWH2_0008','CLWH2_0011_01','CLWH2_0011','CLWH2_0014_01','CLWH2_0014_02','CLWH2_0015_01','CLWH2_0015_02','CLWH2_0016','ZHJY2_0004_01','ZHJY2_0004_02','ZHJY2_0006_01','ZHJY2_0006_02','ZHJY2_0007_01','ZHJY2_0007_02','DJGL2_0001_01','DJGL2_0001_02','DJGL2_0002_01','DJGL2_0002_02','DJGL2_0003_01','DJGL2_0003_02','DJGL2_0004_01','DJGL2_0004_02','DJGL2_0006_01','DJGL2_0006_02','DJGL2_0007_01','DJGL2_0007_02','DJGL2_0008_01','DJGL2_0008_02','JGGL2_0001_01','JGGL2_0001_02','JGGL2_0002_01','JGGL2_0003_01','JGGL2_0004_01','JGGL2_0004_02','JGGL2_0005_01','JGGL2_0006_01','JGGL2_0007_01','JGGL2_0007_02','JGGL2_0008_01','JGGL2_0008_02','JGGL2_0009_01','JGGL2_0012_01','JGGL2_0013_01','JGGL2_0013_02','JGGL2_0014_01','JGGL2_0015_01','JGGL2_0016_01','JGGL2_0016_02','JGGL2_0017_01','JGGL2_0018_01','JGGL2_0019_01','JGGL2_0019_02','JGGL2_0020_01','JGGL2_0020_02','JGGL2_0021_01','JGGL2_0022_01','JGGL2_0023_01','JGGL2_0023_02','JGGL2_0024_01','JGGL2_0025_01','JGGL2_0026_01','JGGL2_0027_01','JGGL2_0028_01','JGGL2_0028_02','JGGL2_0029_01','JGGL2_0030_01','JGGL2_0031_01','JGGL2_0032_01','JGGL2_0033_01','JGGL2_0033_02','JGGL2_0034_01','JGGL2_0035_01','JGGL2_0036_01','JGGL2_0037_01','JGGL2_0038_01','JGGL2_0038_02','JGGL2_0039_01','JGGL2_0040_01','JGGL2_0041_01','JGGL2_0042_01','JGGL2_0043_01','JGGL2_0044_01','JGGL2_0044_02','JGGL2_0045_01','JGGL2_0046_01','JGGL2_0047_01','JGGL2_0048_01','JGGL2_0049_01')  then round(CUR_VAL,2)
         when IND_ID in ('DWJS2_0001','DWJS2_0004','DWJS2_0005','CLWH2_0001','CLWH2_0002','CLWH2_0003','CLWH2_0006','CLWH2_0009','CLWH2_0012','CLWH2_0013','CLWH2_0014','CLWH2_0015','CLWH2_0017_01','CLWH2_0017','ZHJY2_0001','ZHJY2_0002_03','ZHJY2_0002','ZHJY2_0003','ZHJY2_0004','ZHJY2_0005_03','ZHJY2_0005','ZHJY2_0006','ZHJY2_0007_03','ZHJY2_0007','ZHJY2_0008','ZHJY2_0009_03','ZHJY2_0009','ZHJY2_0010','ZHJY2_0011_03','ZHJY2_0011','ZHJY2_0012','ZHJY2_0013','ZHJY2_0014','ZHJY2_0015','ZHJY2_0016','ZHJY2_0017_03','ZHJY2_0017','ZHJY2_0018_02','ZHJY2_0018','ZHJY2_0019_02','ZHJY2_0019','ZHJY2_0021','DJGL2_0001','DJGL2_0002','DJGL2_0003','DJGL2_0004','DJGL2_0005','DJGL2_0006_03','DJGL2_0006','DJGL2_0007_03','DJGL2_0007','DJGL2_0008_03','DJGL2_0008','DJGL2_0009_01','DJGL2_0009','DJGL2_0010','JGGL2_0001','JGGL2_0002','JGGL2_0003','JGGL2_0004','JGGL2_0005','JGGL2_0006','JGGL2_0007','JGGL2_0008','JGGL2_0009','JGGL2_0012','JGGL2_0013_03','JGGL2_0013','JGGL2_0014_02','JGGL2_0014','JGGL2_0015_02','JGGL2_0015','JGGL2_0016_03','JGGL2_0016','JGGL2_0017_02','JGGL2_0017','JGGL2_0018_02','JGGL2_0018','JGGL2_0019_03','JGGL2_0019','JGGL2_0020_03','JGGL2_0020','JGGL2_0021_02','JGGL2_0021','JGGL2_0022_02','JGGL2_0022','JGGL2_0023','JGGL2_0024','JGGL2_0025','JGGL2_0026','JGGL2_0027','JGGL2_0028_03','JGGL2_0028','JGGL2_0029_02','JGGL2_0029','JGGL2_0030_02','JGGL2_0030','JGGL2_0031_02','JGGL2_0031','JGGL2_0032_02','JGGL2_0032','JGGL2_0033_03','JGGL2_0033','JGGL2_0034_02','JGGL2_0034','JGGL2_0035_02','JGGL2_0035','JGGL2_0036_02','JGGL2_0036','JGGL2_0037_02','JGGL2_0037','JGGL2_0038','JGGL2_0039','JGGL2_0040','JGGL2_0041','JGGL2_0042','JGGL2_0043','JGGL2_0044_03','JGGL2_0044','JGGL2_0045_02','JGGL2_0045','JGGL2_0046_02','JGGL2_0046','JGGL2_0047_02','JGGL2_0047','JGGL2_0048_02','JGGL2_0048','JGGL2_0049_02','JGGL2_0049')  then concat(round(CUR_VAL,4)*100,'%')
         else CUR_VAL
    end CUR_VAL_ZS,
    case when IND_ID in ('DWJS2_0001_01','DWJS2_0001_02','DWJS2_0004_01','KHJL_0001','DWJS2_0011_01','DWJS2_0012_01','DWJS2_0013_01','XZTM2_0001_01','XZTM2_0002_01','XZTM2_0005_01','XZTM2_0006_01','XZTM2_0007_01','CLWH2_0001_01','CLWH2_0001_02','CLWH2_0002_01','CLWH2_0003_01','CLWH2_0004_01','CLWH2_0005_01','CLWH2_0009_01','CLWH2_0012_01','CLWH2_0012_02','ZHJY2_0001_01','ZHJY2_0001_02','ZHJY2_0002_01','ZHJY2_0002_02','ZHJY2_0003_01','ZHJY2_0003_02','ZHJY2_0005_01','ZHJY2_0005_02','ZHJY2_0008_01','ZHJY2_0008_02','ZHJY2_0009_01','ZHJY2_0009_02','ZHJY2_0010_01','ZHJY2_0010_02','ZHJY2_0011_01','ZHJY2_0011_02','ZHJY2_0012_01','ZHJY2_0012_02','ZHJY2_0013_01','ZHJY2_0014_01','ZHJY2_0014_02','ZHJY2_0015_01','ZHJY2_0016_01','ZHJY2_0017_01','ZHJY2_0017_02','ZHJY2_0018_01','ZHJY2_0019_01','ZHJY2_0020')  then round(CUR_VAL,0)
         when IND_ID in ('DWJS2_0006_01','KHJL_0002','KHJL_0003','DWJS2_0006','DWJS2_0007_01','DWJS2_0007','DWJS2_0008_01','DWJS2_0008','DWJS2_0009_01','DWJS2_0009','DWJS2_0010_01','DWJS2_0010','DWJS2_0011','DWJS2_0012','DWJS2_0013','DWJS2_0017','DWJS2_0018','DWJS2_0019','DWJS2_0020','DWJS2_0021','XZTM2_0001','XZTM2_0002','XZTM2_0003_01','XZTM2_0003','XZTM2_0004_01','XZTM2_0004','XZTM2_0005','XZTM2_0006','XZTM2_0007','XZTM2_0008_01','XZTM2_0008','CLWH2_0004','CLWH2_0005','CLWH2_0007','CLWH2_0008','CLWH2_0011_01','CLWH2_0011','CLWH2_0014_01','CLWH2_0014_02','CLWH2_0015_01','CLWH2_0015_02','CLWH2_0016','ZHJY2_0004_01','ZHJY2_0004_02','ZHJY2_0006_01','ZHJY2_0006_02','ZHJY2_0007_01','ZHJY2_0007_02','DJGL2_0001_01','DJGL2_0001_02','DJGL2_0002_01','DJGL2_0002_02','DJGL2_0003_01','DJGL2_0003_02','DJGL2_0004_01','DJGL2_0004_02','DJGL2_0006_01','DJGL2_0006_02','DJGL2_0007_01','DJGL2_0007_02','DJGL2_0008_01','DJGL2_0008_02','JGGL2_0001_01','JGGL2_0001_02','JGGL2_0002_01','JGGL2_0003_01','JGGL2_0004_01','JGGL2_0004_02','JGGL2_0005_01','JGGL2_0006_01','JGGL2_0007_01','JGGL2_0007_02','JGGL2_0008_01','JGGL2_0008_02','JGGL2_0009_01','JGGL2_0012_01','JGGL2_0013_01','JGGL2_0013_02','JGGL2_0014_01','JGGL2_0015_01','JGGL2_0016_01','JGGL2_0016_02','JGGL2_0017_01','JGGL2_0018_01','JGGL2_0019_01','JGGL2_0019_02','JGGL2_0020_01','JGGL2_0020_02','JGGL2_0021_01','JGGL2_0022_01','JGGL2_0023_01','JGGL2_0023_02','JGGL2_0024_01','JGGL2_0025_01','JGGL2_0026_01','JGGL2_0027_01','JGGL2_0028_01','JGGL2_0028_02','JGGL2_0029_01','JGGL2_0030_01','JGGL2_0031_01','JGGL2_0032_01','JGGL2_0033_01','JGGL2_0033_02','JGGL2_0034_01','JGGL2_0035_01','JGGL2_0036_01','JGGL2_0037_01','JGGL2_0038_01','JGGL2_0038_02','JGGL2_0039_01','JGGL2_0040_01','JGGL2_0041_01','JGGL2_0042_01','JGGL2_0043_01','JGGL2_0044_01','JGGL2_0044_02','JGGL2_0045_01','JGGL2_0046_01','JGGL2_0047_01','JGGL2_0048_01','JGGL2_0049_01')  then round(CUR_VAL,2)
         when IND_ID in ('DWJS2_0001','DWJS2_0004','DWJS2_0005','CLWH2_0001','CLWH2_0002','CLWH2_0003','CLWH2_0006','CLWH2_0009','CLWH2_0012','CLWH2_0013','CLWH2_0014','CLWH2_0015','CLWH2_0017_01','CLWH2_0017','ZHJY2_0001','ZHJY2_0002_03','ZHJY2_0002','ZHJY2_0003','ZHJY2_0004','ZHJY2_0005_03','ZHJY2_0005','ZHJY2_0006','ZHJY2_0007_03','ZHJY2_0007','ZHJY2_0008','ZHJY2_0009_03','ZHJY2_0009','ZHJY2_0010','ZHJY2_0011_03','ZHJY2_0011','ZHJY2_0012','ZHJY2_0013','ZHJY2_0014','ZHJY2_0015','ZHJY2_0016','ZHJY2_0017_03','ZHJY2_0017','ZHJY2_0018_02','ZHJY2_0018','ZHJY2_0019_02','ZHJY2_0019','ZHJY2_0021','DJGL2_0001','DJGL2_0002','DJGL2_0003','DJGL2_0004','DJGL2_0005','DJGL2_0006_03','DJGL2_0006','DJGL2_0007_03','DJGL2_0007','DJGL2_0008_03','DJGL2_0008','DJGL2_0009_01','DJGL2_0009','DJGL2_0010','JGGL2_0001','JGGL2_0002','JGGL2_0003','JGGL2_0004','JGGL2_0005','JGGL2_0006','JGGL2_0007','JGGL2_0008','JGGL2_0009','JGGL2_0012','JGGL2_0013_03','JGGL2_0013','JGGL2_0014_02','JGGL2_0014','JGGL2_0015_02','JGGL2_0015','JGGL2_0016_03','JGGL2_0016','JGGL2_0017_02','JGGL2_0017','JGGL2_0018_02','JGGL2_0018','JGGL2_0019_03','JGGL2_0019','JGGL2_0020_03','JGGL2_0020','JGGL2_0021_02','JGGL2_0021','JGGL2_0022_02','JGGL2_0022','JGGL2_0023','JGGL2_0024','JGGL2_0025','JGGL2_0026','JGGL2_0027','JGGL2_0028_03','JGGL2_0028','JGGL2_0029_02','JGGL2_0029','JGGL2_0030_02','JGGL2_0030','JGGL2_0031_02','JGGL2_0031','JGGL2_0032_02','JGGL2_0032','JGGL2_0033_03','JGGL2_0033','JGGL2_0034_02','JGGL2_0034','JGGL2_0035_02','JGGL2_0035','JGGL2_0036_02','JGGL2_0036','JGGL2_0037_02','JGGL2_0037','JGGL2_0038','JGGL2_0039','JGGL2_0040','JGGL2_0041','JGGL2_0042','JGGL2_0043','JGGL2_0044_03','JGGL2_0044','JGGL2_0045_02','JGGL2_0045','JGGL2_0046_02','JGGL2_0046','JGGL2_0047_02','JGGL2_0047','JGGL2_0048_02','JGGL2_0048','JGGL2_0049_02','JGGL2_0049')  then round(CUR_VAL,4)
         else CUR_VAL
    end CUR_VAL,
    rank() over(partition by IND_ID
                                order by
                                if(IND_ID in ('DWJS2_0001_02','DWJS2_0001','ZHJY2_0001_01','ZHJY2_0001','ZHJY2_0002_01','ZHJY2_0002_03','ZHJY2_0002','DJGL2_0002_01','DJGL2_0002','DJGL2_0003_01','DJGL2_0003','DJGL2_0004_01','DJGL2_0004','DJGL2_0007_01','DJGL2_0007_03','DJGL2_0007','DJGL2_0008_01','DJGL2_0008_03','DJGL2_0008','JGGL2_0003_01','JGGL2_0003','JGGL2_0005_01','JGGL2_0005','JGGL2_0015_01','JGGL2_0015_02','JGGL2_0015','JGGL2_0017_01','JGGL2_0017_02','JGGL2_0017'),
                                                0-CUR_VAL,CUR_VAL)         desc
        )
     as CUR_RNK,
    case
        when nvl(sbr_org_id,'')<>'' and nvl(tem_org_id,'')='' then '支行'
    end as IND_LVL,
    '村行全行'  as CP_CLS,
    COUNT(DISTINCT ORG_ID) over(partition by IND_ID)  as ORG_NUM
    ,flag
    ,score_class
    ,score
from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_tmp a
where  nvl(sbr_org_id,'')<>'' and nvl(tem_org_id,'')='' and sbr_org_nm not regexp '虚拟'
and  substr(brc_org_id,3,1)='6'  --村行
;



-- 插入无权重表
INSERT OVERWRITE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_SMP PARTITION (dt = '${bizdate}')
SELECT  DATA_DT
        ,CPY_ORG_ID
        ,CPY_ORG_NM
        ,BRC_ORG_ID
        ,BRC_ORG_NM
        ,SBR_ORG_ID
        ,SBR_ORG_NM
        ,TEM_ORG_ID
        ,TEM_ORG_NM
        ,ORG_ID
        ,ORG_NM
        ,IND_ID
        ,IND_NM
        ,DATA_CLASS
        ,CUR_VAL_ZS
        ,CUR_VAL
        ,CUR_RNK
        ,IND_LVL
        ,CP_CLS
        ,ORG_NUM
        ,if(LENGTH(IND_ID)=10,'主指标','子指标') as flag
FROM    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2
WHERE   dt = '${bizdate}';



-- 关联指标权重
INSERT OVERWRITE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2 PARTITION (dt = '${bizdate}')
SELECT  a.DATA_DT
        ,a.CPY_ORG_ID
        ,a.CPY_ORG_NM
        ,a.BRC_ORG_ID
        ,a.BRC_ORG_NM
        ,a.SBR_ORG_ID
        ,a.SBR_ORG_NM
        ,a.TEM_ORG_ID
        ,a.TEM_ORG_NM
        ,a.ORG_ID
        ,a.ORG_NM
        ,a.IND_ID
        ,a.IND_NM
        ,a.DATA_CLASS
        ,a.CUR_VAL_ZS
        ,a.CUR_VAL
        ,a.CUR_RNK
        ,a.IND_LVL
        ,a.CP_CLS
        ,a.ORG_NUM
        ,if(LENGTH(IND_ID)=10,'主指标','子指标') as flag
        ,b.score_class_1
        ,b.score_1
FROM    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2 a
LEFT JOIN    (
                 SELECT  IND_ID       AS IND_ID_1
                         ,if(score_class='1','雷达图-静态','雷达图-动静态') AS score_class_1
                         ,score       AS score_1
                 FROM    LAB_BIGDATA_DEV.hgl_org_tag_ind_weight_2
                 WHERE   pt = max_pt('LAB_BIGDATA_DEV.hgl_org_tag_ind_weight_2')
             ) b
ON      a.IND_ID = b.IND_ID_1
WHERE   dt = '${bizdate}';


--*************************************机构模块************************************
-- DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_JBXX;
-- CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_JBXX
-- (
--     DATA_DT       STRING  COMMENT '数据日期'
--     ,CPY_ORG_ID   STRING  COMMENT '法人机构编号'
--     ,CPY_ORG_NM   STRING  COMMENT '法人机构名称'
--     ,BRC_ORG_ID   STRING  COMMENT '分行机构编号'
--     ,BRC_ORG_NM   STRING  COMMENT '分行机构名称'
--     ,SBR_ORG_ID   STRING  COMMENT '支行机构编号'
--     ,SBR_ORG_NM   STRING  COMMENT '支行机构名称'
--     ,TEM_ORG_ID   STRING  COMMENT '团队机构编号'
--     ,TEM_ORG_NM   STRING  COMMENT '团队机构名称'
--     ,ORG_ID       STRING  COMMENT '考核机构代码'
--     ,ORG_NM       STRING  COMMENT '考核机构名称'
--     ,id_ope_y     STRING  COMMENT '开业年数'
--     ,dep_loan_r     STRING  COMMENT '存贷比'
--     ,sts          STRING  COMMENT '本月状态'
--     ,sts_com_last_mon STRING  COMMENT '上月状态'
--     ,sts_com_year_bgn STRING  COMMENT '年初状态'
--     ,IND_LVL      STRING  COMMENT '指标层级'
--     ,IND_ID       STRING  COMMENT '指标编号'
--     ,IND_NM       STRING  COMMENT '指标名称'
--     ,CUR_VAL      DECIMAL COMMENT '指标值'
-- )
-- COMMENT '合格率机构基本信息'
-- PARTITIONED BY
-- (
--     DT STRING COMMENT '日期分区'
-- );

--机构基本信息
insert overwrite table LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_JBXX PARTITION (dt = '${data_dt}')
SELECT  '${data_dt}'
        ,t1.CPY_ORG_ID
        ,t1.CPY_ORG_NM
        ,t1.BRC_ORG_ID
        ,t1.BRC_ORG_NM
        ,t1.SBR_ORG_ID
        ,t1.SBR_ORG_NM
        ,t1.TEM_ORG_ID
        ,t1.TEM_ORG_NM
        ,t1.ORG_ID
        ,t1.ORG_NM
        ,round(t2.id_ope_mon/12,1)
        ,t4.dep_loan_r
        ,t3.sts
        ,t3.sts_com_last_mon
        ,t3.sts_com_year_bgn
        ,t1.IND_LVL
        ,t1.IND_ID
        ,t1.IND_NM
        ,t1.CUR_VAL
from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_SMP t1
LEFT JOIN app_rpt.FCT_SUB_BRN_ORG_ELG_RAT t2
on t1.ORG_ID =t2.org_cd and t2.dt=concat(substr(t1.dt,1,4),substr(t1.dt,5,2))
LEFT JOIN app_rpt.FCT_BRN_ORG_ELG_RAT_SITU_SMY t3
on t1.ORG_ID =t3.org_id and t3.dt=concat(substr(t1.dt,1,4),substr(t1.dt,5,2))
LEFT JOIN(
    SELECT a.ORG_ID
           ,a.ORG_NM
           ,a.IND_LVL
           ,concat(round(a.CUR_VAL/if(b.CUR_VAL=0,null,b.CUR_VAL),4)*100,'%') as dep_loan_r  --存贷比
    from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_SMP a
    left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_2_SMP b
    on a.ORG_ID =b.ORG_ID and a.IND_LVL=b.IND_LVL and  b.cp_cls='分行内' and b.IND_ID='DJGL2_0011' and a.dt=b.dt  --贷款月日均
    where a.dt='${data_dt}'
    and a.IND_ID ='DJGL2_0002_02' --存款月日均
    and nvl(a.sbr_org_id,'')<>'' and nvl(a.tem_org_id,'')='' and a.sbr_org_nm not regexp '虚拟'
    and  a.cp_cls='分行内'
)t4  on t1.ORG_ID=t4.ORG_ID and t1.IND_LVL=t4.IND_LVL
where t1.dt='${data_dt}'
and t1.IND_ID in ('DJGL2_0002_02','DJGL2_0011','DWJS2_0002')
and nvl(t1.sbr_org_id,'')<>'' and nvl(t1.tem_org_id,'')='' and t1.sbr_org_nm not regexp '虚拟'
and  t1.cp_cls='分行内'
;

-- SELECT DISTINCT ind_id FROM HGL_ORG_TAG_IND_DD_2 WHERE dt='20240731' and data_class='存量维护'


**备份2.0_to立英_T4合格率月度数据需求线下出数.sql
-- ODPS SQL
-- **********************************************************************
-- 功能描述:
-- **
-- 创建者: 卫少洁
-- 创建日期: 2024-02-28 10:43:03
-- **
-- 修改日志:
-- 修改日期          修改人          修改内容
-- **
-- **********************************************************************

--每月改一下dt时间就好了

--每月出数按规则剔除部分指标

----支行
DROP TABLE if EXISTS tmp_wsj_nyq_hgl2;
CREATE TABLE IF NOT EXISTS tmp_wsj_nyq_hgl2 as
SELECT *
from  HGL_ORG_TAG_IND_DD_2_SMP   --无权重的指标表
where dt=${data_dt}
and  IND_LVL='支行'
and  cpy_org_nm not like '%泰隆村镇银行%'   --母行
and  CUR_RNK  is not null
;
--分行
DROP TABLE if EXISTS tmp_wsj_nyq_hgl2_hz;
CREATE TABLE IF NOT EXISTS tmp_wsj_nyq_hgl2_hz as
SELECT *
from  HGL_ORG_TAG_IND_DD_2_SMP   --无权重的指标表
where dt=${data_dt}
and  IND_LVL='分行'
and  cpy_org_nm not like '%泰隆村镇银行%'   --母行
and  CUR_RNK  is not null
;




--每月出数按规则剔除部分指标-村行
--支行层级
DROP TABLE if EXISTS tmp_wsj_lh_hgl2;
CREATE TABLE IF NOT EXISTS tmp_wsj_lh_hgl2 as
SELECT  *
from  HGL_ORG_TAG_IND_DD_2_SMP
where dt=${data_dt}
and  IND_LVL='支行'
and  cpy_org_nm like '%泰隆村镇银行%'
and  (CUR_RNK  is not null or sbr_org_id='356101000')
;
--分行层级
DROP TABLE if EXISTS tmp_wsj_lh_hgl2_hz;
CREATE TABLE IF NOT EXISTS tmp_wsj_lh_hgl2_hz as
SELECT  *
from  HGL_ORG_TAG_IND_DD_2_SMP
where dt=${data_dt}
and  IND_LVL='分行'
and  cpy_org_nm like '%泰隆村镇银行%'
and  (CUR_RNK  is not null or sbr_org_id='356101000')
;




-- 回溯提取村行202310数据
-- DROP TABLE if EXISTS tmp_wsj_lh_hgl2_20231031;
-- CREATE TABLE IF NOT EXISTS tmp_wsj_lh_hgl2_20231031 as
-- SELECT *
-- from  HGL_ORG_TAG_IND_DD_2_SMP
-- where dt='20231031'
-- and  IND_LVL='支行'
-- and  cpy_org_nm like '%泰隆村镇银行%'
-- and  (CUR_RNK  is not null or sbr_org_id='356101000')
-- ;
-- 回溯提取村行202311数据
-- DROP TABLE if EXISTS tmp_wsj_lh_hgl2_20231130;
-- CREATE TABLE IF NOT EXISTS tmp_wsj_lh_hgl2_20231130 as
-- SELECT *
-- from  HGL_ORG_TAG_IND_DD_2_SMP
-- where dt='20231130'
-- and  IND_LVL='支行'
-- and  cpy_org_nm like '%泰隆村镇银行%'
-- and  (CUR_RNK  is not null or sbr_org_id='356101000')
-- ;

-- --单独取一下钱塘小微专营支行
-- DROP TABLE if EXISTS tmp_wsj_nyq_hgl2_qtxw;
-- CREATE TABLE IF NOT EXISTS tmp_wsj_nyq_hgl2_qtxw as
-- SELECT *
-- from  HGL_ORG_TAG_IND_DD_2_SMP
-- where dt='20240131'
-- and  IND_LVL='支行'
-- and  cpy_org_nm not like '%泰隆村镇银行%'
-- and  substr(ORG_ID,1,7) ='3302052'
-- and  CUR_RNK  is not null
-- and  cp_cls='分行内'
-- ;
**备份3.0_to_立英_T0HGL_ORG_TAG_IND_DD_3_01.sql
-- ODPS SQL
-- **********************************************************************
-- 功能描述:
-- **
-- 创建者: 卫少洁
-- 创建日期: 2025-01-20 10:15:47
-- **
-- 修改日志:
-- 修改日期          修改人          修改内容
-- **
-- **********************************************************************




-- 手工指标表：lab_bigdata_dev.qbi_file_wsj_hgl3_HKGL_0001_02

-- lab_bigdata_dev指标结果表HGL_ORG_TAG_IND_DD_3_01；第一次建表时跑，后面只需每次插入分区即可
-- DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_01;
-- CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_01
-- (
--     ORG_ID   STRING --考核机构
--     ,IND_ID  STRING --指标代码
--     ,CUR_VAL DECIMAL --指标值
-- )
-- COMMENT
-- '合格率3.0指标宽表-加工中间表'
-- PARTITIONED BY
-- (
--     DT STRING COMMENT '日期分区'
-- );


ALTER TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_01 DROP IF EXISTS PARTITION (dt = '${data_dt}' );

-- lab_sjxq指标结果表 HGL_ORG_TAG_IND_DD_3_01_sjxq ；第一次建表时跑，后面只需每次插入分区即可
-- DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_01_sjxq;
-- CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_01_sjxq
-- (
--     ORG_ID   STRING --考核机构
--     ,IND_ID  STRING --指标代码
--     ,CUR_VAL DECIMAL --指标值
-- )
-- COMMENT
-- '合格率3.0指标宽表-加工中间表2'
-- PARTITIONED BY
-- (
--     DT STRING COMMENT '日期分区'
-- );


-- --插入堡垒机指标数据
-- INSERT INTO LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_01 PARTITION  (dt = '${data_dt}' )
-- select org_id
-- ,ind_id
-- ,cur_val
-- from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_01_sjxq
-- where dt='${data_dt}'
-- and  org_id is not null and org_id <>'' and org_id <>'nan'
-- ;




--获客管理；有效性管理；价值管理；增量风险；全量风险；队伍建设能力；客户经理能力；服务经理能力
--获客管理
-- 有效户覆盖率	HKGL_0001
-- 全量客户占比	HKGL_0002
-- 现有客户转化率	HKGL_0003
-- 有效户数转化率	HKGL_0004
-- 当年新增金融业务触达率	HKGL_0005
-- 当年销户流失率	HKGL_0006
-- 年初非有效转有效率	HKGL_0007
-- 年初有效转非有效率	HKGL_0008
-- 负价值客户占比	HKGL_0009
-- 优质客户占比	HKGL_0010


-- 全量客户数

drop table if exists LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 purge;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 AS
SELECT
        cst_2.sbr_org_id   as org_id
        ,cst_2.sbr_org_nm  as org_nm
        ,count(DISTINCT cst_1.cst_id)              AS 全量客户数
        ,sum(CASE
               WHEN nvl(cst_1.forml_cst_ind, 0) = '1' THEN 1
               ELSE 0
             END)                                  AS 正式客户数
        ,sum(CASE
               WHEN nvl(cst_1.forml_cst_ind, 0) = '1' AND nvl(cst_3.forml_cst_ind, '0') <> '1' THEN 1
               ELSE 0
             END)                                  AS 上年末非正式当前正式客户数_新增
        ,sum(CASE
               WHEN nvl(cst_1.forml_cst_ind, '0') <> '1' AND nvl(cst_3.forml_cst_ind, 0) = '1' THEN 1
               ELSE 0
             END)                                  AS 上年末正式当前非正式客户数_流失
        ,sum(CASE
               WHEN nvl(cst_1.vld_cst_ind, 0) = '1' THEN 1
               ELSE 0
             END)                                  AS 有效户户数
        ,sum(CASE
               WHEN nvl(cst_3.forml_cst_ind, 0) = '1' THEN 1
               ELSE 0
             END)                                  AS 上年末正式客户数
        ,sum(CASE
               WHEN nvl(cst_3.vld_cst_ind, 0) = '1' THEN 1
               ELSE 0
             END)                                  AS 上年末有效户户数
        ,sum(CASE
               WHEN nvl(cst_1.vld_cst_ind, 0) = '1' AND nvl(cst_3.vld_cst_ind, '0') <> '1' THEN 1
               ELSE 0
             END)                                  AS 上年末非有效当前有效客户数_新增
        ,sum(CASE
               WHEN nvl(cst_1.vld_cst_ind, '0') <> '1' AND nvl(cst_3.vld_cst_ind, 0) = '1' THEN 1
               ELSE 0
             END)                                  AS 上年末有效当前非有效客户数_流失
        ,sum(cst_1.dep_mon_avg_bal)                AS 存款月日均
        ,sum(cst_1.ln_mon_avg_bal)                 AS 贷款月日均
        ,sum(CASE
               WHEN nvl(cst_1.vld_cst_ind, 0) = '1' THEN cst_1.dep_mon_avg_bal
               ELSE 0
             END)                                  AS 有效户存款月日均
        ,sum(CASE
               WHEN nvl(cst_1.vld_cst_ind, 0) = '1' THEN cst_1.ln_mon_avg_bal
               ELSE 0
             END)                                  AS 有效户贷款月日均
        ,sum(CASE
               WHEN nvl(cst_1.vld_dep_cst_ind, 0) = '1' THEN cst_1.dep_mon_avg_bal
               ELSE 0
             END)                                  AS 存款有效户存款月日均
        ,sum(CASE
               WHEN nvl(cst_1.vld_ln_cst_ind, 0) = '1' THEN cst_1.ln_mon_avg_bal
               ELSE 0
             END)                                  AS 贷款有效户贷款月日均
        ,sum(CASE
               WHEN nvl(cst_1.vld_dep_cst_ind, 0) = '1' THEN 1
               ELSE 0
             END)                                  AS 有效存款户数
        ,sum(CASE
               WHEN nvl(cst_1.vld_dep_cst_ind, 0) = '1' AND nvl(cst_3.vld_dep_cst_ind, '0') = '1' THEN cst_1.dep_mon_avg_bal
               ELSE 0
             END)                                  AS 存量有效存款户_存款月日均
        ,sum(CASE
               WHEN nvl(cst_1.vld_dep_cst_ind, 0) = '1' AND nvl(cst_3.vld_dep_cst_ind, '0') = '1' THEN 1
               ELSE 0
             END)                                  AS 存量有效存款户数
        ,sum(CASE
               WHEN nvl(cst_1.vld_dep_cst_ind, 0) = '1' AND nvl(cst_3.vld_dep_cst_ind, '0') <> '1' THEN cst_1.dep_mon_avg_bal
               ELSE 0
             END)                                  AS 新增有效存款户_存款月日均
        ,sum(CASE
               WHEN nvl(cst_1.vld_dep_cst_ind, 0) = '1' AND nvl(cst_3.vld_dep_cst_ind, '0') <> '1' THEN 1
               ELSE 0
             END)                                  AS 新增有效存款户
        ,sum(CASE
               WHEN nvl(cst_1.vld_ln_cst_ind, '') = '1' THEN 1
               ELSE 0
             END)                                  AS 有效贷款户
        ,sum(CASE
               WHEN nvl(cst_4.业务标签, '') = '流失挽回' THEN cst_1.ln_mon_avg_bal
               ELSE 0
             END)                                  AS 挽回有效贷款户_贷款月日均
        ,sum(CASE
               WHEN nvl(cst_4.业务标签, '') = '流失挽回' THEN 1
               ELSE 0
             END)                                  AS 挽回有效贷款户
        ,sum(CASE
               WHEN nvl(cst_1.vld_ln_cst_ind, '') = '1' THEN cst_1.ln_mon_avg_bal
               ELSE 0
             END) - sum(CASE
                          WHEN nvl(cst_4.业务标签, '') = '流失挽回' THEN cst_1.ln_mon_avg_bal
                          ELSE 0
                        END) - sum(CASE
                                     WHEN nvl(cst_4.业务标签, '') = '新增' THEN cst_1.ln_mon_avg_bal
                                     ELSE 0
                                   END) 存量有效贷款户_贷款月日均
        ,sum(CASE
               WHEN nvl(cst_1.vld_ln_cst_ind, '') = '1' THEN 1
               ELSE 0
             END) - sum(CASE
                          WHEN nvl(cst_4.业务标签, '') = '流失挽回' THEN 1
                          ELSE 0
                        END) - sum(CASE
                                     WHEN nvl(cst_4.业务标签, '') = '新增' THEN 1
                                     ELSE 0
                                   END) 存量有效贷款户
        ,sum(CASE
               WHEN nvl(cst_4.业务标签, '') = '新增' THEN cst_1.ln_mon_avg_bal
               ELSE 0
             END)                                  AS 新增有效贷款户_贷款月日均
        ,sum(CASE
               WHEN nvl(cst_4.业务标签, '') = '新增' THEN 1
               ELSE 0
             END)                                  AS 新增有效贷款户
        ,sum(CASE
               WHEN nvl(cst_1.vld_cst_ind, 0) = '1' AND nvl(cst_3.vld_cst_ind, 0) <> '1' THEN 1
               ELSE 0
             END)                                  AS 新增有效户_上年末无效当前时点有效
        ,sum(CASE
               WHEN nvl(cst_1.vld_cst_ind, 0) <> '1' AND nvl(cst_3.vld_cst_ind, 0) = '1' THEN 1
               ELSE 0
             END)                                  AS 流失有效户_上年末有效当前时点无效
        ,sum(CASE
               WHEN t2.l12m_cst_val - nvl(t6.rsk_cost_LOAN, 0) - nvl(t7.rsk_cost_card, 0) < - 500 THEN 1
               ELSE 0
             END)                                  AS 负价值客户数_近12个月eva
        ,sum(CASE
               WHEN nvl(cst_1.is_dft_cst, '0') = '1' THEN 1
               ELSE 0
             END)                                  AS 违约价值客户数_当年 --后续替换为近一年
FROM    app_ado.adm_subl_cst_bus_inf_dd cst_1 --客户业务信息汇总表
LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd cst_2 --考核机构数
ON      cst_1.prm_org_id = cst_2.org_id
and     cst_2.eff_sts_ind='1'
AND     cst_2.dt ='${data_dt}'
LEFT JOIN    app_ado.adm_subl_cst_bus_inf_dd cst_3 --判断客户上年末状态
ON      cst_1.cst_id = cst_3.cst_id
AND     cst_3.dt = concat(YEAR(DATEADD(TO_DATE('${data_dt}', 'yyyymmdd'), - 1, 'yyyy')), '1231')
LEFT JOIN    (
                 SELECT  T1.CUST_ID
                         ,CASE
                            WHEN nvl(T1.avg_bal, 0) = 0 AND nvl(T2.avg_bal, 0) = 0                                                                                                  THEN '无业务'
                            WHEN nvl(T1.avg_bal, 0) > 0 AND nvl(T2.avg_bal, 0) = 0 AND t3.min_hpn_dt > concat(YEAR(DATEADD(TO_DATE('${data_dt}', 'yyyymmdd'), - 1, 'yyyy')), '1231')  THEN '新增'
                            WHEN nvl(T1.avg_bal, 0) > 0 AND nvl(T2.avg_bal, 0) = 0 AND t3.min_hpn_dt <= concat(YEAR(DATEADD(TO_DATE('${data_dt}', 'yyyymmdd'), - 1, 'yyyy')), '1231') THEN '流失挽回'
                            WHEN nvl(T1.avg_bal, 0) = 0 AND nvl(T2.avg_bal, 0) > 0                                                                                                  THEN '流失'
                            WHEN nvl(T1.avg_bal, 0) > 0 AND nvl(T2.avg_bal, 0) > 0 AND nvl(T1.avg_bal, 0) > nvl(T2.avg_bal, 0)                                                      THEN '增额'
                            WHEN nvl(T1.avg_bal, 0) > 0 AND nvl(T2.avg_bal, 0) > 0 AND nvl(T1.avg_bal, 0) < nvl(T2.avg_bal, 0)                                                      THEN '减额'
                            WHEN nvl(T1.avg_bal, 0) > 0 AND nvl(T2.avg_bal, 0) > 0 AND nvl(T1.avg_bal, 0) = nvl(T2.avg_bal, 0)                                                      THEN '原额'
                            ELSE ''
                          END AS 业务标签
                         ,t3.min_hpn_dt --首次授信日期
                 FROM    (
                             SELECT  dcst_1.cust_id
                                     ,sum(dcst_1.avg_bal) AS avg_bal
                             FROM    app_iftp.adm_papp_ftp_eva_acct_summ_rst_inf dcst_1
                             WHERE   dcst_1.dt = '${data_dt}'
                             AND     freq_dt = 'Y'
                             AND     substr(dcst_1.prod_cd, 1, 6) IN ( '810101' , '810105' , '810108' , '810109' , '810110' )
                             GROUP BY dcst_1.cust_id
                         ) t1
                 LEFT JOIN    (
                                  SELECT  dcst_1.cust_id
                                          ,sum(dcst_1.avg_bal) AS avg_bal
                                  FROM    app_iftp.adm_papp_ftp_eva_acct_summ_rst_inf dcst_1
                                  WHERE   dcst_1.dt = concat(YEAR(DATEADD(TO_DATE('${data_dt}', 'yyyymmdd'), - 1, 'yyyy')), '1231')
                                  AND     freq_dt = 'Y'
                                  AND     substr(dcst_1.prod_cd, 1, 6) IN ( '810101' , '810105' , '810108' , '810109' , '810110' )
                                  GROUP BY dcst_1.cust_id
                              ) t2
                 ON      t1.cust_id = t2.cust_id
                 LEFT JOIN    (
                                  SELECT  t.cst_id
                                          ,min(t.ctr_eff_dt) min_hpn_dt
                                  FROM    edw.dim_bus_loan_ctr_bse_inf_dd t
                                  --  edw.dim_bus_loan_ctr_inf_dd t
                                  WHERE   t.dt = '${data_dt}'
                                  AND     ( t.prd_no NOT IN ( '201050102010146' , '201050101040348' )
                                      OR t.ctr_frz_mod_cd <> '' )
                                  --剔除未签约的泰e贷
                                  GROUP BY t.cst_id
                              ) t3
                 ON      t1.cust_id = t3.cst_id
             ) cst_4
ON      cst_1.cst_id = cst_4.CUST_ID
left join adm_ind.adm_ind_i_cst_fin_bnft_oi_amt_idx_dd t2   --客户维EVA
ON      cst_1.cst_id = t2.cst_id and t2.dt=TO_CHAR(DATEADD(TO_DATE('${data_dt}', 'yyyymmdd'), 1, 'dd'), 'yyyymmdd')
LEFT JOIN    (
                 SELECT  cst_id
                         ,SUM(table_intn_exps_rsk_cost) AS rsk_cost_loan
                 FROM    ADM_RSK.ADM_RSK_APL_RSK_COST_CRDT_LOAN_DBIL_CHECK_RSK_COST_RSLT_DD
                 WHERE   dt = '${data_dt}'
                 AND     ( pd_start_value = '1'
                     OR ( rfin_label = '1'
                 AND     pd_start_value <> '1' ) )
                 GROUP BY  cst_id
             ) t6 ---信贷风险成本
ON      cst_1.cst_id = t6.cst_id
LEFT JOIN    (
                 SELECT  cst_id
                         ,SUM(table_intn_exps_rsk_cost) AS rsk_cost_card
                 FROM    ADM_RSK.ADM_RSK_APL_RSK_COST_CRDT_CARD_ACC_CHECK_RSK_COST_RSLT_DD
                 WHERE   dt = '${data_dt}'
                 AND      pd_start_value = '1'
                 GROUP BY  cst_id
             ) t7 ----信用卡风险成本
ON      cst_1.cst_id = t7.cst_id
WHERE   cst_1.dt = '${data_dt}'
GROUP BY  cst_2.sbr_org_id , cst_2.sbr_org_nm
union all
SELECT
        cst_2.brc_org_id   as org_id
        ,cst_2.brc_org_nm  as org_nm
        ,count(DISTINCT cst_1.cst_id)              AS 全量客户数
        ,sum(CASE
               WHEN nvl(cst_1.forml_cst_ind, 0) = '1' THEN 1
               ELSE 0
             END)                                  AS 正式客户数
        ,sum(CASE
               WHEN nvl(cst_1.forml_cst_ind, 0) = '1' AND nvl(cst_3.forml_cst_ind, '0') <> '1' THEN 1
               ELSE 0
             END)                                  AS 上年末非正式当前正式客户数_新增
        ,sum(CASE
               WHEN nvl(cst_1.forml_cst_ind, '0') <> '1' AND nvl(cst_3.forml_cst_ind, 0) = '1' THEN 1
               ELSE 0
             END)                                  AS 上年末正式当前非正式客户数_流失
        ,sum(CASE
               WHEN nvl(cst_1.vld_cst_ind, 0) = '1' THEN 1
               ELSE 0
             END)                                  AS 有效户户数
        ,sum(CASE
               WHEN nvl(cst_3.forml_cst_ind, 0) = '1' THEN 1
               ELSE 0
             END)                                  AS 上年末正式客户数
        ,sum(CASE
               WHEN nvl(cst_3.vld_cst_ind, 0) = '1' THEN 1
               ELSE 0
             END)                                  AS 上年末有效户户数
        ,sum(CASE
               WHEN nvl(cst_1.vld_cst_ind, 0) = '1' AND nvl(cst_3.vld_cst_ind, '0') <> '1' THEN 1
               ELSE 0
             END)                                  AS 上年末非有效当前有效客户数_新增
        ,sum(CASE
               WHEN nvl(cst_1.vld_cst_ind, '0') <> '1' AND nvl(cst_3.vld_cst_ind, 0) = '1' THEN 1
               ELSE 0
             END)                                  AS 上年末有效当前非有效客户数_流失
        ,sum(cst_1.dep_mon_avg_bal)                AS 存款月日均
        ,sum(cst_1.ln_mon_avg_bal)                 AS 贷款月日均
        ,sum(CASE
               WHEN nvl(cst_1.vld_cst_ind, 0) = '1' THEN cst_1.dep_mon_avg_bal
               ELSE 0
             END)                                  AS 有效户存款月日均
        ,sum(CASE
               WHEN nvl(cst_1.vld_cst_ind, 0) = '1' THEN cst_1.ln_mon_avg_bal
               ELSE 0
             END)                                  AS 有效户贷款月日均
        ,sum(CASE
               WHEN nvl(cst_1.vld_dep_cst_ind, 0) = '1' THEN cst_1.dep_mon_avg_bal
               ELSE 0
             END)                                  AS 存款有效户存款月日均
        ,sum(CASE
               WHEN nvl(cst_1.vld_ln_cst_ind, 0) = '1' THEN cst_1.ln_mon_avg_bal
               ELSE 0
             END)                                  AS 贷款有效户贷款月日均
        ,sum(CASE
               WHEN nvl(cst_1.vld_dep_cst_ind, 0) = '1' THEN 1
               ELSE 0
             END)                                  AS 有效存款户数
        ,sum(CASE
               WHEN nvl(cst_1.vld_dep_cst_ind, 0) = '1' AND nvl(cst_3.vld_dep_cst_ind, '0') = '1' THEN cst_1.dep_mon_avg_bal
               ELSE 0
             END)                                  AS 存量有效存款户_存款月日均
        ,sum(CASE
               WHEN nvl(cst_1.vld_dep_cst_ind, 0) = '1' AND nvl(cst_3.vld_dep_cst_ind, '0') = '1' THEN 1
               ELSE 0
             END)                                  AS 存量有效存款户数
        ,sum(CASE
               WHEN nvl(cst_1.vld_dep_cst_ind, 0) = '1' AND nvl(cst_3.vld_dep_cst_ind, '0') <> '1' THEN cst_1.dep_mon_avg_bal
               ELSE 0
             END)                                  AS 新增有效存款户_存款月日均
        ,sum(CASE
               WHEN nvl(cst_1.vld_dep_cst_ind, 0) = '1' AND nvl(cst_3.vld_dep_cst_ind, '0') <> '1' THEN 1
               ELSE 0
             END)                                  AS 新增有效存款户
        ,sum(CASE
               WHEN nvl(cst_1.vld_ln_cst_ind, '') = '1' THEN 1
               ELSE 0
             END)                                  AS 有效贷款户
        ,sum(CASE
               WHEN nvl(cst_4.业务标签, '') = '流失挽回' THEN cst_1.ln_mon_avg_bal
               ELSE 0
             END)                                  AS 挽回有效贷款户_贷款月日均
        ,sum(CASE
               WHEN nvl(cst_4.业务标签, '') = '流失挽回' THEN 1
               ELSE 0
             END)                                  AS 挽回有效贷款户
        ,sum(CASE
               WHEN nvl(cst_1.vld_ln_cst_ind, '') = '1' THEN cst_1.ln_mon_avg_bal
               ELSE 0
             END) - sum(CASE
                          WHEN nvl(cst_4.业务标签, '') = '流失挽回' THEN cst_1.ln_mon_avg_bal
                          ELSE 0
                        END) - sum(CASE
                                     WHEN nvl(cst_4.业务标签, '') = '新增' THEN cst_1.ln_mon_avg_bal
                                     ELSE 0
                                   END) 存量有效贷款户_贷款月日均
        ,sum(CASE
               WHEN nvl(cst_1.vld_ln_cst_ind, '') = '1' THEN 1
               ELSE 0
             END) - sum(CASE
                          WHEN nvl(cst_4.业务标签, '') = '流失挽回' THEN 1
                          ELSE 0
                        END) - sum(CASE
                                     WHEN nvl(cst_4.业务标签, '') = '新增' THEN 1
                                     ELSE 0
                                   END) 存量有效贷款户
        ,sum(CASE
               WHEN nvl(cst_4.业务标签, '') = '新增' THEN cst_1.ln_mon_avg_bal
               ELSE 0
             END)                                  AS 新增有效贷款户_贷款月日均
        ,sum(CASE
               WHEN nvl(cst_4.业务标签, '') = '新增' THEN 1
               ELSE 0
             END)                                  AS 新增有效贷款户
        ,sum(CASE
               WHEN nvl(cst_1.vld_cst_ind, 0) = '1' AND nvl(cst_3.vld_cst_ind, 0) <> '1' THEN 1
               ELSE 0
             END)                                  AS 新增有效户_上年末无效当前时点有效
        ,sum(CASE
               WHEN nvl(cst_1.vld_cst_ind, 0) <> '1' AND nvl(cst_3.vld_cst_ind, 0) = '1' THEN 1
               ELSE 0
             END)                                  AS 流失有效户_上年末有效当前时点无效
        ,sum(CASE
               WHEN t2.l12m_cst_val - nvl(t6.rsk_cost_LOAN, 0) - nvl(t7.rsk_cost_card, 0) < - 500 THEN 1
               ELSE 0
             END)                                  AS 负价值客户数_近12个月eva
        ,sum(CASE
               WHEN nvl(cst_1.is_dft_cst, '0') = '1' THEN 1
               ELSE 0
             END)                                  AS 违约价值客户数_当年 --后续替换为近一年
FROM    app_ado.adm_subl_cst_bus_inf_dd cst_1 --客户业务信息汇总表
LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd cst_2 --考核机构数
ON      cst_1.prm_org_id = cst_2.org_id
and     cst_2.eff_sts_ind='1'
AND     cst_2.dt ='${data_dt}'
LEFT JOIN    app_ado.adm_subl_cst_bus_inf_dd cst_3 --判断客户上年末状态
ON      cst_1.cst_id = cst_3.cst_id
AND     cst_3.dt = concat(YEAR(DATEADD(TO_DATE('${data_dt}', 'yyyymmdd'), - 1, 'yyyy')), '1231')
LEFT JOIN    (
                 SELECT  T1.CUST_ID
                         ,CASE
                            WHEN nvl(T1.avg_bal, 0) = 0 AND nvl(T2.avg_bal, 0) = 0                                                                                                  THEN '无业务'
                            WHEN nvl(T1.avg_bal, 0) > 0 AND nvl(T2.avg_bal, 0) = 0 AND t3.min_hpn_dt > concat(YEAR(DATEADD(TO_DATE('${data_dt}', 'yyyymmdd'), - 1, 'yyyy')), '1231')  THEN '新增'
                            WHEN nvl(T1.avg_bal, 0) > 0 AND nvl(T2.avg_bal, 0) = 0 AND t3.min_hpn_dt <= concat(YEAR(DATEADD(TO_DATE('${data_dt}', 'yyyymmdd'), - 1, 'yyyy')), '1231') THEN '流失挽回'
                            WHEN nvl(T1.avg_bal, 0) = 0 AND nvl(T2.avg_bal, 0) > 0                                                                                                  THEN '流失'
                            WHEN nvl(T1.avg_bal, 0) > 0 AND nvl(T2.avg_bal, 0) > 0 AND nvl(T1.avg_bal, 0) > nvl(T2.avg_bal, 0)                                                      THEN '增额'
                            WHEN nvl(T1.avg_bal, 0) > 0 AND nvl(T2.avg_bal, 0) > 0 AND nvl(T1.avg_bal, 0) < nvl(T2.avg_bal, 0)                                                      THEN '减额'
                            WHEN nvl(T1.avg_bal, 0) > 0 AND nvl(T2.avg_bal, 0) > 0 AND nvl(T1.avg_bal, 0) = nvl(T2.avg_bal, 0)                                                      THEN '原额'
                            ELSE ''
                          END AS 业务标签
                         ,t3.min_hpn_dt --首次授信日期
                 FROM    (
                             SELECT  dcst_1.cust_id
                                     ,sum(dcst_1.avg_bal) AS avg_bal
                             FROM    app_iftp.adm_papp_ftp_eva_acct_summ_rst_inf dcst_1
                             WHERE   dcst_1.dt = '${data_dt}'
                             AND     freq_dt = 'Y'
                             AND     substr(dcst_1.prod_cd, 1, 6) IN ( '810101' , '810105' , '810108' , '810109' , '810110' )
                             GROUP BY dcst_1.cust_id
                         ) t1
                 LEFT JOIN    (
                                  SELECT  dcst_1.cust_id
                                          ,sum(dcst_1.avg_bal) AS avg_bal
                                  FROM    app_iftp.adm_papp_ftp_eva_acct_summ_rst_inf dcst_1
                                  WHERE   dcst_1.dt = concat(YEAR(DATEADD(TO_DATE('${data_dt}', 'yyyymmdd'), - 1, 'yyyy')), '1231')
                                  AND     freq_dt = 'Y'
                                  AND     substr(dcst_1.prod_cd, 1, 6) IN ( '810101' , '810105' , '810108' , '810109' , '810110' )
                                  GROUP BY dcst_1.cust_id
                              ) t2
                 ON      t1.cust_id = t2.cust_id
                 LEFT JOIN    (
                                  SELECT  t.cst_id
                                          ,min(t.ctr_eff_dt) min_hpn_dt
                                  FROM    edw.dim_bus_loan_ctr_bse_inf_dd t
                                  --  edw.dim_bus_loan_ctr_inf_dd t
                                  WHERE   t.dt = '${data_dt}'
                                  AND     ( t.prd_no NOT IN ( '201050102010146' , '201050101040348' )
                                      OR t.ctr_frz_mod_cd <> '' )
                                  --剔除未签约的泰e贷
                                  GROUP BY t.cst_id
                              ) t3
                 ON      t1.cust_id = t3.cst_id
             ) cst_4
ON      cst_1.cst_id = cst_4.CUST_ID
left join adm_ind.adm_ind_i_cst_fin_bnft_oi_amt_idx_dd t2   --客户维EVA
ON      cst_1.cst_id = t2.cst_id and t2.dt=TO_CHAR(DATEADD(TO_DATE('${data_dt}', 'yyyymmdd'), 1, 'dd'), 'yyyymmdd')
LEFT JOIN    (
                 SELECT  cst_id
                         ,SUM(table_intn_exps_rsk_cost) AS rsk_cost_loan
                 FROM    ADM_RSK.ADM_RSK_APL_RSK_COST_CRDT_LOAN_DBIL_CHECK_RSK_COST_RSLT_DD
                 WHERE   dt = '${data_dt}'
                 AND     ( pd_start_value = '1'
                     OR ( rfin_label = '1'
                 AND     pd_start_value <> '1' ) )
                 GROUP BY  cst_id
             ) t6 ---信贷风险成本
ON      cst_1.cst_id = t6.cst_id
LEFT JOIN    (
                 SELECT  cst_id
                         ,SUM(table_intn_exps_rsk_cost) AS rsk_cost_card
                 FROM    ADM_RSK.ADM_RSK_APL_RSK_COST_CRDT_CARD_ACC_CHECK_RSK_COST_RSLT_DD
                 WHERE   dt = '${data_dt}'
                 AND      pd_start_value = '1'
                 GROUP BY  cst_id
             ) t7 ----信用卡风险成本
ON      cst_1.cst_id = t7.cst_id
WHERE   cst_1.dt = '${data_dt}'
GROUP BY  cst_2.brc_org_id , cst_2.brc_org_nm
union all
SELECT
        cst_2.tem_org_id   as org_id
        ,cst_2.tem_org_nm  as org_nm
        ,count(DISTINCT cst_1.cst_id)              AS 全量客户数
        ,sum(CASE
               WHEN nvl(cst_1.forml_cst_ind, 0) = '1' THEN 1
               ELSE 0
             END)                                  AS 正式客户数
        ,sum(CASE
               WHEN nvl(cst_1.forml_cst_ind, 0) = '1' AND nvl(cst_3.forml_cst_ind, '0') <> '1' THEN 1
               ELSE 0
             END)                                  AS 上年末非正式当前正式客户数_新增
        ,sum(CASE
               WHEN nvl(cst_1.forml_cst_ind, '0') <> '1' AND nvl(cst_3.forml_cst_ind, 0) = '1' THEN 1
               ELSE 0
             END)                                  AS 上年末正式当前非正式客户数_流失
        ,sum(CASE
               WHEN nvl(cst_1.vld_cst_ind, 0) = '1' THEN 1
               ELSE 0
             END)                                  AS 有效户户数
        ,sum(CASE
               WHEN nvl(cst_3.forml_cst_ind, 0) = '1' THEN 1
               ELSE 0
             END)                                  AS 上年末正式客户数
        ,sum(CASE
               WHEN nvl(cst_3.vld_cst_ind, 0) = '1' THEN 1
               ELSE 0
             END)                                  AS 上年末有效户户数
        ,sum(CASE
               WHEN nvl(cst_1.vld_cst_ind, 0) = '1' AND nvl(cst_3.vld_cst_ind, '0') <> '1' THEN 1
               ELSE 0
             END)                                  AS 上年末非有效当前有效客户数_新增
        ,sum(CASE
               WHEN nvl(cst_1.vld_cst_ind, '0') <> '1' AND nvl(cst_3.vld_cst_ind, 0) = '1' THEN 1
               ELSE 0
             END)                                  AS 上年末有效当前非有效客户数_流失
        ,sum(cst_1.dep_mon_avg_bal)                AS 存款月日均
        ,sum(cst_1.ln_mon_avg_bal)                 AS 贷款月日均
        ,sum(CASE
               WHEN nvl(cst_1.vld_cst_ind, 0) = '1' THEN cst_1.dep_mon_avg_bal
               ELSE 0
             END)                                  AS 有效户存款月日均
        ,sum(CASE
               WHEN nvl(cst_1.vld_cst_ind, 0) = '1' THEN cst_1.ln_mon_avg_bal
               ELSE 0
             END)                                  AS 有效户贷款月日均
        ,sum(CASE
               WHEN nvl(cst_1.vld_dep_cst_ind, 0) = '1' THEN cst_1.dep_mon_avg_bal
               ELSE 0
             END)                                  AS 存款有效户存款月日均
        ,sum(CASE
               WHEN nvl(cst_1.vld_ln_cst_ind, 0) = '1' THEN cst_1.ln_mon_avg_bal
               ELSE 0
             END)                                  AS 贷款有效户贷款月日均
        ,sum(CASE
               WHEN nvl(cst_1.vld_dep_cst_ind, 0) = '1' THEN 1
               ELSE 0
             END)                                  AS 有效存款户数
        ,sum(CASE
               WHEN nvl(cst_1.vld_dep_cst_ind, 0) = '1' AND nvl(cst_3.vld_dep_cst_ind, '0') = '1' THEN cst_1.dep_mon_avg_bal
               ELSE 0
             END)                                  AS 存量有效存款户_存款月日均
        ,sum(CASE
               WHEN nvl(cst_1.vld_dep_cst_ind, 0) = '1' AND nvl(cst_3.vld_dep_cst_ind, '0') = '1' THEN 1
               ELSE 0
             END)                                  AS 存量有效存款户数
        ,sum(CASE
               WHEN nvl(cst_1.vld_dep_cst_ind, 0) = '1' AND nvl(cst_3.vld_dep_cst_ind, '0') <> '1' THEN cst_1.dep_mon_avg_bal
               ELSE 0
             END)                                  AS 新增有效存款户_存款月日均
        ,sum(CASE
               WHEN nvl(cst_1.vld_dep_cst_ind, 0) = '1' AND nvl(cst_3.vld_dep_cst_ind, '0') <> '1' THEN 1
               ELSE 0
             END)                                  AS 新增有效存款户
        ,sum(CASE
               WHEN nvl(cst_1.vld_ln_cst_ind, '') = '1' THEN 1
               ELSE 0
             END)                                  AS 有效贷款户
        ,sum(CASE
               WHEN nvl(cst_4.业务标签, '') = '流失挽回' THEN cst_1.ln_mon_avg_bal
               ELSE 0
             END)                                  AS 挽回有效贷款户_贷款月日均
        ,sum(CASE
               WHEN nvl(cst_4.业务标签, '') = '流失挽回' THEN 1
               ELSE 0
             END)                                  AS 挽回有效贷款户
        ,sum(CASE
               WHEN nvl(cst_1.vld_ln_cst_ind, '') = '1' THEN cst_1.ln_mon_avg_bal
               ELSE 0
             END) - sum(CASE
                          WHEN nvl(cst_4.业务标签, '') = '流失挽回' THEN cst_1.ln_mon_avg_bal
                          ELSE 0
                        END) - sum(CASE
                                     WHEN nvl(cst_4.业务标签, '') = '新增' THEN cst_1.ln_mon_avg_bal
                                     ELSE 0
                                   END) 存量有效贷款户_贷款月日均
        ,sum(CASE
               WHEN nvl(cst_1.vld_ln_cst_ind, '') = '1' THEN 1
               ELSE 0
             END) - sum(CASE
                          WHEN nvl(cst_4.业务标签, '') = '流失挽回' THEN 1
                          ELSE 0
                        END) - sum(CASE
                                     WHEN nvl(cst_4.业务标签, '') = '新增' THEN 1
                                     ELSE 0
                                   END) 存量有效贷款户
        ,sum(CASE
               WHEN nvl(cst_4.业务标签, '') = '新增' THEN cst_1.ln_mon_avg_bal
               ELSE 0
             END)                                  AS 新增有效贷款户_贷款月日均
        ,sum(CASE
               WHEN nvl(cst_4.业务标签, '') = '新增' THEN 1
               ELSE 0
             END)                                  AS 新增有效贷款户
        ,sum(CASE
               WHEN nvl(cst_1.vld_cst_ind, 0) = '1' AND nvl(cst_3.vld_cst_ind, 0) <> '1' THEN 1
               ELSE 0
             END)                                  AS 新增有效户_上年末无效当前时点有效
        ,sum(CASE
               WHEN nvl(cst_1.vld_cst_ind, 0) <> '1' AND nvl(cst_3.vld_cst_ind, 0) = '1' THEN 1
               ELSE 0
             END)                                  AS 流失有效户_上年末有效当前时点无效
        ,sum(CASE
               WHEN t2.l12m_cst_val - nvl(t6.rsk_cost_LOAN, 0) - nvl(t7.rsk_cost_card, 0) < - 500 THEN 1
               ELSE 0
             END)                                  AS 负价值客户数_近12个月eva
        ,sum(CASE
               WHEN nvl(cst_1.is_dft_cst, '0') = '1' THEN 1
               ELSE 0
             END)                                  AS 违约价值客户数_当年 --后续替换为近一年
FROM    app_ado.adm_subl_cst_bus_inf_dd cst_1 --客户业务信息汇总表
LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd cst_2 --考核机构数
ON      cst_1.prm_org_id = cst_2.org_id
and     cst_2.eff_sts_ind='1'
AND     cst_2.dt ='${data_dt}'
LEFT JOIN    app_ado.adm_subl_cst_bus_inf_dd cst_3 --判断客户上年末状态
ON      cst_1.cst_id = cst_3.cst_id
AND     cst_3.dt = concat(YEAR(DATEADD(TO_DATE('${data_dt}', 'yyyymmdd'), - 1, 'yyyy')), '1231')
LEFT JOIN    (
                 SELECT  T1.CUST_ID
                         ,CASE
                            WHEN nvl(T1.avg_bal, 0) = 0 AND nvl(T2.avg_bal, 0) = 0                                                                                                  THEN '无业务'
                            WHEN nvl(T1.avg_bal, 0) > 0 AND nvl(T2.avg_bal, 0) = 0 AND t3.min_hpn_dt > concat(YEAR(DATEADD(TO_DATE('${data_dt}', 'yyyymmdd'), - 1, 'yyyy')), '1231')  THEN '新增'
                            WHEN nvl(T1.avg_bal, 0) > 0 AND nvl(T2.avg_bal, 0) = 0 AND t3.min_hpn_dt <= concat(YEAR(DATEADD(TO_DATE('${data_dt}', 'yyyymmdd'), - 1, 'yyyy')), '1231') THEN '流失挽回'
                            WHEN nvl(T1.avg_bal, 0) = 0 AND nvl(T2.avg_bal, 0) > 0                                                                                                  THEN '流失'
                            WHEN nvl(T1.avg_bal, 0) > 0 AND nvl(T2.avg_bal, 0) > 0 AND nvl(T1.avg_bal, 0) > nvl(T2.avg_bal, 0)                                                      THEN '增额'
                            WHEN nvl(T1.avg_bal, 0) > 0 AND nvl(T2.avg_bal, 0) > 0 AND nvl(T1.avg_bal, 0) < nvl(T2.avg_bal, 0)                                                      THEN '减额'
                            WHEN nvl(T1.avg_bal, 0) > 0 AND nvl(T2.avg_bal, 0) > 0 AND nvl(T1.avg_bal, 0) = nvl(T2.avg_bal, 0)                                                      THEN '原额'
                            ELSE ''
                          END AS 业务标签
                         ,t3.min_hpn_dt --首次授信日期
                 FROM    (
                             SELECT  dcst_1.cust_id
                                     ,sum(dcst_1.avg_bal) AS avg_bal
                             FROM    app_iftp.adm_papp_ftp_eva_acct_summ_rst_inf dcst_1
                             WHERE   dcst_1.dt = '${data_dt}'
                             AND     freq_dt = 'Y'
                             AND     substr(dcst_1.prod_cd, 1, 6) IN ( '810101' , '810105' , '810108' , '810109' , '810110' )
                             GROUP BY dcst_1.cust_id
                         ) t1
                 LEFT JOIN    (
                                  SELECT  dcst_1.cust_id
                                          ,sum(dcst_1.avg_bal) AS avg_bal
                                  FROM    app_iftp.adm_papp_ftp_eva_acct_summ_rst_inf dcst_1
                                  WHERE   dcst_1.dt = concat(YEAR(DATEADD(TO_DATE('${data_dt}', 'yyyymmdd'), - 1, 'yyyy')), '1231')
                                  AND     freq_dt = 'Y'
                                  AND     substr(dcst_1.prod_cd, 1, 6) IN ( '810101' , '810105' , '810108' , '810109' , '810110' )
                                  GROUP BY dcst_1.cust_id
                              ) t2
                 ON      t1.cust_id = t2.cust_id
                 LEFT JOIN    (
                                  SELECT  t.cst_id
                                          ,min(t.ctr_eff_dt) min_hpn_dt
                                  FROM    edw.dim_bus_loan_ctr_bse_inf_dd t
                                  --  edw.dim_bus_loan_ctr_inf_dd t
                                  WHERE   t.dt = '${data_dt}'
                                  AND     ( t.prd_no NOT IN ( '201050102010146' , '201050101040348' )
                                      OR t.ctr_frz_mod_cd <> '' )
                                  --剔除未签约的泰e贷
                                  GROUP BY t.cst_id
                              ) t3
                 ON      t1.cust_id = t3.cst_id
             ) cst_4
ON      cst_1.cst_id = cst_4.CUST_ID
left join adm_ind.adm_ind_i_cst_fin_bnft_oi_amt_idx_dd t2   --客户维EVA
ON      cst_1.cst_id = t2.cst_id and t2.dt=TO_CHAR(DATEADD(TO_DATE('${data_dt}', 'yyyymmdd'), 1, 'dd'), 'yyyymmdd')
LEFT JOIN    (
                 SELECT  cst_id
                         ,SUM(table_intn_exps_rsk_cost) AS rsk_cost_loan
                 FROM    ADM_RSK.ADM_RSK_APL_RSK_COST_CRDT_LOAN_DBIL_CHECK_RSK_COST_RSLT_DD
                 WHERE   dt = '${data_dt}'
                 AND     ( pd_start_value = '1'
                     OR ( rfin_label = '1'
                 AND     pd_start_value <> '1' ) )
                 GROUP BY  cst_id
             ) t6 ---信贷风险成本
ON      cst_1.cst_id = t6.cst_id
LEFT JOIN    (
                 SELECT  cst_id
                         ,SUM(table_intn_exps_rsk_cost) AS rsk_cost_card
                 FROM    ADM_RSK.ADM_RSK_APL_RSK_COST_CRDT_CARD_ACC_CHECK_RSK_COST_RSLT_DD
                 WHERE   dt = '${data_dt}'
                 AND      pd_start_value = '1'
                 GROUP BY  cst_id
             ) t7 ----信用卡风险成本
ON      cst_1.cst_id = t7.cst_id
WHERE   cst_1.dt = '${data_dt}'
GROUP BY  cst_2.tem_org_id , cst_2.tem_org_nm
;

DROP TABLE if EXISTS HGL_ORG_TAG_IND_DD_3_HKGL_02;
CREATE TABLE IF NOT EXISTS HGL_ORG_TAG_IND_DD_3_HKGL_02 as
SELECT
 t1.org_id
,t1.org_nm
,(t1.v4_val_cst_qty+t1.v5_val_cst_qty+t1.v6_val_cst_qty+t1.v7_val_cst_qty+t1.v8_val_cst_qty)  优质客户数
,(t1.is_cur_dft_cst_qty+t1.cncn_val_cst_qty+t1.zero_val_cst_qty+t1.v1_val_cst_qty+t1.v2_val_cst_qty+t1.v3_val_cst_qty+t1.v4_val_cst_qty+t1.v5_val_cst_qty+t1.v6_val_cst_qty+t1.v7_val_cst_qty+t1.v8_val_cst_qty)  客户数合计
,if((t1.is_cur_dft_cst_qty+t1.cncn_val_cst_qty+t1.zero_val_cst_qty+t1.v1_val_cst_qty+t1.v2_val_cst_qty+t1.v3_val_cst_qty+t1.v4_val_cst_qty+t1.v5_val_cst_qty+t1.v6_val_cst_qty+t1.v7_val_cst_qty+t1.v8_val_cst_qty)=0,null,
    (t1.v4_val_cst_qty+t1.v5_val_cst_qty+t1.v6_val_cst_qty+t1.v7_val_cst_qty+t1.v8_val_cst_qty) /
(t1.is_cur_dft_cst_qty+t1.cncn_val_cst_qty+t1.zero_val_cst_qty+t1.v1_val_cst_qty+t1.v2_val_cst_qty+t1.v3_val_cst_qty+t1.v4_val_cst_qty+t1.v5_val_cst_qty+t1.v6_val_cst_qty+t1.v7_val_cst_qty+t1.v8_val_cst_qty)) 优质客户占比
from  app_rpt.FCT_CST_VAL_DIS_RPT  t1
left join  edw.dim_hr_org_mng_org_tree_dd t2
on t1.org_id=t2.org_id and t2.dt='${data_dt}'  and  t2.eff_sts_ind='1'
where t1.dt='${data_dt}'
and   t1.stat_dim='单一客户维度'
and   t1.cst_typ_cd='全选'
and   t1.org_type='Z'  --支行
union all
SELECT
 t1.org_id
,t1.org_nm
,(t1.v4_val_cst_qty+t1.v5_val_cst_qty+t1.v6_val_cst_qty+t1.v7_val_cst_qty+t1.v8_val_cst_qty)  优质客户数
,(t1.is_cur_dft_cst_qty+t1.cncn_val_cst_qty+t1.zero_val_cst_qty+t1.v1_val_cst_qty+t1.v2_val_cst_qty+t1.v3_val_cst_qty+t1.v4_val_cst_qty+t1.v5_val_cst_qty+t1.v6_val_cst_qty+t1.v7_val_cst_qty+t1.v8_val_cst_qty)  客户数合计
,if((t1.is_cur_dft_cst_qty+t1.cncn_val_cst_qty+t1.zero_val_cst_qty+t1.v1_val_cst_qty+t1.v2_val_cst_qty+t1.v3_val_cst_qty+t1.v4_val_cst_qty+t1.v5_val_cst_qty+t1.v6_val_cst_qty+t1.v7_val_cst_qty+t1.v8_val_cst_qty)=0,null,
    (t1.v4_val_cst_qty+t1.v5_val_cst_qty+t1.v6_val_cst_qty+t1.v7_val_cst_qty+t1.v8_val_cst_qty) /
(t1.is_cur_dft_cst_qty+t1.cncn_val_cst_qty+t1.zero_val_cst_qty+t1.v1_val_cst_qty+t1.v2_val_cst_qty+t1.v3_val_cst_qty+t1.v4_val_cst_qty+t1.v5_val_cst_qty+t1.v6_val_cst_qty+t1.v7_val_cst_qty+t1.v8_val_cst_qty)) 优质客户占比
from  app_rpt.FCT_CST_VAL_DIS_RPT  t1
left join  edw.dim_hr_org_mng_org_tree_dd t2
on t1.org_id=t2.org_id and t2.dt='${data_dt}'  and  t2.eff_sts_ind='1'
where t1.dt='${data_dt}'
and   t1.stat_dim='单一客户维度'
and   t1.cst_typ_cd='全选'
and   t1.org_type='F'  --分行
union all
SELECT
 t1.org_id
,t1.org_nm
,(t1.v4_val_cst_qty+t1.v5_val_cst_qty+t1.v6_val_cst_qty+t1.v7_val_cst_qty+t1.v8_val_cst_qty)  优质客户数
,(t1.is_cur_dft_cst_qty+t1.cncn_val_cst_qty+t1.zero_val_cst_qty+t1.v1_val_cst_qty+t1.v2_val_cst_qty+t1.v3_val_cst_qty+t1.v4_val_cst_qty+t1.v5_val_cst_qty+t1.v6_val_cst_qty+t1.v7_val_cst_qty+t1.v8_val_cst_qty)  客户数合计
,if((t1.is_cur_dft_cst_qty+t1.cncn_val_cst_qty+t1.zero_val_cst_qty+t1.v1_val_cst_qty+t1.v2_val_cst_qty+t1.v3_val_cst_qty+t1.v4_val_cst_qty+t1.v5_val_cst_qty+t1.v6_val_cst_qty+t1.v7_val_cst_qty+t1.v8_val_cst_qty)=0,null,
    (t1.v4_val_cst_qty+t1.v5_val_cst_qty+t1.v6_val_cst_qty+t1.v7_val_cst_qty+t1.v8_val_cst_qty) /
(t1.is_cur_dft_cst_qty+t1.cncn_val_cst_qty+t1.zero_val_cst_qty+t1.v1_val_cst_qty+t1.v2_val_cst_qty+t1.v3_val_cst_qty+t1.v4_val_cst_qty+t1.v5_val_cst_qty+t1.v6_val_cst_qty+t1.v7_val_cst_qty+t1.v8_val_cst_qty)) 优质客户占比
from  app_rpt.FCT_CST_VAL_DIS_RPT  t1
left join  edw.dim_hr_org_mng_org_tree_dd t2
on t1.org_id=t2.org_id and t2.dt='${data_dt}'  and  t2.eff_sts_ind='1'
where t1.dt='${data_dt}'
and   t1.stat_dim='单一客户维度'
and   t1.cst_typ_cd='全选'
and   t1.org_type='T'  --团队
;


--**************************存量维护**********************************
INSERT INTO LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_01 PARTITION (dt = '${data_dt}')
-- 有效户户数	HKGL_0001_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'HKGL_0001_01'                       AS IND_ID
        ,T.有效户户数                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 第七次人口普查人数	HKGL_0001_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'HKGL_0001_02'                       AS IND_ID
        ,T.cur_val                       AS CUR_VAL
FROM  lab_bigdata_dev.qbi_file_wsj_hgl3_HKGL_0001_02 T
where t.pt=MAX_PT('lab_bigdata_dev.qbi_file_wsj_hgl3_HKGL_0001_02')
and   t.ind_id='HKGL_0001_02'
UNION ALL
-- 有效户覆盖率	HKGL_0001
SELECT  T.ORG_ID                               AS ORG_ID
        ,'HKGL_0001'                       AS IND_ID
        ,T.有效户户数/T2.cur_val      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
inner join lab_bigdata_dev.qbi_file_wsj_hgl3_HKGL_0001_02 t2
on t.ORG_ID=t2.org_id and t2.pt=MAX_PT('lab_bigdata_dev.qbi_file_wsj_hgl3_HKGL_0001_02') and   t2.ind_id='HKGL_0001_02'
UNION ALL
-- 全量客户数	HKGL_0002_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'HKGL_0002_01'                       AS IND_ID
        ,T.全量客户数      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 全量客户覆盖率	HKGL_0002
SELECT  T.ORG_ID                               AS ORG_ID
        ,'HKGL_0002'                       AS IND_ID
        ,T.全量客户数/T2.cur_val      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
inner join lab_bigdata_dev.qbi_file_wsj_hgl3_HKGL_0001_02 t2
on t.ORG_ID=t2.org_id and t2.pt=MAX_PT('lab_bigdata_dev.qbi_file_wsj_hgl3_HKGL_0001_02')  and   t2.ind_id='HKGL_0001_02'
UNION ALL
-- 正式客户数	HKGL_0003_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'HKGL_0003_01'                       AS IND_ID
        ,T.正式客户数      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 全量客户中正式客户占比	HKGL_0003
SELECT  T.ORG_ID                               AS ORG_ID
        ,'HKGL_0003'                       AS IND_ID
        ,T.正式客户数/T.全量客户数      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 正式客户中有效户占比	HKGL_0004
SELECT  T.ORG_ID                               AS ORG_ID
        ,'HKGL_0004'                       AS IND_ID
        ,T.有效户户数/T.正式客户数      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 当年新增金融业务触达率	HKGL_0005
SELECT  T.ORG_ID                               AS ORG_ID
        ,'HKGL_0005'                       AS IND_ID
        ,T.上年末非正式当前正式客户数_新增/T.上年末正式客户数      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 上年末新增正式客户数	HKGL_0005_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'HKGL_0005_01'                       AS IND_ID
        ,T.上年末非正式当前正式客户数_新增      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 上年末正式客户数	HKGL_0005_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'HKGL_0005_02'                       AS IND_ID
        ,T.上年末正式客户数      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 当年正式客户流失比例	HKGL_0006
SELECT  T.ORG_ID                               AS ORG_ID
        ,'HKGL_0006'                       AS IND_ID
        ,T.上年末正式当前非正式客户数_流失/T.上年末正式客户数      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 当年流失正式客户数	HKGL_0006_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'HKGL_0006_01'                       AS IND_ID
        ,T.上年末正式当前非正式客户数_流失      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 当年新增有效户比例	HKGL_0007
SELECT  T.ORG_ID                               AS ORG_ID
        ,'HKGL_0007'                       AS IND_ID
        ,T.新增有效户_上年末无效当前时点有效/T.上年末有效户户数      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 当年新增有效户数	HKGL_0007_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'HKGL_0007_01'                       AS IND_ID
        ,T.新增有效户_上年末无效当前时点有效     AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 上年末有效客户	HKGL_0007_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'HKGL_0007_02'                       AS IND_ID
        ,T.上年末有效户户数     AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 当年有效户流失比例	HKGL_0008
SELECT  T.ORG_ID                               AS ORG_ID
        ,'HKGL_0008'                       AS IND_ID
        ,T.上年末有效当前非有效客户数_流失/T.上年末有效户户数     AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 当年流失有效户数	HKGL_0008_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'HKGL_0008_01'                       AS IND_ID
        ,T.上年末有效当前非有效客户数_流失     AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 负价值客户占比	HKGL_0009
SELECT  T.ORG_ID                               AS ORG_ID
        ,'HKGL_0009'                       AS IND_ID
        ,T.负价值客户数_近12个月eva/T.正式客户数     AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 负价值客户数	HKGL_0009_01
SELECT  T.ORG_ID                              AS ORG_ID
        ,'HKGL_0009_01'                       AS IND_ID
        ,T.负价值客户数_近12个月eva             AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 优质客户占比	HKGL_0010
SELECT  T.ORG_ID                               AS ORG_ID
        ,'HKGL_0010'                       AS IND_ID
        ,T.优质客户占比     AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_02 T
UNION ALL
-- 优质客户数	HKGL_0010_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'HKGL_0010_01'                       AS IND_ID
        ,T.优质客户数     AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_02 T
UNION ALL
-- 客户数合计	HKGL_0010_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'HKGL_0010_02'                       AS IND_ID
        ,T.客户数合计     AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_02 T
;


-- 有效性管理
-- 有效户户均存贷规模	YXGL_0001
-- 有效存款户户均存款规模	YXGL_0002
-- 有效贷款户户均贷款规模	YXGL_0003
-- 存量有效存款户户均存款规模	YXGL_0004
-- 新增有效存款户户均存款规模	YXGL_0005
-- 存量有效贷款户户均贷款规模	YXGL_0006
-- 挽回有效贷款户户均贷款规模	YXGL_0007
-- 新增有效贷款户户均贷款规模	YXGL_0008
-- 最大十户存款占比	YXGL_0009
-- 最大十户贷款占比	YXGL_0010

DROP TABLE if EXISTS HGL_ORG_TAG_IND_DD_3_YXGL_01;
CREATE TABLE IF NOT EXISTS HGL_ORG_TAG_IND_DD_3_YXGL_01 as
SELECT  v1.tem_org_id  as  org_id
        ,v2.loan_avg_bal_TOP10
        ,v2.dep_avg_bal_TOP10
        ,v1.loan_avg_bal
        ,v1.dep_avg_bal
        ,v1.dep_avg_bal_hq_no_zyx
        ,v1.dep_avg_bal_dq
        ,v1.dep_avg_bal_1Ylower_dq
        ,v1.dep_avg_bal_no_zyx
        ,v1.dep_avg_bal_zyx
FROM    (
            SELECT  zh_1_1.dt
                    ,zh_1_2.tem_org_id
                    ,SUM(CASE
                           WHEN substr(prod_cd, 1, 4) = '8101' THEN nvl(avg_bal, 0)
                           ELSE 0
                         END) AS loan_avg_bal
                    ,SUM(CASE
                           WHEN substr(prod_cd, 1, 4) = '8201' THEN nvl(avg_bal, 0)
                           ELSE 0
                         END) AS dep_avg_bal
                    ,SUM(CASE
                           WHEN substr(prod_cd, 1, 10) IN ( '8201010101' , '8201010201' ) THEN nvl(avg_bal, 0)
                           ELSE 0
                         END) AS dep_avg_bal_hq_no_zyx
                    ,SUM(CASE
                           WHEN substr(prod_cd, 1, 10) IN ( '8201010102' , '8201010108' , '8201010202' , '8201010210' ) THEN nvl(avg_bal, 0)
                           ELSE 0
                         END) AS dep_avg_bal_dq
                    ,SUM(CASE
                           WHEN prod_cd IN ( '820101010201' , '820101010202' , '820101010203' , '820101010204' , '820101010801' , '820101010802' , '820101010803' , '820101010804' , '820101010805' , '820101020201' , '820101020202' , '820101020203' , '820101020204' ) THEN nvl(avg_bal, 0)
                           ELSE 0
                         END) AS dep_avg_bal_1Ylower_dq
                    ,SUM(CASE
                           WHEN ( substr(prod_cd, 1, 4) = '8201' AND substr(prod_cd, 1, 10) <> '8201010301' ) THEN nvl(avg_bal, 0)
                           ELSE 0
                         END) AS dep_avg_bal_no_zyx
                    ,SUM(CASE
                           WHEN ( substr(prod_cd, 1, 10) = '8201010301' ) THEN nvl(avg_bal, 0)
                           ELSE 0
                         END) AS dep_avg_bal_zyx
            FROM    app_iftp.adm_papp_ftp_eva_acct_summ_rst_inf zh_1_1
            LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd zh_1_2
            ON      zh_1_2.org_id = zh_1_1.assess_org_cd
            AND     zh_1_2.dt = zh_1_1.dt
            and  zh_1_2.eff_sts_ind='1'
            WHERE   zh_1_1.dt = '${data_dt}'
            AND     zh_1_1.freq_dt = 'M'
            GROUP BY zh_1_1.dt , zh_1_2.tem_org_id
        ) V1
LEFT JOIN    (
                 SELECT  tem_org_id
                         ,SUM(CASE
                                WHEN loan_avg_bal_rank <= 10 THEN loan_avg_bal
                                ELSE 0
                              END) AS loan_avg_bal_TOP10
                         ,SUM(CASE
                                WHEN dep_avg_bal_rank <= 10 THEN dep_avg_bal
                                ELSE 0
                              END) AS dep_avg_bal_TOP10
                 FROM    (
                             SELECT  zh_1_2.tem_org_id
                                     ,zh_1_1.cust_id
                                     ,ROW_NUMBER() OVER ( PARTITION BY zh_1_2.tem_org_id ORDER BY nvl(zh_1_1.loan_avg_bal, 0) DESC ) AS loan_avg_bal_rank
                                     ,ROW_NUMBER() OVER ( PARTITION BY zh_1_2.tem_org_id ORDER BY nvl(zh_1_1.dep_avg_bal, 0) DESC )  AS dep_avg_bal_rank
                                     ,loan_avg_bal
                                     ,dep_avg_bal
                             FROM    (
                                         SELECT  dt
                                                 ,assess_org_cd
                                                 ,cust_id
                                                 ,SUM(CASE
                                                        WHEN substr(prod_cd, 1, 4) = '8101' THEN nvl(avg_bal, 0)
                                                        ELSE 0
                                                      END) AS loan_avg_bal
                                                 ,SUM(CASE
                                                        WHEN substr(prod_cd, 1, 4) = '8201' THEN nvl(avg_bal, 0)
                                                        ELSE 0
                                                      END) AS dep_avg_bal
                                         FROM    app_iftp.adm_papp_ftp_eva_acct_summ_rst_inf
                                         WHERE   dt = '${data_dt}'
                                         AND     freq_dt = 'M'
                                         AND     length(nvl(cust_id, '0')) > 2
                                         GROUP BY dt , assess_org_cd , cust_id
                                     ) zh_1_1
                             LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd zh_1_2
                             ON      zh_1_1.assess_org_cd = zh_1_2.org_id
                             AND     zh_1_1.dt = zh_1_2.dt
                             and  zh_1_2.eff_sts_ind='1'
                         ) zh_1_01 --最大户数占比
                 GROUP BY tem_org_id
             ) v2
ON      v1.tem_org_id = v2.tem_org_id
where v1.tem_org_id<>''
union all
SELECT  v1.sbr_org_id  as  org_id
        ,v2.loan_avg_bal_TOP10
        ,v2.dep_avg_bal_TOP10
        ,v1.loan_avg_bal
        ,v1.dep_avg_bal
        ,v1.dep_avg_bal_hq_no_zyx
        ,v1.dep_avg_bal_dq
        ,v1.dep_avg_bal_1Ylower_dq
        ,v1.dep_avg_bal_no_zyx
        ,v1.dep_avg_bal_zyx
FROM    (
            SELECT  zh_1_1.dt
                    ,zh_1_2.sbr_org_id
                    ,SUM(CASE
                           WHEN substr(prod_cd, 1, 4) = '8101' THEN nvl(avg_bal, 0)
                           ELSE 0
                         END) AS loan_avg_bal
                    ,SUM(CASE
                           WHEN substr(prod_cd, 1, 4) = '8201' THEN nvl(avg_bal, 0)
                           ELSE 0
                         END) AS dep_avg_bal
                    ,SUM(CASE
                           WHEN substr(prod_cd, 1, 10) IN ( '8201010101' , '8201010201' ) THEN nvl(avg_bal, 0)
                           ELSE 0
                         END) AS dep_avg_bal_hq_no_zyx
                    ,SUM(CASE
                           WHEN substr(prod_cd, 1, 10) IN ( '8201010102' , '8201010108' , '8201010202' , '8201010210' ) THEN nvl(avg_bal, 0)
                           ELSE 0
                         END) AS dep_avg_bal_dq
                    ,SUM(CASE
                           WHEN prod_cd IN ( '820101010201' , '820101010202' , '820101010203' , '820101010204' , '820101010801' , '820101010802' , '820101010803' , '820101010804' , '820101010805' , '820101020201' , '820101020202' , '820101020203' , '820101020204' ) THEN nvl(avg_bal, 0)
                           ELSE 0
                         END) AS dep_avg_bal_1Ylower_dq
                    ,SUM(CASE
                           WHEN ( substr(prod_cd, 1, 4) = '8201' AND substr(prod_cd, 1, 10) <> '8201010301' ) THEN nvl(avg_bal, 0)
                           ELSE 0
                         END) AS dep_avg_bal_no_zyx
                    ,SUM(CASE
                           WHEN ( substr(prod_cd, 1, 10) = '8201010301' ) THEN nvl(avg_bal, 0)
                           ELSE 0
                         END) AS dep_avg_bal_zyx
            FROM    app_iftp.adm_papp_ftp_eva_acct_summ_rst_inf zh_1_1
            LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd zh_1_2
            ON      zh_1_2.org_id = zh_1_1.assess_org_cd
            AND     zh_1_2.dt = zh_1_1.dt
            and  zh_1_2.eff_sts_ind='1'
            WHERE   zh_1_1.dt = '${data_dt}'
            AND     zh_1_1.freq_dt = 'M'
            GROUP BY zh_1_1.dt , zh_1_2.sbr_org_id
        ) V1
LEFT JOIN    (
                 SELECT  sbr_org_id
                         ,SUM(CASE
                                WHEN loan_avg_bal_rank <= 10 THEN loan_avg_bal
                                ELSE 0
                              END) AS loan_avg_bal_TOP10
                         ,SUM(CASE
                                WHEN dep_avg_bal_rank <= 10 THEN dep_avg_bal
                                ELSE 0
                              END) AS dep_avg_bal_TOP10
                 FROM    (
                             SELECT  zh_1_2.sbr_org_id
                                     ,zh_1_1.cust_id
                                     ,ROW_NUMBER() OVER ( PARTITION BY zh_1_2.sbr_org_id ORDER BY nvl(zh_1_1.loan_avg_bal, 0) DESC ) AS loan_avg_bal_rank
                                     ,ROW_NUMBER() OVER ( PARTITION BY zh_1_2.sbr_org_id ORDER BY nvl(zh_1_1.dep_avg_bal, 0) DESC )  AS dep_avg_bal_rank
                                     ,loan_avg_bal
                                     ,dep_avg_bal
                             FROM    (
                                         SELECT  dt
                                                 ,assess_org_cd
                                                 ,cust_id
                                                 ,SUM(CASE
                                                        WHEN substr(prod_cd, 1, 4) = '8101' THEN nvl(avg_bal, 0)
                                                        ELSE 0
                                                      END) AS loan_avg_bal
                                                 ,SUM(CASE
                                                        WHEN substr(prod_cd, 1, 4) = '8201' THEN nvl(avg_bal, 0)
                                                        ELSE 0
                                                      END) AS dep_avg_bal
                                         FROM    app_iftp.adm_papp_ftp_eva_acct_summ_rst_inf
                                         WHERE   dt = '${data_dt}'
                                         AND     freq_dt = 'M'
                                         AND     length(nvl(cust_id, '0')) > 2
                                         GROUP BY dt , assess_org_cd , cust_id
                                     ) zh_1_1
                             LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd zh_1_2
                             ON      zh_1_1.assess_org_cd = zh_1_2.org_id
                             AND     zh_1_1.dt = zh_1_2.dt
                             and  zh_1_2.eff_sts_ind='1'
                         ) zh_1_01 --最大户数占比--现在用的是支行，如果要改为分行，需要改sql,把sbr_org_id改为brc_org_id
                 GROUP BY sbr_org_id
             ) v2
ON      v1.sbr_org_id = v2.sbr_org_id
where v1.sbr_org_id<>''
union ALL
SELECT  v1.brc_org_id  as  org_id
        ,v2.loan_avg_bal_TOP10
        ,v2.dep_avg_bal_TOP10
        ,v1.loan_avg_bal
        ,v1.dep_avg_bal
        ,v1.dep_avg_bal_hq_no_zyx
        ,v1.dep_avg_bal_dq
        ,v1.dep_avg_bal_1Ylower_dq
        ,v1.dep_avg_bal_no_zyx
        ,v1.dep_avg_bal_zyx
FROM    (
            SELECT  zh_1_1.dt
                    ,zh_1_2.brc_org_id
                    ,SUM(CASE
                           WHEN substr(prod_cd, 1, 4) = '8101' THEN nvl(avg_bal, 0)
                           ELSE 0
                         END) AS loan_avg_bal
                    ,SUM(CASE
                           WHEN substr(prod_cd, 1, 4) = '8201' THEN nvl(avg_bal, 0)
                           ELSE 0
                         END) AS dep_avg_bal
                    ,SUM(CASE
                           WHEN substr(prod_cd, 1, 10) IN ( '8201010101' , '8201010201' ) THEN nvl(avg_bal, 0)
                           ELSE 0
                         END) AS dep_avg_bal_hq_no_zyx
                    ,SUM(CASE
                           WHEN substr(prod_cd, 1, 10) IN ( '8201010102' , '8201010108' , '8201010202' , '8201010210' ) THEN nvl(avg_bal, 0)
                           ELSE 0
                         END) AS dep_avg_bal_dq
                    ,SUM(CASE
                           WHEN prod_cd IN ( '820101010201' , '820101010202' , '820101010203' , '820101010204' , '820101010801' , '820101010802' , '820101010803' , '820101010804' , '820101010805' , '820101020201' , '820101020202' , '820101020203' , '820101020204' ) THEN nvl(avg_bal, 0)
                           ELSE 0
                         END) AS dep_avg_bal_1Ylower_dq
                    ,SUM(CASE
                           WHEN ( substr(prod_cd, 1, 4) = '8201' AND substr(prod_cd, 1, 10) <> '8201010301' ) THEN nvl(avg_bal, 0)
                           ELSE 0
                         END) AS dep_avg_bal_no_zyx
                    ,SUM(CASE
                           WHEN ( substr(prod_cd, 1, 10) = '8201010301' ) THEN nvl(avg_bal, 0)
                           ELSE 0
                         END) AS dep_avg_bal_zyx
            FROM    app_iftp.adm_papp_ftp_eva_acct_summ_rst_inf zh_1_1
            LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd zh_1_2
            ON      zh_1_2.org_id = zh_1_1.assess_org_cd
            AND     zh_1_2.dt = zh_1_1.dt
            and  zh_1_2.eff_sts_ind='1'
            WHERE   zh_1_1.dt = '${data_dt}'
            AND     zh_1_1.freq_dt = 'M'
            GROUP BY zh_1_1.dt , zh_1_2.brc_org_id
        ) V1
LEFT JOIN    (
                 SELECT  brc_org_id
                         ,SUM(CASE
                                WHEN loan_avg_bal_rank <= 10 THEN loan_avg_bal
                                ELSE 0
                              END) AS loan_avg_bal_TOP10
                         ,SUM(CASE
                                WHEN dep_avg_bal_rank <= 10 THEN dep_avg_bal
                                ELSE 0
                              END) AS dep_avg_bal_TOP10
                 FROM    (
                             SELECT  zh_1_2.brc_org_id
                                     ,zh_1_1.cust_id
                                     ,ROW_NUMBER() OVER ( PARTITION BY zh_1_2.brc_org_id ORDER BY nvl(zh_1_1.loan_avg_bal, 0) DESC ) AS loan_avg_bal_rank
                                     ,ROW_NUMBER() OVER ( PARTITION BY zh_1_2.brc_org_id ORDER BY nvl(zh_1_1.dep_avg_bal, 0) DESC )  AS dep_avg_bal_rank
                                     ,loan_avg_bal
                                     ,dep_avg_bal
                             FROM    (
                                         SELECT  dt
                                                 ,assess_org_cd
                                                 ,cust_id
                                                 ,SUM(CASE
                                                        WHEN substr(prod_cd, 1, 4) = '8101' THEN nvl(avg_bal, 0)
                                                        ELSE 0
                                                      END) AS loan_avg_bal
                                                 ,SUM(CASE
                                                        WHEN substr(prod_cd, 1, 4) = '8201' THEN nvl(avg_bal, 0)
                                                        ELSE 0
                                                      END) AS dep_avg_bal
                                         FROM    app_iftp.adm_papp_ftp_eva_acct_summ_rst_inf
                                         WHERE   dt = '${data_dt}'
                                         AND     freq_dt = 'M'
                                         AND     length(nvl(cust_id, '0')) > 2
                                         GROUP BY dt , assess_org_cd , cust_id
                                     ) zh_1_1
                             LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd zh_1_2
                             ON      zh_1_1.assess_org_cd = zh_1_2.org_id
                             AND     zh_1_1.dt = zh_1_2.dt
                             and  zh_1_2.eff_sts_ind='1'
                         ) zh_1_01 --最大户数占比
                 GROUP BY brc_org_id
             ) v2
ON      v1.brc_org_id = v2.brc_org_id
where v1.brc_org_id<>''
;



-- 有效贷款户户均贷款规模	YXGL_0003
-- 存量有效存款户户均存款规模	YXGL_0004
-- 新增有效存款户户均存款规模	YXGL_0005
-- 存量有效贷款户户均贷款规模	YXGL_0006
-- 挽回有效贷款户户均贷款规模	YXGL_0007
-- 新增有效贷款户户均贷款规模	YXGL_0008
-- 最大十户存款占比	YXGL_0009
-- 最大十户贷款占比	YXGL_0010

--**************************有效性管理**********************************
INSERT INTO LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_01 PARTITION (dt = '${data_dt}')
-- 有效户户均存贷规模	YXGL_0001
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0001'                       AS IND_ID
        ,(T.有效户存款月日均+T.有效户贷款月日均)/if(T.有效户户数=0,null,T.有效户户数)                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 有效户存贷规模	YXGL_0001_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0001_01'                       AS IND_ID
        ,T.有效户存款月日均+T.有效户贷款月日均                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 有效存款户户均存款规模	YXGL_0002
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0002'                       AS IND_ID
        ,T.存款有效户存款月日均/if(T.有效存款户数=0,null,T.有效存款户数)      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 存款有效户存款月日均	YXGL_0002_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0002_01'                       AS IND_ID
        ,T.存款有效户存款月日均      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 有效存款户数	YXGL_0002_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0002_02'                       AS IND_ID
        ,T.有效存款户数      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 有效贷款户户均贷款规模	YXGL_0003
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0003'                       AS IND_ID
        ,T.贷款有效户贷款月日均/if(T.有效贷款户=0,null,T.有效贷款户)      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 贷款有效户贷款月日均	YXGL_0003_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0003_01'                       AS IND_ID
        ,T.贷款有效户贷款月日均      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 有效贷款户数	YXGL_0003_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0003_02'                       AS IND_ID
        ,T.有效贷款户      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 存量有效存款户户均存款规模	YXGL_0004
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0004'                       AS IND_ID
        ,T.存量有效存款户_存款月日均/if(T.存量有效存款户数=0,null,T.存量有效存款户数)      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 存量有效存款户存款月日均余额	YXGL_0004_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0004_01'                       AS IND_ID
        ,T.存量有效存款户_存款月日均      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 存量有效存款户数	YXGL_0004_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0004_02'                       AS IND_ID
        ,T.存量有效存款户数      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 新增有效存款户户均存款规模	YXGL_0005
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0005'                       AS IND_ID
        ,T.新增有效存款户_存款月日均/if(T.新增有效存款户=0,null,T.新增有效存款户)       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 新增有效存款户存款月日均余额	YXGL_0005_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0005_01'                       AS IND_ID
        ,T.新增有效存款户_存款月日均      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 新增有效存款户	YXGL_0005_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0005_02'                       AS IND_ID
        ,T.新增有效存款户      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 存量有效贷款户户均贷款规模	YXGL_0006
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0006'                       AS IND_ID
        ,T.存量有效贷款户_贷款月日均/if(T.存量有效贷款户=0,null,T.存量有效贷款户)      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 存量有效贷款户贷款月日均余额	YXGL_0006_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0006_01'                       AS IND_ID
        ,T.存量有效贷款户_贷款月日均      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 存量有效贷款户数	YXGL_0006_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0006_02'                       AS IND_ID
        ,T.存量有效贷款户      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 挽回有效贷款户户均贷款规模	YXGL_0007
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0007'                       AS IND_ID
        ,T.挽回有效贷款户_贷款月日均/if(T.挽回有效贷款户=0,null,T.挽回有效贷款户)      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 挽回有效贷款户贷款月日均余额	YXGL_0007_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0007_01'                       AS IND_ID
        ,T.挽回有效贷款户_贷款月日均      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 挽回有效贷款户数	YXGL_0007_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0007_02'                       AS IND_ID
        ,T.挽回有效贷款户      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 新增有效贷款户户均贷款规模	YXGL_0008
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0008'                       AS IND_ID
        ,T.新增有效贷款户_贷款月日均/if(T.新增有效贷款户=0,null,T.新增有效贷款户)      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 新增有效贷款户贷款月日均余额	YXGL_0008_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0008_01'                       AS IND_ID
        ,T.新增有效贷款户_贷款月日均      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 新增有效贷款户数	YXGL_0008_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0008_02'                       AS IND_ID
        ,T.新增有效贷款户      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_HKGL_01 T
UNION ALL
-- 最大十户存款占比	YXGL_0009
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0009'                       AS IND_ID
        ,T.dep_avg_bal_TOP10/if(T.dep_avg_bal=0,null,T.dep_avg_bal)      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_YXGL_01 T
UNION ALL
-- TOP10存款客户存款月日均	YXGL_0009_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0009_01'                       AS IND_ID
        ,T.dep_avg_bal_TOP10      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_YXGL_01 T
UNION ALL
-- 存款月日均余额	YXGL_0009_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0009_02'                       AS IND_ID
        ,T.dep_avg_bal      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_YXGL_01 T
UNION ALL
-- 最大十户贷款占比	YXGL_0010
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0010'                       AS IND_ID
        ,T.loan_avg_bal_TOP10/if(T.loan_avg_bal=0,null,T.loan_avg_bal)      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_YXGL_01 T
UNION ALL
-- TOP10贷款客户贷款月日均	YXGL_0010_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0010_01'                       AS IND_ID
        ,T.loan_avg_bal_TOP10      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_YXGL_01 T
UNION ALL
-- 贷款月日均余额	YXGL_0010_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'YXGL_0010_02'                       AS IND_ID
        ,T.loan_avg_bal      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_YXGL_01 T
;

-- 价值管理
-- 单位规模营业收入	JZGL_0001
-- 单位存款规模营业收入	JZGL_0002
-- 单位贷款规模营业收入	JZGL_0003
-- 单位存贷规模中间业务收入	JZGL_0004
-- 存款付息率	JZGL_0005
-- 资源性存款占比	JZGL_0006
-- 活期存款占比	JZGL_0007
-- 1年及以下定期占比	JZGL_0008
-- 存续贷款利率	JZGL_0009
-- 续作贷款利率	JZGL_0010
-- 新发放贷款利率	JZGL_0011

DROP TABLE if EXISTS HGL_ORG_TAG_IND_DD_3_JZGL_01;
CREATE TABLE IF NOT EXISTS HGL_ORG_TAG_IND_DD_3_JZGL_01 as
SELECT  t1.org_id
        ,t1.org_nm
        ,case when (int(substr(t1.dt,1,4))%4 = 0 and int(substr(t1.dt,1,4))%100<>0) or (int(substr(t1.dt,1,4))%400=0) then 366 else 365 end  本年总天数
        ,DATEDIFF(TO_DATE(t1.dt, 'yyyymmdd'), DATETRUNC(to_date(t1.dt, 'yyyymmdd'), 'yyyy'), 'dd')+1   年累计天数
        ,sum(CASE
               WHEN item_id = '01' THEN nvl(item_value_y, 0)
               ELSE 0
             END) AS 一_营业收入_Y
        ,sum(CASE
               WHEN item_id = '02' THEN nvl(item_value_y, 0)
               ELSE 0
             END) AS _一_存贷FTP营业收入_Y
        ,sum(CASE
               WHEN item_id = '03' THEN nvl(item_value_y, 0)
               ELSE 0
             END) AS _1_贷款业务FTP收入_K__Y
        ,sum(CASE
               WHEN item_id = '18' THEN nvl(item_value_y, 0)
               ELSE 0
             END) AS _2_存款业务FTP收入_K__Y
        ,sum(CASE
               WHEN item_id = '42' THEN nvl(item_value_y, 0)
               ELSE 0
             END) AS _二_中间业务收入_Y
        ,sum(CASE
               WHEN item_id = 'FZ0030' THEN nvl(item_value_y, 0)
               ELSE 0
             END) AS 贷款日均_Y
        ,sum(CASE
               WHEN item_id = 'FZ0031' THEN nvl(item_value_y, 0)
               ELSE 0
             END) AS 存款日均_Y
        ,sum(CASE
               WHEN item_id = 'FZ0005' THEN nvl(item_value_m, 0)
               ELSE 0
             END) AS 存款付息率_m
FROM    app_iftp.adm_papp_ftp_org_eva_k_dd t1
LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd t2
ON      t1.org_id = t2.org_id
AND     t1.dt = t2.dt
and  t2.eff_sts_ind='1'
WHERE   t1.dt = '${data_dt}'
AND     t1.org_lvl IN  ('4','5','6')  --分行，支行，团队
GROUP BY t1.org_id , t1.org_nm,t1.dt
;


--存续、续做、新发放贷款明细
DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_JZGL_02;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_JZGL_02 AS
SELECT  t1.cst_id 客户号
        ,t9.ctr_serno 合同号 --ctr_serno
        ,t5.dbil_id 借据编号
        ,t8.cst_typ_cd 客户类型
        ,t1.dt 日期
        ,IF(t2.brc_org_nm LIKE '%村镇%', '村行', '总分行') 机构
        ,t2.brc_org_id 机构号
        ,t2.brc_org_nm 机构名称
        ,sbr_org_id 支行编号
        ,sbr_org_nm 支行名称
        ,tem_org_id 团队编号
        ,tem_org_nm 团队名称
        ,t1.mgr 客户经理
        ,t1.pd_cd 五级产品码
        ,t3.p_lvl1_id 四级产品码
        ,t3.p_lvl1_desc 四级产品码名称
        ,IF(t2.brc_org_nm LIKE '%村镇%', t7.type_ch, t7.type) 贷款分类
        ,substr(t5.loan_usg_cd, 1, 2) 贷款用途 --01经营， 02消费
        ,t5.pd_cd 产品代码
        ,t6.pd_nm 产品名称
        ,t1.cur_bal 当前余额
        ,t5.dtrb_dt 发放日期
        ,t5.apnt_mtu_day 约定到期日期
        ,round(sum(t1.cur_bal * t4.AVG_PRC / t4.QUO_UNT) / 10000, 2)                                                                                                       AS 余额
        ,round(sum(t1.mon_acm_bal * t4.AVG_PRC / t4.QUO_UNT) / ( datediff(to_date(t1.dt, 'yyyymmdd'), datetrunc(to_date(t1.dt, 'yyyymmdd'), 'mm'), 'dd') + 1 ) / 10000, 2) AS 月日均
        ,round(sum(t1.intr_inc_xps_mon_acm * t4.AVG_PRC / t4.QUO_UNT) / 10000, 2)                                                                                          AS 利息收入
        ,round(sum(t1.fnl_ftp_intr_mon_acm * t4.AVG_PRC / t4.QUO_UNT) / 10000, 2)                                                                                          AS fnl_ftp_intr_mon_acm
        ,datediff(to_date(t1.dt, 'yyyymmdd'), datetrunc(to_date(t1.dt, 'yyyymmdd'), 'mm'), 'dd') + 1                                                                       AS month_days
        ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t1.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'), DATETRUNC(to_date(t1.dt, 'yyyymmdd'), 'yyyy'), 'dd')               AS year_days
        ,t9.hpn_typ_cd
        ,t5.bus_ctr_id
        ,MONTHS_BETWEEN(TO_DATE(DECODE(t5.end_dt, '18991231', t5.apnt_mtu_day, t5.end_dt), 'yyyymmdd'), TO_DATE(t5.dtrb_dt, 'yyyymmdd')) 期限
        ,round(sum(t5.amt * t4.AVG_PRC / t4.QUO_UNT) / 10000, 2) 发放金额
        ,t5.exe_intr_rat 执行利率
        ,t9.ctr_bgn_dt 合同开始日期 --ctr_bgn_dt
        ,DECODE(t9.tmt_dt, '18991231', t9.ctr_mtu_dt, t9.tmt_dt) 合同结束日期 --ctr_mtu_dt   --tmt_dt
        ,t9.ctr_amt 合同金额
        ,t9.exec_intr_rat 合同执行利率 --exec_intr_rat
FROM    (
            SELECT  src_act_id
                    ,pd_cd
                    ,ccy_cd
                    ,acs_org_cd
                    ,mgr
                    ,cst_id
                    ,SUM(cur_bal) cur_bal
                    ,SUM(mon_acm_bal) mon_acm_bal
                    ,SUM(intr_inc_xps_mon_acm) intr_inc_xps_mon_acm
                    ,SUM(fnl_ftp_intr_mon_acm) fnl_ftp_intr_mon_acm
                    ,dt
            FROM    edw.dws_bus_fin_ftp_act_smy_inf_dd
            WHERE   pd_cd LIKE '8101%'
            AND     dt = '${data_dt}'
            -- AND     dt IN ( '20221231' , '20230731' , '20231130' , '20231231' , '20240131' , '20240229' , '20240331' , '20240430' , '20240531' , '20240630' , '20240731' , '20240831' )
            GROUP BY src_act_id , pd_cd , ccy_cd , acs_org_cd , cst_id , dt , mgr
        ) t1
INNER JOIN    edw.dim_hr_org_mng_org_tree_dd t2
ON      t1.acs_org_cd = t2.org_id
AND     t2.dt = t1.dt
and  t2.eff_sts_ind='1'
LEFT JOIN    app_iftp.adm_papp_ftp_dim_ftp_product_dd t3
ON      t1.pd_cd = t3.p_lvl0_id
LEFT JOIN    edw.DIM_BUS_COM_EXR_INF_DD t4 --汇率信息表
ON      t1.CCY_CD = t4.CCY_CD --币种代码
AND     t1.dt = t4.dt
LEFT JOIN    edw.dws_bus_loan_dbil_inf_dd t5 --贷款借据信息汇总
ON      t1.src_act_id = t5.dbil_id
AND     t5.dt = t1.dt
LEFT JOIN    edw.DIM_BUS_LOAN_PRD_FRML_DD t6
ON      t5.pd_cd = t6.prd_no
AND     t6.dt = t1.dt
LEFT JOIN    lab_risk_dev.qbi_file_20240906_16_39_24 t7
ON      t7.pd_nm = t3.p_lvl1_desc
AND     substr(t7.pt, 1, 1) = '2'
LEFT JOIN    edw.dws_cst_bas_inf_dd t8
ON      t1.cst_id = t8.cst_id
AND     t8.dt = t1.dt
LEFT JOIN    edw.dim_bus_loan_ctr_bse_inf_dd t9 --信贷合同信息
ON      t9.ctr_serno = t5.bus_ctr_id
AND     t9.dt = t1.dt
GROUP BY t1.cst_id , t9.ctr_serno , t5.dbil_id , t8.cst_typ_cd , t1.dt , IF(t2.brc_org_nm LIKE '%村镇%', '村行', '总分行') , t2.brc_org_id , t2.brc_org_nm , sbr_org_id , sbr_org_nm , tem_org_id , tem_org_nm , t1.mgr , t1.pd_cd , t3.p_lvl1_id , t3.p_lvl1_desc , IF(t2.brc_org_nm LIKE '%村镇%', t7.type_ch, t7.type) , substr(t5.loan_usg_cd, 1, 2) , t5.pd_cd , t6.pd_nm , t1.cur_bal , t5.dtrb_dt , t5.apnt_mtu_day , datediff(to_date(t1.dt, 'yyyymmdd'), datetrunc(to_date(t1.dt, 'yyyymmdd'), 'mm'), 'dd') + 1 , DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t1.dt, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'), DATETRUNC(to_date(t1.dt, 'yyyymmdd'), 'yyyy'), 'dd') , t9.hpn_typ_cd , t5.bus_ctr_id , MONTHS_BETWEEN(TO_DATE(DECODE(t5.end_dt, '18991231', t5.apnt_mtu_day, t5.end_dt), 'yyyymmdd'), TO_DATE(t5.dtrb_dt, 'yyyymmdd')) , t5.amt , t5.exe_intr_rat , t9.ctr_bgn_dt , DECODE(t9.tmt_dt, '18991231', t9.ctr_mtu_dt, t9.tmt_dt) , t9.ctr_amt , t9.exec_intr_rat;

--存续、续做、年度新发放
DROP TABLE IF EXISTS lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_JZGL_03;
CREATE TABLE IF NOT EXISTS lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_JZGL_03 AS
SELECT  IF(SUBSTR(t2.min_hpn_dt, 1, 4) = SUBSTR(t1.日期, 1, 4), '首笔', '续作') 发放类型
        ,t1.机构
        ,t1.机构名称 机构名称
        ,t1.支行编号
        ,t1.支行名称
        ,t1.团队编号
        ,t1.团队名称
        ,t1.客户经理
        ,t1.客户号
        ,t1.客户类型
        ,t1.合同号
        ,t1.借据编号
        ,t1.贷款分类 贷款分类
        ,t1.五级产品码
        ,t1.四级产品码名称
        ,t1.贷款用途
        ,SUM(t1.月日均) 月日均
        ,SUM(t1.余额) 余额
        ,SUM(t1.利息收入) 利息收入
        ,SUM(IF(t1.利息收入 < 0, - t1.利息收入, 0)) 逾期利息收入
        ,SUM(t1.期限 * t1.发放金额 * t1.执行利率 * 1.2) term_amt_rate
        ,SUM(t1.期限 * t1.发放金额) term_amt
        ,SUM(t1.期限) term
        ,SUM(t1.发放金额 * t1.执行利率 * 1.2) 执行利息收入
        ,SUM(t1.发放金额) 发放金额
        ,DATEDIFF(to_date(t1.日期, 'yyyymmdd'), datetrunc(to_date(t1.日期, 'yyyymmdd'), 'mm'), 'dd') + 1 月天数
        ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t1.日期, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'), DATETRUNC(to_date(t1.日期, 'yyyymmdd'), 'yyyy'), 'dd') 年天数
        ,t1.日期 日期
FROM    (
            SELECT  *
            FROM    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_JZGL_02
            WHERE   SUBSTR(发放日期, 1, 6) = SUBSTR(日期, 1, 6)
        ) t1  --当月发放
LEFT JOIN    (
SELECT  t.cst_id
        ,min(t.ctr_bgn_dt) min_hpn_dt
FROM    edw.dim_bus_loan_ctr_bse_inf_dd t --edw.dim_bus_loan_ctr_bse_inf_dd t
WHERE   t.dt = '${data_dt}'
AND     ( t.prd_no NOT IN ( '2001020101002' , '2001010101002' )
OR t.ctr_sts_cd <> '' )
--剔除未签约的泰e贷
and   t.prd_no not like '2002%'    --剔除信用卡
and   t.reg_typ_cd in ('01','02')  --限制合同登记类型代码为01用信申请 02资产池授信
GROUP BY t.cst_id
) t2  --最早贷款合同开始日期
ON      t1.客户号 = t2.cst_id
GROUP BY IF(SUBSTR(t2.min_hpn_dt, 1, 4) = SUBSTR(t1.日期, 1, 4), '首笔', '续作') , t1.五级产品码 , t1.机构 , t1.机构名称 , t1.支行编号 , t1.支行名称 , t1.团队编号 , t1.团队名称 , t1.客户经理 , t1.客户号 , t1.客户类型 , t1.合同号 , t1.借据编号 , t1.贷款分类 , t1.四级产品码名称 , t1.贷款用途 , t1.日期 , DATEDIFF(to_date(t1.日期, 'yyyymmdd'), datetrunc(to_date(t1.日期, 'yyyymmdd'), 'mm'), 'dd') + 1 , DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t1.日期, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'), DATETRUNC(to_date(t1.日期, 'yyyymmdd'), 'yyyy'), 'dd')
UNION ALL
SELECT  '到期' 发放类型
        ,t1.机构
        ,t1.机构名称 机构名称
        ,t1.支行编号
        ,t1.支行名称
        ,t1.团队编号
        ,t1.团队名称
        ,t1.客户经理
        ,t1.客户号
        ,t1.客户类型
        ,t1.合同号
        ,t1.借据编号
        ,t1.贷款分类 贷款分类
        ,t1.五级产品码
        ,t1.四级产品码名称
        ,t1.贷款用途
        ,SUM(t1.月日均) 月日均
        ,SUM(t1.余额) 余额
        ,SUM(t1.利息收入) 利息收入
        ,SUM(IF(t1.利息收入 < 0, - t1.利息收入, 0)) 逾期利息收入
        ,SUM(t1.期限 * t1.发放金额 * t1.执行利率 * 1.2) term_amt_rate
        ,SUM(t1.期限 * t1.发放金额) term_amt
        ,SUM(t1.期限) term
        ,SUM(t1.发放金额 * t1.执行利率 * 1.2) 执行利息收入
        ,SUM(t1.发放金额) 发放金额
        ,DATEDIFF(to_date(t1.日期, 'yyyymmdd'), datetrunc(to_date(t1.日期, 'yyyymmdd'), 'mm'), 'dd') + 1 月天数
        ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t1.日期, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'), DATETRUNC(to_date(t1.日期, 'yyyymmdd'), 'yyyy'), 'dd') 年天数
        ,t1.日期 日期
FROM    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_JZGL_02 t1
WHERE   SUBSTR(t1.发放日期, 1, 6) <> SUBSTR(t1.日期, 1, 6)     --非当月发放，当月到期
AND     SUBSTR(t1.约定到期日期, 1, 6) = SUBSTR(t1.日期, 1, 6)
GROUP BY '到期' , t1.五级产品码 , t1.机构 , t1.机构名称 , t1.支行编号 , t1.支行名称 , t1.团队编号 , t1.团队名称 , t1.客户经理 , t1.客户号 , t1.客户类型 , t1.合同号 , t1.借据编号 , t1.贷款分类 , t1.四级产品码名称 , t1.贷款用途 , t1.日期 , DATEDIFF(to_date(t1.日期, 'yyyymmdd'), datetrunc(to_date(t1.日期, 'yyyymmdd'), 'mm'), 'dd') + 1 , DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t1.日期, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'), DATETRUNC(to_date(t1.日期, 'yyyymmdd'), 'yyyy'), 'dd')
UNION ALL
SELECT  '存续' 发放类型
        ,t1.机构
        ,t1.机构名称 机构名称
        ,t1.支行编号
        ,t1.支行名称
        ,t1.团队编号
        ,t1.团队名称
        ,t1.客户经理
        ,t1.客户号
        ,t1.客户类型
        ,t1.合同号
        ,t1.借据编号
        ,t1.贷款分类 贷款分类
        ,t1.五级产品码
        ,t1.四级产品码名称
        ,t1.贷款用途
        ,SUM(t1.月日均) 月日均
        ,SUM(t1.余额) 余额
        ,SUM(t1.利息收入) 利息收入
        ,SUM(IF(t1.利息收入 < 0, - t1.利息收入, 0)) 逾期利息收入
        ,SUM(t1.期限 * t1.发放金额 * t1.执行利率 * 1.2) term_amt_rate
        ,SUM(t1.期限 * t1.发放金额) term_amt
        ,SUM(t1.期限) term
        ,SUM(t1.发放金额 * t1.执行利率 * 1.2) 执行利息收入
        ,SUM(t1.发放金额) 发放金额
        ,DATEDIFF(to_date(t1.日期, 'yyyymmdd'), datetrunc(to_date(t1.日期, 'yyyymmdd'), 'mm'), 'dd') + 1 月天数
        ,DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t1.日期, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'), DATETRUNC(to_date(t1.日期, 'yyyymmdd'), 'yyyy'), 'dd') 年天数
        ,t1.日期 日期
FROM    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_JZGL_02 t1
WHERE   SUBSTR(t1.发放日期, 1, 6) <> SUBSTR(t1.日期, 1, 6)    --非当月发放非当月到期
AND     SUBSTR(t1.约定到期日期, 1, 6) <> SUBSTR(t1.日期, 1, 6)
GROUP BY '存续' , t1.五级产品码 , t1.机构 , t1.机构名称 , t1.支行编号 , t1.支行名称 , t1.团队编号 , t1.团队名称 , t1.客户经理 , t1.客户号 , t1.客户类型 , t1.合同号 , t1.借据编号 , t1.贷款分类 , t1.四级产品码名称 , t1.贷款用途 , t1.日期 , DATEDIFF(to_date(t1.日期, 'yyyymmdd'), datetrunc(to_date(t1.日期, 'yyyymmdd'), 'mm'), 'dd') + 1 , DATEDIFF(TO_DATE(ADD_MONTHS(DATETRUNC(to_date(t1.日期, 'yyyymmdd'), 'yyyy'), 12), 'yyyy-mm-dd'), DATETRUNC(to_date(t1.日期, 'yyyymmdd'), 'yyyy'), 'dd');

DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_JZGL_04;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_JZGL_04 AS
SELECT
        d2.tem_org_id  as org_id
        ,sum(CASE
               WHEN 发放类型 = '首笔' THEN term_amt_rate
               ELSE 0
             END) AS 执行利息收入首笔
        ,sum(CASE
               WHEN 发放类型 = '首笔' THEN term_amt
               ELSE 0
             END) AS 发放金额首笔
        ,CASE
           WHEN sum(CASE
                      WHEN 发放类型 = '首笔' THEN term_amt
                      ELSE 0
                    END) = 0 THEN 0
           ELSE sum(CASE
                      WHEN 发放类型 = '首笔' THEN term_amt_rate
                      ELSE 0
                    END) / sum(CASE
                                 WHEN 发放类型 = '首笔' THEN term_amt
                                 ELSE 0
                               END)
         END      AS 期限加权执行利率首笔
        ,sum(CASE
               WHEN 发放类型 = '续作' THEN term_amt_rate
               ELSE 0
             END) AS 执行利息收入续作
        ,sum(CASE
               WHEN 发放类型 = '续作' THEN term_amt
               ELSE 0
             END) AS 发放金额续作
        ,CASE
           WHEN sum(CASE
                      WHEN 发放类型 = '续作' THEN term_amt
                      ELSE 0
                    END) = 0 THEN 0
           ELSE sum(CASE
                      WHEN 发放类型 = '续作' THEN term_amt_rate
                      ELSE 0
                    END) / sum(CASE
                                 WHEN 发放类型 = '续作' THEN term_amt
                                 ELSE 0
                               END)
         END      AS 期限加权执行利率续作
        ,sum(CASE
               WHEN 发放类型 = '到期' THEN term_amt_rate
               ELSE 0
             END) AS 执行利息收入到期
        ,sum(CASE
               WHEN 发放类型 = '到期' THEN term_amt
               ELSE 0
             END) AS 发放金额到期
        ,CASE
           WHEN sum(CASE
                      WHEN 发放类型 = '到期' THEN term_amt
                      ELSE 0
                    END) = 0 THEN 0
           ELSE sum(CASE
                      WHEN 发放类型 = '到期' THEN term_amt_rate
                      ELSE 0
                    END) / sum(CASE
                                 WHEN 发放类型 = '到期' THEN term_amt
                                 ELSE 0
                               END)
         END      AS 期限加权执行利率到期
        ,sum(CASE
               WHEN 发放类型 = '存续' THEN term_amt_rate
               ELSE 0
             END) AS 执行利息收入存续
        ,sum(CASE
               WHEN 发放类型 = '存续' THEN term_amt
               ELSE 0
             END) AS 发放金额存续
        ,CASE
           WHEN sum(CASE
                      WHEN 发放类型 = '存续' THEN term_amt
                      ELSE 0
                    END) = 0 THEN 0
           ELSE sum(CASE
                      WHEN 发放类型 = '存续' THEN term_amt_rate
                      ELSE 0
                    END) / sum(CASE
                                 WHEN 发放类型 = '存续' THEN term_amt
                                 ELSE 0
                               END)
         END      AS 期限加权执行利率存续
FROM    lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_JZGL_03 d1
LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd d2
ON      d1.支行编号 = d2.org_id
AND     d1.日期 = d2.dt
and  d2.eff_sts_ind='1'
WHERE   1 = 1
AND     substr(五级产品码, 1, 6) IN ( '810101' , '810105' , '810108' , '810109' , '810110' )
AND     d1.日期 = '${data_dt}'
GROUP BY  d2.tem_org_id
union ALL
SELECT
        d2.sbr_org_id  as org_id
        ,sum(CASE
               WHEN 发放类型 = '首笔' THEN term_amt_rate
               ELSE 0
             END) AS 执行利息收入首笔
        ,sum(CASE
               WHEN 发放类型 = '首笔' THEN term_amt
               ELSE 0
             END) AS 发放金额首笔
        ,CASE
           WHEN sum(CASE
                      WHEN 发放类型 = '首笔' THEN term_amt
                      ELSE 0
                    END) = 0 THEN 0
           ELSE sum(CASE
                      WHEN 发放类型 = '首笔' THEN term_amt_rate
                      ELSE 0
                    END) / sum(CASE
                                 WHEN 发放类型 = '首笔' THEN term_amt
                                 ELSE 0
                               END)
         END      AS 期限加权执行利率首笔
        ,sum(CASE
               WHEN 发放类型 = '续作' THEN term_amt_rate
               ELSE 0
             END) AS 执行利息收入续作
        ,sum(CASE
               WHEN 发放类型 = '续作' THEN term_amt
               ELSE 0
             END) AS 发放金额续作
        ,CASE
           WHEN sum(CASE
                      WHEN 发放类型 = '续作' THEN term_amt
                      ELSE 0
                    END) = 0 THEN 0
           ELSE sum(CASE
                      WHEN 发放类型 = '续作' THEN term_amt_rate
                      ELSE 0
                    END) / sum(CASE
                                 WHEN 发放类型 = '续作' THEN term_amt
                                 ELSE 0
                               END)
         END      AS 期限加权执行利率续作
        ,sum(CASE
               WHEN 发放类型 = '到期' THEN term_amt_rate
               ELSE 0
             END) AS 执行利息收入到期
        ,sum(CASE
               WHEN 发放类型 = '到期' THEN term_amt
               ELSE 0
             END) AS 发放金额到期
        ,CASE
           WHEN sum(CASE
                      WHEN 发放类型 = '到期' THEN term_amt
                      ELSE 0
                    END) = 0 THEN 0
           ELSE sum(CASE
                      WHEN 发放类型 = '到期' THEN term_amt_rate
                      ELSE 0
                    END) / sum(CASE
                                 WHEN 发放类型 = '到期' THEN term_amt
                                 ELSE 0
                               END)
         END      AS 期限加权执行利率到期
        ,sum(CASE
               WHEN 发放类型 = '存续' THEN term_amt_rate
               ELSE 0
             END) AS 执行利息收入存续
        ,sum(CASE
               WHEN 发放类型 = '存续' THEN term_amt
               ELSE 0
             END) AS 发放金额存续
        ,CASE
           WHEN sum(CASE
                      WHEN 发放类型 = '存续' THEN term_amt
                      ELSE 0
                    END) = 0 THEN 0
           ELSE sum(CASE
                      WHEN 发放类型 = '存续' THEN term_amt_rate
                      ELSE 0
                    END) / sum(CASE
                                 WHEN 发放类型 = '存续' THEN term_amt
                                 ELSE 0
                               END)
         END      AS 期限加权执行利率存续
FROM    lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_JZGL_03 d1
LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd d2
ON      d1.支行编号 = d2.org_id
AND     d1.日期 = d2.dt
and  d2.eff_sts_ind='1'
WHERE   1 = 1
AND     substr(五级产品码, 1, 6) IN ( '810101' , '810105' , '810108' , '810109' , '810110' )
AND     d1.日期 = '${data_dt}'
GROUP BY  d2.sbr_org_id
union ALL
SELECT
        d2.brc_org_id  as org_id
        ,sum(CASE
               WHEN 发放类型 = '首笔' THEN term_amt_rate
               ELSE 0
             END) AS 执行利息收入首笔
        ,sum(CASE
               WHEN 发放类型 = '首笔' THEN term_amt
               ELSE 0
             END) AS 发放金额首笔
        ,CASE
           WHEN sum(CASE
                      WHEN 发放类型 = '首笔' THEN term_amt
                      ELSE 0
                    END) = 0 THEN 0
           ELSE sum(CASE
                      WHEN 发放类型 = '首笔' THEN term_amt_rate
                      ELSE 0
                    END) / sum(CASE
                                 WHEN 发放类型 = '首笔' THEN term_amt
                                 ELSE 0
                               END)
         END      AS 期限加权执行利率首笔
        ,sum(CASE
               WHEN 发放类型 = '续作' THEN term_amt_rate
               ELSE 0
             END) AS 执行利息收入续作
        ,sum(CASE
               WHEN 发放类型 = '续作' THEN term_amt
               ELSE 0
             END) AS 发放金额续作
        ,CASE
           WHEN sum(CASE
                      WHEN 发放类型 = '续作' THEN term_amt
                      ELSE 0
                    END) = 0 THEN 0
           ELSE sum(CASE
                      WHEN 发放类型 = '续作' THEN term_amt_rate
                      ELSE 0
                    END) / sum(CASE
                                 WHEN 发放类型 = '续作' THEN term_amt
                                 ELSE 0
                               END)
         END      AS 期限加权执行利率续作
        ,sum(CASE
               WHEN 发放类型 = '到期' THEN term_amt_rate
               ELSE 0
             END) AS 执行利息收入到期
        ,sum(CASE
               WHEN 发放类型 = '到期' THEN term_amt
               ELSE 0
             END) AS 发放金额到期
        ,CASE
           WHEN sum(CASE
                      WHEN 发放类型 = '到期' THEN term_amt
                      ELSE 0
                    END) = 0 THEN 0
           ELSE sum(CASE
                      WHEN 发放类型 = '到期' THEN term_amt_rate
                      ELSE 0
                    END) / sum(CASE
                                 WHEN 发放类型 = '到期' THEN term_amt
                                 ELSE 0
                               END)
         END      AS 期限加权执行利率到期
        ,sum(CASE
               WHEN 发放类型 = '存续' THEN term_amt_rate
               ELSE 0
             END) AS 执行利息收入存续
        ,sum(CASE
               WHEN 发放类型 = '存续' THEN term_amt
               ELSE 0
             END) AS 发放金额存续
        ,CASE
           WHEN sum(CASE
                      WHEN 发放类型 = '存续' THEN term_amt
                      ELSE 0
                    END) = 0 THEN 0
           ELSE sum(CASE
                      WHEN 发放类型 = '存续' THEN term_amt_rate
                      ELSE 0
                    END) / sum(CASE
                                 WHEN 发放类型 = '存续' THEN term_amt
                                 ELSE 0
                               END)
         END      AS 期限加权执行利率存续
FROM    lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_JZGL_03 d1
LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd d2
ON      d1.支行编号 = d2.org_id
AND     d1.日期 = d2.dt
and  d2.eff_sts_ind='1'
WHERE   1 = 1
AND     substr(五级产品码, 1, 6) IN ( '810101' , '810105' , '810108' , '810109' , '810110' )
AND     d1.日期 = '${data_dt}'
GROUP BY  d2.brc_org_id
;


--**************************价值管理**********************************
INSERT INTO LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_01 PARTITION (dt = '${data_dt}')
-- 单位规模营业收入	JZGL_0001
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JZGL_0001'                       AS IND_ID
        ,T.一_营业收入_Y/(if((T.存款日均_Y+T.贷款日均_Y)=0,null,(T.存款日均_Y+T.贷款日均_Y))*T.本年总天数)/T.年累计天数    AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_JZGL_01 T
UNION ALL
-- 当年机构总营收	JZGL_0001_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JZGL_0001_01'                       AS IND_ID
        ,T.一_营业收入_Y                      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_JZGL_01 T
UNION ALL
-- 当年存贷规模  JZGL_0001_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JZGL_0001_02'                       AS IND_ID
        ,T.存款日均_Y+T.贷款日均_Y                      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_JZGL_01 T
UNION ALL
-- 单位存款规模营业收入	JZGL_0002
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JZGL_0002'                       AS IND_ID
        ,T._2_存款业务FTP收入_K__Y/(if(T.存款日均_Y=0,null,T.存款日均_Y)*T.本年总天数)/T.年累计天数                     AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_JZGL_01 T
UNION ALL
-- 当年机构存款业务营收	JZGL_0002_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JZGL_0002_01'                       AS IND_ID
        ,T._2_存款业务FTP收入_K__Y                      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_JZGL_01 T
UNION ALL
-- 当年存款日均余额	JZGL_0002_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JZGL_0002_02'                       AS IND_ID
        ,T.存款日均_Y                      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_JZGL_01 T
UNION ALL
-- 单位贷款规模营业收入	JZGL_0003
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JZGL_0003'                       AS IND_ID
        ,T._1_贷款业务FTP收入_K__Y/(if(T.贷款日均_Y=0,null,T.贷款日均_Y)*T.本年总天数)/T.年累计天数                     AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_JZGL_01 T
UNION ALL
-- 当年机构贷款业务营收	JZGL_0003_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JZGL_0003_01'                       AS IND_ID
        ,T._1_贷款业务FTP收入_K__Y                      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_JZGL_01 T
UNION ALL
-- 当年贷款日均余额	JZGL_0003_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JZGL_0003_02'                       AS IND_ID
        ,T.贷款日均_Y                      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_JZGL_01 T
UNION ALL
-- 单位存贷规模中间业务收入	JZGL_0004
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JZGL_0004'                       AS IND_ID
        ,T._二_中间业务收入_Y/(if((T.存款日均_Y+T.贷款日均_Y)=0,null,(T.存款日均_Y+T.贷款日均_Y))*T.本年总天数)/T.年累计天数                     AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_JZGL_01 T
UNION ALL
-- 当年机构中间业务收入	JZGL_0004_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JZGL_0004_01'                       AS IND_ID
        ,T._二_中间业务收入_Y                      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_JZGL_01 T
UNION ALL
-- 存款付息率	JZGL_0005
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JZGL_0005'                       AS IND_ID
        ,T.存款付息率_m                      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_JZGL_01 T
UNION ALL
-- 资源性存款占比	JZGL_0006
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JZGL_0006'                       AS IND_ID
        ,T.dep_avg_bal_zyx/if(T.dep_avg_bal=0,null,dep_avg_bal)                   AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_YXGL_01 T
UNION ALL
-- 资源性存款月日均	JZGL_0006_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JZGL_0006_01'                       AS IND_ID
        ,T.dep_avg_bal_zyx                      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_YXGL_01 T
UNION ALL
-- 活期存款占比	JZGL_0007
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JZGL_0007'                       AS IND_ID
        ,T.dep_avg_bal_hq_no_zyx/if(T.dep_avg_bal_no_zyx=0,null,dep_avg_bal_no_zyx)                        AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_YXGL_01 T
UNION ALL
-- 活期存款月日均_剔除资源性	JZGL_0007_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JZGL_0007_01'                       AS IND_ID
        ,T.dep_avg_bal_hq_no_zyx                      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_YXGL_01 T
UNION ALL
-- 存款月日均_剔除资源性	JZGL_0007_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JZGL_0007_02'                       AS IND_ID
        ,T.dep_avg_bal_no_zyx                      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_YXGL_01 T
UNION ALL
-- 1年及以下定期占比	JZGL_0008
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JZGL_0008'                       AS IND_ID
        ,T.dep_avg_bal_1Ylower_dq/if(T.dep_avg_bal_dq=0,null,dep_avg_bal_dq)                     AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_YXGL_01 T
UNION ALL
-- 1年及以下定期存款月日均_剔除资源性	JZGL_0008_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JZGL_0008_01'                       AS IND_ID
        ,T.dep_avg_bal_1Ylower_dq                     AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_YXGL_01 T
UNION ALL
-- 定期存款月日均_剔除资源性	JZGL_0008_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JZGL_0008_02'                       AS IND_ID
        ,T.dep_avg_bal_dq                    AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_YXGL_01 T
UNION ALL
-- 存续贷款利率	JZGL_0009
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JZGL_0009'                       AS IND_ID
        ,T.期限加权执行利率存续              AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_JZGL_04 T
UNION ALL
-- 续作贷款利率	JZGL_0010
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JZGL_0010'                       AS IND_ID
        ,T.期限加权执行利率续作                     AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_JZGL_04 T
UNION ALL
-- 新发放贷款利率	JZGL_0011
SELECT  T.ORG_ID                               AS ORG_ID
        ,'JZGL_0011'                       AS IND_ID
        ,T.期限加权执行利率首笔                    AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_JZGL_04 T
;


--队伍建设
drop table if exists LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_DWJS_01 purge;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_DWJS_01 AS
SELECT  A.org_id as ORG_ID
        ,A.COUNT_NUM   as  DWJS_0006_02  --在职
        ,nvl(B.COUNT_NUM, 0)  as DWJS_0006_01  --离职
        ,nvl(B.COUNT_NUM, 0) / A.COUNT_NUM AS DWJS_0006  --离职率
FROM    (
            SELECT  org.tem_org_id org_id
                    ,count(1) AS COUNT_NUM
            FROM    edw.dws_hr_empe_inf_dd t
            left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
            WHERE   t.dt = '${data_dt}'
                AND t.empe_sts_cd = '2'
                and nvl(org.tem_org_id,'')<>''
            GROUP BY org.tem_org_id
            union all
            SELECT  org.sbr_org_id org_id
                    ,count(1) AS COUNT_NUM
            FROM    edw.dws_hr_empe_inf_dd t
            left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
            WHERE   t.dt = '${data_dt}'
                AND t.empe_sts_cd = '2'
                and nvl(org.sbr_org_id,'')<>''
            GROUP BY org.sbr_org_id
            union all
            SELECT  org.brc_org_id org_id
                    ,count(1) AS COUNT_NUM
            FROM    edw.dws_hr_empe_inf_dd t
            left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
            WHERE   t.dt = '${data_dt}'
                AND t.empe_sts_cd = '2'
                and nvl(org.brc_org_id,'')<>''
            GROUP BY org.brc_org_id
        ) A
LEFT JOIN    (
                 SELECT  org.tem_org_id org_id
                         ,count(1) AS COUNT_NUM
                 FROM    edw.dws_hr_empe_inf_dd t
                 left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
                 WHERE   t.dt = '${data_dt}'
                    AND     t.quit_dt BETWEEN to_char(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'yyyy'), 'yyyymmdd') AND '${data_dt}'
                    AND     t.empe_sts_cd = '3'
                    and nvl(org.tem_org_id,'')<>''
                 GROUP BY org.tem_org_id
                 union all
                 SELECT  org.sbr_org_id org_id
                         ,count(1) AS COUNT_NUM
                 FROM    edw.dws_hr_empe_inf_dd t
                 left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
                 WHERE   t.dt = '${data_dt}'
                    AND     t.quit_dt BETWEEN to_char(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'yyyy'), 'yyyymmdd') AND '${data_dt}'
                    AND     t.empe_sts_cd = '3'
                --     AND t.empe_sts_cd = '2'
                    and nvl(org.sbr_org_id,'')<>''
                 GROUP BY org.sbr_org_id
                 union all
                 SELECT  org.brc_org_id org_id
                         ,count(1) AS COUNT_NUM
                 FROM    edw.dws_hr_empe_inf_dd t
                 left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_ORG org on t.org_id=org.org_id and org.dt='${data_dt}'
                 WHERE   t.dt = '${data_dt}'
                    AND     t.quit_dt BETWEEN to_char(datetrunc(to_date('${data_dt}', 'yyyymmdd'), 'yyyy'), 'yyyymmdd') AND '${data_dt}'
                    AND     t.empe_sts_cd = '3'
                --     AND t.empe_sts_cd = '2'
                    and nvl(org.brc_org_id,'')<>''
                 GROUP BY org.brc_org_id
             ) B
ON      A.org_id = B.org_id
;



--**************************队伍建设**********************************
INSERT INTO LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_01 PARTITION (dt = '${data_dt}')
-- 机构新员工按期转正率	DWJS_0003
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DWJS_0003'                       AS IND_ID
        ,T.cur_val                       AS CUR_VAL
FROM  lab_bigdata_dev.qbi_file_wsj_hgl3_HKGL_0001_02 T
where t.pt=MAX_PT('lab_bigdata_dev.qbi_file_wsj_hgl3_HKGL_0001_02')
and   t.ind_id='DWJS_0003'
UNION ALL
-- 所辖年度&ldquo;小标准&rdquo;体系检测达标率240331	DWJS_0004
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DWJS_0004'                       AS IND_ID
        ,T.cur_val                       AS CUR_VAL
FROM  lab_bigdata_dev.qbi_file_wsj_hgl3_HKGL_0001_02 T
where t.pt=MAX_PT('lab_bigdata_dev.qbi_file_wsj_hgl3_HKGL_0001_02')
and   t.ind_id='DWJS_0004'
UNION ALL
-- 重点工作主题学习通关率	DWJS_0005
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DWJS_0005'                       AS IND_ID
        ,T.cur_val                       AS CUR_VAL
FROM  lab_bigdata_dev.qbi_file_wsj_hgl3_HKGL_0001_02 T
where t.pt=MAX_PT('lab_bigdata_dev.qbi_file_wsj_hgl3_HKGL_0001_02')
and   t.ind_id='DWJS_0005'
UNION ALL
-- 企业文化评估	DWJS_0007
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DWJS_0007'                       AS IND_ID
        ,T.cur_val                       AS CUR_VAL
FROM  lab_bigdata_dev.qbi_file_wsj_hgl3_HKGL_0001_02 T
where t.pt=MAX_PT('lab_bigdata_dev.qbi_file_wsj_hgl3_HKGL_0001_02')
and   t.ind_id='DWJS_0007'
UNION ALL
-- 离职率	DWJS_0006
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DWJS_0006'                       AS IND_ID
        ,T.DWJS_0006   AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_DWJS_01 T
UNION ALL
-- 本年离职人员	DWJS_0006_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DWJS_0006_01'                       AS IND_ID
        ,T.DWJS_0006_01                      AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_DWJS_01 T
UNION ALL
-- 当前在职人员	DWJS_0006_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'DWJS_0006_02'                       AS IND_ID
        ,T.DWJS_0006_02                     AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_DWJS_01 T
;



**备份3.0_to_立英_T1HGL_ORG_TAG_IND_DD_3_01.sql
-- ODPS SQL
-- **********************************************************************
-- 功能描述:
-- **
-- 创建者: 卫少洁
-- 创建日期: 2025-03-05 09:55:34
-- **
-- 修改日志:
-- 修改日期          修改人          修改内容
-- **
-- **********************************************************************


--------------------------------------------------------------增量风险----------------------------------------------------------

-- 净增风险成本率	ZLFX_0001
-- 当年新发生风险贷款率	ZLFX_0002
-- 本年新发生风险贷款现金清收率（堵新）	ZLFX_0003
-- 存量风险贷款现金清收率（清旧）	ZLFX_0004
-- 客均模型分	ZLFX_0005
-- 授信客户的中高风险客户占比	ZLFX_0006
-- 授信客户的高风险客户占比	ZLFX_0007
-- 近6个月预评估拦截率	ZLFX_0008
-- 近6个月抗辩上诉率	ZLFX_0009
-- 近6个月抗辩上诉通过率	ZLFX_0010
-- 隐患业务占比	ZLFX_0011
-- 隐患业务命中率	ZLFX_0012
-- 隐患业务出险率	ZLFX_0013
-- 近三个月精准贷后触发率	ZLFX_0014
-- 近三个月处置类精准贷后现场走访比例	ZLFX_0015

-- 净增风险成本率_Y
DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_ZLFX_01;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_ZLFX_01 AS
SELECT  JG1.org_id
        ,sum(CASE
               WHEN item_id = 'FXFZ06' THEN nvl(item_value_y, 0)
               ELSE 0
             END) AS 净增风险成本率_Y
FROM    app_iftp.adm_papp_ftp_org_eva_k_dd JG1
inner JOIN    edw.dim_hr_org_mng_org_tree_dd JG2
ON      JG1.org_id = JG2.org_id
AND     JG1.dt = JG2.dt
and     JG2.eff_sts_ind='1'
WHERE   JG1.dt = '${data_dt}'
AND     org_lvl = '5'   --支行
GROUP BY JG1.org_id
union all
SELECT  JG1.org_id
        ,sum(CASE
               WHEN item_id = 'FXFZ06' THEN nvl(item_value_y, 0)
               ELSE 0
             END) AS 净增风险成本率_Y
FROM    app_iftp.adm_papp_ftp_org_eva_k_dd JG1
inner join    edw.dim_hr_org_mng_org_tree_dd JG2  --6级需剔除虚拟机构
ON      JG1.org_id = JG2.org_id
AND     JG1.dt = JG2.dt
and     JG2.eff_sts_ind='1'
WHERE   JG1.dt = '${data_dt}'
AND     org_lvl = '6'   --团队
and     substr(JG1.org_id,8,2)<>'00'
GROUP BY JG1.org_id
union all
SELECT  JG1.org_id
        ,sum(CASE
               WHEN item_id = 'FXFZ06' THEN nvl(item_value_y, 0)
               ELSE 0
             END) AS 净增风险成本率_Y
FROM    app_iftp.adm_papp_ftp_org_eva_k_dd JG1
inner JOIN    edw.dim_hr_org_mng_org_tree_dd JG2
ON      JG1.org_id = JG2.org_id
AND     JG1.dt = JG2.dt
and     JG2.eff_sts_ind='1'
WHERE   JG1.dt = '${data_dt}'
AND     org_lvl = '3'   --分行
GROUP BY JG1.org_id
;


--分（村）支行团队
DROP TABLE if EXISTS lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_02;
CREATE TABLE IF NOT EXISTS lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_02 as
select
b.tem_org_id     org_id
,sum(case when a.is_rsk_loan='Y' and a.is_yr_new_hpn='Y' then a.dbil_bal_cny else 0 end)     new_rsk_y
,sum(case when a.bsn_sts not like '%核销%' then a.dbil_bal_cny else 0 end)                   bal_no_hx
,sum(case when a.is_rsk_loan='Y' and a.is_yr_new_hpn='Y' then a.dbil_bal_cny else 0 end)
/sum(case when a.bsn_sts not like '%核销%' then a.dbil_bal_cny else 0 end)                   new_rsk_rat_y
from adm_rsk.adm_rsk_apl_inter_all a
left join edw.dim_hr_org_mng_org_tree_dd b
on a.mng_org_id=b.org_id and b.dt=a.dt and     b.eff_sts_ind='1'
where a.dt ='${data_dt}'
and  (a.acc_type like '0%' or a.acc_type='信用卡' or a.acc_type = '312' ) -- 保留表内业务
and a.acc_type not like '0301%' -- 剔除贴现
and a.bsn_line not like '%网贷%' -- 剔除网贷
and  a.bsn_line not like '%金融云平台%'
and a.mng_org_id not like '330188811%'  -- 剔除总行台州交接业务（近期可用，20年19年机构号可能会变，不准）
and a.bsn_line <> '科技企业' ---科企业务从分行划出
and a.bsn_line not like '%总行%'
group by b.tem_org_id
union all
select
b.sbr_org_id     org_id
,sum(case when a.is_rsk_loan='Y' and a.is_yr_new_hpn='Y' then a.dbil_bal_cny else 0 end)     new_rsk_y
,sum(case when a.bsn_sts not like '%核销%' then a.dbil_bal_cny else 0 end)                   bal_no_hx
,sum(case when a.is_rsk_loan='Y' and a.is_yr_new_hpn='Y' then a.dbil_bal_cny else 0 end)
/sum(case when a.bsn_sts not like '%核销%' then a.dbil_bal_cny else 0 end)                   new_rsk_rat_y
from adm_rsk.adm_rsk_apl_inter_all a
left join edw.dim_hr_org_mng_org_tree_dd b
on a.mng_org_id=b.org_id and b.dt=a.dt  and     b.eff_sts_ind='1'
where a.dt ='${data_dt}'
and  (a.acc_type like '0%' or a.acc_type='信用卡' or a.acc_type = '312' ) -- 保留表内业务
and a.acc_type not like '0301%' -- 剔除贴现
and a.bsn_line not like '%网贷%' -- 剔除网贷
and  a.bsn_line not like '%金融云平台%'
and a.mng_org_id not like '330188811%'  -- 剔除总行台州交接业务（近期可用，20年19年机构号可能会变，不准）
and a.bsn_line <> '科技企业' ---科企业务从分行划出
and a.bsn_line not like '%总行%'
group by b.sbr_org_id
union all
select
b.brc_org_id     org_id
,sum(case when a.is_rsk_loan='Y' and a.is_yr_new_hpn='Y' then a.dbil_bal_cny else 0 end)     new_rsk_y
,sum(case when a.bsn_sts not like '%核销%' then a.dbil_bal_cny else 0 end)                   bal_no_hx
,sum(case when a.is_rsk_loan='Y' and a.is_yr_new_hpn='Y' then a.dbil_bal_cny else 0 end)
/sum(case when a.bsn_sts not like '%核销%' then a.dbil_bal_cny else 0 end)                   new_rsk_rat_y
from adm_rsk.adm_rsk_apl_inter_all a
left join edw.dim_hr_org_mng_org_tree_dd b
on a.mng_org_id=b.org_id and b.dt=a.dt  and     b.eff_sts_ind='1'
where a.dt ='${data_dt}'
and  (a.acc_type like '0%' or a.acc_type='信用卡' or a.acc_type = '312' ) -- 保留表内业务
and a.acc_type not like '0301%' -- 剔除贴现
and a.bsn_line not like '%网贷%' -- 剔除网贷
and  a.bsn_line not like '%金融云平台%'
and a.mng_org_id not like '330188811%'  -- 剔除总行台州交接业务（近期可用，20年19年机构号可能会变，不准）
and a.bsn_line <> '科技企业' ---科企业务从分行划出
and a.bsn_line not like '%总行%'
group by b.brc_org_id
;


-- 净增风险成本率	ZLFX_0001
-- 当年新发生风险贷款率	ZLFX_0002
-- 本年新发生风险贷款现金清收率（堵新）	ZLFX_0003
-- 存量风险贷款现金清收率（清旧）	ZLFX_0004
-- 客均模型分	ZLFX_0005
-- 授信客户的中高风险客户占比	ZLFX_0006
-- 授信客户的高风险客户占比	ZLFX_0007
DROP TABLE if EXISTS lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_03;
CREATE TABLE IF NOT EXISTS lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_03 as
SELECT
  DISTINCT cst5.prm_org_id,
  cst3.cst_id,
  cst3.risk_model_score,
  cst3.risk_model_level_ten,
  case when cst3.risk_flg='1' or cst3.risk_flg='在逾' then '在逾' else cst3.risk_flg end risk_flg,
  cst3.dt,
  nvl(load_cst, 0) as load_cst
FROM
  (
    SELECT
      DISTINCT
      cst1.cst_id,
      int(cst1.risk_model_score) as risk_model_score,
      cst1.risk_model_level_ten,
      cst1.risk_flg,
      cst1.dt
    FROM
    lab_bigdata_dev.quant_portr_base_adj_idv_cst_credit_score_bas_info_dd cst1
    WHERE
      cst1.dt = '${data_dt}'
    UNION ALL
    SELECT
      DISTINCT
      cst2.cst_id,
      cst2.risk_model_score,
      cst2.risk_model_level_ten,
      cst2.risk_flg,
      cst2.dt
    FROM
    lab_bigdata_dev.quant_portr_base_entp_cst_credit_score_bas_info_dd cst2
    WHERE
      cst2.dt = '${data_dt}'
  ) cst3
  LEFT JOIN (
    SELECT
      t.cst_id,CASE
        WHEN sum(nvl(t.ctr_amt,0)) = 0 THEN 0
        ELSE 1
      END AS load_cst
    FROM
      edw.dim_bus_loan_ctr_bse_inf_dd t
    WHERE
      t.dt = '${data_dt}'
    GROUP BY
      t.cst_id
  ) cst4 ON cst3.cst_id = cst4.cst_id
  LEFT JOIN adm_pub_app.adm_pblc_cst_prm_mng_inf_dd cst5 ON cst5.cst_id = cst3.cst_id
  AND cst5.dt = cst3.dt
;



DROP TABLE if EXISTS lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_04;
CREATE TABLE IF NOT EXISTS lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_04 as
SELECT
  cst6.brc_org_id as org_id,
  count(DISTINCT cst7.cst_id) AS 户数,
  sum(cst7.risk_model_score) AS 模型分合计,
  sum(cst7.risk_model_score) / count(DISTINCT cst7.cst_id) AS 客均融合模型分,
  sum(cst7.load_cst) AS 客户户数_有授信余额,
  sum(
    CASE
      WHEN cst7.load_cst = 1 THEN cst7.risk_model_score
      ELSE 0
    END
  ) AS 模型分合计_有授信余额的客户,
  sum(
    CASE
      WHEN cst7.load_cst = 1 THEN cst7.risk_model_score
      ELSE 0
    END
  ) / sum(
    CASE
      WHEN cst7.load_cst = 1 THEN 1
      ELSE 0
    END
  ) AS 户均融合模型分_有授信余额的客户,
  sum(
    case
      when risk_model_level_ten ='C1'
      AND cst7.load_cst = 1 THEN 1
      ELSE 0
    END
  ) 高风险客户数,
  sum(
    case
      when risk_model_level_ten ='C1'
      AND cst7.load_cst = 1 THEN 1
      ELSE 0
    END
  )/sum(
    case
      when cst7.load_cst = 1 THEN 1
      ELSE 0
    END
  ) AS 高风险_有授信余额_户数占比,
  sum(
    case
      when risk_model_level_ten in ('C2','C3')
      AND cst7.load_cst = 1 THEN 1
      ELSE 0
    END
  )  中高风险客户数,
  sum(
    case
      when risk_model_level_ten in ('C2','C3')
      AND cst7.load_cst = 1 THEN 1
      ELSE 0
    END
  )/sum(
    case
      when cst7.load_cst = 1 THEN 1
      ELSE 0
    END
  ) AS 中高风险_有授信余额_户数占比
from lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_03 cst7
LEFT JOIN edw.dim_hr_org_mng_org_tree_dd cst6
ON cst6.org_id = cst7.prm_org_id AND cst6.dt = '${data_dt}'  and     cst6.eff_sts_ind='1'
group by cst6.brc_org_id
union all
SELECT
  cst6.sbr_org_id as org_id,
  count(DISTINCT cst7.cst_id) AS 户数,
  sum(cst7.risk_model_score) AS 模型分合计,
  sum(cst7.risk_model_score) / count(DISTINCT cst7.cst_id) AS 客均融合模型分,
  sum(cst7.load_cst) AS 客户户数_有授信余额,
  sum(
    CASE
      WHEN cst7.load_cst = 1 THEN cst7.risk_model_score
      ELSE 0
    END
  ) AS 模型分合计_有授信余额的客户,
  sum(
    CASE
      WHEN cst7.load_cst = 1 THEN cst7.risk_model_score
      ELSE 0
    END
  ) / sum(
    CASE
      WHEN cst7.load_cst = 1 THEN 1
      ELSE 0
    END
  ) AS 户均融合模型分_有授信余额的客户,
  sum(
    case
      when risk_model_level_ten ='C1'
      AND cst7.load_cst = 1 THEN 1
      ELSE 0
    END
  ) 高风险客户数,
  sum(
    case
      when risk_model_level_ten ='C1'
      AND cst7.load_cst = 1 THEN 1
      ELSE 0
    END
  )/sum(
    case
      when cst7.load_cst = 1 THEN 1
      ELSE 0
    END
  ) AS 高风险_有授信余额_户数占比,
  sum(
    case
      when risk_model_level_ten in ('C2','C3')
      AND cst7.load_cst = 1 THEN 1
      ELSE 0
    END
  )  中高风险客户数,
  sum(
    case
      when risk_model_level_ten in ('C2','C3')
      AND cst7.load_cst = 1 THEN 1
      ELSE 0
    END
  )/sum(
    case
      when cst7.load_cst = 1 THEN 1
      ELSE 0
    END
  ) AS 中高风险_有授信余额_户数占比
from lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_03 cst7
LEFT JOIN edw.dim_hr_org_mng_org_tree_dd cst6
ON cst6.org_id = cst7.prm_org_id AND cst6.dt = '${data_dt}'  and     cst6.eff_sts_ind='1'
group by cst6.sbr_org_id
union all
SELECT
  cst6.tem_org_id as org_id,
  count(DISTINCT cst7.cst_id) AS 户数,
  sum(cst7.risk_model_score) AS 模型分合计,
  sum(cst7.risk_model_score) / count(DISTINCT cst7.cst_id) AS 客均融合模型分,
  sum(cst7.load_cst) AS 客户户数_有授信余额,
  sum(
    CASE
      WHEN cst7.load_cst = 1 THEN cst7.risk_model_score
      ELSE 0
    END
  ) AS 模型分合计_有授信余额的客户,
  sum(
    CASE
      WHEN cst7.load_cst = 1 THEN cst7.risk_model_score
      ELSE 0
    END
  ) / sum(
    CASE
      WHEN cst7.load_cst = 1 THEN 1
      ELSE 0
    END
  ) AS 户均融合模型分_有授信余额的客户,
  sum(
    case
      when risk_model_level_ten ='C1'
      AND cst7.load_cst = 1 THEN 1
      ELSE 0
    END
  ) 高风险客户数,
  sum(
    case
      when risk_model_level_ten ='C1'
      AND cst7.load_cst = 1 THEN 1
      ELSE 0
    END
  )/sum(
    case
      when cst7.load_cst = 1 THEN 1
      ELSE 0
    END
  ) AS 高风险_有授信余额_户数占比,
  sum(
    case
      when risk_model_level_ten in ('C2','C3')
      AND cst7.load_cst = 1 THEN 1
      ELSE 0
    END
  )  中高风险客户数,
  sum(
    case
      when risk_model_level_ten in ('C2','C3')
      AND cst7.load_cst = 1 THEN 1
      ELSE 0
    END
  )/sum(
    case
      when cst7.load_cst = 1 THEN 1
      ELSE 0
    END
  ) AS 中高风险_有授信余额_户数占比
from lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_03 cst7
LEFT JOIN edw.dim_hr_org_mng_org_tree_dd cst6
ON cst6.org_id = cst7.prm_org_id AND cst6.dt = '${data_dt}'  and     cst6.eff_sts_ind='1'
group by cst6.tem_org_id
;


-- DROP TABLE if EXISTS lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_05;
-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_05 as
-- SELECT  tuandui_org_id as org_id
--         ,count(1) AS 笔数
--         ,count(CASE WHEN PRE_EVAL_RSLT_TP = '1040' THEN 1 else 0 END)  近6个月预评估结果为未通过笔数
--         ,CASE
--            WHEN count(1) > 0 THEN count(CASE WHEN PRE_EVAL_RSLT_TP = '1040' THEN 1 else 0  END) / count(1)
--            else null
--          END      AS 近6个月预评估拦截率
--         ,count(CASE WHEN PRE_EVAL_RSLT_TP = '1040' AND is_appeal > 0 THEN 1 else 0  END)  近6个月抗辩上诉笔数
--         ,CASE
--            WHEN count(CASE   WHEN PRE_EVAL_RSLT_TP = '1040' THEN 1 END) > 0 THEN
--            count(CASE WHEN PRE_EVAL_RSLT_TP = '1040' AND is_appeal > 0 THEN 1 else 0  END) / count(CASE  WHEN PRE_EVAL_RSLT_TP = '1040' THEN 1 else 0 END)
--          else null
--          END      AS 近6个月抗辩上诉率
--         ,count(CASE WHEN PRE_EVAL_RSLT_TP = '1040' AND is_appeal > 0 AND buss_result RLIKE '通过' THEN 1 else 0 END)  近6个月抗辩上诉通过笔数
--         ,CASE
--            WHEN count(CASE
--                         WHEN PRE_EVAL_RSLT_TP = '1040' AND is_appeal > 0 THEN 1
--                       END) > 0 THEN (count(CASE
--                                             WHEN PRE_EVAL_RSLT_TP = '1040' AND is_appeal > 0 AND buss_result RLIKE '通过' THEN 1 else 0
--                                           END) / count(CASE
--                                                          WHEN PRE_EVAL_RSLT_TP = '1040' AND is_appeal > 0 THEN 1  else 0
--                                                        END))
--          END      AS 近6个月抗辩上诉通过率
-- FROM    lab_sharedata_dev.xxd_ypg_monitor_add_hetong_03
-- WHERE   dt = '@@{yyyyMMdd}'
-- AND     SCENE_CODE IN ( 'YPG01' , 'YPG02' )
-- AND     RLTM_FLG = '1'
-- AND     PRE_EVAL_RSLT_TP <> '2050'
-- AND     apply_dt > TO_CHAR(lastday(dateadd(TO_DATE('${data_dt}', 'yyyymmdd'), - 6, 'mm')), 'yyyymmdd') -- 6个月内进件
-- and     apply_dt <= '${data_dt}'
-- GROUP BY tuandui_org_id
-- union all
-- SELECT  zhihang_org_id as org_id
--         ,count(1) AS 笔数
--         ,count(CASE WHEN PRE_EVAL_RSLT_TP = '1040' THEN 1 else 0 END)  近6个月预评估结果为未通过笔数
--         ,CASE
--            WHEN count(1) > 0 THEN count(CASE WHEN PRE_EVAL_RSLT_TP = '1040' THEN 1 else 0  END) / count(1)
--            else null
--          END      AS 近6个月预评估拦截率
--         ,count(CASE WHEN PRE_EVAL_RSLT_TP = '1040' AND is_appeal > 0 THEN 1 else 0  END)  近6个月抗辩上诉笔数
--         ,CASE
--            WHEN count(CASE   WHEN PRE_EVAL_RSLT_TP = '1040' THEN 1 END) > 0 THEN
--            count(CASE WHEN PRE_EVAL_RSLT_TP = '1040' AND is_appeal > 0 THEN 1 else 0  END) / count(CASE  WHEN PRE_EVAL_RSLT_TP = '1040' THEN 1 else 0 END)
--          else null
--          END      AS 近6个月抗辩上诉率
--         ,count(CASE WHEN PRE_EVAL_RSLT_TP = '1040' AND is_appeal > 0 AND buss_result RLIKE '通过' THEN 1 else 0 END)  近6个月抗辩上诉通过笔数
--         ,CASE
--            WHEN count(CASE
--                         WHEN PRE_EVAL_RSLT_TP = '1040' AND is_appeal > 0 THEN 1
--                       END) > 0 THEN (count(CASE
--                                             WHEN PRE_EVAL_RSLT_TP = '1040' AND is_appeal > 0 AND buss_result RLIKE '通过' THEN 1 else 0
--                                           END) / count(CASE
--                                                          WHEN PRE_EVAL_RSLT_TP = '1040' AND is_appeal > 0 THEN 1  else 0
--                                                        END))
--          END      AS 近6个月抗辩上诉通过率
-- FROM    lab_sharedata_dev.xxd_ypg_monitor_add_hetong_03
-- WHERE   dt = '@@{yyyyMMdd}'
-- AND     SCENE_CODE IN ( 'YPG01' , 'YPG02' )
-- AND     RLTM_FLG = '1'
-- AND     PRE_EVAL_RSLT_TP <> '2050'
-- AND     apply_dt > TO_CHAR(lastday(dateadd(TO_DATE('${data_dt}', 'yyyymmdd'), - 6, 'mm')), 'yyyymmdd') -- 6个月内进件
-- and     apply_dt <= '${data_dt}'
-- GROUP BY zhihang_org_id
-- union all
-- SELECT  fenhang_org_id as org_id
--         ,count(1) AS 笔数
--         ,count(CASE WHEN PRE_EVAL_RSLT_TP = '1040' THEN 1 else 0 END)  近6个月预评估结果为未通过笔数
--         ,CASE
--            WHEN count(1) > 0 THEN count(CASE WHEN PRE_EVAL_RSLT_TP = '1040' THEN 1 else 0  END) / count(1)
--            else null
--          END      AS 近6个月预评估拦截率
--         ,count(CASE WHEN PRE_EVAL_RSLT_TP = '1040' AND is_appeal > 0 THEN 1 else 0  END)  近6个月抗辩上诉笔数
--         ,CASE
--            WHEN count(CASE   WHEN PRE_EVAL_RSLT_TP = '1040' THEN 1 END) > 0 THEN
--            count(CASE WHEN PRE_EVAL_RSLT_TP = '1040' AND is_appeal > 0 THEN 1 else 0  END) / count(CASE  WHEN PRE_EVAL_RSLT_TP = '1040' THEN 1 else 0 END)
--          else null
--          END      AS 近6个月抗辩上诉率
--         ,count(CASE WHEN PRE_EVAL_RSLT_TP = '1040' AND is_appeal > 0 AND buss_result RLIKE '通过' THEN 1 else 0 END)  近6个月抗辩上诉通过笔数
--         ,CASE
--            WHEN count(CASE
--                         WHEN PRE_EVAL_RSLT_TP = '1040' AND is_appeal > 0 THEN 1
--                       END) > 0 THEN (count(CASE
--                                             WHEN PRE_EVAL_RSLT_TP = '1040' AND is_appeal > 0 AND buss_result RLIKE '通过' THEN 1 else 0
--                                           END) / count(CASE
--                                                          WHEN PRE_EVAL_RSLT_TP = '1040' AND is_appeal > 0 THEN 1  else 0
--                                                        END))
--          END      AS 近6个月抗辩上诉通过率
-- FROM    lab_sharedata_dev.xxd_ypg_monitor_add_hetong_03
-- WHERE   dt = '@@{yyyyMMdd}'
-- AND     SCENE_CODE IN ( 'YPG01' , 'YPG02' )
-- AND     RLTM_FLG = '1'
-- AND     PRE_EVAL_RSLT_TP <> '2050'
-- AND     apply_dt > TO_CHAR(lastday(dateadd(TO_DATE('${data_dt}', 'yyyymmdd'), - 6, 'mm')), 'yyyymmdd') -- 6个月内进件
-- and     apply_dt <= '${data_dt}'
-- GROUP BY fenhang_org_id
-- ;

--隐患业务
DROP TABLE if EXISTS lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_06;
CREATE TABLE IF NOT EXISTS lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_06 as
select
 t2.sbr_org_id as org_id
---未出险的
,sum(case when a.dt='${data_dt}' then a.dbil_bal_cny end)/10000   当月贷款余额_万
,sum(case when a.dt='${data_dt}' and a.is_yr_new_hpn = 'N' and b.list_tag in ('0_规则推送','1_自主添加')then a.dbil_bal_cny end)/10000  当月隐患余额_万
,sum(case when a.dt='${data_dt}' and a.is_yr_new_hpn='Y' and a.is_rsk_loan='Y' then a.dbil_bal_cny end)/10000  本年新发生风险贷款余额_万
--出险
,sum(case when a.dt='${data_dt}' and substr(a.hpn_rsk_date,1,6)=substr('${data_dt}',1,6)  and a.is_rsk_loan = 'Y' then a.dbil_bal_cny end)/10000  当月出险余额_万
,count(distinct case when a.dt='${data_dt}' and substr(a.hpn_rsk_date,1,6)=substr('${data_dt}',1,6) and a.is_rsk_loan = 'Y' then a.cst_id end)   当月出险客户数
,sum(case when a.dt=TO_CHAR(lastday(dateadd(TO_DATE('${data_dt}', 'yyyymmdd'), -2, 'mm')), 'yyyymmdd') and a.is_yr_new_hpn = 'N' and c.list_tag in ('0_规则推送','1_自主添加')  then a.dbil_bal_cny end)/10000  2个月前隐患余额_万
,sum(case when a.dt='${data_dt}' and substr(a.hpn_rsk_date,1,6)=substr('${data_dt}',1,6) and a.is_rsk_loan = 'Y'  and c.list_tag in ('0_规则推送','1_自主添加') then a.dbil_bal_cny end)/10000 当月出险且在2个月前隐患清单中的余额_万
,sum(case when a.dt='${data_dt}' and a.hpn_rsk_date>c.dt and a.is_rsk_loan = 'Y'  and c.list_tag in ('0_规则推送','1_自主添加') then a.dbil_bal_cny end)/10000 当前出险且在2个月前隐患清单中的余额_万
from adm_rsk.adm_rsk_apl_inter_all a
left join (select dt,cst_id, max(hid_dngr_lvl_cd) hid_dngr_lvl_cd ,decode(min(hid_dngr_list_join_typ_cd),'01','0_规则推送','02','1_自主添加') list_tag
	from edw.loan_rsk_hid_dngr_cst_list where dt ='${data_dt}'
	group by dt,cst_id) b on nvl(a.start_cst_id,a.cst_id) = b.cst_id     --当月隐患清单
left join (select dt,cst_id, max(hid_dngr_lvl_cd) hid_dngr_lvl_cd ,decode(min(hid_dngr_list_join_typ_cd),'01','0_规则推送','02','1_自主添加') list_tag
	from edw.loan_rsk_hid_dngr_cst_list where dt =TO_CHAR(lastday(dateadd(TO_DATE('${data_dt}', 'yyyymmdd'), -2, 'mm')), 'yyyymmdd')
	group by dt,cst_id ) c on nvl(a.start_cst_id,a.cst_id) = c.cst_id    --2月前隐患清单
left join  edw.dim_hr_org_mng_org_tree_dd t2
on a.mng_org_id=t2.org_id and t2.dt='${data_dt}'  and  t2.eff_sts_ind='1'
where a.dt in ('${data_dt}',TO_CHAR(lastday(dateadd(TO_DATE('${data_dt}', 'yyyymmdd'), -2, 'mm')), 'yyyymmdd'))   --当月和2个月前
and (a.acc_type like '0%' or a.acc_type='信用卡') -- 保留表内业务
and a.acc_type not like '0301%' -- 剔除贴现
and a.bsn_line not like '%网贷%' -- 剔除网贷
and a.mng_org_id not like '330188811%'  -- 剔除总行台州交接业务（近期可用，20年19年机构号可能会变，不准）
and a.ctr_srl_no <> 'BC2023022300002420'--苏州一笔科企业务
and a.bsn_line <> '科技企业' ---科企业务从分行划出
and (t2.sbr_org_id<>'' and t2.sbr_org_id is not null)
group by
t2.sbr_org_id
union all
select
 t2.tem_org_id as org_id
---未出险的
,sum(case when a.dt='${data_dt}' then a.dbil_bal_cny end)/10000   当月贷款余额_万
,sum(case when a.dt='${data_dt}' and a.is_yr_new_hpn = 'N' and b.list_tag in ('0_规则推送','1_自主添加')then a.dbil_bal_cny end)/10000  当月隐患余额_万
,sum(case when a.dt='${data_dt}' and a.is_yr_new_hpn='Y' and a.is_rsk_loan='Y' then a.dbil_bal_cny end)/10000  本年新发生风险贷款余额_万
--出险
,sum(case when a.dt='${data_dt}' and substr(a.hpn_rsk_date,1,6)=substr('${data_dt}',1,6)  and a.is_rsk_loan = 'Y' then a.dbil_bal_cny end)/10000  当月出险余额_万
,count(distinct case when a.dt='${data_dt}' and substr(a.hpn_rsk_date,1,6)=substr('${data_dt}',1,6) and a.is_rsk_loan = 'Y' then a.cst_id end)   当月出险客户数
,sum(case when a.dt=TO_CHAR(lastday(dateadd(TO_DATE('${data_dt}', 'yyyymmdd'), -2, 'mm')), 'yyyymmdd') and a.is_yr_new_hpn = 'N' and c.list_tag in ('0_规则推送','1_自主添加')  then a.dbil_bal_cny end)/10000  2个月前隐患余额_万
,sum(case when a.dt='${data_dt}' and substr(a.hpn_rsk_date,1,6)=substr('${data_dt}',1,6) and a.is_rsk_loan = 'Y'  and c.list_tag in ('0_规则推送','1_自主添加') then a.dbil_bal_cny end)/10000 当月出险且在2个月前隐患清单中的余额_万
,sum(case when a.dt='${data_dt}' and a.hpn_rsk_date>c.dt and a.is_rsk_loan = 'Y'  and c.list_tag in ('0_规则推送','1_自主添加') then a.dbil_bal_cny end)/10000 当前出险且在2个月前隐患清单中的余额_万
from adm_rsk.adm_rsk_apl_inter_all a
left join (select dt,cst_id, max(hid_dngr_lvl_cd) hid_dngr_lvl_cd ,decode(min(hid_dngr_list_join_typ_cd),'01','0_规则推送','02','1_自主添加') list_tag
	from edw.loan_rsk_hid_dngr_cst_list where dt ='${data_dt}'
	group by dt,cst_id) b on nvl(a.start_cst_id,a.cst_id) = b.cst_id     --当月隐患清单
left join (select dt,cst_id, max(hid_dngr_lvl_cd) hid_dngr_lvl_cd ,decode(min(hid_dngr_list_join_typ_cd),'01','0_规则推送','02','1_自主添加') list_tag
	from edw.loan_rsk_hid_dngr_cst_list where dt =TO_CHAR(lastday(dateadd(TO_DATE('${data_dt}', 'yyyymmdd'), -2, 'mm')), 'yyyymmdd')
	group by dt,cst_id ) c on nvl(a.start_cst_id,a.cst_id) = c.cst_id    --2月前隐患清单
left join  edw.dim_hr_org_mng_org_tree_dd t2
on a.mng_org_id=t2.org_id and t2.dt='${data_dt}'  and  t2.eff_sts_ind='1'
where a.dt in ('${data_dt}',TO_CHAR(lastday(dateadd(TO_DATE('${data_dt}', 'yyyymmdd'), -2, 'mm')), 'yyyymmdd'))   --当月和2个月前
and (a.acc_type like '0%' or a.acc_type='信用卡') -- 保留表内业务
and a.acc_type not like '0301%' -- 剔除贴现
and a.bsn_line not like '%网贷%' -- 剔除网贷
and a.mng_org_id not like '330188811%'  -- 剔除总行台州交接业务（近期可用，20年19年机构号可能会变，不准）
and a.ctr_srl_no <> 'BC2023022300002420'--苏州一笔科企业务
and a.bsn_line <> '科技企业' ---科企业务从分行划出
and (t2.tem_org_id<>'' and t2.tem_org_id is not null)
group by
t2.tem_org_id
union all
select
 t2.brc_org_id as org_id
---未出险的
,sum(case when a.dt='${data_dt}' then a.dbil_bal_cny end)/10000   当月贷款余额_万
,sum(case when a.dt='${data_dt}' and a.is_yr_new_hpn = 'N' and b.list_tag in ('0_规则推送','1_自主添加')then a.dbil_bal_cny end)/10000  当月隐患余额_万
,sum(case when a.dt='${data_dt}' and a.is_yr_new_hpn='Y' and a.is_rsk_loan='Y' then a.dbil_bal_cny end)/10000  本年新发生风险贷款余额_万
--出险
,sum(case when a.dt='${data_dt}' and substr(a.hpn_rsk_date,1,6)=substr('${data_dt}',1,6)  and a.is_rsk_loan = 'Y' then a.dbil_bal_cny end)/10000  当月出险余额_万
,count(distinct case when a.dt='${data_dt}' and substr(a.hpn_rsk_date,1,6)=substr('${data_dt}',1,6) and a.is_rsk_loan = 'Y' then a.cst_id end)   当月出险客户数
,sum(case when a.dt=TO_CHAR(lastday(dateadd(TO_DATE('${data_dt}', 'yyyymmdd'), -2, 'mm')), 'yyyymmdd') and a.is_yr_new_hpn = 'N' and c.list_tag in ('0_规则推送','1_自主添加')  then a.dbil_bal_cny end)/10000  2个月前隐患余额_万
,sum(case when a.dt='${data_dt}' and substr(a.hpn_rsk_date,1,6)=substr('${data_dt}',1,6) and a.is_rsk_loan = 'Y'  and c.list_tag in ('0_规则推送','1_自主添加') then a.dbil_bal_cny end)/10000 当月出险且在2个月前隐患清单中的余额_万
,sum(case when a.dt='${data_dt}' and a.hpn_rsk_date>c.dt and a.is_rsk_loan = 'Y'  and c.list_tag in ('0_规则推送','1_自主添加') then a.dbil_bal_cny end)/10000 当前出险且在2个月前隐患清单中的余额_万
from adm_rsk.adm_rsk_apl_inter_all a
left join (select dt,cst_id, max(hid_dngr_lvl_cd) hid_dngr_lvl_cd ,decode(min(hid_dngr_list_join_typ_cd),'01','0_规则推送','02','1_自主添加') list_tag
	from edw.loan_rsk_hid_dngr_cst_list where dt ='${data_dt}'
	group by dt,cst_id) b on nvl(a.start_cst_id,a.cst_id) = b.cst_id     --当月隐患清单
left join (select dt,cst_id, max(hid_dngr_lvl_cd) hid_dngr_lvl_cd ,decode(min(hid_dngr_list_join_typ_cd),'01','0_规则推送','02','1_自主添加') list_tag
	from edw.loan_rsk_hid_dngr_cst_list where dt =TO_CHAR(lastday(dateadd(TO_DATE('${data_dt}', 'yyyymmdd'), -2, 'mm')), 'yyyymmdd')
	group by dt,cst_id ) c on nvl(a.start_cst_id,a.cst_id) = c.cst_id    --2月前隐患清单
left join  edw.dim_hr_org_mng_org_tree_dd t2
on a.mng_org_id=t2.org_id and t2.dt='${data_dt}'  and  t2.eff_sts_ind='1'
where a.dt in ('${data_dt}',TO_CHAR(lastday(dateadd(TO_DATE('${data_dt}', 'yyyymmdd'), -2, 'mm')), 'yyyymmdd'))   --当月和2个月前
and (a.acc_type like '0%' or a.acc_type='信用卡') -- 保留表内业务
and a.acc_type not like '0301%' -- 剔除贴现
and a.bsn_line not like '%网贷%' -- 剔除网贷
and a.mng_org_id not like '330188811%'  -- 剔除总行台州交接业务（近期可用，20年19年机构号可能会变，不准）
and a.ctr_srl_no <> 'BC2023022300002420'--苏州一笔科企业务
and a.bsn_line <> '科技企业' ---科企业务从分行划出
and (t2.brc_org_id<>'' and t2.brc_org_id is not null)
group by
t2.brc_org_id
;

--近3个月精准贷后触发率
DROP TABLE if EXISTS lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_07;
CREATE TABLE IF NOT EXISTS lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_07 as
SELECT  t3.sbr_org_id	as org_id
        ,SUM(CASE
               WHEN T1.trg_jzdh_rule_type_cd IN ( '01' , '02' , '03' ) THEN 1
               ELSE 0
             END)                         AS 分子
        ,count(T1.cst_id)                 AS 分母
        ,SUM(CASE
               WHEN T1.trg_jzdh_rule_type_cd IN ( '01' , '02' , '03') THEN 1
               ELSE 0
             END) / count(T1.cst_id)      AS 触发率
FROM    adm_rsk.adm_rsk_apl_loan_aft_task_list_dd  T1
LEFT JOIN    adm_pub_app.ADM_PBLC_CST_PRM_MNG_INF_DD t2 --客户主管护信息
ON      T1.CST_ID = t2.CST_ID  AND     t2.DT = '${data_dt}'
left join edw.dim_hr_org_mng_org_tree_dd t3 on t2.prm_org_id=t3.org_id and t3.eff_sts_ind='1' and t3.dt='${data_dt}'
WHERE   T1.dt = '${data_dt}'
AND      to_date(T1.loan_aft_gen_dt, 'yyyymmdd') >= dateadd(to_date('${data_dt}', 'yyyymmdd'), - 90, 'dd')
AND      to_date(T1.loan_aft_gen_dt, 'yyyymmdd') <= to_date('${data_dt}', 'yyyymmdd')
and      t3.sbr_org_id<>''
GROUP BY t3.sbr_org_id
union all
SELECT  t3.tem_org_id	as org_id
        ,SUM(CASE
               WHEN T1.trg_jzdh_rule_type_cd IN ( '01' , '02' , '03' ) THEN 1
               ELSE 0
             END)                         AS 分子
        ,count(T1.cst_id)                 AS 分母
        ,SUM(CASE
               WHEN T1.trg_jzdh_rule_type_cd IN ( '01' , '02' , '03' ) THEN 1
               ELSE 0
             END) / count(T1.cst_id)      AS 触发率
FROM    adm_rsk.adm_rsk_apl_loan_aft_task_list_dd  T1
LEFT JOIN    adm_pub_app.ADM_PBLC_CST_PRM_MNG_INF_DD t2 --客户主管护信息
ON      T1.CST_ID = t2.CST_ID  AND     t2.DT = '${data_dt}'
left join edw.dim_hr_org_mng_org_tree_dd t3 on t2.prm_org_id=t3.org_id and t3.eff_sts_ind='1' and t3.dt='${data_dt}'
WHERE   T1.dt = '${data_dt}'
AND      to_date(T1.loan_aft_gen_dt, 'yyyymmdd') >= dateadd(to_date('${data_dt}', 'yyyymmdd'), - 90, 'dd')
AND      to_date(T1.loan_aft_gen_dt, 'yyyymmdd') <= to_date('${data_dt}', 'yyyymmdd')
and      t3.tem_org_id	<>''
GROUP BY t3.tem_org_id
union all
SELECT  t3.brc_org_id	as org_id
        ,SUM(CASE
               WHEN T1.trg_jzdh_rule_type_cd IN ( '01' , '02' , '03' ) THEN 1
               ELSE 0
             END)                         AS 分子
        ,count(T1.cst_id)                 AS 分母
        ,SUM(CASE
               WHEN T1.trg_jzdh_rule_type_cd IN ( '01' , '02' , '03' ) THEN 1
               ELSE 0
             END) / count(T1.cst_id)      AS 触发率
FROM    adm_rsk.adm_rsk_apl_loan_aft_task_list_dd  T1
LEFT JOIN    adm_pub_app.ADM_PBLC_CST_PRM_MNG_INF_DD t2 --客户主管护信息
ON      T1.CST_ID = t2.CST_ID  AND     t2.DT = '${data_dt}'
left join edw.dim_hr_org_mng_org_tree_dd t3 on t2.prm_org_id=t3.org_id and t3.eff_sts_ind='1' and t3.dt='${data_dt}'
WHERE   T1.dt = '${data_dt}'
AND      to_date(T1.loan_aft_gen_dt, 'yyyymmdd') >= dateadd(to_date('${data_dt}', 'yyyymmdd'), - 90, 'dd')
AND      to_date(T1.loan_aft_gen_dt, 'yyyymmdd') <= to_date('${data_dt}', 'yyyymmdd')
and      t3.brc_org_id	<>''
GROUP BY t3.brc_org_id
;


--**************************增量风险**********************************
INSERT INTO LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_01 PARTITION (dt = '${data_dt}')
-- 净增风险成本率	ZLFX_0001
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZLFX_0001'                           AS IND_ID
        ,T.净增风险成本率_Y                     AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_ZLFX_01 T
UNION ALL
-- 客均模型分	ZLFX_0005
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZLFX_0005'                       AS IND_ID
        ,T.客均融合模型分                     AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_ZLFX_04 T
UNION ALL
-- 客户模型分合计	ZLFX_0005_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZLFX_0005_01'                       AS IND_ID
        ,T.模型分合计                     AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_ZLFX_04 T
UNION ALL
-- 有授信余额客户数	ZLFX_0005_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZLFX_0005_02'                       AS IND_ID
        ,T.客户户数_有授信余额                     AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_ZLFX_04 T
UNION ALL
-- 授信客户的中高风险客户占比	ZLFX_0006
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZLFX_0006'                       AS IND_ID
        ,T.中高风险_有授信余额_户数占比                     AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_ZLFX_04 T
UNION ALL
-- 中高风险客户数	ZLFX_0006_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZLFX_0006_01'                       AS IND_ID
        ,T.中高风险客户数                     AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_ZLFX_04 T
UNION ALL
-- 授信客户的高风险客户占比	ZLFX_0007
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZLFX_0007'                       AS IND_ID
        ,T.高风险_有授信余额_户数占比                     AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_ZLFX_04 T
UNION ALL
-- 高风险客户数	ZLFX_0007_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZLFX_0007_01'                       AS IND_ID
        ,T.高风险客户数                     AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_ZLFX_04 T
UNION ALL
-- 当年新发生风险贷款率	ZLFX_0002
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZLFX_0002'                       AS IND_ID
        ,T.new_rsk_rat_y                    AS CUR_VAL
FROM  lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_02 T
UNION ALL
-- 当年新发生风险贷款余额	ZLFX_0002_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZLFX_0002_01'                       AS IND_ID
        ,T.new_rsk_y                      AS CUR_VAL
FROM  lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_02 T
UNION ALL
-- 贷款余额_不含核销	ZLFX_0002_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'ZLFX_0002_02'                       AS IND_ID
        ,T.bal_no_hx                      AS CUR_VAL
FROM  lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_02 T
UNION ALL
-- 近三个月精准贷后触发率	ZLFX_0014
SELECT  T.ORG_ID                              AS ORG_ID
        ,'ZLFX_0014'                       AS IND_ID
        ,T.触发率               AS CUR_VAL
FROM  lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_07 T
UNION ALL
-- 触发1预警1处置2处置客户数	ZLFX_0014_01
SELECT  T.ORG_ID                              AS ORG_ID
        ,'ZLFX_0014_01'                       AS IND_ID
        ,T.分子               AS CUR_VAL
FROM  lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_07 T
UNION ALL
-- 跑批精准贷后客户数	ZLFX_0014_02
SELECT  T.ORG_ID                              AS ORG_ID
        ,'ZLFX_0014_02'                       AS IND_ID
        ,T.分母               AS CUR_VAL
FROM  lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_07 T
-- UNION ALL
-- -- 近三个月处置类精准贷后现场走访比例	ZLFX_0015
-- SELECT  T.ORG_ID                              AS ORG_ID
--         ,'ZLFX_0015'                       AS IND_ID
--         ,T.近3个月处置类精准贷后现场走访比例               AS CUR_VAL
-- FROM  lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_08 T
-- UNION ALL
-- -- 近三个月贷后调查方式为现场调查户数	ZLFX_0015_01
-- SELECT  T.ORG_ID                              AS ORG_ID
--         ,'ZLFX_0015_01'                       AS IND_ID
--         ,T.现场走访数               AS CUR_VAL
-- FROM  lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_08 T
-- UNION ALL
-- -- 近三个月处置一级和处置二级精准贷后任务	ZLFX_0015_02
-- SELECT  T.ORG_ID                              AS ORG_ID
--         ,'ZLFX_0015_02'                       AS IND_ID
--         ,T.近3个月处置类精准贷后数               AS CUR_VAL
-- FROM  lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_08 T
UNION ALL
-- 隐患业务占比	ZLFX_0011
SELECT  T.ORG_ID                              AS ORG_ID
        ,'ZLFX_0011'                                 AS IND_ID
        ,T.当月隐患余额_万/T.当月贷款余额_万            AS CUR_VAL
FROM  lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_06 T
union all
-- 当月隐患余额_万	ZLFX_0011_01
SELECT  T.ORG_ID                              AS ORG_ID
        ,'ZLFX_0011_01'                                 AS IND_ID
        ,T.当月隐患余额_万            AS CUR_VAL
FROM  lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_06 T
union all
-- 当月信贷业务余额_万	ZLFX_0011_02
SELECT  T.ORG_ID                              AS ORG_ID
        ,'ZLFX_0011_02'                                 AS IND_ID
        ,T.当月贷款余额_万            AS CUR_VAL
FROM  lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_06 T
union all
-- 隐患业务命中率	ZLFX_0012
SELECT  T.ORG_ID                              AS ORG_ID
        ,'ZLFX_0012'                                 AS IND_ID
        ,T.当月出险且在2个月前隐患清单中的余额_万/T.当月出险余额_万            AS CUR_VAL
FROM  lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_06 T
union all
-- 当月出险且在2个月前隐患清单中余额_万	ZLFX_0012_01
SELECT  T.ORG_ID                              AS ORG_ID
        ,'ZLFX_0012_01'                                 AS IND_ID
        ,T.当月出险且在2个月前隐患清单中的余额_万            AS CUR_VAL
FROM  lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_06 T
union all
-- 当月出险余额_万	ZLFX_0012_02
SELECT  T.ORG_ID                              AS ORG_ID
        ,'ZLFX_0012_02'                                 AS IND_ID
        ,T.当月出险余额_万            AS CUR_VAL
FROM  lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_06 T
union all
-- 隐患业务出险率	ZLFX_0013
SELECT  T.ORG_ID                              AS ORG_ID
        ,'ZLFX_0013'                                 AS IND_ID
        ,T.当前出险且在2个月前隐患清单中的余额_万/T.2个月前隐患余额_万            AS CUR_VAL
FROM  lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_06 T
union all
-- 当前状态为已出险且在2个月前隐患清单中余额_万	ZLFX_0013_01
SELECT  T.ORG_ID                              AS ORG_ID
        ,'ZLFX_0013_01'                                 AS IND_ID
        ,T.当前出险且在2个月前隐患清单中的余额_万            AS CUR_VAL
FROM  lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_06 T
union all
-- 2个月前隐患清单余额	ZLFX_0013_02
SELECT  T.ORG_ID                              AS ORG_ID
        ,'ZLFX_0013_02'                                 AS IND_ID
        ,T.2个月前隐患余额_万            AS CUR_VAL
FROM  lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_ZLFX_06 T
;
--********************************全量风险***********************************

-- 全量风险成本率 = 期末已提 / 贷款余额不含核销
-- 全量风险贷款风险成本率 = 期末已提 / 贷款余额含核销_期末 + 条件：期末状态=内评出险
-- 全量非风险贷款风险成本率 = 期末已提 / 贷款余额含核销_期末 + 条件：期末状态=&ldquo;&rdquo;(非风险)
DROP TABLE if EXISTS lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_QLFX_01;
CREATE TABLE IF NOT EXISTS lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_QLFX_01 as
SELECT   b.org_lvl5_cd   as  org_id --保全还原管户机构号前七位   --我取的期末保全机构号 期初的话：TERM_INTL_SAVE_RSTR_MNG_OGR_ID
        ,b.org_lvl5_nm   as  org_nm
        ,move_sts_label                                       AS 迁徙状态标签 -- ,move_part_dtl as 迁徙分池细项
        ,CASE
           WHEN term_end_is_intn_aprs_hpn_rsk = 1 THEN '内评出险'
           ELSE ''
         END                                                  AS 期末状态
        ,move_part_ctg                                        AS 迁徙分池大类
        ,sum(CASE
               WHEN A.TERM_END_IS_WTF = 0 THEN A.TERM_END_PRCP_BAL
               ELSE 0
             END)                                             AS 贷款余额不含核销
        ,sum(CASE
               WHEN A.term_intl_is_wtf = 0 THEN nvl(A.term_intl_prcp_bal, 0)
               ELSE 0
             END)                                             AS 贷款余额不含核销_期初
        ,sum(nvl(A.TERM_END_PRCP_BAL, 0))                     AS 贷款余额含核销
        ,sum(nvl(TERM_END_ALRD_SBMT_RSK_COST_ORG_ID, 0))      AS 期末已提
        ,sum(nvl(TERM_MID_ALRD_SBMT_RSK_COST_ORG_ID_INCR, 0)) AS 期间已提风险成本_支行增量
        ,sum(nvl(A.term_intl_prcp_bal, 0))                    AS 贷款余额含核销_期末
FROM
adm_rsk.ADM_RSK_APL_RSK_COST_LOAN_ASSM_INCR_MGR_RSLT_DD A --新表
LEFT JOIN    app_iftp.VPFTP_ITG_DIM_ASES_LVL_BRANCH b
ON      org_lvl6_cd = coalesce(TERM_INTL_SAVE_RSTR_MNG_OGR_ID, TERM_END_SAVE_RSTR_MNG_OGR_ID)
AND     b.dt = '${data_dt}'
WHERE   a.dt = '${data_dt}' -- 剔除贴现和信用卡
and     b.org_lvl5_cd<>''
AND     nvl(a.prod_type_cd, 'xx') NOT IN ( '企业-票据贴现' , '个人-信用卡' , '企业-保函' , '企业-信用证' , '企业-票据承兑' ) -- 剔除网贷
AND     a.is_ntw_loan <> '1' -- 剔除员工贷款
AND     a.empe_loan_label <> '1' -- 剔除协作合同
AND     NOT EXISTS (
                       SELECT  1
                       FROM    app_iftp.xiezuo_ctr_list T2
                       WHERE   T2.CTR_SRL_NO = a.TERM_INTL_CTR_SRL_NO
                   ) -- 剔除协作客户
AND     NOT EXISTS (
                       SELECT  1
                       FROM    app_iftp.xiezuo_cst_list T3
                       WHERE   T3.cst_id = a.TERM_INTL_CST_ID
                   ) -- 剔除总行历史交接业务
AND     NOT EXISTS (
                       SELECT  1
                       FROM    app_iftp.zonghang_history_list T4
                       WHERE   T4.dbil_srl_no = a.TERM_INTL_DBIL_SRL_NO
                   )  -- -- 剔除杭州提前暴露合同清单
-- AND NOT EXISTS (SELECT 1 FROM hangzhou_adv_ctr_lsit T5 WHERE T4.CTR_SRL_NO = T1.TERM_INTL_DBIL_SRL_NO)
-- 剔除杭州提前暴露借据清单，重组前手借据号也属于清单的，也要剔除
AND     NOT EXISTS (
                       SELECT  1
                       FROM    app_iftp.hangzhou_adv_dbil_list T5
                       WHERE   T5.DBIL_SRL_NO = coalesce(a.BE_RFIN_DBIL_SRL_NO, a.TERM_INTL_DBIL_SRL_NO)
                   ) -- 筛选票据类
GROUP BY org_lvl5_cd , org_lvl5_nm , move_sts_label -- ,move_part_dtl
, move_part_ctg , CASE
                    WHEN term_end_is_intn_aprs_hpn_rsk = 1 THEN '内评出险'
                    ELSE ''
                  END
union all
SELECT   b.org_lvl6_cd   as  org_id  --保全还原管户机构号前七位   --我取的期末保全机构号 期初的话：TERM_INTL_SAVE_RSTR_MNG_OGR_ID
        ,b.org_lvl6_nm   as  org_nm
        ,move_sts_label                                       AS 迁徙状态标签 -- ,move_part_dtl as 迁徙分池细项
        ,CASE
           WHEN term_end_is_intn_aprs_hpn_rsk = 1 THEN '内评出险'
           ELSE ''
         END                                                  AS 期末状态
        ,move_part_ctg                                        AS 迁徙分池大类
        ,sum(CASE
               WHEN A.TERM_END_IS_WTF = 0 THEN A.TERM_END_PRCP_BAL
               ELSE 0
             END)                                             AS 贷款余额不含核销
        ,sum(CASE
               WHEN A.term_intl_is_wtf = 0 THEN nvl(A.term_intl_prcp_bal, 0)
               ELSE 0
             END)                                             AS 贷款余额不含核销_期初
        ,sum(nvl(A.TERM_END_PRCP_BAL, 0))                     AS 贷款余额含核销
        ,sum(nvl(TERM_END_ALRD_SBMT_RSK_COST_ORG_ID, 0))      AS 期末已提
        ,sum(nvl(TERM_MID_ALRD_SBMT_RSK_COST_ORG_ID_INCR, 0)) AS 期间已提风险成本_支行增量
        ,sum(nvl(A.term_intl_prcp_bal, 0))                    AS 贷款余额含核销_期末
FROM
adm_rsk.ADM_RSK_APL_RSK_COST_LOAN_ASSM_INCR_MGR_RSLT_DD A --新表
LEFT JOIN    app_iftp.VPFTP_ITG_DIM_ASES_LVL_BRANCH b
ON      org_lvl6_cd = coalesce(TERM_INTL_SAVE_RSTR_MNG_OGR_ID, TERM_END_SAVE_RSTR_MNG_OGR_ID)
AND     b.dt = '${data_dt}'
WHERE   a.dt = '${data_dt}' -- 剔除贴现和信用卡
and     b.org_lvl6_cd<>''
AND     nvl(a.prod_type_cd, 'xx') NOT IN ( '企业-票据贴现' , '个人-信用卡' , '企业-保函' , '企业-信用证' , '企业-票据承兑' ) -- 剔除网贷
AND     a.is_ntw_loan <> '1' -- 剔除员工贷款
AND     a.empe_loan_label <> '1' -- 剔除协作合同
AND     NOT EXISTS (
                       SELECT  1
                       FROM    app_iftp.xiezuo_ctr_list T2
                       WHERE   T2.CTR_SRL_NO = a.TERM_INTL_CTR_SRL_NO
                   ) -- 剔除协作客户
AND     NOT EXISTS (
                       SELECT  1
                       FROM    app_iftp.xiezuo_cst_list T3
                       WHERE   T3.cst_id = a.TERM_INTL_CST_ID
                   ) -- 剔除总行历史交接业务
AND     NOT EXISTS (
                       SELECT  1
                       FROM    app_iftp.zonghang_history_list T4
                       WHERE   T4.dbil_srl_no = a.TERM_INTL_DBIL_SRL_NO
                   )  -- -- 剔除杭州提前暴露合同清单
-- AND NOT EXISTS (SELECT 1 FROM hangzhou_adv_ctr_lsit T5 WHERE T4.CTR_SRL_NO = T1.TERM_INTL_DBIL_SRL_NO)
-- 剔除杭州提前暴露借据清单，重组前手借据号也属于清单的，也要剔除
AND     NOT EXISTS (
                       SELECT  1
                       FROM    app_iftp.hangzhou_adv_dbil_list T5
                       WHERE   T5.DBIL_SRL_NO = coalesce(a.BE_RFIN_DBIL_SRL_NO, a.TERM_INTL_DBIL_SRL_NO)
                   ) -- 筛选票据类
GROUP BY org_lvl6_cd , org_lvl6_nm , move_sts_label -- ,move_part_dtl
, move_part_ctg , CASE
                    WHEN term_end_is_intn_aprs_hpn_rsk = 1 THEN '内评出险'
                    ELSE ''
                  END
union all
SELECT   b.org_lvl4_cd   as  org_id   --保全还原管户机构号前七位   --我取的期末保全机构号 期初的话：TERM_INTL_SAVE_RSTR_MNG_OGR_ID
        ,b.org_lvl4_nm   as  org_nm
        ,move_sts_label                                       AS 迁徙状态标签 -- ,move_part_dtl as 迁徙分池细项
        ,CASE
           WHEN term_end_is_intn_aprs_hpn_rsk = 1 THEN '内评出险'
           ELSE ''
         END                                                  AS 期末状态
        ,move_part_ctg                                        AS 迁徙分池大类
        ,sum(CASE
               WHEN A.TERM_END_IS_WTF = 0 THEN A.TERM_END_PRCP_BAL
               ELSE 0
             END)                                             AS 贷款余额不含核销
        ,sum(CASE
               WHEN A.term_intl_is_wtf = 0 THEN nvl(A.term_intl_prcp_bal, 0)
               ELSE 0
             END)                                             AS 贷款余额不含核销_期初
        ,sum(nvl(A.TERM_END_PRCP_BAL, 0))                     AS 贷款余额含核销
        ,sum(nvl(TERM_END_ALRD_SBMT_RSK_COST_ORG_ID, 0))      AS 期末已提
        ,sum(nvl(TERM_MID_ALRD_SBMT_RSK_COST_ORG_ID_INCR, 0)) AS 期间已提风险成本_支行增量
        ,sum(nvl(A.term_intl_prcp_bal, 0))                    AS 贷款余额含核销_期末
FROM
adm_rsk.ADM_RSK_APL_RSK_COST_LOAN_ASSM_INCR_MGR_RSLT_DD A --新表
LEFT JOIN    app_iftp.VPFTP_ITG_DIM_ASES_LVL_BRANCH b
ON      org_lvl4_cd = coalesce(TERM_INTL_SAVE_RSTR_MNG_OGR_ID, TERM_END_SAVE_RSTR_MNG_OGR_ID)
AND     b.dt = '${data_dt}'
WHERE   a.dt = '${data_dt}' -- 剔除贴现和信用卡
AND     nvl(a.prod_type_cd, 'xx') NOT IN ( '企业-票据贴现' , '个人-信用卡' , '企业-保函' , '企业-信用证' , '企业-票据承兑' ) -- 剔除网贷
AND     a.is_ntw_loan <> '1' -- 剔除员工贷款
AND     a.empe_loan_label <> '1' -- 剔除协作合同
and     b.org_lvl4_cd<>''
AND     NOT EXISTS (
                       SELECT  1
                       FROM    app_iftp.xiezuo_ctr_list T2
                       WHERE   T2.CTR_SRL_NO = a.TERM_INTL_CTR_SRL_NO
                   ) -- 剔除协作客户
AND     NOT EXISTS (
                       SELECT  1
                       FROM    app_iftp.xiezuo_cst_list T3
                       WHERE   T3.cst_id = a.TERM_INTL_CST_ID
                   ) -- 剔除总行历史交接业务
AND     NOT EXISTS (
                       SELECT  1
                       FROM    app_iftp.zonghang_history_list T4
                       WHERE   T4.dbil_srl_no = a.TERM_INTL_DBIL_SRL_NO
                   )  -- -- 剔除杭州提前暴露合同清单
-- AND NOT EXISTS (SELECT 1 FROM hangzhou_adv_ctr_lsit T5 WHERE T4.CTR_SRL_NO = T1.TERM_INTL_DBIL_SRL_NO)
-- 剔除杭州提前暴露借据清单，重组前手借据号也属于清单的，也要剔除
AND     NOT EXISTS (
                       SELECT  1
                       FROM    app_iftp.hangzhou_adv_dbil_list T5
                       WHERE   T5.DBIL_SRL_NO = coalesce(a.BE_RFIN_DBIL_SRL_NO, a.TERM_INTL_DBIL_SRL_NO)
                   ) -- 筛选票据类
GROUP BY org_lvl4_cd , org_lvl4_nm , move_sts_label -- ,move_part_dtl
, move_part_ctg , CASE
                    WHEN term_end_is_intn_aprs_hpn_rsk = 1 THEN '内评出险'
                    ELSE ''
                  END
;


-- 全量风险成本率（拨贷比）	QLFX_0001
-- 全量风险贷款风险成本率（拨贷比）	QLFX_0002
-- 全量非风险贷款风险成本率（拨贷比）	QLFX_0003
-- 风险贷款上迁率	QLFX_0004
-- 风险贷款下迁率	QLFX_0005
-- 不良贷款率	QLFX_0006
-- 非风险贷款业务下迁率	QLFX_0007

--**************************全量风险**********************************
INSERT INTO lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_01 PARTITION (dt = '${data_dt}')
SELECT  t1.org_id
        ,'QLFX_0001'   AS IND_ID
        ,sum(t1.期末已提)/if(sum(t1.贷款余额不含核销)=0,null,sum(t1.贷款余额不含核销))   AS CUR_VAL
from    lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_QLFX_01 t1
GROUP BY t1.org_id
union all
SELECT  t1.org_id
        ,'QLFX_0001_01'   AS IND_ID
        ,sum(t1.期末已提)  AS CUR_VAL
from    lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_QLFX_01 t1
GROUP BY t1.org_id
union all
SELECT  t1.org_id
        ,'QLFX_0001_02'   AS IND_ID
        ,sum(t1.贷款余额不含核销)   AS CUR_VAL
from    lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_QLFX_01 t1
GROUP BY t1.org_id
union all
SELECT  t1.org_id
        ,'QLFX_0002'   AS IND_ID
        ,sum(t1.期末已提)/if(sum(t1.贷款余额不含核销)=0,null,sum(t1.贷款余额不含核销))   AS CUR_VAL
from    lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_QLFX_01 t1
where   t1.期末状态='内评出险'
GROUP BY t1.org_id
union all
SELECT  t1.org_id
        ,'QLFX_0002_01'   AS IND_ID
        ,sum(t1.期末已提)   AS CUR_VAL
from    lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_QLFX_01 t1
where   t1.期末状态='内评出险'
GROUP BY t1.org_id
union all
SELECT  t1.org_id
        ,'QLFX_0002_02'   AS IND_ID
        ,sum(t1.贷款余额不含核销)   AS CUR_VAL
from    lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_QLFX_01 t1
where   t1.期末状态='内评出险'
GROUP BY t1.org_id
union all
SELECT  t1.org_id
        ,'QLFX_0003'   AS IND_ID
        ,sum(t1.期末已提)/if(sum(t1.贷款余额不含核销)=0,null,sum(t1.贷款余额不含核销))   AS CUR_VAL
from    lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_QLFX_01 t1
where   t1.期末状态=''
GROUP BY t1.org_id
union all
SELECT  t1.org_id
        ,'QLFX_0003_01'   AS IND_ID
        ,sum(t1.期末已提)   AS CUR_VAL
from    lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_QLFX_01 t1
where   t1.期末状态=''
GROUP BY t1.org_id
union all
SELECT  t1.org_id
        ,'QLFX_0003_02'   AS IND_ID
        ,sum(t1.贷款余额不含核销)   AS CUR_VAL
from    lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_QLFX_01 t1
where   t1.期末状态=''
GROUP BY t1.org_id
union all
SELECT  t1.org_id
        ,'QLFX_0004'   AS IND_ID
        ,sum(case when t1.迁徙状态标签='上迁' then t1.贷款余额不含核销_期初 end)/if(sum(t1.贷款余额不含核销_期初)=0,null,sum(t1.贷款余额不含核销_期初))   AS CUR_VAL
from    lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_QLFX_01 t1
where   t1.期末状态='内评出险'
GROUP BY t1.org_id
union all
SELECT  t1.org_id
        ,'QLFX_0004_01'   AS IND_ID
        ,sum(case when t1.迁徙状态标签='上迁' then t1.贷款余额不含核销_期初 end)   AS CUR_VAL
from    lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_QLFX_01 t1
where   t1.期末状态='内评出险'
GROUP BY t1.org_id
union all
SELECT  t1.org_id
        ,'QLFX_0004_02'   AS IND_ID
        ,sum(t1.贷款余额不含核销_期初)   AS CUR_VAL
from    lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_QLFX_01 t1
where   t1.期末状态='内评出险'
GROUP BY t1.org_id
union all
SELECT  t1.org_id
        ,'QLFX_0005'   AS IND_ID
        ,sum(case when t1.迁徙状态标签='下迁' then t1.贷款余额不含核销_期初 end)/if(sum(t1.贷款余额不含核销_期初)=0,null,sum(t1.贷款余额不含核销_期初))   AS CUR_VAL
from    lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_QLFX_01 t1
where   t1.期末状态='内评出险'
GROUP BY t1.org_id
union all
SELECT  t1.org_id
        ,'QLFX_0005_01'   AS IND_ID
        ,sum(case when t1.迁徙状态标签='下迁' then t1.贷款余额不含核销_期初 end)   AS CUR_VAL
from    lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_QLFX_01 t1
where   t1.期末状态='内评出险'
GROUP BY t1.org_id
union all
select
t1.org_no       AS  org_id
,'QLFX_0006'    AS  IND_ID
,t1.cur_idx     AS  CUR_VAL
from adm_ind.ADM_IND_I_RPT_ORG_RSK_IDX_DD t1
inner join edw.dim_hr_org_mng_org_tree_dd  t2
on   t1.org_no=t2.org_id and t2.dt='20250228'  and  t2.eff_sts_ind='1'
where t1.dt='20250228'
and   t1.idx_no='RK170101_0001'  -- 不良贷款率
and   t1.ccy_cd='CN'
union all
SELECT  t1.org_id
        ,'QLFX_0007'   AS IND_ID
        ,sum(case when t1.迁徙状态标签='下迁' then t1.贷款余额不含核销_期初 end)/if(sum(t1.贷款余额不含核销_期初)=0,null,sum(t1.贷款余额不含核销_期初))   AS CUR_VAL
from    lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_QLFX_01 t1
where   t1.期末状态=''
GROUP BY t1.org_id
union all
SELECT  t1.org_id
        ,'QLFX_0007_01'   AS IND_ID
        ,sum(case when t1.迁徙状态标签='下迁' then t1.贷款余额不含核销_期初 end)   AS CUR_VAL
from    lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_QLFX_01 t1
where   t1.期末状态=''
GROUP BY t1.org_id
union all
SELECT  t1.org_id
        ,'QLFX_0007_02'   AS IND_ID
        ,sum(t1.贷款余额不含核销_期初)   AS CUR_VAL
from    lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_QLFX_01 t1
where   t1.期末状态=''
GROUP BY t1.org_id
;



--**************************客户经理能力**********************************

-- 三级以上信贷资质客户经理占比	KHJL_0001
-- 衍生品基础销售资质比例	KHJL_0002
-- 衍生品高级销售资质比例	KHJL_0003
-- 国际业务破冰率	KHJL_0004
-- 客户经理基金持证率	KHJL_0005
-- 客户经理理财持证率	KHJL_0006
-- 客户经理保险持证率	KHJL_0007
-- 客户经理基金破冰率	KHJL_0008
-- 客户经理理财破冰率	KHJL_0009
-- 客户经理保险破冰率	KHJL_0010
-- 低新增客户经理占比	KHJL_0011

DROP TABLE if EXISTS lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_KHJL_01;
CREATE TABLE IF NOT EXISTS lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_KHJL_01 as
SELECT  t.dt as DATA_DT
        ,org.tem_org_id AS org_id
        ,count(1)   as emp_num
FROM    edw.dws_hr_empe_inf_dd t  --员工汇总信息
LEFT JOIN    edw.dim_hr_org_job_inf_dd p  --职位信息
ON      t.pos_enc = p.pos_id   --职位编码关联
AND     t.dt = p.dt
AND     p.dt in ('@@{yyyy-1y}0131','@@{yyyy-1y}0229','@@{yyyy-1y}0331','@@{yyyy-1y}0430','@@{yyyy-1y}0531','@@{yyyy-1y}0630','@@{yyyy-1y}0731','@@{yyyy-1y}0831','@@{yyyy-1y}0930','@@{yyyy-1y}1031','@@{yyyy-1y}1130','@@{yyyy-1y}1231','@@{yyyy}0131','@@{yyyy}0228','@@{yyyy}0331','@@{yyyy}0430','@@{yyyy}0531','@@{yyyy}0630','@@{yyyy}0731','@@{yyyy}0831','@@{yyyy}0930','@@{yyyy}1031','@@{yyyy}1130','@@{yyyy}1231')
inner join edw.dim_hr_org_mng_org_tree_dd org on t.org_id=org.org_id and org.eff_sts_ind='1'  and org.dt=${data_dt}
WHERE   1 = 1
AND     t.lbr_tp_sts IN ( '4' )
and     t.empe_sts_cd='2'  --在职
and     p.dty_id in ('P3010','P3020')
AND     p.pos_nm LIKE '%客户经理%'
AND     t.dt in ('@@{yyyy-1y}0131','@@{yyyy-1y}0229','@@{yyyy-1y}0331','@@{yyyy-1y}0430','@@{yyyy-1y}0531','@@{yyyy-1y}0630','@@{yyyy-1y}0731','@@{yyyy-1y}0831','@@{yyyy-1y}0930','@@{yyyy-1y}1031','@@{yyyy-1y}1130','@@{yyyy-1y}1231','@@{yyyy}0131','@@{yyyy}0228','@@{yyyy}0331','@@{yyyy}0430','@@{yyyy}0531','@@{yyyy}0630','@@{yyyy}0731','@@{yyyy}0831','@@{yyyy}0930','@@{yyyy}1031','@@{yyyy}1130','@@{yyyy}1231')
and     t.dt<=${data_dt}
and     t.dt>='@@{yyyy}0101'
and     nvl(org.tem_org_id,'')<>''
GROUP BY t.dt,org.tem_org_id
union all
SELECT  t.dt as DATA_DT
        ,org.sbr_org_id AS org_id
        ,count(1)   as emp_num
FROM    edw.dws_hr_empe_inf_dd t
LEFT JOIN    edw.dim_hr_org_job_inf_dd p
ON      t.pos_enc = p.pos_id
AND     t.dt = p.dt
AND     p.dt in ('@@{yyyy-1y}0131','@@{yyyy-1y}0229','@@{yyyy-1y}0331','@@{yyyy-1y}0430','@@{yyyy-1y}0531','@@{yyyy-1y}0630','@@{yyyy-1y}0731','@@{yyyy-1y}0831','@@{yyyy-1y}0930','@@{yyyy-1y}1031','@@{yyyy-1y}1130','@@{yyyy-1y}1231','@@{yyyy}0131','@@{yyyy}0228','@@{yyyy}0331','@@{yyyy}0430','@@{yyyy}0531','@@{yyyy}0630','@@{yyyy}0731','@@{yyyy}0831','@@{yyyy}0930','@@{yyyy}1031','@@{yyyy}1130','@@{yyyy}1231')
inner join edw.dim_hr_org_mng_org_tree_dd org on t.org_id=org.org_id and org.eff_sts_ind='1'  and org.dt=${data_dt}
WHERE   1 = 1
AND     t.lbr_tp_sts IN ( '4' )
and     t.empe_sts_cd='2'  --在职
and     p.dty_id in ('P3010','P3020')
AND     p.pos_nm LIKE '%客户经理%'
AND     t.dt in ('@@{yyyy-1y}0131','@@{yyyy-1y}0229','@@{yyyy-1y}0331','@@{yyyy-1y}0430','@@{yyyy-1y}0531','@@{yyyy-1y}0630','@@{yyyy-1y}0731','@@{yyyy-1y}0831','@@{yyyy-1y}0930','@@{yyyy-1y}1031','@@{yyyy-1y}1130','@@{yyyy-1y}1231','@@{yyyy}0131','@@{yyyy}0228','@@{yyyy}0331','@@{yyyy}0430','@@{yyyy}0531','@@{yyyy}0630','@@{yyyy}0731','@@{yyyy}0831','@@{yyyy}0930','@@{yyyy}1031','@@{yyyy}1130','@@{yyyy}1231')
and     t.dt<=${data_dt}
and     t.dt>='@@{yyyy}0101'
and     nvl(org.sbr_org_id,'')<>''
GROUP BY t.dt,org.sbr_org_id
union all
SELECT  t.dt as DATA_DT
        ,org.brc_org_id AS org_id
        ,count(1)   as emp_num
FROM    edw.dws_hr_empe_inf_dd t
LEFT JOIN    edw.dim_hr_org_job_inf_dd p
ON      t.pos_enc = p.pos_id
AND     t.dt = p.dt
AND     p.dt in ('@@{yyyy-1y}0131','@@{yyyy-1y}0229','@@{yyyy-1y}0331','@@{yyyy-1y}0430','@@{yyyy-1y}0531','@@{yyyy-1y}0630','@@{yyyy-1y}0731','@@{yyyy-1y}0831','@@{yyyy-1y}0930','@@{yyyy-1y}1031','@@{yyyy-1y}1130','@@{yyyy-1y}1231','@@{yyyy}0131','@@{yyyy}0228','@@{yyyy}0331','@@{yyyy}0430','@@{yyyy}0531','@@{yyyy}0630','@@{yyyy}0731','@@{yyyy}0831','@@{yyyy}0930','@@{yyyy}1031','@@{yyyy}1130','@@{yyyy}1231')
inner join edw.dim_hr_org_mng_org_tree_dd org on t.org_id=org.org_id and org.eff_sts_ind='1'  and org.dt=${data_dt}
WHERE   1 = 1
AND     t.lbr_tp_sts IN ( '4' )
and     t.empe_sts_cd='2'  --在职
and     p.dty_id in ('P3010','P3020')
AND     p.pos_nm LIKE '%客户经理%'
AND     t.dt in ('@@{yyyy-1y}0131','@@{yyyy-1y}0229','@@{yyyy-1y}0331','@@{yyyy-1y}0430','@@{yyyy-1y}0531','@@{yyyy-1y}0630','@@{yyyy-1y}0731','@@{yyyy-1y}0831','@@{yyyy-1y}0930','@@{yyyy-1y}1031','@@{yyyy-1y}1130','@@{yyyy-1y}1231','@@{yyyy}0131','@@{yyyy}0228','@@{yyyy}0331','@@{yyyy}0430','@@{yyyy}0531','@@{yyyy}0630','@@{yyyy}0731','@@{yyyy}0831','@@{yyyy}0930','@@{yyyy}1031','@@{yyyy}1130','@@{yyyy}1231')
and     t.dt<=${data_dt}
and     t.dt>='@@{yyyy}0101'
and     nvl(org.brc_org_id,'')<>''
GROUP BY t.dt,org.brc_org_id
;


DROP TABLE if EXISTS lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_KHJL_02;
CREATE TABLE IF NOT EXISTS lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_KHJL_02 as
SELECT  org.tem_org_id as ORG_ID
        ,count(distinct t1.EMPE_ID) as DWJS2_0004_01
        ,count(distinct t1.EMPE_ID)/IF(t3.emp_num = 0, NULL, t3.emp_num ) as DWJS2_0004
FROM    edw.dws_hr_empe_inf_dd t
inner join edw.dim_hr_empe_mgr_qua_inf_dd t1   --客户经理资质信息,模型层
on     t.empe_id=t1.EMPE_ID and t1.dt=${data_dt}
LEFT JOIN    edw.dim_hr_org_job_inf_dd p  --职位信息
ON      t.pos_enc = p.pos_id
AND     t.dt = p.dt
inner join edw.dim_hr_org_mng_org_tree_dd org on t.org_id=org.org_id and org.eff_sts_ind='1'  and org.dt=${data_dt}
LEFT JOIN  LAB_BIGDATA_DEV.HGL_ORG_KHJL t3
on nvl(org.tem_org_id, '0') = nvl(t3.org_id, '0') and t3.dt=${data_dt} and t3.DATA_DT=${data_dt}
WHERE   1 = 1
and     t.empe_sts_cd='2'  --在职
and     p.dty_id in ('P3010','P3020')
AND     p.pos_nm LIKE '%客户经理%'
and     t1.STS_CD = '1' --状态为启用
and     t1.QUA_SUB_CLS_CD in ('0060003','0060004','0060005','0060006')  --三级及以上调查资质
-- and     t1.VLD_STS_CD = '1' --状态为有效，新表废弃
and     t.dt=${data_dt}
and     nvl(org.tem_org_id,'')<>''
GROUP BY org.tem_org_id,t3.emp_num
union all
SELECT  org.sbr_org_id as ORG_ID
        ,count(distinct t1.EMPE_ID) as DWJS2_0004_01
        ,count(distinct t1.EMPE_ID)/IF(t3.emp_num = 0, NULL, t3.emp_num ) as DWJS2_0004
FROM    edw.dws_hr_empe_inf_dd t
inner join edw.dim_hr_empe_mgr_qua_inf_dd t1  --客户经理资质
on     t.empe_id=t1.EMPE_ID and t1.dt=${data_dt}
LEFT JOIN    edw.dim_hr_org_job_inf_dd p
ON      t.pos_enc = p.pos_id
AND     t.dt = p.dt
inner join edw.dim_hr_org_mng_org_tree_dd org on t.org_id=org.org_id and org.eff_sts_ind='1'  and org.dt=${data_dt}
LEFT JOIN  LAB_BIGDATA_DEV.HGL_ORG_KHJL t3
on nvl(org.sbr_org_id, '0') = nvl(t3.org_id, '0') and t3.dt=${data_dt} and t3.DATA_DT=${data_dt}
WHERE   1 = 1
and     t.empe_sts_cd='2'  --在职
and     p.dty_id in ('P3010','P3020')
AND     p.pos_nm LIKE '%客户经理%'
and     t1.STS_CD = '1' --状态为启用
and     t1.QUA_SUB_CLS_CD in ('0060003','0060004','0060005','0060006')  --三级及以上调查资质
-- and     t1.VLD_STS_CD = '1' --状态为有效
and     t.dt=${data_dt}
and     nvl(org.sbr_org_id,'')<>''
GROUP BY org.sbr_org_id,t3.emp_num
union all
SELECT  org.brc_org_id as ORG_ID
        ,count(distinct t1.EMPE_ID) as DWJS2_0004_01
        ,count(distinct t1.EMPE_ID)/IF(t3.emp_num = 0, NULL, t3.emp_num ) as DWJS2_0004
FROM    edw.dws_hr_empe_inf_dd t
inner join edw.dim_hr_empe_mgr_qua_inf_dd t1
on     t.empe_id=t1.EMPE_ID and t1.dt=${data_dt}
LEFT JOIN    edw.dim_hr_org_job_inf_dd p
ON      t.pos_enc = p.pos_id
AND     t.dt = p.dt
inner join edw.dim_hr_org_mng_org_tree_dd org on t.org_id=org.org_id and org.eff_sts_ind='1'  and org.dt=${data_dt}
LEFT JOIN  LAB_BIGDATA_DEV.HGL_ORG_KHJL t3
on nvl(org.brc_org_id, '0') = nvl(t3.org_id, '0') and t3.dt=${data_dt} and t3.DATA_DT=${data_dt}
WHERE   1 = 1
and     t.empe_sts_cd='2'  --在职
and     p.dty_id in ('P3010','P3020')
AND     p.pos_nm LIKE '%客户经理%'
and     t1.STS_CD = '1' --状态为启用
and     t1.QUA_SUB_CLS_CD in ('0060003','0060004','0060005','0060006')  --三级及以上调查资质
-- and     t1.VLD_STS_CD = '1' --状态为有效
and     t.dt=${data_dt}
and     nvl(org.brc_org_id,'')<>''
GROUP BY org.brc_org_id,t3.emp_num
;

--客户经理和服务经理持证率及破冰率
DROP TABLE if EXISTS lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_KHJL_03;
CREATE TABLE IF NOT EXISTS lab_bigdata_dev.HGL_ORG_TAG_IND_DD_3_KHJL_03 as
select
t1.员工所在分行编号 AS ORG_ID
,sum(case when  员工岗位='客户经理'  then 1 else 0 end)      当前在职客户经理人数
,sum(case when t1.理财资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  当前客户经理理财持证人数
,sum(case when t1.理财资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when  员工岗位='客户经理'  then 1 else 0 end)  客户经理理财持证率
,sum(case when t1.理财破冰 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  当前客户经理理财破冰人数
,sum(case when t1.理财破冰 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when t1.理财资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  客户经理理财破冰率
,sum(case when t1.保险资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  当前客户经理保险持证人数
,sum(case when t1.保险资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when  员工岗位='客户经理'  then 1 else 0 end)  客户经理保险持证率
,sum(case when t1.保险破冰 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  当前客户经理保险破冰人数
,sum(case when t1.保险破冰 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when t1.保险资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  客户经理保险破冰率
,sum(case when t1.基金资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  当前客户经理基金持证人数
,sum(case when t1.基金资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when  员工岗位='客户经理'  then 1 else 0 end)  客户经理基金持证率
,sum(case when t1.基金破冰 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  当前客户经理基金破冰人数
,sum(case when t1.基金破冰 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when t1.基金资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  客户经理基金破冰率
,sum(case when  员工岗位='服务经理'  then 1 else 0 end)      当前在职服务经理人数
,sum(case when t1.理财资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )  当前服务经理理财持证人数
,sum(case when t1.理财资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when  员工岗位='服务经理'  then 1 else 0 end)  服务经理理财持证率
,sum(case when t1.理财破冰 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )  当前服务经理理财破冰人数
,sum(case when t1.理财破冰 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when t1.理财资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )  服务经理理财破冰率
,sum(case when t1.保险资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )  当前服务经理保险持证人数
,sum(case when t1.保险资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when  员工岗位='服务经理'  then 1 else 0 end)  服务经理保险持证率
,sum(case when t1.保险破冰 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )  当前服务经理保险破冰人数
,sum(case when t1.保险破冰 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when t1.保险资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )  服务经理保险破冰率
,sum(case when t1.基金资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )     当前服务经理基金持证人数
,sum(case when t1.基金资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when  员工岗位='服务经理'  then 1 else 0 end)  服务经理基金持证率
,sum(case when t1.基金破冰 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )  当前服务经理基金破冰人数
,sum(case when t1.基金破冰 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when t1.基金资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )  服务经理基金破冰率
from  lab_risk_dev.empe_org_emp_pb_dd t1
where t1.dt='${data_dt}'
and   t1.员工所在分行编号 is not null
GROUP BY t1.员工所在分行编号
UNION ALL
select
t1.员工所在支行编号 AS ORG_ID
,sum(case when  员工岗位='客户经理'  then 1 else 0 end)      当前在职客户经理人数
,sum(case when t1.理财资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  当前客户经理理财持证人数
,sum(case when t1.理财资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when  员工岗位='客户经理'  then 1 else 0 end)  客户经理理财持证率
,sum(case when t1.理财破冰 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  当前客户经理理财破冰人数
,sum(case when t1.理财破冰 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when t1.理财资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  客户经理理财破冰率
,sum(case when t1.保险资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  当前客户经理保险持证人数
,sum(case when t1.保险资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when  员工岗位='客户经理'  then 1 else 0 end)  客户经理保险持证率
,sum(case when t1.保险破冰 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  当前客户经理保险破冰人数
,sum(case when t1.保险破冰 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when t1.保险资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  客户经理保险破冰率
,sum(case when t1.基金资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  当前客户经理基金持证人数
,sum(case when t1.基金资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when  员工岗位='客户经理'  then 1 else 0 end)  客户经理基金持证率
,sum(case when t1.基金破冰 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  当前客户经理基金破冰人数
,sum(case when t1.基金破冰 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when t1.基金资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  客户经理基金破冰率
,sum(case when  员工岗位='服务经理'  then 1 else 0 end)      当前在职服务经理人数
,sum(case when t1.理财资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )  当前服务经理理财持证人数
,sum(case when t1.理财资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when  员工岗位='服务经理'  then 1 else 0 end)  服务经理理财持证率
,sum(case when t1.理财破冰 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )  当前服务经理理财破冰人数
,sum(case when t1.理财破冰 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when t1.理财资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )  服务经理理财破冰率
,sum(case when t1.保险资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )  当前服务经理保险持证人数
,sum(case when t1.保险资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when  员工岗位='服务经理'  then 1 else 0 end)  服务经理保险持证率
,sum(case when t1.保险破冰 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )  当前服务经理保险破冰人数
,sum(case when t1.保险破冰 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when t1.保险资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )  服务经理保险破冰率
,sum(case when t1.基金资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )     当前服务经理基金持证人数
,sum(case when t1.基金资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when  员工岗位='服务经理'  then 1 else 0 end)  服务经理基金持证率
,sum(case when t1.基金破冰 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )  当前服务经理基金破冰人数
,sum(case when t1.基金破冰 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when t1.基金资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )  服务经理基金破冰率
from  lab_risk_dev.empe_org_emp_pb_dd t1
where t1.dt='${data_dt}'
and   t1.员工所在支行编号 is not null
GROUP BY t1.员工所在支行编号
UNION ALL
select
t1.员工所在团队编号 AS ORG_ID
,sum(case when  员工岗位='客户经理'  then 1 else 0 end)      当前在职客户经理人数
,sum(case when t1.理财资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  当前客户经理理财持证人数
,sum(case when t1.理财资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when  员工岗位='客户经理'  then 1 else 0 end)  客户经理理财持证率
,sum(case when t1.理财破冰 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  当前客户经理理财破冰人数
,sum(case when t1.理财破冰 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when t1.理财资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  客户经理理财破冰率
,sum(case when t1.保险资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  当前客户经理保险持证人数
,sum(case when t1.保险资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when  员工岗位='客户经理'  then 1 else 0 end)  客户经理保险持证率
,sum(case when t1.保险破冰 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  当前客户经理保险破冰人数
,sum(case when t1.保险破冰 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when t1.保险资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  客户经理保险破冰率
,sum(case when t1.基金资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  当前客户经理基金持证人数
,sum(case when t1.基金资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when  员工岗位='客户经理'  then 1 else 0 end)  客户经理基金持证率
,sum(case when t1.基金破冰 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  当前客户经理基金破冰人数
,sum(case when t1.基金破冰 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when t1.基金资质 is not null  and 员工岗位='客户经理' and t1.员工状态='在职' then 1 else 0 end )  客户经理基金破冰率
,sum(case when  员工岗位='服务经理'  then 1 else 0 end)      当前在职服务经理人数
,sum(case when t1.理财资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )  当前服务经理理财持证人数
,sum(case when t1.理财资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when  员工岗位='服务经理'  then 1 else 0 end)  服务经理理财持证率
,sum(case when t1.理财破冰 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )  当前服务经理理财破冰人数
,sum(case when t1.理财破冰 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when t1.理财资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )  服务经理理财破冰率
,sum(case when t1.保险资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )  当前服务经理保险持证人数
,sum(case when t1.保险资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when  员工岗位='服务经理'  then 1 else 0 end)  服务经理保险持证率
,sum(case when t1.保险破冰 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )  当前服务经理保险破冰人数
,sum(case when t1.保险破冰 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when t1.保险资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )  服务经理保险破冰率
,sum(case when t1.基金资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )     当前服务经理基金持证人数
,sum(case when t1.基金资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when  员工岗位='服务经理'  then 1 else 0 end)  服务经理基金持证率
,sum(case when t1.基金破冰 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )  当前服务经理基金破冰人数
,sum(case when t1.基金破冰 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )/sum(case when t1.基金资质 is not null  and 员工岗位='服务经理' and t1.员工状态='在职' then 1 else 0 end )  服务经理基金破冰率
from  lab_risk_dev.empe_org_emp_pb_dd t1
where t1.dt='${data_dt}'
and   t1.员工所在团队编号 is not null
GROUP BY t1.员工所在团队编号
;


INSERT INTO LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_01 PARTITION (dt = '${data_dt}')
-- 当前三级及以上信贷资质客户经理人数	KHJL_0001_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'KHJL_0001_01'                       AS IND_ID
        ,T.DWJS2_0004_01                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_02 T
UNION ALL
SELECT  T.ORG_ID                               AS ORG_ID
        ,'KHJL_0001_02'                       AS IND_ID
        ,T.emp_num                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_01 T
WHERE T.DATA_DT = ${data_dt}
UNION ALL
-- 三级以上信贷资质客户经理占比	KHJL_0001
SELECT  T.ORG_ID                               AS ORG_ID
        ,'KHJL_0001'                       AS IND_ID
        ,T.DWJS2_0004                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_02 T
UNION ALL
-- 客户经理基金持证率	KHJL_0005
SELECT  T.ORG_ID                               AS ORG_ID
        ,'KHJL_0005'                       AS IND_ID
        ,T.客户经理基金持证率                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
UNION ALL
-- 当前客户经理基金持证人数	KHJL_0005_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'KHJL_0005_01'                       AS IND_ID
        ,T.当前客户经理基金持证人数                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
UNION ALL
-- 当前在职客户经理人数	KHJL_0005_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'KHJL_0005_02'                       AS IND_ID
        ,T.当前在职客户经理人数                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
UNION ALL
-- 客户经理理财持证率	KHJL_0006
SELECT  T.ORG_ID                               AS ORG_ID
        ,'KHJL_0006'                       AS IND_ID
        ,T.客户经理理财持证率                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
UNION ALL
-- 当前客户经理理财持证人数	KHJL_0006_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'KHJL_0006_01'                       AS IND_ID
        ,T.当前客户经理理财持证人数                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
UNION ALL
-- 客户经理保险持证率	KHJL_0007
SELECT  T.ORG_ID                               AS ORG_ID
        ,'KHJL_0007'                       AS IND_ID
        ,T.客户经理保险持证率                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
UNION ALL
-- 当前客户经理保险持证人数	KHJL_0007_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'KHJL_0007_01'                       AS IND_ID
        ,T.当前客户经理保险持证人数                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
UNION ALL
-- 客户经理基金破冰率	KHJL_0008
SELECT  T.ORG_ID                               AS ORG_ID
        ,'KHJL_0008'                       AS IND_ID
        ,T.客户经理基金破冰率                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
UNION ALL
-- 当前客户经理基金破冰人数	KHJL_0008_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'KHJL_0008_01'                       AS IND_ID
        ,T.当前客户经理基金破冰人数                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
UNION ALL
-- 客户经理理财破冰率	KHJL_0009
SELECT  T.ORG_ID                               AS ORG_ID
        ,'KHJL_0009'                       AS IND_ID
        ,T.客户经理理财破冰率                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
UNION ALL
-- 当前客户经理理财破冰人数	KHJL_0009_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'KHJL_0009_01'                       AS IND_ID
        ,T.当前客户经理理财破冰人数                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
UNION ALL
-- 客户经理保险破冰率	KHJL_0010
SELECT  T.ORG_ID                               AS ORG_ID
        ,'KHJL_0010'                       AS IND_ID
        ,T.客户经理保险破冰率                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
UNION ALL
-- 当前客户经理保险破冰人数	KHJL_0010_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'KHJL_0010_01'                       AS IND_ID
        ,T.当前客户经理保险破冰人数                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
;

--------------------------------------服务经理能力--------------------------------
--------------------------------57133自查率和57133整改率--------------------------

DROP TABLE if EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_FWJL_01;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_FWJL_01 as
SELECT
 t2.sbr_org_id   as  org_id
,sum(case when t1.is_prcs_bus='1' then 1 else 0 end) bus_cnt
,sum(case when t1.is_day_five_chk='1' and t1.is_prcs_bus='1' then 1 else 0 end) five_chk_cnt
,sum(case when t1.is_day_five_chk='1' and t1.is_prcs_bus='1' then 1 else 0 end)/sum(case when t1.is_prcs_bus='1' then 1 else 0 end) five_chk_rat
from   app_rpt.FCT_DAY_FIVE_CHK_EXE_LST  t1
left join  edw.dim_hr_org_mng_org_tree_dd t2
on t1.org_id=t2.org_id and t2.dt='${data_dt}'  and  t2.eff_sts_ind='1'
where  t1.dt ='${data_dt}'
and    t1.acg_dt>to_char(dateadd(to_date('${data_dt}', 'yyyymmdd'), - 3, 'mm'),'yyyy-mm-dd')
and    t1.acg_dt<=to_char(to_date('${data_dt}', 'yyyymmdd'),'yyyy-mm-dd')
and    LENGTH(t1.org_id)=9
and    t2.sbr_org_id is not null
GROUP BY
t2.sbr_org_id
-- union all
-- SELECT
--  t2.tem_org_id   as  org_id
-- ,sum(case when t1.is_prcs_bus='1' then 1 else 0 end) bus_cnt
-- ,sum(case when t1.is_day_five_chk='1' and t1.is_prcs_bus='1' then 1 else 0 end) five_chk_cnt
-- ,sum(case when t1.is_day_five_chk='1' and t1.is_prcs_bus='1' then 1 else 0 end)/sum(case when t1.is_prcs_bus='1' then 1 else 0 end) five_chk_rat
-- from   app_rpt.FCT_DAY_FIVE_CHK_EXE_LST  t1
-- left join  edw.dim_hr_org_mng_org_tree_dd t2
-- on t1.org_id=t2.org_id and t2.dt='${data_dt}'
-- where  t1.dt ='${data_dt}'
-- and    t1.acg_dt>to_char(dateadd(to_date('${data_dt}', 'yyyymmdd'), - 3, 'mm'),'yyyy-mm-dd')
-- and    t1.acg_dt<=to_char(to_date('${data_dt}', 'yyyymmdd'),'yyyy-mm-dd')
-- and    LENGTH(t1.org_id)=9
-- and    t2.tem_org_id is not null
-- GROUP BY
-- t2.tem_org_id
union all
SELECT
 t2.brc_org_id   as  org_id
,sum(case when t1.is_prcs_bus='1' then 1 else 0 end) bus_cnt
,sum(case when t1.is_day_five_chk='1' and t1.is_prcs_bus='1' then 1 else 0 end) five_chk_cnt
,sum(case when t1.is_day_five_chk='1' and t1.is_prcs_bus='1' then 1 else 0 end)/sum(case when t1.is_prcs_bus='1' then 1 else 0 end) five_chk_rat
from   app_rpt.FCT_DAY_FIVE_CHK_EXE_LST  t1
left join  edw.dim_hr_org_mng_org_tree_dd t2
on t1.org_id=t2.org_id and t2.dt='${data_dt}'  and  t2.eff_sts_ind='1'
where  t1.dt ='${data_dt}'
and    t1.acg_dt>to_char(dateadd(to_date('${data_dt}', 'yyyymmdd'), - 3, 'mm'),'yyyy-mm-dd')
and    t1.acg_dt<=to_char(to_date('${data_dt}', 'yyyymmdd'),'yyyy-mm-dd')
and    LENGTH(t1.org_id)=9
and    t2.brc_org_id is not null
GROUP BY
t2.brc_org_id
;

-- 57133整改率（季度）
DROP TABLE if EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_FWJL_02;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_FWJL_02 as
SELECT
 t2.sbr_org_id   as  org_id
,sum(t1.chk_prob_cnt) chk_prob_cnt
,sum(t1.chk_prob_mdf_cnt) chk_prob_mdf_cnt
,sum(t1.chk_prob_mdf_cnt)/sum(t1.chk_prob_cnt) chk_prob_mdf_rat
from   app_rpt.fct_prob_mdf_exe_lst  t1
left join  edw.dim_hr_org_mng_org_tree_dd t2
on t1.org_id=t2.org_id and t2.dt='${data_dt}'   and  t2.eff_sts_ind='1'
where  t1.dt ='@@{yyyyMMdd}'
and    t1.acg_dt>to_char(dateadd(to_date('${data_dt}', 'yyyymmdd'), - 3, 'mm'),'yyyy-mm-dd')
and    t1.acg_dt<=to_char(to_date('${data_dt}', 'yyyymmdd'),'yyyy-mm-dd')
and    LENGTH(t1.org_id)=9
and    t2.sbr_org_id is not null
GROUP BY
t2.sbr_org_id
-- union all
-- SELECT
--  t2.tem_org_id   as  org_id
-- ,sum(t1.chk_prob_cnt) chk_prob_cnt
-- ,sum(t1.chk_prob_mdf_cnt) chk_prob_mdf_cnt
-- ,sum(t1.chk_prob_mdf_cnt)/sum(t1.chk_prob_cnt) chk_prob_mdf_rat
-- from   app_rpt.fct_prob_mdf_exe_lst  t1
-- left join  edw.dim_hr_org_mng_org_tree_dd t2
-- on t1.org_id=t2.org_id and t2.dt='${data_dt}'
-- where  t1.dt ='@@{yyyyMMdd}'
-- and    t1.acg_dt>to_char(dateadd(to_date('${data_dt}', 'yyyymmdd'), - 3, 'mm'),'yyyy-mm-dd')
-- and    t1.acg_dt<=to_char(to_date('${data_dt}', 'yyyymmdd'),'yyyy-mm-dd')
-- and    LENGTH(t1.org_id)=9
-- and    t2.tem_org_id is not null
-- GROUP BY
-- t2.tem_org_id
union all
SELECT
 t2.brc_org_id   as  org_id
,sum(t1.chk_prob_cnt) chk_prob_cnt
,sum(t1.chk_prob_mdf_cnt) chk_prob_mdf_cnt
,sum(t1.chk_prob_mdf_cnt)/sum(t1.chk_prob_cnt) chk_prob_mdf_rat
from   app_rpt.fct_prob_mdf_exe_lst  t1
left join  edw.dim_hr_org_mng_org_tree_dd t2
on t1.org_id=t2.org_id and t2.dt='${data_dt}'  and  t2.eff_sts_ind='1'
where  t1.dt ='@@{yyyyMMdd}'
and    t1.acg_dt>to_char(dateadd(to_date('${data_dt}', 'yyyymmdd'), - 3, 'mm'),'yyyy-mm-dd')
and    t1.acg_dt<=to_char(to_date('${data_dt}', 'yyyymmdd'),'yyyy-mm-dd')
and    LENGTH(t1.org_id)=9
and    t2.brc_org_id is not null
GROUP BY
t2.brc_org_id
;

INSERT INTO LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_01 PARTITION (dt = '${data_dt}')
-- 服务经理基金持证率	FWJL_0001
SELECT  T.ORG_ID                               AS ORG_ID
        ,'FWJL_0001'                       AS IND_ID
        ,T.服务经理基金持证率                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
UNION ALL
-- 当前服务经理基金持证人数	FWJL_0001_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'FWJL_0001_01'                       AS IND_ID
        ,T.当前服务经理基金持证人数                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
UNION ALL
-- 当前在职服务经理人数	FWJL_0001_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'FWJL_0001_02'                       AS IND_ID
        ,T.当前在职服务经理人数                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
UNION ALL
-- 服务经理理财持证率	FWJL_0002
SELECT  T.ORG_ID                               AS ORG_ID
        ,'FWJL_0002'                       AS IND_ID
        ,T.服务经理理财持证率                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
UNION ALL
-- 当前服务经理理财持证人数	FWJL_0002_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'FWJL_0002_01'                       AS IND_ID
        ,T.当前服务经理理财持证人数                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
UNION ALL
-- 服务经理保险持证率	FWJL_0003
SELECT  T.ORG_ID                               AS ORG_ID
        ,'FWJL_0003'                       AS IND_ID
        ,T.服务经理保险持证率                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
UNION ALL
-- 当前服务经理保险持证人数	FWJL_0003_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'FWJL_0003_01'                       AS IND_ID
        ,T.当前服务经理保险持证人数                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
UNION ALL
-- 服务经理基金破冰率	FWJL_0004
SELECT  T.ORG_ID                               AS ORG_ID
        ,'FWJL_0004'                       AS IND_ID
        ,T.服务经理基金破冰率                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
UNION ALL
-- 当前服务经理基金破冰人数	FWJL_0004_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'FWJL_0004_01'                       AS IND_ID
        ,T.当前服务经理基金破冰人数                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
UNION ALL
-- 服务经理理财破冰率	FWJL_0005
SELECT  T.ORG_ID                               AS ORG_ID
        ,'FWJL_0005'                       AS IND_ID
        ,T.服务经理理财破冰率                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
UNION ALL
-- 当前服务经理理财破冰人数	FWJL_0005_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'FWJL_0005_01'                       AS IND_ID
        ,T.当前服务经理理财破冰人数                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
UNION ALL
-- 服务经理保险破冰率	FWJL_0006
SELECT  T.ORG_ID                               AS ORG_ID
        ,'FWJL_0006'                       AS IND_ID
        ,T.服务经理保险破冰率                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
UNION ALL
-- 当前服务经理保险破冰人数	FWJL_0006_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'FWJL_0006_01'                       AS IND_ID
        ,T.当前服务经理保险破冰人数                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_KHJL_03 T
UNION ALL
-- 57133自查率	FWJL_0007
SELECT  T.ORG_ID                               AS ORG_ID
        ,'FWJL_0007'                       AS IND_ID
        ,T.five_chk_rat                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_FWJL_01 T
UNION ALL
-- 季度内已执行检查的天数	FWJL_0007_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'FWJL_0007_01'                       AS IND_ID
        ,T.five_chk_cnt                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_FWJL_01 T
UNION ALL
-- 季度内应执行检查天数	FWJL_0007_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'FWJL_0007_02'                       AS IND_ID
        ,T.bus_cnt                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_FWJL_01 T
UNION ALL
-- 57133整改率	FWJL_0008
SELECT  T.ORG_ID                               AS ORG_ID
        ,'FWJL_0008'                       AS IND_ID
        ,T.chk_prob_mdf_rat                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_FWJL_02 T
UNION ALL
-- 季度内已整改问题笔数	FWJL_0008_01
SELECT  T.ORG_ID                               AS ORG_ID
        ,'FWJL_0008_01'                       AS IND_ID
        ,T.chk_prob_mdf_cnt                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_FWJL_02 T
UNION ALL
-- 季度内检查发现问题总笔数	FWJL_0008_02
SELECT  T.ORG_ID                               AS ORG_ID
        ,'FWJL_0008_02'                       AS IND_ID
        ,T.chk_prob_cnt                       AS CUR_VAL
FROM  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_FWJL_02 T
;


-- SELECT distinct IND_ID
-- from   LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_01
-- where dt='20250531'
**备份3.0_to_立英_T2HGL_ORG_TAG_IND_DD_3.sql
-- ODPS SQL
-- **********************************************************************
-- 功能描述:
-- **
-- 创建者: 卫少洁
-- 创建日期: 2025-02-20 08:40:08
-- **
-- 修改日志:
-- 修改日期          修改人          修改内容
-- **
-- **********************************************************************

-- desc LAB_BIGDATA_DEV.hgl_org_tag_ind_weight_3; --权重配置表
-- desc LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_INF_DD_3; --模块名称和指标名称
-- desc LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_SGLR_3;--手工指标：需筛选数据日期
-- 分行和支行职能数据不剔除，排名剔除
--钱塘支行放入支行层级，不排名计算


--临时指标宽表
DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_tmp;
CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_tmp
(
    DATA_DT       STRING  COMMENT '数据日期'
    ,CPY_ORG_ID   STRING  COMMENT '法人机构编号'
    ,CPY_ORG_NM   STRING  COMMENT '法人机构名称'
    ,BRC_ORG_ID   STRING  COMMENT '分行机构编号'
    ,BRC_ORG_NM   STRING  COMMENT '分行机构名称'
    ,SBR_ORG_ID   STRING  COMMENT '支行机构编号'
    ,SBR_ORG_NM   STRING  COMMENT '支行机构名称'
    ,TEM_ORG_ID   STRING  COMMENT '团队机构编号'
    ,TEM_ORG_NM   STRING  COMMENT '团队机构名称'
    ,ORG_ID       STRING  COMMENT '考核机构代码'
    ,ORG_NM       STRING  COMMENT '考核机构名称'
    ,IND_ID       STRING  COMMENT '指标编号'
    ,IND_NM       STRING  COMMENT '指标名称'
    ,DATA_CLASS   STRING  COMMENT '模块类别'
    ,CUR_VAL      DECIMAL COMMENT '指标值'
    ,CUR_RNK      INT     COMMENT '指标值排名'
    ,IND_LVL      STRING  COMMENT '指标层级'
    ,CP_CLS       STRING  COMMENT '对比类型'
    ,ORG_NUM  INT     COMMENT '机构数'
    ,flag         STRING  COMMENT 'FLAG_是否主指标数据1为指标值2为月趋势差值3为季趋势差值4为年趋势差值'
    ,score_class  STRING  COMMENT 'SCORE_CLASS权重类型'
    ,score        DECIMAL COMMENT 'SCORE_指标评分'
)
COMMENT '合格率机构指标临时表'
;


INSERT overwrite TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_tmp
SELECT  '${data_dt}'
		,t2.cpy_org_id
		,t2.cpy_org_nm
		,t2.brc_org_id
		,t2.brc_org_nm
		,t2.sbr_org_id
		,t2.sbr_org_nm
		,t2.tem_org_id
		,t2.tem_org_nm
		,t1.org_id
		,t2.org_nm
		,t1.IND_ID
        ,t8.IND_NM
        ,t8.DATA_CLASS
		,t1.CUR_VAL
        ,null as CUR_RNK
        ,CASE
           WHEN nvl(t2.cpy_org_id, '') <> '' AND nvl(t2.brc_org_id, '') = '' THEN '法人'
           WHEN nvl(t2.brc_org_id, '') <> '' AND nvl(t2.sbr_org_id, '') = '' THEN '分行'
           WHEN nvl(t2.sbr_org_id, '') <> '' AND nvl(t2.tem_org_id, '') = '' THEN '支行'
           WHEN nvl(t2.tem_org_id, '') <> ''                                THEN '团队'
         END AS IND_LVL
        ,null as CP_CLS
        ,null as ORG_NUM
        ,null as flag
        ,null as score_class
        ,null as score
FROM LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_01 t1  --指标中间表
left join edw.dim_hr_org_mng_org_tree_dd t2    --考核机构
on   t1.ORG_ID=t2.ORG_ID and t2.eff_sts_ind='1' and t2.dt='${data_dt}'
left join  (
    SELECT distinct col_1 DATA_CLASS,col_2 IND_ID,col_3 IND_NM
    from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_INF_DD_3
    where  pt=max_pt('LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_INF_DD_3')
)t8       --补充指标名称
on   t1.IND_ID=t8.IND_ID
where  t1.dt = '${data_dt}'
and (t2.ORG_ID<>nvl(t2.sbs_org_id,'')) -- 剔除区域合计
and (t2.brc_org_nm regexp '分行$|村镇银行$|^总行营业部$'
    or t2.sbr_org_nm regexp '支行$|营业部$')
;

-- 无数据机构补0
insert overwrite table LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_tmp
select
    a.DATA_DT,
    a.CPY_ORG_ID,
    a.CPY_ORG_NM,
    a.BRC_ORG_ID,
    a.BRC_ORG_NM,
    a.SBR_ORG_ID,
    a.SBR_ORG_NM,
    a.TEM_ORG_ID,
    a.TEM_ORG_NM,
    a.ORG_ID,
    a.ORG_NM,
    b.IND_ID,
    b.IND_NM,
    b.DATA_CLASS,
    CUR_VAL,
    CUR_RNK,
        case
        when nvl(a.cpy_org_id,'')<>'' and nvl(a.brc_org_id,'')='' then '法人'
        when nvl(a.brc_org_id,'')<>'' and nvl(a.sbr_org_id,'')='' then '分行'
        when nvl(a.sbr_org_id,'')<>'' and nvl(a.tem_org_id,'')='' then '支行'
        when nvl(a.tem_org_id,'')<>''                           then '团队'
    end as IND_LVL,
    CP_CLS,
    ORG_NUM,
    flag,
    score_class,
    score
from (
    select
        distinct    DATA_DT,
                    CPY_ORG_ID,
                    CPY_ORG_NM,
                    BRC_ORG_ID,
                    BRC_ORG_NM,
                    SBR_ORG_ID,
                    SBR_ORG_NM,
                    TEM_ORG_ID,
                    TEM_ORG_NM,
                    ORG_ID,
                    ORG_NM,
                    1 as pk
    from  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_tmp a
) a inner join (
    select
        distinct    IND_ID,
                    IND_NM,
                    DATA_CLASS,
                    1 as pk
    from  LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_tmp b
) b on a.pk=b.pk
left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_tmp c on a.org_id=c.org_id and b.IND_ID=c.IND_ID
;

--月度指标出数据
--母行-支行
DROP TABLE if EXISTS tmp_hgl3_mh_zh;
CREATE TABLE IF NOT EXISTS tmp_hgl3_mh_zh as
SELECT *
from  HGL_ORG_TAG_IND_DD_3_tmp   --无权重的指标表
where IND_LVL='支行'
-- and  dt=${data_dt}
and  cpy_org_nm not like '%泰隆村镇银行%'   --母行
-- and  CUR_RNK  is not null
;

-- SELECT *
-- from  tmp_hgl3_mh_zh
-- where data_dt='20250531'
-- and  ind_id='ZLFX_0010'
-- -- and  org_id='331001200'
-- ;


-- SELECT *
-- from  HGL_ORG_TAG_IND_DD_3_01
-- where  dt='20250531'
-- -- and  org_id='331001200'
-- and  ind_id='HKGL_0002'
-- ;

--母行-分行
DROP TABLE if EXISTS tmp_hgl3_mh_fh;
CREATE TABLE IF NOT EXISTS tmp_hgl3_mh_fh as
SELECT *
from  HGL_ORG_TAG_IND_DD_3_tmp   --无权重的指标表
where IND_LVL='分行'
-- and  dt=${data_dt}
and  cpy_org_nm not like '%泰隆村镇银行%'   --母行
-- and  CUR_RNK  is not null
;



--每月出数按规则剔除部分指标-村行
--村行-支行层级
DROP TABLE if EXISTS tmp_hgl3_ch_zh;
CREATE TABLE IF NOT EXISTS tmp_hgl3_ch_zh as
SELECT  *
from  HGL_ORG_TAG_IND_DD_3_tmp
where IND_LVL='支行'
-- and  dt=${data_dt}
and  cpy_org_nm like '%泰隆村镇银行%'
-- and  (CUR_RNK  is not null or sbr_org_id='356101000')
;
--村行-分行层级
DROP TABLE if EXISTS tmp_hgl3_ch_fh;
CREATE TABLE IF NOT EXISTS tmp_hgl3_ch_fh as
SELECT  *
from  HGL_ORG_TAG_IND_DD_3_tmp
where IND_LVL='分行'
-- and  dt=${data_dt}
and  cpy_org_nm like '%泰隆村镇银行%'
-- and  (CUR_RNK  is not null or sbr_org_id='356101000')
;


-- -- 格式化、排名、插入正式表
-- insert overwrite table LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3 PARTITION (dt = '${data_dt}')
-- select
--     DATA_DT,
--     CPY_ORG_ID,
--     CPY_ORG_NM,
--     BRC_ORG_ID,
--     BRC_ORG_NM,
--     SBR_ORG_ID,
--     SBR_ORG_NM,
--     TEM_ORG_ID,
--     TEM_ORG_NM,
--     ORG_ID,
--     ORG_NM,
--     IND_ID,
--     IND_NM,
--     DATA_CLASS,
--     case when IND_ID in ('DWJS2_0001_01','DWJS2_0001_02','DWJS2_0004_01','KHJL_0001','DWJS2_0011_01','DWJS2_0012_01','DWJS2_0013_01','XZTM2_0001_01','XZTM2_0002_01','XZTM2_0005_01','XZTM2_0006_01','XZTM2_0007_01','CLWH2_0001_01','CLWH2_0001_02','CLWH2_0002_01','CLWH2_0003_01','CLWH2_0004_01','CLWH2_0005_01','CLWH2_0009_01','CLWH2_0012_01','CLWH2_0012_02','ZHJY2_0001_01','ZHJY2_0001_02','ZHJY2_0002_01','ZHJY2_0002_02','ZHJY2_0003_01','ZHJY2_0003_02','ZHJY2_0005_01','ZHJY2_0005_02','ZHJY2_0008_01','ZHJY2_0008_02','ZHJY2_0009_01','ZHJY2_0009_02','ZHJY2_0010_01','ZHJY2_0010_02','ZHJY2_0011_01','ZHJY2_0011_02','ZHJY2_0012_01','ZHJY2_0012_02','ZHJY2_0013_01','ZHJY2_0014_01','ZHJY2_0014_02','ZHJY2_0015_01','ZHJY2_0016_01','ZHJY2_0017_01','ZHJY2_0017_02','ZHJY2_0018_01','ZHJY2_0019_01','ZHJY2_0020')  then round(CUR_VAL,0)
--          when IND_ID in ('DWJS2_0006_01','KHJL_0002','KHJL_0003','DWJS2_0006','DWJS2_0007_01','DWJS2_0007','DWJS2_0008_01','DWJS2_0008','DWJS2_0009_01','DWJS2_0009','DWJS2_0010_01','DWJS2_0010','DWJS2_0011','DWJS2_0012','DWJS2_0013','DWJS2_0017','DWJS2_0018','DWJS2_0019','DWJS2_0020','DWJS2_0021','XZTM2_0001','XZTM2_0002','XZTM2_0003_01','XZTM2_0003','XZTM2_0004_01','XZTM2_0004','XZTM2_0005','XZTM2_0006','XZTM2_0007','XZTM2_0008_01','XZTM2_0008','CLWH2_0004','CLWH2_0005','CLWH2_0007','CLWH2_0008','CLWH2_0011_01','CLWH2_0011','CLWH2_0014_01','CLWH2_0014_02','CLWH2_0015_01','CLWH2_0015_02','CLWH2_0016','ZHJY2_0004_01','ZHJY2_0004_02','ZHJY2_0006_01','ZHJY2_0006_02','ZHJY2_0007_01','ZHJY2_0007_02','DJGL2_0001_01','DJGL2_0001_02','DJGL2_0002_01','DJGL2_0002_02','DJGL2_0003_01','DJGL2_0003_02','DJGL2_0004_01','DJGL2_0004_02','DJGL2_0006_01','DJGL2_0006_02','DJGL2_0007_01','DJGL2_0007_02','DJGL2_0008_01','DJGL2_0008_02','JGGL2_0001_01','JGGL2_0001_02','JGGL2_0002_01','JGGL2_0003_01','JGGL2_0004_01','JGGL2_0004_02','JGGL2_0005_01','JGGL2_0006_01','JGGL2_0007_01','JGGL2_0007_02','JGGL2_0008_01','JGGL2_0008_02','JGGL2_0009_01','JGGL2_0012_01','JGGL2_0013_01','JGGL2_0013_02','JGGL2_0014_01','JGGL2_0015_01','JGGL2_0016_01','JGGL2_0016_02','JGGL2_0017_01','JGGL2_0018_01','JGGL2_0019_01','JGGL2_0019_02','JGGL2_0020_01','JGGL2_0020_02','JGGL2_0021_01','JGGL2_0022_01','JGGL2_0023_01','JGGL2_0023_02','JGGL2_0024_01','JGGL2_0025_01','JGGL2_0026_01','JGGL2_0027_01','JGGL2_0028_01','JGGL2_0028_02','JGGL2_0029_01','JGGL2_0030_01','JGGL2_0031_01','JGGL2_0032_01','JGGL2_0033_01','JGGL2_0033_02','JGGL2_0034_01','JGGL2_0035_01','JGGL2_0036_01','JGGL2_0037_01','JGGL2_0038_01','JGGL2_0038_02','JGGL2_0039_01','JGGL2_0040_01','JGGL2_0041_01','JGGL2_0042_01','JGGL2_0043_01','JGGL2_0044_01','JGGL2_0044_02','JGGL2_0045_01','JGGL2_0046_01','JGGL2_0047_01','JGGL2_0048_01','JGGL2_0049_01')  then round(CUR_VAL,2)
--          when IND_ID in ('DWJS2_0001','DWJS2_0004','DWJS2_0005','CLWH2_0001','CLWH2_0002','CLWH2_0003','CLWH2_0006','CLWH2_0009','CLWH2_0012','CLWH2_0013','CLWH2_0014','CLWH2_0015','CLWH2_0017_01','CLWH2_0017','ZHJY2_0001','ZHJY2_0002_03','ZHJY2_0002','ZHJY2_0003','ZHJY2_0004','ZHJY2_0005_03','ZHJY2_0005','ZHJY2_0006','ZHJY2_0007_03','ZHJY2_0007','ZHJY2_0008','ZHJY2_0009_03','ZHJY2_0009','ZHJY2_0010','ZHJY2_0011_03','ZHJY2_0011','ZHJY2_0012','ZHJY2_0013','ZHJY2_0014','ZHJY2_0015','ZHJY2_0016','ZHJY2_0017_03','ZHJY2_0017','ZHJY2_0018_02','ZHJY2_0018','ZHJY2_0019_02','ZHJY2_0019','ZHJY2_0021','DJGL2_0001','DJGL2_0002','DJGL2_0003','DJGL2_0004','DJGL2_0005','DJGL2_0006_03','DJGL2_0006','DJGL2_0007_03','DJGL2_0007','DJGL2_0008_03','DJGL2_0008','DJGL2_0009_01','DJGL2_0009','DJGL2_0010','JGGL2_0001','JGGL2_0002','JGGL2_0003','JGGL2_0004','JGGL2_0005','JGGL2_0006','JGGL2_0007','JGGL2_0008','JGGL2_0009','JGGL2_0012','JGGL2_0013_03','JGGL2_0013','JGGL2_0014_02','JGGL2_0014','JGGL2_0015_02','JGGL2_0015','JGGL2_0016_03','JGGL2_0016','JGGL2_0017_02','JGGL2_0017','JGGL2_0018_02','JGGL2_0018','JGGL2_0019_03','JGGL2_0019','JGGL2_0020_03','JGGL2_0020','JGGL2_0021_02','JGGL2_0021','JGGL2_0022_02','JGGL2_0022','JGGL2_0023','JGGL2_0024','JGGL2_0025','JGGL2_0026','JGGL2_0027','JGGL2_0028_03','JGGL2_0028','JGGL2_0029_02','JGGL2_0029','JGGL2_0030_02','JGGL2_0030','JGGL2_0031_02','JGGL2_0031','JGGL2_0032_02','JGGL2_0032','JGGL2_0033_03','JGGL2_0033','JGGL2_0034_02','JGGL2_0034','JGGL2_0035_02','JGGL2_0035','JGGL2_0036_02','JGGL2_0036','JGGL2_0037_02','JGGL2_0037','JGGL2_0038','JGGL2_0039','JGGL2_0040','JGGL2_0041','JGGL2_0042','JGGL2_0043','JGGL2_0044_03','JGGL2_0044','JGGL2_0045_02','JGGL2_0045','JGGL2_0046_02','JGGL2_0046','JGGL2_0047_02','JGGL2_0047','JGGL2_0048_02','JGGL2_0048','JGGL2_0049_02','JGGL2_0049')  then concat(round(CUR_VAL,4)*100,'%')
--          else CUR_VAL
--     end CUR_VAL_ZS,
--     case when IND_ID in ('DWJS2_0001_01','DWJS2_0001_02','DWJS2_0004_01','KHJL_0001','DWJS2_0011_01','DWJS2_0012_01','DWJS2_0013_01','XZTM2_0001_01','XZTM2_0002_01','XZTM2_0005_01','XZTM2_0006_01','XZTM2_0007_01','CLWH2_0001_01','CLWH2_0001_02','CLWH2_0002_01','CLWH2_0003_01','CLWH2_0004_01','CLWH2_0005_01','CLWH2_0009_01','CLWH2_0012_01','CLWH2_0012_02','ZHJY2_0001_01','ZHJY2_0001_02','ZHJY2_0002_01','ZHJY2_0002_02','ZHJY2_0003_01','ZHJY2_0003_02','ZHJY2_0005_01','ZHJY2_0005_02','ZHJY2_0008_01','ZHJY2_0008_02','ZHJY2_0009_01','ZHJY2_0009_02','ZHJY2_0010_01','ZHJY2_0010_02','ZHJY2_0011_01','ZHJY2_0011_02','ZHJY2_0012_01','ZHJY2_0012_02','ZHJY2_0013_01','ZHJY2_0014_01','ZHJY2_0014_02','ZHJY2_0015_01','ZHJY2_0016_01','ZHJY2_0017_01','ZHJY2_0017_02','ZHJY2_0018_01','ZHJY2_0019_01','ZHJY2_0020')  then round(CUR_VAL,0)
--          when IND_ID in ('DWJS2_0006_01','KHJL_0002','KHJL_0003','DWJS2_0006','DWJS2_0007_01','DWJS2_0007','DWJS2_0008_01','DWJS2_0008','DWJS2_0009_01','DWJS2_0009','DWJS2_0010_01','DWJS2_0010','DWJS2_0011','DWJS2_0012','DWJS2_0013','DWJS2_0017','DWJS2_0018','DWJS2_0019','DWJS2_0020','DWJS2_0021','XZTM2_0001','XZTM2_0002','XZTM2_0003_01','XZTM2_0003','XZTM2_0004_01','XZTM2_0004','XZTM2_0005','XZTM2_0006','XZTM2_0007','XZTM2_0008_01','XZTM2_0008','CLWH2_0004','CLWH2_0005','CLWH2_0007','CLWH2_0008','CLWH2_0011_01','CLWH2_0011','CLWH2_0014_01','CLWH2_0014_02','CLWH2_0015_01','CLWH2_0015_02','CLWH2_0016','ZHJY2_0004_01','ZHJY2_0004_02','ZHJY2_0006_01','ZHJY2_0006_02','ZHJY2_0007_01','ZHJY2_0007_02','DJGL2_0001_01','DJGL2_0001_02','DJGL2_0002_01','DJGL2_0002_02','DJGL2_0003_01','DJGL2_0003_02','DJGL2_0004_01','DJGL2_0004_02','DJGL2_0006_01','DJGL2_0006_02','DJGL2_0007_01','DJGL2_0007_02','DJGL2_0008_01','DJGL2_0008_02','JGGL2_0001_01','JGGL2_0001_02','JGGL2_0002_01','JGGL2_0003_01','JGGL2_0004_01','JGGL2_0004_02','JGGL2_0005_01','JGGL2_0006_01','JGGL2_0007_01','JGGL2_0007_02','JGGL2_0008_01','JGGL2_0008_02','JGGL2_0009_01','JGGL2_0012_01','JGGL2_0013_01','JGGL2_0013_02','JGGL2_0014_01','JGGL2_0015_01','JGGL2_0016_01','JGGL2_0016_02','JGGL2_0017_01','JGGL2_0018_01','JGGL2_0019_01','JGGL2_0019_02','JGGL2_0020_01','JGGL2_0020_02','JGGL2_0021_01','JGGL2_0022_01','JGGL2_0023_01','JGGL2_0023_02','JGGL2_0024_01','JGGL2_0025_01','JGGL2_0026_01','JGGL2_0027_01','JGGL2_0028_01','JGGL2_0028_02','JGGL2_0029_01','JGGL2_0030_01','JGGL2_0031_01','JGGL2_0032_01','JGGL2_0033_01','JGGL2_0033_02','JGGL2_0034_01','JGGL2_0035_01','JGGL2_0036_01','JGGL2_0037_01','JGGL2_0038_01','JGGL2_0038_02','JGGL2_0039_01','JGGL2_0040_01','JGGL2_0041_01','JGGL2_0042_01','JGGL2_0043_01','JGGL2_0044_01','JGGL2_0044_02','JGGL2_0045_01','JGGL2_0046_01','JGGL2_0047_01','JGGL2_0048_01','JGGL2_0049_01')  then round(CUR_VAL,2)
--          when IND_ID in ('DWJS2_0001','DWJS2_0004','DWJS2_0005','CLWH2_0001','CLWH2_0002','CLWH2_0003','CLWH2_0006','CLWH2_0009','CLWH2_0012','CLWH2_0013','CLWH2_0014','CLWH2_0015','CLWH2_0017_01','CLWH2_0017','ZHJY2_0001','ZHJY2_0002_03','ZHJY2_0002','ZHJY2_0003','ZHJY2_0004','ZHJY2_0005_03','ZHJY2_0005','ZHJY2_0006','ZHJY2_0007_03','ZHJY2_0007','ZHJY2_0008','ZHJY2_0009_03','ZHJY2_0009','ZHJY2_0010','ZHJY2_0011_03','ZHJY2_0011','ZHJY2_0012','ZHJY2_0013','ZHJY2_0014','ZHJY2_0015','ZHJY2_0016','ZHJY2_0017_03','ZHJY2_0017','ZHJY2_0018_02','ZHJY2_0018','ZHJY2_0019_02','ZHJY2_0019','ZHJY2_0021','DJGL2_0001','DJGL2_0002','DJGL2_0003','DJGL2_0004','DJGL2_0005','DJGL2_0006_03','DJGL2_0006','DJGL2_0007_03','DJGL2_0007','DJGL2_0008_03','DJGL2_0008','DJGL2_0009_01','DJGL2_0009','DJGL2_0010','JGGL2_0001','JGGL2_0002','JGGL2_0003','JGGL2_0004','JGGL2_0005','JGGL2_0006','JGGL2_0007','JGGL2_0008','JGGL2_0009','JGGL2_0012','JGGL2_0013_03','JGGL2_0013','JGGL2_0014_02','JGGL2_0014','JGGL2_0015_02','JGGL2_0015','JGGL2_0016_03','JGGL2_0016','JGGL2_0017_02','JGGL2_0017','JGGL2_0018_02','JGGL2_0018','JGGL2_0019_03','JGGL2_0019','JGGL2_0020_03','JGGL2_0020','JGGL2_0021_02','JGGL2_0021','JGGL2_0022_02','JGGL2_0022','JGGL2_0023','JGGL2_0024','JGGL2_0025','JGGL2_0026','JGGL2_0027','JGGL2_0028_03','JGGL2_0028','JGGL2_0029_02','JGGL2_0029','JGGL2_0030_02','JGGL2_0030','JGGL2_0031_02','JGGL2_0031','JGGL2_0032_02','JGGL2_0032','JGGL2_0033_03','JGGL2_0033','JGGL2_0034_02','JGGL2_0034','JGGL2_0035_02','JGGL2_0035','JGGL2_0036_02','JGGL2_0036','JGGL2_0037_02','JGGL2_0037','JGGL2_0038','JGGL2_0039','JGGL2_0040','JGGL2_0041','JGGL2_0042','JGGL2_0043','JGGL2_0044_03','JGGL2_0044','JGGL2_0045_02','JGGL2_0045','JGGL2_0046_02','JGGL2_0046','JGGL2_0047_02','JGGL2_0047','JGGL2_0048_02','JGGL2_0048','JGGL2_0049_02','JGGL2_0049')  then round(CUR_VAL,4)
--          else CUR_VAL
--     end CUR_VAL,
--     case
--     when case
--             when nvl(brc_org_id,'')<>'' and nvl(sbr_org_id,'')='' and brc_org_nm regexp '分行$|村镇银行$|^总行营业部$' then cpy_org_id
--             when nvl(sbr_org_id,'')<>'' and nvl(tem_org_id,'')='' and sbr_org_nm not regexp '虚拟'              then brc_org_id
--             when nvl(tem_org_id,'')<>'' and tem_org_nm not regexp '虚拟'                             then sbr_org_id
--             else null
--         end is not null
--     then rank() over(partition by IND_ID,case
--                                     when nvl(brc_org_id,'')<>'' and nvl(sbr_org_id,'')='' and brc_org_nm regexp '分行$|村镇银行$|^总行营业部$' then cpy_org_id
--                                     when nvl(sbr_org_id,'')<>'' and nvl(tem_org_id,'')=''  and sbr_org_nm not regexp '虚拟'              then brc_org_id
--                                     when nvl(tem_org_id,'')<>'' and tem_org_nm not regexp '虚拟'                             then sbr_org_id
--                                     else null
--                                 end
--                                 order by
--                                 if(IND_ID in ('DWJS2_0001_02','DWJS2_0001','ZHJY2_0001_01','ZHJY2_0001','ZHJY2_0002_01','ZHJY2_0002_03','ZHJY2_0002','DJGL2_0002_01','DJGL2_0002','DJGL2_0003_01','DJGL2_0003','DJGL2_0004_01','DJGL2_0004','DJGL2_0007_01','DJGL2_0007_03','DJGL2_0007','DJGL2_0008_01','DJGL2_0008_03','DJGL2_0008','JGGL2_0003_01','JGGL2_0003','JGGL2_0005_01','JGGL2_0005','JGGL2_0015_01','JGGL2_0015_02','JGGL2_0015','JGGL2_0017_01','JGGL2_0017_02','JGGL2_0017'),
--                                                 0-CUR_VAL,CUR_VAL)         desc
--         )
--     end as CUR_RNK,
--     case
--         when nvl(cpy_org_id,'')<>'' and nvl(brc_org_id,'')='' then '法人'
--         when nvl(brc_org_id,'')<>'' and nvl(sbr_org_id,'')='' then '分行'
--         when nvl(sbr_org_id,'')<>'' and nvl(tem_org_id,'')='' then '支行'
--         when nvl(tem_org_id,'')<>''                           then '团队'
--     end as IND_LVL,
--     '分行内'  as CP_CLS,
--     case
--     when case
--                                    when nvl(brc_org_id,'')<>'' and nvl(sbr_org_id,'')='' and brc_org_nm regexp '分行$|村镇银行$|^总行营业部$' then cpy_org_id
--                                     when nvl(sbr_org_id,'')<>'' and nvl(tem_org_id,'')=''  and sbr_org_nm not regexp '虚拟'              then brc_org_id
--                                     when nvl(tem_org_id,'')<>'' and tem_org_nm not regexp '虚拟'                             then sbr_org_id
--             else null
--         end is not null
--     then COUNT(DISTINCT ORG_ID) over(partition by IND_ID,case
--                                     when nvl(brc_org_id,'')<>'' and nvl(sbr_org_id,'')='' and brc_org_nm regexp '分行$|村镇银行$|^总行营业部$' then cpy_org_id
--                                     when nvl(sbr_org_id,'')<>'' and nvl(tem_org_id,'')=''  and sbr_org_nm not regexp '虚拟'              then brc_org_id
--                                     when nvl(tem_org_id,'')<>'' and tem_org_nm not regexp '虚拟'                             then sbr_org_id
--                                 else null
--                             end
--         )
--     end as ORG_NUM
--     ,flag
--     ,score_class
--     ,score
-- from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_tmp a
-- union all
-- select
--     DATA_DT,
--     CPY_ORG_ID,
--     CPY_ORG_NM,
--     BRC_ORG_ID,
--     BRC_ORG_NM,
--     SBR_ORG_ID,
--     SBR_ORG_NM,
--     TEM_ORG_ID,
--     TEM_ORG_NM,
--     ORG_ID,
--     ORG_NM,
--     IND_ID,
--     IND_NM,
--     DATA_CLASS,
--     case when IND_ID in ('DWJS2_0001_01','DWJS2_0001_02','DWJS2_0004_01','KHJL_0001','DWJS2_0011_01','DWJS2_0012_01','DWJS2_0013_01','XZTM2_0001_01','XZTM2_0002_01','XZTM2_0005_01','XZTM2_0006_01','XZTM2_0007_01','CLWH2_0001_01','CLWH2_0001_02','CLWH2_0002_01','CLWH2_0003_01','CLWH2_0004_01','CLWH2_0005_01','CLWH2_0009_01','CLWH2_0012_01','CLWH2_0012_02','ZHJY2_0001_01','ZHJY2_0001_02','ZHJY2_0002_01','ZHJY2_0002_02','ZHJY2_0003_01','ZHJY2_0003_02','ZHJY2_0005_01','ZHJY2_0005_02','ZHJY2_0008_01','ZHJY2_0008_02','ZHJY2_0009_01','ZHJY2_0009_02','ZHJY2_0010_01','ZHJY2_0010_02','ZHJY2_0011_01','ZHJY2_0011_02','ZHJY2_0012_01','ZHJY2_0012_02','ZHJY2_0013_01','ZHJY2_0014_01','ZHJY2_0014_02','ZHJY2_0015_01','ZHJY2_0016_01','ZHJY2_0017_01','ZHJY2_0017_02','ZHJY2_0018_01','ZHJY2_0019_01','ZHJY2_0020')  then round(CUR_VAL,0)
--          when IND_ID in ('DWJS2_0006_01','KHJL_0002','KHJL_0003','DWJS2_0006','DWJS2_0007_01','DWJS2_0007','DWJS2_0008_01','DWJS2_0008','DWJS2_0009_01','DWJS2_0009','DWJS2_0010_01','DWJS2_0010','DWJS2_0011','DWJS2_0012','DWJS2_0013','DWJS2_0017','DWJS2_0018','DWJS2_0019','DWJS2_0020','DWJS2_0021','XZTM2_0001','XZTM2_0002','XZTM2_0003_01','XZTM2_0003','XZTM2_0004_01','XZTM2_0004','XZTM2_0005','XZTM2_0006','XZTM2_0007','XZTM2_0008_01','XZTM2_0008','CLWH2_0004','CLWH2_0005','CLWH2_0007','CLWH2_0008','CLWH2_0011_01','CLWH2_0011','CLWH2_0014_01','CLWH2_0014_02','CLWH2_0015_01','CLWH2_0015_02','CLWH2_0016','ZHJY2_0004_01','ZHJY2_0004_02','ZHJY2_0006_01','ZHJY2_0006_02','ZHJY2_0007_01','ZHJY2_0007_02','DJGL2_0001_01','DJGL2_0001_02','DJGL2_0002_01','DJGL2_0002_02','DJGL2_0003_01','DJGL2_0003_02','DJGL2_0004_01','DJGL2_0004_02','DJGL2_0006_01','DJGL2_0006_02','DJGL2_0007_01','DJGL2_0007_02','DJGL2_0008_01','DJGL2_0008_02','JGGL2_0001_01','JGGL2_0001_02','JGGL2_0002_01','JGGL2_0003_01','JGGL2_0004_01','JGGL2_0004_02','JGGL2_0005_01','JGGL2_0006_01','JGGL2_0007_01','JGGL2_0007_02','JGGL2_0008_01','JGGL2_0008_02','JGGL2_0009_01','JGGL2_0012_01','JGGL2_0013_01','JGGL2_0013_02','JGGL2_0014_01','JGGL2_0015_01','JGGL2_0016_01','JGGL2_0016_02','JGGL2_0017_01','JGGL2_0018_01','JGGL2_0019_01','JGGL2_0019_02','JGGL2_0020_01','JGGL2_0020_02','JGGL2_0021_01','JGGL2_0022_01','JGGL2_0023_01','JGGL2_0023_02','JGGL2_0024_01','JGGL2_0025_01','JGGL2_0026_01','JGGL2_0027_01','JGGL2_0028_01','JGGL2_0028_02','JGGL2_0029_01','JGGL2_0030_01','JGGL2_0031_01','JGGL2_0032_01','JGGL2_0033_01','JGGL2_0033_02','JGGL2_0034_01','JGGL2_0035_01','JGGL2_0036_01','JGGL2_0037_01','JGGL2_0038_01','JGGL2_0038_02','JGGL2_0039_01','JGGL2_0040_01','JGGL2_0041_01','JGGL2_0042_01','JGGL2_0043_01','JGGL2_0044_01','JGGL2_0044_02','JGGL2_0045_01','JGGL2_0046_01','JGGL2_0047_01','JGGL2_0048_01','JGGL2_0049_01')  then round(CUR_VAL,2)
--          when IND_ID in ('DWJS2_0001','DWJS2_0004','DWJS2_0005','CLWH2_0001','CLWH2_0002','CLWH2_0003','CLWH2_0006','CLWH2_0009','CLWH2_0012','CLWH2_0013','CLWH2_0014','CLWH2_0015','CLWH2_0017_01','CLWH2_0017','ZHJY2_0001','ZHJY2_0002_03','ZHJY2_0002','ZHJY2_0003','ZHJY2_0004','ZHJY2_0005_03','ZHJY2_0005','ZHJY2_0006','ZHJY2_0007_03','ZHJY2_0007','ZHJY2_0008','ZHJY2_0009_03','ZHJY2_0009','ZHJY2_0010','ZHJY2_0011_03','ZHJY2_0011','ZHJY2_0012','ZHJY2_0013','ZHJY2_0014','ZHJY2_0015','ZHJY2_0016','ZHJY2_0017_03','ZHJY2_0017','ZHJY2_0018_02','ZHJY2_0018','ZHJY2_0019_02','ZHJY2_0019','ZHJY2_0021','DJGL2_0001','DJGL2_0002','DJGL2_0003','DJGL2_0004','DJGL2_0005','DJGL2_0006_03','DJGL2_0006','DJGL2_0007_03','DJGL2_0007','DJGL2_0008_03','DJGL2_0008','DJGL2_0009_01','DJGL2_0009','DJGL2_0010','JGGL2_0001','JGGL2_0002','JGGL2_0003','JGGL2_0004','JGGL2_0005','JGGL2_0006','JGGL2_0007','JGGL2_0008','JGGL2_0009','JGGL2_0012','JGGL2_0013_03','JGGL2_0013','JGGL2_0014_02','JGGL2_0014','JGGL2_0015_02','JGGL2_0015','JGGL2_0016_03','JGGL2_0016','JGGL2_0017_02','JGGL2_0017','JGGL2_0018_02','JGGL2_0018','JGGL2_0019_03','JGGL2_0019','JGGL2_0020_03','JGGL2_0020','JGGL2_0021_02','JGGL2_0021','JGGL2_0022_02','JGGL2_0022','JGGL2_0023','JGGL2_0024','JGGL2_0025','JGGL2_0026','JGGL2_0027','JGGL2_0028_03','JGGL2_0028','JGGL2_0029_02','JGGL2_0029','JGGL2_0030_02','JGGL2_0030','JGGL2_0031_02','JGGL2_0031','JGGL2_0032_02','JGGL2_0032','JGGL2_0033_03','JGGL2_0033','JGGL2_0034_02','JGGL2_0034','JGGL2_0035_02','JGGL2_0035','JGGL2_0036_02','JGGL2_0036','JGGL2_0037_02','JGGL2_0037','JGGL2_0038','JGGL2_0039','JGGL2_0040','JGGL2_0041','JGGL2_0042','JGGL2_0043','JGGL2_0044_03','JGGL2_0044','JGGL2_0045_02','JGGL2_0045','JGGL2_0046_02','JGGL2_0046','JGGL2_0047_02','JGGL2_0047','JGGL2_0048_02','JGGL2_0048','JGGL2_0049_02','JGGL2_0049')  then concat(round(CUR_VAL,4)*100,'%')
--          else CUR_VAL
--     end CUR_VAL_ZS,
--     case when IND_ID in ('DWJS2_0001_01','DWJS2_0001_02','DWJS2_0004_01','KHJL_0001','DWJS2_0011_01','DWJS2_0012_01','DWJS2_0013_01','XZTM2_0001_01','XZTM2_0002_01','XZTM2_0005_01','XZTM2_0006_01','XZTM2_0007_01','CLWH2_0001_01','CLWH2_0001_02','CLWH2_0002_01','CLWH2_0003_01','CLWH2_0004_01','CLWH2_0005_01','CLWH2_0009_01','CLWH2_0012_01','CLWH2_0012_02','ZHJY2_0001_01','ZHJY2_0001_02','ZHJY2_0002_01','ZHJY2_0002_02','ZHJY2_0003_01','ZHJY2_0003_02','ZHJY2_0005_01','ZHJY2_0005_02','ZHJY2_0008_01','ZHJY2_0008_02','ZHJY2_0009_01','ZHJY2_0009_02','ZHJY2_0010_01','ZHJY2_0010_02','ZHJY2_0011_01','ZHJY2_0011_02','ZHJY2_0012_01','ZHJY2_0012_02','ZHJY2_0013_01','ZHJY2_0014_01','ZHJY2_0014_02','ZHJY2_0015_01','ZHJY2_0016_01','ZHJY2_0017_01','ZHJY2_0017_02','ZHJY2_0018_01','ZHJY2_0019_01','ZHJY2_0020')  then round(CUR_VAL,0)
--          when IND_ID in ('DWJS2_0006_01','KHJL_0002','KHJL_0003','DWJS2_0006','DWJS2_0007_01','DWJS2_0007','DWJS2_0008_01','DWJS2_0008','DWJS2_0009_01','DWJS2_0009','DWJS2_0010_01','DWJS2_0010','DWJS2_0011','DWJS2_0012','DWJS2_0013','DWJS2_0017','DWJS2_0018','DWJS2_0019','DWJS2_0020','DWJS2_0021','XZTM2_0001','XZTM2_0002','XZTM2_0003_01','XZTM2_0003','XZTM2_0004_01','XZTM2_0004','XZTM2_0005','XZTM2_0006','XZTM2_0007','XZTM2_0008_01','XZTM2_0008','CLWH2_0004','CLWH2_0005','CLWH2_0007','CLWH2_0008','CLWH2_0011_01','CLWH2_0011','CLWH2_0014_01','CLWH2_0014_02','CLWH2_0015_01','CLWH2_0015_02','CLWH2_0016','ZHJY2_0004_01','ZHJY2_0004_02','ZHJY2_0006_01','ZHJY2_0006_02','ZHJY2_0007_01','ZHJY2_0007_02','DJGL2_0001_01','DJGL2_0001_02','DJGL2_0002_01','DJGL2_0002_02','DJGL2_0003_01','DJGL2_0003_02','DJGL2_0004_01','DJGL2_0004_02','DJGL2_0006_01','DJGL2_0006_02','DJGL2_0007_01','DJGL2_0007_02','DJGL2_0008_01','DJGL2_0008_02','JGGL2_0001_01','JGGL2_0001_02','JGGL2_0002_01','JGGL2_0003_01','JGGL2_0004_01','JGGL2_0004_02','JGGL2_0005_01','JGGL2_0006_01','JGGL2_0007_01','JGGL2_0007_02','JGGL2_0008_01','JGGL2_0008_02','JGGL2_0009_01','JGGL2_0012_01','JGGL2_0013_01','JGGL2_0013_02','JGGL2_0014_01','JGGL2_0015_01','JGGL2_0016_01','JGGL2_0016_02','JGGL2_0017_01','JGGL2_0018_01','JGGL2_0019_01','JGGL2_0019_02','JGGL2_0020_01','JGGL2_0020_02','JGGL2_0021_01','JGGL2_0022_01','JGGL2_0023_01','JGGL2_0023_02','JGGL2_0024_01','JGGL2_0025_01','JGGL2_0026_01','JGGL2_0027_01','JGGL2_0028_01','JGGL2_0028_02','JGGL2_0029_01','JGGL2_0030_01','JGGL2_0031_01','JGGL2_0032_01','JGGL2_0033_01','JGGL2_0033_02','JGGL2_0034_01','JGGL2_0035_01','JGGL2_0036_01','JGGL2_0037_01','JGGL2_0038_01','JGGL2_0038_02','JGGL2_0039_01','JGGL2_0040_01','JGGL2_0041_01','JGGL2_0042_01','JGGL2_0043_01','JGGL2_0044_01','JGGL2_0044_02','JGGL2_0045_01','JGGL2_0046_01','JGGL2_0047_01','JGGL2_0048_01','JGGL2_0049_01')  then round(CUR_VAL,2)
--          when IND_ID in ('DWJS2_0001','DWJS2_0004','DWJS2_0005','CLWH2_0001','CLWH2_0002','CLWH2_0003','CLWH2_0006','CLWH2_0009','CLWH2_0012','CLWH2_0013','CLWH2_0014','CLWH2_0015','CLWH2_0017_01','CLWH2_0017','ZHJY2_0001','ZHJY2_0002_03','ZHJY2_0002','ZHJY2_0003','ZHJY2_0004','ZHJY2_0005_03','ZHJY2_0005','ZHJY2_0006','ZHJY2_0007_03','ZHJY2_0007','ZHJY2_0008','ZHJY2_0009_03','ZHJY2_0009','ZHJY2_0010','ZHJY2_0011_03','ZHJY2_0011','ZHJY2_0012','ZHJY2_0013','ZHJY2_0014','ZHJY2_0015','ZHJY2_0016','ZHJY2_0017_03','ZHJY2_0017','ZHJY2_0018_02','ZHJY2_0018','ZHJY2_0019_02','ZHJY2_0019','ZHJY2_0021','DJGL2_0001','DJGL2_0002','DJGL2_0003','DJGL2_0004','DJGL2_0005','DJGL2_0006_03','DJGL2_0006','DJGL2_0007_03','DJGL2_0007','DJGL2_0008_03','DJGL2_0008','DJGL2_0009_01','DJGL2_0009','DJGL2_0010','JGGL2_0001','JGGL2_0002','JGGL2_0003','JGGL2_0004','JGGL2_0005','JGGL2_0006','JGGL2_0007','JGGL2_0008','JGGL2_0009','JGGL2_0012','JGGL2_0013_03','JGGL2_0013','JGGL2_0014_02','JGGL2_0014','JGGL2_0015_02','JGGL2_0015','JGGL2_0016_03','JGGL2_0016','JGGL2_0017_02','JGGL2_0017','JGGL2_0018_02','JGGL2_0018','JGGL2_0019_03','JGGL2_0019','JGGL2_0020_03','JGGL2_0020','JGGL2_0021_02','JGGL2_0021','JGGL2_0022_02','JGGL2_0022','JGGL2_0023','JGGL2_0024','JGGL2_0025','JGGL2_0026','JGGL2_0027','JGGL2_0028_03','JGGL2_0028','JGGL2_0029_02','JGGL2_0029','JGGL2_0030_02','JGGL2_0030','JGGL2_0031_02','JGGL2_0031','JGGL2_0032_02','JGGL2_0032','JGGL2_0033_03','JGGL2_0033','JGGL2_0034_02','JGGL2_0034','JGGL2_0035_02','JGGL2_0035','JGGL2_0036_02','JGGL2_0036','JGGL2_0037_02','JGGL2_0037','JGGL2_0038','JGGL2_0039','JGGL2_0040','JGGL2_0041','JGGL2_0042','JGGL2_0043','JGGL2_0044_03','JGGL2_0044','JGGL2_0045_02','JGGL2_0045','JGGL2_0046_02','JGGL2_0046','JGGL2_0047_02','JGGL2_0047','JGGL2_0048_02','JGGL2_0048','JGGL2_0049_02','JGGL2_0049')  then round(CUR_VAL,4)
--          else CUR_VAL
--     end CUR_VAL,
--     rank() over(partition by IND_ID
--                                 order by
--                                 if(IND_ID in ('DWJS2_0001_02','DWJS2_0001','ZHJY2_0001_01','ZHJY2_0001','ZHJY2_0002_01','ZHJY2_0002_03','ZHJY2_0002','DJGL2_0002_01','DJGL2_0002','DJGL2_0003_01','DJGL2_0003','DJGL2_0004_01','DJGL2_0004','DJGL2_0007_01','DJGL2_0007_03','DJGL2_0007','DJGL2_0008_01','DJGL2_0008_03','DJGL2_0008','JGGL2_0003_01','JGGL2_0003','JGGL2_0005_01','JGGL2_0005','JGGL2_0015_01','JGGL2_0015_02','JGGL2_0015','JGGL2_0017_01','JGGL2_0017_02','JGGL2_0017'),
--                                                 0-CUR_VAL,CUR_VAL)         desc
--         )
--      as CUR_RNK,
--     case
--         when nvl(sbr_org_id,'')<>'' and nvl(tem_org_id,'')='' then '支行'
--     end as IND_LVL,
--     '母行全行'  as CP_CLS,
--     COUNT(DISTINCT ORG_ID) over(partition by IND_ID)  as ORG_NUM
--     ,flag
--     ,score_class
--     ,score
-- from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_tmp a
-- where  nvl(sbr_org_id,'')<>'' and nvl(tem_org_id,'')='' and sbr_org_nm not regexp '虚拟'
-- and  substr(brc_org_id,3,1)<>'6'  --母行
-- union all
-- select
--     DATA_DT,
--     CPY_ORG_ID,
--     CPY_ORG_NM,
--     BRC_ORG_ID,
--     BRC_ORG_NM,
--     SBR_ORG_ID,
--     SBR_ORG_NM,
--     TEM_ORG_ID,
--     TEM_ORG_NM,
--     ORG_ID,
--     ORG_NM,
--     IND_ID,
--     IND_NM,
--     DATA_CLASS,
--     case when IND_ID in ('DWJS2_0001_01','DWJS2_0001_02','DWJS2_0004_01','KHJL_0001','DWJS2_0011_01','DWJS2_0012_01','DWJS2_0013_01','XZTM2_0001_01','XZTM2_0002_01','XZTM2_0005_01','XZTM2_0006_01','XZTM2_0007_01','CLWH2_0001_01','CLWH2_0001_02','CLWH2_0002_01','CLWH2_0003_01','CLWH2_0004_01','CLWH2_0005_01','CLWH2_0009_01','CLWH2_0012_01','CLWH2_0012_02','ZHJY2_0001_01','ZHJY2_0001_02','ZHJY2_0002_01','ZHJY2_0002_02','ZHJY2_0003_01','ZHJY2_0003_02','ZHJY2_0005_01','ZHJY2_0005_02','ZHJY2_0008_01','ZHJY2_0008_02','ZHJY2_0009_01','ZHJY2_0009_02','ZHJY2_0010_01','ZHJY2_0010_02','ZHJY2_0011_01','ZHJY2_0011_02','ZHJY2_0012_01','ZHJY2_0012_02','ZHJY2_0013_01','ZHJY2_0014_01','ZHJY2_0014_02','ZHJY2_0015_01','ZHJY2_0016_01','ZHJY2_0017_01','ZHJY2_0017_02','ZHJY2_0018_01','ZHJY2_0019_01','ZHJY2_0020')  then round(CUR_VAL,0)
--          when IND_ID in ('DWJS2_0006_01','KHJL_0002','KHJL_0003','DWJS2_0006','DWJS2_0007_01','DWJS2_0007','DWJS2_0008_01','DWJS2_0008','DWJS2_0009_01','DWJS2_0009','DWJS2_0010_01','DWJS2_0010','DWJS2_0011','DWJS2_0012','DWJS2_0013','DWJS2_0017','DWJS2_0018','DWJS2_0019','DWJS2_0020','DWJS2_0021','XZTM2_0001','XZTM2_0002','XZTM2_0003_01','XZTM2_0003','XZTM2_0004_01','XZTM2_0004','XZTM2_0005','XZTM2_0006','XZTM2_0007','XZTM2_0008_01','XZTM2_0008','CLWH2_0004','CLWH2_0005','CLWH2_0007','CLWH2_0008','CLWH2_0011_01','CLWH2_0011','CLWH2_0014_01','CLWH2_0014_02','CLWH2_0015_01','CLWH2_0015_02','CLWH2_0016','ZHJY2_0004_01','ZHJY2_0004_02','ZHJY2_0006_01','ZHJY2_0006_02','ZHJY2_0007_01','ZHJY2_0007_02','DJGL2_0001_01','DJGL2_0001_02','DJGL2_0002_01','DJGL2_0002_02','DJGL2_0003_01','DJGL2_0003_02','DJGL2_0004_01','DJGL2_0004_02','DJGL2_0006_01','DJGL2_0006_02','DJGL2_0007_01','DJGL2_0007_02','DJGL2_0008_01','DJGL2_0008_02','JGGL2_0001_01','JGGL2_0001_02','JGGL2_0002_01','JGGL2_0003_01','JGGL2_0004_01','JGGL2_0004_02','JGGL2_0005_01','JGGL2_0006_01','JGGL2_0007_01','JGGL2_0007_02','JGGL2_0008_01','JGGL2_0008_02','JGGL2_0009_01','JGGL2_0012_01','JGGL2_0013_01','JGGL2_0013_02','JGGL2_0014_01','JGGL2_0015_01','JGGL2_0016_01','JGGL2_0016_02','JGGL2_0017_01','JGGL2_0018_01','JGGL2_0019_01','JGGL2_0019_02','JGGL2_0020_01','JGGL2_0020_02','JGGL2_0021_01','JGGL2_0022_01','JGGL2_0023_01','JGGL2_0023_02','JGGL2_0024_01','JGGL2_0025_01','JGGL2_0026_01','JGGL2_0027_01','JGGL2_0028_01','JGGL2_0028_02','JGGL2_0029_01','JGGL2_0030_01','JGGL2_0031_01','JGGL2_0032_01','JGGL2_0033_01','JGGL2_0033_02','JGGL2_0034_01','JGGL2_0035_01','JGGL2_0036_01','JGGL2_0037_01','JGGL2_0038_01','JGGL2_0038_02','JGGL2_0039_01','JGGL2_0040_01','JGGL2_0041_01','JGGL2_0042_01','JGGL2_0043_01','JGGL2_0044_01','JGGL2_0044_02','JGGL2_0045_01','JGGL2_0046_01','JGGL2_0047_01','JGGL2_0048_01','JGGL2_0049_01')  then round(CUR_VAL,2)
--          when IND_ID in ('DWJS2_0001','DWJS2_0004','DWJS2_0005','CLWH2_0001','CLWH2_0002','CLWH2_0003','CLWH2_0006','CLWH2_0009','CLWH2_0012','CLWH2_0013','CLWH2_0014','CLWH2_0015','CLWH2_0017_01','CLWH2_0017','ZHJY2_0001','ZHJY2_0002_03','ZHJY2_0002','ZHJY2_0003','ZHJY2_0004','ZHJY2_0005_03','ZHJY2_0005','ZHJY2_0006','ZHJY2_0007_03','ZHJY2_0007','ZHJY2_0008','ZHJY2_0009_03','ZHJY2_0009','ZHJY2_0010','ZHJY2_0011_03','ZHJY2_0011','ZHJY2_0012','ZHJY2_0013','ZHJY2_0014','ZHJY2_0015','ZHJY2_0016','ZHJY2_0017_03','ZHJY2_0017','ZHJY2_0018_02','ZHJY2_0018','ZHJY2_0019_02','ZHJY2_0019','ZHJY2_0021','DJGL2_0001','DJGL2_0002','DJGL2_0003','DJGL2_0004','DJGL2_0005','DJGL2_0006_03','DJGL2_0006','DJGL2_0007_03','DJGL2_0007','DJGL2_0008_03','DJGL2_0008','DJGL2_0009_01','DJGL2_0009','DJGL2_0010','JGGL2_0001','JGGL2_0002','JGGL2_0003','JGGL2_0004','JGGL2_0005','JGGL2_0006','JGGL2_0007','JGGL2_0008','JGGL2_0009','JGGL2_0012','JGGL2_0013_03','JGGL2_0013','JGGL2_0014_02','JGGL2_0014','JGGL2_0015_02','JGGL2_0015','JGGL2_0016_03','JGGL2_0016','JGGL2_0017_02','JGGL2_0017','JGGL2_0018_02','JGGL2_0018','JGGL2_0019_03','JGGL2_0019','JGGL2_0020_03','JGGL2_0020','JGGL2_0021_02','JGGL2_0021','JGGL2_0022_02','JGGL2_0022','JGGL2_0023','JGGL2_0024','JGGL2_0025','JGGL2_0026','JGGL2_0027','JGGL2_0028_03','JGGL2_0028','JGGL2_0029_02','JGGL2_0029','JGGL2_0030_02','JGGL2_0030','JGGL2_0031_02','JGGL2_0031','JGGL2_0032_02','JGGL2_0032','JGGL2_0033_03','JGGL2_0033','JGGL2_0034_02','JGGL2_0034','JGGL2_0035_02','JGGL2_0035','JGGL2_0036_02','JGGL2_0036','JGGL2_0037_02','JGGL2_0037','JGGL2_0038','JGGL2_0039','JGGL2_0040','JGGL2_0041','JGGL2_0042','JGGL2_0043','JGGL2_0044_03','JGGL2_0044','JGGL2_0045_02','JGGL2_0045','JGGL2_0046_02','JGGL2_0046','JGGL2_0047_02','JGGL2_0047','JGGL2_0048_02','JGGL2_0048','JGGL2_0049_02','JGGL2_0049')  then concat(round(CUR_VAL,4)*100,'%')
--          else CUR_VAL
--     end CUR_VAL_ZS,
--     case when IND_ID in ('DWJS2_0001_01','DWJS2_0001_02','DWJS2_0004_01','KHJL_0001','DWJS2_0011_01','DWJS2_0012_01','DWJS2_0013_01','XZTM2_0001_01','XZTM2_0002_01','XZTM2_0005_01','XZTM2_0006_01','XZTM2_0007_01','CLWH2_0001_01','CLWH2_0001_02','CLWH2_0002_01','CLWH2_0003_01','CLWH2_0004_01','CLWH2_0005_01','CLWH2_0009_01','CLWH2_0012_01','CLWH2_0012_02','ZHJY2_0001_01','ZHJY2_0001_02','ZHJY2_0002_01','ZHJY2_0002_02','ZHJY2_0003_01','ZHJY2_0003_02','ZHJY2_0005_01','ZHJY2_0005_02','ZHJY2_0008_01','ZHJY2_0008_02','ZHJY2_0009_01','ZHJY2_0009_02','ZHJY2_0010_01','ZHJY2_0010_02','ZHJY2_0011_01','ZHJY2_0011_02','ZHJY2_0012_01','ZHJY2_0012_02','ZHJY2_0013_01','ZHJY2_0014_01','ZHJY2_0014_02','ZHJY2_0015_01','ZHJY2_0016_01','ZHJY2_0017_01','ZHJY2_0017_02','ZHJY2_0018_01','ZHJY2_0019_01','ZHJY2_0020')  then round(CUR_VAL,0)
--          when IND_ID in ('DWJS2_0006_01','KHJL_0002','KHJL_0003','DWJS2_0006','DWJS2_0007_01','DWJS2_0007','DWJS2_0008_01','DWJS2_0008','DWJS2_0009_01','DWJS2_0009','DWJS2_0010_01','DWJS2_0010','DWJS2_0011','DWJS2_0012','DWJS2_0013','DWJS2_0017','DWJS2_0018','DWJS2_0019','DWJS2_0020','DWJS2_0021','XZTM2_0001','XZTM2_0002','XZTM2_0003_01','XZTM2_0003','XZTM2_0004_01','XZTM2_0004','XZTM2_0005','XZTM2_0006','XZTM2_0007','XZTM2_0008_01','XZTM2_0008','CLWH2_0004','CLWH2_0005','CLWH2_0007','CLWH2_0008','CLWH2_0011_01','CLWH2_0011','CLWH2_0014_01','CLWH2_0014_02','CLWH2_0015_01','CLWH2_0015_02','CLWH2_0016','ZHJY2_0004_01','ZHJY2_0004_02','ZHJY2_0006_01','ZHJY2_0006_02','ZHJY2_0007_01','ZHJY2_0007_02','DJGL2_0001_01','DJGL2_0001_02','DJGL2_0002_01','DJGL2_0002_02','DJGL2_0003_01','DJGL2_0003_02','DJGL2_0004_01','DJGL2_0004_02','DJGL2_0006_01','DJGL2_0006_02','DJGL2_0007_01','DJGL2_0007_02','DJGL2_0008_01','DJGL2_0008_02','JGGL2_0001_01','JGGL2_0001_02','JGGL2_0002_01','JGGL2_0003_01','JGGL2_0004_01','JGGL2_0004_02','JGGL2_0005_01','JGGL2_0006_01','JGGL2_0007_01','JGGL2_0007_02','JGGL2_0008_01','JGGL2_0008_02','JGGL2_0009_01','JGGL2_0012_01','JGGL2_0013_01','JGGL2_0013_02','JGGL2_0014_01','JGGL2_0015_01','JGGL2_0016_01','JGGL2_0016_02','JGGL2_0017_01','JGGL2_0018_01','JGGL2_0019_01','JGGL2_0019_02','JGGL2_0020_01','JGGL2_0020_02','JGGL2_0021_01','JGGL2_0022_01','JGGL2_0023_01','JGGL2_0023_02','JGGL2_0024_01','JGGL2_0025_01','JGGL2_0026_01','JGGL2_0027_01','JGGL2_0028_01','JGGL2_0028_02','JGGL2_0029_01','JGGL2_0030_01','JGGL2_0031_01','JGGL2_0032_01','JGGL2_0033_01','JGGL2_0033_02','JGGL2_0034_01','JGGL2_0035_01','JGGL2_0036_01','JGGL2_0037_01','JGGL2_0038_01','JGGL2_0038_02','JGGL2_0039_01','JGGL2_0040_01','JGGL2_0041_01','JGGL2_0042_01','JGGL2_0043_01','JGGL2_0044_01','JGGL2_0044_02','JGGL2_0045_01','JGGL2_0046_01','JGGL2_0047_01','JGGL2_0048_01','JGGL2_0049_01')  then round(CUR_VAL,2)
--          when IND_ID in ('DWJS2_0001','DWJS2_0004','DWJS2_0005','CLWH2_0001','CLWH2_0002','CLWH2_0003','CLWH2_0006','CLWH2_0009','CLWH2_0012','CLWH2_0013','CLWH2_0014','CLWH2_0015','CLWH2_0017_01','CLWH2_0017','ZHJY2_0001','ZHJY2_0002_03','ZHJY2_0002','ZHJY2_0003','ZHJY2_0004','ZHJY2_0005_03','ZHJY2_0005','ZHJY2_0006','ZHJY2_0007_03','ZHJY2_0007','ZHJY2_0008','ZHJY2_0009_03','ZHJY2_0009','ZHJY2_0010','ZHJY2_0011_03','ZHJY2_0011','ZHJY2_0012','ZHJY2_0013','ZHJY2_0014','ZHJY2_0015','ZHJY2_0016','ZHJY2_0017_03','ZHJY2_0017','ZHJY2_0018_02','ZHJY2_0018','ZHJY2_0019_02','ZHJY2_0019','ZHJY2_0021','DJGL2_0001','DJGL2_0002','DJGL2_0003','DJGL2_0004','DJGL2_0005','DJGL2_0006_03','DJGL2_0006','DJGL2_0007_03','DJGL2_0007','DJGL2_0008_03','DJGL2_0008','DJGL2_0009_01','DJGL2_0009','DJGL2_0010','JGGL2_0001','JGGL2_0002','JGGL2_0003','JGGL2_0004','JGGL2_0005','JGGL2_0006','JGGL2_0007','JGGL2_0008','JGGL2_0009','JGGL2_0012','JGGL2_0013_03','JGGL2_0013','JGGL2_0014_02','JGGL2_0014','JGGL2_0015_02','JGGL2_0015','JGGL2_0016_03','JGGL2_0016','JGGL2_0017_02','JGGL2_0017','JGGL2_0018_02','JGGL2_0018','JGGL2_0019_03','JGGL2_0019','JGGL2_0020_03','JGGL2_0020','JGGL2_0021_02','JGGL2_0021','JGGL2_0022_02','JGGL2_0022','JGGL2_0023','JGGL2_0024','JGGL2_0025','JGGL2_0026','JGGL2_0027','JGGL2_0028_03','JGGL2_0028','JGGL2_0029_02','JGGL2_0029','JGGL2_0030_02','JGGL2_0030','JGGL2_0031_02','JGGL2_0031','JGGL2_0032_02','JGGL2_0032','JGGL2_0033_03','JGGL2_0033','JGGL2_0034_02','JGGL2_0034','JGGL2_0035_02','JGGL2_0035','JGGL2_0036_02','JGGL2_0036','JGGL2_0037_02','JGGL2_0037','JGGL2_0038','JGGL2_0039','JGGL2_0040','JGGL2_0041','JGGL2_0042','JGGL2_0043','JGGL2_0044_03','JGGL2_0044','JGGL2_0045_02','JGGL2_0045','JGGL2_0046_02','JGGL2_0046','JGGL2_0047_02','JGGL2_0047','JGGL2_0048_02','JGGL2_0048','JGGL2_0049_02','JGGL2_0049')  then round(CUR_VAL,4)
--          else CUR_VAL
--     end CUR_VAL,
--     rank() over(partition by IND_ID
--                                 order by
--                                 if(IND_ID in ('DWJS2_0001_02','DWJS2_0001','ZHJY2_0001_01','ZHJY2_0001','ZHJY2_0002_01','ZHJY2_0002_03','ZHJY2_0002','DJGL2_0002_01','DJGL2_0002','DJGL2_0003_01','DJGL2_0003','DJGL2_0004_01','DJGL2_0004','DJGL2_0007_01','DJGL2_0007_03','DJGL2_0007','DJGL2_0008_01','DJGL2_0008_03','DJGL2_0008','JGGL2_0003_01','JGGL2_0003','JGGL2_0005_01','JGGL2_0005','JGGL2_0015_01','JGGL2_0015_02','JGGL2_0015','JGGL2_0017_01','JGGL2_0017_02','JGGL2_0017'),
--                                                 0-CUR_VAL,CUR_VAL)         desc
--         )
--      as CUR_RNK,
--     case
--         when nvl(sbr_org_id,'')<>'' and nvl(tem_org_id,'')='' then '支行'
--     end as IND_LVL,
--     '村行全行'  as CP_CLS,
--     COUNT(DISTINCT ORG_ID) over(partition by IND_ID)  as ORG_NUM
--     ,flag
--     ,score_class
--     ,score
-- from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_tmp a
-- where  nvl(sbr_org_id,'')<>'' and nvl(tem_org_id,'')='' and sbr_org_nm not regexp '虚拟'
-- and  substr(brc_org_id,3,1)='6'  --村行
-- ;

-- 插入无权重表
-- INSERT OVERWRITE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_SMP PARTITION (dt = '${data_dt}')
-- SELECT  DATA_DT
--         ,CPY_ORG_ID
--         ,CPY_ORG_NM
--         ,BRC_ORG_ID
--         ,BRC_ORG_NM
--         ,SBR_ORG_ID
--         ,SBR_ORG_NM
--         ,TEM_ORG_ID
--         ,TEM_ORG_NM
--         ,ORG_ID
--         ,ORG_NM
--         ,IND_ID
--         ,IND_NM
--         ,DATA_CLASS
--         ,CUR_VAL_ZS
--         ,CUR_VAL
--         -- ,MI_VAL_ZS
--         -- ,MI_VAL
--         -- ,MI_CMP_VAL_ZS
--         -- ,MI_CMP_VAL
--         -- ,QI_VAL_ZS
--         -- ,QI_VAL
--         -- ,QI_CMP_VAL_ZS
--         -- ,QI_CMP_VAL
--         -- ,YI_VAL_ZS
--         -- ,YI_VAL
--         -- ,YI_CMP_VAL_ZS
--         -- ,YI_CMP_VAL
--         ,CUR_RNK
--         -- ,YI_CMP_RNK
--         ,IND_LVL
--         ,CP_CLS
--         ,ORG_NUM
--         ,if(LENGTH(IND_ID)=9,'主指标','子指标') as flag
-- FROM    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3
-- WHERE   dt = '${data_dt}';



-- -- 关联指标权重
-- INSERT OVERWRITE TABLE LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3 PARTITION (dt = '${data_dt}')
-- SELECT  a.DATA_DT
--         ,a.CPY_ORG_ID
--         ,a.CPY_ORG_NM
--         ,a.BRC_ORG_ID
--         ,a.BRC_ORG_NM
--         ,a.SBR_ORG_ID
--         ,a.SBR_ORG_NM
--         ,a.TEM_ORG_ID
--         ,a.TEM_ORG_NM
--         ,a.ORG_ID
--         ,a.ORG_NM
--         ,a.IND_ID
--         ,a.IND_NM
--         ,a.DATA_CLASS
--         ,a.CUR_VAL_ZS
--         ,a.CUR_VAL
--         -- ,MI_VAL_ZS
--         -- ,MI_VAL
--         -- ,MI_CMP_VAL_ZS
--         -- ,MI_CMP_VAL
--         -- ,QI_VAL_ZS
--         -- ,QI_VAL
--         -- ,QI_CMP_VAL_ZS
--         -- ,QI_CMP_VAL
--         -- ,YI_VAL_ZS
--         -- ,YI_VAL
--         -- ,YI_CMP_VAL_ZS
--         -- ,YI_CMP_VAL
--         ,a.CUR_RNK
--         -- ,YI_CMP_RNK
--         ,a.IND_LVL
--         ,a.CP_CLS
--         ,a.ORG_NUM
--         ,if(LENGTH(IND_ID)=10,'主指标','子指标') as flag
--         ,b.score_class_1
--         ,b.score_1
-- FROM    LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3 a
-- LEFT JOIN    (
--                  SELECT  IND_ID       AS IND_ID_1
--                          ,if(score_class='1','雷达图-静态','雷达图-动静态') AS score_class_1
--                          ,score       AS score_1
--                  FROM    LAB_BIGDATA_DEV.hgl_org_tag_ind_weight_2
--                  WHERE   pt = max_pt('LAB_BIGDATA_DEV.hgl_org_tag_ind_weight_2')
--              ) b
-- ON      a.IND_ID = b.IND_ID_1
-- WHERE   dt = '${data_dt}';

-- -- SELECT DATA_DT,CPY_ORG_ID,CPY_ORG_NM,BRC_ORG_ID,BRC_ORG_NM,SBR_ORG_ID,SBR_ORG_NM,TEM_ORG_ID,TEM_ORG_NM,ORG_ID,ORG_NM,IND_ID,CUR_VAL,CUR_RNK,IND_LVL,CP_CLS, score_class_1,score_1 from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3 where dt='20240229';


-- --*************************************机构模块************************************
-- -- DROP TABLE IF EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_JBXX;
-- -- CREATE TABLE IF NOT EXISTS LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_JBXX
-- -- (
-- --     DATA_DT       STRING  COMMENT '数据日期'
-- --     ,CPY_ORG_ID   STRING  COMMENT '法人机构编号'
-- --     ,CPY_ORG_NM   STRING  COMMENT '法人机构名称'
-- --     ,BRC_ORG_ID   STRING  COMMENT '分行机构编号'
-- --     ,BRC_ORG_NM   STRING  COMMENT '分行机构名称'
-- --     ,SBR_ORG_ID   STRING  COMMENT '支行机构编号'
-- --     ,SBR_ORG_NM   STRING  COMMENT '支行机构名称'
-- --     ,TEM_ORG_ID   STRING  COMMENT '团队机构编号'
-- --     ,TEM_ORG_NM   STRING  COMMENT '团队机构名称'
-- --     ,ORG_ID       STRING  COMMENT '考核机构代码'
-- --     ,ORG_NM       STRING  COMMENT '考核机构名称'
-- --     ,id_ope_y     STRING  COMMENT '开业年数'
-- --     ,dep_loan_r     STRING  COMMENT '存贷比'
-- --     ,sts          STRING  COMMENT '本月状态'
-- --     ,sts_com_last_mon STRING  COMMENT '上月状态'
-- --     ,sts_com_year_bgn STRING  COMMENT '年初状态'
-- --     ,IND_LVL      STRING  COMMENT '指标层级'
-- --     ,IND_ID       STRING  COMMENT '指标编号'
-- --     ,IND_NM       STRING  COMMENT '指标名称'
-- --     ,CUR_VAL      DECIMAL COMMENT '指标值'
-- -- )
-- -- COMMENT '合格率机构基本信息'
-- -- PARTITIONED BY
-- -- (
-- --     DT STRING COMMENT '日期分区'
-- -- );

-- insert overwrite table LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_JBXX PARTITION (dt = '${data_dt}')
-- SELECT  '${data_dt}'
--         ,t1.CPY_ORG_ID
--         ,t1.CPY_ORG_NM
--         ,t1.BRC_ORG_ID
--         ,t1.BRC_ORG_NM
--         ,t1.SBR_ORG_ID
--         ,t1.SBR_ORG_NM
--         ,t1.TEM_ORG_ID
--         ,t1.TEM_ORG_NM
--         ,t1.ORG_ID
--         ,t1.ORG_NM
--         ,round(t2.id_ope_mon/12,1)
--         ,t4.dep_loan_r
--         ,t3.sts
--         ,t3.sts_com_last_mon
--         ,t3.sts_com_year_bgn
--         ,t1.IND_LVL
--         ,t1.IND_ID
--         ,t1.IND_NM
--         ,t1.CUR_VAL
-- from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_SMP t1
-- LEFT JOIN app_rpt.FCT_SUB_BRN_ORG_ELG_RAT t2
-- on t1.ORG_ID =t2.org_cd and t2.dt=concat(substr(t1.dt,1,4),substr(t1.dt,5,2))
-- LEFT JOIN app_rpt.FCT_BRN_ORG_ELG_RAT_SITU_SMY t3
-- on t1.ORG_ID =t3.org_id and t3.dt=concat(substr(t1.dt,1,4),substr(t1.dt,5,2))
-- LEFT JOIN(
--     SELECT a.ORG_ID
--            ,a.ORG_NM
--            ,a.IND_LVL
--            ,concat(round(a.CUR_VAL/if(b.CUR_VAL=0,null,b.CUR_VAL),4)*100,'%') as dep_loan_r  --存贷比
--     from LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_SMP a
--     left join LAB_BIGDATA_DEV.HGL_ORG_TAG_IND_DD_3_SMP b
--     on a.ORG_ID =b.ORG_ID and a.IND_LVL=b.IND_LVL and  b.cp_cls='分行内' and b.IND_ID='DJGL2_0011' and a.dt=b.dt  --贷款月日均
--     where a.dt='${data_dt}'
--     and a.IND_ID ='DJGL2_0002_02' --存款月日均
--     and nvl(a.sbr_org_id,'')<>'' and nvl(a.tem_org_id,'')='' and a.sbr_org_nm not regexp '虚拟'
--     and  a.cp_cls='分行内'
-- )t4  on t1.ORG_ID=t4.ORG_ID and t1.IND_LVL=t4.IND_LVL
-- where t1.dt='${data_dt}'
-- and t1.IND_ID in ('DJGL2_0002_02','DJGL2_0011','DWJS2_0002')
-- and nvl(t1.sbr_org_id,'')<>'' and nvl(t1.tem_org_id,'')='' and t1.sbr_org_nm not regexp '虚拟'
-- and  t1.cp_cls='分行内'
-- ;

-- SELECT DISTINCT ind_id FROM HGL_ORG_TAG_IND_DD_3 WHERE dt='20240731' and data_class='存量维护'

-- SELECT distinct IND_ID,IND_NM from HGL_ORG_TAG_IND_DD_3_tmp;
**指标1贷款信用卡征信.sql
SELECT * FROM mdf_data_feature_zj_20221122;


insert overwrite table lab_bigdata_dev.mdf_data_feature_zj_2_20221122 PARTITION (DT = '202404')
SELECT  分行名称
		,mdf_type
        ,'1' AS type
        ,CASE            WHEN sum(交接前是有效户) = 0 THEN 0            ELSE sum(交接前是有效户交接后12个月非有效户) / sum(交接前是有效户)          END 转化率1
        ,CASE            WHEN sum(交接前非有效户) = 0 THEN 0            ELSE sum(交接前非有效户交接后12个月是有效户) / sum(交接前非有效户)          END 转化率2
        ,CASE            WHEN sum(贷款到期客户数) = 0 THEN 0            ELSE sum(续贷客户数) / sum(贷款到期客户数)          END 续贷率
        ,CASE            WHEN sum(存款到期客户数) = 0 THEN 0            ELSE sum(续存客户数) / sum(存款到期客户数)          END 续存率
        ,CASE   WHEN (  CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数) END ) = 0 THEN 0
				ELSE ( ( CASE WHEN sum(交接后12个月贷款日均人数) = 0 THEN 0 ELSE sum(交接后12个月贷款日均总规模) / sum(交接后12个月贷款日均人数)  END  ) -
				( CASE WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) ) / ( CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0 ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) END 增长率_贷款
        ,CASE WHEN ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) = 0 THEN 0
			  ELSE ( ( CASE WHEN sum(交接后12个月存款日均人数) = 0 THEN 0 ELSE sum(交接后12个月存款日均总规模) / sum(交接后12个月存款日均人数)  END  ) - (
             CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0    ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数)  END  ) ) / ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) END 增长率_存款
        ,CASE WHEN ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) ) = 0 THEN 0 ELSE sum(执行利率下降) / ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) )          END 执行利率下降占比
        ,CASE WHEN sum(交接前非随贷通客户) = 0 THEN 0 ELSE sum(新增随贷通客户数) / sum(交接前非随贷通客户)          END 配卡率
        ,CASE WHEN ( CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END ) = 0 THEN 0
			  ELSE ( (  CASE  WHEN sum(交接后12个月ftp月均人数) = 0 THEN 0   ELSE sum(交接后12个月ftp月均总规模) / sum(交接后12个月ftp月均人数)  END   ) - (
			  CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0    ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END   ) ) / (CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END )  END ftp涨跌幅
		,case when sum(mdf_ctr_bal)=0 then 0 else sum(is_yr_new_hpn_amt)/sum(mdf_ctr_bal) end as 	本年新发生风险贷款率
FROM    lab_bigdata_dev.mdf_data_feature_zj_20221122 a
where a . 分行名称 rlike '分行'
GROUP BY 分行名称 , mdf_type,'1'
union
SELECT  '全行' as 分行名称
		,mdf_type
        ,'1' AS type
        ,CASE            WHEN sum(交接前是有效户) = 0 THEN 0            ELSE sum(交接前是有效户交接后12个月非有效户) / sum(交接前是有效户)          END 转化率1
        ,CASE            WHEN sum(交接前非有效户) = 0 THEN 0            ELSE sum(交接前非有效户交接后12个月是有效户) / sum(交接前非有效户)          END 转化率2
        ,CASE            WHEN sum(贷款到期客户数) = 0 THEN 0            ELSE sum(续贷客户数) / sum(贷款到期客户数)          END 续贷率
        ,CASE            WHEN sum(存款到期客户数) = 0 THEN 0            ELSE sum(续存客户数) / sum(存款到期客户数)          END 续存率
        ,CASE   WHEN (  CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数) END ) = 0 THEN 0
				ELSE ( ( CASE WHEN sum(交接后12个月贷款日均人数) = 0 THEN 0 ELSE sum(交接后12个月贷款日均总规模) / sum(交接后12个月贷款日均人数)  END  ) -
				( CASE WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) ) / ( CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0 ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) END 增长率_贷款
        ,CASE WHEN ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) = 0 THEN 0
			  ELSE ( ( CASE WHEN sum(交接后12个月存款日均人数) = 0 THEN 0 ELSE sum(交接后12个月存款日均总规模) / sum(交接后12个月存款日均人数)  END  ) - (
             CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0    ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数)  END  ) ) / ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) END 增长率_存款
        ,CASE WHEN ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) ) = 0 THEN 0 ELSE sum(执行利率下降) / ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) )          END 执行利率下降占比
        ,CASE WHEN sum(交接前非随贷通客户) = 0 THEN 0 ELSE sum(新增随贷通客户数) / sum(交接前非随贷通客户)          END 配卡率
        ,CASE WHEN ( CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END ) = 0 THEN 0
			  ELSE ( (  CASE  WHEN sum(交接后12个月ftp月均人数) = 0 THEN 0   ELSE sum(交接后12个月ftp月均总规模) / sum(交接后12个月ftp月均人数)  END   ) - (
			  CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0    ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END   ) ) / (CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END )  END ftp涨跌幅
        ,case when sum(mdf_ctr_bal)=0 then 0 else sum(is_yr_new_hpn_amt)/sum(mdf_ctr_bal) end as 	本年新发生风险贷款率
FROM    lab_bigdata_dev.mdf_data_feature_zj_20221122
GROUP BY '全行' ,mdf_type, '1'
;

SELECT * FROM mdf_data_feature_zj_2_20221122 where dt='202404';



insert overwrite table lab_bigdata_dev.mdf_data_feature_zj_3_20221122 PARTITION (DT = '202404')

SELECT  a . 分行名称
    ,row_number() over(partition by '1' order by a.转化率1 desc) as 转化率_是转非
    ,row_number() over(partition by '1' order by a.转化率2 asc) as 转化率_非转是
    ,row_number() over(partition by '1' order by a.续贷率 asc) as 续贷率
    ,row_number() over(partition by '1' order by a.续存率 asc) as 续存率
    ,row_number() over(partition by '1' order by a.增长率_贷款 asc) as 增长率_贷款
    ,row_number() over(partition by '1' order by a.增长率_存款 asc) as 增长率_存款
    ,row_number() over(partition by '1' order by a.执行利率下降占比 desc) as 执行利率下降占比
    ,row_number() over(partition by '1' order by a.配卡率 asc) as 配卡率
    ,row_number() over(partition by '1' order by a.ftp涨跌幅 asc) as ftp涨跌幅
FROM    lab_bigdata_dev.mdf_data_feature_zj_2_20221122 a
where a . 分行名称 rlike '分行'
and mdf_type='交接客户';

SELECT * FROM mdf_data_feature_zj_3_20221122 where dt='202404';

SELECT * FROM   lab_bigdata_dev.mdf_data_feature_zj_20221122 a
where a . 分行名称 rlike '分行'

SELECT  分行名称
		,mdf_type
        ,'1' AS type
        ,CASE            WHEN sum(交接前是有效户) = 0 THEN 0            ELSE sum(交接前是有效户交接后12个月非有效户) / sum(交接前是有效户)          END 转化率1
        ,CASE            WHEN sum(交接前非有效户) = 0 THEN 0            ELSE sum(交接前非有效户交接后12个月是有效户) / sum(交接前非有效户)          END 转化率2
        ,CASE            WHEN sum(贷款到期客户数) = 0 THEN 0            ELSE sum(续贷客户数) / sum(贷款到期客户数)          END 续贷率
        ,CASE            WHEN sum(存款到期客户数) = 0 THEN 0            ELSE sum(续存客户数) / sum(存款到期客户数)          END 续存率
        ,CASE   WHEN (  CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数) END ) = 0 THEN 0
				ELSE ( ( CASE WHEN sum(交接后12个月贷款日均人数) = 0 THEN 0 ELSE sum(交接后12个月贷款日均总规模) / sum(交接后12个月贷款日均人数)  END  ) -
				( CASE WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) ) / ( CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0 ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) END 增长率_贷款
        ,CASE WHEN ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) = 0 THEN 0
			  ELSE ( ( CASE WHEN sum(交接后12个月存款日均人数) = 0 THEN 0 ELSE sum(交接后12个月存款日均总规模) / sum(交接后12个月存款日均人数)  END  ) - (
             CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0    ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数)  END  ) ) / ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) END 增长率_存款
        ,CASE WHEN ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) ) = 0 THEN 0 ELSE sum(执行利率下降) / ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) )          END 执行利率下降占比
        ,CASE WHEN sum(交接前非随贷通客户) = 0 THEN 0 ELSE sum(新增随贷通客户数) / sum(交接前非随贷通客户)          END 配卡率
        ,CASE WHEN ( CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END ) = 0 THEN 0
			  ELSE ( (  CASE  WHEN sum(交接后12个月ftp月均人数) = 0 THEN 0   ELSE sum(交接后12个月ftp月均总规模) / sum(交接后12个月ftp月均人数)  END   ) - (
			  CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0    ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END   ) ) / (CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END )  END ftp涨跌幅
		,case when sum(mdf_ctr_bal)=0 then 0 else sum(is_yr_new_hpn_amt)/sum(mdf_ctr_bal) end as 	本年新发生风险贷款率
FROM    lab_bigdata_dev.mdf_data_feature_zj_20221122 a
where a . 分行名称 rlike '分行'
GROUP BY 分行名称 , mdf_type,'1'
**指标3泰惠收开始app放弃.sql
SELECT * FROM gjj_yanhuo_forml_cst_ind_gs_rel；



DROP TABLE IF EXISTS lab_bigdata_dev.gs_hz;

CREATE TABLE lab_bigdata_dev.gs_hz AS

select a.socialcreditcode 统一社会信用代码

	,a.entname 企业名称

	,a.address 注册地址

FROM    (

            SELECT  *

                    ,ROW_NUMBER() OVER ( PARTITION BY socialcreditcode ORDER BY dt DESC ) AS rk

            FROM    edw.nout_gs_label_total_sub AS a --企业标签总表

            WHERE   a.dt >= '00000'

            AND     a.enttype in ('个体工商户','一般法人企业','非法人企业' )

            AND     REPLACE(esdate, '-', '') <= '20231231'

        ) AS a

where a.entstatuscode = '1'

and a.rk=1

--and districtcode in ('330105','330106','330110')  --330105	拱墅区   330106	西湖区    330110	余杭区

and districtcode  like '3301%'

and coalesce(a.address,'')<>''

and (coalesce(a.entname,'')<>'' or coalesce(a.socialcreditcode,'')<>'')

;



SELECT count(*) FROM lab_bigdata_dev.gs_hz
**指标库04_05贷款.sql
CREATE TABLE lab_bigdata_dev.gs_idv_detail AS

select t.*

	,gscst.cst_id --有我行客户号

	,gscst.forml_cst_ind ---正式客户

from gjj_hangye_forml_cst_ind_gs t

left join (	select DISTINCT cst_id

					, gpr_creditcode_all

                    ,forml_cst_ind

			from lab_bigdata_dev.idv_cst_ind_gs

			where coalesce(gpr_creditcode_all,'') <>''

			and coalesce(cst_id,'') <>''

			)gscst --客户有工商数据

on t.socialcreditcode=gscst.gpr_creditcode_all



left join (

                  SELECT  t.cst_id



                  FROM    edw.dim_bus_loan_ctr_inf_dd t

                  WHERE   t.dt = '@@{yyyyMMdd}'

                  AND     ( t.pd_cd NOT IN ( '201050102010146' , '201050101040348' )   OR t.frz_sts_cd <> '' ) --剔除未签约的泰e贷

                  AND     (    (

								    ( t.ctr_bal > 0

									  OR ( t.ctr_bal IS NULL AND     nvl(t.crc_ind, '0') = '0' )

									  OR ( ( nvl(t.crc_ind, '0') <> '0'   OR t.pd_cd LIKE '2010503%' ) AND     ( t.ctr_bal = 0  OR t.ctr_bal IS NULL )  AND     t.apnt_mtu_dt >= '@@{yyyyMMdd}' )

								    )

							     AND     nvl(t.frz_sts_cd, ' ') NOT IN ( '3' , '4' )  --3	到期失效  4	终止失效



							    )

						  OR ( t.ctr_bal > 0 AND     t.pd_cd LIKE '2010503%'  AND     t.apnt_mtu_dt <= '@@{yyyyMMdd}'  AND     t.frz_sts_cd IN ( '3' , '4' ) )

						  ) ----未终结、未到期业务



              ) ctr

 on  gscst.cst_id = ctr.cst_id

left join gjj_hangyehuizong_all risk  --风险

on  gscst.cst_id = risk.cst_id and (risk.全量风险贷款率>0  or risk.近一年新发生风险贷款>0 or risk.风险贷款余额>0)

where risk.cst_id is null   --剔除风险

and ctr.cst_id is null   --非我行贷款户

and t.entstatuscode = '1'  --在营

and t.code  in ('O8112','O8193','O8113','O8229','O8211','O8221','O8219','O8053','O8070','F5189','F5117','F5171','F5119','F5193','F5111','F5181'

,'F5199','F5248','F5245','F5249','F5292','H6140','H6242','H6241','H6232','H6231','H6291','H6239')  --挑选的行业

;



SELECT  substr(code, 1, 2)

        ,count(DISTINCT cst_id) 我行客户数

        ,count(DISTINCT CASE  WHEN forml_cst_ind = 1 THEN cst_id    END) 我行正式客户数

        ,count(DISTINCT CASE  WHEN cst_id IS NULL THEN socialcreditcode  END) 非我行客户数

FROM    lab_bigdata_dev.gs_idv_detail --正式客户且有工商记录

GROUP BY substr(code, 1, 2)

order by   substr(code, 1, 2);
**指标库06_07_02交易流水.sql
DROP TABLE IF EXISTS lab_bigdata_dev.risk_cst_like_special;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.risk_cst_like_special AS --个性化特征 工商

SELECT  t.*

		,adr.reg_adr --户籍地址

		,phy.cty_cd --城市代码

		,case when coalesce(t.citycode,'')<>'' and coalesce(phy.cty_cd,'')<>'' and (t.citycode=phy.cty_cd or substr(phy.cnt_cd,1,4)=substr(t.citycode,1,4)) then 1 else 0 end as 户籍地与注册地城市是否相同

FROM    (

            SELECT  t.cst_id

                    ,t.date_now

                    ,t.label

                   ,t2.creditcode_all   --统一社会信用代码



				,t2.code

				,t2.apnt_start_dt  --2020年以后，首次贷款日期

				,t2.hpn_rsk_date  --出险日期

				,t2.他行机构数

				,t2.机构均贷款余额

				,t2.行内外总信贷授信_剔除房贷_车贷_抵押贷

				,t2.23年他行平均利率

				,t2.他行平均利率下降幅度

				,t2.2023年个人我行平均利率

				,t2.行内外循环贷用信率

				,t2.行内外信用保证类总信贷授信增长率

				,t2.续贷价格下降幅度

				,t2.注册资金_万元

				,t2.地域分布情况

				,t2.citycode

				,t2.经营年限_月

				,t2.经营年限_年

				,t2.全量风险贷款率

				,t2.近一年新发生风险贷款

				,t2.贷款余额

				,t2.风险贷款余额

				,t2.是否征信逾期

				,t2.age

                ,DATEDIFF(to_date(t.date_now, 'YYYYMMDD'), to_date(REPLACE(t3.esdate, '-', ''), 'YYYYMMDD'), 'mm') GS_ENT_reg_MON --工商-企业-基本信息-成立-时长_月数

            FROM    lab_bigdata_dev.risk_cst_like_sample t --最终样本表

            LEFT JOIN    lab_bigdata_dev.risk_cst_like t2 --惠众返回

            ON      t.cst_id = t2.cst_id

            LEFT JOIN    lab_bigdata_dev.ent_gs_only t3 --工商表唯一的社会信用代码

            ON      t2.creditcode_all = t3.socialcreditcode --社会信用代码

            AND     t3.dt >= '20220101'

        ) t

left join edw.dws_cst_bas_inf_dd adr --客户基本信息

on t.cst_id=adr.cst_id

and adr.dt='20240329'

left join (	SELECT  DISTINCT ful_adr

					 ,cty_cd

					 ,cnt_cd

			FROM    edw.dwd_phy_adr_inf_dd phy

			WHERE   phy.dt = '20240329'

			and LENGTH(ful_adr)>1

			AND     ( LENGTH(cty_cd)>1 or LENGTH(cnt_cd)>1 )

			) phy --物理地址

on adr.reg_adr =phy.ful_adr  --户籍地址

where (t.hpn_rsk_date is null or  t.hpn_rsk_date >= '20220101' )  --出险日期

;



SELECT count(*) FROM risk_cst_like_special;



SELECT count(*),COUNT(DISTINCT ful_adr) FROM

 (select distinct  ful_adr,cty_cd,cnt_cd from edw.dwd_phy_adr_inf_dd phy where phy.dt='20240329') phy --物理地址

on adr.reg_adr =phy.ful_adr  ;





CREATE TABLE IF NOT EXISTS lab_bigdata_dev.risk_cst_like_del_oldbad AS --20200101已结暴露的风险客户删除

select COUNT(*) from (

select DISTINCT t.cst_id

FROM    lab_bigdata_dev.risk_cst_like_sample t --最终样本表

left join (select  cst_id  ,min(hpn_rsk_date) hpn_rsk_date  --出险日期

			from adm_pub.ADM_RSK_APP_INTER_ALL

			where  dt='20240329'

			and ctr_start_dt>='20200101'

			group by cst_id

			)risk

 on  t.cst_id = risk.cst_id

 where   risk.hpn_rsk_date <'20220101'  --出险日期

 and risk.hpn_rsk_date >'19930101'

 )t

 ;





 DROP TABLE IF EXISTS lab_bigdata_dev.risk_cst_like_del_oldbad;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.risk_cst_like_del_oldbad AS --20200101已结暴露的风险客户删除

select t.*

FROM    lab_bigdata_dev.risk_cst_like_sample t --最终样本表

where cst_id not in

 (

		select DISTINCT t.cst_id

		FROM    lab_bigdata_dev.risk_cst_like_sample t --最终样本表

		left join (select  cst_id  ,min(hpn_rsk_date) hpn_rsk_date  --出险日期

					from adm_pub.ADM_RSK_APP_INTER_ALL

					where  dt='20240329'

					and ctr_start_dt>='20200101'

					group by cst_id

					)risk

		 on  t.cst_id = risk.cst_id

		 where   risk.hpn_rsk_date <'20220101'  --出险日期

		 and risk.hpn_rsk_date >'19930101'

 )



 ;



 SELECT count(*) FROM risk_cst_like_special;





 DROP TABLE IF EXISTS lab_bigdata_dev.risk_cst_like_special;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.risk_cst_like_special AS --个性化特征 工商

SELECT  t.*

		,adr.reg_adr --户籍地址

		,phy.cty_cd --城市代码

		,case when coalesce(t.citycode,'')<>'' and coalesce(phy.cty_cd,'')<>'' and (t.citycode=phy.cty_cd or substr(phy.cnt_cd,1,4)=substr(t.citycode,1,4)) then 1 else 0 end as 户籍地与注册地城市是否相同

FROM    (

            SELECT  t.cst_id

                    ,t.date_now

                    ,t.label

                   ,t2.creditcode_all   --统一社会信用代码



				,t2.code

				,t2.apnt_start_dt  --2020年以后，首次贷款日期

				,t2.hpn_rsk_date  --出险日期

				,t2.他行机构数

				,t2.机构均贷款余额

				,t2.行内外总信贷授信_剔除房贷_车贷_抵押贷

				,t2.23年他行平均利率

				,t2.他行平均利率下降幅度

				,t2.2023年个人我行平均利率

				,t2.行内外循环贷用信率

				,t2.行内外信用保证类总信贷授信增长率

				,t2.续贷价格下降幅度

				,t2.注册资金_万元

				,t2.地域分布情况

				,t2.citycode

				,t2.经营年限_月

				,t2.经营年限_年

				,t2.全量风险贷款率

				,t2.近一年新发生风险贷款

				,t2.贷款余额

				,t2.风险贷款余额

				,t2.是否征信逾期

				,t2.age

                ,DATEDIFF(to_date(t.date_now, 'YYYYMMDD'), to_date(REPLACE(t3.esdate, '-', ''), 'YYYYMMDD'), 'mm') GS_ENT_reg_MON --工商-企业-基本信息-成立-时长_月数

            FROM    lab_bigdata_dev.risk_cst_like_del_oldbad t --最终样本表

            LEFT JOIN    lab_bigdata_dev.risk_cst_like t2 --惠众返回

            ON      t.cst_id = t2.cst_id

            LEFT JOIN    lab_bigdata_dev.ent_gs_only t3 --工商表唯一的社会信用代码

            ON      t2.creditcode_all = t3.socialcreditcode --社会信用代码

            AND     t3.dt >= '20220101'

        ) t

left join edw.dws_cst_bas_inf_dd adr --客户基本信息

on t.cst_id=adr.cst_id

and adr.dt='20240329'

left join (	SELECT  DISTINCT ful_adr

					 ,cty_cd

					 ,cnt_cd

			FROM    edw.dwd_phy_adr_inf_dd phy

			WHERE   phy.dt = '20240329'

			and LENGTH(ful_adr)>1

			AND     ( LENGTH(cty_cd)>1 or LENGTH(cnt_cd)>1 )

			) phy --物理地址

on adr.reg_adr =phy.ful_adr  --户籍地址



;



 SELECT count(*) FROM risk_cst_like_special;



 SELECT * FROM risk_cst_like_special
**指标库08app以后.sql
drop table if exists lab_bigdata_dev.credit_card_trx_di_risk_cst_like_20240330;

create table lab_bigdata_dev.credit_card_trx_di_risk_cst_like_20240330 as

SELECT cst.cst_id,cst.date_now,

	trx.*

	 FROM lab_bigdata_dev.risk_cst_like_sample  cst

LEFT JOIN

	edw.dim_bus_crd_cr_crd_inf_dd crd   ---信用卡卡片信息

	on cst.cst_id=crd.cst_id

	and crd.dt=(select max(date_now) from lab_bigdata_dev.risk_cst_like_sample)       ---20210204

	and crd.isu_dt <= date_now

LEFT JOIN

	edw.dwd_bus_crd_cr_crd_trx_dtl_di trx       ----信用卡客户交易流水,trx_dt交易日期,回溯时间天数间隔，trx_typ_cd交易类型代码，wdw_rvs_ind撤销冲正标志

	on crd.cr_crd_card_nbr=trx.cr_crd_card_nbr   ----信用卡卡号

	and trx.dt>=(select TO_CHAR(dateadd(to_date(min(date_now),'yyyymmdd'),-720,'dd'),'yyyymmdd') from lab_bigdata_dev.risk_cst_like_sample)

	and trx.dt<=(select TO_CHAR(to_date(max(date_now),'yyyymmdd'),'yyyymmdd') from lab_bigdata_dev.risk_cst_like_sample)

	and trx.dt<=cst.date_now

;



------###---###---###end





------###---###---###start0005

---###---### ---信用卡m1: lab_bigdata_dev.tbl1_credit_card_feature_risk_cst_like_20240330

---###---### -----------------------------------------信用卡交易流水特征

drop table if exists lab_bigdata_dev.tbl1_credit_card_feature_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl1_credit_card_feature_risk_cst_like_20240330 as

SELECT

cst_id

,date_now

--------------3个月

--境外

,sum(CASE WHEN trx_typ_cd='1184' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN trx_amt ELSE 0 END ) AS inb_creditcard_abroad_consume_amt_90d

,sum(CASE WHEN trx_typ_cd='1184' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN 1 ELSE 0 END ) AS inb_creditcard_abroad_consume_cnt_90d

-- 工作日

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1' and trx_typ_cd<>'1050' AND weekday(TO_DATE(trx_dt,'yyyymmdd')) in (0,1,2,3,4) AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN trx_amt ELSE 0 END ) AS inb_creditcard_weekday_consume_amt_90d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1' and trx_typ_cd<>'1050' AND weekday(TO_DATE(trx_dt,'yyyymmdd')) in (0,1,2,3,4) AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN 1 ELSE 0 END ) AS inb_creditcard_weekday_consume_cnt_90d

-- 周末

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND weekday(TO_DATE(trx_dt,'yyyymmdd')) in (5,6) AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN trx_amt ELSE 0 END ) AS inb_creditcard_weekend_consume_amt_90d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND weekday(TO_DATE(trx_dt,'yyyymmdd')) in (5,6) AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN 1 ELSE 0 END ) AS inb_creditcard_weekend_consume_cnt_90d

-- 凌晨

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND substr(trx_tm,1,2) BETWEEN '00' AND '05' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN trx_amt ELSE 0 END ) AS inb_creditcard_earmor_consume_amt_90d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND substr(trx_tm,1,2) BETWEEN '00' AND '05' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN 1 ELSE 0 END ) AS inb_creditcard_earmor_consume_cnt_90d

-- 餐饮

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('5812','5813','5814') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN trx_amt ELSE 0 END ) AS inb_creditcard_repast_consume_amt_90d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('5812','5813','5814') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN 1 ELSE 0 END ) AS inb_creditcard_repast_consume_cnt_90d

-- 超市

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('5311','5411','5331','5399') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN trx_amt ELSE 0 END ) AS inb_creditcard_market_consume_amt_90d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('5311','5411','5331','5399') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN 1 ELSE 0 END ) AS inb_creditcard_market_consume_cnt_90d

-- 汽车

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('4784','5013','5511','5521','5531','5532','5533','5541','5542','5561','5571','5592','7523','7531','7534','7535','7538','7542','7549') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN trx_amt ELSE 0 END ) AS inb_creditcard_car_consume_amt_90d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('4784','5013','5511','5521','5531','5532','5533','5541','5542','5561','5571','5592','7523','7531','7534','7535','7538','7542','7549') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN 1 ELSE 0 END ) AS inb_creditcard_car_consume_cnt_90d

-- -- 旅游

-- ,sum(CASE WHEN (substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('4112','4111','4121','4411','4511','4582','4722','4733','5962','7011','7012') OR substr(mch_typ,1,2) IN ('30','31','32','35','37')) AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN trx_amt ELSE 0 END ) AS inb_creditcard_travel_consume_amt_90d

-- ,sum(CASE WHEN (substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('4112','4111','4121','4411','4511','4582','4722','4733','5962','7011','7012') OR substr(mch_typ,1,2) IN ('30','31','32','35','37')) AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN 1 ELSE 0 END ) AS inb_creditcard_travel_consume_cnt_90d

-- 游戏

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('7032','7033','7297','7298','7829','7832','7841','7911','7922','7929','7932','7933','7941','7991','7992','7993','7994','7995','7996','7997','7998','7999') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN trx_amt ELSE 0 END ) AS inb_creditcard_game_consume_amt_90d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('7032','7033','7297','7298','7829','7832','7841','7911','7922','7929','7932','7933','7941','7991','7992','7993','7994','7995','7996','7997','7998','7999') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN 1 ELSE 0 END ) AS inb_creditcard_game_consume_cnt_90d

-- 建材装潢

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('5211','5231','5251','5261','5712','5713','5714','5718','5719','8912') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN trx_amt ELSE 0 END ) AS inb_creditcard_decorate_consume_amt_90d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('5211','5231','5251','5261','5712','5713','5714','5718','5719','8912') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN 1 ELSE 0 END ) AS inb_creditcard_decorate_consume_cnt_90d

-- 总金额

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN trx_amt ELSE 0 END ) AS inb_creditcard_all_consume_amt_90d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN 1 ELSE 0 END ) AS inb_creditcard_all_consume_cnt_90d

-- 航旅出游

,sum(CASE WHEN (substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('4112','4111','4121','4411','4511','4582','4722','4733','5962','7011','7012') OR substr(mch_typ,1,2) IN ('30','31','32','35','37')) AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN trx_amt ELSE 0 END ) AS inb_creditcard_plane_consume_amt_90d

,sum(CASE WHEN (substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('4112','4111','4121','4411','4511','4582','4722','4733','5962','7011','7012') OR substr(mch_typ,1,2) IN ('30','31','32','35','37')) AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN 1 ELSE 0 END ) AS inb_creditcard_plane_consume_cnt_90d

-- 月均

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN trx_amt ELSE 0 END )/3 AS inb_creditcard_all_consume_mean_amt_month_90d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN 1 ELSE 0 END )/3 AS inb_creditcard_all_consume_mean_cnt_month_90d

-- 笔均消费金额

,avg(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN trx_amt ELSE 0 END ) AS inb_creditcard_all_comsum_mean_amt_90d

-- 最大消费金额

,max(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN trx_amt ELSE 0 END ) AS inb_creditcard_all_comsum_max_amt_90d

-- 消费超过1k

,sum(CASE WHEN trx_amt>=1000 AND substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN trx_amt ELSE 0 END ) AS inb_creditcard_all_comsum_amt_mt1k_amt_90d

,sum(CASE WHEN trx_amt>=1000 AND substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN 1 ELSE 0 END ) AS inb_creditcard_all_comsum_amt_mt1k_cnt_90d

-- 消费超过5k

,sum(CASE WHEN trx_amt>=5000 AND substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN trx_amt ELSE 0 END ) AS inb_creditcard_all_comsum_amt_mt5k_amt_90d

,sum(CASE WHEN trx_amt>=5000 AND substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN 1 ELSE 0 END ) AS inb_creditcard_all_comsum_amt_mt5k_cnt_90d

-- 消费场景数

,count(DISTINCT(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN mch_typ ELSE null END)) AS inb_creditcard_all_comsum_scene_cnt_90d

-- 存在消费的月数

,count(DISTINCT(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN substr(trx_dt,1,6) ELSE null END)) AS inb_creditcard_all_consume_month_cnt_90d

--------------6个月

-- 境外

,sum(CASE WHEN trx_typ_cd='1184' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN trx_amt ELSE 0 END ) AS inb_creditcard_abroad_consume_amt_180d

,sum(CASE WHEN trx_typ_cd='1184' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN 1 ELSE 0 END ) AS inb_creditcard_abroad_consume_cnt_180d

-- 工作日

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND weekday(TO_DATE(trx_dt,'yyyymmdd')) in (0,1,2,3,4) AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN trx_amt ELSE 0 END ) AS inb_creditcard_weekday_consume_amt_180d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND weekday(TO_DATE(trx_dt,'yyyymmdd')) in (0,1,2,3,4) AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN 1 ELSE 0 END ) AS inb_creditcard_weekday_consume_cnt_180d

-- 周末

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND weekday(TO_DATE(trx_dt,'yyyymmdd')) in (5,6) AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN trx_amt ELSE 0 END ) AS inb_creditcard_weekend_consume_amt_180d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND weekday(TO_DATE(trx_dt,'yyyymmdd')) in (5,6) AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN 1 ELSE 0 END ) AS inb_creditcard_weekend_consume_cnt_180d

-- 凌晨

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND substr(trx_tm,1,2) BETWEEN '00' AND '05' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN trx_amt ELSE 0 END ) AS inb_creditcard_earmor_consume_amt_180d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND substr(trx_tm,1,2) BETWEEN '00' AND '05' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN 1 ELSE 0 END ) AS inb_creditcard_earmor_consume_cnt_180d

-- 餐饮

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('5812','5813','5814') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN trx_amt ELSE 0 END ) AS inb_creditcard_repast_consume_amt_180d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('5812','5813','5814') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN 1 ELSE 0 END ) AS inb_creditcard_repast_consume_cnt_180d

-- 超市

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('5311','5411','5331','5399') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN trx_amt ELSE 0 END ) AS inb_creditcard_market_consume_amt_180d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('5311','5411','5331','5399') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN 1 ELSE 0 END ) AS inb_creditcard_market_consume_cnt_180d

-- 汽车

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('4784','5013','5511','5521','5531','5532','5533','5541','5542','5561','5571','5592','7523','7531','7534','7535','7538','7542','7549') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN trx_amt ELSE 0 END ) AS inb_creditcard_car_consume_amt_180d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('4784','5013','5511','5521','5531','5532','5533','5541','5542','5561','5571','5592','7523','7531','7534','7535','7538','7542','7549') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN 1 ELSE 0 END ) AS inb_creditcard_car_consume_cnt_180d

-- -- 旅游

-- ,sum(CASE WHEN (substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('4112','4111','4121','4411','4511','4582','4722','4733','5962','7011','7012') OR substr(mch_typ,1,2) IN ('30','31','32','35','37')) AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN trx_amt ELSE 0 END ) AS inb_creditcard_travel_consume_amt_180d

-- ,sum(CASE WHEN (substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('4112','4111','4121','4411','4511','4582','4722','4733','5962','7011','7012') OR substr(mch_typ,1,2) IN ('30','31','32','35','37')) AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN 1 ELSE 0 END ) AS inb_creditcard_travel_consume_cnt_180d

-- 游戏

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('7032','7033','7297','7298','7829','7832','7841','7911','7922','7929','7932','7933','7941','7991','7992','7993','7994','7995','7996','7997','7998','7999') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN trx_amt ELSE 0 END ) AS inb_creditcard_game_consume_amt_180d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('7032','7033','7297','7298','7829','7832','7841','7911','7922','7929','7932','7933','7941','7991','7992','7993','7994','7995','7996','7997','7998','7999') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN 1 ELSE 0 END ) AS inb_creditcard_game_consume_cnt_180d

-- 建材装潢

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('5211','5231','5251','5261','5712','5713','5714','5718','5719','8912') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN trx_amt ELSE 0 END ) AS inb_creditcard_decorate_consume_amt_180d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('5211','5231','5251','5261','5712','5713','5714','5718','5719','8912') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN 1 ELSE 0 END ) AS inb_creditcard_decorate_consume_cnt_180d

-- 总金额

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN trx_amt ELSE 0 END ) AS inb_creditcard_all_consume_amt_180d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN 1 ELSE 0 END ) AS inb_creditcard_all_consume_cnt_180d

-- --计算变异系数新增

,if(avg(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN trx_amt ELSE 0 END)=0,-999,std(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN trx_amt ELSE 0 END )/

avg(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN trx_amt ELSE 0 END)) AS inb_creditcard_all_consume_amt_cv_180d

-- 航旅出游

,sum(CASE WHEN (substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('4112','4111','4121','4411','4511','4582','4722','4733','5962','7011','7012') OR substr(mch_typ,1,2) IN ('30','31','32','35','37')) AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN trx_amt ELSE 0 END ) AS inb_creditcard_plane_consume_amt_180d

,sum(CASE WHEN (substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('4112','4111','4121','4411','4511','4582','4722','4733','5962','7011','7012') OR substr(mch_typ,1,2) IN ('30','31','32','35','37')) AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN 1 ELSE 0 END ) AS inb_creditcard_plane_consume_cnt_180d

-- 月均

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN trx_amt ELSE 0 END )/6 AS inb_creditcard_all_consume_mean_amt_month_180d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN 1 ELSE 0 END )/6 AS inb_creditcard_all_consume_mean_cnt_month_180d

-- 笔均消费金额

,avg(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN trx_amt ELSE 0 END ) AS inb_creditcard_all_comsum_mean_amt_180d

-- 最大消费金额

,max(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN trx_amt ELSE 0 END ) AS inb_creditcard_all_comsum_max_amt_180d

-- 消费超过1k

,sum(CASE WHEN trx_amt>=1000 AND substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN trx_amt ELSE 0 END ) AS inb_creditcard_all_comsum_amt_mt1k_amt_180d

,sum(CASE WHEN trx_amt>=1000 AND substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN 1 ELSE 0 END ) AS inb_creditcard_all_comsum_amt_mt1k_cnt_180d

-- 消费超过5k

,sum(CASE WHEN trx_amt>=5000 AND substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN trx_amt ELSE 0 END ) AS inb_creditcard_all_comsum_amt_mt5k_amt_180d

,sum(CASE WHEN trx_amt>=5000 AND substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN 1 ELSE 0 END ) AS inb_creditcard_all_comsum_amt_mt5k_cnt_180d

-- -- 消费场景数

,count(DISTINCT(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN mch_typ ELSE null END)) AS inb_creditcard_all_comsum_scene_cnt_180d

-- 存在消费的月数

,count(DISTINCT(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN substr(trx_dt,1,6) ELSE null END)) AS inb_creditcard_all_consume_month_cnt_180d



--------------12个月

,sum(CASE WHEN trx_typ_cd='1184' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN trx_amt ELSE 0 END ) AS inb_creditcard_abroad_consume_amt_360d

,sum(CASE WHEN trx_typ_cd='1184' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN 1 ELSE 0 END ) AS inb_creditcard_abroad_consume_cnt_360d

-- 工作日

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND weekday(TO_DATE(trx_dt,'yyyymmdd')) in (0,1,2,3,4) AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN trx_amt ELSE 0 END ) AS inb_creditcard_weekday_consume_amt_360d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND weekday(TO_DATE(trx_dt,'yyyymmdd')) in (0,1,2,3,4) AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN 1 ELSE 0 END ) AS inb_creditcard_weekday_consume_cnt_360d

-- 周末

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND weekday(TO_DATE(trx_dt,'yyyymmdd')) in (5,6) AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN trx_amt ELSE 0 END ) AS inb_creditcard_weekend_consume_amt_360d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND weekday(TO_DATE(trx_dt,'yyyymmdd')) in (5,6) AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN 1 ELSE 0 END ) AS inb_creditcard_weekend_consume_cnt_360d

-- 凌晨

,sum(CASE WHEN substr(trx_tm,1,2) BETWEEN '00' AND '05'  and substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050'  AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN trx_amt ELSE 0 END ) AS inb_creditcard_earmor_consume_amt_360d

,sum(CASE WHEN substr(trx_tm,1,2) BETWEEN '00' AND '05'  and substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050'  AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN 1 ELSE 0 END ) AS inb_creditcard_earmor_consume_cnt_360d

-- 餐饮

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1' and trx_typ_cd<>'1050' AND mch_typ IN ('5812','5813','5814') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN trx_amt ELSE 0 END ) AS inb_creditcard_repast_consume_amt_360d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1' and trx_typ_cd<>'1050' AND mch_typ IN ('5812','5813','5814') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN 1 ELSE 0 END ) AS inb_creditcard_repast_consume_cnt_360d

-- 超市

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('5311','5411','5331','5399') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN trx_amt ELSE 0 END ) AS inb_creditcard_market_consume_amt_360d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('5311','5411','5331','5399') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN 1 ELSE 0 END ) AS inb_creditcard_market_consume_cnt_360d

-- 汽车

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('4784','5013','5511','5521','5531','5532','5533','5541','5542','5561','5571','5592','7523','7531','7534','7535','7538','7542','7549') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN trx_amt ELSE 0 END ) AS inb_creditcard_car_consume_amt_360d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('4784','5013','5511','5521','5531','5532','5533','5541','5542','5561','5571','5592','7523','7531','7534','7535','7538','7542','7549') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN 1 ELSE 0 END ) AS inb_creditcard_car_consume_cnt_360d

-- -- 旅游

-- ,sum(CASE WHEN (substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('4112','4111','4121','4411','4511','4582','4722','4733','5962','7011','7012') OR substr(mch_typ,1,2) IN ('30','31','32','35','37')) AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN trx_amt ELSE 0 END ) AS inb_creditcard_travel_consume_amt_360d

-- ,sum(CASE WHEN (substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('4112','4111','4121','4411','4511','4582','4722','4733','5962','7011','7012') OR substr(mch_typ,1,2) IN ('30','31','32','35','37')) AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN 1 ELSE 0 END ) AS inb_creditcard_travel_consume_cnt_360d

-- 游戏

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('7032','7033','7297','7298','7829','7832','7841','7911','7922','7929','7932','7933','7941','7991','7992','7993','7994','7995','7996','7997','7998','7999') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN trx_amt ELSE 0 END ) AS inb_creditcard_game_consume_amt_360d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('7032','7033','7297','7298','7829','7832','7841','7911','7922','7929','7932','7933','7941','7991','7992','7993','7994','7995','7996','7997','7998','7999') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN 1 ELSE 0 END ) AS inb_creditcard_game_consume_cnt_360d

-- 建材装潢

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('5211','5231','5251','5261','5712','5713','5714','5718','5719','8912') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN trx_amt ELSE 0 END ) AS inb_creditcard_decorate_consume_amt_360d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('5211','5231','5251','5261','5712','5713','5714','5718','5719','8912') AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN 1 ELSE 0 END ) AS inb_creditcard_decorate_consume_cnt_360d

-- 总金额

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN trx_amt ELSE 0 END ) AS inb_creditcard_all_consume_amt_360d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN 1 ELSE 0 END ) AS inb_creditcard_all_consume_cnt_360d

-- 航旅出游

,sum(CASE WHEN (substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('4112','4111','4121','4411','4511','4582','4722','4733','5962','7011','7012') OR substr(mch_typ,1,2) IN ('30','31','32','35','37')) AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN trx_amt ELSE 0 END ) AS inb_creditcard_plane_consume_amt_360d

,sum(CASE WHEN (substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND mch_typ IN ('4112','4111','4121','4411','4511','4582','4722','4733','5962','7011','7012') OR substr(mch_typ,1,2) IN ('30','31','32','35','37')) AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN 1 ELSE 0 END ) AS inb_creditcard_plane_consume_cnt_360d

-- 月均

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN trx_amt ELSE 0 END )/12 AS inb_creditcard_all_consume_mean_amt_month_360d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN 1 ELSE 0 END )/12 AS inb_creditcard_all_consume_mean_cnt_month_360d

-- 笔均消费金额

,avg(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN trx_amt ELSE 0 END ) AS inb_creditcard_all_comsum_mean_amt_360d

-- 最大消费金额

,max(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN trx_amt ELSE 0 END ) AS inb_creditcard_all_comsum_max_amt_360d

-- 消费超过1k

,sum(CASE WHEN trx_amt>=1000 AND substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN trx_amt ELSE 0 END ) AS inb_creditcard_all_comsum_amt_mt1k_amt_360d

,sum(CASE WHEN trx_amt>=1000 AND substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN 1 ELSE 0 END ) AS inb_creditcard_all_comsum_amt_mt1k_cnt_360d

-- 消费超过5k

,sum(CASE WHEN trx_amt>=5000 AND substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN trx_amt ELSE 0 END ) AS inb_creditcard_all_comsum_amt_mt5k_amt_360d

,sum(CASE WHEN trx_amt>=5000 AND substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN 1 ELSE 0 END ) AS inb_creditcard_all_comsum_amt_mt5k_cnt_360d

-- 消费场景数

,count(DISTINCT(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN mch_typ ELSE null END)) AS inb_creditcard_all_comsum_scene_cnt_360d

-- 存在消费的月数

,count(DISTINCT(CASE WHEN substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN substr(trx_dt,1,6) ELSE null END)) AS inb_creditcard_all_consume_month_cnt_360d

from lab_bigdata_dev.credit_card_trx_di_risk_cst_like_20240330

group by cst_id,date_now

;





------###---###---###end





------###---###---###start0006

------###---###---### ---信用卡m2:lab_bigdata_dev.tbl2_credit_card_feature_risk_cst_like_20240330

------###---###---### --信用卡时间差类

drop table if exists lab_bigdata_dev.tbl2_credit_card_feature_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl2_credit_card_feature_risk_cst_like_20240330 as

SELECT cst_id

,date_now

,min(diff) AS inb_creditcard_all_comsum_mindiffdays_90d

,max(diff) AS inb_creditcard_all_comsum_maxdiffdays_90d

,avg(diff) AS inb_creditcard_all_comsum_meandiffdays_90d

from

(SELECT a1.cst_id,a1.date_now,a1.rownum1,a2.rownum2,DATEDIFF(TO_DATE(a1.trx_dt,'yyyymmdd'),TO_DATE(a2.trx_dt,'yyyymmdd'),'dd') AS diff

	FROM

	(SELECT t.*, ROW_NUMBER() OVER (partition BY cst_id ORDER BY trx_dt DESC) rownum1

		FROM

	(SELECT *

		FROM lab_bigdata_dev.credit_card_trx_di_risk_cst_like_20240330 WHERE

		substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 89)

	 as t) as a1

left join

	(SELECT t.*, ROW_NUMBER() OVER (partition BY cst_id ORDER BY trx_dt DESC) rownum2

		FROM

	(SELECT *

		FROM lab_bigdata_dev.credit_card_trx_di_risk_cst_like_20240330 WHERE

		substr(trx_typ_cd,1,1)='1'  and trx_typ_cd<>'1050' and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 89)

	 as t) as a2

ON a1.cst_id=a2.cst_id

AND a1.date_now=a2.date_now

AND a1.rownum1=a2.rownum2-1) as a

GROUP BY cst_id,date_now

;





------###---###---###end





------###---###---###start0007

------###---###---### --信用卡m3: lab_bigdata_dev.tbl3_credit_card_feature_risk_cst_like_20240330

drop table if exists lab_bigdata_dev.tbl3_credit_card_feature_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl3_credit_card_feature_risk_cst_like_20240330 as

SELECT cst_id

,date_now

,min(diff) AS inb_creditcard_all_comsum_mindiffdays_180d

,max(diff) AS inb_creditcard_all_comsum_maxdiffdays_180d

,avg(diff) AS inb_creditcard_all_comsum_meandiffdays_180d

from

(SELECT a1.cst_id,a1.date_now,a1.rownum1,a2.rownum2,DATEDIFF(TO_DATE(a1.trx_dt,'yyyymmdd'),TO_DATE(a2.trx_dt,'yyyymmdd'),'dd') AS diff

	FROM

	(SELECT t.*, ROW_NUMBER() OVER (partition BY cst_id ORDER BY trx_dt DESC) rownum1

		FROM

	(SELECT *

			FROM lab_bigdata_dev.credit_card_trx_di_risk_cst_like_20240330 WHERE

		substr(trx_typ_cd,1,1)='1' and trx_typ_cd<>'1050' and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 179)

	 as t) as a1

left join

	(SELECT t.*, ROW_NUMBER() OVER (partition BY cst_id ORDER BY trx_dt DESC) rownum2

		FROM

	(SELECT *

		FROM lab_bigdata_dev.credit_card_trx_di_risk_cst_like_20240330 WHERE

		substr(trx_typ_cd,1,1)='1' and trx_typ_cd<>'1050' and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 179)

	 as t) as a2

ON a1.cst_id=a2.cst_id

AND a1.date_now=a2.date_now

AND a1.rownum1=a2.rownum2-1) as a

GROUP BY cst_id,date_now

;





------###---###---###end





------###---###---###start0008

------###---###---###--信用卡m4: lab_bigdata_dev.tbl4_credit_card_feature_risk_cst_like_20240330

drop table if exists lab_bigdata_dev.tbl4_credit_card_feature_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl4_credit_card_feature_risk_cst_like_20240330 as

SELECT cst_id

,date_now

,min(diff) AS inb_creditcard_all_comsum_mindiffdays_360d

,max(diff) AS inb_creditcard_all_comsum_maxdiffdays_360d

,avg(diff) AS inb_creditcard_all_comsum_meandiffdays_360d

from

(SELECT a1.cst_id,a1.date_now,a1.rownum1,a2.rownum2,DATEDIFF(TO_DATE(a1.trx_dt,'yyyymmdd'),TO_DATE(a2.trx_dt,'yyyymmdd'),'dd') AS diff

	FROM

	(SELECT t.*, ROW_NUMBER() OVER (partition BY cst_id ORDER BY trx_dt DESC) rownum1

		FROM

	(SELECT *

		FROM lab_bigdata_dev.credit_card_trx_di_risk_cst_like_20240330 WHERE

		substr(trx_typ_cd,1,1)='1' and trx_typ_cd<>'1050' and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 359)

	 as t) as a1

left join

	(SELECT t.*, ROW_NUMBER() OVER (partition BY cst_id ORDER BY trx_dt DESC) rownum2

		FROM

	(SELECT *

		FROM lab_bigdata_dev.credit_card_trx_di_risk_cst_like_20240330

		WHERE substr(trx_typ_cd,1,1)='1' and trx_typ_cd<>'1050' and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 359)

	 as t) as a2

ON a1.cst_id=a2.cst_id

AND a1.date_now=a2.date_now

AND a1.rownum1=a2.rownum2-1) as a

GROUP BY cst_id,date_now

;





------###---###---###end





------###---###---###start0009

------###---###---### --信用卡m5: lab_bigdata_dev.tbl5_credit_card_feature_risk_cst_like_20240330

------###---###---### --信用卡上一次类

drop table if exists lab_bigdata_dev.tbl5_credit_card_feature_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl5_credit_card_feature_risk_cst_like_20240330 as

SELECT cst_id,date_now, DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') as inb_creditcard_last_consume_days

, trx_amt as inb_creditcard_last_consume_amt FROM

	(SELECT * FROM

		(SELECT t1.*, ROW_NUMBER() OVER (PARTITION BY cst_id ORDER BY trx_tm desc) AS rowno2 FROM

			(SELECT * FROM

					(SELECT A.*,

							ROW_NUMBER() OVER (PARTITION BY cst_id ORDER BY trx_dt desc) AS rowno1

							FROM lab_bigdata_dev.credit_card_trx_di_risk_cst_like_20240330 A

							WHERE date_now>trx_dt AND substr(trx_typ_cd,1,1)='1' and trx_typ_cd<>'1050') a

				WHERE rowno1=1

			) AS t1

		) as b WHERE rowno2=1

	)  as c

;





------###---###---###end





------###---###---###start0010

------###---###---### --信用卡m6: lab_bigdata_dev.tbl6_credit_card_feature_risk_cst_like_20240330

------###---###---### --信用卡环比类

drop table if exists lab_bigdata_dev.tbl6_credit_card_feature_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl6_credit_card_feature_risk_cst_like_20240330 as

SELECT

a.cst_id

,date_now

,(CASE WHEN inb_creditcard_all_consume_amt_180d-inb_creditcard_all_consume_amt_90d<>0 THEN

	inb_creditcard_all_consume_amt_90d*1.0/(

		inb_creditcard_all_consume_amt_180d-inb_creditcard_all_consume_amt_90d) ELSE -999 END) AS

inb_creditcard_all_comsum_amt_90d_chratio_180d

,(CASE WHEN inb_creditcard_all_consume_amt_360d-inb_creditcard_all_consume_amt_180d<>0 THEN

	inb_creditcard_all_consume_amt_180d*1.0/(

		inb_creditcard_all_consume_amt_360d-inb_creditcard_all_consume_amt_180d) ELSE -999 END) AS

inb_creditcard_all_comsum_amt_180d_chratio_360d

,(CASE WHEN inb_creditcard_all_consume_amt_720d-inb_creditcard_all_consume_amt_360d<>0 THEN

	inb_creditcard_all_consume_amt_360d*1.0/(

		inb_creditcard_all_consume_amt_720d-inb_creditcard_all_consume_amt_360d) ELSE -999 END) AS

inb_creditcard_all_comsum_amt_360d_chratio_720d

,(CASE WHEN inb_creditcard_all_consume_cnt_180d-inb_creditcard_all_consume_cnt_90d<>0 THEN

	inb_creditcard_all_consume_cnt_90d*1.0/(

		inb_creditcard_all_consume_cnt_180d-inb_creditcard_all_consume_cnt_90d) ELSE -999 END) AS

inb_creditcard_all_comsum_cnt_90d_chratio_180d

,(CASE WHEN inb_creditcard_all_consume_cnt_360d-inb_creditcard_all_consume_cnt_180d<>0 THEN

	inb_creditcard_all_consume_cnt_180d*1.0/(

		inb_creditcard_all_consume_cnt_360d-inb_creditcard_all_consume_cnt_180d) ELSE -999 END) AS

inb_creditcard_all_comsum_cnt_180d_chratio_360d

,(CASE WHEN inb_creditcard_all_consume_cnt_720d-inb_creditcard_all_consume_cnt_360d<>0 THEN

	inb_creditcard_all_consume_cnt_360d*1.0/(

		inb_creditcard_all_consume_cnt_720d-inb_creditcard_all_consume_cnt_360d) ELSE -999 END) AS

inb_creditcard_all_comsum_cnt_360d_chratio_720d

from

(SELECT

cst_id

,date_now

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1' and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 719 THEN trx_amt ELSE 0 END ) AS inb_creditcard_all_consume_amt_720d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1' and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 719 THEN 1 ELSE 0 END ) AS inb_creditcard_all_consume_cnt_720d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1' and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN trx_amt ELSE 0 END ) AS inb_creditcard_all_consume_amt_360d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1' and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 359 THEN 1 ELSE 0 END ) AS inb_creditcard_all_consume_cnt_360d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1' and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN trx_amt ELSE 0 END ) AS inb_creditcard_all_consume_amt_180d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1' and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 179 THEN 1 ELSE 0 END ) AS inb_creditcard_all_consume_cnt_180d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1' and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN trx_amt ELSE 0 END ) AS inb_creditcard_all_consume_amt_90d

,sum(CASE WHEN substr(trx_typ_cd,1,1)='1' and trx_typ_cd<>'1050' AND wdw_rvs_ind = 0 AND DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd')  BETWEEN 0 AND 89 THEN 1 ELSE 0 END ) AS inb_creditcard_all_consume_cnt_90d

from lab_bigdata_dev.credit_card_trx_di_risk_cst_like_20240330

group by cst_id,date_now) a

;





------###---###---###end





------###---###---###start0011

------###---###---###--信用卡m12: lab_bigdata_dev.tbl12_cash_credit_card_feature_risk_cst_like_20240330

---###---### ------------------------取现指标和预借费用----------------------

drop table if exists lab_bigdata_dev.tbl12_cash_credit_card_feature_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl12_cash_credit_card_feature_risk_cst_like_20240330 as

select *

--近180天内信用卡90日取现笔数的环比

--交易日期在统计时间维度内，撤销冲正标志为空wdw_rvs_ind，交易类型trx_typ_cd取现的笔数

,(CASE WHEN inb_creditcard_cnt_csh_180d-inb_creditcard_cnt_csh_90d<>0 THEN

	inb_creditcard_cnt_csh_90d*1.0/(

		inb_creditcard_cnt_csh_180d-inb_creditcard_cnt_csh_90d) ELSE -999 END) AS

inb_creditcard_cnt_cash_90d_chratio_180d

--近360天内信用卡180日取现笔数的环比

,(CASE WHEN inb_creditcard_cnt_csh_360d-inb_creditcard_cnt_csh_180d<>0 THEN

	inb_creditcard_cnt_csh_180d*1.0/(

		inb_creditcard_cnt_csh_360d-inb_creditcard_cnt_csh_180d) ELSE -999 END) AS

inb_creditcard_cnt_cash_180d_chratio_360d

--近720天内信用卡360日取现笔数的环比

,(CASE WHEN inb_creditcard_cnt_csh_720d-inb_creditcard_cnt_csh_360d<>0 THEN

	inb_creditcard_cnt_csh_360d*1.0/(

		inb_creditcard_cnt_csh_360d-inb_creditcard_cnt_csh_720d) ELSE -999 END) AS

inb_creditcard_cnt_cash_360d_chratio_720d

--近180天内信用卡90日取现金额的环比

,(CASE WHEN inb_creditcard_all_csh_amt_180d-inb_creditcard_all_csh_amt_90d<>0 THEN

	inb_creditcard_all_csh_amt_90d*1.0/(

		inb_creditcard_all_csh_amt_180d-inb_creditcard_all_csh_amt_90d) ELSE -999 END) AS

inb_creditcard_all_cash_amt_90d_chratio_180d

--近360天内信用卡180日取现金额的环比

,(CASE WHEN inb_creditcard_all_csh_amt_360d-inb_creditcard_all_csh_amt_180d<>0 THEN

	inb_creditcard_all_csh_amt_180d*1.0/(

		inb_creditcard_all_csh_amt_360d-inb_creditcard_all_csh_amt_180d) ELSE -999 END) AS

inb_creditcard_all_cash_amt_180d_chratio_360d

--近720天内信用卡360日取现金额的环比

,(CASE WHEN inb_creditcard_all_csh_amt_720d-inb_creditcard_all_csh_amt_360d<>0 THEN

	inb_creditcard_all_csh_amt_360d*1.0/(

		inb_creditcard_all_csh_amt_720d-inb_creditcard_all_csh_amt_360d) ELSE -999 END) AS

inb_creditcard_all_cash_amt_360d_chratio_720d

from

(

select cst_id,date_now

--过去3个月总取现金额，最大单笔取现金额，取现笔数，笔均取现金额 csh_ind 现转标志0--现金1--转账

--交易日期在统计时间维度内，撤销冲正标志为空wdw_rvs_ind，交易类型trx_typ_cd为取现的交易金额合计,

,sum(case when wdw_rvs_ind=0 and trx_typ_cd in ('2000','2010','2048','2050','2060','2090','2094','2100','2104','2110','2122','2123','2150','2154','2160','2180','2182','2184','2300','2310','2350','2360','2400','2404','2410','2422','2423','2450','2460','2480','2482','2484','8110','8112','8114','8116')

 and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 89 then  trx_amt else 0 end ) as inb_creditcard_all_csh_amt_90d

,max(case when wdw_rvs_ind=0 and trx_typ_cd in ('2000','2010','2048','2050','2060','2090','2094','2100','2104','2110','2122','2123','2150','2154','2160','2180','2182','2184','2300','2310','2350','2360','2400','2404','2410','2422','2423','2450','2460','2480','2482','2484','8110','8112','8114','8116')

 and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 89 then  trx_amt else 0 end) as inb_creditcard_max_csh_amt_90d

,sum(case when wdw_rvs_ind=0 and trx_typ_cd in ('2000','2010','2048','2050','2060','2090','2094','2100','2104','2110','2122','2123','2150','2154','2160','2180','2182','2184','2300','2310','2350','2360','2400','2404','2410','2422','2423','2450','2460','2480','2482','2484','8110','8112','8114','8116')

 and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 89  then  1 else 0 end) as inb_creditcard_cnt_csh_90d

,case when sum(case when wdw_rvs_ind=0 and trx_typ_cd in ('2000','2010','2048','2050','2060','2090','2094','2100','2104','2110','2122','2123','2150','2154','2160','2180','2182','2184','2300','2310','2350','2360','2400','2404','2410','2422','2423','2450','2460','2480','2482','2484','8110','8112','8114','8116')

 and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 89  then  1 else 0 end)<>0 then sum(case when wdw_rvs_ind=0 and trx_typ_cd in ('2000','2010','2048','2050','2060','2090','2094','2100','2104','2110','2122','2123','2150','2154','2160','2180','2182','2184','2300','2310','2350','2360','2400','2404','2410','2422','2423','2450','2460','2480','2482','2484','8110','8112','8114','8116')

 and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 89  then  trx_amt else 0 end)/sum(case when wdw_rvs_ind=0 and trx_typ_cd in ('2000','2010','2048','2050','2060','2090','2094','2100','2104','2110','2122','2123','2150','2154','2160','2180','2182','2184','2300','2310','2350','2360','2400','2404','2410','2422','2423','2450','2460','2480','2482','2484','8110','8112','8114','8116')

 and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 89  then  1 else 0 end)  else -999 end as inb_creditcard_mean_csh_amt_90d

--过去6个月总取现金额，最大单笔取现金额，取现笔数，笔均取现金额

,sum(case when wdw_rvs_ind=0 and trx_typ_cd in ('2000','2010','2048','2050','2060','2090','2094','2100','2104','2110','2122','2123','2150','2154','2160','2180','2182','2184','2300','2310','2350','2360','2400','2404','2410','2422','2423','2450','2460','2480','2482','2484','8110','8112','8114','8116')

 and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 179 then  trx_amt else 0 end ) as inb_creditcard_all_csh_amt_180d

,max(case when wdw_rvs_ind=0 and trx_typ_cd in ('2000','2010','2048','2050','2060','2090','2094','2100','2104','2110','2122','2123','2150','2154','2160','2180','2182','2184','2300','2310','2350','2360','2400','2404','2410','2422','2423','2450','2460','2480','2482','2484','8110','8112','8114','8116')

 and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 179 then  trx_amt else 0 end) as inb_creditcard_max_csh_amt_180d

,sum(case when wdw_rvs_ind=0 and trx_typ_cd in ('2000','2010','2048','2050','2060','2090','2094','2100','2104','2110','2122','2123','2150','2154','2160','2180','2182','2184','2300','2310','2350','2360','2400','2404','2410','2422','2423','2450','2460','2480','2482','2484','8110','8112','8114','8116')

 and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 179  then  1 else 0 end) as inb_creditcard_cnt_csh_180d

,case when sum(case when wdw_rvs_ind=0 and trx_typ_cd in ('2000','2010','2048','2050','2060','2090','2094','2100','2104','2110','2122','2123','2150','2154','2160','2180','2182','2184','2300','2310','2350','2360','2400','2404','2410','2422','2423','2450','2460','2480','2482','2484','8110','8112','8114','8116')

 and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 179  then  1 else 0 end)<>0 then sum(case when wdw_rvs_ind=0 and trx_typ_cd in ('2000','2010','2048','2050','2060','2090','2094','2100','2104','2110','2122','2123','2150','2154','2160','2180','2182','2184','2300','2310','2350','2360','2400','2404','2410','2422','2423','2450','2460','2480','2482','2484','8110','8112','8114','8116')

 and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 179  then  trx_amt else 0 end)/sum(case when wdw_rvs_ind=0 and trx_typ_cd in ('2000','2010','2048','2050','2060','2090','2094','2100','2104','2110','2122','2123','2150','2154','2160','2180','2182','2184','2300','2310','2350','2360','2400','2404','2410','2422','2423','2450','2460','2480','2482','2484','8110','8112','8114','8116')

 and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 179  then  1 else 0 end) else -999 end as inb_creditcard_mean_csh_amt_180d

--过去12个月总取现金额，最大单笔取现金额，取现笔数，笔均取现金额

,sum(case when wdw_rvs_ind=0 and trx_typ_cd in ('2000','2010','2048','2050','2060','2090','2094','2100','2104','2110','2122','2123','2150','2154','2160','2180','2182','2184','2300','2310','2350','2360','2400','2404','2410','2422','2423','2450','2460','2480','2482','2484','8110','8112','8114','8116')

 and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 359 then  trx_amt else 0 end ) as inb_creditcard_all_csh_amt_360d

,max(case when wdw_rvs_ind=0 and trx_typ_cd in ('2000','2010','2048','2050','2060','2090','2094','2100','2104','2110','2122','2123','2150','2154','2160','2180','2182','2184','2300','2310','2350','2360','2400','2404','2410','2422','2423','2450','2460','2480','2482','2484','8110','8112','8114','8116')

 and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 359 then  trx_amt else 0 end) as inb_creditcard_max_csh_amt_360d

,sum(case when wdw_rvs_ind=0 and trx_typ_cd in ('2000','2010','2048','2050','2060','2090','2094','2100','2104','2110','2122','2123','2150','2154','2160','2180','2182','2184','2300','2310','2350','2360','2400','2404','2410','2422','2423','2450','2460','2480','2482','2484','8110','8112','8114','8116')

 and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 359  then  1 else 0 end) as inb_creditcard_cnt_csh_360d

,case when sum(case when wdw_rvs_ind=0 and trx_typ_cd in ('2000','2010','2048','2050','2060','2090','2094','2100','2104','2110','2122','2123','2150','2154','2160','2180','2182','2184','2300','2310','2350','2360','2400','2404','2410','2422','2423','2450','2460','2480','2482','2484','8110','8112','8114','8116')

 and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 359  then  1 else 0 end)<>0 then sum(case when wdw_rvs_ind=0 and trx_typ_cd in ('2000','2010','2048','2050','2060','2090','2094','2100','2104','2110','2122','2123','2150','2154','2160','2180','2182','2184','2300','2310','2350','2360','2400','2404','2410','2422','2423','2450','2460','2480','2482','2484','8110','8112','8114','8116')

 and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 359  then  trx_amt else 0 end)/sum(case when wdw_rvs_ind=0 and trx_typ_cd in ('2000','2010','2048','2050','2060','2090','2094','2100','2104','2110','2122','2123','2150','2154','2160','2180','2182','2184','2300','2310','2350','2360','2400','2404','2410','2422','2423','2450','2460','2480','2482','2484','8110','8112','8114','8116')

 and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 359  then  1 else 0 end) else -999 end as inb_creditcard_mean_csh_amt_360d

--过去720天总取现金额，取现笔数

,sum(case when wdw_rvs_ind=0 and trx_typ_cd in ('2000','2010','2048','2050','2060','2090','2094','2100','2104','2110','2122','2123','2150','2154','2160','2180','2182','2184','2300','2310','2350','2360','2400','2404','2410','2422','2423','2450','2460','2480','2482','2484','8110','8112','8114','8116')

 and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 719 then  trx_amt else 0 end ) as inb_creditcard_all_csh_amt_720d

,sum(case when wdw_rvs_ind=0 and trx_typ_cd in ('2000','2010','2048','2050','2060','2090','2094','2100','2104','2110','2122','2123','2150','2154','2160','2180','2182','2184','2300','2310','2350','2360','2400','2404','2410','2422','2423','2450','2460','2480','2482','2484','8110','8112','8114','8116')

 and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 719  then  1 else 0 end) as inb_creditcard_cnt_csh_720d

--近一年信用卡存在预借现金的月数

,count(distinct(case when trx_typ_dscr like '%预借现金%' and trx_typ_dscr!='预借现金费用' and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 359  then substr(trx_dt,1,6) else null end)) as inb_creditcard_yjcash_month_cnt_360d

from lab_bigdata_dev.credit_card_trx_di_risk_cst_like_20240330    -----lab_bigdata_dev.credit_card_dtl_di_risk_cst_like_20240330

group by cst_id,date_now) a

;





------###---###---###end





------###---###---###start0012

------###---###---###--信用卡m13: lab_bigdata_dev.tbl13_cash_credit_card_feature_risk_cst_like_20240330

------###---###---###---------------信用卡取现时间差类-------------------

drop table if exists lab_bigdata_dev.tbl13_cash_credit_card_feature_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl13_cash_credit_card_feature_risk_cst_like_20240330 as

SELECT cst_id,date_now

--过去12个月两笔取现间隔最小天数

,min(diff) AS inb_creditcard_all_cash_mindiffdays_360d

--过去12个月两笔取现间隔最大天数

,max(diff) AS inb_creditcard_all_cash_maxdiffdays_360d

from

(SELECT a1.cst_id,a1.date_now,a1.rownum1,a2.rownum2,DATEDIFF(TO_DATE(a1.trx_dt,'yyyymmdd'),TO_DATE(a2.trx_dt,'yyyymmdd'),'dd') AS diff

	FROM

	(SELECT t.*, ROW_NUMBER() OVER (partition BY cst_id,date_now ORDER BY trx_dt DESC) rownum1

		FROM

	(SELECT *

		FROM lab_bigdata_dev.credit_card_trx_di_risk_cst_like_20240330

		--lab_bigdata_dev.credit_card_dtl_di_risk_cst_like_20240330

		WHERE

		wdw_rvs_ind=0 and trx_typ_cd in ('2000','2010','2048','2050','2060','2090','2094','2100','2104','2110','2122','2123','2150','2154','2160','2180','2182','2184','2300','2310','2350','2360','2400','2404','2410','2422','2423','2450','2460','2480','2482','2484','8110','8112','8114','8116')

		and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 359)

	 as t) as a1

left join

	(SELECT t.*, ROW_NUMBER() OVER (partition BY cst_id,date_now ORDER BY trx_dt DESC) rownum2

		FROM

	(SELECT *

		FROM lab_bigdata_dev.credit_card_trx_di_risk_cst_like_20240330

		-------lab_bigdata_dev.credit_card_dtl_di_risk_cst_like_20240330

		WHERE wdw_rvs_ind=0 and trx_typ_cd in ('2000','2010','2048','2050','2060','2090','2094','2100','2104','2110','2122','2123','2150','2154','2160','2180','2182','2184','2300','2310','2350','2360','2400','2404','2410','2422','2423','2450','2460','2480','2482','2484','8110','8112','8114','8116')

		 and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 359)

	 as t) as a2

ON a1.cst_id=a2.cst_id

AND a1.date_now=a2.date_now

AND a1.rownum1=a2.rownum2-1) as a

GROUP BY cst_id,date_now

;





------###---###---###end





------###---###---###start0013

------###---###---###--信用卡m14:  lab_bigdata_dev.tbl14_cash_recnt_credit_card_feature_risk_cst_like_20240330

------###---###---### ------------信用卡取现最近类---------------------------

drop table if exists lab_bigdata_dev.tbl14_cash_recnt_credit_card_feature_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl14_cash_recnt_credit_card_feature_risk_cst_like_20240330 as

SELECT cst_id,date_now,

--最近一次取现距今天数

DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') as inb_creditcard_last_cash_days

--最近一次取现金额

,trx_amt as inb_creditcard_last_cash_amt FROM

	(SELECT * FROM

		(SELECT t1.*, ROW_NUMBER() OVER (PARTITION BY cst_id,date_now ORDER BY trx_tm desc) AS rowno2 FROM

			(SELECT a.* FROM

					(SELECT *,

							ROW_NUMBER() OVER (PARTITION BY cst_id,date_now ORDER BY trx_dt desc) AS rowno1

							FROM lab_bigdata_dev.credit_card_trx_di_risk_cst_like_20240330

							WHERE date_now>trx_dt AND wdw_rvs_ind=0 and trx_typ_cd in ('2000','2010','2048','2050','2060','2090','2094','2100','2104','2110','2122','2123','2150','2154','2160','2180','2182','2184','2300','2310','2350','2360','2400','2404','2410','2422','2423','2450','2460','2480','2482','2484','8110','8112','8114','8116')

							) a

				WHERE rowno1=1

			) AS t1

		) as b WHERE rowno2=1

	)  as c

;





------###---###---###end





------###---###---###start0014

------###---###---###-----------------------------------------明细表-----------------------------

drop table if exists lab_bigdata_dev.credit_card_act_inf_risk_cst_like_20240330;

create table lab_bigdata_dev.credit_card_act_inf_risk_cst_like_20240330 as

SELECT cst.cst_id,cst.date_now,act.dt,act.cr_crd_act_id,

	`(cst_id|lgp_id|date_now|label|cst_type|pd_30d|pd_60d|pd_90d|cst_nm|bil_adr2|bil_adr|dt|cr_crd_act_id)?+.+`

	 FROM lab_bigdata_dev.risk_cst_like_sample  cst

LEFT JOIN

	edw.dim_bus_crd_cr_crd_inf_dd crd   ---信用卡卡片信息

	on cst.cst_id=crd.cst_id

	and crd.dt=(select max(date_now) from lab_bigdata_dev.risk_cst_like_sample)   -----20210204

	and crd.isu_dt <= cst.date_now

LEFT JOIN

	edw.dim_bus_crd_cr_crd_act_inf_dd act       ----信用卡账户信息,opn_dt开户日期,act_sts_cd账户状态代码，act_sts_dt账户状态日期，wrt_off_ind核销标志，crd_lmt信用额度，bal余额

	--edw.dws_bus_crd_cr_crd_act_inf_dd  act

	on crd.cr_crd_act_id=act.cr_crd_act_id   ----信用卡账号

	and act.dt in (select distinct date_now from lab_bigdata_dev.risk_cst_like_sample)



;





------###---###---###end





------###---###---###start0015

------###---###---### --信用卡m7: lab_bigdata_dev.tbl7_credit_card_feature_risk_cst_like_20240330

------###---###---###----------------------------计算指标：信用卡数、账龄---------------------------

drop table if exists lab_bigdata_dev.tbl7_credit_card_feature_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl7_credit_card_feature_risk_cst_like_20240330 as

select cst_id,date_now

---已激活未销户信用卡数,A:未激活,Q:销户申请，card_sts_cd !='Q'  ,act_sts_cd账户状态代码C:销户

,count(distinct(case when date_now=dt and card_sts_cd not in ('A','Q') and act_sts_cd!='C'  then cr_crd_card_nbr else null end )) as inb_creditcard_active_cnt_card

---信用卡最大账龄:最早发卡日期距今月份数,isu_dt发卡日期，开户日期opn_dt

,max(case when card_sts_cd not in ('A','Q') and act_sts_cd!='C' and date_now>=isu_dt then DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(opn_dt,'yyyymmdd'), 'mm') else 0 end ) as inb_creditcard_max_mob

---信用卡最小账龄:最近发卡日期距今月份数

,min(case when card_sts_cd not in ('A','Q') and act_sts_cd!='C' and date_now>=isu_dt then DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(opn_dt,'yyyymmdd'), 'mm') else 0 end) as inb_creditcard_min_mob

from lab_bigdata_dev.credit_card_act_inf_risk_cst_like_20240330

group by cst_id,date_now

;





------###---###---###end





------###---###---###start0016

------###---###---### --信用卡m8: lab_bigdata_dev.tbl8_bil_credit_card_feature_risk_cst_like_20240330

------###---###---### ----计算信用卡当前指标.注意dt的使用,late_bil_deal_day:最近一期帐单处理日，账单处理日都是月底

drop table if exists lab_bigdata_dev.tbl8_bil_credit_card_feature_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl8_bil_credit_card_feature_risk_cst_like_20240330 as

SELECT cst_id,date_now

---未销户信用卡总额度，如何界定未销户？card_sts_cd卡片状态码,crd_lmt 信用额度,act_sts_dt账户状态日期,last_rpay_dt和late_bil_deal_day日期先后？

,sum(case when date_now=dt and card_sts_cd not in ('A','Q') and act_sts_cd!='C'  then crd_lmt else 0 end ) as  inb_creditcard_all_crd_lmt

---信用卡平均当前额度使用率:bal余额，ovdr_bal透支余额

,avg(case when date_now=dt and card_sts_cd not in ('A','Q') and act_sts_cd!='C'  and  crd_lmt!=0 then ovdr_bal/crd_lmt else 0 end ) as  inb_creditcard_mean_crd_lmt_utl

---信用卡当前最大额度使用率

,max(case when date_now=dt and card_sts_cd not in ('A','Q') and act_sts_cd!='C' and  crd_lmt!=0 then ovdr_bal/crd_lmt else 0 end ) as inb_creditcard_max_crd_lmt_utl

---信用卡当前最小额度使用率

,min(case when date_now=dt and card_sts_cd not in ('A','Q') and act_sts_cd!='C'  and  crd_lmt!=0 then ovdr_bal/crd_lmt else 0 end ) as inb_creditcard_min_crd_lmt_utl

--信用卡当前额度使用率>75%的账户数

,count(DISTINCT(case when date_now=dt and card_sts_cd not in ('A','Q') and act_sts_cd!='C'  and crd_lmt!=0  and crd_lmt is not null and (ovdr_bal/crd_lmt)>0.75 then cr_crd_act_id else null end  )) as inb_creditcard_crd_lmt_utl_over75_act

--信用卡当前分期剩余未还本金余额instl_rmn_not_paid_prcp_bal

,sum(case when date_now=dt and card_sts_cd not in ('A','Q') and act_sts_cd!='C'  then instl_rmn_not_paid_prcp_bal else 0 end)as inb_creditcard_instl_not_paid_amt

FROM lab_bigdata_dev.credit_card_act_inf_risk_cst_like_20240330

group by cst_id,date_now

;





------###---###---###end



------###---###---###start0017

------###---###---### --------------------------信用卡账单明细表join---------------------------------------------

drop table if exists lab_bigdata_dev.credit_card_bil_risk_cst_like_20240330;

create table lab_bigdata_dev.credit_card_bil_risk_cst_like_20240330 as

SELECT cst.cst_id,cst.date_now,

bil.cr_crd_act_id

,bil.dt,bil.ovd_amt,

`(cst_id|lgp_id|date_now|label|cst_type|pd_30d|pd_60d|pd_90d|cst_nm|bil_adr|dt|cr_crd_act_id|ovd_amt)?+.+`

	FROM lab_bigdata_dev.risk_cst_like_sample  cst

LEFT JOIN

	edw.dws_bus_crd_cr_crd_act_inf_dd  crd   --信用卡账户信息汇总

	on cst.cst_id=crd.cst_id

	and crd.dt = (select max(date_now) from lab_bigdata_dev.risk_cst_like_sample)

	and crd.opn_dt <= cst.date_now

LEFT JOIN

	edw.dwd_bus_crd_cr_crd_bil_inf_di    bil   ----信用卡账单信息,明细表，每个月30更新,此表没有授信额度和透支额度，

	on crd.cr_crd_act_id=bil.cr_crd_act_id   ----信用卡账号

	and bil.dt>=(select TO_CHAR(dateadd(to_date(min(date_now),'yyyymmdd'),-720,'dd'),'yyyymmdd') from lab_bigdata_dev.risk_cst_like_sample)

	and bil.dt<=(select TO_CHAR(to_date(max(date_now),'yyyymmdd'),'yyyymmdd') from lab_bigdata_dev.risk_cst_like_sample)

	and bil.dt<=cst.date_now

	and bil.bil_day is not null

;







------###---###---###end





------###---###---###start0018

------###---###---### --信用卡m9: lab_bigdata_dev.tbl9_bil_credit_card_feature_risk_cst_like_20240330

------###---###---###-------------------------------信用卡账单平均额度使用率指标-----------------------------------------

drop table if exists lab_bigdata_dev.tbl9_bil_credit_card_feature_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl9_bil_credit_card_feature_risk_cst_like_20240330 as

select cst_id,date_now

---bal为负表示当前余额有结余，不为负表示信用卡余额透支。账单金额就是期末余额

--信用卡前3期账单平均额度使用率：三期总使用额度/三期总授信额度,bil_mon账单月数:372,373....,bil_day账单日:30,bal为负？crd_lmt为0时，bal为负，ovdr_bal为0.三个指标值一样

,if(sum(case when  rownum1<=3 then crd_lmt else 0 end)=0,-999,sum(case when rownum1<=3 and end_tm_bal >0 then end_tm_bal else 0 end)/sum(case when rownum1<=3 then crd_lmt else 0 end)) as inb_creditcard_mean_crd_lmt_ult_3m

--信用卡前6期账单平均额度使用率

,if(sum(case when  rownum1<=6 then crd_lmt else 0 end)=0,-999,sum(case when rownum1<=6 and end_tm_bal >0 then end_tm_bal else 0 end)/sum(case when rownum1<=6 then crd_lmt else 0 end)) as inb_creditcard_mean_crd_lmt_ult_6m

--信用卡前12期账单平均额度使用率

,if(sum(case when  rownum1<=12 then crd_lmt else 0 end)=0,-999,sum(case when rownum1<=12 and end_tm_bal >0 then end_tm_bal else 0 end)/sum(case when rownum1<=12 then crd_lmt else 0 end)) as inb_creditcard_mean_crd_lmt_ult_12m

from

(select *,ROW_NUMBER() OVER (partition BY cst_id,date_now ORDER BY dt desc) rownum1

from lab_bigdata_dev.credit_card_bil_risk_cst_like_20240330

where date_now>=dt) a

group by cst_id,date_now

;





------###---###---###end





------###---###---###start0019

------###---###---### --信用卡m10: lab_bigdata_dev.tbl10_bil_credit_card_feature_risk_cst_like_20240330

------###---###---### -------不同时间维度指标--------------card_sts_cd ='-'时，环比分母全部为0，导致环比值全部为null

drop table if exists lab_bigdata_dev.tbl10_bil_credit_card_feature_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl10_bil_credit_card_feature_risk_cst_like_20240330 as

select cst_id,date_now

----修改：

,inb_creditcard_mean_bil_amt_6m

,inb_creditcard_rcv_intr_6m

--当月账单金额较近3个月账单金额均值环比90d_chratio_180d

,(CASE WHEN inb_creditcard_mean_bil_amt_3m<>0 then

	(inb_creditcard_mean_bil_amt_1m)*1.0/(inb_creditcard_mean_bil_amt_3m) ELSE -999 END) AS inb_creditcard_mean_bil_amt_1m_chratio_3m

--当月账单金额较近6个月账单金额均值环比

,(CASE WHEN inb_creditcard_mean_bil_amt_6m<>0 THEN

	(inb_creditcard_mean_bil_amt_1m)*1.0/(inb_creditcard_mean_bil_amt_6m) ELSE -999 END) AS inb_creditcard_mean_bil_amt_1m_chratio_6m

--当月单金额较近12个月账单金额均值环比

,(CASE WHEN inb_creditcard_mean_bil_amt_12m<>0 THEN

	(inb_creditcard_mean_bil_amt_1m)*1.0/(inb_creditcard_mean_bil_amt_12m) ELSE -999 END) AS inb_creditcard_mean_bil_amt_1m_chratio_12m

--近3个月账单金额均值较前3个月账单金额均值环比

,(CASE WHEN inb_creditcard_mean_bil_amt_3m_6m<>0 THEN (inb_creditcard_mean_bil_amt_3m)*1.0/(

		inb_creditcard_mean_bil_amt_3m_6m) ELSE -999 END) AS inb_creditcard_mean_bil_amt_3m_chratio_6m

--近3个月账单金额均值较前9个月账单金额均值环比

,(CASE WHEN inb_creditcard_mean_bil_amt_3m_12m<>0 THEN (inb_creditcard_mean_bil_amt_3m)*1.0/(

		inb_creditcard_mean_bil_amt_3m_12m) ELSE -999 END) AS inb_creditcard_mean_bil_amt_3m_chratio_12m



from

(

select cst_id,date_now

--近6月信用卡平均账单金额.卡片正常时最近一期账单金额:late_bil_amt,全部为0，late_bil_deal_day。end_tm_bal期末余额，为负时溢缴款，替换为0

,avg(case when late_main_card_sts_cd not in ('A','Q') and act_sts_cd!='C' and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(dt,'yyyymmdd'), 'MM') BETWEEN 0 AND 5 and end_tm_bal>=0 then end_tm_bal else 0 end ) as inb_creditcard_mean_bil_amt_6m

--近6月信用卡应付利息金额:rcv_intr应收利息

,sum(case when late_main_card_sts_cd not in ('A','Q') and act_sts_cd!='C' and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(dt,'yyyymmdd'), 'MM') BETWEEN 0 AND 5 then rcv_intr else 0 end ) as inb_creditcard_rcv_intr_6m

---当月账单金额dt

,avg(case when late_main_card_sts_cd !='A' and act_sts_cd!='C' and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(dt,'yyyymmdd'), 'MM') =0 and end_tm_bal>=0 then end_tm_bal else 0 end) as inb_creditcard_mean_bil_amt_1m

--近3个月账单金额均值

,avg(case when late_main_card_sts_cd not in ('A','Q') and act_sts_cd!='C' and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(dt,'yyyymmdd'), 'MM') BETWEEN 0 AND 2 and end_tm_bal>=0 then end_tm_bal else 0 end ) as inb_creditcard_mean_bil_amt_3m

--前3个月账单金额均值：3个月的前3个月

,avg(case when late_main_card_sts_cd not in ('A','Q') and act_sts_cd!='C' and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(dt,'yyyymmdd'), 'MM') BETWEEN 3 AND 5 and end_tm_bal>=0 then end_tm_bal else 0 end ) as inb_creditcard_mean_bil_amt_3m_6m

--前9个月账单金额均值：3个月的前9个月

,avg(case when late_main_card_sts_cd not in ('A','Q') and act_sts_cd!='C' and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(dt,'yyyymmdd'), 'MM') BETWEEN 3 AND 11 and end_tm_bal>=0 then end_tm_bal else 0 end ) as inb_creditcard_mean_bil_amt_3m_12m

--近12个月账单金额均值

,avg(case when late_main_card_sts_cd not in ('A','Q') and act_sts_cd!='C' and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 359 and end_tm_bal>=0 then end_tm_bal else 0 end) as inb_creditcard_mean_bil_amt_12m



from lab_bigdata_dev.credit_card_bil_risk_cst_like_20240330

where date_now>=dt

group by cst_id,date_now

) a

;





------###---###---###end





------###---###---###start0020

------20231107修改：未入模，暂不跑

------###---###---###--信用卡m11: lab_bigdata_dev.tbl11_tmp_lmt_credit_card_feature_risk_cst_like_20240330

------###---###---###--最近一次临时调额申请距今天数。tmp_lmt 临时额度，tmp_lmt_nvld_dt 临时额度失效日期，tmp_lmt_eft_dt 临时额度生效日期，没有申请时间。得到值全部为空：因------###---###---###为tmp_lmt_eft_dt要么为空要么为&lsquo;18991231&rsquo;

-- drop table if exists lab_bigdata_dev.tbl11_tmp_lmt_credit_card_feature_risk_cst_like_20240330;

-- create table lab_bigdata_dev.tbl11_tmp_lmt_credit_card_feature_risk_cst_like_20240330 as

-- SELECT cst_id,date_now

-- ,case when tmp_lmt_eft_dt!='18991231' then  DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(tmp_lmt_eft_dt ,'yyyymmdd'), 'dd') else -999 end as inb_creditcard_last_tmp_lmt_nvld_days

-- ,tmp_lmt as inb_creditcard_last_tmp_lmt FROM

-- (SELECT * FROM

		-- --(SELECT t1.*, ROW_NUMBER() OVER (PARTITION BY cst_id ORDER BY trx_tm desc) AS rowno2 FROM

			-- (SELECT * FROM

					-- (SELECT *,

							-- ROW_NUMBER() OVER (PARTITION BY cst_id,date_now ORDER BY tmp_lmt_eft_dt desc) AS rowno1

							-- FROM lab_bigdata_dev.credit_card_bil_risk_cst_like_20240330

							-- WHERE date_now>=dt) a

				-- WHERE rowno1=1

			-- ) AS t1

		-- --) as b WHERE rowno2=1

	-- )  as c

-- ;





------###---###---###end





------###---###---###start0021

---###---### ---------------------------信用卡分期类指标-------------------------

------###---###---###-------------------- 信用卡分期明细表（用样本表和明细表join）

drop table if exists lab_bigdata_dev.credit_card_instl_dtl_risk_cst_like_20240330;

create table lab_bigdata_dev.credit_card_instl_dtl_risk_cst_like_20240330 as

SELECT cst.cst_id,cst.date_now

,crd.cr_crd_act_id

,crd.cr_crd_card_nbr,

	 `(cst_id|lgp_id|date_now|label|cst_type|pd_30d|pd_60d|pd_90d|cst_nm|cr_crd_act_id|cr_crd_card_nbr|adr|dt)?+.+`

	 FROM

	lab_bigdata_dev.risk_cst_like_sample  cst

LEFT JOIN

	edw.dim_bus_crd_cr_crd_inf_dd crd   ---信用卡卡片信息，客户号，卡号和账号都有，有产生日期，到期日

	on cst.cst_id=crd.cst_id

	and crd.dt=(select max(date_now) from lab_bigdata_dev.risk_cst_like_sample)  -----20210204

	and crd.isu_dt <= cst.date_now

LEFT JOIN

	edw.dwd_bus_crd_cr_crd_instl_dtl_dd  trx      ----信用卡分期明细,trx_dt交易日期,回溯时间天数间隔，trx_typ交易类型代码，wdw_rvs_ind撤销冲正标志

	on crd.cr_crd_card_nbr=trx.cr_crd_card_nbr   ----信用卡卡号

	and crd.cr_crd_act_id=trx.cr_crd_act_id   ----信用卡账号

	and trx.dt =(select max(date_now) from lab_bigdata_dev.risk_cst_like_sample)

	and trx.rcd_dt<=cst.date_now

;





------###---###---###end





------###---###---###start0022

------###---###---### --信用卡m15:  lab_bigdata_dev.tbl15_instl_credit_card_feature_risk_cst_like_20240330

drop table if exists lab_bigdata_dev.tbl15_instl_credit_card_feature_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl15_instl_credit_card_feature_risk_cst_like_20240330 as

select *

---过去3个月分期金额较上一周期环比

,(CASE WHEN inb_creditcard_all_instl_amt_180d-inb_creditcard_all_instl_amt_90d<>0 THEN

	inb_creditcard_all_instl_amt_90d*1.0/(

		inb_creditcard_all_instl_amt_180d-inb_creditcard_all_instl_amt_90d) ELSE -999 END) AS  inb_creditcard_all_instl_amt_90_chratio_180d

---过去6个月分期金额较上一周期环比

,(CASE WHEN inb_creditcard_all_instl_amt_360d-inb_creditcard_all_instl_amt_180d<>0 THEN

	inb_creditcard_all_instl_amt_180d*1.0/(

		inb_creditcard_all_instl_amt_360d-inb_creditcard_all_instl_amt_180d) ELSE -999 END) AS  inb_creditcard_all_instl_amt_180_chratio_360d

from

(select cst_id,date_now

---过去3个月分期总金额,分期笔数,最大单笔分期金额,分期期数平均值,tot_instl_mon总分期月数|tot_pd_amt总产品金额|csm_dt消费日期|rcd_dt记录日期，tot_pd_amt/tot_instl_mon=last_mon_instl_amrt_prcp_amt.

---mon_amrt_instl_pmt_amt每月摊销分期付款金额；last_instl_amrt_dt上次分期摊消日期，instl_amrt_trm已分期摊消期数.last_mon_instl_amrt_prcp_amt上月分期摊消本金金额 last_instl_amrt_dt

--信用卡分期金额，根据mpur，客户名下贷记卡记录日期在统计时间维度内，分期付款状态instl_pmt_sts不为E错误终止/F退货终止，交易类型为M邮购分期的总产品金额本金总金额

--信用卡分期笔数,根据mpur，客户名下贷记卡记录日期在统计时间维度内，分期付款状态不为E错误终止/F退货终止的分期记录笔数

,sum(case when instl_pmt_sts not in ('E','F') and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(rcd_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 89 then tot_pd_amt else 0 end ) as inb_creditcard_all_instl_amt_90d

,sum(case when instl_pmt_sts not in ('E','F') and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(rcd_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 89 and instl_pmt_seq_nbr is not null then 1 else 0 end ) as inb_creditcard_all_instl_seq_90d

,max(case when instl_pmt_sts not in ('E','F') and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(rcd_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 89 then tot_pd_amt else 0 end ) as inb_creditcard_max_instl_amt_90d

,avg(case when instl_pmt_sts not in ('E','F') and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(rcd_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 89 then instl_amrt_trm else 0 end) as inb_creditcard_mean_instl_seq_90d

--过去6个月分期总金额,分期笔数,最大单笔分期金额,分期期数平均值

,sum(case when instl_pmt_sts not in ('E','F') and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(rcd_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 179 then tot_pd_amt else 0 end ) as inb_creditcard_all_instl_amt_180d

,sum(case when instl_pmt_sts not in ('E','F') and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(rcd_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 179 and instl_pmt_seq_nbr is not null then 1 else 0 end ) as inb_creditcard_all_instl_seq_180d

,max(case when instl_pmt_sts not in ('E','F') and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(rcd_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 179 then tot_pd_amt else 0 end ) as inb_creditcard_max_instl_amt_180d

,avg(case when instl_pmt_sts not in ('E','F') and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(rcd_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 179 then instl_amrt_trm else 0 end ) as inb_creditcard_mean_instl_seq_180d

---过去12个月分期总金额,分期笔数,最大单笔分期金额,分期期数平均值

,sum(case when instl_pmt_sts not in ('E','F') and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(rcd_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 359 then tot_pd_amt else 0 end ) as inb_creditcard_all_instl_amt_360d

,sum(case when instl_pmt_sts not in ('E','F') and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(rcd_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 359 and instl_pmt_seq_nbr is not null then 1 else 0 end ) as inb_creditcard_all_instl_seq_360d

,max(case when instl_pmt_sts not in ('E','F') and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(rcd_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 359 then tot_pd_amt else 0 end ) as inb_creditcard_max_instl_amt_360d

,avg(case when instl_pmt_sts not in ('E','F') and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(rcd_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 89 then instl_amrt_trm else 0 end ) as inb_creditcard_mean_instl_seq_360d

--2年内历史分期总笔数,信用卡历史平均单笔分期本金金额,信用卡历史分期成本总和

,sum(case when instl_pmt_sts not in ('E','F') and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(rcd_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 719 and instl_pmt_seq_nbr is not null then 1 else 0 end) as inb_creditcard_all_instl_seq_720d

,avg(case when instl_pmt_sts not in ('E','F') and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(rcd_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 719 then tot_pd_amt else 0 end ) as inb_creditcard_mean_instl_amt_720d

,sum(case when instl_pmt_sts not in ('E','F') and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(rcd_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 719 then  (last_mon_instl_amrt_intr_amt+last_mon_instl_amrt_fee_amt) else 0 end ) as inb_creditcard_all_instl_cst_amt_720d

from lab_bigdata_dev.credit_card_instl_dtl_risk_cst_like_20240330

group by cst_id,date_now

)a

;





------###---###---###end





------###---###---###start0023

------###---###---###--信用卡m16: lab_bigdata_dev.tbl16_instl_credit_card_feature_risk_cst_like_20240330

------###---###---###--信用卡最近一次分期距今天数，最近一次分期金额

drop table if exists lab_bigdata_dev.tbl16_instl_credit_card_feature_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl16_instl_credit_card_feature_risk_cst_like_20240330 as

SELECT cst_id,date_now

,DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(rcd_dt,'yyyymmdd'), 'dd') as inb_creditcard_latest_instl_days

,tot_pd_amt as inb_creditcard_latest_instl_amt

--,last_mon_instl_amrt_prcp_amt as inb_creditcard_latest_instl_amt

FROM

		(SELECT a.* FROM

				(SELECT *,

				       ROW_NUMBER() OVER (PARTITION BY cst_id,date_now ORDER BY rcd_dt desc) AS rowno1

						-- ROW_NUMBER() OVER (PARTITION BY cst_id,date_now ORDER BY last_instl_amrt_dt desc) AS rowno1

						FROM lab_bigdata_dev.credit_card_instl_dtl_risk_cst_like_20240330

						WHERE date_now>=rcd_dt and instl_pmt_sts not in ('E','F')

						) a

			WHERE rowno1=1

		) AS b

;





------###---###---###end





------###---###---###start0024

------###---###---### --信用卡m17: lab_bigdata_dev.tbl17_instl_credit_card_feature_risk_cst_like_20240330

------###---###---### -----信用卡首笔账单分期金额 tot_pd_amt

drop table if exists lab_bigdata_dev.tbl17_instl_credit_card_feature_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl17_instl_credit_card_feature_risk_cst_like_20240330 as

select cst_id,date_now

,tot_pd_amt as inb_creditcard_frst_instl_amt

from(

	select a.* from

	(select *,

	ROW_NUMBER() OVER (PARTITION BY cst_id,date_now ORDER BY rcd_dt) AS rowno1

	from lab_bigdata_dev.credit_card_instl_dtl_risk_cst_like_20240330

	where date_now>=rcd_dt and instl_pmt_sts not in ('E','F'))a

	where rowno1=1

 )

;





------###---###---###end





---### ------###---###---###start0025

---### ---###---### -------------------- 信用卡交易累计积分表（用样本表和明细表join）----------------------

---### drop table if exists lab_bigdata_dev.credit_card_pnt_nbr_risk_cst_like_20240330;

---###

		---### create table lab_bigdata_dev.credit_card_pnt_nbr_risk_cst_like_20240330 as

---### SELECT cst.cst_id,cst.date_now,

	   ---### `(cst_id|date_now|label|cst_type|pd_30d|pd_60d|pd_90d|cst_nm)?+.+`

	 ---### FROM lab_bigdata_dev.risk_cst_like_sample  cst

---### LEFT JOIN

	---### edw.dwd_bus_cmpn_pnt_trx_dtl_di  trx ----积分交易明细，客户号，积分客户号

	---### on cst.cst_id=trx.cst_id  ---客户号

	---### and trx.dt>=(select TO_CHAR(dateadd(to_date(min(date_now),'yyyymmdd'),-360,'dd'),'yyyymmdd') from lab_bigdata_dev.risk_cst_like_sample)

	---### and trx.dt<=(select TO_CHAR(to_date(max(date_now),'yyyymmdd'),'yyyymmdd') from lab_bigdata_dev.risk_cst_like_sample)

	---### and trx.dt<=cst.date_now

---### ;

---###

---###

---### ------###---###---###end





---### ------###---###---###start0026

---### ---###---### --信用卡m18: lab_bigdata_dev.tbl18_pnt_nbr_credit_card_feature_risk_cst_like_20240330

---### ------###---###---###---近一年信用卡累计积分  edw.crds_ptlog，card_nbr ---卡号，point--积分，inp_date--交易日期

---### ------###---###---###---edw.dwd_bus_cmpn_pnt_trx_dtl_di 积分交易明细表，pnt_nbr_amt积分数额

---### drop table if exists lab_bigdata_dev.tbl18_pnt_nbr_credit_card_feature_risk_cst_like_20240330;

---###

		---### create table lab_bigdata_dev.tbl18_pnt_nbr_credit_card_feature_risk_cst_like_20240330 as

---### select  cst_id,date_now

---### ,sum(case when pnt_typ_cd = '0001'  ----积分类型

	---### and trx_typ_cd ='0003'    ---交易类型

	---### and rvs_ind = '0'    ----冲正标志

	---### and trx_sts_cd = '1'    ----交易状态码

	---### and length(COALESCE(pnt_rul_id, '1')) > 2

	---### and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 359 then pnt_nbr_amt else 0 end ) as inb_creditcard_all_point_360d

---### from lab_bigdata_dev.credit_card_pnt_nbr_risk_cst_like_20240330

---### group by cst_id,date_now

---### ;

---###

---###

---### ------###---###---###end





------###---###---###start0027

---###---### --信用卡m19: lab_bigdata_dev.tbl19_apl_credit_card_feature_risk_cst_like_20240330

---###---### -----------------------------信贷产品、信用卡申请指标-------------------------------------------------------------------------------

---###---### --增加申请指标，全量客户

drop table if exists  lab_bigdata_dev.tbl19_apl_credit_card_feature_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl19_apl_credit_card_feature_risk_cst_like_20240330 as

select

	a.date_now

	,a.cst_id

	,sum(case when datediff(to_date(a.date_now,'yyyymmdd'),to_date(t.hpn_dt,'yyyymmdd'),'dd') between 0 and 719 then 1 else 0 end) as inb_all_apl_cnt_720d   --近720天所有信贷业务申请次数

	,sum(case when datediff(to_date(a.date_now,'yyyymmdd'),to_date(t.hpn_dt,'yyyymmdd'),'dd') between 0 and 359 then 1 else 0 end) as inb_all_apl_cnt_360d   --近360天所有信贷业务申请次数

	,sum(case when datediff(to_date(a.date_now,'yyyymmdd'),to_date(t.hpn_dt,'yyyymmdd'),'dd') between 0 and 179 then 1 else 0 end) as inb_all_apl_cnt_180d   --近180天所有信贷业务申请次数

	,sum(case when datediff(to_date(a.date_now,'yyyymmdd'),to_date(t.hpn_dt,'yyyymmdd'),'dd') between 0 and  89 then 1 else 0 end) as inb_all_apl_cnt_90d    --近90天所有信贷业务申请次数

	,sum(case when pd_id like '2010502%' and datediff(to_date(a.date_now,'yyyymmdd'),to_date(t.hpn_dt,'yyyymmdd'),'dd') between 0 and 719 then 1 else 0 end) as inb_creditcard_apl_cnt_720d   --近720天信用卡申请次数

	,sum(case when pd_id like '2010502%' and datediff(to_date(a.date_now,'yyyymmdd'),to_date(t.hpn_dt,'yyyymmdd'),'dd') between 0 and 359 then 1 else 0 end) as inb_creditcard_apl_cnt_360d   --近360天信用卡申请次数

	,sum(case when pd_id like '2010502%' and datediff(to_date(a.date_now,'yyyymmdd'),to_date(t.hpn_dt,'yyyymmdd'),'dd') between 0 and 179 then 1 else 0 end) as inb_creditcard_apl_cnt_180d   --近180天信用卡申请次数

	,sum(case when pd_id like '2010502%' and datediff(to_date(a.date_now,'yyyymmdd'),to_date(t.hpn_dt,'yyyymmdd'),'dd') between 0 and  89 then 1 else 0 end) as inb_creditcard_apl_cnt_90d    --近90天信用卡申请次数

from lab_bigdata_dev.risk_cst_like_sample a

left join edw.dwd_bus_loan_apl_inf_dd t  --信贷业务申请信息表

on A.CST_ID=t.CST_ID

and t.dt=(select max(date_now) from lab_bigdata_dev.risk_cst_like_sample)

GROUP BY A.date_now, A.CST_ID

;





------###---###---###end





------###---###---###start0028

------###---###---### ---------------------------------关联人信用卡指标明细表join-----------------------------------------------

drop table if exists lab_bigdata_dev.credit_card_rel_risk_cst_like_20240330;

create table lab_bigdata_dev.credit_card_rel_risk_cst_like_20240330 as

SELECT cst.cst_id,crd.dt,

`(cst_nm|lgp_cd|cst_id|dt|label|cst_type|pd_30d|pd_60d|pd_90d)?+.+`

	 FROM

	lab_bigdata_dev.risk_cst_like_sample  cst

LEFT JOIN

	edw.dim_cst_rel_inf_dd  rel   --客户关联关系信息,cst_id

	on cst.cst_id=rel.cst_id

	and rel.dt=(select max(date_now) from lab_bigdata_dev.risk_cst_like_sample)    ----20210204

left join

	edw.dws_bus_crd_cr_crd_act_inf_dd  crd   --信用卡账户信息汇总,min(dt)=20131129

	on rel.rel_cst_id=crd.cst_id

	and crd.dt in (select distinct date_now from lab_bigdata_dev.risk_cst_like_sample)

	and crd.dt = cst.date_now

;





------###---###---###end





------###---###---###start0029

---###---### --信用卡m20: lab_bigdata_dev.tbl20_rel_credit_card_feature_risk_cst_like_20240330

---###---### -------------------------关联人信用卡账户数、额度等指标-------------------------------

drop table if exists lab_bigdata_dev.tbl20_rel_credit_card_feature_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl20_rel_credit_card_feature_risk_cst_like_20240330 as

select cst_id,date_now

--关联人本行总贷记卡账户数.一个客户有多个关联人，一个关联人有多个账户

,count(distinct(case when date_now=dt then cr_crd_act_id else null end)) as inb_creditcard_rel_all_act_cnt

--关联人本行平均贷记卡账户数.所有关联人的账户数/关联人数

,case when count(distinct(rel_cst_id))<>0 then count(distinct(case when date_now=dt then cr_crd_act_id else null end))/count(distinct(rel_cst_id))  else -999 end as inb_creditcard_rel_mean_act_cnt

--关联人本行总信用卡额度:当前已开户所有信用卡额度

,sum(case when opn_dt<=date_now then crd_lmt else 0 end ) as inb_creditcard_rel_all_crd_lmt

--关联人本行平均信用卡额度

,case when count(distinct(rel_cst_id))<>0 then sum(case when opn_dt<=date_now then crd_lmt else null end )/count(distinct(rel_cst_id)) else -999 end as inb_creditcard_rel_mean_crd_lmt

--关联人本行最大信用卡额度

,max(case when opn_dt<=date_now then crd_lmt else 0 end) as inb_creditcard_rel_max_crd_lmt

from lab_bigdata_dev.credit_card_rel_risk_cst_like_20240330

group by cst_id,date_now

;





------###---###---###end





------###---###---###start0030

------###---###---### ------------------------------关联人信用卡数：明细表join-----------------------------

drop table if exists lab_bigdata_dev.credit_card2_rel_risk_cst_like_20240330;

create table lab_bigdata_dev.credit_card2_rel_risk_cst_like_20240330 as

SELECT cst.cst_id,cst.date_now,

`(cst_nm|lgp_cd|cst_id|date_now|label|cst_type|pd_30d|pd_60d|pd_90d|dt)?+.+`

	 FROM

	lab_bigdata_dev.risk_cst_like_sample  cst

LEFT JOIN

	edw.dim_cst_rel_inf_dd  rel

	on cst.cst_id=rel.cst_id

	and rel.dt=(select max(date_now) from lab_bigdata_dev.risk_cst_like_sample)    -----20210204

left join

	edw.dim_bus_crd_cr_crd_inf_dd  crd     ---信用卡卡片信息，有客户号，信用卡卡号，发卡日期.min(dt)=20131129

	on rel.rel_cst_id=crd.cst_id

	and crd.dt in (select distinct date_now from lab_bigdata_dev.risk_cst_like_sample)

	and crd.dt = cst.date_now

;





------###---###---###end





------###---###---###start0031

------###---###---###--信用卡m21: lab_bigdata_dev.tbl21_rel_credit_card_feature_risk_cst_like_20240330

------###---###---###----------------------------关联人信用卡数指标--------------------------------

drop table if exists lab_bigdata_dev.tbl21_rel_credit_card_feature_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl21_rel_credit_card_feature_risk_cst_like_20240330 as

select cst_id,date_now

--关联人本行近6月新发信用卡数

,count(distinct(case when DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(isu_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 179 then cr_crd_card_nbr else null end )) as inb_creditcard_rel_all_crd_cnt_180d

from lab_bigdata_dev.credit_card2_rel_risk_cst_like_20240330

group by cst_id,date_now

;





------###---###---###end





------###---###---###start0032

------###---###---### ------------------------------关联人信用卡取现：明细表join-----------------------------

drop table if exists lab_bigdata_dev.credit_card3_rel_risk_cst_like_20240330;

create table lab_bigdata_dev.credit_card3_rel_risk_cst_like_20240330 as

SELECT cst.cst_id

,cst.date_now

,trx.cr_crd_act_id

,trx.cr_crd_card_nbr,

`(cst_nm|lgp_cd|lgp_id|cst_id|date_now|label|cst_type|pd_30d|pd_60d|pd_90d|dt|cr_crd_act_id|cr_crd_card_nbr)?+.+`

	 FROM

	lab_bigdata_dev.risk_cst_like_sample  cst

LEFT JOIN

	edw.dim_cst_rel_inf_dd  rel

	on cst.cst_id=rel.cst_id

	and rel.dt=(select max(date_now) from lab_bigdata_dev.risk_cst_like_sample)   ----20210204

LEFT JOIN

	edw.dim_bus_crd_cr_crd_inf_dd crd   ------信用卡卡片信息，客户号，卡号和账号都有

	on cst.cst_id=crd.cst_id

	and crd.dt =(select max(date_now) from lab_bigdata_dev.risk_cst_like_sample)

LEFT JOIN

	edw.dwd_bus_crd_cr_crd_trx_dtl_di trx       ----信用卡客户交易流水,trx_dt交易日期,回溯时间天数间隔，trx_typ_cd交易类型代码，wdw_rvs_ind撤销冲正标志

	on crd.cr_crd_card_nbr=trx.cr_crd_card_nbr   ----信用卡卡号

	and trx.dt>=(select TO_CHAR(dateadd(to_date(min(date_now),'yyyymmdd'),-720,'dd'),'yyyymmdd') from lab_bigdata_dev.risk_cst_like_sample)

	and trx.dt<=(select TO_CHAR(to_date(max(date_now),'yyyymmdd'),'yyyymmdd') from lab_bigdata_dev.risk_cst_like_sample)

	and trx.dt<=cst.date_now

;





------###---###---###end





------###---###---###start0033

------###---###---###--信用卡m22: lab_bigdata_dev.tbl22_rel_cash_credit_card_feature_risk_cst_like_20240330

---###---### ----------------------------关联人平均取现次数指标----------------

drop table if exists lab_bigdata_dev.tbl22_rel_cash_credit_card_feature_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl22_rel_cash_credit_card_feature_risk_cst_like_20240330 as

select cst_id,date_now

--关联人过去一年平均信用卡取现次数:总取现笔数/关联人数

,case when count(distinct(rel_cst_id))<>0 then sum(case when wdw_rvs_ind=0 and trx_typ_cd in ('2000','2010','2048','2050','2060','2090','2094','2100','2104','2110','2122','2123','2150','2154','2160','2180','2182','2184','2300','2310','2350','2360','2400','2404','2410','2422','2423','2450','2460','2480','2482','2484','8110','8112','8114','8116')

 and DATEDIFF(TO_DATE(date_now,'yyyymmdd'), TO_DATE(trx_dt,'yyyymmdd'), 'dd') BETWEEN 0 AND 179  then  1 else 0 end)/count(distinct(rel_cst_id)) else -999 end as inb_creditcard_rel_mean_cnt_csh_360d

from lab_bigdata_dev.credit_card3_rel_risk_cst_like_20240330

group by cst_id,date_now

;





------###---###---###end





------###---###---###start0034

------###---###---###----------信用卡日均样本表：客户信息+信用卡信息汇总

drop table if exists lab_bigdata_dev.cst_cc_sample_risk_cst_like_20240330;

create table  lab_bigdata_dev.cst_cc_sample_risk_cst_like_20240330 as

SELECT cst.cst_id,cst.date_now

,card.cr_crd_act_id	---信用卡账户

,card.late_main_card_card_nbr	---信用卡最新主卡卡号

,card.late_main_card_pd_cls_cd	---信用卡最新主卡产品种类代码

,card.late_main_card_sts_cd	---最新主卡状态代码

,card.act_sts_cd	---信用卡账户状态

,card.ovdr_bal	---透支余额

,card.instl_rmn_not_paid_prcp_bal	---分期剩余未还本金

,card.dt

---,`(cst_id|date_now|lgp_id|cst_nm)?+.+`

FROM lab_bigdata_dev.risk_cst_like_sample cst

LEFT JOIN

   edw.dws_bus_crd_cr_crd_act_inf_dd card

   ON  cst.cst_id=card.cst_id

	and card.dt >= (select to_char (dateadd(to_date(min(cst.date_now),'yyyymmdd'),-720,'dd'),'yyyymmdd') from lab_bigdata_dev.risk_cst_like_sample cst)

	and card.dt<=(select max (cst.date_now) from lab_bigdata_dev.risk_cst_like_sample cst)

;





------###---###---###end





------###---###---###start0035

------###---###---###--信用卡m23: lab_bigdata_dev.tbl23_daily_credit_card_feature_risk_cst_like_20240330

---###---### ----信用卡日均指标计算

------###---###---###-------------------CC_xx ---过去xx天信用卡月日均

drop table if exists lab_bigdata_dev.tbl23_daily_credit_card_feature_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl23_daily_credit_card_feature_risk_cst_like_20240330 as

SELECT

  t.cst_id, t.date_now

  ,sum(case when datediff( to_date(t.date_now,'yyyymmdd'), to_date(t.dt,'yyyymmdd'),'dd' )  between 0 and 29  THEN t.ovdr_bal+t.instl_rmn_not_paid_prcp_bal else 0 end)/30 as inb_creditcard_daily_mean_30d

  ,sum(case when datediff( to_date(t.date_now,'yyyymmdd'), to_date(t.dt,'yyyymmdd'),'dd' )  between 0 and 59  THEN t.ovdr_bal+t.instl_rmn_not_paid_prcp_bal else 0 end)/60 as inb_creditcard_daily_mean_60d

  ,sum(case when datediff( to_date(t.date_now,'yyyymmdd'), to_date(t.dt,'yyyymmdd'),'dd' )  between 0 and 89  THEN t.ovdr_bal+t.instl_rmn_not_paid_prcp_bal else 0 end)/90 as inb_creditcard_daily_mean_90d

  ,sum(case when datediff( to_date(t.date_now,'yyyymmdd'), to_date(t.dt,'yyyymmdd'),'dd' )  between 0 and 179 THEN t.ovdr_bal+t.instl_rmn_not_paid_prcp_bal else 0 end)/180 as inb_creditcard_daily_mean_180d

  ,sum(case when datediff( to_date(t.date_now,'yyyymmdd'), to_date(t.dt,'yyyymmdd'),'dd' )  between 0 and 359 THEN t.ovdr_bal+t.instl_rmn_not_paid_prcp_bal else 0 end)/360 as inb_creditcard_daily_mean_360d

  ,sum(case when datediff( to_date(t.date_now,'yyyymmdd'), to_date(t.dt,'yyyymmdd'),'dd' )  between 0 and 719 THEN t.ovdr_bal+t.instl_rmn_not_paid_prcp_bal else 0 end)/720 as inb_creditcard_daily_mean_720d

from lab_bigdata_dev.cst_cc_sample_risk_cst_like_20240330 t

GROUP BY t.cst_id, t.date_now

;





------###---###---###end





------###---###---###start0036

---### ---###---###-----------------------------------信用卡RFM指标-----------------------------------

---### ---###---###--03扫描全部流水表，样本--客户级别

drop table if exists lab_bigdata_dev.cr_crd_trx_dtl_cst_di_risk_cst_like_20240330;

create table  lab_bigdata_dev.cr_crd_trx_dtl_cst_di_risk_cst_like_20240330 as --

select a.cst_id,a.date_now

,t2.*

from lab_bigdata_dev.risk_cst_like_sample a --客户级别样本



left join edw.dws_bus_crd_cr_crd_act_inf_dd t1 --信用卡账户信息汇总

on a.cst_id=t1.cst_id

and t1.dt=(select max(date_now) from lab_bigdata_dev.risk_cst_like_sample)   ---- '20210204'



left join edw.dwd_bus_crd_cr_crd_trx_dtl_di t2 --信用卡客户交易流水

on t1.cr_crd_act_id=t2.cr_crd_act_id

and t2.dt<= (select max(date_now) from lab_bigdata_dev.risk_cst_like_sample)   ----'20210204'

and t2.dt<=a.date_now

order by a.cst_id,t2.cr_crd_act_id,t2.trx_dt,t2.trx_tm

;





------###---###---###end





---###---### -------------------------开始计算指标------------------------------

---###---### /*2.客户信用卡首笔支付交易日期	&quot;客户名下信用卡账户第一笔支付交易日期的最小值；若客户信用卡无支付交易，则为空；

---###---### 支付交易：消费、取现、转出、分期；

---###---### 不剔除撤销冲正交易；&quot;

---###---### 3.客户贷记卡首笔支付交易日期

---### ---###5.客户信用卡最近一次支付交易日期

---### ---###6.客户贷记卡最近一次支付交易日期

---### ---###7.客户信用卡最近一次消费交易日期 ：客户名下信用卡账户最近一笔消费交易日期的最小值；若客户信用卡无消费交易，则为空； TRX_TYP_CD >= '1000' AND ------###---###---###TRX_TYP_CD <= '1999'

---###---### 8.客户信用卡最近一次取现/转出交易日期 TRX_TYP_CD >= '2000' AND TRX_TYP_CD <= '2999'

---###---### 9.客户信用卡最近一次分期交易日期

---###---### 11.客户贷记卡交易近度

---###---### 12.客户信用卡交易近度

---###---### 13.客户信用卡消费交易近度 统计日期-客户信用卡最近一次消费交易日期；

---###---### 14.客户信用卡取现/转出交易近度 统计日期-客户信用卡最近一次取现/转出交易日期

---### ---###15.客户信用卡分期交易近度 统计日期-客户信用卡最近一次分期交易日期

---###---### */

------###---###---###start0037

drop table if exists lab_bigdata_dev.tbl25_rfm_credit_card_feature_risk_cst_like_20240330;  ------###---###---###用卡账户首笔支付交易日期

create table  lab_bigdata_dev.tbl25_rfm_credit_card_feature_risk_cst_like_20240330 as 	--信用卡账户首笔支付交易日期

select a.date_now

	,a.cst_id

	,min(a.trx_dt ) as cst_cc_fir_trx_dt --2.客户信用卡首笔支付交易日期

	,min(case when t1.late_main_card_pd_cls_cd in ('0001','0002','0003','0004','0005','0006','0007','0014','0015','0016','0017','0023','0025','0026','0027','0029'  --贷记卡码值

			,'0031','0032','0033','0034','0038','0039','0040','0041','0042','0043','0044','0045','0046','0047','0048','0049') then a.trx_dt end ) as cst_djk_fir_trx_dt --3.客户贷记卡首笔支付交易日期

	,max(a.trx_dt ) as cst_cc_recent_trx_dt --5.客户信用卡最近一次支付交易日期

	,max(case when t1.late_main_card_pd_cls_cd in ('0001','0002','0003','0004','0005','0006','0007','0014','0015','0016','0017','0023','0025','0026','0027','0029'  --贷记卡码值

			,'0031','0032','0033','0034','0038','0039','0040','0041','0042','0043','0044','0045','0046','0047','0048','0049') then a.trx_dt end ) as cst_djk_recent_trx_dt --6.客户贷记卡最近一次支付交易日期

	,max(case when a.TRX_TYP_CD >= '1000' AND a.TRX_TYP_CD <= '1999' AND a.TRX_TYP_CD <> '1050' then a.trx_dt end ) as cst_cc_csm_recent_trx_dt  --7.客户信用卡最近一次消费交易日期

	,max(case when a.TRX_TYP_CD >= '2000' AND a.TRX_TYP_CD <= '2999' then a.trx_dt end ) as cst_cc_csh_recent_trx_dt  --8.客户信用卡最近一次取现/转出交易日期

	,max(case when a.TRX_TYP_CD in ('8130' , '8130' , '8950' , '8952' , '8952' , '8954' , '8954' , '8956' , '8958' , '8958') then a.trx_dt end ) as cst_cc_instl_recent_trx_dt  --9.客户信用卡最近一次分期交易日期



	,CASE WHEN min(CASE WHEN t1.late_main_card_pd_cls_cd in ('0001','0002','0003','0004','0005','0006','0007','0014','0015','0016','0017','0023','0025','0026','0027','0029'  --贷记卡码值

			,'0031','0032','0033','0034','0038','0039','0040','0041','0042','0043','0044','0045','0046','0047','0048','0049')  AND a.trx_dt IS NOT NULL

						THEN DATEDIFF(TO_DATE(a.date_now, 'yyyymmdd'), TO_DATE(a.trx_dt, 'yyyymmdd'), 'dd') + 1 ELSE NULL END) IS NOT NULL

		  THEN min(CASE WHEN t1.late_main_card_pd_cls_cd in ('0001','0002','0003','0004','0005','0006','0007','0014','0015','0016','0017','0023','0025','0026','0027','0029'  --贷记卡码值

			,'0031','0032','0033','0034','0038','0039','0040','0041','0042','0043','0044','0045','0046','0047','0048','0049')  AND a.trx_dt IS NOT NULL

					   THEN DATEDIFF(TO_DATE(a.date_now, 'yyyymmdd'), TO_DATE(a.trx_dt, 'yyyymmdd'), 'dd') + 1 ELSE NULL END)

		  ELSE -999 END AS cst_djk_recent_to_now --11.客户贷记卡交易近度



	,CASE WHEN min(CASE WHEN  a.trx_dt IS NOT NULL

						THEN DATEDIFF(TO_DATE(a.date_now, 'yyyymmdd'), TO_DATE(a.trx_dt, 'yyyymmdd'), 'dd') + 1 ELSE NULL END) IS NOT NULL

		  THEN min(CASE WHEN a.trx_dt IS NOT NULL

					   THEN DATEDIFF(TO_DATE(a.date_now, 'yyyymmdd'), TO_DATE(a.trx_dt, 'yyyymmdd'), 'dd') + 1 ELSE NULL END)

		  ELSE -999 END AS  cst_cc_recent_to_now --12.客户信用卡交易近度





	,CASE WHEN min(CASE WHEN a.TRX_TYP_CD >= '1000' AND a.TRX_TYP_CD <= '1999' AND a.TRX_TYP_CD <> '1050' AND a.trx_dt IS NOT NULL

						THEN DATEDIFF(TO_DATE(a.date_now, 'yyyymmdd'), TO_DATE(a.trx_dt, 'yyyymmdd'), 'dd') + 1 ELSE NULL END) IS NOT NULL

		  THEN min(CASE WHEN a.TRX_TYP_CD >= '1000' AND a.TRX_TYP_CD <= '1999' AND a.TRX_TYP_CD <> '1050' AND a.trx_dt IS NOT NULL

					   THEN DATEDIFF(TO_DATE(a.date_now, 'yyyymmdd'), TO_DATE(a.trx_dt, 'yyyymmdd'), 'dd') + 1 ELSE NULL END)

		  ELSE -999 END AS  cst_cc_csm_recent_to_now  --13.客户信用卡消费交易近度





	,CASE WHEN min(CASE WHEN a.TRX_TYP_CD >= '2000' AND a.TRX_TYP_CD <= '2999' AND a.trx_dt IS NOT NULL

						THEN DATEDIFF(TO_DATE(a.date_now, 'yyyymmdd'), TO_DATE(a.trx_dt, 'yyyymmdd'), 'dd') + 1 ELSE NULL END) IS NOT NULL

		 THEN min(CASE WHEN a.TRX_TYP_CD >= '2000' AND a.TRX_TYP_CD <= '2999' AND a.trx_dt IS NOT NULL

					   THEN DATEDIFF(TO_DATE(a.date_now, 'yyyymmdd'), TO_DATE(a.trx_dt, 'yyyymmdd'), 'dd') + 1 ELSE NULL END)

		  ELSE -999 END AS  cst_cc_csh_recent_to_now  --14.客户信用卡取现/转出交易近度



	,CASE WHEN min(CASE WHEN a.TRX_TYP_CD in ('8130' , '8130' , '8950' , '8952' , '8952' , '8954' , '8954' , '8956' , '8958' , '8958') AND a.trx_dt IS NOT NULL

						THEN DATEDIFF(TO_DATE(a.date_now, 'yyyymmdd'), TO_DATE(a.trx_dt, 'yyyymmdd'), 'dd') + 1 ELSE NULL END) IS NOT NULL

		  THEN min(CASE WHEN a.TRX_TYP_CD in ('8130' , '8130' , '8950' , '8952' , '8952' , '8954' , '8954' , '8956' , '8958' , '8958') AND a.trx_dt IS NOT NULL

					   THEN DATEDIFF(TO_DATE(a.date_now, 'yyyymmdd'), TO_DATE(a.trx_dt, 'yyyymmdd'), 'dd') + 1 ELSE NULL END)

		  ELSE -999 END AS  cst_cc_instl_recent_to_now --15.客户信用卡分期交易近度



from lab_bigdata_dev.cr_crd_trx_dtl_cst_di_risk_cst_like_20240330 a --客户级别样本

left join edw.dws_bus_crd_cr_crd_act_inf_dd t1 --信用卡账户信息汇总

on a.cr_crd_act_id =t1.cr_crd_act_id

and t1.dt= (select max(date_now) from lab_bigdata_dev.risk_cst_like_sample)   ------'20210204'

where a.trx_dt<=a.date_now

and a.TRX_TYP_CD IN (

 --消费

 '1000' , '1000' , '1010' , '1010' , '1010' , '1010' , '1010' , '1010' , '1010' , '1010' , '1010' , '1010' , '1016' , '1016' , '1020' , '1020'

 ,'1030' , '1040' , '1110' , '1110' , '1112' , '1120' , '1120' , '1122' , '1123' , '1123' , '1180' , '1180' , '1184' , '1184'

 --消费人工

 , '8100' , '8104'

 --取现/转出

 ,'2000' , '2000' , '2000' , '2010' , '2010' , '2010'

 , '2010' , '2010' , '2010' , '2012' , '2012' , '2040' , '2042' , '2046' , '2046' , '2046' , '2048' , '2050' , '2050' , '2060' , '2060' , '2070' , '2070' , '2072' , '2072'

 , '2090' , '2092' , '2092' , '2094' , '2094' , '2098' , '2098' , '2100' , '2100' , '2104' , '2106' , '2106' , '2110' , '2110' , '2122' , '2123' , '2123' , '2140' , '2140'

 , '2142' , '2142' , '2144' , '2144' , '2150' , '2150' , '2154' , '2154' , '2160' , '2160' , '2170' , '2170' , '2172' , '2172' , '2174' , '2174' , '2180' , '2182' , '2182'

 , '2184' , '2300' , '2310' , '2312' , '2340' , '2342' , '2346' , '2350' , '2360' , '2370' , '2372' , '2398' , '2400' , '2404' , '2406' , '2410' , '2422' , '2423' , '2440'

 , '2442' , '2444' , '2450' , '2460' , '2470' , '2472' , '2474' , '2480' , '2482' , '2484'

 --取现人工

 , '8110' , '8112' , '8114' , '8116'

 --分期

 , '8130' , '8130' , '8950'

 , '8952' , '8952' , '8954' , '8954' , '8956' , '8958' , '8958' ) --消费 分期 取现 转出

group by A.date_now,a.cst_id

;





------###---###---###end





------###---###---###start0038

------###---###---###---龙彬彬

------###---###---###-----------------------------------------分期---周一重新跑，内存不够--------------------------------

------###---###---###----分期类型 MP_TYPE:	Y-账单分期 A-灵活分期 M-邮购分期

------###---###---###----分期计划 CREDP_ID:	0001-消费 1001-现金

drop table if exists lab_bigdata_dev.tbl26_rfm_mpur_stat_credit_card_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl26_rfm_mpur_stat_credit_card_risk_cst_like_20240330 as

SELECT

B.CST_ID,

A.INP_DAY ,-----分期交易发生日期



----17 信用卡分期交易

COUNT(1)							CC_STAGE_CNT,----信用卡分期笔数,

SUM(A.ORIG_PURCH) 					CC_STAGE_AMT,----信用卡分期发生额,

SUM(COALESCE(A.ORIG_FEE,0)+COALESCE(A.COMM_AMT,0)) 			CC_STAGE_FEE,----信用卡分期应收手续费,



----18 信用卡账单分期

coalesce(SUM(CASE WHEN A.MP_TYPE='Y' THEN 1 ELSE 0 END),0) 						CC_BILL_STAGE_CNT,---信用卡账单分期笔数,

coalesce(SUM(CASE WHEN A.MP_TYPE='Y' THEN A.ORIG_PURCH ELSE 0 END) 	,0)			CC_BILL_STAGE_AMT,---信用卡账单分期发生额,

coalesce(SUM(CASE WHEN A.MP_TYPE='Y' THEN COALESCE(A.ORIG_FEE,0)+COALESCE(A.COMM_AMT,0) ELSE 0 END),0) 		CC_BILL_STAGE_FEE,---信用卡账单分期应收手续费,



---19 未终止信用卡消费灵活分期

coalesce(SUM(CASE WHEN A.MP_TYPE='A' AND CREDP_ID='0001' THEN 1 ELSE 0 END),0) 						CC_CONSUME_FLEXIBLE_STAGE_CNT,----信用卡消费灵活分期笔数,

coalesce(SUM(CASE WHEN A.MP_TYPE='A' AND CREDP_ID='0001' THEN A.ORIG_PURCH ELSE 0 END) 	,0)			CC_CONSUME_FLEXIBLE_STAGE_AMT,----信用卡消费灵活分期发生额,

coalesce(SUM(CASE WHEN A.MP_TYPE='A' AND CREDP_ID='0001' THEN COALESCE(A.ORIG_FEE,0)+COALESCE(A.COMM_AMT,0) ELSE 0 END),0) 		CC_CONSUME_FLEXIBLE_STAGE_FEE,----信用卡消费灵活分期应收手续费,





---20 信用卡现金灵活分期

coalesce(SUM(CASE WHEN A.MP_TYPE='A' AND CREDP_ID='1001' THEN 1 ELSE 0 END) ,0)							CC_CASH_FLEXIBLE_STAGE_CNT,----信用卡现金灵活分期笔数,

coalesce(SUM(CASE WHEN A.MP_TYPE='A' AND CREDP_ID='1001' THEN A.ORIG_PURCH ELSE 0 END) ,0)				CC_CASH_FLEXIBLE_STAGE_AMT,----信用卡现金灵活分期发生额,

coalesce(SUM(CASE WHEN A.MP_TYPE='A' AND CREDP_ID='1001' THEN COALESCE(A.ORIG_FEE,0)+COALESCE(A.COMM_AMT,0) ELSE 0 END),0) 		CC_CASH_FLEXIBLE_STAGE_FEE,----信用卡现金灵活分期应收手续费,



---21 信用卡灵活分期

coalesce(SUM(CASE WHEN A.MP_TYPE='A' THEN 1 ELSE 0 END) ,0)						CC_FLEXIBLE_STAGE_CNT,----信用卡灵活分期笔数,

coalesce(SUM(CASE WHEN A.MP_TYPE='A' THEN A.ORIG_PURCH ELSE 0 END) 	,0)			CC_FLEXIBLE_STAGE_AMT,----信用卡灵活分期发生额,

coalesce(SUM(CASE WHEN A.MP_TYPE='A' THEN COALESCE(A.ORIG_FEE,0)+COALESCE(A.COMM_AMT,0) ELSE 0 END),0) 		CC_FLEXIBLE_STAGE_FEE,----信用卡灵活分期应收手续费,



---22 信用卡邮购分期

coalesce(SUM(CASE WHEN A.MP_TYPE='M' THEN 1 ELSE 0 END) ,0)						CC_MAIL_ORDER_STAGE_CNT,----信用卡邮购分期笔数,

coalesce(SUM(CASE WHEN A.MP_TYPE='M' THEN A.ORIG_PURCH ELSE 0 END) 	,0)			CC_MAIL_ORDER_STAGE_AMT,----信用卡邮购分期发生额,

coalesce(SUM(CASE WHEN A.MP_TYPE='M' THEN COALESCE(A.ORIG_FEE,0)+COALESCE(A.COMM_AMT,0) ELSE 0 END),0) 		CC_MAIL_ORDER_STAGE_FEE,----信用卡邮购分期应收手续费,



---23 信用卡现金分期

coalesce(SUM(CASE WHEN A.MP_TYPE='B' THEN 1 ELSE 0 END) ,0)							CC_CASH_STAGE_CNT,-----信用卡现金分期笔数,

coalesce(SUM(CASE WHEN A.MP_TYPE='B' THEN A.ORIG_PURCH ELSE 0 END) ,0)				CC_CASH_STAGE_AMT,-----信用卡现金分期发生额,

coalesce(SUM(CASE WHEN A.MP_TYPE='B' THEN COALESCE(A.ORIG_FEE,0)+COALESCE(A.COMM_AMT,0) ELSE 0 END) ,0)		CC_CASH_STAGE_FEE,-----信用卡现金分期应收手续费



---24 信用卡现金类分期 信用卡现金分期 23 + 信用卡现金灵活分期 20



----25 未终止信用卡分期交易

coalesce(SUM(CASE WHEN (A.XSTATUS NOT IN ('E','F') or A.XSTATUS IS NULL) THEN 1 ELSE 0 END),0) 							CC_UNFIN_STAGE_CNT,----未终止信用卡分期笔数,

coalesce(SUM(CASE WHEN (A.XSTATUS NOT IN ('E','F') or A.XSTATUS IS NULL) THEN A.ORIG_PURCH ELSE 0 END) ,0)				CC_UNFIN_STAGE_AMT,----未终止信用卡分期发生额,

coalesce(SUM(CASE WHEN (A.XSTATUS NOT IN ('E','F') or A.XSTATUS IS NULL) THEN COALESCE(A.ORIG_FEE,0)+COALESCE(A.COMM_AMT,0) ELSE 0 END),0) 		CC_UNFIN_STAGE_FEE,----未终止信用卡分期应收手续费,

---26 未终止信用卡账单分期

coalesce(SUM(CASE WHEN (A.XSTATUS NOT IN ('E','F') or A.XSTATUS IS NULL) AND A.MP_TYPE='Y' THEN 1 ELSE 0 END) ,0)							CC_UNFIN_BILL_STAGE_CNT,---未终止信用卡账单分期笔数,

coalesce(SUM(CASE WHEN (A.XSTATUS NOT IN ('E','F') or A.XSTATUS IS NULL) AND A.MP_TYPE='Y' THEN A.ORIG_PURCH ELSE 0 END) ,0)				CC_UNFIN_BILL_STAGE_AMT,---未终止信用卡账单分期发生额,

coalesce(SUM(CASE WHEN (A.XSTATUS NOT IN ('E','F') or A.XSTATUS IS NULL) AND A.MP_TYPE='Y' THEN COALESCE(A.ORIG_FEE,0)+COALESCE(A.COMM_AMT,0) ELSE 0 END) ,0)		CC_UNFIN_BILL_STAGE_FEE,---未终止信用卡账单分期应收手续费,

---27 未终止信用卡消费灵活分期

coalesce(SUM(CASE WHEN (A.XSTATUS NOT IN ('E','F') or A.XSTATUS IS NULL) AND A.MP_TYPE='A' AND CREDP_ID='0001' THEN 1 ELSE 0 END) ,0)							CC_UNFIN_CONSUME_FLEXIBLE_STAGE_CNT,----未终止信用卡消费灵活分期笔数,

coalesce(SUM(CASE WHEN (A.XSTATUS NOT IN ('E','F') or A.XSTATUS IS NULL) AND A.MP_TYPE='A' AND CREDP_ID='0001' THEN A.ORIG_PURCH ELSE 0 END) ,0)				CC_UNFIN_CONSUME_FLEXIBLE_STAGE_AMT,----未终止信用卡消费灵活分期发生额,

coalesce(SUM(CASE WHEN (A.XSTATUS NOT IN ('E','F') or A.XSTATUS IS NULL) AND A.MP_TYPE='A' AND CREDP_ID='0001' THEN COALESCE(A.ORIG_FEE,0)+COALESCE(A.COMM_AMT,0) ELSE 0 END),0) 		CC_UNFIN_CONSUME_FLEXIBLE_STAGE_FEE,----未终止信用卡消费灵活分期应收手续费,

---28 未终止信用卡现金灵活分期

coalesce(SUM(CASE WHEN (A.XSTATUS NOT IN ('E','F') or A.XSTATUS IS NULL) AND A.MP_TYPE='A' AND CREDP_ID='1001' THEN 1 ELSE 0 END) ,0)							CC_UNFIN_CASH_FLEXIBLE_STAGE_CNT,----未终止信用卡现金灵活分期笔数,

coalesce(SUM(CASE WHEN (A.XSTATUS NOT IN ('E','F') or A.XSTATUS IS NULL) AND A.MP_TYPE='A' AND CREDP_ID='1001' THEN A.ORIG_PURCH ELSE 0 END),0) 				CC_UNFIN_CASH_FLEXIBLE_STAGE_AMT,----未终止信用卡现金灵活分期发生额,

coalesce(SUM(CASE WHEN (A.XSTATUS NOT IN ('E','F') or A.XSTATUS IS NULL) AND A.MP_TYPE='A' AND CREDP_ID='1001' THEN COALESCE(A.ORIG_FEE,0)+COALESCE(A.COMM_AMT,0) ELSE 0 END),0) 		CC_UNFIN_CASH_FLEXIBLE_STAGE_FEE,----未终止信用卡现金灵活分期应收手续费,

---29 未终止信用卡灵活分期

coalesce(SUM(CASE WHEN (A.XSTATUS NOT IN ('E','F') or A.XSTATUS IS NULL) AND A.MP_TYPE='A' THEN 1 ELSE 0 END) ,0)							CC_UNFIN_FLEXIBLE_STAGE_CNT,----未终止信用卡灵活分期笔数,

coalesce(SUM(CASE WHEN (A.XSTATUS NOT IN ('E','F') or A.XSTATUS IS NULL) AND A.MP_TYPE='A' THEN A.ORIG_PURCH ELSE 0 END),0) 				CC_UNFIN_FLEXIBLE_STAGE_AMT,----未终止信用卡灵活分期发生额,

coalesce(SUM(CASE WHEN (A.XSTATUS NOT IN ('E','F') or A.XSTATUS IS NULL) AND A.MP_TYPE='A' THEN COALESCE(A.ORIG_FEE,0)+COALESCE(A.COMM_AMT,0) ELSE 0 END),0) 		CC_UNFIN_FLEXIBLE_STAGE_FEE,----未终止信用卡灵活分期应收手续费,

---30 未终止信用卡邮购分期

coalesce(SUM(CASE WHEN (A.XSTATUS NOT IN ('E','F') or A.XSTATUS IS NULL) AND A.MP_TYPE='M' THEN 1 ELSE 0 END),0) 							CC_UNFIN_MAIL_ORDER_STAGE_CNT,----未终止信用卡邮购分期笔数,

coalesce(SUM(CASE WHEN (A.XSTATUS NOT IN ('E','F') or A.XSTATUS IS NULL) AND A.MP_TYPE='M' THEN A.ORIG_PURCH ELSE 0 END) ,0)				CC_UNFIN_MAIL_ORDER_STAGE_AMT,----未终止信用卡邮购分期发生额,

coalesce(SUM(CASE WHEN (A.XSTATUS NOT IN ('E','F') or A.XSTATUS IS NULL) AND A.MP_TYPE='M' THEN COALESCE(A.ORIG_FEE,0)+COALESCE(A.COMM_AMT,0) ELSE 0 END),0) 		CC_UNFIN_MAIL_ORDER_STAGE_FEE,----未终止信用卡邮购分期应收手续费,

---31 未终止信用卡现金分期

coalesce(SUM(CASE WHEN (A.XSTATUS NOT IN ('E','F') or A.XSTATUS IS NULL) AND A.MP_TYPE='B' THEN 1 ELSE 0 END) ,0)							CC_UNFIN_CASH_STAGE_CNT,-----未终止信用卡现金分期笔数,

coalesce(SUM(CASE WHEN (A.XSTATUS NOT IN ('E','F') or A.XSTATUS IS NULL) AND A.MP_TYPE='B' THEN A.ORIG_PURCH ELSE 0 END),0) 				CC_UNFIN_CASH_STAGE_AMT,-----未终止信用卡现金分期发生额,

coalesce(SUM(CASE WHEN (A.XSTATUS NOT IN ('E','F') or A.XSTATUS IS NULL) AND A.MP_TYPE='B' THEN COALESCE(A.ORIG_FEE,0)+COALESCE(A.COMM_AMT,0) ELSE 0 END),0) 		CC_UNFIN_CASH_STAGE_FEE-----未终止信用卡现金分期应收手续费

---32 未终止信用卡现金类分期 = 31 未终止信用卡现金分期 + 28 未终止信用卡现金灵活分期



FROM EDW.NCRD_MPUR A

LEFT JOIN EDW.DIM_BUS_CRD_CR_CRD_INF_DD B ON B.CR_CRD_CARD_NBR=A.CARD_NBR AND B.DT=(select max(date_now) from lab_bigdata_dev.risk_cst_like_sample)  ---'20210204'

WHERE A.DT=(select max(date_now) from lab_bigdata_dev.risk_cst_like_sample)   ---'20210204'

GROUP BY B.CST_ID,

A.INP_DAY

;





------###---###---###end





------###---###---###start0039

------###---###---### --------------------------------------------------------------------交易&mdash;&mdash;------------------------------------------

------###---###---###----信用卡交易退货标识加工：加工出 全额退货、部分退货、未退货 几种分类情况

--------20231030关联关系加上卡号限制，流水号+卡号才是唯一

drop table if exists lab_bigdata_dev.TRAN_RETURN_DETAIL_risk_cst_like_20240330;

create table lab_bigdata_dev.TRAN_RETURN_DETAIL_risk_cst_like_20240330 as

SELECT

	A.XTRANNO,

	A.INP_DATE,

	-----SUBSTR(B.acptor_id,1,5),

	-----B.acptor_id,

	-----DATEADD('1957-01-01 00:00:00',SUBSTR(B.acptor_id,1,5),'dd'),

	-----SUBSTR(B.acptor_id,6),

	A.BILL_AMT  AS ORI_AMT,         -----原交易金额

	B.BILL_AMT AS RETURN_AMT,    -----退货交易金额

	CASE

	WHEN B.BILL_AMT>=A.BILL_AMT THEN '全额退货'

	WHEN B.BILL_AMT<A.BILL_AMT AND B.BILL_AMT>0 THEN '部分退货'

	ELSE '未退货' END RETURN_FLG

FROM EDW.NCRD_TRAN A

JOIN EDW.NCRD_TRAN B

ON B.DT<=(select max(date_now) from lab_bigdata_dev.risk_cst_like_sample)  ----'20210204'

AND B.TRANS_TYPE LIKE '6%'

AND B.TRANS_TYPE <>'6050'

AND B.TRANS_TYPE <>'6052'

AND DATEADD('1957-01-01 00:00:00',SUBSTR(B.acptor_id,1,5),'dd')=TO_DATE(A.INP_DATE,'YYYYMMDD')

AND SUBSTR(B.acptor_id,6)=A.XTRANNO

AND B.card_nbr=A.card_nbr    ----20231107修改增加

AND LENGTH(B.acptor_id)=11

WHERE A.DT<=(select max(date_now) from lab_bigdata_dev.risk_cst_like_sample)    ----'20210204'

AND (A.TRANS_TYPE NOT LIKE '6%' OR  A.TRANS_TYPE ='6050' OR A.TRANS_TYPE ='6052')

;





------###---###---###end





------###---###---###start0040

---###---### ---TRANS_TYPE:

---###---### ---1开头 消费交易

---###---### ---2开头 取现 转出交易

---###---###---6开头 退货交易

---###---### ---7开头 还款交易

drop table if exists lab_bigdata_dev.tbl27_rfm_tran_stat_credit_card_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl27_rfm_tran_stat_credit_card_risk_cst_like_20240330 as

SELECT

	B.CST_ID,

	A.INP_DATE,

	----信用卡消费交易笔数金额

	SUM(CASE WHEN (REV_IND='0' or REV_IND is null or REV_IND='' )  AND TRANS_TYPE LIKE '1%' AND TRANS_TYPE <>'1050' THEN 1 ELSE 0 END) 		 AS CC_CONSUME_TXN_CNT,

	SUM(CASE WHEN (REV_IND='0' or REV_IND is null or REV_IND='')  AND TRANS_TYPE LIKE '1%' AND TRANS_TYPE <>'1050' THEN BILL_AMT ELSE 0 END) AS CC_CONSUME_TXN_AMT,

	---信用卡取现/转出交易笔数金额

	SUM(CASE WHEN TRANS_TYPE LIKE '2%' THEN 1 ELSE 0 END)                   CC_CASH_OUT_TXN_CNT,

	SUM(CASE WHEN TRANS_TYPE LIKE '2%' THEN BILL_AMT ELSE 0 END)            CC_CASH_OUT_TXN_AMT,

	---信用卡退货交易笔数金额

	SUM(CASE WHEN TRANS_TYPE LIKE '6%' AND  TRANS_TYPE <>'6050' AND TRANS_TYPE <>'6052' THEN 1 ELSE 0 END)         AS  CC_RETURN_TXN_CNT,

	SUM(CASE WHEN TRANS_TYPE LIKE '6%' AND  TRANS_TYPE <>'6050' AND TRANS_TYPE <>'6052' THEN BILL_AMT ELSE 0 END)  AS  CC_RETURN_TXN_AMT,

	---未撤销信用卡取现/转出交易笔数金额

	SUM(CASE WHEN (REV_IND='0' or REV_IND is null or REV_IND='')  AND TRANS_TYPE LIKE '2%' THEN 1 ELSE 0 END)          AS    CC_UNCANCEL_CASH_OUT_TXN_CNT,

	SUM(CASE WHEN (REV_IND='0' or REV_IND is null or REV_IND='')  AND TRANS_TYPE LIKE '2%' THEN BILL_AMT ELSE 0 END)   AS    CC_UNCANCEL_CASH_OUT_TXN_AMT,

	---未撤销、未退货信用卡消费交易笔数金额

	SUM(CASE WHEN (REV_IND='0' or REV_IND is null or REV_IND='')  AND TRANS_TYPE LIKE '1%' AND TRANS_TYPE <>'1050' AND (C.RETURN_FLG<>'全额退货' or c.RETURN_FLG is null) THEN 1 ELSE 0 END)        AS CC_UNCANCEL_CONSUSME_TXN_CNT,

	SUM(CASE WHEN (REV_IND='0' or REV_IND is null or REV_IND='')  AND TRANS_TYPE LIKE '1%' AND TRANS_TYPE <>'1050' AND (C.RETURN_FLG<>'全额退货' or c.RETURN_FLG is null) THEN BILL_AMT-coalesce(C.RETURN_AMT,0) ELSE 0 END) AS CC_UNCANCEL_CONSUSME_TXN_AMT,

	---未撤销信用卡退货交易笔数金额

	SUM(CASE WHEN (REV_IND='0' or REV_IND is null or REV_IND='')  AND TRANS_TYPE LIKE '6%' AND  TRANS_TYPE <>'6050' AND TRANS_TYPE <>'6052' THEN 1 ELSE 0 END)        AS  CC_UNCANCEL_RETURN_TXN_CNT,

	SUM(CASE WHEN (REV_IND='0' or REV_IND is null or REV_IND='')  AND TRANS_TYPE LIKE '6%' AND  TRANS_TYPE <>'6050' AND TRANS_TYPE <>'6052' THEN BILL_AMT ELSE 0 END) AS  CC_UNCANCEL_RETURN_TXN_AMT

FROM EDW.NCRD_TRAN A

LEFT JOIN EDW.DIM_BUS_CRD_CR_CRD_INF_DD B

ON B.CR_CRD_CARD_NBR=A.CARD_NBR

AND B.DT=(select max(date_now) from lab_bigdata_dev.risk_cst_like_sample)  ---'20210204'

LEFT JOIN lab_bigdata_dev.TRAN_RETURN_DETAIL_risk_cst_like_20240330 C ON A.XTRANNO=C.XTRANNO AND A.INP_DATE=C.INP_DATE

WHERE A.DT<=(select max(date_now) from lab_bigdata_dev.risk_cst_like_sample)  -----'20210204'

GROUP BY

B.CST_ID,

A.INP_DATE

;





------###---###---###end





------###---###---###start0041

------###---###---### -------------------------------------------------->信用卡总支出交易单独处理>------------------------------------------

drop table if exists lab_bigdata_dev.tbl28_dim_cst_date_all_credit_card_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl28_dim_cst_date_all_credit_card_risk_cst_like_20240330 as

SELECT

	CST_ID,

	INP_DATE

FROM lab_bigdata_dev.tbl27_rfm_tran_stat_credit_card_risk_cst_like_20240330

UNION

SELECT

	CST_ID,

	INP_DAY INP_DATE

FROM lab_bigdata_dev.tbl26_rfm_mpur_stat_credit_card_risk_cst_like_20240330

;





------###---###---###end





------###---###---###start0042

drop table if exists lab_bigdata_dev.tbl29_rfm_stat_credit_card_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl29_rfm_stat_credit_card_risk_cst_like_20240330 as

SELECT

	A.CST_ID,

	A.INP_DATE,

	coalesce(B.CC_STAGE_CNT,0) as CC_STAGE_CNT,----信用卡分期笔数,

	coalesce(B.CC_STAGE_AMT,0) as CC_STAGE_AMT,----信用卡分期发生额,

	coalesce(B.CC_STAGE_FEE,0) as CC_STAGE_FEE,----信用卡分期应收手续费,

	coalesce(B.CC_BILL_STAGE_CNT,0) as CC_BILL_STAGE_CNT,---信用卡账单分期笔数,

	coalesce(B.CC_BILL_STAGE_AMT,0) as CC_BILL_STAGE_AMT,---信用卡账单分期发生额,

	coalesce(B.CC_BILL_STAGE_FEE,0) as CC_BILL_STAGE_FEE,---信用卡账单分期应收手续费,

	coalesce(B.CC_CONSUME_FLEXIBLE_STAGE_CNT,0) as CC_CONSUME_FLEXIBLE_STAGE_CNT,----信用卡消费灵活分期笔数,

	coalesce(B.CC_CONSUME_FLEXIBLE_STAGE_AMT,0) as CC_CONSUME_FLEXIBLE_STAGE_AMT,----信用卡消费灵活分期发生额,

	coalesce(B.CC_CONSUME_FLEXIBLE_STAGE_FEE,0) as CC_CONSUME_FLEXIBLE_STAGE_FEE,----信用卡消费灵活分期应收手续费,

	coalesce(B.CC_CASH_FLEXIBLE_STAGE_CNT,0) as CC_CASH_FLEXIBLE_STAGE_CNT,----信用卡现金灵活分期笔数,

	coalesce(B.CC_CASH_FLEXIBLE_STAGE_AMT,0) as CC_CASH_FLEXIBLE_STAGE_AMT,----信用卡现金灵活分期发生额,

	coalesce(B.CC_CASH_FLEXIBLE_STAGE_FEE,0) as CC_CASH_FLEXIBLE_STAGE_FEE,----信用卡现金灵活分期应收手续费,

	coalesce(B.CC_FLEXIBLE_STAGE_CNT,0) as CC_FLEXIBLE_STAGE_CNT,----信用卡灵活分期笔数,

	coalesce(B.CC_FLEXIBLE_STAGE_AMT,0) as CC_FLEXIBLE_STAGE_AMT,----信用卡灵活分期发生额,

	coalesce(B.CC_FLEXIBLE_STAGE_FEE,0) as CC_FLEXIBLE_STAGE_FEE,----信用卡灵活分期应收手续费,

	coalesce(B.CC_MAIL_ORDER_STAGE_CNT,0) as CC_MAIL_ORDER_STAGE_CNT,----信用卡邮购分期笔数,

	coalesce(B.CC_MAIL_ORDER_STAGE_AMT,0) as CC_MAIL_ORDER_STAGE_AMT,----信用卡邮购分期发生额,

	coalesce(B.CC_MAIL_ORDER_STAGE_FEE,0) as CC_MAIL_ORDER_STAGE_FEE,----信用卡邮购分期应收手续费,

	coalesce(B.CC_CASH_STAGE_CNT,0) as CC_CASH_STAGE_CNT,-----信用卡现金分期笔数,

	coalesce(B.CC_CASH_STAGE_AMT,0) as CC_CASH_STAGE_AMT,-----信用卡现金分期发生额,

	coalesce(B.CC_CASH_STAGE_FEE,0) as CC_CASH_STAGE_FEE,-----信用卡现金分期应收手续费

	coalesce(B.CC_UNFIN_STAGE_CNT,0) as CC_UNFIN_STAGE_CNT,----未终止信用卡分期笔数,

	coalesce(B.CC_UNFIN_STAGE_AMT,0) as CC_UNFIN_STAGE_AMT,----未终止信用卡分期发生额,

	coalesce(B.CC_UNFIN_STAGE_FEE,0) as CC_UNFIN_STAGE_FEE,----未终止信用卡分期应收手续费,

	coalesce(B.CC_UNFIN_BILL_STAGE_CNT,0) as CC_UNFIN_BILL_STAGE_CNT,---未终止信用卡账单分期笔数,

	coalesce(B.CC_UNFIN_BILL_STAGE_AMT,0) as CC_UNFIN_BILL_STAGE_AMT,---未终止信用卡账单分期发生额,

	coalesce(B.CC_UNFIN_BILL_STAGE_FEE,0) as CC_UNFIN_BILL_STAGE_FEE,---未终止信用卡账单分期应收手续费,

	coalesce(B.CC_UNFIN_CONSUME_FLEXIBLE_STAGE_CNT,0) as CC_UNFIN_CONSUME_FLEXIBLE_STAGE_CNT,----未终止信用卡消费灵活分期笔数,

	coalesce(B.CC_UNFIN_CONSUME_FLEXIBLE_STAGE_AMT,0) as CC_UNFIN_CONSUME_FLEXIBLE_STAGE_AMT,----未终止信用卡消费灵活分期发生额,

	coalesce(B.CC_UNFIN_CONSUME_FLEXIBLE_STAGE_FEE,0) as CC_UNFIN_CONSUME_FLEXIBLE_STAGE_FEE,----未终止信用卡消费灵活分期应收手续费,

	coalesce(B.CC_UNFIN_CASH_FLEXIBLE_STAGE_CNT,0) as CC_UNFIN_CASH_FLEXIBLE_STAGE_CNT,----未终止信用卡现金灵活分期笔数,

	coalesce(B.CC_UNFIN_CASH_FLEXIBLE_STAGE_AMT,0) as CC_UNFIN_CASH_FLEXIBLE_STAGE_AMT,----未终止信用卡现金灵活分期发生额,

	coalesce(B.CC_UNFIN_CASH_FLEXIBLE_STAGE_FEE,0) as CC_UNFIN_CASH_FLEXIBLE_STAGE_FEE,----未终止信用卡现金灵活分期应收手续费,

	coalesce(B.CC_UNFIN_FLEXIBLE_STAGE_CNT,0) as CC_UNFIN_FLEXIBLE_STAGE_CNT,----未终止信用卡灵活分期笔数,

	coalesce(B.CC_UNFIN_FLEXIBLE_STAGE_AMT,0) as CC_UNFIN_FLEXIBLE_STAGE_AMT,----未终止信用卡灵活分期发生额,

	coalesce(B.CC_UNFIN_FLEXIBLE_STAGE_FEE,0) as CC_UNFIN_FLEXIBLE_STAGE_FEE,----未终止信用卡灵活分期应收手续费,

	coalesce(B.CC_UNFIN_MAIL_ORDER_STAGE_CNT,0) as CC_UNFIN_MAIL_ORDER_STAGE_CNT,----未终止信用卡邮购分期笔数,

	coalesce(B.CC_UNFIN_MAIL_ORDER_STAGE_AMT,0) as CC_UNFIN_MAIL_ORDER_STAGE_AMT,----未终止信用卡邮购分期发生额,

	coalesce(B.CC_UNFIN_MAIL_ORDER_STAGE_FEE,0) as CC_UNFIN_MAIL_ORDER_STAGE_FEE,----未终止信用卡邮购分期应收手续费,

	coalesce(B.CC_UNFIN_CASH_STAGE_CNT,0) as CC_UNFIN_CASH_STAGE_CNT,-----未终止信用卡现金分期笔数,

	coalesce(B.CC_UNFIN_CASH_STAGE_AMT,0) as CC_UNFIN_CASH_STAGE_AMT,-----未终止信用卡现金分期发生额,

	coalesce(B.CC_UNFIN_CASH_STAGE_FEE,0) as CC_UNFIN_CASH_STAGE_FEE,-----未终止信用卡现金分期应收手续费

	coalesce(C.CC_CONSUME_TXN_CNT,0) as CC_CONSUME_TXN_CNT,     ----信用卡消费交易笔数

	coalesce(C.CC_CONSUME_TXN_AMT,0) as CC_CONSUME_TXN_AMT,     ----信用卡消费交易金额

	coalesce(C.CC_CASH_OUT_TXN_CNT,0) as CC_CASH_OUT_TXN_CNT,      ---信用卡取现/转出交易笔数

	coalesce(C.CC_CASH_OUT_TXN_AMT,0) as CC_CASH_OUT_TXN_AMT,      ---信用卡取现/转出交易金额

	coalesce(C.CC_RETURN_TXN_CNT,0) as CC_RETURN_TXN_CNT,        ---信用卡退货交易笔数

	coalesce(C.CC_RETURN_TXN_AMT,0) as CC_RETURN_TXN_AMT,        ---信用卡退货交易金额

	coalesce(C.CC_UNCANCEL_CASH_OUT_TXN_CNT,0) as CC_UNCANCEL_CASH_OUT_TXN_CNT,    ---未撤销信用卡取现/转出交易笔数

	coalesce(C.CC_UNCANCEL_CASH_OUT_TXN_AMT,0) as CC_UNCANCEL_CASH_OUT_TXN_AMT,    ---未撤销信用卡取现/转出交易金额

	coalesce(C.CC_UNCANCEL_CONSUSME_TXN_CNT,0) as CC_UNCANCEL_CONSUSME_TXN_CNT,     ---未撤销、未退货信用卡消费交易笔数

	coalesce(C.CC_UNCANCEL_CONSUSME_TXN_AMT,0) as CC_UNCANCEL_CONSUSME_TXN_AMT,     ---未撤销、未退货信用卡消费交易金额

	coalesce(C.CC_UNCANCEL_RETURN_TXN_CNT,0) as CC_UNCANCEL_RETURN_TXN_CNT,    ---未撤销信用卡退货交易笔数

	coalesce(C.CC_UNCANCEL_RETURN_TXN_AMT,0) as CC_UNCANCEL_RETURN_TXN_AMT,     ---未撤销信用卡退货交易金额

	coalesce(B.CC_STAGE_CNT,0)+coalesce(C.CC_CONSUME_TXN_CNT,0)+coalesce(C.CC_CASH_OUT_TXN_CNT,0) AS CC_PAY_CNT,---分期+消费+取现/转出 笔数

	coalesce(B.CC_STAGE_AMT,0)+coalesce(C.CC_CONSUME_TXN_AMT,0)+coalesce(C.CC_CASH_OUT_TXN_AMT,0) AS CC_PAY_AMT ---分期+消费+取现/转出 金额

FROM lab_bigdata_dev.tbl28_dim_cst_date_all_credit_card_risk_cst_like_20240330 A

LEFT JOIN lab_bigdata_dev.tbl26_rfm_mpur_stat_credit_card_risk_cst_like_20240330 B ON A.CST_ID=B.CST_ID AND A.INP_DATE=B.INP_DAY

LEFT JOIN lab_bigdata_dev.tbl27_rfm_tran_stat_credit_card_risk_cst_like_20240330 C ON A.CST_ID=C.CST_ID AND A.INP_DATE=C.INP_DATE

;





------###---###---###end





------###---###---###start0043

------###---###---###-------------------------------------------------<信用卡总支出交易单独处理<------------------------------------------

------###---###---###-----------------------------------最终指标--------------------------------------------------------------------

drop table if exists lab_bigdata_dev.tbl30_rfm_cst_final_credit_card_feature_risk_cst_like_20240330;

create table lab_bigdata_dev.tbl30_rfm_cst_final_credit_card_feature_risk_cst_like_20240330 as

SELECT

	A.CST_ID,

	A.DATE_NOW,

	-----分期交易 MPUR

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNFIN_STAGE_CNT,0)                  ELSE 0 END) AS INB_CC_UNFIN_STAGE_CNT_30D                  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNFIN_STAGE_AMT ,0)                 ELSE 0 END) AS INB_CC_UNFIN_STAGE_AMT_30D                  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNFIN_STAGE_FEE ,0)                 ELSE 0 END) AS INB_CC_UNFIN_STAGE_FEE_30D                  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNFIN_BILL_STAGE_CNT,0)            ELSE 0 END) AS  INB_CC_UNFIN_BILL_STAGE_CNT_30D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNFIN_BILL_STAGE_AMT ,0)            ELSE 0 END) AS INB_CC_UNFIN_BILL_STAGE_AMT_30D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNFIN_BILL_STAGE_FEE ,0)            ELSE 0 END) AS INB_CC_UNFIN_BILL_STAGE_FEE_30D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNFIN_CONSUME_FLEXIBLE_STAGE_CNT,0) ELSE 0 END) AS INB_CC_UNFIN_CONSUME_FLEXIBLE_STAGE_CNT_30D ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNFIN_CONSUME_FLEXIBLE_STAGE_AMT,0) ELSE 0 END) AS INB_CC_UNFIN_CONSUME_FLEXIBLE_STAGE_AMT_30D ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNFIN_CONSUME_FLEXIBLE_STAGE_FEE,0) ELSE 0 END) AS INB_CC_UNFIN_CONSUME_FLEXIBLE_STAGE_FEE_30D ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNFIN_CASH_FLEXIBLE_STAGE_CNT,0)    ELSE 0 END) AS INB_CC_UNFIN_CASH_FLEXIBLE_STAGE_CNT_30D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNFIN_CASH_FLEXIBLE_STAGE_AMT ,0)   ELSE 0 END) AS INB_CC_UNFIN_CASH_FLEXIBLE_STAGE_AMT_30D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNFIN_CASH_FLEXIBLE_STAGE_FEE    ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_FLEXIBLE_STAGE_FEE_30D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNFIN_FLEXIBLE_STAGE_CNT         ,0) ELSE 0 END) AS INB_CC_UNFIN_FLEXIBLE_STAGE_CNT_30D         ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNFIN_FLEXIBLE_STAGE_AMT         ,0) ELSE 0 END) AS INB_CC_UNFIN_FLEXIBLE_STAGE_AMT_30D         ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNFIN_FLEXIBLE_STAGE_FEE         ,0) ELSE 0 END) AS INB_CC_UNFIN_FLEXIBLE_STAGE_FEE_30D         ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNFIN_MAIL_ORDER_STAGE_CNT       ,0) ELSE 0 END) AS INB_CC_UNFIN_MAIL_ORDER_STAGE_CNT_30D       ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNFIN_MAIL_ORDER_STAGE_AMT       ,0) ELSE 0 END) AS INB_CC_UNFIN_MAIL_ORDER_STAGE_AMT_30D       ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNFIN_MAIL_ORDER_STAGE_FEE       ,0) ELSE 0 END) AS INB_CC_UNFIN_MAIL_ORDER_STAGE_FEE_30D       ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNFIN_CASH_STAGE_CNT             ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_STAGE_CNT_30D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNFIN_CASH_STAGE_AMT             ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_STAGE_AMT_30D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNFIN_CASH_STAGE_FEE             ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_STAGE_FEE_30D             ,



	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNFIN_STAGE_CNT                  ,0) ELSE 0 END) AS INB_CC_UNFIN_STAGE_CNT_60D                  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNFIN_STAGE_AMT                  ,0) ELSE 0 END) AS INB_CC_UNFIN_STAGE_AMT_60D                  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNFIN_STAGE_FEE                  ,0) ELSE 0 END) AS INB_CC_UNFIN_STAGE_FEE_60D                  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNFIN_BILL_STAGE_CNT             ,0) ELSE 0 END) AS INB_CC_UNFIN_BILL_STAGE_CNT_60D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNFIN_BILL_STAGE_AMT             ,0) ELSE 0 END) AS INB_CC_UNFIN_BILL_STAGE_AMT_60D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNFIN_BILL_STAGE_FEE             ,0) ELSE 0 END) AS INB_CC_UNFIN_BILL_STAGE_FEE_60D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNFIN_CONSUME_FLEXIBLE_STAGE_CNT ,0) ELSE 0 END) AS INB_CC_UNFIN_CONSUME_FLEXIBLE_STAGE_CNT_60D ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNFIN_CONSUME_FLEXIBLE_STAGE_AMT ,0) ELSE 0 END) AS INB_CC_UNFIN_CONSUME_FLEXIBLE_STAGE_AMT_60D ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNFIN_CONSUME_FLEXIBLE_STAGE_FEE ,0) ELSE 0 END) AS INB_CC_UNFIN_CONSUME_FLEXIBLE_STAGE_FEE_60D ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNFIN_CASH_FLEXIBLE_STAGE_CNT    ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_FLEXIBLE_STAGE_CNT_60D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNFIN_CASH_FLEXIBLE_STAGE_AMT    ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_FLEXIBLE_STAGE_AMT_60D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNFIN_CASH_FLEXIBLE_STAGE_FEE    ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_FLEXIBLE_STAGE_FEE_60D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNFIN_FLEXIBLE_STAGE_CNT         ,0) ELSE 0 END) AS INB_CC_UNFIN_FLEXIBLE_STAGE_CNT_60D         ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNFIN_FLEXIBLE_STAGE_AMT         ,0) ELSE 0 END) AS INB_CC_UNFIN_FLEXIBLE_STAGE_AMT_60D         ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNFIN_FLEXIBLE_STAGE_FEE         ,0) ELSE 0 END) AS INB_CC_UNFIN_FLEXIBLE_STAGE_FEE_60D         ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNFIN_MAIL_ORDER_STAGE_CNT       ,0) ELSE 0 END) AS INB_CC_UNFIN_MAIL_ORDER_STAGE_CNT_60D       ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNFIN_MAIL_ORDER_STAGE_AMT       ,0) ELSE 0 END) AS INB_CC_UNFIN_MAIL_ORDER_STAGE_AMT_60D       ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNFIN_MAIL_ORDER_STAGE_FEE       ,0) ELSE 0 END) AS INB_CC_UNFIN_MAIL_ORDER_STAGE_FEE_60D       ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNFIN_CASH_STAGE_CNT             ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_STAGE_CNT_60D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNFIN_CASH_STAGE_AMT             ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_STAGE_AMT_60D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNFIN_CASH_STAGE_FEE             ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_STAGE_FEE_60D             ,



	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNFIN_STAGE_CNT                  ,0) ELSE 0 END) AS INB_CC_UNFIN_STAGE_CNT_90D                  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNFIN_STAGE_AMT                  ,0) ELSE 0 END) AS INB_CC_UNFIN_STAGE_AMT_90D                  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNFIN_STAGE_FEE                  ,0) ELSE 0 END) AS INB_CC_UNFIN_STAGE_FEE_90D                  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNFIN_BILL_STAGE_CNT             ,0) ELSE 0 END) AS INB_CC_UNFIN_BILL_STAGE_CNT_90D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNFIN_BILL_STAGE_AMT             ,0) ELSE 0 END) AS INB_CC_UNFIN_BILL_STAGE_AMT_90D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNFIN_BILL_STAGE_FEE             ,0) ELSE 0 END) AS INB_CC_UNFIN_BILL_STAGE_FEE_90D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNFIN_CONSUME_FLEXIBLE_STAGE_CNT ,0) ELSE 0 END) AS INB_CC_UNFIN_CONSUME_FLEXIBLE_STAGE_CNT_90D ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNFIN_CONSUME_FLEXIBLE_STAGE_AMT ,0) ELSE 0 END) AS INB_CC_UNFIN_CONSUME_FLEXIBLE_STAGE_AMT_90D ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNFIN_CONSUME_FLEXIBLE_STAGE_FEE ,0) ELSE 0 END) AS INB_CC_UNFIN_CONSUME_FLEXIBLE_STAGE_FEE_90D ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNFIN_CASH_FLEXIBLE_STAGE_CNT    ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_FLEXIBLE_STAGE_CNT_90D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNFIN_CASH_FLEXIBLE_STAGE_AMT    ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_FLEXIBLE_STAGE_AMT_90D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNFIN_CASH_FLEXIBLE_STAGE_FEE    ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_FLEXIBLE_STAGE_FEE_90D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNFIN_FLEXIBLE_STAGE_CNT         ,0) ELSE 0 END) AS INB_CC_UNFIN_FLEXIBLE_STAGE_CNT_90D         ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNFIN_FLEXIBLE_STAGE_AMT         ,0) ELSE 0 END) AS INB_CC_UNFIN_FLEXIBLE_STAGE_AMT_90D         ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNFIN_FLEXIBLE_STAGE_FEE         ,0) ELSE 0 END) AS INB_CC_UNFIN_FLEXIBLE_STAGE_FEE_90D         ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNFIN_MAIL_ORDER_STAGE_CNT       ,0) ELSE 0 END) AS INB_CC_UNFIN_MAIL_ORDER_STAGE_CNT_90D       ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNFIN_MAIL_ORDER_STAGE_AMT       ,0) ELSE 0 END) AS INB_CC_UNFIN_MAIL_ORDER_STAGE_AMT_90D       ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNFIN_MAIL_ORDER_STAGE_FEE       ,0) ELSE 0 END) AS INB_CC_UNFIN_MAIL_ORDER_STAGE_FEE_90D       ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNFIN_CASH_STAGE_CNT             ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_STAGE_CNT_90D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNFIN_CASH_STAGE_AMT             ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_STAGE_AMT_90D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNFIN_CASH_STAGE_FEE             ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_STAGE_FEE_90D             ,





	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNFIN_STAGE_CNT                  ,0) ELSE 0 END) AS INB_CC_UNFIN_STAGE_CNT_180D                  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNFIN_STAGE_AMT                  ,0) ELSE 0 END) AS INB_CC_UNFIN_STAGE_AMT_180D                  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNFIN_STAGE_FEE                  ,0) ELSE 0 END) AS INB_CC_UNFIN_STAGE_FEE_180D                  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNFIN_BILL_STAGE_CNT             ,0) ELSE 0 END) AS INB_CC_UNFIN_BILL_STAGE_CNT_180D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNFIN_BILL_STAGE_AMT             ,0) ELSE 0 END) AS INB_CC_UNFIN_BILL_STAGE_AMT_180D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNFIN_BILL_STAGE_FEE             ,0) ELSE 0 END) AS INB_CC_UNFIN_BILL_STAGE_FEE_180D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNFIN_CONSUME_FLEXIBLE_STAGE_CNT ,0) ELSE 0 END) AS INB_CC_UNFIN_CONSUME_FLEXIBLE_STAGE_CNT_180D ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNFIN_CONSUME_FLEXIBLE_STAGE_AMT ,0) ELSE 0 END) AS INB_CC_UNFIN_CONSUME_FLEXIBLE_STAGE_AMT_180D ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNFIN_CONSUME_FLEXIBLE_STAGE_FEE ,0) ELSE 0 END) AS INB_CC_UNFIN_CONSUME_FLEXIBLE_STAGE_FEE_180D ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNFIN_CASH_FLEXIBLE_STAGE_CNT    ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_FLEXIBLE_STAGE_CNT_180D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNFIN_CASH_FLEXIBLE_STAGE_AMT    ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_FLEXIBLE_STAGE_AMT_180D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNFIN_CASH_FLEXIBLE_STAGE_FEE    ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_FLEXIBLE_STAGE_FEE_180D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNFIN_FLEXIBLE_STAGE_CNT         ,0) ELSE 0 END) AS INB_CC_UNFIN_FLEXIBLE_STAGE_CNT_180D         ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNFIN_FLEXIBLE_STAGE_AMT         ,0) ELSE 0 END) AS INB_CC_UNFIN_FLEXIBLE_STAGE_AMT_180D         ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNFIN_FLEXIBLE_STAGE_FEE         ,0) ELSE 0 END) AS INB_CC_UNFIN_FLEXIBLE_STAGE_FEE_180D         ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNFIN_MAIL_ORDER_STAGE_CNT       ,0) ELSE 0 END) AS INB_CC_UNFIN_MAIL_ORDER_STAGE_CNT_180D       ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNFIN_MAIL_ORDER_STAGE_AMT       ,0) ELSE 0 END) AS INB_CC_UNFIN_MAIL_ORDER_STAGE_AMT_180D       ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNFIN_MAIL_ORDER_STAGE_FEE       ,0) ELSE 0 END) AS INB_CC_UNFIN_MAIL_ORDER_STAGE_FEE_180D       ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNFIN_CASH_STAGE_CNT             ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_STAGE_CNT_180D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNFIN_CASH_STAGE_AMT             ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_STAGE_AMT_180D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNFIN_CASH_STAGE_FEE             ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_STAGE_FEE_180D             ,



	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNFIN_STAGE_CNT                  ,0) ELSE 0 END) AS INB_CC_UNFIN_STAGE_CNT_360D                  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNFIN_STAGE_AMT                  ,0) ELSE 0 END) AS INB_CC_UNFIN_STAGE_AMT_360D                  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNFIN_STAGE_FEE                  ,0) ELSE 0 END) AS INB_CC_UNFIN_STAGE_FEE_360D                  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNFIN_BILL_STAGE_CNT             ,0) ELSE 0 END) AS INB_CC_UNFIN_BILL_STAGE_CNT_360D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNFIN_BILL_STAGE_AMT             ,0) ELSE 0 END) AS INB_CC_UNFIN_BILL_STAGE_AMT_360D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNFIN_BILL_STAGE_FEE             ,0) ELSE 0 END) AS INB_CC_UNFIN_BILL_STAGE_FEE_360D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNFIN_CONSUME_FLEXIBLE_STAGE_CNT ,0) ELSE 0 END) AS INB_CC_UNFIN_CONSUME_FLEXIBLE_STAGE_CNT_360D ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNFIN_CONSUME_FLEXIBLE_STAGE_AMT ,0) ELSE 0 END) AS INB_CC_UNFIN_CONSUME_FLEXIBLE_STAGE_AMT_360D ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNFIN_CONSUME_FLEXIBLE_STAGE_FEE ,0) ELSE 0 END) AS INB_CC_UNFIN_CONSUME_FLEXIBLE_STAGE_FEE_360D ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNFIN_CASH_FLEXIBLE_STAGE_CNT    ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_FLEXIBLE_STAGE_CNT_360D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNFIN_CASH_FLEXIBLE_STAGE_AMT    ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_FLEXIBLE_STAGE_AMT_360D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNFIN_CASH_FLEXIBLE_STAGE_FEE    ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_FLEXIBLE_STAGE_FEE_360D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNFIN_FLEXIBLE_STAGE_CNT         ,0) ELSE 0 END) AS INB_CC_UNFIN_FLEXIBLE_STAGE_CNT_360D         ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNFIN_FLEXIBLE_STAGE_AMT         ,0) ELSE 0 END) AS INB_CC_UNFIN_FLEXIBLE_STAGE_AMT_360D         ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNFIN_FLEXIBLE_STAGE_FEE         ,0) ELSE 0 END) AS INB_CC_UNFIN_FLEXIBLE_STAGE_FEE_360D         ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNFIN_MAIL_ORDER_STAGE_CNT       ,0) ELSE 0 END) AS INB_CC_UNFIN_MAIL_ORDER_STAGE_CNT_360D       ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNFIN_MAIL_ORDER_STAGE_AMT       ,0) ELSE 0 END) AS INB_CC_UNFIN_MAIL_ORDER_STAGE_AMT_360D       ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNFIN_MAIL_ORDER_STAGE_FEE       ,0) ELSE 0 END) AS INB_CC_UNFIN_MAIL_ORDER_STAGE_FEE_360D       ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNFIN_CASH_STAGE_CNT             ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_STAGE_CNT_360D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNFIN_CASH_STAGE_AMT             ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_STAGE_AMT_360D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNFIN_CASH_STAGE_FEE             ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_STAGE_FEE_360D             ,



	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNFIN_STAGE_CNT                  ,0) ELSE 0 END) AS INB_CC_UNFIN_STAGE_CNT_720D                  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNFIN_STAGE_AMT                  ,0) ELSE 0 END) AS INB_CC_UNFIN_STAGE_AMT_720D                  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNFIN_STAGE_FEE                  ,0) ELSE 0 END) AS INB_CC_UNFIN_STAGE_FEE_720D                  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNFIN_BILL_STAGE_CNT             ,0) ELSE 0 END) AS INB_CC_UNFIN_BILL_STAGE_CNT_720D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNFIN_BILL_STAGE_AMT             ,0) ELSE 0 END) AS INB_CC_UNFIN_BILL_STAGE_AMT_720D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNFIN_BILL_STAGE_FEE             ,0) ELSE 0 END) AS INB_CC_UNFIN_BILL_STAGE_FEE_720D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNFIN_CONSUME_FLEXIBLE_STAGE_CNT ,0) ELSE 0 END) AS INB_CC_UNFIN_CONSUME_FLEXIBLE_STAGE_CNT_720D ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNFIN_CONSUME_FLEXIBLE_STAGE_AMT ,0) ELSE 0 END) AS INB_CC_UNFIN_CONSUME_FLEXIBLE_STAGE_AMT_720D ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNFIN_CONSUME_FLEXIBLE_STAGE_FEE ,0) ELSE 0 END) AS INB_CC_UNFIN_CONSUME_FLEXIBLE_STAGE_FEE_720D ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNFIN_CASH_FLEXIBLE_STAGE_CNT    ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_FLEXIBLE_STAGE_CNT_720D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNFIN_CASH_FLEXIBLE_STAGE_AMT    ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_FLEXIBLE_STAGE_AMT_720D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNFIN_CASH_FLEXIBLE_STAGE_FEE    ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_FLEXIBLE_STAGE_FEE_720D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNFIN_FLEXIBLE_STAGE_CNT         ,0) ELSE 0 END) AS INB_CC_UNFIN_FLEXIBLE_STAGE_CNT_720D         ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNFIN_FLEXIBLE_STAGE_AMT         ,0) ELSE 0 END) AS INB_CC_UNFIN_FLEXIBLE_STAGE_AMT_720D         ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNFIN_FLEXIBLE_STAGE_FEE         ,0) ELSE 0 END) AS INB_CC_UNFIN_FLEXIBLE_STAGE_FEE_720D         ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNFIN_MAIL_ORDER_STAGE_CNT       ,0) ELSE 0 END) AS INB_CC_UNFIN_MAIL_ORDER_STAGE_CNT_720D       ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNFIN_MAIL_ORDER_STAGE_AMT       ,0) ELSE 0 END) AS INB_CC_UNFIN_MAIL_ORDER_STAGE_AMT_720D       ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNFIN_MAIL_ORDER_STAGE_FEE       ,0) ELSE 0 END) AS INB_CC_UNFIN_MAIL_ORDER_STAGE_FEE_720D       ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNFIN_CASH_STAGE_CNT             ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_STAGE_CNT_720D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNFIN_CASH_STAGE_AMT             ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_STAGE_AMT_720D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNFIN_CASH_STAGE_FEE             ,0) ELSE 0 END) AS INB_CC_UNFIN_CASH_STAGE_FEE_720D             ,



	------------消费 取现 等交易 TRAN

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_CONSUME_TXN_CNT           ,0) ELSE 0 END) AS INB_CC_CONSUME_TXN_CNT_30D            ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_CONSUME_TXN_AMT           ,0) ELSE 0 END) AS INB_CC_CONSUME_TXN_AMT_30D            ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_CASH_OUT_TXN_CNT          ,0) ELSE 0 END) AS INB_CC_CASH_OUT_TXN_CNT_30D           ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_CASH_OUT_TXN_AMT          ,0) ELSE 0 END) AS INB_CC_CASH_OUT_TXN_AMT_30D           ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_RETURN_TXN_CNT            ,0) ELSE 0 END) AS INB_CC_RETURN_TXN_CNT_30D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_RETURN_TXN_AMT            ,0) ELSE 0 END) AS INB_CC_RETURN_TXN_AMT_30D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNCANCEL_CASH_OUT_TXN_CNT ,0) ELSE 0 END) AS INB_CC_UNCANCEL_CASH_OUT_TXN_CNT_30D  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNCANCEL_CASH_OUT_TXN_AMT ,0) ELSE 0 END) AS INB_CC_UNCANCEL_CASH_OUT_TXN_AMT_30D  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNCANCEL_CONSUSME_TXN_CNT ,0) ELSE 0 END) AS INB_CC_UNCANCEL_CONSUSME_TXN_CNT_30D  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNCANCEL_CONSUSME_TXN_AMT ,0) ELSE 0 END) AS INB_CC_UNCANCEL_CONSUSME_TXN_AMT_30D  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNCANCEL_RETURN_TXN_CNT   ,0) ELSE 0 END) AS INB_CC_UNCANCEL_RETURN_TXN_CNT_30D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_UNCANCEL_RETURN_TXN_AMT   ,0) ELSE 0 END) AS INB_CC_UNCANCEL_RETURN_TXN_AMT_30D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_PAY_CNT                   ,0) ELSE 0 END) AS INB_CC_PAY_CNT_30D                    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=29 then coalesce( CC_PAY_AMT                   ,0) ELSE 0 END) AS INB_CC_PAY_AMT_30D                    ,



	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_CONSUME_TXN_CNT           ,0) ELSE 0 END) AS INB_CC_CONSUME_TXN_CNT_60            ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_CONSUME_TXN_AMT           ,0) ELSE 0 END) AS INB_CC_CONSUME_TXN_AMT_60            ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_CASH_OUT_TXN_CNT          ,0) ELSE 0 END) AS INB_CC_CASH_OUT_TXN_CNT_60D           ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_CASH_OUT_TXN_AMT          ,0) ELSE 0 END) AS INB_CC_CASH_OUT_TXN_AMT_60D           ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_RETURN_TXN_CNT            ,0) ELSE 0 END) AS INB_CC_RETURN_TXN_CNT_60D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_RETURN_TXN_AMT            ,0) ELSE 0 END) AS INB_CC_RETURN_TXN_AMT_60D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNCANCEL_CASH_OUT_TXN_CNT ,0) ELSE 0 END) AS INB_CC_UNCANCEL_CASH_OUT_TXN_CNT_60D  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNCANCEL_CASH_OUT_TXN_AMT ,0) ELSE 0 END) AS INB_CC_UNCANCEL_CASH_OUT_TXN_AMT_60D  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNCANCEL_CONSUSME_TXN_CNT ,0) ELSE 0 END) AS INB_CC_UNCANCEL_CONSUSME_TXN_CNT_60D  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNCANCEL_CONSUSME_TXN_AMT ,0) ELSE 0 END) AS INB_CC_UNCANCEL_CONSUSME_TXN_AMT_60D  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNCANCEL_RETURN_TXN_CNT   ,0) ELSE 0 END) AS INB_CC_UNCANCEL_RETURN_TXN_CNT_60D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_UNCANCEL_RETURN_TXN_AMT   ,0) ELSE 0 END) AS INB_CC_UNCANCEL_RETURN_TXN_AMT_60D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_PAY_CNT                   ,0) ELSE 0 END) AS INB_CC_PAY_CNT_60D                    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=59 then coalesce( CC_PAY_AMT                   ,0) ELSE 0 END) AS INB_CC_PAY_AMT_60D                    ,



	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_CONSUME_TXN_CNT           ,0) ELSE 0 END) AS INB_CC_CONSUME_TXN_CNT_90D            ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_CONSUME_TXN_AMT           ,0) ELSE 0 END) AS INB_CC_CONSUME_TXN_AMT_90D            ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_CASH_OUT_TXN_CNT          ,0) ELSE 0 END) AS INB_CC_CASH_OUT_TXN_CNT_90D           ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_CASH_OUT_TXN_AMT          ,0) ELSE 0 END) AS INB_CC_CASH_OUT_TXN_AMT_90D           ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_RETURN_TXN_CNT            ,0) ELSE 0 END) AS INB_CC_RETURN_TXN_CNT_90D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_RETURN_TXN_AMT            ,0) ELSE 0 END) AS INB_CC_RETURN_TXN_AMT_90D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNCANCEL_CASH_OUT_TXN_CNT ,0) ELSE 0 END) AS INB_CC_UNCANCEL_CASH_OUT_TXN_CNT_90D  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNCANCEL_CASH_OUT_TXN_AMT ,0) ELSE 0 END) AS INB_CC_UNCANCEL_CASH_OUT_TXN_AMT_90D  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNCANCEL_CONSUSME_TXN_CNT ,0) ELSE 0 END) AS INB_CC_UNCANCEL_CONSUSME_TXN_CNT_90D  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNCANCEL_CONSUSME_TXN_AMT ,0) ELSE 0 END) AS INB_CC_UNCANCEL_CONSUSME_TXN_AMT_90D  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNCANCEL_RETURN_TXN_CNT   ,0) ELSE 0 END) AS INB_CC_UNCANCEL_RETURN_TXN_CNT_90D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_UNCANCEL_RETURN_TXN_AMT   ,0) ELSE 0 END) AS INB_CC_UNCANCEL_RETURN_TXN_AMT_90D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_PAY_CNT                   ,0) ELSE 0 END) AS INB_CC_PAY_CNT_90D                    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=89 then coalesce( CC_PAY_AMT                   ,0) ELSE 0 END) AS INB_CC_PAY_AMT_90D                    ,



	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_CONSUME_TXN_CNT           ,0) ELSE 0 END) AS INB_CC_CONSUME_TXN_CNT_180D            ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_CONSUME_TXN_AMT           ,0) ELSE 0 END) AS INB_CC_CONSUME_TXN_AMT_180D            ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_CASH_OUT_TXN_CNT          ,0) ELSE 0 END) AS INB_CC_CASH_OUT_TXN_CNT_180D           ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_CASH_OUT_TXN_AMT          ,0) ELSE 0 END) AS INB_CC_CASH_OUT_TXN_AMT_180D           ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_RETURN_TXN_CNT            ,0) ELSE 0 END) AS INB_CC_RETURN_TXN_CNT_180D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_RETURN_TXN_AMT            ,0) ELSE 0 END) AS INB_CC_RETURN_TXN_AMT_180D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNCANCEL_CASH_OUT_TXN_CNT ,0) ELSE 0 END) AS INB_CC_UNCANCEL_CASH_OUT_TXN_CNT_180D  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNCANCEL_CASH_OUT_TXN_AMT ,0) ELSE 0 END) AS INB_CC_UNCANCEL_CASH_OUT_TXN_AMT_180D  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNCANCEL_CONSUSME_TXN_CNT ,0) ELSE 0 END) AS INB_CC_UNCANCEL_CONSUSME_TXN_CNT_180D  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNCANCEL_CONSUSME_TXN_AMT ,0) ELSE 0 END) AS INB_CC_UNCANCEL_CONSUSME_TXN_AMT_180D  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNCANCEL_RETURN_TXN_CNT   ,0) ELSE 0 END) AS INB_CC_UNCANCEL_RETURN_TXN_CNT_180D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_UNCANCEL_RETURN_TXN_AMT   ,0) ELSE 0 END) AS INB_CC_UNCANCEL_RETURN_TXN_AMT_180D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_PAY_CNT                   ,0) ELSE 0 END) AS INB_CC_PAY_CNT_180D                    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=179 then coalesce( CC_PAY_AMT                   ,0) ELSE 0 END) AS INB_CC_PAY_AMT_180D                    ,



	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_CONSUME_TXN_CNT           ,0) ELSE 0 END) AS INB_CC_CONSUME_TXN_CNT_360D            ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_CONSUME_TXN_AMT           ,0) ELSE 0 END) AS INB_CC_CONSUME_TXN_AMT_360D            ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_CASH_OUT_TXN_CNT          ,0) ELSE 0 END) AS INB_CC_CASH_OUT_TXN_CNT_360D           ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_CASH_OUT_TXN_AMT          ,0) ELSE 0 END) AS INB_CC_CASH_OUT_TXN_AMT_360D           ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_RETURN_TXN_CNT            ,0) ELSE 0 END) AS INB_CC_RETURN_TXN_CNT_360D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_RETURN_TXN_AMT            ,0) ELSE 0 END) AS INB_CC_RETURN_TXN_AMT_360D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNCANCEL_CASH_OUT_TXN_CNT ,0) ELSE 0 END) AS INB_CC_UNCANCEL_CASH_OUT_TXN_CNT_360D  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNCANCEL_CASH_OUT_TXN_AMT ,0) ELSE 0 END) AS INB_CC_UNCANCEL_CASH_OUT_TXN_AMT_360D  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNCANCEL_CONSUSME_TXN_CNT ,0) ELSE 0 END) AS INB_CC_UNCANCEL_CONSUSME_TXN_CNT_360D  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNCANCEL_CONSUSME_TXN_AMT ,0) ELSE 0 END) AS INB_CC_UNCANCEL_CONSUSME_TXN_AMT_360D  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNCANCEL_RETURN_TXN_CNT   ,0) ELSE 0 END) AS INB_CC_UNCANCEL_RETURN_TXN_CNT_360D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_UNCANCEL_RETURN_TXN_AMT   ,0) ELSE 0 END) AS INB_CC_UNCANCEL_RETURN_TXN_AMT_360D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_PAY_CNT                   ,0) ELSE 0 END) AS INB_CC_PAY_CNT_360D                    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=359 then coalesce( CC_PAY_AMT                   ,0) ELSE 0 END) AS INB_CC_PAY_AMT_360D                    ,



	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_CONSUME_TXN_CNT           ,0) ELSE 0 END) AS INB_CC_CONSUME_TXN_CNT_720D            ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_CONSUME_TXN_AMT           ,0) ELSE 0 END) AS INB_CC_CONSUME_TXN_AMT_720D            ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_CASH_OUT_TXN_CNT          ,0) ELSE 0 END) AS INB_CC_CASH_OUT_TXN_CNT_720D           ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_CASH_OUT_TXN_AMT          ,0) ELSE 0 END) AS INB_CC_CASH_OUT_TXN_AMT_720D           ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_RETURN_TXN_CNT            ,0) ELSE 0 END) AS INB_CC_RETURN_TXN_CNT_720D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_RETURN_TXN_AMT            ,0) ELSE 0 END) AS INB_CC_RETURN_TXN_AMT_720D             ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNCANCEL_CASH_OUT_TXN_CNT ,0) ELSE 0 END) AS INB_CC_UNCANCEL_CASH_OUT_TXN_CNT_720D  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNCANCEL_CASH_OUT_TXN_AMT ,0) ELSE 0 END) AS INB_CC_UNCANCEL_CASH_OUT_TXN_AMT_720D  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNCANCEL_CONSUSME_TXN_CNT ,0) ELSE 0 END) AS INB_CC_UNCANCEL_CONSUSME_TXN_CNT_720D  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNCANCEL_CONSUSME_TXN_AMT ,0) ELSE 0 END) AS INB_CC_UNCANCEL_CONSUSME_TXN_AMT_720D  ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNCANCEL_RETURN_TXN_CNT   ,0) ELSE 0 END) AS INB_CC_UNCANCEL_RETURN_TXN_CNT_720D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_UNCANCEL_RETURN_TXN_AMT   ,0) ELSE 0 END) AS INB_CC_UNCANCEL_RETURN_TXN_AMT_720D    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_PAY_CNT                   ,0) ELSE 0 END) AS INB_CC_PAY_CNT_720D                    ,

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 then coalesce( CC_PAY_AMT                   ,0) ELSE 0 END) AS INB_CC_PAY_AMT_720D                    ,



	------近720天内 信用卡消费 取现/转出大于0天数统计  分期大于0天数统计

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 AND CC_PAY_CNT>0 			THEN 1 ELSE 0 END) AS INB_CC_PAY_DAYS_720D			, 						---信用卡支出交易笔数大于0的天数

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 AND CC_CONSUME_TXN_CNT>0 	THEN 1 ELSE 0 END) AS INB_CC_CONSUME_TXN_DAYS_720D	, 		---信用卡消费交易笔数大于0的天数

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 AND CC_CASH_OUT_TXN_CNT>0 	THEN 1 ELSE 0 END) AS INB_CC_CASH_OUT_TXN_DAYS_720D	,  	---信用卡取现/转出交易笔数大于0的天数

	SUM(CASE WHEN DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719 AND CC_STAGE_CNT>0 			THEN 1 ELSE 0 END) AS INB_CC_STAGE_DAYS_720D  					---信用卡分期交易笔数大于0的天数



FROM lab_bigdata_dev.risk_cst_like_sample A

LEFT JOIN lab_bigdata_dev.tbl29_rfm_stat_credit_card_risk_cst_like_20240330 B ON A.CST_ID=B.CST_ID

AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')>=0 AND DATEDIFF(TO_DATE(A.DATE_NOW,'YYYYMMDD'),TO_DATE(B.INP_DATE,'YYYYMMDD'),'DD')<=719

GROUP BY

A.CST_ID,

A.DATE_NOW

;



------###---###---###---print(&quot;信用卡指标任务耗时：{0:.0f}秒&quot; .format(time.time() - start_time))

---print(&quot;信用卡指标计算完成,开始计算征信指标&quot;)

------###---###---###end


**用例和商机比对.sql
--03关系树看个人，对公拓面看个人，批次级别

 SELECT  T.CASE_NO

        ,T.CASE_NAME

		,t.case_phase

		,t.exec_Date

       ,COALESCE(T2.NUM2,0) + COALESCE(T3.NUM3,0) AS 下发客户数

        ,T.转化客户数

        ,T.查看客户数

        ,T.跟进客户数

        ,T.查看且转化客户数

        ,T.跟进且转化客户数

		,ROUND(COALESCE(T.转化客户数,0) / ( COALESCE(T2.NUM2,0) + COALESCE(T3.NUM3,0) ), 4) 转化率

FROM    (

            SELECT  CASE_NO

                    ,CASE_NAME

					,case_phase

		         ,exec_Date

                    ,SUM( IS_CONVERT * IS_SLF ) 转化客户数

					,SUM( VIEW_FLAG * IS_SLF ) 查看客户数

					,SUM( IS_FOLLOW_UP* IS_SLF ) 跟进客户数

					,SUM(CASE  WHEN  is_slf=1 and IS_CONVERT=1 and VIEW_FLAG=1 THEN 1  ELSE 0  END) 查看且转化客户数

					,SUM(CASE  WHEN  is_slf=1 and IS_FOLLOW_UP=1 and IS_CONVERT=1 THEN 1  ELSE 0 END) 跟进且转化客户数

            FROM    (

                        SELECT  CASE_NO

                                ,CASE_NAME

									,case_phase

		         					,exec_Date

                                ,IND_BT_COM_CTR

                                ,IS_SLF

                                ,IND_CR_CRD_APLY

                                ,VIEW_FLAG

                                ,IS_FOLLOW_UP

                                ,CASE WHEN (CASE_NAME LIKE '%配信用卡%' or case_name LIKE '%贷款配卡%') THEN IND_CR_CRD_APLY  WHEN case_name LIKE '%续贷%'    THEN IND_BT_COM_CTR ELSE is_convert  END AS is_convert

                        FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_AFF_ANLS_DAPAN

                        WHERE   case_name IN ( '代发工资户综合经营' , '贷款配卡交叉销售' , '较高AUM客户配信用卡' , '贷款流失挽回' , '个贷客户对公拓面' , '经营性贷款提额' , '小额续贷' , '企业关系树' , '无贷担保人配贷' , '小鱼bank客户配信用卡' , '基金挖潜' , '循环贷款促用信' , '理财流失挽回' , '理财客户拉新' , '信用卡配贷' )

                        AND     EXEC_DATE >= '20230601'

                        and     due_date>='20231231'

                        AND     CASE_NO IS NOT NULL

                        AND     ( SAMPLE_CLASS LIKE '%实验%'   OR SAMPLE_CLASS IS NULL )

                        --剔除商机故障无法下发

                        AND     CONCAT(CASE_NAME, CASE_PHASE) NOT IN ( '理财流失挽回allround202302' , '理财流失挽回allround202303' , '理财流失挽回allround202304' , '理财流失挽回allround202308' , '理财流失挽回allround202311' , '理财流失挽回allround202312' , '理财客户拉新allround202302' , '理财客户拉新allround202303' , '理财客户拉新allround202308' , '理财客户拉新allround202309' , '理财客户拉新allround202310' , '信用卡配贷trial12' '信用卡配贷trial07' , '信用卡配贷trial08' , '信用卡配贷trial09' , '信用卡配贷trial10' , '信用卡配贷trial11' , '信用卡配贷trial12' , '无贷担保人配贷allround12_2304' , '贷款流失挽回allround11_2304' , '经营性贷款提额allround11_2304','循环贷款促用信allround11_2304','循环贷款促用信allround18_2311', '小额续贷allround06' , '个贷客户对公拓面allround13_2309' )

                    ) T0

            GROUP BY CASE_NO , CASE_NAME,	case_phase ,exec_Date

        ) T

LEFT JOIN    (

                 SELECT  COUNT(*) NUM2

                         ,CASE_NO

						,case_phase

		         		,exec_Date

                         ,CASE_NAME

                 FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_CST_LIST T1

                 WHERE   case_name IN ( '代发工资户综合经营' , '贷款配卡交叉销售' , '较高AUM客户配信用卡' , '贷款流失挽回' , '个贷客户对公拓面' , '经营性贷款提额' , '小额续贷' , '企业关系树' , '无贷担保人配贷' , '小鱼bank客户配信用卡' , '基金挖潜' , '循环贷款促用信' , '理财流失挽回' , '理财客户拉新' , '信用卡配贷' )

                 AND     EXEC_DATE >= '20230601'

                 AND     CASE_NO IS NOT NULL

                 AND     ( SAMPLE_CLASS LIKE '%实验%'

                     OR SAMPLE_CLASS IS NULL )

                 --剔除商机故障无法下发

                 AND     CONCAT(CASE_NAME, CASE_PHASE) NOT IN ( '理财流失挽回allround202302' , '理财流失挽回allround202303' , '理财流失挽回allround202304' , '理财流失挽回allround202308' , '理财流失挽回allround202311' , '理财流失挽回allround202312' , '理财客户拉新allround202302' , '理财客户拉新allround202303' , '理财客户拉新allround202308' , '理财客户拉新allround202309' , '理财客户拉新allround202310' , '信用卡配贷trial12' '信用卡配贷trial07' , '信用卡配贷trial08' , '信用卡配贷trial09' , '信用卡配贷trial10' , '信用卡配贷trial11' , '信用卡配贷trial12' , '无贷担保人配贷allround12_2304' , '贷款流失挽回allround11_2304' , '经营性贷款提额allround11_2304','循环贷款促用信allround11_2304','循环贷款促用信allround18_2311', '小额续贷allround06' , '个贷客户对公拓面allround13_2309' )

                 GROUP BY CASE_NO , CASE_NAME,case_phase,exec_Date

             ) T2

ON      T.CASE_NO = T2.CASE_NO and T.CASE_phase = T2.CASE_phase

LEFT JOIN    (

                 SELECT  COUNT(*) NUM3

                         ,CASE_NO

						 	,case_phase

		         		,exec_Date

                         ,CASE_NAME

                 FROM    LAB_BIGDATA_DEV.WUSHAN_MARKET_CASE_PTT_CST_LIST T1 --潜客

                 WHERE   case_name IN ( '代发工资户综合经营' , '贷款配卡交叉销售' , '较高AUM客户配信用卡' , '贷款流失挽回' , '个贷客户对公拓面' , '经营性贷款提额' , '小额续贷' , '企业关系树' , '无贷担保人配贷' , '小鱼bank客户配信用卡' , '基金挖潜' , '循环贷款促用信' , '理财流失挽回' , '理财客户拉新' , '信用卡配贷' )

                 AND     EXEC_DATE >= '20230101'

                 AND     CASE_NO IS NOT NULL

                 AND     ( SAMPLE_CLASS LIKE '%实验%' OR SAMPLE_CLASS IS NULL )

                 --剔除商机故障无法下发

                 AND     CONCAT(CASE_NAME, CASE_PHASE) NOT IN ( '理财流失挽回allround202302' , '理财流失挽回allround202303' , '理财流失挽回allround202304' , '理财流失挽回allround202308' , '理财流失挽回allround202311' , '理财流失挽回allround202312' , '理财客户拉新allround202302' , '理财客户拉新allround202303' , '理财客户拉新allround202308' , '理财客户拉新allround202309' , '理财客户拉新allround202310' , '信用卡配贷trial12' '信用卡配贷trial07' , '信用卡配贷trial08' , '信用卡配贷trial09' , '信用卡配贷trial10' , '信用卡配贷trial11' , '信用卡配贷trial12' , '无贷担保人配贷allround12_2304' , '贷款流失挽回allround11_2304' , '经营性贷款提额allround11_2304','循环贷款促用信allround11_2304','循环贷款促用信allround18_2311', '小额续贷allround06' , '个贷客户对公拓面allround13_2309' )

                 GROUP BY CASE_NO , CASE_NAME,case_phase,exec_Date

             ) T3

ON      T.CASE_NO = T3.CASE_NO and T.CASE_phase = T3.CASE_phase

order by T.CASE_NO

        ,T.CASE_NAME

		,t.case_phase

		,t.exec_Date

;
**跑批发布_111.sql
-- ODPS SQL
-- **********************************************************************
-- 功能描述:
-- **
-- 创建者: 大数据部实验室发布账号
-- 创建日期: 2022-03-24 09:27:15
-- **
-- 修改日志:
-- 修改日期          修改人          修改内容
-- **
-- **********************************************************************
--drop table if EXISTS lab_bigdata_dev.mall_chaogui_2nd;
truncate table lab_bigdata_dev.mall_chaogui_2nd;
insert into lab_bigdata_dev.mall_chaogui_2nd
select t1.dt  日期
	,t1.month 月份
     ,t1.fh_nm 分行名称
     ,t1.zh_nm 支行名称
	,t1.last_day 昨日
	,t1.last_month 上月末
	,t2.当月累计交易用户数
	,t5.当月累计交易用户数 as 上月同期当月累计交易用户数
	,t6.当月累计交易用户数 as 昨日当月累计交易用户数
	,t2.月累计订单笔数
	,t5.月累计订单笔数 as 上月同期月累计订单笔数
	,t6.月累计订单笔数 as 昨日月累计订单笔数
	,t2.月累计在线邮寄订单
	,t5.月累计在线邮寄订单 as 上月同期月累计在线邮寄订单
	,t6.月累计在线邮寄订单 as 昨日月累计在线邮寄订单
	,t2.月累计自提订单
	,t5.月累计自提订单 as 上月同期月累计自提订单
	,t6.月累计自提订单 as 昨日月累计自提订单

	,t2.月累计核销订单数
	,t5.月累计核销订单数 as 上月同期月累计核销订单数
	,t6.月累计核销订单数 as 昨日月累计核销订单数
	,t2.月累计交易金额
	,t5.月累计交易金额 as 上月同期月累计交易金额
	,t6.月累计交易金额 as 昨日月累计交易金额
	,t3.累计注册用户总数
	,t3.新增用户数
	,t7.新增用户数 as 昨天新增用户数
	,t3.活跃用户数
	,t7.活跃用户数 as 昨日活跃用户数
	,t2.下单用户数
	,t6.下单用户数 as 昨日下单用户数
	,t2.商品兑换量
	,t6.商品兑换量 as 昨日商品兑换量
	,t2.订单笔数
	,t6.订单笔数 as 昨日订单笔数
	,t2.在线邮寄订单数
	,t6.在线邮寄订单数 as 昨日在线邮寄订单数
	,t2.自提订单数
	,t6.自提订单数 as 昨日自提订单数
	,t2.核销订单笔数
	,t6.核销订单笔数 as 昨日核销订单笔数
	,t2.交易金额
	,t6.交易金额 as 昨天交易金额
	,t4.配备超柜数
	,case when t4.配备超柜数>0 then 1 else 0 end as 是否配备超柜
	,t2.交易用户数
	,t2.核销商品件数
	,t8.综合积分客户数 支行综合积分客户数
	,case when t2.订单笔数>0  then 1 else 0 end as 今日支行是否有订单
	,case when t6.订单笔数>0  then 1 else 0 end as 昨日支行是否有订单
from lab_bigdata_dev.date_chaogui_basic t1  --支行、日期筛选基础表
left join lab_bigdata_dev.mall_chaogui_order_stas t2 on t2.dt=t1.dt and t2.zh_nm=t1.zh_nm  --交易订单
left join lab_bigdata_dev.mall_chaogui_cst_stas t3  on t3.dt=t1.dt and t3.zh_nm=t1.zh_nm  --注册客户数
left join (
			select 所属机构
					,count(distinct 设备终端号) 配备超柜数
			from lab_bigdata_dev.mall_chaogui_zh
			group by 所属机构
		  ) t4 on t4.所属机构=t1.zh_nm --超柜设备

left join lab_bigdata_dev.mall_chaogui_order_stas t5 on t5.dt=t1.last_month and t5.zh_nm=t1.zh_nm  --交易订单上月同期，其实是上月末
left join lab_bigdata_dev.mall_chaogui_order_stas t6 on t6.dt=t1.last_day and t6.zh_nm=t1.zh_nm  --交易订单昨日

left join lab_bigdata_dev.mall_chaogui_cst_stas t7  on t7.dt=t1.last_day and t7.zh_nm=t1.zh_nm  --注册客户数昨日
left join lab_bigdata_dev.sirs_cts_cnt_zh t8 on t8.dt=t1.dt and t8.主管户支行名称=t1.zh_nm
;
**跑批发布_g交接分析20231231.sql
--- 未交接表主表 合同、贷款规模
DROP TABLE IF EXISTS lab_bigdata_dev.202312_no_mdf_amt; --67万 全量客户贷款规模
CREATE TABLE IF NOT EXISTS lab_bigdata_dev.202312_no_mdf_amt AS
SELECT t.cst_id
		,'20231231'     AS MDF_DT  --没有交接的客户，人为给一个时间点，当做交接时间
		,c.prm_org_id   as mdf_qorg_cd ---变更前机构代码
		,c.prm_mgr_id   as mdf_qppl_cd ---变更前人员代码 --主管护客户经理工号
		,c.prm_org_id   as aft_mdf_org_cd ---变更后机构代码
		,c.prm_mgr_id   as aft_mdf_ppl_cd ---变更后人员代码 --主管护客户经理工号
		,'全量客户' mdf_type  --全量客户类型：全量客户 全量客户
		,min(t.busi_ctr_id) busi_ctr_id
	,sum(t.ctr_amt) AS ctr_amt
FROM    edw.dim_bus_loan_ctr_inf_dd t --信贷合同信息
LEFT JOIN    adm_pub.adm_csm_cbas_mng_inf_dd AS c --客户集市-客户基础-客户管户信息
ON      t.cst_id = c.cst_id
AND     c.dt = '20231231'
WHERE   t.dt = '20231231'
AND     t.bus_cd NOT IN ( 'A' , 'B' , 'H' , 'I' , 'O' , 'P' ) --剔除 员工贷款
AND     ( t.chnl_cd <> 'L08' OR t.pd_cd <> '201050101040335' ) --剔除 小鱼分期
AND     t.pd_cd <> '201050101040332' --剔除 蚂蚁借呗
AND     t.pd_cd <> '201050101040319' --剔除百度分期贷
AND     ( t.pd_cd NOT IN ( '201050102010146' , '201050101040348' )  OR t.frz_sts_cd <> '' ) --剔除未签约的泰e贷
AND     (    (
					( t.ctr_bal > 0  --余额>0
					  OR ( t.ctr_bal IS NULL AND     nvl(t.crc_ind, '0') = '0' )  --非循环贷 余额为空
					  OR ( ( nvl(t.crc_ind, '0') <> '0'   OR t.pd_cd LIKE '2010503%' ) AND     ( t.ctr_bal = 0  OR t.ctr_bal IS NULL )  AND     t.apnt_mtu_dt >= t.dt )  --（循环贷 或 随贷通） 且 余额为0 且 未到期
					)
				 AND     nvl(t.frz_sts_cd, ' ') NOT IN ( '3' , '4' )  --3	到期失效  4	终止失效  冻结状态非到期失效，非终止失效

				)
		  OR ( t.ctr_bal > 0 AND     t.pd_cd LIKE '2010503%'  AND     t.apnt_mtu_dt <= t.dt  AND     t.frz_sts_cd IN ( '3' , '4' ) )  --余额>0  且 随贷通 且到期 且 冻结状态是到期失效、终止失效
		  ) ----未终结、未到期业务

AND     length(t.cst_id) = '10' --剔除合作行客户
group by t.cst_id
		,'20231231'       --没有交接的客户，人为给一个时间点，当做交接时间
		,c.prm_org_id   ---变更前机构代码
		,c.prm_mgr_id    ---变更前人员代码 --主管护客户经理工号
		,'全量客户'  --全量客户类型：全量客户 全量客户
--where t.cst_id<>'1696275240'  --交接表客户号匹配出错
;

--- 主表，就是样本表，包括全量客户+未全量客户： 981274，全量客户23万，未全量客户75万
drop table if exists lab_bigdata_dev.202312_mdf_nomdf_sample;
create table if not exists lab_bigdata_dev.202312_mdf_nomdf_sample as --
select  cst_id
    ,MDF_DT
    ,mdf_qorg_cd ---变更前机构代码
    ,mdf_qppl_cd ---变更前人员代码
    ,aft_mdf_org_cd ---变更后机构代码
    ,aft_mdf_ppl_cd ---变更后人员代码
   ,busi_ctr_id
   ,'交接客户' mdf_type --全量客户类型：全量客户 未全量客户
    ,ctr_amt as mdf_ctr_amt
from
	(select *
		,row_number() over(partition by cst_id order by MDF_DT asc) as ranking
	from
		(select t1.obj_id as busi_ctr_id
			,t2.cst_id
			,SUBSTR(MDF_TM, 1, 8) as MDF_DT  --变更时间
			,mdf_qorg_cd   ---变更前机构代码
			,mdf_qppl_cd  -----变更前人员代码
			,aft_mdf_org_cd  ----变更后机构代码
			,aft_mdf_ppl_cd  ----变更后人员代码
			,t2.ctr_amt
		from EDW.DWD_BUS_LOAN_MNG_MDF_RCD_DD t1  --管理人变更记录
		left join  edw.dim_bus_loan_ctr_inf_dd t2
		on t1.obj_id = t2.busi_ctr_id
		and t2.dt = '20231231'
		WHERE   t1.DT = '20231231'
		AND     t1.OBJ_TYP = 'Loan'
		AND     SUBSTR(t1.MDF_TM, 1, 8) >= '20230101'  --变更时间
		AND     SUBSTR(t1.MDF_TM, 1, 8) <= '20231231'
		and     t1.obj_id is not null
	) ss
) sss
where ranking = 1   ----全量客户226726	226725
and coalesce(cst_id,'')<>''
union
--未全量客户
select  cst_id
    ,MDF_DT
    ,mdf_qorg_cd ---变更前机构代码
    ,mdf_qppl_cd ---变更前人员代码
    ,aft_mdf_org_cd ---变更后机构代码
    ,aft_mdf_ppl_cd ---变更后人员代码
	,busi_ctr_id
	,mdf_type
    ,ctr_amt as ctr_amt
from lab_bigdata_dev.202312_no_mdf_amt
where coalesce(cst_id,'')<>''
;


---交接前后日期 ，前3个月，后12个月，如果后3个月超过当前时间，则取当前时间
drop table if exists lab_bigdata_dev.202312_mdf_data;
create table if not exists lab_bigdata_dev.202312_mdf_data as
select cst_id
  ,MDF_DT
  ,mdf_type
  ,mdf_bfr_12_month
  ,mdf_bfr_11_month
  ,mdf_bfr_10_month
  ,mdf_bfr_9_month
  ,mdf_bfr_8_month
  ,mdf_bfr_7_month
  ,mdf_bfr_6_month
  ,mdf_bfr_5_month
  ,mdf_bfr_4_month
  ,mdf_bfr_3_month
  ,mdf_bfr_2_month
  ,mdf_bfr_1_month
  ,min(mdf_aft_1_month) as mdf_aft_1_month
  ,min(mdf_aft_2_month) as mdf_aft_2_month
  ,min(mdf_aft_3_month) as mdf_aft_3_month
  ,min(mdf_aft_4_month) as mdf_aft_4_month
  ,min(mdf_aft_5_month) as mdf_aft_5_month
  ,min(mdf_aft_6_month) as mdf_aft_6_month
  ,min(mdf_aft_7_month) as mdf_aft_7_month
  ,min(mdf_aft_8_month) as mdf_aft_8_month
  ,min(mdf_aft_9_month) as mdf_aft_9_month
  ,min(mdf_aft_10_month) as mdf_aft_10_month
  ,min(mdf_aft_11_month) as mdf_aft_11_month
  ,min(mdf_aft_12_month) as mdf_aft_12_month
from
(
select  cst_id
    ,MDF_DT
	,mdf_type
	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-12)) as string),'-','') as mdf_bfr_12_month
	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-11)) as string),'-','') as mdf_bfr_11_month
	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-10)) as string),'-','') as mdf_bfr_10_month
	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-9)) as string),'-','') as mdf_bfr_9_month
	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-8)) as string),'-','') as mdf_bfr_8_month
	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-7)) as string),'-','') as mdf_bfr_7_month
	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-6)) as string),'-','') as mdf_bfr_6_month
	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-5)) as string),'-','') as mdf_bfr_5_month
	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-4)) as string),'-','') as mdf_bfr_4_month
	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-3)) as string),'-','') as mdf_bfr_3_month
	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-2)) as string),'-','') as mdf_bfr_2_month
	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-1)) as string),'-','') as mdf_bfr_1_month

    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),1)) as string),'-','') as mdf_aft_1_month
    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),2)) as string),'-','') as mdf_aft_2_month
    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),3)) as string),'-','') as mdf_aft_3_month
    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),4)) as string),'-','') as mdf_aft_4_month
    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),5)) as string),'-','') as mdf_aft_5_month
    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),6)) as string),'-','') as mdf_aft_6_month
    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),7)) as string),'-','') as mdf_aft_7_month
    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),8)) as string),'-','') as mdf_aft_8_month
    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),9)) as string),'-','') as mdf_aft_9_month
    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),10)) as string),'-','') as mdf_aft_10_month
    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),11)) as string),'-','') as mdf_aft_11_month
    ,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),12)) as string),'-','') as mdf_aft_12_month
from lab_bigdata_dev.202312_mdf_nomdf_sample
union all
select cst_id
    ,MDF_DT
	,mdf_type
	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-12)) as string),'-','') as mdf_bfr_12_month
	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-11)) as string),'-','') as mdf_bfr_11_month
	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-10)) as string),'-','') as mdf_bfr_10_month
	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-9)) as string),'-','') as mdf_bfr_9_month
	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-8)) as string),'-','') as mdf_bfr_8_month
	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-7)) as string),'-','') as mdf_bfr_7_month
	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-6)) as string),'-','') as mdf_bfr_6_month
	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-5)) as string),'-','') as mdf_bfr_5_month
	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-4)) as string),'-','') as mdf_bfr_4_month
	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-3)) as string),'-','') as mdf_bfr_3_month
	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-2)) as string),'-','') as mdf_bfr_2_month
	,replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-1)) as string),'-','') as mdf_bfr_1_month
    ,'20240630' as mdf_aft_1_month
    ,'20240630' as mdf_aft_2_month
    ,'20240630' as mdf_aft_3_month
    ,'20240630' as mdf_aft_4_month
    ,'20240630' as mdf_aft_5_month
    ,'20240630' as mdf_aft_6_month
    ,'20240630' as mdf_aft_7_month
    ,'20240630' as mdf_aft_8_month
    ,'20240630' as mdf_aft_9_month
    ,'20240630' as mdf_aft_10_month
    ,'20240630' as mdf_aft_11_month
    ,'20240630' as mdf_aft_12_month
from lab_bigdata_dev.202312_mdf_nomdf_sample
) ss
group by cst_id
  ,MDF_DT
  ,mdf_type
  ,mdf_bfr_12_month
  ,mdf_bfr_11_month
  ,mdf_bfr_10_month
  ,mdf_bfr_9_month
  ,mdf_bfr_8_month
  ,mdf_bfr_7_month
  ,mdf_bfr_6_month
  ,mdf_bfr_5_month
  ,mdf_bfr_4_month
  ,mdf_bfr_3_month
  ,mdf_bfr_2_month
  ,mdf_bfr_1_month;


----有效户标识
drop table if exists lab_bigdata_dev.202312_mdf_data_efe_ind;
create table if not exists lab_bigdata_dev.202312_mdf_data_efe_ind as
select t1.cst_id
    ,MDF_DT
	,mdf_type
    ,max(case when t2.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then t2.efe_dep_cst_ind end) as efe_dep_cst_ind_bfr ----有效存款户
    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),3)) as string),'-',''),'20240630') then t2.efe_dep_cst_ind end) as efe_dep_cst_ind_aft_3_month
    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),6)) as string),'-',''),'20240630') then t2.efe_dep_cst_ind end) as efe_dep_cst_ind_aft_6_month
    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-',''),'20240630') then t2.efe_dep_cst_ind end) as efe_dep_cst_ind_aft_12_month
    ,max(case when t2.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then t2.efe_loan_cst_ind end) as efe_loan_cst_ind_bfr ----有效信贷户
    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),3)) as string),'-',''),'20240630') then t2.efe_loan_cst_ind end) as efe_loan_cst_ind_aft_3_month
    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),6)) as string),'-',''),'20240630') then t2.efe_loan_cst_ind end) as efe_loan_cst_ind_aft_6_month
    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-',''),'20240630') then t2.efe_loan_cst_ind end) as efe_loan_cst_ind_aft_12_month

    ,max(case when t2.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then t2.efe_cst_ind end) as efe_cst_ind_bfr ----有效户
    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),3)) as string),'-',''),'20240630') then t2.efe_cst_ind end) as efe_cst_ind_aft_3_month
    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),6)) as string),'-',''),'20240630') then t2.efe_cst_ind end) as efe_cst_ind_aft_6_month
    ,max(case when t2.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-',''),'20240630') then t2.efe_cst_ind end) as efe_cst_ind_aft_12_month
from lab_bigdata_dev.202312_mdf_data t1
left join adm_pub.adm_csm_cbas_ind_inf_dd t2
on t1.cst_id = t2.cst_id
    and t2.dt in
    (
	select distinct mdf_bfr_1_month from lab_bigdata_dev.202312_mdf_data
    union
    select distinct mdf_aft_3_month from lab_bigdata_dev.202312_mdf_data
    union
    select distinct mdf_aft_6_month from lab_bigdata_dev.202312_mdf_data
    union
    select distinct mdf_aft_12_month from lab_bigdata_dev.202312_mdf_data
    ) ----交接前1个月
   -- and t2.dt >= replace(cast(last_day(add_months(to_date('20230101','yyyymmdd'),-1)) as string),'-','')  --2023年5月底
group by t1.cst_id
    ,MDF_DT,mdf_type;


-----存款月日均
drop table if exists lab_bigdata_dev.202312_mdf_data_dep;
create table if not exists lab_bigdata_dev.202312_mdf_data_dep as
select t1.cst_id
    ,t1.MDF_DT,mdf_type
	,sum(case when t3.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then coalesce(t3.last_360_days_gl_bal_acml,0) end)/360 as last_360_days_gl_bal_avg_bfr
    ,sum(case when t3.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then coalesce(t3.last_90_days_gl_bal_acml,0) end)/90 as last_90_days_gl_bal_avg_bfr
    ,sum(case when t3.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),6)) as string),'-',''),'20240630')  then coalesce(t3.last_180_days_gl_bal_acml,0) end)/180 as last_180_days_gl_bal_avg_aft
    ,sum(case when t3.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','') ,'20240630') then coalesce(t3.last_360_days_gl_bal_acml,0) end)/360 as last_360_days_gl_bal_avg_aft
from lab_bigdata_dev.202312_mdf_data t1
left join edw.dim_bus_dep_act_inf_dd t2
on t1.cst_id = t2.cst_id and t2.dt = '20240630'
left join edw.dws_bus_dep_act_acm_inf_dd t3
on t2.dep_act_id = t3.dep_act_id
    and t3.dt in
    (
	select distinct mdf_bfr_1_month from lab_bigdata_dev.202312_mdf_data
    union
    select distinct mdf_aft_6_month from lab_bigdata_dev.202312_mdf_data
    union
    select distinct mdf_aft_12_month from lab_bigdata_dev.202312_mdf_data
    )
   -- and t3.dt >= replace(cast(last_day(add_months(to_date('20230101','yyyymmdd'),-1)) as string),'-','')
group by t1.cst_id,t1.MDF_DT,mdf_type;


--select * from lab_bigdata_dev.202312_mdf_data_loan
---贷款月日均
drop table if exists lab_bigdata_dev.202312_mdf_data_loan;
create table if not exists lab_bigdata_dev.202312_mdf_data_loan as
select t1.cst_id
    ,t1.MDF_DT,mdf_type
	,sum(case when t3.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then coalesce(t3.last_360_days_prcp_bal_acml,0) end)/360 as last_360_days_prcp_bal_avg_bfr
    ,sum(case when t3.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then coalesce(t3.last_90_days_prcp_bal_acml,0) end)/90 as last_90_days_prcp_bal_avg_bfr
    ,sum(case when t3.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),6)) as string),'-',''),'20240630') then coalesce(t3.last_180_days_prcp_bal_acml,0) end)/180 as last_180_days_prcp_bal_avg_aft
    ,sum(case when t3.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-',''),'20240630') then coalesce(t3.last_360_days_prcp_bal_acml,0) end)/360 as last_360_days_prcp_bal_avg_aft
from lab_bigdata_dev.202312_mdf_data t1
left join edw.loan_business_contract t2
on t1.cst_id = t2.customerid and t2.dt = '20240630'
left join edw.dws_bus_loan_dbil_acm_inf_dd t3
on t2.serialno = t3.bus_ctr_id
    and t3.dt in
    (select distinct mdf_bfr_1_month from lab_bigdata_dev.202312_mdf_data
    union
    select distinct mdf_aft_6_month from lab_bigdata_dev.202312_mdf_data
    union
    select distinct mdf_aft_12_month from lab_bigdata_dev.202312_mdf_data )
   -- and t3.dt >= replace(cast(last_day(add_months(to_date('20230101','yyyymmdd'),-1)) as string),'-','')
group by t1.cst_id
    ,t1.MDF_DT,mdf_type
;


---续贷情况
drop table if exists lab_bigdata_dev.202312_mdf_data_cur_rnw;
create table if not exists lab_bigdata_dev.202312_mdf_data_cur_rnw as
select t1.cst_id
    ,t1.MDF_DT,mdf_type
    ,max(case when t2.cst_id is not null then 1 else 0 end) as is_loan_finish  ----  交接后12个月结清
    ,max(case when SUBSTR(T2.RNW_TYPE, 1, 1) IN ( '1' , '2' ) then 1 else 0 end) as is_loan_continue ---- 交接后12个月是否存在续贷 续贷类型：1-客户本身续贷 2-同一风险控制号续贷
from lab_bigdata_dev.202312_mdf_data t1
left join app_ado.FCT_SAM_RSK_CST_LN_PYF_LST_CUR_MON t2 --近一个月经营性客户续贷管理清单(同一风险控制号) 20201231
on t1.cst_id = t2.cst_id
    and t2.dt > t1.MDF_DT   ---交接后
    and t2.dt <=  replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')   ---交接后12个月内
    and t2.dt >= '20230101'
group by t1.cst_id,t1.MDF_DT,mdf_type;


---整取存款续存情况
drop table if exists lab_bigdata_dev.202312_mdf_data_xu_cun;
create table if not exists lab_bigdata_dev.202312_mdf_data_xu_cun as
select t1.CST_ID
    ,t1.MDF_DT,mdf_type
    ,MAX(CASE WHEN
 (
                T2.ACT_DSTR_ACT_DT >= t1.MDF_DT    --账户销户日期
                and t2.ACT_DSTR_ACT_DT <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')
            )  ----销户
        or (
                T3.TRX_DT >=  t1.MDF_DT
                AND T3.TRX_DT <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')  ---到期
           ) THEN '1' ELSE '0' END) AS IS_CUR_DSTR_EXPIRE  --到期或销户
    ,MAX(CASE WHEN
            (
                T4.TRX_DT >= T1.MDF_DT
                AND T4.TRX_DT <=replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')
        )        -----自动转存
        or (
                T2.OPN_DT >= T1.MDF_DT
                AND T2.OPN_DT <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')
        )   then '1' else '0' end) as  IS_CUR_CONTINUE     ------续存
from lab_bigdata_dev.202312_mdf_data t1
left join edw.dim_bus_dep_act_inf_dd t2
on t1.cst_id = t2.cst_id
    and t2.dt = '20240630'
    and t2.DEP_CLS_CD in ('25','26')   ----个人整存整取存款、个人银行卡整存整取存款
LEFT JOIN EDW.DWD_BUS_DEP_BAL_CHG_DTL_DI t3 --最小Dt19980731
ON T2.DEP_ACT_ID = T3.DEP_ACT_ID
    AND T3.DT <= '20240630'
    AND t3.CRD_AND_DBT_IND = 'D'  --借贷标志：转出
    and T3.DT >= '20230101'
    AND COALESCE(T3.RVS_IND,'0') = '0' AND COALESCE(T3.RVSD_IND,'0') = '0'  --RVS_IND冲正标志 RVSD_IND被冲正标志 非冲正     0:正常， 1:冲正， 2:撤销
    AND T3.TXT_CODE NOT IN ('DP0212','DP0210','DP1000')  --入息:DP0212， 结息:DP0210， 付息:DP1000 和 ''
left join EDW.DWD_BUS_DEP_MTU_AUTO_RDPS_REG_DD T4  ----定期到期自动转存登记簿 最小dt20210902
ON T2.DEP_ACT_ID = T4.DEP_ACT_ID
    AND T4.DT = '20240630'
GROUP BY  t1.CST_ID
  ,t1.MDF_DT,mdf_type
;


----续贷前后利率变化
----加权执行利率 = （借据金额*借据期限*借据利率）/（借据金额*借据期限）
drop table if exists lab_bigdata_dev.202312_mdf_data_intr_rate;
create table if not exists lab_bigdata_dev.202312_mdf_data_intr_rate as
select cst_id ,MDF_DT,mdf_type
    ,sum(case when is_xudai_bfr = 1 and amt_bfr > 0 and trm_month_bfr >0 then amt_bfr*trm_month_bfr*exe_intr_rat_bfr end)/sum(case when is_xudai_bfr = 1 and amt_bfr > 0 and trm_month_bfr >0 then amt_bfr*trm_month_bfr end) as exe_intr_rate_bfr
    ,sum(case when is_xudai_aft = 1 and amt_aft > 0 and trm_month_aft >0 then amt_aft*trm_month_aft*exe_intr_rat_aft end)/sum(case when is_xudai_aft = 1 and amt_aft > 0 and trm_month_aft >0 then amt_aft*trm_month_aft end) as exe_intr_rate_aft

	--分子分母拆开，方便后面汇总
	 ,sum(case when is_xudai_bfr = 1 and amt_bfr > 0 and trm_month_bfr >0 then amt_bfr*trm_month_bfr*exe_intr_rat_bfr end) as exe_intr_rate_bfr_fenzi
	 ,sum(case when is_xudai_bfr = 1 and amt_bfr > 0 and trm_month_bfr >0 then amt_bfr*trm_month_bfr end) as exe_intr_rate_bfr_fenmu
    ,sum(case when is_xudai_aft = 1 and amt_aft > 0 and trm_month_aft >0 then amt_aft*trm_month_aft*exe_intr_rat_aft end)  as exe_intr_rate_aft_fenzi
	,sum(case when is_xudai_aft = 1 and amt_aft > 0 and trm_month_aft >0 then amt_aft*trm_month_aft end) as exe_intr_rate_aft_fenmu

from
		(select distinct t1.cst_id
			,t1.MDF_DT,mdf_type
			,coalesce(t3.BUSINESSSUM,0) as amt_bfr --结清合同金额
			,coalesce(t5.BUSINESSSUM,0) as amt_aft --续贷合同金额
			,coalesce(MONTHS_BETWEEN(to_date(REPLACE(t3.MATURITY, '/', ''),'yyyymmdd'),to_date(REPLACE(t3.PUTOUTDATE, '/', ''),'yyyymmdd')),0) as trm_month_bfr ---约定到期-发放到期
			,coalesce(MONTHS_BETWEEN(to_date(REPLACE(t5.MATURITY, '/', ''),'yyyymmdd'),to_date(REPLACE(t5.PUTOUTDATE, '/', ''),'yyyymmdd')),0) as trm_month_aft ---约定到期-发放到期
			,coalesce(t3.businessrate,0)   as  exe_intr_rat_bfr  --结清合同利率
			,coalesce(t5.businessrate,0)   as  exe_intr_rat_aft
			,case when t3.serialno is not null then 1 else 0 end as is_xudai_bfr
			,case when t5.serialno is not null then 1 else 0 end as is_xudai_aft
		from lab_bigdata_dev.202312_mdf_data t1
		left join app_ado.FCT_SAM_RSK_CST_LN_PYF_LST_CUR_MON t2  --近一个月经营性客户续贷管理清单(同一风险控制号)
		on t1.cst_id = t2.cst_id
			and t2.dt > t1.MDF_DT
			and t2.dt <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')  ---交接后12个月
			and t2.dt >= '20230101'
			and SUBSTR(T2.RNW_TYPE, 1, 1) IN ( '1' , '2' )
		left join edw.loan_business_contract t3
		on t2.PYF_BUSI_CTR_ID = t3.serialno  --PYF_BUSI_CTR_ID结清合同流水号
			and t3.dt = '20240630'
			and t3.businessrate is not null
			and t3.businessrate > 0
		left join app_ado.FCT_SAM_RSK_CST_LN_PYF_LST_CUR_MON t4 --近一个月经营性客户续贷管理清单(同一风险控制号)
		on t1.cst_id = t4.cst_id
			and t4.dt > t1.MDF_DT
			and t4.dt <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')  ---交接后12个月
			and t4.dt >= '20230101'
			and SUBSTR(T2.RNW_TYPE, 1, 1) IN ( '1' , '2' )
		left join edw.loan_business_contract t5
		on t4.RNW_BUSI_CTR_ID = t5.serialno  --续贷合同流水号
			and t5.dt = '20240630'
			and t5.businessrate is not null
			and t5.businessrate > 0
		) ss
group by cst_id,MDF_DT,mdf_type;

---综合ftp收入贡献  表有改动江杰
--FTP新旧表拼接  全量表，后续不需要再跑


drop table if exists lab_bigdata_dev.202312_mdf_data_ftp_1;
create table if not exists lab_bigdata_dev.202312_mdf_data_ftp_1 as
SELECT  t1.cst_id,t1.MDF_DT,mdf_type
    ,SUM(ftp_data)/3 AS ftp_3_month_bfr
FROM  lab_bigdata_dev.202312_mdf_data t1
left join lab_bigdata_dev.ftp_all_month t2
on t1.cst_id = t2.cst_id
    and t2.dt >= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-3)) as string),'-','')
    and t2.dt <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','')
group by t1.cst_id,t1.MDF_DT,mdf_type;


drop table if exists lab_bigdata_dev.202312_mdf_data_ftp_2;
create table if not exists lab_bigdata_dev.202312_mdf_data_ftp_2 as
SELECT  t1.cst_id,t1.MDF_DT,mdf_type
    ,SUM(ftp_data)/6 AS ftp_6_month_aft
FROM  lab_bigdata_dev.202312_mdf_data t1
left join lab_bigdata_dev.ftp_all_month t2
on t1.cst_id = t2.cst_id
    and t2.dt >= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),1)) as string),'-','')
    and t2.dt <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),6)) as string),'-','')
group by t1.cst_id,t1.MDF_DT,mdf_type;

--后12个月
drop table if exists lab_bigdata_dev.202312_mdf_data_ftp_3;
create table if not exists lab_bigdata_dev.202312_mdf_data_ftp_3 as
SELECT  t1.cst_id,t1.MDF_DT,mdf_type
    ,SUM(ftp_data)/(datediff(to_date(least( '20240630',replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')),'yyyymmdd'),to_date(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),1)) as string),'-',''),'yyyymmdd'),'mm')+1) AS ftp_12_month_aft
FROM  lab_bigdata_dev.202312_mdf_data t1
left join lab_bigdata_dev.ftp_all_month t2
on t1.cst_id = t2.cst_id
    and t2.dt >= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),1)) as string),'-','')
    and t2.dt <= least( '20240630',replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-',''))
group by t1.cst_id,t1.MDF_DT,mdf_type;

--前12个月
drop table if exists lab_bigdata_dev.202312_mdf_data_ftp_4;
create table if not exists lab_bigdata_dev.202312_mdf_data_ftp_4 as
SELECT  t1.cst_id,t1.MDF_DT,mdf_type
    ,SUM(ftp_data)/12 AS ftp_12_month_bfr
FROM  lab_bigdata_dev.202312_mdf_data t1
left join lab_bigdata_dev.ftp_all_month t2
on t1.cst_id = t2.cst_id
    and t2.dt >= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-12)) as string),'-','')
    and t2.dt <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','')
group by t1.cst_id,t1.MDF_DT,mdf_type;

-- edw.dws_bus_fin_ftp_act_smy_inf_dd  t1 --FTP结果集 最小dt 20231231
-- app_iftp.iftp_tpdm_rst_ftp  t1  --20180101 只保留月初


-- ---综合ftp收入贡献  表有改动江杰
-- drop table if exists lab_bigdata_dev.202312_mdf_ftp;
-- create table if not exists lab_bigdata_dev.202312_mdf_ftp as
-- -- select distinct cst_id,dt
	-- -- ,round(coalesce(last_12_mon_own_ftp_ctb,0)/12,2)  last_12_mon_own_ftp_ctb --近12个月我行综合FTP贡献 月均
	-- -- ,round(coalesce(last_90_ftp_bus_inc_avg,0)/3,2)	last_3_mon_own_ftp_ctb --近90天FTP营业收入日均 月均
-- -- from adm_pub.adm_csm_cbus_ftp_inf_dd --20191231  20200131  20200229
-- -- and dt in (select distinct dt  from edw.dim_bus_com_date_st where dt>='20191231' and dt<= '20240630' and cur_mon_end=dt order by dt )  --月末
-- select t1.cst_id
    -- ,t1.MDF_DT
	-- ,sum(case when t3.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then round(coalesce(t3.last_12_mon_own_ftp_ctb,0)/12,2) end) as last_12_mon_own_ftp_ctb --近12个月我行综合FTP贡献 月均
    -- ,sum(case when t3.dt = replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-','') then round(coalesce(t3.last_90_ftp_bus_inc_avg,0)/3,2)end)	last_3_mon_own_ftp_ctb --近90天FTP营业收入日均 月均
    -- ,sum(case when t3.dt = least(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-',''),'20240630') then round(coalesce(t3.last_12_mon_own_ftp_ctb,0)/12,2) end) as after_12_mon_own_ftp_ctb --近12个月我行综合FTP贡献 月均
-- from lab_bigdata_dev.202312_mdf_data t1
-- left join adm_pub.adm_csm_cbus_ftp_inf_dd t3  --20191231  20200131  20200229
-- on t1.cst_id = t3.cst_id
-- -- and t3.dt in (select distinct dt  from edw.dim_bus_com_date_st
			  -- -- where dt>='20191231' and dt<= '20240630' and cur_mon_end=dt
			  -- -- union select distinct '20240630' from lab_bigdata_dev.202312_mdf_data )  --月末
-- and t3.dt in
    -- (select distinct mdf_bfr_1_month from lab_bigdata_dev.202312_mdf_data
    -- union
    -- select distinct mdf_aft_12_month from lab_bigdata_dev.202312_mdf_data
	-- )

-- group by t1.cst_id
    -- ,t1.MDF_DT
-- ;

--------交接后 管护人数
--dt匹配太慢了，取月底


drop table if exists lab_bigdata_dev.202312_mdf_data_qua_sub;
create table if not exists lab_bigdata_dev.202312_mdf_data_qua_sub as
select t1.aft_mdf_ppl_cd  ---变更后人员代码
    ,t1.MDF_DT,mdf_type
    ,count(distinct case when t2.file_dt <= t1.MDF_DT then loan.loan_cst end) as prm_cst_cnt --建档日期 客户数
    ,max( substr(t3.qua_sub_cls_cd,-1,1)) as qua_sub_cls_cd    ----信贷调查资质 生效时间
from lab_bigdata_dev.202312_mdf_nomdf_sample t1
left join lab_bigdata_dev.mng_all_cst_id t2
on t1.aft_mdf_ppl_cd = t2.prm_mgr_id  ---变更后人员代码
    and substr(t2.dt,1,6) =  substr(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-',''),1,6)   --取月底，月份相同即可
    and t2.dt >= '20230101'
    and t2.dt <= '20231231'
	and t2.dt in (select distinct replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-1)) as string),'-','') from lab_bigdata_dev.202312_mdf_nomdf_sample ) --取月底

left join (  SELECT distinct t.cst_id as loan_cst,t.dt
		  FROM    edw.dim_bus_loan_ctr_inf_dd t
		  WHERE   t.dt >= '20230101'
		  and t.dt <= '20231231'
		  and t.dt in (select distinct replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-1)) as string),'-','') from lab_bigdata_dev.202312_mdf_nomdf_sample ) --取月底
		  AND     t.bus_cd NOT IN ( 'A' , 'B' , 'H' , 'I' , 'O' , 'P' ) --剔除 员工贷款
		    AND     ( t.chnl_cd <> 'L08' OR t.pd_cd <> '201050101040335' ) --剔除 小鱼分期
		  AND     t.pd_cd <> '201050101040332' --剔除 蚂蚁借呗
		  AND     t.pd_cd <> '201050101040319' --剔除百度分期贷
		  AND     ( t.pd_cd NOT IN ( '201050102010146' , '201050101040348' )   OR t.frz_sts_cd <> '' ) --剔除未签约的泰e贷 0签收,1正常,2冻结,3到期失效,4终止失效,5补充资料,6待综合岗签收,7待柜面签收,8终止失效,9到期失效
		  AND     (    (
							( t.ctr_bal > 0  --余额>0
							  OR ( t.ctr_bal IS NULL AND     nvl(t.crc_ind, '0') = '0' )  --非循环贷 余额为空
							  OR ( ( nvl(t.crc_ind, '0') <> '0'   OR t.pd_cd LIKE '2010503%' ) AND     ( t.ctr_bal = 0  OR t.ctr_bal IS NULL )  AND     t.apnt_mtu_dt >= t.dt )  --（循环贷 或 随贷通） 且 余额为0 且 未到期
							)
						 AND     nvl(t.frz_sts_cd, ' ') NOT IN ( '3' , '4' )  --3	到期失效  4	终止失效  冻结状态非到期失效，非终止失效

						)
				  OR ( t.ctr_bal > 0 AND     t.pd_cd LIKE '2010503%'  AND     t.apnt_mtu_dt <= t.dt  AND     t.frz_sts_cd IN ( '3' , '4' ) )  --余额>0  且 随贷通 且到期 且 冻结状态是到期失效、终止失效
				  ) ----未终结、未到期业务
	  )loan
on t2.cst_id=loan.loan_cst
and substr(loan.dt,1,6) =  substr(replace(cast(last_day(add_months(to_date(t2.dt,'yyyymmdd'),-1)) as string),'-',''),1,6)   --取月底，月份相同即可

left join edw.dim_hr_empe_mgr_qua_inf_dd t3  --客户经理资质 20200909
on t1.aft_mdf_ppl_cd = t3.empe_id  -- ---变更后人员代码
    and substr(t3.dt,1,6) =  substr(replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),-1)) as string),'-',''),1,6)   --取月底，月份相同即可
    and t3.STS_CD = '1' --有效状态代码
    and t3.qua_sub_cls_cd in ('0060001','0060002','0060003','0060004','0060005','0060006') ----信贷调查资质
    and t3.dt >= '20230101'
    and t3.dt <= '20231231'
	and t3.dt in (select distinct replace(cast(last_day(add_months(to_date(MDF_DT,'yyyymmdd'),-1)) as string),'-','') from lab_bigdata_dev.202312_mdf_nomdf_sample ) --取月底
group by t1.aft_mdf_ppl_cd
    ,t1.MDF_DT,mdf_type;



---新增随贷通
drop table if exists lab_bigdata_dev.202312_mdf_data_new_sdt;
create table if not exists lab_bigdata_dev.202312_mdf_data_new_sdt as
select t1.cst_id,t1.MDF_DT,mdf_type
    ,COUNT(t2.serialno) AS new_sdt_cnt  --新增随贷通合同数
    ,max(case when t3.customerid is null then 1 else 0 end) as no_sdt_bfr --交接前无随贷通标识
from lab_bigdata_dev.202312_mdf_data t1
left join edw.loan_business_contract t2
on t1.cst_id = t2.customerid
    and t2.dt = '20240630'
    and substr(t2.BUSINESSTYPE,1,7)= '2010503'
    and REPLACE(t2.OCCURDATE, '/', '') >= t1.MDF_DT
    and REPLACE(t2.OCCURDATE, '/', '') <= replace(cast(last_day(add_months(to_date(t1.MDF_DT,'yyyymmdd'),12)) as string),'-','')
left join edw.loan_business_contract t3
on t1.cst_id = t3.customerid
    and t3.dt = '20240630'
    and substr(t3.BUSINESSTYPE,1,7)= '2010503'
    and REPLACE(t3.OCCURDATE, '/', '') < t1.MDF_DT  ----交接前
group by t1.cst_id,t1.MDF_DT,mdf_type;


--修改的地方人事变动 （未交接无人事变动，该逻辑删除）select * from lab_bigdata_dev.202312_test_mdf_data_feature_all_20230531 where dt='202403';

-----人事变动
drop table if exists lab_bigdata_dev.202312_mdf_data_empe_lqd;
create table if not exists lab_bigdata_dev.202312_mdf_data_empe_lqd as
select distinct t1.MDF_DT
    ,t1.mdf_qppl_cd ---变更前人员代码
    ,c_turnover_type --流动类型 nd rz2
    ,case when c_turnover_type = 'nd' and c_name_new in ('业务团队正职','业务团队副职','总经理助理') and c_prev_dept_hid = c_new_dept_hid then '本团队晋升'
        when c_turnover_type = 'nd' and c_name_new in ('业务团队正职','业务团队副职','总经理助理') and c_prev_dept_hid <> c_new_dept_hid then '跨团队晋升'
        when c_turnover_type = 'nd' and c_name_new like '%客户经理%' then '调动至客户经理' --流动后职位名称
        when c_turnover_type = 'nd' and  c_name_new not like '%客户经理%' then '调动至非客户经理'
        when  c_turnover_type = 'lz' then '离职' end as empe_lqd_type
from
(select t1.MDF_DT
    ,t1.mdf_qppl_cd ---变更前人员代码
    ,t3.c_turnover_type --流动类型 nd rz2
    ,t3.c_prev_pos_hid  --流动前职位id
    ,t5.c_name as c_name_prev --流动前职位名称
    ,t3.c_new_pos_hid --流动后职位
    ,t6.c_name as c_name_new --流动后职位名称
    ,t3.c_prev_dept_hid   ---流动前部门
    ,t3.c_new_dept_hid   ----流动后部门
    ,row_number() over(partition by t1.mdf_qppl_cd,t1.MDF_DT order by t3.c_operate_time desc) as ranking
from lab_bigdata_dev.202312_mdf_nomdf_sample t1
left join edw.nhrm_tb_sta_emp t2 --员工表
on t1.mdf_qppl_cd = t2.c_code    --变更前人员代码
    and t2.dt = '20240630'
left join edw.nhrm_tb_sta_emp_turnover t3  --员流动信息
on t2.c_oid = t3.c_employee_id   --员工ID 0475b2cc45974ab1a233836ea6170e71
    and t3.dt = '20240630'
    and replace(substr(t3.c_operate_time,1,10),'-','') >= replace(substr(dateadd(to_date(t1.MDF_DT,'yyyymmdd'),-30,'dd'),1,10),'-','') --操作时间
    and replace(substr(t3.c_operate_time,1,10),'-','') <= replace(substr(dateadd(to_date(t1.MDF_DT,'yyyymmdd'),30,'dd'),1,10),'-','')  --操作时间
left join edw.nhrm_tb_org_position t5  --509职位基本信息
on t3.c_prev_pos_hid = t5.c_hid  --流动前职位
    and t5.dt = '20240630'
left join edw.nhrm_tb_org_position t6
on t3.c_new_pos_hid = t6.c_hid
    and t6.dt = '20240630'
where t5.c_name like '%客户经理%'
) t1
where ranking = 1;

--select * from mdf_data_feature_all_20220607 where dt='20230101-20231231' and ftp_12_month_aft<0.5*ftp_3_month_aft and mdf_type='交接客户';

-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_all_20220607;

-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_all_20220607
-- (
--     cst_id                          STRING  COMMENT '客户号'
--     ,MDF_DT                         STRING  COMMENT '交接日期'
--     ,mdf_qorg_cd                    STRING  COMMENT '变更前机构代码'
--     ,mdf_qppl_cd                    STRING  COMMENT '变更前人员代码'
--     ,aft_mdf_org_cd                 STRING  COMMENT '变更后机构代码'
--     ,aft_mdf_ppl_cd                 STRING  COMMENT '变更后人员代码'
--     ,efe_dep_cst_ind_bfr            STRING  COMMENT '交接前有效存款户标志'
--     ,efe_dep_cst_ind_aft_3_month    STRING  COMMENT '交接后3个月有效存款户标志'
--     ,efe_dep_cst_ind_aft_6_month    STRING  COMMENT '交接后6个月有效存款户标志'
--     ,efe_dep_cst_ind_aft_12_month   STRING  COMMENT '交接后12个月有效存款户标志'
--     ,efe_loan_cst_ind_bfr           STRING  COMMENT '交接前有效信贷户标志'
--     ,efe_loan_cst_ind_aft_3_month   STRING  COMMENT '交接后3个月有效信贷户标志'
--     ,efe_loan_cst_ind_aft_6_month   STRING  COMMENT '交接后6个月有效信贷户标志'
--     ,efe_loan_cst_ind_aft_12_month  STRING  COMMENT '交接后12个月有效信贷户标志'
--     ,efe_cst_ind_bfr                STRING  COMMENT '交接前有效户标志'
--     ,efe_cst_ind_aft_3_month        STRING  COMMENT '交接后3个月有效户标志'
--     ,efe_cst_ind_aft_6_month        STRING  COMMENT '交接后6个月有效户标志'
--     ,efe_cst_ind_aft_12_month       STRING  COMMENT '交接后12个月有效户标志'
--     ,last_90_days_gl_bal_avg_bfr    DECIMAL COMMENT '交接前3个月存款月日均'
--     ,last_180_days_gl_bal_avg_aft   DECIMAL COMMENT '交接后6个月存款月日均'
--     ,last_360_days_gl_bal_avg_aft   DECIMAL COMMENT '交接后12个月存款月日均'
--     ,last_90_days_prcp_bal_avg_bfr  DECIMAL COMMENT '交接前3个月贷款月日均'
--     ,last_180_days_prcp_bal_avg_aft DECIMAL COMMENT '交接后6个月贷款月日均'
--     ,last_360_days_prcp_bal_avg_aft DECIMAL COMMENT '交接后12个月贷款月日均'
--     ,is_loan_finish                 STRING  COMMENT '交接后12个月结清'
--     ,is_loan_continue               STRING  COMMENT '交接后12个月是否存在续贷'
--     ,IS_CUR_DSTR_EXPIRE             STRING  COMMENT '到期或销户'
--     ,IS_CUR_CONTINUE                STRING  COMMENT '续存（含自动转存）'
--     ,exe_intr_rate_bfr              DECIMAL COMMENT '续贷前执行利率'
--     ,exe_intr_rate_aft              DECIMAL COMMENT '续贷后执行利率'
--     ,ftp_3_month_bfr                DECIMAL COMMENT '交接前3个月ftp月均'
--     ,ftp_6_month_aft                DECIMAL COMMENT '交接后6个月ftp月均'
--     ,ftp_12_month_aft               DECIMAL COMMENT '交接后12个月ftp月均'
--     ,prm_cst_cnt                    DECIMAL COMMENT '管护人数'
--     ,qua_sub_cls_cd                 STRING  COMMENT '-信贷调查资质'
--     ,new_sdt_cnt                    DECIMAL COMMENT '随贷通新增人数'
--     ,no_sdt_bfr                     STRING  COMMENT '交接前非随贷通'
--     ,empe_lqd_type                  STRING  COMMENT '人事异动'
--     ,c_turnover_type                STRING  COMMENT '流动类型'
--     ,prm_org_id                     STRING  COMMENT '主管户机构'
--     ,prm_fh_org_id                  STRING  COMMENT '主管户分行机构号'
--     ,prm_fh_org_nm                  STRING  COMMENT '主管户分行名称'
--     ,prm_zh_org_id                  STRING  COMMENT '主管户支行机构号'
--     ,prm_zh_org_nm                  STRING  COMMENT '主管户支行名称'
---    ,ctr_amt                        decimal COMMENT '交接规模'
---    ,is_yr_new_hpn_amt              decimal comment '新发生风险贷款余额'
---    ,busi_ctr_ind                   string  comment '合同是否有效'
---    ,mdf_ctr_bal                    decimal comment '交接客户贷款余额'
-- )
-- COMMENT
-- '客户交接明细表'
-- PARTITIONED BY
-- (
--     dt STRING
-- );

-- alter table lab_bigdata_dev.mdf_data_feature_all_20220607 add columns (
--     is_yr_new_hpn_amt decimal comment '新发生风险贷款余额'
--     ,busi_ctr_ind string comment '合同是否有效'
--     ,mdf_ctr_bal decimal comment '交接客户贷款余额'
-- );
-- alter table lab_bigdata_dev.mdf_data_feature_all_20220607 add columns (
    -- mdf_type  string comment '交接客户类型'  --交接客户 未全量客户
-- );
/*
DROP TABLE IF EXISTS lab_bigdata_dev.xuni_org;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.xuni_org
(
    sum_org_id                  STRING  COMMENT '主管户支行机构号'
    ,sum_org_nm                  STRING  COMMENT '主管户支行名称'
    ,UNT_ORG_ID                 STRING  COMMENT '变更后机构代码'
)
COMMENT
'虚拟支行'
;
insert into lab_bigdata_dev.xuni_org
values ('310188800','上海分行虚拟支行','310199999'),
('320288800','苏州分行虚拟支行','320299999'),
('330188800','台州分行虚拟支行','330199999'),
('330288800','杭州分行虚拟支行','330299999'),
('330388800','宁波分行虚拟支行','330399999'),
('330588800','温州分行虚拟支行','330599999'),
('330688800','丽水分行虚拟支行','330699999'),
('330788800','绍兴分行虚拟支行','330799999'),
('330888800','金华分行虚拟支行','330899999'),
('330988800','嘉兴分行虚拟支行','330999999'),
('331088800','湖州分行虚拟支行','331099999'),
('331188800','衢州分行虚拟支行','331199999'),
('331288800','舟山分行虚拟支行','331299999'),
('336188800','浙江庆元泰隆村镇银行虚拟支行','336199999'),
('356188800','福建政和泰隆村镇银行虚拟支行','356199999'),
('356288800','福建长乐泰隆村镇银行虚拟支行','356299999'),
('356388800','福建龙海泰隆村镇银行虚拟支行','356399999'),
('356488800','福建福清泰隆村镇银行虚拟支行','356499999'),
('416188800','河南叶县泰隆村镇银行虚拟支行','416199999'),
('416288800','河南汝南泰隆村镇银行虚拟支行','416299999'),
('426188800','湖北大冶泰隆村镇银行虚拟支行','426199999'),
('446188800','广东英德泰隆村镇银行虚拟支行','446199999'),
('446288800','广东四会泰隆村镇银行虚拟支行','446299999'),
('616188800','陕西旬阳泰隆村镇银行虚拟支行','616199999'),
('616288800','陕西眉县泰隆村镇银行虚拟支行','616299999'),
('616388800','陕西泾阳泰隆村镇银行虚拟支行','616399999')
;
*/
insert overwrite table lab_bigdata_dev.mdf_data_feature_all_20220607 PARTITION (DT = '20230101-20231231')
select t1.cst_id
    ,t1.MDF_DT
    ,t1.mdf_qorg_cd ---变更前机构代码
    ,t1.mdf_qppl_cd -----变更前人员代码
    ,t1.aft_mdf_org_cd ----变更后机构代码
    ,t1.aft_mdf_ppl_cd ----变更后人员代码
    ,coalesce(t2.efe_dep_cst_ind_bfr,'0') as  efe_dep_cst_ind_bfr ----交接前有效存款户标志
    ,coalesce(t2.efe_dep_cst_ind_aft_3_month,'0') as efe_dep_cst_ind_aft_3_month   ----交接后3个月有效存款户标志
    ,coalesce(t2.efe_dep_cst_ind_aft_6_month,'0') as efe_dep_cst_ind_aft_6_month   ----交接后6个月有效存款户标志
    ,coalesce(t2.efe_dep_cst_ind_aft_12_month,'0') as efe_dep_cst_ind_aft_12_month   ----交接后12个月有效存款户标志
    ,coalesce(t2.efe_loan_cst_ind_bfr,'0') as efe_loan_cst_ind_bfr    ----交接前有效信贷户标志
    ,coalesce(t2.efe_loan_cst_ind_aft_3_month,'0') as efe_loan_cst_ind_aft_3_month  ----交接后3个月有效信贷户标志
    ,coalesce(t2.efe_loan_cst_ind_aft_6_month,'0') as efe_loan_cst_ind_aft_6_month ----交接后6个月有效信贷户标志
    ,coalesce(t2.efe_loan_cst_ind_aft_12_month,'0') as efe_loan_cst_ind_aft_12_month  ----交接后12个月有效信贷户标志
    ,coalesce(t2.efe_cst_ind_bfr,'0') as efe_cst_ind_bfr    ----交接前有效户标志
    ,coalesce(t2.efe_cst_ind_aft_3_month,'0') as efe_cst_ind_aft_3_month   ----交接后3个月有效户标志
    ,coalesce(t2.efe_cst_ind_aft_6_month,'0') as efe_cst_ind_aft_6_month  ----交接后6个月有效户标志
    ,coalesce(t2.efe_cst_ind_aft_12_month,'0') as efe_cst_ind_aft_12_month  ----交接后12个月有效户标志
    , t3.last_90_days_gl_bal_avg_bfr ---交接前3个月存款月日均
	--,case when t1.mdf_type='交接客户' then t3.last_90_days_gl_bal_avg_bfr when  t1.mdf_type='全量客户' then t3.last_360_days_gl_bal_avg_bfr end as  last_90_days_gl_bal_avg_bfr ---交接前3个月存款月日均
    ,t3.last_180_days_gl_bal_avg_aft   ---交接后6个月存款月日均
    ,t3.last_360_days_gl_bal_avg_aft   ---交接后12个月存款月日均
    , t4.last_90_days_prcp_bal_avg_bfr --交接前3个月贷款月日均
	--,case when t1.mdf_type='交接客户' then t4.last_90_days_prcp_bal_avg_bfr when  t1.mdf_type='全量客户' then t4.last_360_days_prcp_bal_avg_bfr end as  last_90_days_prcp_bal_avg_bfr---交接前3个月贷款月日均
    ,t4.last_180_days_prcp_bal_avg_aft   ---交接后6个月贷款月日均
    ,t4.last_360_days_prcp_bal_avg_aft   ---交接后12个月贷款月日均
    ,t5.is_loan_finish     -------交接后12个月结清
    ,t5.is_loan_continue   -----交接后12个月是否存在续贷
    ,t6.IS_CUR_DSTR_EXPIRE   -----到期或销户
    ,t6.IS_CUR_CONTINUE     ----续存（含自动转存）
    ,t7.exe_intr_rate_bfr    -----续贷前执行利率
    ,t7.exe_intr_rate_aft   -----续贷后执行利率
	--,case when t1.mdf_type='交接客户' then t8.ftp_3_month_bfr  when  t1.mdf_type='全量客户' then ftp.ftp_12_month_bfr end as  ftp_3_month_bfr    ---交接前3个月ftp月均
	, t8.ftp_3_month_bfr    ---交接前3个月ftp月均
	,null  ftp_6_month_aft ---交接后6个月ftp月均
	,t15.ftp_12_month_aft ---交接后12个月ftp月均
    -- ,case when t1.mdf_type='交接客户' then t8.last_3_mon_own_ftp_ctb  when  t1.mdf_type='全量客户' then t8.last_12_mon_own_ftp_ctb end as  ftp_3_month_bfr ---交接前3个月ftp月均

    ,t9.prm_cst_cnt   ----管护人数
    ,t9.qua_sub_cls_cd   -----信贷调查资质
    ,t10.new_sdt_cnt    ------随贷通新增人数
    ,t10.no_sdt_bfr
    ,t11.empe_lqd_type -----人事异动
    ,t11.c_turnover_type  --流动类型
    ,t12.prm_org_id   ---主管户机构
    ,t13.sum_org_id  as prm_fh_org_id        -- 主管户分行机构号
    ,t13.sum_org_nm  as prm_fh_org_nm        -- 主管户分行名称
    ,t20.sum_org_id  as prm_zh_org_id        -- 主管户支行机构号
    ,t20.sum_org_nm  as prm_zh_org_nm        -- 主管户支行名称
    ,t1.mdf_ctr_amt as ctr_amt
    ,COALESCE(T21.is_yr_new_hpn_amt,0) AS is_yr_new_hpn_amt

    ,case when t22.cst_id is not null then '1' else '0' end as busi_ctr_ind  --当前有未结清的贷款标识
    ,COALESCE(T21.贷款余额,0) AS mdf_ctr_bal --当前未结清的贷款余额
	,t1.mdf_type  --交接客户类型
from lab_bigdata_dev.202312_mdf_nomdf_sample t1
left join lab_bigdata_dev.202312_mdf_data_efe_ind t2
on t1.cst_id = t2.cst_id and t1.MDF_DT = t2.MDF_DT and t1.mdf_type=t2.mdf_type
left join lab_bigdata_dev.202312_mdf_data_dep t3
on t1.cst_id = t3.cst_id and t1.MDF_DT = t3.MDF_DT and t1.mdf_type=t3.mdf_type
left join lab_bigdata_dev.202312_mdf_data_loan t4
on t1.cst_id = t4.cst_id and t1.MDF_DT = t4.MDF_DT and t1.mdf_type=t4.mdf_type
left join lab_bigdata_dev.202312_mdf_data_cur_rnw t5
on t1.cst_id = t5.cst_id and t1.MDF_DT = t5.MDF_DT and t1.mdf_type=t5.mdf_type
left join lab_bigdata_dev.202312_mdf_data_xu_cun t6
on t1.cst_id = t6.cst_id and t1.MDF_DT = t6.MDF_DT and t1.mdf_type=t6.mdf_type
left join lab_bigdata_dev.202312_mdf_data_intr_rate t7
on t1.cst_id = t7.cst_id and t1.MDF_DT = t7.MDF_DT and t1.mdf_type=t7.mdf_type

left join lab_bigdata_dev.202312_mdf_data_ftp_1 t8
on t1.cst_id = t8.cst_id   and t1.MDF_DT = t8.MDF_DT and t1.mdf_type=t8.mdf_type
left join lab_bigdata_dev.202312_mdf_data_ftp_2 t14
on t1.cst_id = t14.cst_id   and t1.MDF_DT = t14.MDF_DT and t1.mdf_type=t14.mdf_type
left join lab_bigdata_dev.202312_mdf_data_ftp_3 t15
on t1.cst_id = t15.cst_id   and t1.MDF_DT = t15.MDF_DT and t1.mdf_type=t15.mdf_type
left join lab_bigdata_dev.202312_mdf_data_ftp_4 ftp
on t1.cst_id = ftp.cst_id   and t1.MDF_DT = ftp.MDF_DT and t1.mdf_type=ftp.mdf_type

left join lab_bigdata_dev.202312_mdf_data_qua_sub t9
on t1.aft_mdf_ppl_cd = t9.aft_mdf_ppl_cd  and t1.mdf_type=t9.mdf_type and t1.MDF_DT = t9.MDF_DT
left join lab_bigdata_dev.202312_mdf_data_new_sdt t10
on t1.cst_id = t10.cst_id and t1.MDF_DT = t10.MDF_DT  and t1.mdf_type=t10.mdf_type
left join lab_bigdata_dev.202312_mdf_data_empe_lqd t11
on t1.mdf_qppl_cd = t11.mdf_qppl_cd and  t1.MDF_DT = t11.MDF_DT
left join adm_pub_app.ADM_PBLC_CST_PRM_MNG_INF_DD t12 --edw.dws_cst_bas_inf_dd t12
on t1.cst_id = t12.cst_id
    and t12.dt = '20231231'
left join edw.dim_hr_org_sum_org_rel_dd t13
on t1.aft_mdf_org_cd=t13.UNT_ORG_ID
    and t13.dt='20231231'
    and t13.SUM_ORG_LVL='F'
    AND t13.ORG_RLTN_DIM_CD='WD3'
    AND t13.SUM_TYP_CD='1'
LEFT JOIN  (select   UNT_ORG_ID
					,sum_org_id
					,sum_org_nm
			from edw.dim_hr_org_sum_org_rel_dd t20
			where  t20.dt = '20231231'
			AND     t20.SUM_ORG_LVL = 'Z' --支行
			AND    t20.ORG_RLTN_DIM_CD = 'WD3'
			AND    t20.SUM_TYP_CD = '1'
			union
			select   UNT_ORG_ID
					,sum_org_id
					,sum_org_nm
			from lab_bigdata_dev.xuni_org
			) t20
ON     t1.aft_mdf_org_cd=t20.UNT_ORG_ID

LEFT JOIN

(

select
    cst_id
    ,SUM(CASE  WHEN A.BSN_STS NOT LIKE '%核销%' THEN A.DBIL_BAL_CNY  ELSE 0 END) 贷款余额 -- 贷款余额（不含核销）
    ,SUM(CASE when A.IS_YR_NEW_HPN = 'Y' AND A.IS_RSK_LOAN = 'Y' THEN A.DBIL_BAL_CNY  ELSE 0  END) is_yr_new_hpn_amt   --本年新发生风险贷款余额
from adm_pub.ADM_RSK_APP_INTER_ALL a
where a.dt = least(replace(cast(last_day(add_months(to_date('20231231','yyyymmdd'),12)) as string),'-',''),'20240630')  --观察点12个月以后，当前日期 二者取小
and a.DBIL_BAL_CNY > 0
and   ( A.ACC_TYPE = '信用卡' OR A.ACC_TYPE LIKE '0%' ) AND A.ACC_TYPE NOT LIKE '0301%'  --表内业务
group by cst_id

) T21


ON T1.cst_id = T21.cst_id
left join
(select cst_id
    ,sum(ctr_bal) as ctr_bal
from edw.dim_bus_loan_ctr_inf_dd t
where dt = least(replace(cast(last_day(add_months(to_date('20231231','yyyymmdd'),12)) as string),'-',''),'20240630')
and (( ( t.ctr_bal > 0
    OR ( t.ctr_bal IS NULL
AND     nvl(t.crc_ind, '0') = '0' )
    OR ( ( nvl(t.crc_ind, '0') <> '0'
    OR t.pd_cd LIKE '2010503%' )
AND     ( t.ctr_bal = 0
    OR t.ctr_bal IS NULL )
AND     t.apnt_mtu_dt >= least(replace(cast(last_day(add_months(to_date('20231231','yyyymmdd'),12)) as string),'-',''),'20240630') ) )
AND     nvl(t.frz_sts_cd, ' ') NOT IN ( '3' , '4' ) )
    OR ( t.ctr_bal > 0
AND     t.pd_cd LIKE '2010503%'
AND     t.apnt_mtu_dt <= least(replace(cast(last_day(add_months(to_date('20231231','yyyymmdd'),12)) as string),'-',''),'20240630')
AND     t.frz_sts_cd IN ( '3' , '4' ) ))
group by cst_id
) t22
ON T1.cst_id = T22.cst_id
where t13.sum_org_nm rlike '分行' or t13.sum_org_nm rlike '村镇银行';    -- 分行



--------守面
-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_shoumian_20221122;

-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_shoumian_20221122
-- (
--     分行名称   STRING  COMMENT '分行名称'
--     ,支行名称  STRING  COMMENT '支行名称'
--     ,接收人管户户数            STRING  COMMENT '接收人管户户数'
--     ,接手人信贷调查资质     STRING  COMMENT '接手人信贷调查资质'
--     ,按交出人人事异动      STRING  COMMENT '按交出人人事异动'
--     ,客户分层               STRING  COMMENT '客户分层'
--     ,交接前非有效户            STRING  COMMENT '交接前非有效户'
--     ,交接前非有效户交接后3个月是有效户  STRING  COMMENT '交接前非有效户交接后3个月是有效户'
--     ,交接前非有效户交接后6个月是有效户  STRING  COMMENT '交接前非有效户交接后6个月是有效户'
--     ,交接前非有效户交接后12个月是有效户 STRING  COMMENT '交接前非有效户交接后12个月是有效户'
--     ,交接前是有效户            STRING  COMMENT '交接前是有效户'
--     ,交接前是有效户交接后3个月非有效户  STRING  COMMENT '交接前是有效户交接后3个月非有效户'
--     ,交接前是有效户交接后6个月非有效户  STRING  COMMENT '交接前是有效户交接后6个月非有效户'
--     ,交接前是有效户交接后12个月非有效户 STRING  COMMENT '交接前是有效户交接后12个月非有效户'
--     ,续贷客户数              DECIMAL COMMENT '续贷客户数'
--     ,贷款到期客户数            DECIMAL COMMENT '贷款到期客户数'
--     ,续存客户数              DECIMAL COMMENT '续存客户数'
--     ,存款到期客户数            DECIMAL COMMENT '存款到期客户数'
--     ,交接前非有效信贷户       string   COMMENT '交接前非有效信贷户'
--     ,交接前非有效信贷户交接后3个月是有效信贷户 string COMMENT '交接前非有效信贷户交接后3个月是有效信贷户'
--     ,交接前非有效信贷户交接后6个月是有效信贷户 string COMMENT '交接前非有效信贷户交接后6个月是有效信贷户'
--     ,交接前非有效信贷户交接后12个月是有效信贷户 string COMMENT '交接前非有效信贷户交接后12个月是有效信贷户'
--     ,交接前是有效信贷户       string COMMENT '交接前是有效信贷户'
--     ,交接前是有效信贷户交接后3个月非有效信贷户 string COMMENT '交接前是有效信贷户交接后3个月非有效信贷户'
--     ,交接前是有效信贷户交接后6个月非有效信贷户 string COMMENT '交接前是有效信贷户交接后6个月非有效信贷户'
--     ,交接前是有效信贷户交接后12个月非有效信贷户 string COMMENT '交接前是有效信贷户交接后12个月非有效信贷户'
--     ,mdf_cst_cnt     decimal COMMENT '交接客户数'
--     ,mdf_ctr_amt     decimal COMMENT '交接规模'
-- COMMENT
-- '客户交接前后业务波动分析_守面'
-- PARTITIONED BY
-- (
--     dt STRING
-- );

-- alter table lab_bigdata_dev.mdf_data_feature_shoumian_20221122 add columns (
    -- mdf_type  string comment '交接客户类型'  --交接客户 未全量客户
-- );
-- alter table lab_bigdata_dev.mdf_data_feature_shoumian_20221122 add columns (
    -- prm_fh_org_id  string comment '主管户分行机构号'  --交接客户 未全量客户
-- );


insert overwrite table lab_bigdata_dev.mdf_data_feature_shoumian_20221122 PARTITION (DT = '20230101-20231231')
select   prm_fh_org_nm  分行名称
        ,prm_zh_org_nm  支行名称
        ,case when prm_cst_cnt <= 100 then '100以内'
             when prm_cst_cnt <=300 then '100-300'
             when prm_cst_cnt <=500 then '300-500'
             when prm_cst_cnt >500 then '500以上'
             else null end as 接收人管户户数
        ,qua_sub_cls_cd 接手人信贷调查资质
        ,empe_lqd_type 按交出人人事异动
        ,case when last_90_days_prcp_bal_avg_bfr>0 and last_90_days_prcp_bal_avg_bfr<=500000 then '50万以下'
               when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'
               when last_90_days_prcp_bal_avg_bfr <=3000000 then '150-300w'
               when last_90_days_prcp_bal_avg_bfr > 3000000 then '300w以上' end  as 客户分层
--------统计客户数字段
        ,count(case when efe_cst_ind_bfr = '0' or efe_cst_ind_bfr ='' then cst_id end) as 交接前非有效户
        ,count(case when (efe_cst_ind_bfr = '0' or efe_cst_ind_bfr ='') and efe_cst_ind_aft_3_month = '1' then cst_id end) as 交接前非有效户交接后3个月是有效户
        ,count(case when (efe_cst_ind_bfr = '0' or efe_cst_ind_bfr ='') and efe_cst_ind_aft_6_month = '1' then cst_id end) as 交接前非有效户交接后6个月是有效户
        ,count(case when (efe_cst_ind_bfr = '0' or efe_cst_ind_bfr ='') and efe_cst_ind_aft_12_month = '1' then cst_id end) as 交接前非有效户交接后12个月是有效户
        ,count(case when efe_cst_ind_bfr = '1' then cst_id end) as 交接前是有效户
        ,count(case when efe_cst_ind_bfr = '1' and (efe_cst_ind_aft_3_month = '0' or efe_cst_ind_aft_3_month ='') then cst_id end) as 交接前是有效户交接后3个月非有效户
        ,count(case when efe_cst_ind_bfr = '1' and (efe_cst_ind_aft_6_month = '0' or efe_cst_ind_aft_6_month ='') then cst_id end) as 交接前是有效户交接后6个月非有效户
        ,count(case when efe_cst_ind_bfr = '1' and (efe_cst_ind_aft_12_month = '0' or efe_cst_ind_aft_12_month ='') then cst_id end) as 交接前是有效户交接后12个月非有效户
        ,count( case when is_loan_continue =1 then cst_id end) as 续贷客户数
        ,count( case when is_loan_finish =1 then cst_id end) as 贷款到期客户数
        ,count( case when IS_CUR_DSTR_EXPIRE =1 and IS_CUR_CONTINUE =1 then cst_id end) as 续存客户数
        ,count( case when IS_CUR_DSTR_EXPIRE =1 then cst_id end) as 存款到期客户数
        ,count(case when efe_loan_cst_ind_bfr = '0' or efe_loan_cst_ind_bfr ='' then cst_id end) as 交接前非有效信贷户
        ,count(case when (efe_loan_cst_ind_bfr = '0' or efe_loan_cst_ind_bfr ='') and efe_loan_cst_ind_aft_3_month = '1' then cst_id end) as 交接前非有效信贷户交接后3个月是有效信贷户
        ,count(case when (efe_loan_cst_ind_bfr = '0' or efe_loan_cst_ind_bfr ='') and efe_loan_cst_ind_aft_6_month = '1' then cst_id end) as 交接前非有效信贷户交接后6个月是有效信贷户
        ,count(case when (efe_loan_cst_ind_bfr = '0' or efe_loan_cst_ind_bfr ='') and efe_loan_cst_ind_aft_12_month = '1' then cst_id end) as 交接前非有效信贷户交接后12个月是有效信贷户
        ,count(case when efe_loan_cst_ind_bfr = '1' then cst_id end) as 交接前是有效信贷户
        ,count(case when efe_loan_cst_ind_bfr = '1' and (efe_loan_cst_ind_aft_3_month = '0' or efe_loan_cst_ind_aft_3_month ='') then cst_id end) as 交接前是有效信贷户交接后3个月非有效信贷户
        ,count(case when efe_loan_cst_ind_bfr = '1' and (efe_loan_cst_ind_aft_6_month = '0' or efe_loan_cst_ind_aft_6_month ='') then cst_id end) as 交接前是有效信贷户交接后6个月非有效信贷户
        ,count(case when efe_loan_cst_ind_bfr = '1' and (efe_loan_cst_ind_aft_12_month = '0' or efe_loan_cst_ind_aft_12_month ='') then cst_id end) as 交接前是有效信贷户交接后12个月非有效信贷户
        ,count(cst_id) as mdf_cst_cnt
        ,sum(ctr_amt) as mdf_ctr_amt
		,mdf_type
from lab_bigdata_dev.mdf_data_feature_all_20220607
where dt = '20230101-20231231'
and mdf_type='交接客户'
group by  prm_fh_org_nm  ,prm_zh_org_nm
        ,case when prm_cst_cnt <= 100 then '100以内'
             when prm_cst_cnt <=300 then '100-300'
             when prm_cst_cnt <=500 then '300-500'
             when prm_cst_cnt >500 then '500以上'
             else null end
        ,qua_sub_cls_cd --接手人信贷调查资质
        ,empe_lqd_type  --按交出人人事异动
        ,case when last_90_days_prcp_bal_avg_bfr>0 and last_90_days_prcp_bal_avg_bfr<=500000 then '50万以下'
               when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'
               when last_90_days_prcp_bal_avg_bfr <=3000000 then '150-300w'
               when last_90_days_prcp_bal_avg_bfr > 3000000 then '300w以上' end
			   ,mdf_type
               ;


--------守量
-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_shouliang_20221122;

-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_shouliang_20221122
-- (
--     分行名称  STRING  COMMENT '分行名称'
--     ,支行名称 STRING  COMMENT '支行名称'
--     ,接收人管户户数           STRING  COMMENT ''
--     ,接手人信贷调查资质    STRING  COMMENT '接手人信贷调查资质'
--     ,按交出人人事异动     STRING  COMMENT '按交出人人事异动'
--     ,客户分段1             STRING  COMMENT '客户分段1'
--     ,客户分段2             STRING  COMMENT '客户分段2'
--     ,交接前3个月存款日均总规模     DECIMAL COMMENT '交接前3个月存款日均总规模'
--     ,交接前3个月存款日均人数      DECIMAL COMMENT '交接前3个月存款日均人数'
--     ,交接后6个月存款日均总规模     DECIMAL COMMENT '交接后6个月存款日均总规模'
--     ,交接后6个月存款日均人数      DECIMAL COMMENT '交接后6个月存款日均人数'
--     ,交接后12个月存款日均总规模    DECIMAL COMMENT '交接后12个月存款日均总规模'
--     ,交接后12个月存款日均人数     DECIMAL COMMENT '交接后12个月存款日均人数'
--     ,交接前3个月贷款日均总规模     DECIMAL COMMENT '交接前3个月贷款日均总规模'
--     ,交接前3个月贷款日均人数      DECIMAL COMMENT '交接前3个月贷款日均人数'
--     ,交接后6个月贷款日均总规模     DECIMAL COMMENT '交接后6个月贷款日均总规模'
--     ,交接后6个月贷款日均人数      DECIMAL COMMENT '交接后6个月贷款日均人数'
--     ,交接后12个月贷款日均总规模    DECIMAL COMMENT '交接后12个月贷款日均总规模'
--     ,交接后12个月贷款日均人数     DECIMAL COMMENT '交接后12个月贷款日均人数'
--     ,mdf_cst_cnt     decimal COMMENT '交接客户数'
--     ,mdf_ctr_amt     decimal COMMENT '交接规模'
-- )
-- COMMENT
-- '客户交接前后业务波动分析_守量'
-- PARTITIONED BY
-- (
--     dt STRING
-- );

-- alter table lab_bigdata_dev.mdf_data_feature_shouliang_20221122 add columns (
    -- mdf_type  string comment '交接客户类型'  --交接客户 未全量客户
-- );

insert overwrite table lab_bigdata_dev.mdf_data_feature_shouliang_20221122 PARTITION (DT = '20230101-20231231')

select   prm_fh_org_nm  分行名称
        ,prm_zh_org_nm  支行名称
        ,case when prm_cst_cnt <= 100 then '100以内'
             when prm_cst_cnt <=300 then '100-300'
             when prm_cst_cnt <=500 then '300-500'
             when prm_cst_cnt >500 then '500以上'
             else null end as 接收人管户户数
        ,qua_sub_cls_cd  接手人信贷调查资质
        ,empe_lqd_type  按交出人人事异动
        ,case when last_90_days_gl_bal_avg_bfr >0 and last_90_days_gl_bal_avg_bfr <=100000  then '10万以下'
            when last_90_days_gl_bal_avg_bfr <=500000 then '10-50w'
            when last_90_days_gl_bal_avg_bfr >500000 then '50w以上' end 客户分段1
        ,case when last_90_days_prcp_bal_avg_bfr >0 and last_90_days_prcp_bal_avg_bfr <=500000 then '50万以下'
            when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'
            when last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'
            when last_90_days_prcp_bal_avg_bfr >= 3000000 then '300w以上' end 客户分段2
--------统计客户数字段
        ,sum(case when last_90_days_gl_bal_avg_bfr>0 then last_90_days_gl_bal_avg_bfr end) 交接前3个月存款日均总规模
        --,count(case when last_90_days_gl_bal_avg_bfr>0 then cst_id end) as 交接前3个月存款日均人数
		,count(distinct cst_id) as 交接前3个月存款日均人数
        ,sum(case when last_180_days_gl_bal_avg_aft>0 then last_180_days_gl_bal_avg_aft end) 交接后6个月存款日均总规模
        --,count(case when last_180_days_gl_bal_avg_aft>0 then cst_id end) as 交接后6个月存款日均人数
		,count(distinct cst_id) as 交接后6个月存款日均人数
        ,sum(case when last_360_days_gl_bal_avg_aft>0 then last_360_days_gl_bal_avg_aft end) 交接后12个月存款日均总规模
        --,count(case when last_360_days_gl_bal_avg_aft>0 then cst_id end) as 交接后12个月存款日均人数
		,count(distinct cst_id) as 交接后12个月存款日均人数
        ,sum(case when last_90_days_prcp_bal_avg_bfr>0 then last_90_days_prcp_bal_avg_bfr end) 交接前3个月贷款日均总规模
        --,count(case when last_90_days_prcp_bal_avg_bfr>0 then cst_id end) as 交接前3个月贷款日均人数
		,count(distinct cst_id) as 交接前3个月贷款日均人数
        ,sum(case when last_180_days_prcp_bal_avg_aft>0 then last_180_days_prcp_bal_avg_aft end) 交接后6个月贷款日均总规模
       -- ,count(case when last_180_days_prcp_bal_avg_aft>0 then cst_id end) as 交接后6个月贷款日均人数
		,count(distinct cst_id) as 交接后6个月贷款日均人数
        ,sum(case when last_360_days_prcp_bal_avg_aft>0 then last_360_days_prcp_bal_avg_aft end) 交接后12个月贷款日均总规模
        --,count(case when last_360_days_prcp_bal_avg_aft>0 then cst_id end) as 交接后12个月贷款日均人数
		,count(distinct cst_id) as 交接后12个月贷款日均人数
        ,count(cst_id) as mdf_cst_cnt
        ,sum(ctr_amt) as mdf_ctr_amt
		,mdf_type
from lab_bigdata_dev.mdf_data_feature_all_20220607
where dt = '20230101-20231231'
and mdf_type='交接客户'
group by prm_fh_org_nm,prm_zh_org_nm
        ,case when prm_cst_cnt <= 100 then '100以内'
             when prm_cst_cnt <=300 then '100-300'
             when prm_cst_cnt <=500 then '300-500'
             when prm_cst_cnt >500 then '500以上'
             else null end
        ,qua_sub_cls_cd --接手人信贷调查资质
        ,empe_lqd_type  --按交出人人事异动
        ,case when last_90_days_gl_bal_avg_bfr >0 and last_90_days_gl_bal_avg_bfr <=100000  then '10万以下'
            when last_90_days_gl_bal_avg_bfr <=500000 then '10-50w'
            when last_90_days_gl_bal_avg_bfr >500000 then '50w以上' end
         ,case when last_90_days_prcp_bal_avg_bfr >0 and last_90_days_prcp_bal_avg_bfr <=500000 then '50万以下'
            when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'
            when last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'
            when last_90_days_prcp_bal_avg_bfr >= 3000000 then '300w以上' end
			,mdf_type
               ;


--------守价
-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_shoujia_20221122;

-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_shoujia_20221122
-- (
--     分行名称  STRING  COMMENT '分行名称'
--     ,支行名称 STRING  COMMENT '支行名称'
--     ,接收人管户户数           STRING  COMMENT ''
--     ,接手人信贷调查资质    STRING  COMMENT '接手人信贷调查资质'
--     ,按交出人人事异动     STRING  COMMENT '按交出人人事异动'
--     ,客户分段              STRING  COMMENT ''
--     ,执行利率下降            STRING  COMMENT ''
--     ,执行利率不变            STRING  COMMENT ''
--     ,执行利率上升            STRING  COMMENT ''
--     ,执行利率变化            STRING  COMMENT ''
--     ,新增随贷通客户数          DECIMAL COMMENT ''
--     ,交接前非随贷通客户         DECIMAL COMMENT ''
--     ,mdf_cst_cnt     decimal COMMENT '交接客户数'
--     ,mdf_ctr_amt     decimal COMMENT '交接规模'
-- )
-- COMMENT
-- '客户交接前后业务波动分析_守价'
-- PARTITIONED BY
-- (
--     dt STRING
-- );
-- alter table lab_bigdata_dev.mdf_data_feature_shoujia_20221122 add columns (
    -- mdf_type  string comment '交接客户类型'  --交接客户 未全量客户
-- );

insert overwrite table lab_bigdata_dev.mdf_data_feature_shoujia_20221122 PARTITION (DT = '20230101-20231231')
select   prm_fh_org_nm  分行名称
        ,prm_zh_org_nm  支行名称
        ,case when prm_cst_cnt <= 100 then '100以内'
             when prm_cst_cnt <=300 then '100-300'
             when prm_cst_cnt <=500 then '300-500'
             when prm_cst_cnt >500 then '500以上'
             else null end as 接收人管户户数
        ,qua_sub_cls_cd  接手人信贷调查资质
        ,empe_lqd_type  按交出人人事异动
        ,case when last_90_days_prcp_bal_avg_bfr <=500000 then '低于50w'
            when last_90_days_prcp_bal_avg_bfr <=1500000 then '50-150w'
            when  last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'
            when  last_90_days_prcp_bal_avg_bfr > 3000000 then '300w以上'
            else null end  客户分段
--------统计客户数字段
        ,count(case when exe_intr_rate_bfr > exe_intr_rate_aft and exe_intr_rate_aft>0 then cst_id end) as 执行利率下降
        ,count(case when exe_intr_rate_bfr = exe_intr_rate_aft and exe_intr_rate_aft>0 then cst_id end) as 执行利率不变
        ,count(case when exe_intr_rate_bfr < exe_intr_rate_aft and exe_intr_rate_bfr>0 then cst_id end) as 执行利率上升
        ,count(case when coalesce(exe_intr_rate_bfr,0) <>0  and  coalesce(exe_intr_rate_aft,0) <>0 then cst_id end) as 执行利率变化
        ,count(case when new_sdt_cnt >0 and no_sdt_bfr = 1 then cst_id end) as 新增随贷通客户数
        ,count(case when no_sdt_bfr = 1 then cst_id end) as 交接前非随贷通客户
        ,count(cst_id) as mdf_cst_cnt
        ,sum(ctr_amt) as mdf_ctr_amt
		,mdf_type
from lab_bigdata_dev.mdf_data_feature_all_20220607
where dt = '20230101-20231231'
and mdf_type='交接客户'
group by  prm_fh_org_nm,prm_zh_org_nm
        ,case when prm_cst_cnt <= 100 then '100以内'
             when prm_cst_cnt <=300 then '100-300'
             when prm_cst_cnt <=500 then '300-500'
             when prm_cst_cnt >500 then '500以上'
             else null end
        ,qua_sub_cls_cd --接手人信贷调查资质
        ,empe_lqd_type  --按交出人人事异动
     ,case when last_90_days_prcp_bal_avg_bfr <=500000 then '低于50w'
    when last_90_days_prcp_bal_avg_bfr <=1500000 then '50-150w'
    when  last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'
    when  last_90_days_prcp_bal_avg_bfr > 3000000 then '300w以上'
    else null end
	,mdf_type
               ;


-- -------FTP
-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_ftp_20221122;

-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_ftp_20221122
-- (
--     分行名称  STRING  COMMENT '分行名称'
--     ,支行名称 STRING  COMMENT '支行名称'
--     ,接收人管户户数           STRING  COMMENT ''
--     ,接手人信贷调查资质    STRING  COMMENT '接手人信贷调查资质'
--     ,按交出人人事异动     STRING  COMMENT '按交出人人事异动'
--     ,客户分段              STRING  COMMENT ''
--     ,交接前3个月FTP月均总规模    DECIMAL COMMENT ''
--     ,交接前3个月FTP月均人数     DECIMAL COMMENT ''
--     ,交接后6个月FTP月均总规模    DECIMAL COMMENT ''
--     ,交接后6个月FTP月均人数     DECIMAL COMMENT ''
--     ,交接后12个月FTP月均总规模   DECIMAL COMMENT ''
--     ,交接后12个月FTP月均人数    DECIMAL COMMENT ''
--     ,mdf_cst_cnt     decimal COMMENT '交接客户数'
--     ,mdf_ctr_amt     decimal COMMENT '交接规模'
-- )
-- COMMENT
-- '客户交接前后业务波动分析_ftp'
-- PARTITIONED BY
-- (
--     dt STRING
-- );

-- alter table lab_bigdata_dev.mdf_data_feature_ftp_20221122 add columns (
    -- mdf_type  string comment '交接客户类型'  --交接客户 未全量客户
-- );


insert overwrite table lab_bigdata_dev.mdf_data_feature_ftp_20221122 PARTITION (DT = '20230101-20231231')
select  prm_fh_org_nm  分行名称
 ,prm_zh_org_nm  支行名称
        ,case when prm_cst_cnt <= 100 then '100以内'
             when prm_cst_cnt <=300 then '100-300'
             when prm_cst_cnt <=500 then '300-500'
             when prm_cst_cnt >500 then '500以上'
             else null end as 接收人管户户数
        ,qua_sub_cls_cd  接手人信贷调查资质
        ,empe_lqd_type  按交出人人事异动
    ,case when last_90_days_prcp_bal_avg_bfr >0 and last_90_days_prcp_bal_avg_bfr <=500000 then '50万以下'
    when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'
    when last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'
    when last_90_days_prcp_bal_avg_bfr >= 3000000 then '300w以上' end 客户分段
--------统计客户数字段
   ,sum(case when ftp_3_month_bfr is not null then ftp_3_month_bfr end) 交接前3个月FTP月均总规模
   ,count(distinct cst_id ) as 交接前3个月FTP月均人数
    ,sum(case when ftp_6_month_aft is not null then ftp_6_month_aft end) 交接后6个月FTP月均总规模
	 ,count(distinct cst_id ) as 交接后6个月FTP月均人数
    ,sum(case when ftp_12_month_aft is not null then ftp_12_month_aft end) 交接后12个月FTP月均总规模
	 ,count(distinct cst_id ) as 交接后12个月FTP月均人数
    ,count(cst_id) as mdf_cst_cnt
    ,sum(ctr_amt) as mdf_ctr_amt
	,mdf_type
from lab_bigdata_dev.mdf_data_feature_all_20220607
where dt = '20230101-20231231'
and mdf_type='交接客户'
group by prm_fh_org_nm,prm_zh_org_nm
        ,case when prm_cst_cnt <= 100 then '100以内'
             when prm_cst_cnt <=300 then '100-300'
             when prm_cst_cnt <=500 then '300-500'
             when prm_cst_cnt >500 then '500以上'
             else null end
        ,qua_sub_cls_cd --接手人信贷调查资质
        ,empe_lqd_type  --按交出人人事异动
     ,case when last_90_days_prcp_bal_avg_bfr >0 and last_90_days_prcp_bal_avg_bfr <=500000 then '50万以下'
    when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'
    when last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'
    when last_90_days_prcp_bal_avg_bfr >= 3000000 then '300w以上' end
	,mdf_type;


-- -------新发生风险
-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_risk_20221122;

-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_risk_20221122
-- (
--     分行名称  STRING  COMMENT '分行名称'
--     ,支行名称 STRING  COMMENT '支行名称'
--     ,接收人管户户数           STRING  COMMENT ''
--     ,接手人信贷调查资质    STRING  COMMENT '接手人信贷调查资质'
--     ,按交出人人事异动     STRING  COMMENT '按交出人人事异动'
--     ,客户分段              STRING  COMMENT ''
--     ,is_yr_new_hpn_amt decimal comment '新发生风险贷款余额'
--     ,mdf_ctr_bal decimal comment '交接客户贷款余额'
--     ,mdf_cst_cnt     decimal COMMENT '交接客户数'
--     ,mdf_ctr_amt     decimal COMMENT '交接规模'
-- )
-- COMMENT
-- '客户交接前后业务波动分析_风险'
-- PARTITIONED BY
-- (
--     dt STRING
-- );

-- alter table lab_bigdata_dev.mdf_data_feature_risk_20221122 add columns (
    -- mdf_type  string comment '交接客户类型'  --交接客户 未全量客户
-- );


insert overwrite table lab_bigdata_dev.mdf_data_feature_risk_20221122 PARTITION (DT = '20230101-20231231')
select  prm_fh_org_nm  分行名称
 ,prm_zh_org_nm  支行名称
        ,case when prm_cst_cnt <= 100 then '100以内'
             when prm_cst_cnt <=300 then '100-300'
             when prm_cst_cnt <=500 then '300-500'
             when prm_cst_cnt >500 then '500以上'
             else null end as 接收人管户户数
        ,qua_sub_cls_cd  接手人信贷调查资质
        ,empe_lqd_type  按交出人人事异动
    ,case when last_90_days_prcp_bal_avg_bfr >0 and last_90_days_prcp_bal_avg_bfr <=500000 then '50万以下'
        when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'
        when last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'
        when last_90_days_prcp_bal_avg_bfr >= 3000000 then '300w以上' end 客户分段
--------统计客户数字段
    ,sum(is_yr_new_hpn_amt) is_yr_new_hpn_amt
    ,sum(mdf_ctr_bal) as mdf_ctr_bal
    ,count(cst_id) as mdf_cst_cnt
    ,sum(ctr_amt) as mdf_ctr_amt
	,mdf_type
from lab_bigdata_dev.mdf_data_feature_all_20220607
where dt = '20230101-20231231'
and mdf_type='交接客户'
group by prm_fh_org_nm,prm_zh_org_nm
        ,case when prm_cst_cnt <= 100 then '100以内'
             when prm_cst_cnt <=300 then '100-300'
             when prm_cst_cnt <=500 then '300-500'
             when prm_cst_cnt >500 then '500以上'
             else null end
        ,qua_sub_cls_cd --接手人信贷调查资质
        ,empe_lqd_type  --按交出人人事异动
     ,case when last_90_days_prcp_bal_avg_bfr >0 and last_90_days_prcp_bal_avg_bfr <=500000 then '50万以下'
    when last_90_days_prcp_bal_avg_bfr <= 1500000 then '50-150w'
    when last_90_days_prcp_bal_avg_bfr <= 3000000 then '150-300w'
    when last_90_days_prcp_bal_avg_bfr >= 3000000 then '300w以上' end
	,mdf_type;

--------总结雷达图
/*
DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_zj_20221122;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_zj_20221122
(
    分行名称  STRING  COMMENT '分行名称'
	,prm_org_id   STRING  COMMENT '主管户机构'
    ,prm_fh_org_id        STRING  COMMENT '主管户分行机构号'
    ,prm_zh_org_id        STRING  COMMENT '主管户支行机构号'
    ,prm_zh_org_nm        STRING  COMMENT '主管户支行名称'
	,mdf_cst_cnt     decimal COMMENT '交接客户数'
    ,接收人管户户数           STRING  COMMENT ''
    ,接手人信贷调查资质    STRING  COMMENT '接手人信贷调查资质'
    ,按交出人人事异动     STRING  COMMENT '按交出人人事异动'
    ,客户分段              STRING  COMMENT ''
	,交接前非有效户            DECIMAL  COMMENT '交接前非有效户'
    ,交接前非有效户交接后3个月是有效户  DECIMAL  COMMENT '交接前非有效户交接后3个月是有效户'
    ,交接前非有效户交接后6个月是有效户  DECIMAL  COMMENT '交接前非有效户交接后6个月是有效户'
    ,交接前非有效户交接后12个月是有效户 DECIMAL  COMMENT '交接前非有效户交接后12个月是有效户'
    ,交接前是有效户            DECIMAL  COMMENT '交接前是有效户'
    ,交接前是有效户交接后3个月非有效户  DECIMAL  COMMENT '交接前是有效户交接后3个月非有效户'
    ,交接前是有效户交接后6个月非有效户  DECIMAL  COMMENT '交接前是有效户交接后6个月非有效户'
    ,交接前是有效户交接后12个月非有效户 DECIMAL  COMMENT '交接前是有效户交接后12个月非有效户'
	,交接前非有效信贷户       DECIMAL   COMMENT '交接前非有效信贷户'
    ,交接前非有效信贷户交接后3个月是有效信贷户 DECIMAL COMMENT '交接前非有效信贷户交接后3个月是有效信贷户'
    ,交接前非有效信贷户交接后6个月是有效信贷户 DECIMAL COMMENT '交接前非有效信贷户交接后6个月是有效信贷户'
    ,交接前非有效信贷户交接后12个月是有效信贷户 DECIMAL COMMENT '交接前非有效信贷户交接后12个月是有效信贷户'
    ,交接前是有效信贷户       DECIMAL COMMENT '交接前是有效信贷户'
    ,交接前是有效信贷户交接后3个月非有效信贷户 DECIMAL COMMENT '交接前是有效信贷户交接后3个月非有效信贷户'
    ,交接前是有效信贷户交接后6个月非有效信贷户 DECIMAL COMMENT '交接前是有效信贷户交接后6个月非有效信贷户'
    ,交接前是有效信贷户交接后12个月非有效信贷户 DECIMAL COMMENT '交接前是有效信贷户交接后12个月非有效信贷户'
    ,续贷客户数              DECIMAL COMMENT '续贷客户数'
    ,贷款到期客户数            DECIMAL COMMENT '贷款到期客户数'
    ,续存客户数              DECIMAL COMMENT '续存客户数'
    ,存款到期客户数            DECIMAL COMMENT '存款到期客户数'
    ,交接前3个月存款日均总规模     DECIMAL COMMENT '交接前3个月存款日均总规模'
    ,交接前3个月存款日均人数      DECIMAL COMMENT '交接前3个月存款日均人数'
    ,交接后6个月存款日均总规模     DECIMAL COMMENT '交接后6个月存款日均总规模'
    ,交接后6个月存款日均人数      DECIMAL COMMENT '交接后6个月存款日均人数'
    ,交接后12个月存款日均总规模    DECIMAL COMMENT '交接后12个月存款日均总规模'
    ,交接后12个月存款日均人数     DECIMAL COMMENT '交接后12个月存款日均人数'
    ,交接前3个月贷款日均总规模     DECIMAL COMMENT '交接前3个月贷款日均总规模'
    ,交接前3个月贷款日均人数      DECIMAL COMMENT '交接前3个月贷款日均人数'
    ,交接后6个月贷款日均总规模     DECIMAL COMMENT '交接后6个月贷款日均总规模'
    ,交接后6个月贷款日均人数      DECIMAL COMMENT '交接后6个月贷款日均人数'
    ,交接后12个月贷款日均总规模    DECIMAL COMMENT '交接后12个月贷款日均总规模'
    ,交接后12个月贷款日均人数     DECIMAL COMMENT '交接后12个月贷款日均人数'
     ,执行利率下降            DECIMAL  COMMENT ''
    ,执行利率不变            DECIMAL  COMMENT ''
    ,执行利率上升            DECIMAL  COMMENT ''
    ,执行利率变化            DECIMAL  COMMENT ''
    ,新增随贷通客户数          DECIMAL COMMENT ''
    ,交接前非随贷通客户         DECIMAL COMMENT ''
    ,交接前3个月FTP月均总规模    DECIMAL COMMENT ''
    ,交接前3个月FTP月均人数     DECIMAL COMMENT ''
    ,交接后6个月FTP月均总规模    DECIMAL COMMENT ''
    ,交接后6个月FTP月均人数     DECIMAL COMMENT ''
    ,交接后12个月FTP月均总规模   DECIMAL COMMENT ''
    ,交接后12个月FTP月均人数    DECIMAL COMMENT ''
	, mdf_type  string comment '交接客户类型'  --交接客户 未全量客户
	 ,is_yr_new_hpn_amt decimal comment '新发生风险贷款余额'
    ,mdf_ctr_bal decimal comment '交接客户贷款余额'
)
COMMENT
'客户交接前后业务波动分析_总结1_原始数值'
PARTITIONED BY
(
    dt STRING
);
*/
insert overwrite table lab_bigdata_dev.mdf_data_feature_zj_20221122 PARTITION (DT = '20230101-20231231')
SELECT  prm_fh_org_nm 分行名称
	,prm_org_id   ---主管户机构
    ,prm_fh_org_id        -- 主管户分行机构号
    ,prm_zh_org_id        -- 主管户支行机构号
    ,prm_zh_org_nm        -- 主管户支行名称
	,count(cst_id) as mdf_cst_cnt
        ,CASE
           WHEN prm_cst_cnt <= 100 THEN '100以内'
           WHEN prm_cst_cnt <= 300 THEN '100-300'
           WHEN prm_cst_cnt <= 500 THEN '300-500'
           WHEN prm_cst_cnt > 500  THEN '500以上'
           ELSE NULL
         END        AS 接收人管户户数
        ,qua_sub_cls_cd 接手人信贷调查资质
        ,empe_lqd_type 按交出人人事异动
        ,CASE
           WHEN last_90_days_prcp_bal_avg_bfr > 0 AND last_90_days_prcp_bal_avg_bfr <= 500000 THEN '50万以下'
           WHEN last_90_days_prcp_bal_avg_bfr <= 1500000                                      THEN '50-150w'
           WHEN last_90_days_prcp_bal_avg_bfr <= 3000000                                      THEN '150-300w'
           WHEN last_90_days_prcp_bal_avg_bfr >= 3000000                                      THEN '300w以上'
         END 客户分段

        --------统计客户数字段
        ,count(CASE                  WHEN efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' THEN cst_id                END) AS 交接前非有效户
		,count(CASE                  WHEN ( efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' ) AND efe_cst_ind_aft_3_month = '1' THEN cst_id                END) AS 交接前非有效户交接后3个月是有效户
        ,count(CASE                  WHEN ( efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' ) AND efe_cst_ind_aft_6_month = '1' THEN cst_id                END) AS 交接前非有效户交接后6个月是有效户
        ,count(CASE                  WHEN ( efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' ) AND efe_cst_ind_aft_12_month = '1' THEN cst_id                END) AS 交接前非有效户交接后12个月是有效户
        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' THEN cst_id                END) AS 交接前是有效户
        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' AND ( efe_cst_ind_aft_3_month = '0' OR efe_cst_ind_aft_3_month = '' ) THEN cst_id                END) AS 交接前是有效户交接后3个月非有效户
        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' AND ( efe_cst_ind_aft_6_month = '0' OR efe_cst_ind_aft_6_month = '' ) THEN cst_id                END) AS 交接前是有效户交接后6个月非有效户
        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' AND ( efe_cst_ind_aft_12_month = '0' OR efe_cst_ind_aft_12_month = '' ) THEN cst_id                END) AS 交接前是有效户交接后12个月非有效户

		--有效信贷户
		,count(CASE                  WHEN efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' THEN cst_id                END) AS 交接前非有效信贷户
		,count(CASE                  WHEN ( efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' ) AND efe_loan_cst_ind_aft_3_month = '1' THEN cst_id                END) AS 交接前非有效信贷户交接后3个月是有效信贷户
        ,count(CASE                  WHEN ( efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' ) AND efe_loan_cst_ind_aft_6_month = '1' THEN cst_id                END) AS 交接前非有效信贷户交接后6个月是有效信贷户
        ,count(CASE                  WHEN ( efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' ) AND efe_loan_cst_ind_aft_12_month = '1' THEN cst_id                END) AS 交接前非有效信贷户交接后12个月是有效信贷户
        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' THEN cst_id                END) AS 交接前是有效信贷户
        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' AND ( efe_loan_cst_ind_aft_3_month = '0' OR efe_loan_cst_ind_aft_3_month = '' ) THEN cst_id                END) AS 交接前是有效信贷户交接后3个月非有效信贷户
        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' AND ( efe_loan_cst_ind_aft_6_month = '0' OR efe_loan_cst_ind_aft_6_month = '' ) THEN cst_id                END) AS 交接前是有效信贷户交接后6个月非有效信贷户
        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' AND ( efe_loan_cst_ind_aft_12_month = '0' OR efe_loan_cst_ind_aft_12_month = '' ) THEN cst_id                END) AS 交接前是有效信贷户交接后12个月非有效信贷户

        ,count(CASE                  WHEN is_loan_continue = 1 THEN cst_id                END) AS 续贷客户数
        ,count(CASE                  WHEN is_loan_finish = 1 THEN cst_id                END) AS 贷款到期客户数
        ,count(CASE                  WHEN IS_CUR_DSTR_EXPIRE = 1 AND IS_CUR_CONTINUE = 1 THEN cst_id                END) AS 续存客户数
        ,count(CASE                  WHEN IS_CUR_DSTR_EXPIRE = 1 THEN cst_id                END) AS 存款到期客户数
        ,sum(CASE               	 WHEN last_90_days_gl_bal_avg_bfr > 0 THEN last_90_days_gl_bal_avg_bfr              END) 交接前3个月存款日均总规模
		,count( distinct cst_id) AS 交接前3个月存款日均人数
        ,sum(CASE            	     WHEN last_180_days_gl_bal_avg_aft > 0 THEN last_180_days_gl_bal_avg_aft              END) 交接后6个月存款日均总规模
		,count( distinct cst_id) AS 交接后6个月存款日均人数
        ,sum(CASE            	     WHEN last_360_days_gl_bal_avg_aft > 0 THEN last_360_days_gl_bal_avg_aft              END) 交接后12个月存款日均总规模
		,count( distinct cst_id) AS 交接后12个月存款日均人数
        ,sum(CASE              	     WHEN last_90_days_prcp_bal_avg_bfr > 0 THEN last_90_days_prcp_bal_avg_bfr              END) 交接前3个月贷款日均总规模
		,count( distinct cst_id) AS 交接前3个月贷款日均人数
        ,sum(CASE                    WHEN last_180_days_prcp_bal_avg_aft > 0 THEN last_180_days_prcp_bal_avg_aft              END) 交接后6个月贷款日均总规模
		,count( distinct cst_id) AS 交接后6个月贷款日均人数
        ,sum(CASE                    WHEN last_360_days_prcp_bal_avg_aft > 0 THEN last_360_days_prcp_bal_avg_aft              END) 交接后12个月贷款日均总规模
		,count( distinct cst_id) AS 交接后12个月贷款日均人数

		 ,count(case when exe_intr_rate_bfr > exe_intr_rate_aft and exe_intr_rate_aft>0 then cst_id end) as 执行利率下降
        ,count(case when exe_intr_rate_bfr = exe_intr_rate_aft and exe_intr_rate_aft>0 then cst_id end) as 执行利率不变
        ,count(case when exe_intr_rate_bfr < exe_intr_rate_aft and exe_intr_rate_bfr>0 then cst_id end) as 执行利率上升
        ,count(case when coalesce(exe_intr_rate_bfr,0) <>0  and  coalesce(exe_intr_rate_aft,0) <>0 then cst_id end) as 执行利率变化


		-- ,case when sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)) end as exe_intr_rate_bfr
		-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0)) end as exe_intr_rate_aft
			-- --分子分母拆开，方便后面汇总
	   -- ,sum(coalesce(exe_intr_rate_bfr_fenzi,0)) as exe_intr_rate_bfr_fenzi
	   -- ,sum(coalesce(exe_intr_rate_bfr_fenmu,0)) as exe_intr_rate_bfr_fenmu
       -- ,sum(coalesce(exe_intr_rate_aft_fenzi,0)) as exe_intr_rate_aft_fenzi
	   -- ,sum(coalesce(exe_intr_rate_aft_fenmu,0)) as exe_intr_rate_aft_fenmu
		--,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_aft_fenmu,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-case when sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_bfr_fenmu,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)) AS 执行利率变化绝对值
		--,case when case when sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_bfr_fenmu,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0
		--	 then (case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_aft_fenmu,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-case when sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_bfr_fenmu,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)))/(case when sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 then  sum(coalesce(exe_intr_rate_bfr_fenmu,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0))) AS 执行利率变化相对值

        ,count(CASE                  WHEN new_sdt_cnt > 0 AND no_sdt_bfr = 1 THEN cst_id                END) AS 新增随贷通客户数
        ,count(CASE                  WHEN no_sdt_bfr = 1 THEN cst_id                END) AS 交接前非随贷通客户
        ,sum(CASE              	     WHEN ftp_3_month_bfr IS NOT NULL THEN ftp_3_month_bfr              END) 交接前3个月FTP月均总规模
		,count( distinct cst_id) AS 交接前3个月FTP月均人数
        ,sum(CASE                    WHEN ftp_6_month_aft IS NOT NULL THEN ftp_6_month_aft              END) 交接后6个月FTP月均总规模
		,count( distinct cst_id) AS 交接后6个月FTP月均人数
        ,sum(CASE                    WHEN ftp_12_month_aft IS NOT NULL THEN ftp_12_month_aft              END) 交接后12个月FTP月均总规模
		,count( distinct cst_id) AS 交接后12个月FTP月均人数
		,mdf_type
		,sum(is_yr_new_hpn_amt) is_yr_new_hpn_amt
		,sum(mdf_ctr_bal) as mdf_ctr_bal
FROM    lab_bigdata_dev.mdf_data_feature_all_20220607
WHERE   dt = '20230101-20231231'

GROUP BY
 prm_fh_org_nm
	,prm_org_id   ---主管户机构
    ,prm_fh_org_id        -- 主管户分行机构号
    ,prm_zh_org_id        -- 主管户支行机构号
    ,prm_zh_org_nm        -- 主管户支行名称
	,CASE
                           WHEN prm_cst_cnt <= 100 THEN '100以内'
                           WHEN prm_cst_cnt <= 300 THEN '100-300'
                           WHEN prm_cst_cnt <= 500 THEN '300-500'
                           WHEN prm_cst_cnt > 500  THEN '500以上'
                           ELSE NULL
                         END , qua_sub_cls_cd --接手人信贷调查资质
, empe_lqd_type --按交出人人事异动
, CASE
    WHEN last_90_days_prcp_bal_avg_bfr > 0 AND last_90_days_prcp_bal_avg_bfr <= 500000 THEN '50万以下'
    WHEN last_90_days_prcp_bal_avg_bfr <= 1500000                                      THEN '50-150w'
    WHEN last_90_days_prcp_bal_avg_bfr <= 3000000                                      THEN '150-300w'
    WHEN last_90_days_prcp_bal_avg_bfr >= 3000000                                      THEN '300w以上'
  END
  ,mdf_type
  union
  --全行
  SELECT  '全行' as 分行名称
	,''   ---主管户机构
   ,''         -- 主管户分行机构号
   ,''        -- 主管户支行机构号
   ,''         -- 主管户支行名称
	,count(cst_id) as mdf_cst_cnt
        ,CASE
           WHEN prm_cst_cnt <= 100 THEN '100以内'
           WHEN prm_cst_cnt <= 300 THEN '100-300'
           WHEN prm_cst_cnt <= 500 THEN '300-500'
           WHEN prm_cst_cnt > 500  THEN '500以上'
           ELSE NULL
         END        AS 接收人管户户数
        ,qua_sub_cls_cd 接手人信贷调查资质
        ,empe_lqd_type 按交出人人事异动
        ,CASE
           WHEN last_90_days_prcp_bal_avg_bfr > 0 AND last_90_days_prcp_bal_avg_bfr <= 500000 THEN '50万以下'
           WHEN last_90_days_prcp_bal_avg_bfr <= 1500000                                      THEN '50-150w'
           WHEN last_90_days_prcp_bal_avg_bfr <= 3000000                                      THEN '150-300w'
           WHEN last_90_days_prcp_bal_avg_bfr >= 3000000                                      THEN '300w以上'
         END 客户分段

        --------统计客户数字段
        ,count(CASE                  WHEN efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' THEN cst_id                END) AS 交接前非有效户
		,count(CASE                  WHEN ( efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' ) AND efe_cst_ind_aft_3_month = '1' THEN cst_id                END) AS 交接前非有效户交接后3个月是有效户
        ,count(CASE                  WHEN ( efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' ) AND efe_cst_ind_aft_6_month = '1' THEN cst_id                END) AS 交接前非有效户交接后6个月是有效户
        ,count(CASE                  WHEN ( efe_cst_ind_bfr = '0' OR efe_cst_ind_bfr = '' ) AND efe_cst_ind_aft_12_month = '1' THEN cst_id                END) AS 交接前非有效户交接后12个月是有效户
        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' THEN cst_id                END) AS 交接前是有效户
        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' AND ( efe_cst_ind_aft_3_month = '0' OR efe_cst_ind_aft_3_month = '' ) THEN cst_id                END) AS 交接前是有效户交接后3个月非有效户
        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' AND ( efe_cst_ind_aft_6_month = '0' OR efe_cst_ind_aft_6_month = '' ) THEN cst_id                END) AS 交接前是有效户交接后6个月非有效户
        ,count(CASE                  WHEN efe_cst_ind_bfr = '1' AND ( efe_cst_ind_aft_12_month = '0' OR efe_cst_ind_aft_12_month = '' ) THEN cst_id                END) AS 交接前是有效户交接后12个月非有效户

		--有效信贷户
		,count(CASE                  WHEN efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' THEN cst_id                END) AS 交接前非有效信贷户
		,count(CASE                  WHEN ( efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' ) AND efe_loan_cst_ind_aft_3_month = '1' THEN cst_id                END) AS 交接前非有效信贷户交接后3个月是有效信贷户
        ,count(CASE                  WHEN ( efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' ) AND efe_loan_cst_ind_aft_6_month = '1' THEN cst_id                END) AS 交接前非有效信贷户交接后6个月是有效信贷户
        ,count(CASE                  WHEN ( efe_loan_cst_ind_bfr = '0' OR efe_loan_cst_ind_bfr = '' ) AND efe_loan_cst_ind_aft_12_month = '1' THEN cst_id                END) AS 交接前非有效信贷户交接后12个月是有效信贷户
        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' THEN cst_id                END) AS 交接前是有效信贷户
        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' AND ( efe_loan_cst_ind_aft_3_month = '0' OR efe_loan_cst_ind_aft_3_month = '' ) THEN cst_id                END) AS 交接前是有效信贷户交接后3个月非有效信贷户
        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' AND ( efe_loan_cst_ind_aft_6_month = '0' OR efe_loan_cst_ind_aft_6_month = '' ) THEN cst_id                END) AS 交接前是有效信贷户交接后6个月非有效信贷户
        ,count(CASE                  WHEN efe_loan_cst_ind_bfr = '1' AND ( efe_loan_cst_ind_aft_12_month = '0' OR efe_loan_cst_ind_aft_12_month = '' ) THEN cst_id                END) AS 交接前是有效信贷户交接后12个月非有效信贷户

        ,count(CASE                  WHEN is_loan_continue = 1 THEN cst_id                END) AS 续贷客户数
        ,count(CASE                  WHEN is_loan_finish = 1 THEN cst_id                END) AS 贷款到期客户数
        ,count(CASE                  WHEN IS_CUR_DSTR_EXPIRE = 1 AND IS_CUR_CONTINUE = 1 THEN cst_id                END) AS 续存客户数
        ,count(CASE                  WHEN IS_CUR_DSTR_EXPIRE = 1 THEN cst_id                END) AS 存款到期客户数
        ,sum(CASE               	 WHEN last_90_days_gl_bal_avg_bfr > 0 THEN last_90_days_gl_bal_avg_bfr              END) 交接前3个月存款日均总规模
		,count( distinct cst_id) AS 交接前3个月存款日均人数
        ,sum(CASE            	     WHEN last_180_days_gl_bal_avg_aft > 0 THEN last_180_days_gl_bal_avg_aft              END) 交接后6个月存款日均总规模
		,count( distinct cst_id) AS 交接后6个月存款日均人数
        ,sum(CASE            	     WHEN last_360_days_gl_bal_avg_aft > 0 THEN last_360_days_gl_bal_avg_aft              END) 交接后12个月存款日均总规模
		,count( distinct cst_id) AS 交接后12个月存款日均人数
        ,sum(CASE              	     WHEN last_90_days_prcp_bal_avg_bfr > 0 THEN last_90_days_prcp_bal_avg_bfr              END) 交接前3个月贷款日均总规模
		,count( distinct cst_id) AS 交接前3个月贷款日均人数
        ,sum(CASE                    WHEN last_180_days_prcp_bal_avg_aft > 0 THEN last_180_days_prcp_bal_avg_aft              END) 交接后6个月贷款日均总规模
		,count( distinct cst_id) AS 交接后6个月贷款日均人数
        ,sum(CASE                    WHEN last_360_days_prcp_bal_avg_aft > 0 THEN last_360_days_prcp_bal_avg_aft              END) 交接后12个月贷款日均总规模
		,count( distinct cst_id) AS 交接后12个月贷款日均人数

		 ,count(case when exe_intr_rate_bfr > exe_intr_rate_aft and exe_intr_rate_aft>0 then cst_id end) as 执行利率下降
        ,count(case when exe_intr_rate_bfr = exe_intr_rate_aft and exe_intr_rate_aft>0 then cst_id end) as 执行利率不变
        ,count(case when exe_intr_rate_bfr < exe_intr_rate_aft and exe_intr_rate_bfr>0 then cst_id end) as 执行利率上升
        ,count(case when coalesce(exe_intr_rate_bfr,0) <>0  and  coalesce(exe_intr_rate_aft,0) <>0 then cst_id end) as 执行利率变化

        ,count(CASE                  WHEN new_sdt_cnt > 0 AND no_sdt_bfr = 1 THEN cst_id                END) AS 新增随贷通客户数
        ,count(CASE                  WHEN no_sdt_bfr = 1 THEN cst_id                END) AS 交接前非随贷通客户
        ,sum(CASE              	     WHEN ftp_3_month_bfr IS NOT NULL THEN ftp_3_month_bfr              END) 交接前3个月FTP月均总规模
		,count( distinct cst_id) AS 交接前3个月FTP月均人数
        ,sum(CASE                    WHEN ftp_6_month_aft IS NOT NULL THEN ftp_6_month_aft              END) 交接后6个月FTP月均总规模
		,count( distinct cst_id) AS 交接后6个月FTP月均人数
        ,sum(CASE                    WHEN ftp_12_month_aft IS NOT NULL THEN ftp_12_month_aft              END) 交接后12个月FTP月均总规模
		,count( distinct cst_id) AS 交接后12个月FTP月均人数
		,mdf_type
		,sum(is_yr_new_hpn_amt) is_yr_new_hpn_amt
		,sum(mdf_ctr_bal) as mdf_ctr_bal
FROM    lab_bigdata_dev.mdf_data_feature_all_20220607
WHERE   dt = '20230101-20231231'
and  prm_fh_org_nm rlike '分行'
GROUP BY
CASE
                           WHEN prm_cst_cnt <= 100 THEN '100以内'
                           WHEN prm_cst_cnt <= 300 THEN '100-300'
                           WHEN prm_cst_cnt <= 500 THEN '300-500'
                           WHEN prm_cst_cnt > 500  THEN '500以上'
                           ELSE NULL
                         END , qua_sub_cls_cd --接手人信贷调查资质
, empe_lqd_type --按交出人人事异动
, CASE
    WHEN last_90_days_prcp_bal_avg_bfr > 0 AND last_90_days_prcp_bal_avg_bfr <= 500000 THEN '50万以下'
    WHEN last_90_days_prcp_bal_avg_bfr <= 1500000                                      THEN '50-150w'
    WHEN last_90_days_prcp_bal_avg_bfr <= 3000000                                      THEN '150-300w'
    WHEN last_90_days_prcp_bal_avg_bfr >= 3000000                                      THEN '300w以上'
  END
  ,mdf_type
  ;



-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_zj_2_20221122;
-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_zj_2_20221122
-- (
    -- 分行名称      STRING COMMENT '分行名称'
    -- ,mdf_type  string COMMENT '交接类型'
	-- ,type  STRING COMMENT '关联字段1'
    -- ,有效户流失率  decimal COMMENT ''
	-- ,有效户转化率  decimal COMMENT ''
    -- ,续贷率      decimal COMMENT ''
    -- ,续存率      decimal COMMENT ''
    -- ,增长率_贷款   decimal COMMENT ''
    -- ,增长率_存款   decimal COMMENT ''
    -- ,执行利率下降占比 decimal COMMENT ''
    -- ,配卡率      decimal COMMENT ''
    -- ,ftp涨跌幅   decimal COMMENT ''
	-- ,IS_YR_NEW_HPN_rate  decimal comment '本年新发生风险贷款率'
-- )
-- COMMENT
-- '客户交接前后业务波动分析_总结2_原始数值_比例'
-- PARTITIONED BY
-- (
    -- dt STRING
-- );

insert overwrite table lab_bigdata_dev.mdf_data_feature_zj_2_20221122 PARTITION (DT = '20230101-20231231')

SELECT  分行名称
	,mdf_type
	,'1' AS type
	,CASE            WHEN sum(交接前是有效户) = 0 THEN 0            ELSE sum(交接前是有效户交接后12个月非有效户) / sum(交接前是有效户)          END 转化率1
	,CASE            WHEN sum(交接前非有效户) = 0 THEN 0            ELSE sum(交接前非有效户交接后12个月是有效户) / sum(交接前非有效户)          END 转化率2
	,CASE            WHEN sum(贷款到期客户数) = 0 THEN 0            ELSE sum(续贷客户数) / sum(贷款到期客户数)          END 续贷率
	,CASE            WHEN sum(存款到期客户数) = 0 THEN 0            ELSE sum(续存客户数) / sum(存款到期客户数)          END 续存率
	,CASE   WHEN (  CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数) END ) = 0 THEN 0
			ELSE ( ( CASE WHEN sum(交接后12个月贷款日均人数) = 0 THEN 0 ELSE sum(交接后12个月贷款日均总规模) / sum(交接后12个月贷款日均人数)  END  ) -
			( CASE WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) ) / ( CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0 ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) END 增长率_贷款
	,CASE WHEN ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) = 0 THEN 0
		  ELSE ( ( CASE WHEN sum(交接后12个月存款日均人数) = 0 THEN 0 ELSE sum(交接后12个月存款日均总规模) / sum(交接后12个月存款日均人数)  END  ) - (
		 CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0    ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数)  END  ) ) / ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) END 增长率_存款
	,CASE WHEN ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) ) = 0 THEN 0 ELSE sum(执行利率下降) / ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) )          END 执行利率下降占比
	,CASE WHEN sum(交接前非随贷通客户) = 0 THEN 0 ELSE sum(新增随贷通客户数) / sum(交接前非随贷通客户)          END 配卡率
	,CASE WHEN ( CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END ) = 0 THEN 0
		  ELSE ( (  CASE  WHEN sum(交接后12个月ftp月均人数) = 0 THEN 0   ELSE sum(交接后12个月ftp月均总规模) / sum(交接后12个月ftp月均人数)  END   ) - (
		  CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0    ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END   ) ) / (CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END )  END ftp涨跌幅
	,case when sum(mdf_ctr_bal)=0 then 0 else sum(is_yr_new_hpn_amt)/sum(mdf_ctr_bal) end as 	本年新发生风险贷款率
FROM    lab_bigdata_dev.mdf_data_feature_zj_20221122 a
where a . 分行名称 rlike '分行'
and DT = '20230101-20231231'
GROUP BY 分行名称 , mdf_type
union
SELECT  '全行' as 分行名称
		,mdf_type
        ,'1' AS type
        ,CASE            WHEN sum(交接前是有效户) = 0 THEN 0            ELSE sum(交接前是有效户交接后12个月非有效户) / sum(交接前是有效户)          END 转化率1
        ,CASE            WHEN sum(交接前非有效户) = 0 THEN 0            ELSE sum(交接前非有效户交接后12个月是有效户) / sum(交接前非有效户)          END 转化率2
        ,CASE            WHEN sum(贷款到期客户数) = 0 THEN 0            ELSE sum(续贷客户数) / sum(贷款到期客户数)          END 续贷率
        ,CASE            WHEN sum(存款到期客户数) = 0 THEN 0            ELSE sum(续存客户数) / sum(存款到期客户数)          END 续存率
        ,CASE   WHEN (  CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数) END ) = 0 THEN 0
				ELSE ( ( CASE WHEN sum(交接后12个月贷款日均人数) = 0 THEN 0 ELSE sum(交接后12个月贷款日均总规模) / sum(交接后12个月贷款日均人数)  END  ) -
				( CASE WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) ) / ( CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0 ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) END 增长率_贷款
        ,CASE WHEN ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) = 0 THEN 0
			  ELSE ( ( CASE WHEN sum(交接后12个月存款日均人数) = 0 THEN 0 ELSE sum(交接后12个月存款日均总规模) / sum(交接后12个月存款日均人数)  END  ) - (
             CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0    ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数)  END  ) ) / ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) END 增长率_存款
        ,CASE WHEN ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) ) = 0 THEN 0 ELSE sum(执行利率下降) / ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) )          END 执行利率下降占比
        ,CASE WHEN sum(交接前非随贷通客户) = 0 THEN 0 ELSE sum(新增随贷通客户数) / sum(交接前非随贷通客户)          END 配卡率
        ,CASE WHEN ( CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END ) = 0 THEN 0
			  ELSE ( (  CASE  WHEN sum(交接后12个月ftp月均人数) = 0 THEN 0   ELSE sum(交接后12个月ftp月均总规模) / sum(交接后12个月ftp月均人数)  END   ) - (
			  CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0    ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END   ) ) / (CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END )  END ftp涨跌幅
        ,case when sum(mdf_ctr_bal)=0 then 0 else sum(is_yr_new_hpn_amt)/sum(mdf_ctr_bal) end as 	本年新发生风险贷款率
		-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0  and sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0  then  sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-
				  -- sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)) end AS 执行利率变化绝对值
		-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0  and sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 and sum(coalesce(exe_intr_rate_bfr_fenzi,0))>0 then  (sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-
				  -- sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)))/( sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0))) end AS 执行利率变化相对值
FROM    lab_bigdata_dev.mdf_data_feature_zj_20221122 a
where a . 分行名称 rlike '分行'
and DT = '20230101-20231231'
GROUP BY mdf_type
;
/*

SELECT  '全行' as 分行名称
		,mdf_type
        ,'1' AS type
        ,CASE            WHEN sum(交接前是有效户) = 0 THEN 0            ELSE sum(交接前是有效户交接后12个月非有效户) / sum(交接前是有效户)          END 转化率1
		,sum(交接前是有效户) 交接前是有效户
		,sum(交接前是有效户交接后12个月非有效户)  交接前是有效户交接后12个月非有效户
        ,CASE            WHEN sum(交接前非有效户) = 0 THEN 0            ELSE sum(交接前非有效户交接后12个月是有效户) / sum(交接前非有效户)          END 转化率2
		,sum(交接前非有效户)  交接前非有效户
		,sum(交接前非有效户交接后12个月是有效户) 交接前非有效户交接后12个月是有效户
        ,CASE            WHEN sum(贷款到期客户数) = 0 THEN 0            ELSE sum(续贷客户数) / sum(贷款到期客户数)          END 续贷率
		,sum(贷款到期客户数)
		,sum(续贷客户数) 续贷客户数
        ,CASE            WHEN sum(存款到期客户数) = 0 THEN 0            ELSE sum(续存客户数) / sum(存款到期客户数)          END 续存率
		,sum(存款到期客户数) 存款到期客户数
		,sum(续存客户数) 续存客户数
        ,CASE   WHEN (  CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数) END ) = 0 THEN 0
				ELSE ( ( CASE WHEN sum(交接后12个月贷款日均人数) = 0 THEN 0 ELSE sum(交接后12个月贷款日均总规模) / sum(交接后12个月贷款日均人数)  END  ) -
				( CASE WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) ) / ( CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0 ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) END 增长率_贷款
        ,sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数) 交接前3个月户均贷款规模
		,sum(交接后12个月贷款日均总规模) / sum(交接后12个月贷款日均人数)-sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数) 交接后12个月户均贷款规模

		,CASE WHEN ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) = 0 THEN 0
			  ELSE ( ( CASE WHEN sum(交接后12个月存款日均人数) = 0 THEN 0 ELSE sum(交接后12个月存款日均总规模) / sum(交接后12个月存款日均人数)  END  ) - (
             CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0    ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数)  END  ) ) / ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) END 增长率_存款
        ,sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) 交接前3个月户均存款规模
		,sum(交接后12个月存款日均总规模) / sum(交接后12个月存款日均人数)-sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) 交接后12个月户均存款规模
		,CASE WHEN ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) ) = 0 THEN 0 ELSE sum(执行利率下降) / ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) )          END 执行利率下降占比
		, sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) 交接后12个月续贷的客户数
		,sum(执行利率下降) 执行利率下降客户数
        ,CASE WHEN sum(交接前非随贷通客户) = 0 THEN 0 ELSE sum(新增随贷通客户数) / sum(交接前非随贷通客户)          END 配卡率
		,sum(交接前非随贷通客户)  交接前非随贷通客户
		,sum(新增随贷通客户数) 新增随贷通客户数
        ,CASE WHEN ( CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END ) = 0 THEN 0
			  ELSE ( (  CASE  WHEN sum(交接后12个月ftp月均人数) = 0 THEN 0   ELSE sum(交接后12个月ftp月均总规模) / sum(交接后12个月ftp月均人数)  END   ) - (
			  CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0    ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END   ) ) / (CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END )  END ftp涨跌幅
        ,sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  交接前户均月ftp
		,(sum(交接后12个月ftp月均总规模) / sum(交接后12个月ftp月均人数)) - (sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数))  as 交接后户均月ftp减交接前户均月ftp
		,case when sum(mdf_ctr_bal)=0 then 0 else sum(is_yr_new_hpn_amt)/sum(mdf_ctr_bal) end as 	本年新发生风险贷款率
		,sum(mdf_ctr_bal) 贷款余额不含核销
		,sum(is_yr_new_hpn_amt) 新发生风险贷款余额
		-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0  and sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0  then  sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-
				  -- sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)) end AS 执行利率变化绝对值
		-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0  and sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 and sum(coalesce(exe_intr_rate_bfr_fenzi,0))>0 then  (sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-
				  -- sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)))/( sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0))) end AS 执行利率变化相对值
FROM    lab_bigdata_dev.202312_mdf_data_feature_zj_20221122 a
where a . 分行名称 rlike '分行'
and mdf_type='全量客户'
GROUP BY mdf_type
;*/



-- DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_zj_3_20221122;

-- CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_zj_3_20221122
-- (
    -- 分行名称      STRING COMMENT '分行名称'
    -- ,转化率_是转非  BIGINT COMMENT ''
    -- ,转化率_非转是  BIGINT COMMENT ''
    -- ,续贷率      BIGINT COMMENT ''
    -- ,续存率      BIGINT COMMENT ''
    -- ,增长率_贷款   BIGINT COMMENT ''
    -- ,增长率_存款   BIGINT COMMENT ''
    -- ,执行利率下降占比 BIGINT COMMENT ''
    -- ,配卡率      BIGINT COMMENT ''
    -- ,ftp涨跌幅   BIGINT COMMENT ''
	-- , IS_YR_NEW_HPN_rate  BIGINT comment '本年新发生风险贷款率'
-- )
-- COMMENT
-- '客户交接前后业务波动分析_总结3_排序'
-- PARTITIONED BY
-- (
    -- dt STRING
-- );

--alter table lab_bigdata_dev.mdf_data_feature_zj_3_20221122 drop if exists partition (dt = '20221101-20231231');
insert overwrite table lab_bigdata_dev.mdf_data_feature_zj_3_20221122 PARTITION (DT = '20230101-20231231')

SELECT  a . 分行名称
    ,row_number() over(partition by '1' order by a.有效户流失率 desc) as 转化率_是转非
    ,row_number() over(partition by '1' order by a.有效户转化率 asc) as 转化率_非转是
    ,row_number() over(partition by '1' order by a.续贷率 asc) as 续贷率
    ,row_number() over(partition by '1' order by a.续存率 asc) as 续存率
    ,row_number() over(partition by '1' order by a.增长率_贷款 asc) as 增长率_贷款
    ,row_number() over(partition by '1' order by a.增长率_存款 asc) as 增长率_存款
    ,row_number() over(partition by '1' order by a.执行利率下降占比 desc) as 执行利率下降占比
    ,row_number() over(partition by '1' order by a.配卡率 asc) as 配卡率
    ,row_number() over(partition by '1' order by a.ftp涨跌幅 asc) as ftp涨跌幅
	,row_number() over(partition by '1' order by a.IS_YR_NEW_HPN_rate desc) as 本年新发生风险贷款率
FROM    lab_bigdata_dev.mdf_data_feature_zj_2_20221122 a
where a . 分行名称 rlike '分行'
and a.dt='20230101-20231231'
and mdf_type='交接客户'
;

--增加结论
--DROP TABLE IF EXISTS lab_bigdata_dev.mdf_data_feature_zj_word;
CREATE TABLE IF NOT EXISTS lab_bigdata_dev.mdf_data_feature_zj_word
(

	 prm_fh_org_nm  STRING  COMMENT '分行名称'
	,prm_org_id   STRING  COMMENT '主管户机构'
    ,prm_fh_org_id        STRING  COMMENT '主管户分行机构号'
    ,prm_zh_org_id        STRING  COMMENT '主管户支行机构号'
    ,prm_zh_org_nm        STRING  COMMENT '主管户支行名称'

    ,result_simple_app      STRING COMMENT '结论简述'
    ,result_pc     STRING COMMENT '结论'
)
COMMENT
'客户交接前后业务波动分析_总结4_结论'
PARTITIONED BY
(
    dt STRING
);

/*
--看支行级别 结论部分 需要看

  SELECT   分行名称
    ,prm_fh_org_id        -- 主管户分行机构号
    ,prm_zh_org_id        -- 主管户支行机构号
    ,prm_zh_org_nm        -- 主管户支行名称
	,mdf_type
	,'1' AS type
    ,sum(mdf_cst_cnt) mdf_cst_cnt
	,CASE            WHEN sum(交接前是有效户) = 0 THEN 0            ELSE sum(交接前是有效户交接后12个月非有效户) / sum(交接前是有效户)          END 转化率1
	,CASE            WHEN sum(交接前非有效户) = 0 THEN 0            ELSE sum(交接前非有效户交接后12个月是有效户) / sum(交接前非有效户)          END 转化率2
	,CASE            WHEN sum(贷款到期客户数) = 0 THEN 0            ELSE sum(续贷客户数) / sum(贷款到期客户数)          END 续贷率
	,CASE            WHEN sum(存款到期客户数) = 0 THEN 0            ELSE sum(续存客户数) / sum(存款到期客户数)          END 续存率
	,CASE   WHEN (  CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数) END ) = 0 THEN 0
			ELSE ( ( CASE WHEN sum(交接后12个月贷款日均人数) = 0 THEN 0 ELSE sum(交接后12个月贷款日均总规模) / sum(交接后12个月贷款日均人数)  END  ) -
			( CASE WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0  ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) ) / ( CASE  WHEN sum(交接前3个月贷款日均人数) = 0 THEN 0 ELSE sum(交接前3个月贷款日均总规模) / sum(交接前3个月贷款日均人数)  END ) END 增长率_贷款
	,CASE WHEN ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) = 0 THEN 0
		  ELSE ( ( CASE WHEN sum(交接后12个月存款日均人数) = 0 THEN 0 ELSE sum(交接后12个月存款日均总规模) / sum(交接后12个月存款日均人数)  END  ) - (
		 CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0    ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数)  END  ) ) / ( CASE WHEN sum(交接前3个月存款日均人数) = 0 THEN 0 ELSE sum(交接前3个月存款日均总规模) / sum(交接前3个月存款日均人数) END ) END 增长率_存款
	,CASE WHEN ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) ) = 0 THEN 0 ELSE sum(执行利率下降) / ( sum(执行利率下降) + sum(执行利率不变) + sum(执行利率上升) )          END 执行利率下降占比
	,CASE WHEN sum(交接前非随贷通客户) = 0 THEN 0 ELSE sum(新增随贷通客户数) / sum(交接前非随贷通客户)          END 配卡率
	,CASE WHEN ( CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END ) = 0 THEN 0
		  ELSE ( (  CASE  WHEN sum(交接后12个月ftp月均人数) = 0 THEN 0   ELSE sum(交接后12个月ftp月均总规模) / sum(交接后12个月ftp月均人数)  END   ) - (
		  CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0    ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END   ) ) / (CASE  WHEN sum(交接前3个月ftp月均人数) = 0 THEN 0  ELSE sum(交接前3个月ftp月均总规模) / sum(交接前3个月ftp月均人数)  END )  END ftp涨跌幅
	,case when sum(mdf_ctr_bal)=0 then 0 else sum(is_yr_new_hpn_amt)/sum(mdf_ctr_bal) end as 	本年新发生风险贷款率
	-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0  and sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0  then  sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-
			  -- sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)) end AS 执行利率变化绝对值
	-- ,case when sum(coalesce(exe_intr_rate_aft_fenmu,0))>0  and sum(coalesce(exe_intr_rate_bfr_fenmu,0))>0 and sum(coalesce(exe_intr_rate_bfr_fenzi,0))>0 then  (sum(coalesce(exe_intr_rate_aft_fenzi,0))/ sum(coalesce(exe_intr_rate_aft_fenmu,0))-
			  -- sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0)))/( sum(coalesce(exe_intr_rate_bfr_fenzi,0))/ sum(coalesce(exe_intr_rate_bfr_fenmu,0))) end AS 执行利率变化相对值
FROM    lab_bigdata_dev.mdf_data_feature_zj_20221122 a
where a . 分行名称 rlike '分行'
and dt='20230101-20231231'
and mdf_type='交接客户'
GROUP BY  分行名称
    ,prm_fh_org_id        -- 主管户分行机构号
    ,prm_zh_org_id        -- 主管户支行机构号
    ,prm_zh_org_nm        -- 主管户支行名称
    , mdf_type

	*/

insert overwrite table lab_bigdata_dev.mdf_data_feature_zj_word PARTITION (DT = '20230101-20231231')
select distinct 分行名称
	,prm_org_id  		 --主管户机构
    ,prm_fh_org_id        -- 主管户分行机构号
    ,prm_zh_org_id        -- 主管户支行机构号
    ,prm_zh_org_nm        -- 主管户支行名称
	,case when substr(prm_fh_org_id,1,4)='3101' then '上海分行信贷客户交接，在本年新发生风险率、有效户流失率方面表现优异。然而，在FTP收入变化、新配卡率（随贷通卡）方面需加强关注与管理。'
		  when substr(prm_fh_org_id,1,4)='3202' then '苏州分行信贷客户交接，在FTP收入变化、本年新发生风险率、新配卡率（随贷通）方面需加强关注与管理。'
		  when substr(prm_fh_org_id,1,4)='3301' then '台州分行信贷客户交接，各项指标整体表现均较好。其中，FTP收入变化、贷款增长率、新配卡率（随贷通卡）指标在13家分行中，排名均进入前三。'
		  when substr(prm_fh_org_id,1,4)='3302' then '杭州分行信贷客户交接，存款增长率表现优异。在本年新发生风险贷款率、贷款增长率方面需加强关注与管理。'
		  when substr(prm_fh_org_id,1,4)='3303' then '宁波分行信贷客户交接，各项指标整体表现较好。其中，贷款增长率、续贷率、有效户进阶率指标在13家分行中，排名均进入前三。'
		  when substr(prm_fh_org_id,1,4)='3305' then '温州分行信贷客户交接，在贷款增长率方面需加强关注与管理。'
		  when substr(prm_fh_org_id,1,4)='3306' then '丽水分行信贷客户交接，在贷款增长率、存款增长率、FTP收入变化方面表现优异。然而，需关注本年新发生风险贷款率。'
		  when substr(prm_fh_org_id,1,4)='3307' then '绍兴分行信贷客户交接，需关注户均存款规模增长率。'
		  when substr(prm_fh_org_id,1,4)='3308' then '金华分行信贷客户交接，各项指标较均衡。交接后，本年新发生风险贷款率、新配卡率（随贷通）指标优异。'
		  when substr(prm_fh_org_id,1,4)='3309' then '嘉兴分行信贷客户交接，各项指标较均衡。分行内部横向对比，全量信贷客户FTP收入增长远高于交接客户。'
		  when substr(prm_fh_org_id,1,4)='3310' then '湖州分行信贷客户交接，各项指标较均衡。分行内部横向对比，全量信贷客户FTP收入增长远高于交接客户。'
		  when substr(prm_fh_org_id,1,4)='3311' then '衢州分行信贷客户交接，本年新发生风险率表现优异。分行内部横向对比，全量信贷客户FTP收入增长远高于交接客户。'
		  when substr(prm_fh_org_id,1,4)='3312' then '舟山分行信贷客户交接，在FTP收入变化、新增配卡率（随贷通卡）方面表现优异。然而，本年新发生风险率方面需加强关注与管理。'
	 end as 结论简述
	,'' as 结论
FROM    lab_bigdata_dev.mdf_data_feature_zj_20221122 a
where a . 分行名称 rlike '分行'
and dt='20230101-20231231'
;
/*
insert overwrite table lab_bigdata_dev.mdf_data_feature_zj_word PARTITION (DT = '20230101-20231231')
VALUES
('310199999'
,'上海分行'
,'上海分行信贷客户交接，在本年新发生风险率、有效户流失率方面表现优异。然而，在FTP收入变化（-5%）、配卡率（随贷通卡2.50%）方面需加强关注与管理。'
,'上海分行信贷客户交接，在本年新发生风险率、有效户流失率方面表现优异。然而，在FTP收入变化（-5%）、配卡率（随贷通卡2.50%）方面需加强关注与管理。
建议重点关注如下几家支行：
1、FTP收入变化：上海嘉定支行（-35.3%）、上海虹口支行（-19.3%），这些支行在信贷客户交接后户均FTP下降幅度超过19%。全行交接客户户均FTP较交接前下降1.46%，其中上海分行较交接前下降 5%。
2、配卡率（随贷通卡）：上海大场支行（0）、上海徐汇支行（1.1%），这些支行在信贷客户交接后配卡率低于1.2%。全行全行交接客户整体配卡率为 3.8%，其中上海分行为2.50%。'),

('320299999'
,'苏州分行'
,'苏州分行信贷客户交接，在FTP收入变化（-6%）、续贷率（57.8%）、配卡率（随贷通卡1.9%）方面需加强关注与管理。'
,'苏州分行信贷客户交接，在FTP收入变化（-6%）、续贷率（57.8%）、配卡率（随贷通卡1.9%）方面需加强关注与管理。
建议重点关注如下几家支行：
1、FTP收入变化：常熟辛庄支行（-19.7%）、常熟支行（-14.7%）、昆山支行（-14.1%）、苏州甪直支行（-12.6%）、苏州相城支行（-10.8%）、昆山花桥支行（-10.3%），这些支行在信贷客户交接后户均FTP下降幅度超过10%。全行交接客户户均FTP较交接前下降1.46%，其中苏州分行较交接前下降 6%。
2、续贷率：苏州姑苏支行（44.9%）、太仓支行（44.9%）、苏州高新支行（45.5%）、苏州相城支行（48.2%），这些支行在信贷客户交接后续贷率均低于50%。全行交接客户整体续贷率为 61.7%，其中苏州分行为 57.8%。
3、配卡率（随贷通卡）：苏州分行营业部（0.5%）、苏州吴中支行（0.6%）、张家港塘桥支行（0.8%），这些支行在信贷客户交接后配卡率低于1%。全行全行交接客户整体配卡率为 3.79%，其中上苏州分行为1.9%。'),

('330199999'
,'台州分行'
,'台州分行信贷客户交接，各项指标整体表现均较好。其中，FTP收入变化、贷款增长率、配卡率（随贷通卡）指标在13家分行中，排名均进入前三。'
,'台州分行信贷客户交接，各项指标整体表现均较好。其中，FTP收入变化、贷款增长率、配卡率（随贷通卡）指标在13家分行中，排名均进入前三。'),

('330299999'
,'杭州分行'
,'杭州分行信贷客户交接，在本年新发生风险贷款率（1.42%）、贷款增长率（-6.1%）方面需加强关注与管理。'
,'杭州分行信贷客户交接，在本年新发生风险贷款率（1.42%）、贷款增长率（-6.1%）方面需加强关注与管理。
建议重点关注如下几家支行：
1、本年新发生风险贷款率：萧山临浦小微企业专营支行（8.20%）、富阳富春小微企业专营支行（5.22%）、杭州武林小微综合支行（5.07%）、杭州萧山支行（4.72%）、杭州分行营业部（3.15%）、杭州小营小微企业专营支行（2.94%）、杭州彭埠小微企业专营支行（2.90%），这些支行在信贷客户交接后本年新发生风险贷款率超过2.9%。全行交接客户整体本年新发生风险贷款率0.49%，其中杭州分行1.4%。
2、户均贷款规模增长率：杭州滨江支行（-23.3%）、杭州闸弄口小微企业专营支行（-21.6%）、杭州丁兰小微企业专营支行（-18.5%）、萧山临浦小微企业专营支行（-16.8%），这些支行在信贷客户交接后，户均贷款规模较交接前下降16%以上。全行整体交接客户，交接后户均贷款规模较交接前增加0.4%，其中，杭州分行较交接前下降 6.1%。'),

('330399999'
,'宁波分行'
,'宁波分行信贷客户交接数量庞大。各项指标整体表现较好。其中，贷款增长率、续贷率、有效户转化率指标在13家分行中，排名均进入前三。然而，需关注执行利率下降占比（61%）。'
,'宁波分行信贷客户交接数量庞大。各项指标整体表现较好。其中，贷款增长率、续贷率、有效户转化率指标在13家分行中，排名均进入前三。然而，需关注执行利率下降占比（61%）。
建议重点关注如下几家支行：
执行利率下降客户占比：宁波古林小微企业专营支行（70.0%）、宁波西店小微企业专营支行（69.6%）、宁波石浦小微企业专营支行（68.5%）、宁波柴桥小微企业专营支行（68.4%），这些支行在信贷交接后，贷款利率下降客户占比均高于 68%。全行交接客户贷款利率下降客户占比为 44%，其中宁波分行为53%。'),

('330599999'
,'温州分行'
,'温州分行信贷客户交接，在有效户转化率方面表现优异。然而，在本年新发生风险贷款率（0.62%）、贷款增长率（-3.1%）方面需加强关注与管理。'
,'温州分行信贷客户交接，在有效户转化率方面表现优异。然而，在本年新发生风险贷款率（0.62%）、贷款增长率（-3.1%）方面需加强关注与管理。
建议重点关注如下几家支行：
1、本年新发生风险贷款率：温州分行虚拟支行（4.63%）、温州鹿城藤桥小微专营支行（1.88%）、温州文成大峃小微企业专营支行（1.77%），这些支行在信贷客户交接后本年新发生风险贷款率超过1.7%。全行交接客户整体本年新发生风险贷款率0.49%，其中温州分行0.62%。
2、户均贷款规模增长率：温州文成大峃小微企业专营支行（-13.0%）、温州永嘉上塘小微企业专营支行（-12.4%）、温州鹿城藤桥小微专营支行（-11.9%）、温州瑞安陶山小微企业专营支行（-10.9%），这些支行在信贷客户交接后，户均贷款规模较交接前下降10%以上。全行整体交接客户，交接后户均贷款规模较交接前增加0.4%，其中，温州分行较交接前下降 3.1%。'),

('330699999'
,'丽水分行'
,'丽水分行信贷客户交接，在贷款增长率、存款增长率、FTP收入变化方面表现优异。然而，需关注本年新发生风险贷款率（0.6%）。'
,'丽水分行信贷客户交接，在贷款增长率、存款增长率、FTP收入变化方面表现优异。然而，需关注本年新发生风险贷款率（0.6%）。
建议重点关注如下几家支行：
1、本年新发生风险贷款率：青田鹤城小微企业专营支行（13.22%）、松阳古市小微企业专营支行（1.53%）、莲都老竹小微企业专营支行（1.37%）、丽水分行营业部（1.22%）、莲都紫金小微企业专营支行（1.19%）、龙泉剑池小微企业专营支行（1.03%），这些支行在信贷客户交接后本年新发生风险贷款率超过1%。全行交接客户整体本年新发生风险贷款率0.49%，其中丽水分行0.6%。'),

('330799999'
,'绍兴分行'
,'绍兴分行信贷客户交接，各项指标较理想。需关注户均存款规模增长率（-11.6%）。'
,'绍兴分行信贷客户交接，各项指标较理想。需关注户均存款规模增长率（-11.6%）。
建议重点关注如下几家支行：
1、户均存款规模增长率：嵊州甘霖小微企业专营支行（-40.7%）、绍兴钱清小微企业专营支行（-35.5%）、绍兴嵊州小微企业专营支行（-34.4%），这些支行在信贷客户交接后，户均存款规模较交接前下降30%以上。全行整体交接客户，交接后户均存款规模较交接前增加1.3%，其中，绍兴分行较交接前下降 11.6%。'),

('330899999'
,'金华分行'
,'金华分行信贷客户交接，各项指标较均衡。交接后，本年新发生风险贷款率、配卡率（随贷通）指标优异。分行内部横向对比，交接后户均贷款规模较交接前下降0.9%，而全量信贷客户户均贷款增长率9%。'
,'金华分行信贷客户交接，各项指标较均衡。交接后，本年新发生风险贷款率、配卡率（随贷通）指标优异。分行内部横向对比，交接后户均贷款规模较交接前下降0.9%，而全量信贷客户户均贷款增长率9%。'),

('330999999'
,'嘉兴分行'
,'嘉兴分行信贷客户交接，各项指标较均衡，在全行处于中等水平。分行内部横向对比，交接客户FTP收入变化不大（0.1%），而全量信贷客户FTP收入增长5.4%；交接后户均贷款规模较交接前下降1.6%，而全量信贷客户户均贷款增长率12.3%。'
,'嘉兴分行信贷客户交接，各项指标较均衡，在全行处于中等水平。分行内部横向对比，交接客户FTP收入变化不大（0.1%），而全量信贷客户FTP收入增长5.4%；交接后户均贷款规模较交接前下降1.6%，而全量信贷客户户均贷款增长率12.3%。'),

('331099999'
,'湖州分行'
,'湖州分行信贷客户交接，各项指标较均衡，在全行处于中等水平。分行内部横向对比，交接后户均贷款规模较交接前变化不大（0.3%），而全量信贷客户户均贷款增长率9%。'
,'湖州分行信贷客户交接，各项指标较均衡，在全行处于中等水平。分行内部横向对比，交接后户均贷款规模较交接前变化不大（0.3%），而全量信贷客户户均贷款增长率9%。'),

('331199999'
,'衢州分行'
,'衢州分行信贷客户交接，交接后，在FTP收入变化（-4.7%）方面需加强关注与管理。'
,'衢州分行信贷客户交接，交接后，在FTP收入变化（-4.7%）方面需加强关注与管理。
建议重点关注如下几家支行：
1、FTP收入变化：衢州北区小微企业专营支行（-14.3%）、衢州常山支行（-13.9%）、开化华埠小微企业专营支行（-11.4%）、龙游塔石小微专营支行（-11.0%），这些支行在信贷客户交接后户均FTP下降幅度超过11%。全行交接客户户均FTP较交接前下降1.5%，其中衢州分行较交接前下降 4.7%。'),

('331299999'
,'舟山分行'
,'舟山分行信贷客户交接，各项指标整体表现较好。其中，FTP收入变化、执行利率下降占比、配卡率（随贷通卡）指标在13家分行中，排名均进入前三。'
,'舟山分行信贷客户交接，各项指标整体表现较好。其中，FTP收入变化、执行利率下降占比、配卡率（随贷通卡）指标在13家分行中，排名均进入前三。')
;

*/
/*
--开通gquickbi权限
SELECT  DISTINCT t1.empe_id
				 ,t1.empe_nm
				 ,t2.pos_nm
				 ,t1.org_id
				 ,t3.org_nm
FROM    edw.dws_hr_empe_inf_dd t1 --员工汇总信息
LEFT JOIN    edw.dim_hr_org_job_inf_dd t2 --职位信息
ON      t1.pos_enc = t2.pos_id
AND     T2.DT = '20240425'
left join edw.dim_hr_org_bas_inf_dd t3  on t1.org_id=t3.org_id and t3.dt='20240425'
WHERE   T1.DT = '20240425'
AND     t1.LBR_TYP_CD = '01' --用工类型：正式
AND     t1.EMPE_STS_CD = '2' --员工状态：在职
AND     t1.LBR_TP_STS <> '1' --用工状态-剔除实习期
and (
( (t2.pos_nm in ('支行班子正职','支行班子副职','业务支行班子副职','分行班子正职','分行班子副职','分行部门正职','分行部门副职','分行科经理','总行中心正职','风险管理岗','风险管理岗（派驻支行）','风险检查岗')  --,'业务团队正职'
or (t3.org_nm like '%小企业部%' or  t3.org_nm like '%普惠金融部%'  or t3.org_nm like '%大数据部%'  or t3.org_nm like '%风险管理部%' or t3.org_nm like '%大客户业务部%'  ))
and  t3.org_nm not like '%人力资源部%'
and  t3.org_nm not like '%企划部%'
and  t3.org_nm not like '%办公室%'
and  t3.org_nm not like '%离岗退养中心%'
and  t3.org_nm not like '%财富管理部%'
and  t3.org_nm not like '%国际业务部%'
and  t3.org_nm not like '%计划财务部%'
and  t3.org_nm not like '%资产保全部%'
and  t3.org_nm not like '%运营管理部%'
and  t3.org_nm not like '%审计部%'
and  t3.org_nm not like '%资产清收工作小组%'
)
or (t3.org_nm like '%小企业部%' or  t3.org_nm like '%普惠金融部%'  or t3.org_nm like '%大数据部%'  or t3.org_nm like '%风险管理部%' ) --总行部门
)
 AND     (substr(t1.org_id, 1, 4) IN ( '3301' , '3302' , '3303' , '3305' , '3306' , '3307' , '3308' , '3309' , '3310' , '3311' , '3312' , '3101' , '3202' ) or substr(t1.org_id, 1, 2)='99')
 and t3.org_nm not in ('风险管理部风险计量中心','风险管理部金融市场风险管理中心','风险管理部操作风险管理中心','大数据部数据平台中心')
 and t1.org_id>='990601200'
 order by t1.org_id,t1.empe_id;



 SELECT sum(t2.loan_bal_acs_mon_avg)	贷款余额月日均
	,sum(t2.loan_bal_acs_year_avg) 贷款余额年日均
	,sum(t3.loan_bal_90_avg) 近90天贷款余额日均
	,sum(t2.loan_bal_acs_year_avg)/sum(t3.loan_bal_90_avg)
 FROM lab_bigdata_dev.202312_no_mdf_amt t
 left join adm_pub.adm_csm_cbus_loan_inf_dd t2
 on t.cst_id=t2.cst_id and t2.dt='20240630'
 left join adm_pub.adm_csm_cbus_loan_inf_dd t3
 on t.cst_id=t3.cst_id and t3.dt='20231231'
;



 SELECT
	sum(t2.ftp_data) 当年FTP利润收入
	,sum(t3.ftp_data) 近90天FTP日均
	,sum(t2.ftp_data)/sum(t3.ftp_data)
 FROM lab_bigdata_dev.202312_no_mdf_amt t
 left join ftp_all_month t2
 on t.cst_id=t2.cst_id and t2.dt='20240630'
 left join ftp_all_month t3
 on t.cst_id=t3.cst_id and t3.dt='20231231'
 */
**跑批发布_删除表日报.sql
drop table if exists lab_bigdata_dev.mall_summary;
**跑批发布_用例看板202206_07合并.sql
-- ODPS SQL
-- **********************************************************************
-- 功能描述:
-- **
-- 创建者: 龙彬彬
-- 创建日期: 2022-07-14 12:03:03
-- **
-- 修改日志:
-- 修改日期          修改人          修改内容
-- **
-- **********************************************************************
--20220712更新 全面推广
--lab_bigdata_dev.market_cst_contact_account 营销触达台账
/*

--drop table if exists lab_bigdata_dev.market_effect_cst_list;
CREATE TABLE lab_bigdata_dev.market_effect_cst_list(
  cst_id string comment '客户号:仅限实验组'
  ,certid string comment '证件号，非必填项，企业代表统一社会信用代码，个人代表身份证，如果是新客，无cst_id, 用该字段做主键'
  ,case_scene string comment '用例名称，格式参考：无贷担保人配贷'
  ,case_scene_period string comment '用例阶段，格式参考：全面推广第二期'
  ,contact_date string comment '推送日期'
  ,end_dt string comment '结束日期，如不确定请预估结束日期'
 )
comment '营销作战室用例用例效果监测_客户清单表'
;

insert into lab_bigdata_dev.market_effect_cst_list  --注意这里的cst_id是下发的客户号，不是转化的客户号
--无贷担保人配贷_全面推广第二期0601
select distinct cst_id
	,null 证件号
     ,'无贷担保人配贷' as 用例名称
	 ,'全面推广第二期' as 用例阶段
     ,'20220601' as 推送日期
     ,'20221201' as 结束日期
from lab_bigdata_dev.cst_inf_grnt_20220529
where prm_fh_org_nm  in ('台州分行','杭州分行','温州分行','金华分行','上海分行','丽水分行','湖州分行','宁波分行','衢州分行','舟山分行',
    '湖北大冶泰隆村镇银行','河南叶县泰隆村镇银行','福建龙海泰隆村镇银行','福建福清泰隆村镇银行','福建长乐泰隆村镇银行',
    '浙江庆元泰隆村镇银行','福建政和泰隆村镇银行','广东四会泰隆村镇银行','陕西旬阳泰隆村镇银行','陕西眉县泰隆村镇银行',
    '陕西泾阳泰隆村镇银行','河南汝南泰隆村镇银行','广东英德泰隆村镇银行')
and tag = '高响应实验组'
union

--款流失挽回_全面推广第一期0601
select cst_id
	,null 证件号
     ,'贷款流失挽回' as 用例名称
	 ,'全面推广第一期' as 用例阶段
     ,'20220601' as 推送日期
     ,'20221201' as 结束日期
from lab_bigdata_dev.loan_loss_feature_20220529
where prm_fh_org_nm IN ( '台州分行' , '杭州分行' , '温州分行' , '金华分行' , '上海分行' , '苏州分行' , '丽水分行' , '嘉兴分行' ,
     '湖州分行' , '衢州分行' , '舟山分行' , '湖北大冶泰隆村镇银行' , '河南叶县泰隆村镇银行' , '福建龙海泰隆村镇银行' , '福建福清泰隆村镇银行' ,
    '福建长乐泰隆村镇银行' , '浙江庆元泰隆村镇银行' , '福建政和泰隆村镇银行' , '广东四会泰隆村镇银行' , '陕西旬阳泰隆村镇银行' , '陕西眉县泰隆村镇银行' ,
     '陕西泾阳泰隆村镇银行' , '河南汝南泰隆村镇银行' , '广东英德泰隆村镇银行' )
and tag = '高响应实验组'
union

--用例08_贷款客户提额_全面推广第一期
select cst_id
	,null 证件号
	 ,'用例08_贷款客户提额' as 用例名称
	 ,'全面推广第一期' as 用例阶段
     ,'20220601' as 推送日期
     ,'20221201' as 结束日期
from lab_bigdata_dev.increase_detail_tran_final_new_20220601
where sample_type like '%实验组%'
and dt='202206'

union
--关系树_全面推广第一期2802
SELECT  DISTINCT
        null 对私客户号_非转化
		--P3.CUST_NO as CST_ID
		,A.CREDIT_CODE
		,'关系树' as 用例名称
		 ,'全面推广第一期' as 用例阶段
		 ,'20220608' as 推送日期
		 ,'20221208' as 结束日期
		--,t2.CST_SELF_TRANSFER_FLAG as is_convert
FROM    LAB_BIGDATA_DEV.XQY_GUANXISHU_B3_CST_ALL A
 where a.kind='执行组'
 and a.dt in ('20220608')
union
--对公拓面_全面推广第一期
SELECT  DISTINCT a.CST_ID_P  对私客户号_非转化
		--P3.CUST_NO as CST_ID
		,A.CREDIT_CODE
		,'个贷客户对公拓面' as 用例名称
		 ,'全面推广第一期' as 用例阶段
		 ,'20220608' as 推送日期
		 ,'20221208' as 结束日期
FROM    LAB_BIGDATA_DEV.XQY_GEDAIKEHUZHUYINGQIYEKAIHU_B3_CST_ALL A
where a.kind='执行组'
and a.dt in ('20220608')
;
*/
----插入07月份客户
-- insert into lab_bigdata_dev.market_effect_cst_list  --注意这里的cst_id是下发的客户号，不是转化的客户号
-- --促用信20220601 --17766 --开始时间 20220601 预估结束写20221131
-- SELECT  cst_id
--         ,NULL AS 证件号
--         ,'促用信'      AS 用例名称
--         ,'全面推广第一期'  AS 用例阶段
--         ,'20220601' AS 推送日期
--         ,'20221131' AS 结束日期
-- FROM    lab_bigdata_dev.promote_loan_cst_list_202206
-- UNION
-- --促用信20220701 --7456 开始时间 20220701 预估结束写20221231
-- SELECT  cst_id
--         ,NULL AS 证件号
--         ,'促用信'      AS 用例名称
--         ,'全面推广第一期'  AS 用例阶段
--         ,'20220701' AS 推送日期
--         ,'20221231' AS 结束日期
-- FROM    lab_bigdata_dev.promote_loan_cst_feature_20220630
-- WHERE   sample_class = '高响应实验组'
-- UNION
-- --无贷担保人配贷_全面推广第二期0701 9103
-- SELECT  cst_id
--         ,NULL AS  证件号
--         ,'无贷担保人配贷'  AS 用例名称
--         ,'全面推广第二期'  AS 用例阶段
--         ,'20220701' AS 推送日期
--         ,'20221231' AS 结束日期
-- FROM    lab_bigdata_dev.cst_inf_grnt_20220626
-- WHERE   tag = '高响应实验组'

-- UNION
-- --贷款提额20220701 6045
-- SELECT  cst_id
--         ,NULL AS 证件号
--         ,'贷款客户提额' AS 用例名称
--         ,'全面推广第一期'     AS 用例阶段
--         ,'20220701'    AS 推送日期
--         ,'20221231'    AS 结束日期
-- FROM    lab_bigdata_dev.increase_detail_tran_final_new_20220601
-- WHERE   sample_type LIKE '%实验组%'
-- AND     dt = '202207'
-- UNION
-- --流失挽回_全面推广第一期0701
-- SELECT  cst_id
--         ,NULL  AS 证件号
--         ,'贷款流失挽回'   AS 用例名称
--         ,'全面推广第一期'  AS 用例阶段
--         ,'20220701' AS 推送日期
--         ,'20221231' AS 结束日期
-- FROM    lab_bigdata_dev.loan_loss_feature_20220626
-- WHERE   tag = '高响应实验组'
-- UNION
-- --大额配卡 20220701 551 看监测代码 --'客户随贷通新开或提额30万以上' 转化口径
-- SELECT  客户号 AS cst_id
--         ,NULL  AS 证件号
--         ,'大额配卡'  AS 用例名称
--         ,'全面推广第一期'  AS 用例阶段
--         ,'20220425' AS  开始时间
--         ,'20220731' AS  结束时间 ----不确定
-- FROM    lab_bigdata_dev.xqy_024547_daepeika_sdt_trx_list_full
-- ;


-- SELECT  case_scene,contact_date
-- 		,count(distinct case when case_scene like '%关系树%' then certid else cst_id end)
-- FROM lab_bigdata_dev.market_effect_cst_list
-- group by case_scene,contact_date
-- ;
/*个贷客户对公拓面	1603
关系树	2801
无贷担保人配贷	13049
用例08_贷款客户提额	15689
贷款流失挽回	18259

*/
drop table if exists lab_bigdata_dev.market_effect_cst;
create table lab_bigdata_dev.market_effect_cst as
select cst_id
  ,certid
  ,concat(case_scene  ,case_scene_period ) as case_id
  ,contact_date
  ,end_dt
from lab_bigdata_dev.market_effect_cst_list;
alter table lab_bigdata_dev.market_effect_cst set comment '用例监控_用例看板_202207_客户名单';


--对公：统一社会信用代码在本行匹配出来的客户号对应的同一风险控制号下所有客户号列表
drop table if exists lab_bigdata_dev.market_effect_ent_sam_rsk_202206;
create table lab_bigdata_dev.market_effect_ent_sam_rsk_202206 as
select a.cst_id cst_id_send  --下发的客户号， 对私客户而言就是转化的客户号，但是对公不是转化的客户号
		, A.certid ,case_id,contact_date,end_dt
		,F.SAM_RSK_CTRL_ID --同一风险控制号
        ,COALESCE(G.CST_ID, P3.CUST_NO) CST_ID --同一风险控制号下的客户号
from market_effect_cst a

LEFT JOIN    EDW.ECIF_T00_ORG_CUST_CERT_INFO P4 ----公司客户证件信息表
ON      A.certid = P4.CERT_NO
AND     P4.DT in (select least('@@{yyyyMMdd}',max(end_dt)) from market_effect_cst where contact_date like '202206%' and ( case_id like '%拓面%' or case_id like '%关系树%'))
LEFT JOIN    EDW.ECIF_T00_ORG_CUST_NO_REC P3 ---对公客户号识别信息表
ON      P3.PARTY_ID = P4.PARTY_ID
AND     P3.DT in (select least('@@{yyyyMMdd}',max(end_dt)) from market_effect_cst where contact_date like '202206%' and ( case_id like '%拓面%' or case_id like '%关系树%'))
JOIN    EDW.DWS_CST_BAS_INF_DD F
ON      P3.CUST_NO = F.CST_ID
AND     F.DT in (select least('@@{yyyyMMdd}',max(end_dt)) from market_effect_cst where contact_date like '202206%' and ( case_id like '%拓面%' or case_id like '%关系树%'))
LEFT JOIN    EDW.DWS_CST_BAS_INF_DD G
ON      F.SAM_RSK_CTRL_ID = G.SAM_RSK_CTRL_ID
AND     G.DT in (select least('@@{yyyyMMdd}',max(end_dt)) from market_effect_cst where contact_date like '202206%' and ( case_id like '%拓面%' or case_id like '%关系树%'))
AND     G.SAM_RSK_CTRL_ID <> ''
 ----此处空空关联会多处很多数据，必须加不等于空
where a.case_id like '%拓面%'
or a.case_id  like '%关系树%'
;
alter table lab_bigdata_dev.market_effect_ent_sam_rsk_202206 set comment '用例监控_用例看板_202206_对公客户同一风险控制号下所有客户号列表';

--对公：转化:该表转化的客户号会重复，应该可能多个信用代码对应一个cst_id
drop table if exists lab_bigdata_dev.market_effect_ent_convert_left_202206;
create table lab_bigdata_dev.market_effect_ent_convert_left_202206 as
select  distinct cst_id_send  --下发的客户号， 对私客户而言就是转化的客户号，但是对公不是转化的客户号
		, A.certid ,A.case_id,A.contact_date,A.end_dt
		,a.SAM_RSK_CTRL_ID --同一风险控制号
        ,a.CST_ID --同一风险控制号下的客户号
		,1 is_convert
from lab_bigdata_dev.market_effect_ent_sam_rsk_202206 a  --对公：统一社会信用代码在本行匹配出来的客户号对应的同一风险控制号下所有客户号列表
--贷款转化
inner join  edw.dim_bus_loan_ctr_inf_dd t3 --信贷合同信息表
on a.cst_id=t3.cst_id
and t3.dt in (select DISTINCT least(end_dt,'@@{yyyyMMdd}') from lab_bigdata_dev.market_effect_ent_sam_rsk_202206)
and t3.dt = least(a.end_dt,'@@{yyyyMMdd}')
and t3.hpn_dt>=a.contact_date
and t3.hpn_dt<=a.end_dt


union
--存款转化，新开户
select  distinct cst_id_send  --下发的客户号， 对私客户而言就是转化的客户号，但是对公不是转化的客户号
		, A.certid ,A.case_id,A.contact_date,A.end_dt
		,a.SAM_RSK_CTRL_ID --同一风险控制号
        ,a.CST_ID --同一风险控制号下的客户号
        ,1 is_convert
from lab_bigdata_dev.market_effect_ent_sam_rsk_202206 a  --对公：统一社会信用代码在本行匹配出来的客户号对应的同一风险控制号下所有客户号列表
inner join  EDW.DIM_BUS_DEP_ACT_INF_DD t6 --存款账户表
on a.cst_id=t6.cst_id
and t6.dt in (select DISTINCT least(end_dt,'@@{yyyyMMdd}') from lab_bigdata_dev.market_effect_ent_sam_rsk_202206)
and t6.dt = least(a.end_dt,'@@{yyyyMMdd}')
and t6.OPN_DT>=a.contact_date
and t6.OPN_DT<=a.end_dt
and t6.ACT_STS_CD <> 'C'
AND  t6.ACT_CTG_CD_1 NOT IN ( '0501' , '0509' , '0601' )

;
alter table lab_bigdata_dev.market_effect_ent_convert_left_202206 set comment '用例监控_用例看板_202206_对公客户转化的客户清单_可能多个信用代码对应一个cst_id';


--202206是否转化 担保人、流失挽回
DROP TABLE IF EXISTS lab_bigdata_dev.yongli_loss_guar_is_convert_202206;

CREATE TABLE lab_bigdata_dev.yongli_loss_guar_is_convert_202206 AS
SELECT  t . *
        ,CASE
           WHEN min(t2.hpn_dt) IS NOT NULL THEN 1
           ELSE 0
         END AS is_convert --是否转化
FROM    market_effect_cst t
LEFT JOIN    edw.dim_bus_loan_ctr_inf_dd t2 --信贷合同信息表
ON      t.cst_id = t2.cst_id
AND     t2.dt = '@@{yyyyMMdd}'
AND     t2.hpn_dt >= t.contact_date --信贷合同信息表
AND     t2.hpn_dt <= t.end_dt
AND     ( substr(t2.pd_cd, 1, 9) IN ( '201050101' , '201050102' , '201040101' , '201040102' , '201040106' )
    OR substr(t2.pd_cd, 1, 7) = '2010503' ) --一般贷款
WHERE   t.contact_date = '20220601'     --将>=改成=
AND    ( t.case_id like  '%无贷担保人配贷%'
or   t.case_id like  '%贷款流失挽回%' )
GROUP BY t.cst_id ,t.certid, t.case_id, t.contact_date , t.end_dt;

alter table lab_bigdata_dev.yongli_loss_guar_is_convert_202206 set comment '用例监控_用例看板_202206_担保人、流失挽回是否转化';

--202207担保人、流失挽回 是否转化
DROP TABLE IF EXISTS lab_bigdata_dev.yongli_loss_guar_is_convert_202207;

CREATE TABLE lab_bigdata_dev.yongli_loss_guar_is_convert_202207 AS
SELECT  t . *
        ,CASE
           WHEN min(t2.hpn_dt) IS NOT NULL THEN 1
           ELSE 0
         END AS is_convert --是否转化
FROM    lab_bigdata_dev.market_effect_cst t
LEFT JOIN    edw.dim_bus_loan_ctr_inf_dd t2 --信贷合同信息表
ON      t.cst_id = t2.cst_id
AND     t2.dt = '@@{yyyyMMdd}'
AND     t2.hpn_dt >= t.contact_date --信贷合同信息表
AND     t2.hpn_dt <= t.end_dt
AND     ( substr(t2.pd_cd, 1, 9) IN ( '201050101' , '201050102' , '201040101' , '201040102' , '201040106' )
    OR substr(t2.pd_cd, 1, 7) = '2010503' ) --一般贷款
WHERE   t.contact_date = '20220701'
AND  (   t.case_id like  '%无贷担保人配贷%'
or   t.case_id like  '%贷款流失挽回%' )
GROUP BY t.cst_id ,t.certid, t.case_id, t.contact_date , t.end_dt;

alter table lab_bigdata_dev.yongli_loss_guar_is_convert_202207 set comment '用例监控_用例看板_202207_担保人、流失挽回是否转化';
--促用信202206  是否转化
DROP TABLE IF EXISTS lab_bigdata_dev.yongli_cyx_is_convert_202206;

CREATE TABLE lab_bigdata_dev.yongli_cyx_is_convert_202206 AS
SELECT  t.cst_id
        ,t.certid
        ,t.case_id
        ,t.contact_date
        ,t.end_dt
        ,max(CASE
               WHEN t2.dbil_id IS NOT NULL THEN 1
               ELSE 0
             END) AS is_convert --是否转化
FROM    lab_bigdata_dev.market_effect_cst t
LEFT JOIN    lab_bigdata_dev.promote_loan_cst_list_202206 t1
ON      T.CST_ID = T1.CST_ID
LEFT JOIN    (
                 SELECT  a.cst_id
                         ,a.bus_ctr_id
                         ,a.dbil_id
                         ,a.dtrb_dt  AS dbil_dtrb_dt
                         ,a.end_dt   AS dbil_end_dt
                         ,a.amt      AS dbil_amt
                         ,a.prcp_bal AS dbil_bal
                 FROM    edw.dws_bus_loan_dbil_inf_dd a --贷款借据信息汇总
                 WHERE   a.dt = '@@{yyyyMMdd}'
                 AND     a.dtrb_dt >= '20220601'
             ) t2
ON      t.cst_id = t2.cst_id
AND     t1.busi_ctr_id = t2.bus_ctr_id
WHERE   t.contact_date = '20220601'
AND     t.case_id like  '%促用信%'
GROUP BY t.cst_id , t.certid , t.case_id , t.contact_date , t.end_dt;

alter table lab_bigdata_dev.yongli_cyx_is_convert_202206 set comment '用例监控_用例看板_202206_促用信是否转化';

--促用信202207 是否转化
DROP TABLE IF EXISTS lab_bigdata_dev.yongli_cyx_is_convert_202207;

CREATE TABLE lab_bigdata_dev.yongli_cyx_is_convert_202207 AS
SELECT  t.cst_id
        ,t.certid
        ,t.case_id
        ,t.contact_date
        ,t.end_dt
        ,max(CASE
               WHEN t2.dbil_id IS NOT NULL THEN 1
               ELSE 0
             END) AS is_convert --是否转化
FROM    lab_bigdata_dev.market_effect_cst t
inner join lab_bigdata_dev.promote_loan_target_ctr_zzxh_20220630 t1 on t.cst_id=t1.cst_id and t1.pd_nm in ('泰e贷','融e贷','随贷通')
LEFT JOIN    (
                 SELECT  a.cst_id
                         ,a.bus_ctr_id
                         ,a.dbil_id
                         ,a.dtrb_dt  AS dbil_dtrb_dt
                         ,a.end_dt   AS dbil_end_dt
                         ,a.amt      AS dbil_amt
                         ,a.prcp_bal AS dbil_bal
                 FROM    edw.dws_bus_loan_dbil_inf_dd a --贷款借据信息汇总
                 WHERE   a.dt = '@@{yyyyMMdd}'
                 AND     a.dtrb_dt >= '20220701'
             ) t2
ON      t.cst_id = t2.cst_id
AND     t1.busi_ctr_id = t2.bus_ctr_id
WHERE   t.contact_date = '20220701'
AND     t.case_id like  '%促用信%'
GROUP BY t.cst_id , t.certid , t.case_id , t.contact_date , t.end_dt;

alter table lab_bigdata_dev.yongli_cyx_is_convert_202207 set comment '用例监控_用例看板_202207_促用信是否转化';

--202207大额配卡是否转化
DROP TABLE IF EXISTS lab_bigdata_dev.yongli_daepeika_is_convert_202207;

CREATE TABLE IF NOT EXISTS lab_bigdata_dev.yongli_daepeika_is_convert_202207 AS
SELECT  A1.cst_id
        ,A1.certid
	     	,A1.case_id
	     	,A1.contact_date --- '推送日期'
	    	,A1.end_dt
        ,CASE WHEN A2.客户随贷通绑定金额_end >= 300000 THEN 1 ELSE 0 END AS is_convert
FROM    lab_bigdata_dev.market_effect_cst A1
LEFT JOIN    (SELECT  t1.客户号
                    ,t1.客户名称
                    ,t1.客户随贷通绑定金额_start
                    ,t1.客户随贷通绑定金额_end
                    ,t1.本金金额
                    ,t1.月累计本金余额积数
                    ,t1.近90天本金余额积数
                    ,t1.近180天本金余额积数
                    ,t2.转化日期
            FROM    lab_bigdata_dev.xqy_024547_daepeika_sdt_inf_dt t1
            LEFT JOIN    (
                             SELECT  客户号
                                     ,min(转化日期) 转化日期
                             FROM    lab_bigdata_dev.xqy_024547_daepeika_sdt_inf_dt
                             WHERE   dt <= '@@{yyyyMMdd}'
                             GROUP BY 客户号
                         ) t2
            ON      T1.客户号 = T2.客户号
            WHERE   T1.DT in  (select max(dt) from  lab_bigdata_dev.xqy_024547_daepeika_sdt_inf_dt )
) A2
ON      A1.cst_id = A2.客户号
WHERE   A1.contact_date = '20220425'
AND     A1.case_id like  '%大额配卡%'
;
alter table lab_bigdata_dev.yongli_daepeika_is_convert_202207 set comment '用例监控_用例看板_202207_大额配卡是否转化';
--select count(1) from   lab_bigdata_dev.yongli_daepeika_is_convert_202207



------------------/********基础宽表一转化******/---------------------------------


--是否转化合并:担保人、流失挽回、提额、关系树、个贷客户对公拓面
DROP TABLE IF EXISTS lab_bigdata_dev.yongli_is_convert_20220601;

CREATE TABLE lab_bigdata_dev.yongli_is_convert_20220601 AS
SELECT  t.cst_id --'客户号:仅限实验组'
		,t.certid --'证件号，非必填项，企业代表统一社会信用代码，个人代表身份证，如果是新客，无cst_id, 用该字段做主键'
		,t.case_id
		,t.contact_date --- '推送日期'
		,t.end_dt
		,t2.is_increase AS is_convert
FROM    market_effect_cst t
LEFT JOIN    lab_bigdata_dev.increase_detail_tran_final_new_20220601 t2 --提额转化
ON      t.cst_id = t2.cst_id
AND     t2.dt = '202206'
where t.case_id like '%提额%'
and t.contact_date = '20220601'
UNION
SELECT   t.cst_id --'客户号:仅限实验组'
		,t.certid --'证件号，非必填项，企业代表统一社会信用代码，个人代表身份证，如果是新客，无cst_id, 用该字段做主键'
		,t.case_id
		,t.contact_date --- '推送日期'
		,t.end_dt
		,t.is_convert
FROM    lab_bigdata_dev.yongli_loss_guar_is_convert_202206 t
UNION
--关系树转化、拓面
SELECT  t.cst_id --'客户号:仅限实验组'
		,t.certid --'证件号，非必填项，企业代表统一社会信用代码，个人代表身份证，如果是新客，无cst_id, 用该字段做主键'
		,t.case_id
		,t.contact_date --- '推送日期'
		,t.end_dt
        ,case when t2.is_convert is null then 0 else t2.is_convert end as is_convert --是否转化
FROM    market_effect_cst t
LEFT JOIN    (
			select distinct cst_id_send,A.certid ,A.case_id,A.contact_date,A.end_dt,1 is_convert
			from lab_bigdata_dev.market_effect_ent_convert_left_202206  a

			)t2 --关系树转化清单
ON      t.certid = t2.certid
WHERE  (t.case_id like '%关系树%' or t.case_id like '%拓面%')
AND     t.contact_date like '202206%'
;

alter table lab_bigdata_dev.yongli_is_convert_20220601 set comment '用例监控_用例看板_202206_担保人、流失挽回、提额、关系树、个贷客户对公拓面是否转化';

--202207是否转化合并:担保人、流失挽回、提额、促用信、大额配卡
DROP TABLE IF EXISTS lab_bigdata_dev.yongli_is_convert_20220701;

CREATE TABLE lab_bigdata_dev.yongli_is_convert_20220701 AS
SELECT  t.cst_id --'客户号:仅限实验组'
		,t.certid --'证件号，非必填项，企业代表统一社会信用代码，个人代表身份证，如果是新客，无cst_id, 用该字段做主键'
		,t.case_id
		,t.contact_date --- '推送日期'
		,t.end_dt
		,t2.is_increase AS is_convert
FROM    lab_bigdata_dev.market_effect_cst t
LEFT JOIN    lab_bigdata_dev.increase_detail_tran_final_new_20220601 t2 --提额转化
ON      t.cst_id = t2.cst_id
AND     t2.dt = '202207'
where t.case_id like '%提额%'
and t.contact_date = '20220701'
UNION ALL
SELECT   t.cst_id --'客户号:仅限实验组'
		,t.certid --'证件号，非必填项，企业代表统一社会信用代码，个人代表身份证，如果是新客，无cst_id, 用该字段做主键'
		,t.case_id
		,t.contact_date --- '推送日期'
		,t.end_dt
		,t.is_convert
FROM    lab_bigdata_dev.yongli_loss_guar_is_convert_202207 t
UNION ALL
SELECT   t.cst_id
		,t.certid
		,t.case_id
		,t.contact_date --- '推送日期'
		,t.end_dt
		,t.is_convert
FROM    lab_bigdata_dev.yongli_cyx_is_convert_202207 t
UNION ALL
SELECT   t.cst_id
		,t.certid
		,t.case_id
		,t.contact_date --- '推送日期'
		,t.end_dt
		,t.is_convert
FROM    lab_bigdata_dev.yongli_cyx_is_convert_202206 t
UNION ALL
-- SELECT  t.cst_id --'客户号:仅限实验组'
-- 		,t.certid --'证件号，非必填项，企业代表统一社会信用代码，个人代表身份证，如果是新客，无cst_id, 用该字段做主键'
-- 		,t.case_id
-- 		,t.contact_date --- '推送日期'
-- 		,t.end_dt
-- 		,case when t1.是否转化 is not null then  1 else 0 end   AS is_convert
-- FROM    lab_bigdata_dev.l_market_effect_cst_20220712 t
-- LEFT JOIN     lab_bigdata_dev.xqy_024547_daepeika_sdt_trx_list_full t1
-- ON      t.cst_id = t1.客户号
-- where t.case_id like '%大额配卡%'
-- and t.contact_date = '20220425'
SELECT   t.cst_id
		,t.certid
		,t.case_id
		,t.contact_date --- '推送日期'
		,t.end_dt
		,t.is_convert
FROM    lab_bigdata_dev.yongli_daepeika_is_convert_202207 t

;
alter table lab_bigdata_dev.yongli_is_convert_20220701 set comment '用例监控_用例看板_202207_担保人、流失挽回、提额、促用信、大额配卡是否转化';


-- select  case_id,contact_date, count(1) from  lab_bigdata_dev.yongli_is_convert_20220701
-- group by  case_id,contact_date


-- SELECT case_id,count(distinct case when case_id like '%关系树%' then certid else cst_id end ) 下发客户数, sum(is_convert) 转化客户数
--     , sum(is_convert)/count(distinct case when case_id like '%关系树%' then certid else cst_id end ) 转化率
-- FROM lab_bigdata_dev.yongli_is_convert_20220601 GROUP BY  case_id;
/*
case_id	下发客户数	转化客户数	转化率
个贷客户对公拓面全面推广第一期	1603	204	0.1272613849033063
关系树全面推广第一期	2801	20	0.007140307033202428
无贷担保人配贷全面推广第二期	13049	112	0.008583033182619357
用例08_贷款客户提额全面推广第一期	15689	679	0.04327873032060679
贷款流失挽回全面推广第一期	18259	178	0.009748617120324224

*/

--202206转化的客户号，对公+对私
drop table if exists lab_bigdata_dev.market_convert_left_202206;
CREATE TABLE lab_bigdata_dev.market_convert_left_202206 AS
SELECT DISTINCT a.case_id
        , a.contact_date
        , a.end_dt
        , a.cst_id --转化的客户号
FROM    market_effect_cst a
left join lab_bigdata_dev.yongli_is_convert_20220601 t2
on a.cst_id=t2.cst_id
and a.case_id=t2.case_id
and a.contact_date=t2.contact_date
WHERE   a.case_id NOT LIKE '%拓面%'
AND     a.case_id NOT LIKE '%关系树%'
AND     a.case_id NOT LIKE '%促用信%'
AND  a.contact_date = '20220601'
and t2.is_convert=1
UNION
SELECT  DISTINCT a.case_id
                 ,A.contact_date
                 ,A.end_dt
                 ,a.CST_ID --同一风险控制号下的客户号
FROM    lab_bigdata_dev.market_effect_ent_convert_left_202206 a
WHERE   a.case_id LIKE '%拓面%'
    OR a.case_id LIKE '%关系树%'
;

alter table lab_bigdata_dev.market_convert_left_202206 set comment '用例监控_用例看板_202206_转化的客户号，对公和对私';

--202207转化的客户号 对私
drop table if exists lab_bigdata_dev.l_market_convert_left_202207;
CREATE TABLE lab_bigdata_dev.l_market_convert_left_202207 AS
SELECT DISTINCT a.case_id
        , a.contact_date
        , a.end_dt
        , a.cst_id --转化的客户号
FROM    lab_bigdata_dev.market_effect_cst a
left join lab_bigdata_dev.yongli_is_convert_20220701 t2
on a.cst_id=t2.cst_id
and a.case_id=t2.case_id
and a.contact_date=t2.contact_date
where  (a.contact_date = '20220701'
         or ( a.case_id  LIKE '%促用信%' AND  a.contact_date = '20220601' )
         or   ( a.case_id  LIKE '%大额配卡%' AND  a.contact_date = '20220425' )
)
and t2.is_convert=1
;
alter table lab_bigdata_dev.l_market_convert_left_202207 set comment '用例监控_用例看板_202207_转化的客户号';

--select count(distinct cst_id ) from lab_bigdata_dev.l_market_convert_left_202207

--------------------------------------------------->>>普惠贷款

--所有客户贷款月日均
drop table if exists lab_bigdata_dev.quan_yongli_bal;
CREATE TABLE lab_bigdata_dev.quan_yongli_bal as
select t2.cst_id, t.dt, round(sum(t.last_30_days_prcp_bal_acml)/30,2) 贷款月日均,sum(t.prcp_bal) 贷款余额
from edw.dws_bus_loan_dbil_acm_inf_dd  t
left join edw.dim_bus_loan_ctr_inf_dd t2 --合同表
on t.bus_ctr_id=t2.busi_ctr_id
and t2.dt='@@{yyyyMMdd}'
where t.dt >= (select min(contact_date) from market_effect_cst) or t.dt  = '20220425'
group by t.dt, t2.cst_id
;


--所有客户存款月日均
drop table if exists lab_bigdata_dev.quan_yongli_gl_bal;
CREATE TABLE lab_bigdata_dev.quan_yongli_gl_bal as
select t.cst_id, t.dt, round(sum(last_30_days_gl_bal_acml)/30,2) 存款月日均
from edw.dws_bus_dep_act_mgr_inf_dd t --存款表
where t.dt >= (select min(contact_date) from market_effect_cst) or t.dt  = '20220425'
group by t.dt, t.cst_id
;

--所有客户ftp月日均, t+2
drop table if exists lab_bigdata_dev.quan_yongli_ftp;
CREATE TABLE lab_bigdata_dev.quan_yongli_ftp as
select t.cif_key cst_id, t.dt
	, round(sum(DECODE(AL_TYPE, '1', 1, - 1) * ( acc_int_month_ajust * EXCHANGE_TO_CNY_RATE - ftp_int_month_ajust * EXCHANGE_TO_CNY_RATE ))/substr(t.as_of_date,9,2),2) FTP月日均
from  app_iftp.ADM_PAPP_FTP_TPDM_RST_FTP_DD t
where t.dt >= (select to_char(DATEADD(TO_DATE(min(contact_date),'yyyymmdd'),-1,'dd'),'yyyymmdd') from market_effect_cst) or t.dt  = '20220425'
group by t.dt, t.cif_key,t.as_of_date
;




--所有客户额度
drop table if exists lab_bigdata_dev.quan_yongli_ctr;
CREATE TABLE lab_bigdata_dev.quan_yongli_ctr as
select cst_id,dt, sum(ctr_amt) ctr_amt
from edw.dim_bus_loan_ctr_inf_dd t
where  (t.dt >= (select min(contact_date) from market_effect_cst) or t.dt  = '20220425')
and (t.apnt_mtu_dt> t.dt and t.end_dt='18991231')    --未到期
and t.apnt_start_dt<=t.dt and t.hpn_dt<=t.dt  --已发放
and (t.frz_sts_cd ='1'
	or   t.frz_sts_cd='2'
	or (t.frz_sts_cd=''
	--and (T.CRC_IND <> '1' or t.crc_ind is null ) and  t.PD_CD not LIKE '2010503%')
	)
	)
group by cst_id,dt;

--所有客户理财月日均
drop table if exists lab_bigdata_dev.quan_yongli_chm_amt;
CREATE TABLE lab_bigdata_dev.quan_yongli_chm_amt AS
SELECT  t.cst_id
        ,t.dt
        ,round(sum(mon_acm_lot_acml) / substr(t.dt, 7, 2),2) 理财月日均
FROM    edw.dws_bus_chm_act_acm_inf_dd t --理财表
where t.dt>= (select min(contact_date) from market_effect_cst) or t.dt  = '20220425'
GROUP BY t.dt , t.cst_id;


------------------/********基础宽表二转化的存贷增加******/---------------------------------
drop table if exists lab_bigdata_dev.all_yongli_result_20220601;
CREATE TABLE lab_bigdata_dev.all_yongli_result_20220601 as
select
	t.cst_id
    --,t.certid
    ,t.case_id,t.contact_date,t.end_dt
	,coalesce(t3.存款月日均,0)-coalesce(t2.存款月日均,0) 存款月日均增加
	,case when t.case_id like '%提额%' then (coalesce(t5.贷款余额,0)-coalesce(t4.贷款余额,0) ) else  ( coalesce(t5.贷款月日均,0)-coalesce(t4.贷款月日均,0)) end as 贷款月日均增加
	--,coalesce(t5.贷款余额,0)-coalesce(t4.贷款余额,0)  as 贷款余额增加
	,0 理财月日均增加
	,case when t.case_id like '%提额%' then incr.increase_amt else  ( coalesce(t9.ctr_amt,0)-coalesce(t8.ctr_amt,0)) end as 合同金额增加
	,round((360*coalesce(t7.FTP月日均,0)-360*coalesce(t6.FTP月日均,0)),2) 预测FTP年利润增加
	,coalesce(risk.本年新发生风险贷款,0)	本年新发生风险贷款
	,0 贷记卡日均垫款增加
	,0 贷记卡日均消费金额增加
	--,coalesce(risk.当前贷款余额,0) 当前风险贷款余额
	,t15.sum_org_id 主管户分行机构号
	,t15.sum_org_nm 主管户分行名称
	,t16.sum_org_id 主管户支行机构号
	,t16.sum_org_nm 主管户支行名称
	,t17.sum_org_id 主管户团队机构号
	,t17.sum_org_nm 主管户团队名称
	,t14.prm_mgr_id 主管户客户经理工号
	, t18.empe_nm    主管户客户经理姓名
	,city.大区域
	,city.省
	,city.市 城市
from 	lab_bigdata_dev.market_convert_left_202206 t --已经转化的客户号
left join lab_bigdata_dev.quan_yongli_gl_bal t2  --推送
on t.cst_id=t2.cst_id and t.contact_date=t2.dt
left join lab_bigdata_dev.quan_yongli_gl_bal t3  --结束 t3.存款月日均-t2.存款月日均 存款月日均增加
on t.cst_id=t3.cst_id and t3.dt =least('@@{yyyyMMdd}' ,t.end_dt)

left join lab_bigdata_dev.quan_yongli_bal t4  --推送
on t.cst_id=t4.cst_id and t.contact_date=t4.dt
left join lab_bigdata_dev.quan_yongli_bal t5  --结束 t5.贷款月日均-t4.贷款月日均 贷款月日均增加
on t.cst_id=t5.cst_id and t5.dt=least('@@{yyyyMMdd}' ,t.end_dt)

left join lab_bigdata_dev.quan_yongli_ftp t6  --推送
on t.cst_id=t6.cst_id and t.contact_date=t6.dt
left join lab_bigdata_dev.quan_yongli_ftp t7  --结束
on t.cst_id=t7.cst_id and t7.dt =least('@@{yyyyMMdd}' ,t.end_dt)

left join lab_bigdata_dev.quan_yongli_ctr t8  --推送
on t.cst_id=t8.cst_id and t.contact_date=t8.dt
left join lab_bigdata_dev.quan_yongli_ctr t9  --结束
on t.cst_id=t9.cst_id and t9.dt =least('@@{yyyyMMdd}' ,t.end_dt)

left join lab_bigdata_dev.increase_detail_tran_final_new_20220601 incr --提额用例
on t.cst_id=incr.cst_id and incr.dt='202206'

left join (
		SELECT cst_id ,sum(bal_cny) 当前贷款余额
			,sum(case when new_opn_ind='是' and rsk_loan_ind='Y' then bal_cny else 0 end )本年新发生风险贷款
		FROM  app_ado.FCT_RSK_LOAN_DUTY_ID_MID_INF_DD where dt='@@{yyyyMMdd}'
		group by cst_id
)risk
on t.cst_id=risk.cst_id
left join edw.dws_cst_mng_prm_inf_dd t14 on t.cst_id=t14.cst_id and t14.dt=t.contact_date and t14.dt in (select distinct contact_date from lab_bigdata_dev.yongli_ft_20220601)
left join edw.dim_hr_org_sum_org_rel_dd t15 on t14.prm_org_id=t15.UNT_ORG_ID  and t15.SUM_ORG_LVL='F' AND t15.ORG_RLTN_DIM_CD='WD3' AND t15.SUM_TYP_CD='1'    --分行
and t15.dt=t.contact_date and t15.dt in (select distinct contact_date from lab_bigdata_dev.yongli_ft_20220601)
left join edw.dim_hr_org_sum_org_rel_dd t16 on t14.prm_org_id=t16.UNT_ORG_ID  and t16.SUM_ORG_LVL='Z' AND t16.ORG_RLTN_DIM_CD='WD3' AND t16.SUM_TYP_CD='1' --支行
and t16.dt=t.contact_date and t16.dt in (select distinct contact_date from lab_bigdata_dev.yongli_ft_20220601)
left join edw.dim_hr_org_sum_org_rel_dd t17 on t14.prm_org_id=t17.UNT_ORG_ID  and t17.SUM_ORG_LVL='T' AND t17.ORG_RLTN_DIM_CD='WD3' AND t17.SUM_TYP_CD='1' --团队
and t17.dt=t.contact_date and t17.dt in (select distinct contact_date from lab_bigdata_dev.yongli_ft_20220601)
left join edw.dim_hr_empe_bas_inf_dd t18 on t14.prm_mgr_id=t18.empe_id and t18.dt=t.contact_date and t18.dt in (select distinct contact_date from lab_bigdata_dev.yongli_ft_20220601)
left join (select distinct 机构号 ,大区域, 省 ,市 from lab_bigdata_dev.fh_city) city
on substr(t15.sum_org_id,1,4)=city.机构号
--where t.contact_date like  ('202206%')
;
alter table lab_bigdata_dev.all_yongli_result_20220601 set comment '用例监控_用例看板_202206_基础宽表二转化的存贷增加';


drop table if exists lab_bigdata_dev.all_yongli_result_20220701;
CREATE TABLE lab_bigdata_dev.all_yongli_result_20220701 as
select
	t.cst_id
    --,t.certid
    ,t.case_id,t.contact_date,t.end_dt
	,coalesce(t3.存款月日均,0)-coalesce(t2.存款月日均,0) 存款月日均增加
	,case when t.case_id like '%提额%' then (coalesce(t5.贷款余额,0)-coalesce(t4.贷款余额,0) ) else  ( coalesce(t5.贷款月日均,0)-coalesce(t4.贷款月日均,0)) end as 贷款月日均增加
	--,coalesce(t5.贷款余额,0)-coalesce(t4.贷款余额,0)  as 贷款余额增加
	,0 理财月日均增加
	,case when t.case_id like '%提额%' then incr.increase_amt
	      when   t.case_id like '%促用信%' then 0
	else  ( coalesce(t9.ctr_amt,0)-coalesce(t8.ctr_amt,0)) end as 合同金额增加
	,round((360*coalesce(t7.FTP月日均,0)-360*coalesce(t6.FTP月日均,0)),2) 预测FTP年利润增加
	,coalesce(risk.本年新发生风险贷款,0)	本年新发生风险贷款
	,0 贷记卡日均垫款增加
	,0 贷记卡日均消费金额增加
	--,coalesce(risk.当前贷款余额,0) 当前风险贷款余额
	,t15.sum_org_id 主管户分行机构号
	,t15.sum_org_nm 主管户分行名称
	,t16.sum_org_id 主管户支行机构号
	,t16.sum_org_nm 主管户支行名称
	,t17.sum_org_id 主管户团队机构号
	,t17.sum_org_nm 主管户团队名称
	,t14.prm_mgr_id 主管户客户经理工号
	, t18.empe_nm    主管户客户经理姓名
	,city.大区域
	,city.省
	,city.市 城市
from 	lab_bigdata_dev.l_market_convert_left_202207 t --已经转化的客户号
left join lab_bigdata_dev.quan_yongli_gl_bal t2  --推送
on t.cst_id=t2.cst_id and t.contact_date=t2.dt
left join lab_bigdata_dev.quan_yongli_gl_bal t3  --结束 t3.存款月日均-t2.存款月日均 存款月日均增加
on t.cst_id=t3.cst_id and t3.dt =least('@@{yyyyMMdd}' ,t.end_dt)

left join lab_bigdata_dev.quan_yongli_bal t4  --推送
on t.cst_id=t4.cst_id and t.contact_date=t4.dt
left join lab_bigdata_dev.quan_yongli_bal t5  --结束 t5.贷款月日均-t4.贷款月日均 贷款月日均增加
on t.cst_id=t5.cst_id and t5.dt=least('@@{yyyyMMdd}' ,t.end_dt)

left join lab_bigdata_dev.quan_yongli_ftp t6  --推送
on t.cst_id=t6.cst_id and t.contact_date=t6.dt
left join lab_bigdata_dev.quan_yongli_ftp t7  --结束
on t.cst_id=t7.cst_id and t7.dt =least('@@{yyyyMMdd}' ,t.end_dt)

left join lab_bigdata_dev.quan_yongli_ctr t8  --推送
on t.cst_id=t8.cst_id and t.contact_date=t8.dt
left join lab_bigdata_dev.quan_yongli_ctr t9  --结束
on t.cst_id=t9.cst_id and t9.dt =least('@@{yyyyMMdd}' ,t.end_dt)

left join lab_bigdata_dev.increase_detail_tran_final_new_20220601 incr --提额用例
on t.cst_id=incr.cst_id and incr.dt='202207'

left join (
		SELECT cst_id ,sum(bal_cny) 当前贷款余额
			,sum(case when new_opn_ind='是' and rsk_loan_ind='Y' then bal_cny else 0 end )本年新发生风险贷款
		FROM  app_ado.FCT_RSK_LOAN_DUTY_ID_MID_INF_DD where dt='@@{yyyyMMdd}'
		group by cst_id
)risk
on t.cst_id=risk.cst_id
left join edw.dws_cst_mng_prm_inf_dd t14 on t.cst_id=t14.cst_id and t14.dt=t.contact_date and t14.dt in (select distinct contact_date from  lab_bigdata_dev.l_market_effect_cst_20220712)
left join edw.dim_hr_org_sum_org_rel_dd t15 on t14.prm_org_id=t15.UNT_ORG_ID  and t15.SUM_ORG_LVL='F' AND t15.ORG_RLTN_DIM_CD='WD3' AND t15.SUM_TYP_CD='1'    --分行
and t15.dt=t.contact_date and t15.dt in (select distinct contact_date from lab_bigdata_dev.l_market_effect_cst_20220712)
left join edw.dim_hr_org_sum_org_rel_dd t16 on t14.prm_org_id=t16.UNT_ORG_ID  and t16.SUM_ORG_LVL='Z' AND t16.ORG_RLTN_DIM_CD='WD3' AND t16.SUM_TYP_CD='1' --支行
and t16.dt=t.contact_date and t16.dt in (select distinct contact_date from lab_bigdata_dev.l_market_effect_cst_20220712)
left join edw.dim_hr_org_sum_org_rel_dd t17 on t14.prm_org_id=t17.UNT_ORG_ID  and t17.SUM_ORG_LVL='T' AND t17.ORG_RLTN_DIM_CD='WD3' AND t17.SUM_TYP_CD='1' --团队
and t17.dt=t.contact_date and t17.dt in (select distinct contact_date from lab_bigdata_dev.l_market_effect_cst_20220712)
left join edw.dim_hr_empe_bas_inf_dd t18 on t14.prm_mgr_id=t18.empe_id and t18.dt=t.contact_date and t18.dt in (select distinct contact_date from lab_bigdata_dev.l_market_effect_cst_20220712)
left join (select distinct 机构号 ,大区域, 省 ,市 from lab_bigdata_dev.fh_city) city  --表中有重复数据
on substr(t15.sum_org_id,1,4)=city.机构号
;
alter table lab_bigdata_dev.all_yongli_result_20220701 set comment '用例监控_用例看板_202207_基础宽表二转化的存贷增加';




/* select sum(存款月日均增加) as 存款月日均增加
	  ,sum(贷款月日均增加) as 贷款月日均增加
	  ,sum(理财月日均增加) as 理财月日均增加
	  ,sum(预测FTP年利润增加) 预测FTP年利润增加
	  ,sum(本年新发生风险贷款) 本年新发生风险贷款
	  ,sum(合同金额增加) as 合同金额增加
from  lab_bigdata_dev.all_yongli_result_20220701; */

-- 存款月日均增加	贷款月日均增加	理财月日均增加	预测ftp年利润增加	本年新发生风险贷款	合同金额增加
-- 47971966.16	289306916.81	0	10333152	1778576.62	629695048.39


------------------********两个宽表：分别追加2021年，202206数据******---------------------------------
/*
drop table if exists lab_bigdata_dev.all_yongli_result;
CREATE TABLE lab_bigdata_dev.all_yongli_result(
	cst_id string comment '客户号:仅限实验组'
	--,certid string comment '证件号，非必填项，企业代表统一社会信用代码，个人代表身份证，如果是新客，无cst_id, 用该字段做主键'
	,case_id string comment '用例名称'
	,contact_date string comment '推送日期'
	,end_dt string comment '结束日期，如不确定请预估结束日期'
	--,is_convert string comment '是否转化'
	,dep_add decimal comment '存款月日均增加'
	,ln_add decimal comment '贷款月日均增加'
	,chm_add decimal comment '理财月日均增加'
	,lmt_add decimal comment '合同金额增加'
	,ftp_add decimal comment '预测ftp年利润增加'
	,risk_new decimal comment '本年新发生风险贷款'
	,crd_ovdr_bal_add decimal comment '贷记卡日均垫款增加'
	,crd_consume_add decimal comment '贷记卡日均消费金额增加'
	--,risk_bal decimal comment '当前风险贷款余额'
	,fh_org_id string comment '主管户分行机构号'
	,fh_org_nm string comment '主管户分行名称'
	,zh_org_id string comment '主管户支行机构号'
	,zh_org_nm string comment '主管户支行名称'
	,td_org_id string comment '主管户团队机构号'
	,td_org_nm string comment '主管户团队名称'
	,prm_mgr_id string comment '主管户客户经理工号'
	,empe_nm    string comment '主管户客户经理姓名'
	,region string comment '大区域'
	,province string comment '省'
	,city string comment '城市'
 )
comment '营销作战室用例用例效果监测_客户大宽表'
;
*/
TRUNCATE TABLE  lab_bigdata_dev.all_yongli_result ;
insert into lab_bigdata_dev.all_yongli_result
select * from lab_bigdata_dev.all_yongli_result_20220601
union
select * from lab_bigdata_dev.all_yongli_result_20220701
union
select distinct  t.cst_id
	,t.用例编码
	,t.推送日期
	,t.结束日期
	--,t.是否转化
	,t.存款月日均增加
	,t.贷款月日均增加
	,t.理财月日均增加
	,t.合同金额增加
	,t.预测ftp年利润增加
	,t.本年新发生风险贷款
	,t.贷记卡日均垫款增加
	,t.贷记卡日均消费金额增加
	,主管户分行机构号
	,主管户分行名称
	,主管户支行机构号
	,主管户支行名称
	,主管户团队机构号
	,主管户团队名称
	,主管户客户经理工号
	,主管户客户经理姓名
	,大区域
	,省
	,城市
from lab_bigdata_dev.all_yongli_result_old t
;

-- select sum(dep_add) as 存款月日均增加
	  -- ,sum(ln_add) as 贷款月日均增加
	  -- ,sum(chm_add) as 理财月日均增加
	  -- ,sum(ftp_add) 预测ftp年利润增加
	  -- ,sum(risk_new) 本年新发生风险贷款
	  -- ,0 本年新发生风险贷款余额占比
	  -- ,sum(lmt_add) 合同金额增加
-- from  lab_bigdata_dev.all_yongli_result;

-- 存款月日均增加	贷款月日均增加	理财月日均增加	预测ftp年利润增加	本年新发生风险贷款	本年新发生风险贷款余额占比	合同金额增加
-- 204776045.03	709174950.19	262889463.200000000695781785	27156833.6	2904934.17	0	1690301625.35


------------------/********基础宽表一转化******/---------------------------------
/*
drop table if exists lab_bigdata_dev.yongli_is_convert;
CREATE TABLE lab_bigdata_dev.yongli_is_convert(
	cst_id string comment '客户号:仅限实验组'
	,certid string comment '证件号，非必填项，企业代表统一社会信用代码，个人代表身份证，如果是新客，无cst_id, 用该字段做主键'
	,case_id string comment '用例名称'
	,contact_date string comment '推送日期'
	,end_dt string comment '结束日期，如不确定请预估结束日期'
	,is_convert string comment '是否转化'
 )
comment '营销作战室用例用例效果监测_客户大宽表一_是否转化'
;
*/
TRUNCATE TABLE  lab_bigdata_dev.yongli_is_convert ;
insert into lab_bigdata_dev.yongli_is_convert
SELECT  t.cst_id --'客户号:仅限实验组'
		,t.certid --'证件号，非必填项，企业代表统一社会信用代码，个人代表身份证，如果是新客，无cst_id, 用该字段做主键'
		,t.case_id
		,t.contact_date --- '推送日期'
		,t.end_dt
		,t.is_convert
from lab_bigdata_dev.yongli_is_convert_20220601 t
union
select * from lab_bigdata_dev.yongli_is_convert_2021
union
SELECT  t.cst_id --'客户号:仅限实验组'
		,t.certid --'证件号，非必填项，企业代表统一社会信用代码，个人代表身份证，如果是新客，无cst_id, 用该字段做主键'
		,t.case_id
		,t.contact_date --- '推送日期'
		,t.end_dt
		,t.is_convert
from lab_bigdata_dev.yongli_is_convert_20220701 t
;


-- SELECT case_id,count(distinct case when case_id like '%关系树%' then certid else cst_id end ) 下发客户数, sum(is_convert) 转化客户数
    -- , sum(is_convert)/count(distinct case when case_id like '%关系树%' then certid else cst_id end ) 转化率
-- FROM lab_bigdata_dev.yongli_is_convert GROUP BY  case_id;




--quick bi 画图一
--02汇总：概览 合并2021数据、2022.06和2022.07
drop table if exists lab_bigdata_dev.all_yongli_total_pic1_20220601;
CREATE TABLE lab_bigdata_dev.all_yongli_total_pic1_20220601 as
select t2.存款月日均增加  ,t2.贷款月日均增加 ,t2.理财月日均增加 ,t2.预测ftp年利润增加 ,t2.本年新发生风险贷款,t2.合同金额增加
,t2.贷记卡日均垫款增加 ,t2.贷记卡日均消费金额增加 ,t2.key1,t2.下发客户数,t2.转化客户数,t2.下发客户数_线下,t2.转化客户数_线下
,t2.下发客户数_线上,t2.转化客户数_线上
from all_yongli_total_old t2  --第一次的汇总数
union
--202206下发清单的汇总
select t.*,t3.send_cnt,t3.convert_cnt ,t3.send_cnt_xia,t3.convert_cnt_xia ,t3.send_cnt_shang,t3.convert_cnt_shang
from (
	select sum(存款月日均增加) as dep_add
	  ,sum(贷款月日均增加) as ln_add
	  ,sum(理财月日均增加) as chm_add
	  ,sum(预测ftp年利润增加) ftp_add
	  ,sum(本年新发生风险贷款)  risk_new
	  ,sum(合同金额增加) as lmt_add
	  ,sum(贷记卡日均垫款增加) as crd_ovdr_bal_add
	  ,sum(贷记卡日均消费金额增加) as crd_consume_add
      , 1 key1
	from  lab_bigdata_dev.all_yongli_result_20220601
	)t
left join
	(
	 select
	  count(distinct case when case_id like '%关系树%' then certid else cst_id end)  as send_cnt
	  ,sum(is_convert) as convert_cnt
	  ,count(distinct case when case_id like '%关系树%' then certid else cst_id end)  as    send_cnt_xia
	  ,sum(is_convert)  as convert_cnt_xia
	  ,0   as convert_cnt_shang
	  ,0 send_cnt_shang
	  , 1 key1
	  from (select distinct cst_id,certid, is_convert,case_id from lab_bigdata_dev.yongli_is_convert_20220601)t
	  )t3 on t.key1=t3.key1
  union
--202207下发清单的汇总
select t.*,t3.send_cnt,t3.convert_cnt ,t3.send_cnt_xia,t3.convert_cnt_xia ,t3.send_cnt_shang,t3.convert_cnt_shang
from (
	select sum(存款月日均增加) as dep_add
	  ,sum(贷款月日均增加) as ln_add
	  ,sum(理财月日均增加) as chm_add
	  ,sum(预测ftp年利润增加) ftp_add
	  ,sum(本年新发生风险贷款)  risk_new
	  ,sum(合同金额增加) as lmt_add
	  ,sum(贷记卡日均垫款增加) as crd_ovdr_bal_add
	  ,sum(贷记卡日均消费金额增加) as crd_consume_add
      , 1 key1
	from  lab_bigdata_dev.all_yongli_result_20220701
	)t
left join
	(
	 select
	  count(distinct cst_id )  as send_cnt
	  ,sum(is_convert) as convert_cnt
	  ,count(distinct cst_id )  as    send_cnt_xia
	  ,sum(is_convert)  as convert_cnt_xia
	  ,0  as convert_cnt_shang
	  ,0 send_cnt_shang
	  , 1 key1
	  from (select distinct cst_id,certid, is_convert,case_id from lab_bigdata_dev.yongli_is_convert_20220701)t
	  )t3 on t.key1=t3.key1
	  ;

alter table lab_bigdata_dev.all_yongli_total_pic1_20220601 set comment '用例监控_用例看板_202206_图一合并2021数据和202206+202207';


------------------********图一概览******---------------------------------

drop table if exists lab_bigdata_dev.all_yongli_total;
CREATE TABLE lab_bigdata_dev.all_yongli_total
as
select
sum(存款月日均增加) 存款月日均增加
,sum(贷款月日均增加) 贷款月日均增加
,sum(理财月日均增加) 理财月日均增加
,sum(预测ftp年利润增加) 预测ftp年利润增加
,sum(本年新发生风险贷款) 本年新发生风险贷款
,0 本年新发生风险贷款余额占比
,sum(合同金额增加) 合同金额增加
,sum(贷记卡日均垫款增加) 贷记卡日均垫款增加
,sum(贷记卡日均消费金额增加) 贷记卡日均消费金额增加
,sum(key1) key1
,sum(下发客户数) 下发客户数
,sum(转化客户数) 转化客户数
,round(sum(转化客户数)/sum(下发客户数),4) 转化率
,sum(下发客户数_线下) 下发客户数_线下
,sum(转化客户数_线下) 转化客户数_线下
,round(sum(转化客户数_线下)/sum(下发客户数_线下),4) 线下渠道转化率
,sum(下发客户数_线上) 下发客户数_线上
,sum(转化客户数_线上) 转化客户数_线上
,round(sum(转化客户数_线上)/sum(下发客户数_线上),4) 线上渠道转化率
from lab_bigdata_dev.all_yongli_total_pic1_20220601
;

alter table lab_bigdata_dev.all_yongli_total set comment '用例监控_用例看板_202206_图一';

--quick bi 画图二 汇总：按城市
--alter table all_yongli_city rename to all_yongli_city_old;


drop table if exists lab_bigdata_dev.all_yongli_city;
CREATE TABLE lab_bigdata_dev.all_yongli_city as
select substr(city,1,2) 城市,region 大区域,substr(province,1,2) as 省
		, case when province in ('福建省','广东省','河南省','湖北省','江苏省','陕西省','上海市','浙江省') then '辐射范围' END AS 辐射范围
	  ,case when province in ('江苏省','上海市','浙江省') then '江浙沪' END AS 江浙沪
	  ,sum(dep_add) as 存款月日均增加
	  ,sum(ln_add) as 贷款月日均增加
	  ,sum(chm_add) as 理财月日均增加
	  ,sum(ftp_add) 预测ftp年利润增加
	  ,sum(risk_new) 本年新发生风险贷款
	  ,0 本年新发生风险贷款余额占比
	  ,sum(lmt_add) 合同金额增加
from  lab_bigdata_dev.all_yongli_result
group by substr(city,1,2),region,province,case when province in ('福建省','广东省','河南省','湖北省','江苏省','陕西省','上海市','浙江省') then '江浙沪广福河湖陕' END
	  ,case when province in ('江苏省','上海市','浙江省') then '江浙沪' END
	  ;

alter table lab_bigdata_dev.all_yongli_city set comment '用例监控_用例看板_202206_图二 汇总：按城市';


--quick bi 画图三
--03汇总：按用例
DROP TABLE IF EXISTS lab_bigdata_dev.all_yongli_type;

CREATE TABLE lab_bigdata_dev.all_yongli_type AS
SELECT  CASE
          WHEN case_id LIKE '%无贷担保人配贷%'  THEN '担保人配贷'
          WHEN case_id LIKE '%关系树%'         THEN '关系树'
          WHEN case_id LIKE '%拓面%'           THEN '个贷客户对公拓面'
          WHEN case_id LIKE '%贷款流失挽回%'    THEN '贷款流失挽回'
          WHEN case_id LIKE '%存款配卡%'        THEN '存款配卡'
          WHEN case_id LIKE '%贷款配卡%'        THEN '贷款配卡'
          WHEN case_id LIKE '%循环贷款促用信%'   THEN '循环贷款促用信'
          WHEN case_id LIKE '%贷款客户提额%'     THEN '贷款户提额'
          WHEN case_id LIKE '%信用卡消费力提升%' THEN '信用卡消费力提升'
          WHEN case_id LIKE '%存款提升用例%'     THEN '存款提升'
          WHEN case_id LIKE '%理财流失挽回%'     THEN '理财流失挽回'
          WHEN  case_id LIKE '%大额配卡%'        THEN '大额配卡'
             WHEN  case_id LIKE '%促用信%'        THEN '促用信'
        END           AS 用例类型
        ,sum(dep_add) AS 存款月日均增加
        ,sum(ln_add)  AS 贷款月日均增加
        ,sum(ftp_add) 预测ftp年利润增加
FROM    lab_bigdata_dev.all_yongli_result
GROUP BY CASE
           WHEN case_id LIKE '%无贷担保人配贷%'  THEN '担保人配贷'
           WHEN case_id LIKE '%关系树%'      THEN '关系树'
           WHEN case_id LIKE '%拓面%'       THEN '个贷客户对公拓面'
           WHEN case_id LIKE '%贷款流失挽回%'   THEN '贷款流失挽回'
           WHEN case_id LIKE '%存款配卡%'     THEN '存款配卡'
           WHEN case_id LIKE '%贷款配卡%'     THEN '贷款配卡'
           WHEN case_id LIKE '%循环贷款促用信%'  THEN '循环贷款促用信'
           WHEN case_id LIKE '%贷款客户提额%'   THEN '贷款户提额'
           WHEN case_id LIKE '%信用卡消费力提升%' THEN '信用卡消费力提升'
           WHEN case_id LIKE '%存款提升用例%'   THEN '存款提升'
           WHEN case_id LIKE '%理财流失挽回%'   THEN '理财流失挽回'
		    WHEN  case_id LIKE '%大额配卡%'   THEN '大额配卡'
             WHEN  case_id LIKE '%促用信%'        THEN '促用信'
         END;


alter table lab_bigdata_dev.all_yongli_type set comment '用例监控_用例看板_202206_图三 汇总：按用例';



--时间轴 lab_bigdata_dev.all_yongli_dt python 上传覆盖
**跑批发布_积分第1张表插入.sql
truncate table lab_bigdata_dev.mall_summary;

insert into lab_bigdata_dev.mall_summary

select t.dt,t.渠道,t.累计注册用户数

		,case when t5.累计注册用户数>0 then round((coalesce(t.累计注册用户数,0)-coalesce(t5.累计注册用户数,0))/coalesce(t5.累计注册用户数,0),3) end as 累计注册用户较上月末涨幅

		,t.累计交易用户数

		,coalesce(t.累计交易用户数,0)-coalesce(t2.累计交易用户数,0) as 累计交易用户数较昨日增量

		,case when t5.累计交易用户数>0 then round((coalesce(t.累计交易用户数,0)-coalesce(t5.累计交易用户数,0))/coalesce(t5.累计交易用户数,0),3) end as 累计交易用户数较上月末涨幅

		,t.累计交易金额

		,coalesce(t.累计交易金额,0)-coalesce(t2.累计交易金额,0) as 累计交易金额较昨日增量

		,case when t5.累计交易金额>0 then round((coalesce(t.累计交易金额,0)-coalesce(t5.累计交易金额,0))/coalesce(t5.累计交易金额,0),3) end as 累计交易金额较上月末涨幅

		,t.新增注册用户数

		,coalesce(t.新增注册用户数,0)-coalesce(t2.新增注册用户数,0) as 新增注册用户较昨日增量

		,case when t2.新增注册用户数>0 then round((coalesce(t.新增注册用户数,0)-coalesce(t2.新增注册用户数,0))/coalesce(t2.新增注册用户数,0),3) end as 新增注册用户较昨日涨幅

		,t.新增注册下单用户数

		,coalesce(t.新增注册下单用户数,0)-coalesce(t2.新增注册下单用户数,0) as 新增注册下单用户较昨日增量

		,case when t2.新增注册下单用户数>0 then round((coalesce(t.新增注册下单用户数,0)-coalesce(t2.新增注册下单用户数,0))/coalesce(t2.新增注册下单用户数,0),3) end as 新增注册下单用户较昨日涨幅

		,case when t.新增注册用户数>0 then round(t.新增注册下单用户数/t.新增注册用户数,3) end as 新用户订单转化率

		,case when t.新增注册用户数>0 and t2.新增注册用户数>0 then round(t.新增注册下单用户数/t.新增注册用户数,3)-round(t2.新增注册下单用户数/t2.新增注册用户数,3) end as 新用户交易转化率较昨日增量

		,t.新增注册用户订单笔数,t.新增注册用户交易金额

		,coalesce(t.新增注册用户交易金额,0)-coalesce(t2.新增注册用户交易金额,0) as 新增注册用户交易金额较昨日增量

		,case when t2.新增注册用户交易金额>0 then round((coalesce(t.新增注册用户交易金额,0)-coalesce(t2.新增注册用户交易金额,0))/coalesce(t2.新增注册用户交易金额,0),3) end as 新增注册用户交易金额较昨日涨幅

		,case when t.新增注册下单用户数>0 then round(t.新增注册用户订单笔数/t.新增注册下单用户数,3) end as 新用户人均订单笔数

		,case when t.新增注册下单用户数>0 and t2.新增注册下单用户数>0 then round(t.新增注册用户订单笔数/t.新增注册下单用户数,3)-round(t2.新增注册用户订单笔数/t2.新增注册下单用户数,3) end as 新用户人均订单笔数较昨日增量

		,case when t.新增注册下单用户数>0 then round(t.新增注册用户交易金额/t.新增注册下单用户数,3) end as 新用户人均客单价

		,case when t.新增注册下单用户数>0 and t2.新增注册下单用户数>0 then round(t.新增注册用户交易金额/t.新增注册下单用户数,3)-round(t2.新增注册用户交易金额/t2.新增注册下单用户数,3) end as 新用户人均客单价较昨日增量

		,case when t.新增注册下单用户数>0 and t2.新增注册下单用户数>0 and t2.新增注册用户交易金额>0 then round((t.新增注册用户交易金额/t.新增注册下单用户数-t2.新增注册用户交易金额/t2.新增注册下单用户数)/(t2.新增注册用户交易金额/t2.新增注册下单用户数),3) end as 新用户人均客单价较昨日涨幅

		,t.活跃用户数

		,coalesce(t.活跃用户数,0)-coalesce(t2.活跃用户数,0) as 活跃用户较昨日增量

		,case when t2.活跃用户数>0 then round((coalesce(t.活跃用户数,0)-coalesce(t2.活跃用户数,0))/coalesce(t2.活跃用户数,0),3) end as 活跃用户数较昨日涨幅

		,t.下单用户数

		,coalesce(t.下单用户数,0)-coalesce(t2.下单用户数,0) as 商城下单用户较昨日增量

		,case when t2.下单用户数>0 then round((coalesce(t.下单用户数,0)-coalesce(t2.下单用户数,0))/coalesce(t2.下单用户数,0),3) end as 商城下单用户较昨日涨幅

		,case when t.活跃用户数>0 then round(t.下单用户数/t.活跃用户数,3) end as 用户交易转化率

		,case when t.活跃用户数>0 and t2.活跃用户数>0 then round(t.下单用户数/t.活跃用户数,3)-round(t2.下单用户数/t2.活跃用户数,3) end as 用户交易转化率较昨日增量

		,t.订单笔数

		,coalesce(t.订单笔数,0)-coalesce(t2.订单笔数,0) as 订单笔数较昨日增量

		,case when t2.订单笔数>0 then round((coalesce(t.订单笔数,0)-coalesce(t2.订单笔数,0))/coalesce(t2.订单笔数,0),3) end as 订单笔数较昨日涨幅

		,t.已付款订单数

		,coalesce(t.已付款订单数,0)-coalesce(t2.已付款订单数,0) as 已付款订单数较昨日增量

		,case when t2.已付款订单数>0 then round((coalesce(t.已付款订单数,0)-coalesce(t2.已付款订单数,0))/coalesce(t2.已付款订单数,0),3) end as 已付款订单数较昨日涨幅

		,case when t.订单笔数>0 then round(t.已付款订单数/t.订单笔数,3) end as 订单交易转化率

		,case when t.订单笔数>0 and t2.订单笔数>0 then round(t.已付款订单数/t.订单笔数,3)-round(t2.已付款订单数/t2.订单笔数,3) end as 订单交易转化率较昨日增量

		,case when t.订单笔数>0 and t4.订单交易转化率>0 then round(t.已付款订单数/t.订单笔数,3)-t4.订单交易转化率 end as  订单交易转化率较上月日均值增量

		,t.商品兑换件数

		,coalesce(t.商品兑换件数,0)-coalesce(t2.商品兑换件数,0) as 商品兑换件数较昨日增量

		,case when t2.商品兑换件数>0 then round((coalesce(t.商品兑换件数,0)-coalesce(t2.商品兑换件数,0))/coalesce(t2.商品兑换件数,0),3) end as 商品兑换件数较昨日涨幅

		,t.商城交易金额

		,coalesce(t.商城交易金额,0)-coalesce(t2.商城交易金额,0) as 商城交易金额较昨日增量

		,case when t2.商城交易金额>0 then round((coalesce(t.商城交易金额,0)-coalesce(t2.商城交易金额,0))/coalesce(t2.商城交易金额,0),3) end as 商城交易金额较昨日涨幅

		,t.黄金交易金额

		,coalesce(t.黄金交易金额,0)-coalesce(t2.黄金交易金额,0) as 黄金交易金额较昨日增量

		,case when t2.黄金交易金额>0 then round((coalesce(t.黄金交易金额,0)-coalesce(t2.黄金交易金额,0))/coalesce(t2.黄金交易金额,0),3) end as 黄金交易金额较昨日涨幅

		,t.总计交易金额

		,coalesce(t.总计交易金额,0)-coalesce(t2.总计交易金额,0) as 总计交易金额较昨日增量

		,case when t2.总计交易金额>0 then round((coalesce(t.总计交易金额,0)-coalesce(t2.总计交易金额,0))/coalesce(t2.总计交易金额,0),3) end as 总计交易金额较昨日涨幅

		,case when t.下单用户数>0 then round(t.订单笔数/t.下单用户数,2) end as 人均订单笔数

		,case when t.下单用户数>0 and t2.下单用户数>0 then round(t.订单笔数/t.下单用户数,3)-round(t2.订单笔数/t2.下单用户数,3) end as 人均订单笔数较昨日增量

		,case when t.下单用户数>0 and t2.下单用户数>0 and t2.订单笔数>0 then round((t.订单笔数/t.下单用户数-t2.订单笔数/t2.下单用户数)/(t2.订单笔数/t2.下单用户数),3) end as 人均订单笔数较昨日涨幅

		,case when t.下单用户数>0 then round(t.商城交易金额/t.下单用户数) end as 人均客单价

		,case when t.下单用户数>0 and t2.下单用户数>0 then round(t.商城交易金额/t.下单用户数,3)-round(t2.商城交易金额/t2.下单用户数,3) end as 人均客单价较昨日增量

		,case when t.下单用户数>0 and t2.下单用户数>0 and t2.商城交易金额>0 then round((t.商城交易金额/t.下单用户数-t2.商城交易金额/t2.下单用户数)/(t2.商城交易金额/t2.下单用户数),3)

		end as 人均客单价较昨日涨幅

		,t.本月累计活跃用户数

from lab_bigdata_dev.mall_channel t

left join lab_bigdata_dev.mall_channel t2 --昨日

on t.last_day=t2.dt and t.渠道=t2.渠道

left join lab_bigdata_dev.mall_channel t3 --月初

on t.last_day=t3.dt and t.渠道=t3.渠道

left join lab_bigdata_dev.mall_channel_month t4 --上月平均

on t.last_month=t4.mth and t.渠道=t4.渠道

left join lab_bigdata_dev.mall_channel t5 --上月末

on t.last_mon_end=t5.dt and t.渠道=t5.渠道





;
**跑批发布_积分第1张表运营日报0426_3.sql
--edw.tlsc_sunyardmall_orderform 订单表 edw.dwd_bus_cmpn_pnt_mall_ord_srl_dd
--edw.tlsc_sunyardmall_user 用户表  edw.dim_bus_cmpn_pnt_mall_usr_inf_dd
--edw.aubs_events_tlsc 用户行为分析
--sunyardmall_user_dynamic活跃用户数
--参数'@@{yyyyMMdd}' @@{yyyyMMdd}'
------------------------------*****KPI 指标******----------------------------
--01筛选维度，日期，渠道
drop table if exists lab_bigdata_dev.choose_basic;
CREATE TABLE lab_bigdata_dev.choose_basic AS
select t1.dt ,t2.渠道,t1.last_day,t1.last_month,t1.cur_mon_bgn
from (select dt,1 as flag ,t1.last_day ,substr(t1.last_mon_end,1,6) last_month,t1.cur_mon_bgn
		from edw.dim_bus_com_date_st t1
		where t1.dt>'20200701'
		 and t1.dt<='@@{yyyyMMdd}'
	)t1
left  join (select distinct 1 as flag,
				CASE
				   WHEN usr_src_chnl = 'wxbank'                         THEN '微信银行'
				   WHEN usr_src_chnl = 'chaogui'                        THEN '超柜' --渠道
				   else '手机银行'
				 END AS 渠道

			FROM edw.dim_bus_cmpn_pnt_mall_usr_inf_dd --积分商城用户信息
			WHERE   dt = '@@{yyyyMMdd}'
			)t2
on t1.flag=t2.flag
;

drop table if exists lab_bigdata_dev.mall_cnt_amt;
CREATE TABLE lab_bigdata_dev.mall_cnt_amt as
SELECT  t.dt,t.渠道,t2.新增注册用户数,t.last_day
		,t3.新增注册下单用户数
	    ,t3.新增注册用户订单笔数
		,t3.新增注册用户交易金额
		,t4.活跃用户数
		,t42.本月累计活跃用户数
		,t5.下单用户数
		,t5.订单笔数
		,t5.已付款订单数
		,t5.商城交易金额
		,t5.黄金交易金额
		,t5.总计交易金额

FROM    lab_bigdata_dev.choose_basic t --筛选维度表
--(1)新增注册用户数
left join (
		 SELECT
          count(id) AS 新增注册用户数,
          to_char(to_date(substr(addTime,1,10),'yyyy-mm-dd'), 'yyyymmdd') AS dt,
		  CASE
						WHEN channel = 'wxbank'                         THEN '微信银行'
						WHEN channel = 'chaogui'                        THEN '超柜' --渠道
						when channel IN ('mobilebank','mobileBank','SJYH') then  '手机银行'
					  END as 渠道
		 FROM
			  edw.tlsc_sunyardmall_user
		 WHERE  dt='@@{yyyyMMdd}'
		 and userRole = 'BUYER' --用户角色:买家
		 AND deleteStatus <>'-1'  --用户状态代码:-1删除
		 AND (   lastLoginDate IS NOT NULL OR loginDate IS NOT NULL )
		 AND tenant_code ='tlcard'
		 AND  channel in (  'mobilebank','wxbank','chaogui',' pad' ,'mobileBank','SJYH' )

		 GROUP BY
			  to_char(to_date(substr(addTime,1,10),'yyyy-mm-dd'), 'yyyymmdd')
			  ,CASE
							WHEN channel = 'wxbank'                         THEN '微信银行'
							WHEN channel = 'chaogui'                        THEN '超柜' --渠道
							when channel IN ('mobilebank','mobileBank','SJYH') then  '手机银行'
						  END
		 )t2 on t.dt=t2.dt and t.渠道=t2.渠道

--(2)新增注册下单用户数 --新增注册用户订单笔数	新增注册用户交易金额
left join (

			--最新
			SELECT to_char(to_date(substr(USER.addTime,1,10),'yyyy-mm-dd'), 'yyyymmdd') AS dt,
				  CASE
						WHEN USER.channel = 'wxbank'                         THEN '微信银行'
						WHEN USER.channel = 'chaogui'                        THEN '超柜' --渠道
						when USER.channel IN ('mobilebank','mobileBank','SJYH') then  '手机银行'
					  END as 渠道,
				  count(DISTINCT a.user_id) AS 新增注册下单用户数
				  , count(DISTINCT a.order_id) as 新增注册用户订单笔数
				 ,sum(a.totalPrice + a.integral_all * 0.01) as 新增注册用户交易金额
			 FROM
				  edw.tlsc_sunyardmall_orderform AS a
			 inner JOIN edw.tlsc_sunyardmall_user AS USER
			 ON a.user_id = USER .id AND substr (a.addTime, 1,10) = substr (USER.addTime, 1,10)
			 and user.dt='@@{yyyyMMdd}'
			 WHERE a.dt<='@@{yyyyMMdd}'
			 and a.deleteStatus ='0'
			 AND USER .tenant_code ='tlcard'
			 and a.tenant_code ='tlcard'
			 AND  USER .channel in  (  'mobilebank','wxbank','chaogui',' pad' ,'mobileBank','SJYH' )
			 AND a.payTime IS NOT NULL
			 GROUP BY
				 to_char(to_date(substr(user.addTime,1,10),'yyyy-mm-dd'), 'yyyymmdd')
					  ,CASE
						WHEN USER.channel = 'wxbank'                         THEN '微信银行'
						WHEN USER.channel = 'chaogui'                        THEN '超柜' --渠道
						when USER.channel IN ('mobilebank','mobileBank','SJYH') then  '手机银行'
					  END

		)t3  ON t.dt=t3.dt and t.渠道=t3.渠道
-- --(3)活跃用户
left join (
	SELECT
		 to_char(to_date(substr(obj.addTime,1,10),'yyyy-mm-dd'),'yyyymmdd') as dt
		 ,CASE
			WHEN channel = 'wxbank'                         THEN '微信银行'
			WHEN channel = 'chaogui'                        THEN '超柜' --渠道
			when channel='mobilebank' then  '手机银行'
		  END as 渠道
		 ,count(DISTINCT user_id) 活跃用户数
	FROM
		 edw.tlsc_sunyardmall_user_dynamic obj
	WHERE dt <= '@@{yyyyMMdd}'
	and     dt >= '20200701'
	AND user_id IN (
		 SELECT
			  id
		 FROM
			  edw.tlsc_sunyardmall_user
		 WHERE
			  deleteStatus = 0 and dt='@@{yyyyMMdd}'
	)
	AND tenant_code = 'tlcard'
	and channel in ('wxbank','chaogui','mobilebank')
	group by to_char(to_date(substr(obj.addTime,1,10),'yyyy-mm-dd'),'yyyymmdd')
		,CASE
			WHEN channel = 'wxbank'                         THEN '微信银行'
			WHEN channel = 'chaogui'                        THEN '超柜' --渠道
			when channel='mobilebank' then  '手机银行'
		  END

		)t4  ON t.dt=t4.dt and t.渠道=t4.渠道

-- --(3)本月累计活跃用户数
left join (
    select t.dt, t.渠道,count(DISTINCT t2.user_id) 本月累计活跃用户数
	from lab_bigdata_dev.choose_basic t --筛选维度表
	left join (
					SELECT distinct
						 to_char(to_date(substr(obj.addTime,1,10),'yyyy-mm-dd'),'yyyymmdd') as dt
						 ,CASE
							WHEN channel = 'wxbank'                         THEN '微信银行'
							WHEN channel = 'chaogui'                        THEN '超柜' --渠道
							when channel='mobilebank' then  '手机银行'
						  END as 渠道
						 , user_id
					FROM
						 edw.tlsc_sunyardmall_user_dynamic obj
					WHERE dt <= '@@{yyyyMMdd}'
					and     dt >= '20200701'
					AND user_id IN (
						 SELECT
							  id
						 FROM
							  edw.tlsc_sunyardmall_user
						 WHERE
							  deleteStatus = 0 and dt='@@{yyyyMMdd}'
					)
					AND tenant_code = 'tlcard'
					and channel in ('wxbank','chaogui','mobilebank')
				)t2 --足迹表
		on substr(t.dt,1,6)=substr(t2.dt,1,6) and t2.dt<=t.dt and t.渠道=t2.渠道
		group by t.dt, t.渠道
		)t42  ON t.dt=t42.dt and t.渠道=t42.渠道

--(4)下单用户数 已付款订单数
left join (
			SELECT to_char(to_date(substr(a.addTime,1,10),'yyyy-mm-dd'), 'yyyymmdd') AS dt,
				  CASE
								WHEN a.channel = 'wxbank'                         THEN '微信银行'
								WHEN a.channel = 'chaogui'                        THEN '超柜' --渠道
								when a.channel='mobilebank' then  '手机银行'
							  END as 渠道,
				  --count(DISTINCT case when a.tenant_code ='tlcard' then a.user_id end) AS 下单用户数
				  count(DISTINCT case when a.payTime IS NOT NULL then a.user_id end) AS 下单用户数
				  , count(DISTINCT  case when a.tenant_code ='tlcard' then a.order_id end) as 订单笔数
				  , count(DISTINCT  case when a.tenant_code ='tlcard' AND a.payTime IS NOT NULL then a.order_id end) as 已付款订单数 --0 订单取消, 10 已提交待付款,15 线下付款提交申请(已经取消该付款方式),16 货到付款,20 已付款待发货,30 已发货待收货
				 ,sum(case when a.tenant_code ='tlcard'  AND a.payTime IS NOT NULL then a.totalPrice + a.integral_all * 0.01 end) as 商城交易金额
				 ,sum(case when a.tenant_code ='tljincheng' AND a.payTime IS NOT NULL then a.totalPrice + a.integral_all * 0.01 end) as 黄金交易金额
				 ,sum(case when a.tenant_code in ('tlcard','tljincheng') AND a.payTime IS NOT NULL then a.totalPrice + a.integral_all * 0.01 end) as 总计交易金额
			 FROM  edw.tlsc_sunyardmall_orderform AS a
			 WHERE a.deleteStatus ='0'
			 and a.dt<='@@{yyyyMMdd}'
			 AND  a.channel in (  'mobilebank','wxbank','chaogui',' pad'  )

			 GROUP BY
				 to_char(to_date(substr(a.addTime,1,10),'yyyy-mm-dd'), 'yyyymmdd')
					  ,CASE
									WHEN a.channel = 'wxbank'                         THEN '微信银行'
									WHEN a.channel = 'chaogui'                        THEN '超柜' --渠道
									when a.channel='mobilebank' then  '手机银行'
								  END
		)t5  ON t.dt=t5.dt and t.渠道=t5.渠道
;



--14	商品兑换件数	统计泰隆商城商品兑换件数
--商品统计 商品兑换件数 goods_salenum

drop table if EXISTS lab_bigdata_dev.mall_order_list ;
create table lab_bigdata_dev.mall_order_list as
select  t1.order_id
		,t2.openid as cst_id
		, CASE
		   WHEN t1.channel = 'wxbank'                         THEN '微信银行'
		   WHEN t1.channel  = 'chaogui'                        THEN '超柜' --渠道
		  when t1.channel='mobilebank' then  '手机银行'
		 END AS 渠道
		,to_char(to_date(substr(t1.addTime,1,10),'yyyy-mm-dd'), 'yyyymmdd') AS dt
		,t1.goods_info  --商品列表
		,t1.return_goods_info --退货商品列表
from edw.tlsc_sunyardmall_orderform t1 --商城订单
left join edw.tlsc_sunyardmall_user t2 --商城用户贴源 SELECT id,openid FROM edw.tlsc_sunyardmall_user  where  dt='20211106' and id in ('59580','17810');
on      t2.id = t1.USER_ID
and     t2.dt = '@@{yyyyMMdd}'
where   t1.dt <= '@@{yyyyMMdd}'
AND t1.tenant_code ='tlcard'  AND t1.deleteStatus ='0' AND  t1.channel in (  'mobilebank','wxbank','chaogui',' pad'  )
and     t1.paytime is not null                               -- 支付事件不为空，只查询已支付的
--and 	t1.ORDER_STATUS not in ('0','10')  --0 订单取消, 10 已提交待付款,15 线下付款提交申请(已经取消该付款方式),16 货到付款,20 已付款待发货,30 已发货待收货
;

--一个订单如果有多个商品，转为多行
--购买商品数量
drop table if EXISTS lab_bigdata_dev.mall_buy_count ;
create table lab_bigdata_dev.mall_buy_count  as
select t.order_id,sum(goods_count) 商品兑换件数
from (select order_id
		,keyvalue(replace(replace(replace(goods_info,'&quot;',''),'{',''),'[',''),',',':',&quot;goods_id&quot;) as goods_id
		,keyvalue(replace(replace(replace(goods_info,'&quot;',''),'{',''),'[',''),',',':',&quot;goods_name&quot;) as goods_name
		,keyvalue(replace(replace(replace(goods_info,'&quot;',''),'{',''),'[',''),',',':',&quot;goods_count&quot;) as goods_count
from
	(
	select TRANS_ARRAY(1,&quot;},&quot;,order_id,goods_info) as (order_id,goods_info)
	from lab_bigdata_dev.mall_order_list
	)a
--where order_id='26750020210830095402911244'
)t
group by t.order_id
;
--基础指标合并
drop table if EXISTS lab_bigdata_dev.mall_total_basic;
create table lab_bigdata_dev.mall_total_basic  as
select  t.dt,t.渠道,t.新增注册用户数
		,t.新增注册下单用户数
	    ,t.新增注册用户订单笔数
		,t.新增注册用户交易金额
		,t.活跃用户数
		,t.本月累计活跃用户数
		,t.下单用户数
		,t.订单笔数
		,t.已付款订单数
		,t.商城交易金额
		,t.黄金交易金额
		,t.总计交易金额,t2.商品兑换件数,t3.累计注册用户数,t4.累计交易用户数,t5.累计交易金额
from lab_bigdata_dev.mall_cnt_amt t

--商品兑换件数
left join (
			select a.dt,a.渠道,sum(b.商品兑换件数) 商品兑换件数
			from lab_bigdata_dev.mall_order_list a
			left join lab_bigdata_dev.mall_buy_count b
			on a.order_id=b.order_id
			group by a.dt,a.渠道
)t2 on t.dt=t2.dt and t.渠道=t2.渠道

--累计数
left join (
			select a.dt,a.渠道
				,sum(b.新增注册用户数) 累计注册用户数
				--,sum(b.总计交易金额) 累计交易金额
			from lab_bigdata_dev.mall_cnt_amt a
			left join lab_bigdata_dev.mall_cnt_amt b
			on a.渠道=b.渠道 and b.dt<=a.dt
			group by a.dt,a.渠道
			)t3 on t.dt=t3.dt and t.渠道=t3.渠道

--累计交易用户数
left join (

		SELECT  t.dt
				,t.渠道
				,count(DISTINCT t2.user_id) AS 累计交易用户数

		FROM    lab_bigdata_dev.choose_basic t --筛选维度表
		LEFT JOIN    (
						 SELECT  to_char(to_date(substr(a.addTime, 1, 10), 'yyyy-mm-dd'), 'yyyymmdd') AS dt
								 ,CASE
									WHEN a.channel = 'wxbank'     THEN '微信银行'
									WHEN a.channel = 'chaogui'    THEN '超柜' --渠道
									WHEN a.channel = 'mobilebank' THEN '手机银行'
								  END                                                                 AS 渠道
								 ,a.user_id

						 FROM    edw.tlsc_sunyardmall_orderform AS a
						 WHERE  a.order_cat = 0
						AND a.tenant_code = 'tlcard'
						AND a.payTime IS NOT NULL
						 AND     a.dt <= '@@{yyyyMMdd}'
						 AND     a.channel IN ( 'mobilebank' , 'wxbank' , 'chaogui' , ' pad' )
					 ) t2
		ON      t.渠道 = t2.渠道
		AND     t2.dt <= t.dt
		GROUP BY t.dt , t.渠道
		)t4 on t.dt=t4.dt and t.渠道=t4.渠道

		--累计交易金额
left join (

		SELECT  t.dt
				,t.渠道
				,sum(交易金额 ) as 累计交易金额
		FROM    lab_bigdata_dev.choose_basic t --筛选维度表
		LEFT JOIN    (
						 SELECT  to_char(to_date(substr(a.addTime, 1, 10), 'yyyy-mm-dd'), 'yyyymmdd') AS dt
								 ,CASE
									WHEN a.channel = 'wxbank'     THEN '微信银行'
									WHEN a.channel = 'chaogui'    THEN '超柜' --渠道
									WHEN a.channel = 'mobilebank' THEN '手机银行'
								  END                                                                 AS 渠道

								 ,a.totalPrice + a.integral_all * 0.01  as 交易金额
						 FROM    edw.tlsc_sunyardmall_orderform AS a
						 WHERE  a.order_cat = 0
						AND a.tenant_code in ('tlcard','tljincheng' )
						AND a.payTime IS NOT NULL
						 AND     a.dt <= '@@{yyyyMMdd}'
						 AND     a.channel IN ( 'mobilebank' , 'wxbank' , 'chaogui' , ' pad' )
					 ) t2
		ON      t.渠道 = t2.渠道
		AND     t2.dt <= t.dt
		GROUP BY t.dt , t.渠道
		)t5 on t.dt=t5.dt and t.渠道=t5.渠道
;


----------------------*****所有渠道******--------------------------------
drop table if exists lab_bigdata_dev.all_channel_choose_basic;
CREATE TABLE lab_bigdata_dev.all_channel_choose_basic AS
select t1.dt ,'所有渠道' 渠道,t1.last_day,t1.last_month,t1.cur_mon_bgn,t1.last_mon_end
from (select dt,1 as flag ,t1.last_day ,substr(t1.last_mon_end,1,6) last_month,t1.cur_mon_bgn,t1.last_mon_end
		from edw.dim_bus_com_date_st t1
		where t1.dt>'20200701'
		 and t1.dt<='@@{yyyyMMdd}'
	)t1

;

drop table if exists lab_bigdata_dev.all_channel_mall_cnt_amt;
CREATE TABLE lab_bigdata_dev.all_channel_mall_cnt_amt as
SELECT  t.dt,t.渠道,t2.新增注册用户数,t.last_day
		,t3.新增注册下单用户数
	    ,t3.新增注册用户订单笔数
		,t3.新增注册用户交易金额
		,t4.活跃用户数
		,t42.本月累计活跃用户数
		,t5.下单用户数
		,t5.订单笔数
		,t5.已付款订单数
		,t5.商城交易金额
		,t5.黄金交易金额
		,t5.总计交易金额

FROM    lab_bigdata_dev.all_channel_choose_basic t --筛选维度表
--(1)新增注册用户数
left join (
		 SELECT
          count(id) AS 新增注册用户数,
          to_char(to_date(substr(addTime,1,10),'yyyy-mm-dd'), 'yyyymmdd') AS dt,
		  '所有渠道' 渠道
		 FROM
			  edw.tlsc_sunyardmall_user
		 WHERE  dt='@@{yyyyMMdd}'
		 and userRole = 'BUYER' --用户角色:买家
		 AND deleteStatus <>'-1'  --用户状态代码:-1删除
		 AND (   lastLoginDate IS NOT NULL OR loginDate IS NOT NULL )
		 AND tenant_code ='tlcard'
		 AND  channel in (  'mobilebank','wxbank','chaogui',' pad' ,'mobileBank','SJYH' )

		 GROUP BY
			  to_char(to_date(substr(addTime,1,10),'yyyy-mm-dd'), 'yyyymmdd')

		 )t2 on t.dt=t2.dt and t.渠道=t2.渠道

--(2)新增注册下单用户数 --新增注册用户订单笔数	新增注册用户交易金额
left join (

			--最新
			SELECT to_char(to_date(substr(USER.addTime,1,10),'yyyy-mm-dd'), 'yyyymmdd') AS dt,
				  '所有渠道' 渠道,
				  count(DISTINCT a.user_id) AS 新增注册下单用户数
				  , count(DISTINCT a.order_id) as 新增注册用户订单笔数
				 ,sum(a.totalPrice + a.integral_all * 0.01) as 新增注册用户交易金额
			 FROM
				  edw.tlsc_sunyardmall_orderform AS a
			 inner JOIN edw.tlsc_sunyardmall_user AS USER
			 ON a.user_id = USER .id AND substr (a.addTime, 1,10) = substr (USER.addTime, 1,10)
			 and user.dt='@@{yyyyMMdd}'
			 WHERE a.dt<='@@{yyyyMMdd}'
			 and a.deleteStatus ='0'
			 AND USER .tenant_code ='tlcard'
			 AND a.tenant_code ='tlcard'
			 AND  USER .channel in  (  'mobilebank','wxbank','chaogui',' pad' ,'mobileBank','SJYH' )
			 AND a.payTime IS NOT NULL
			 GROUP BY
				 to_char(to_date(substr(user.addTime,1,10),'yyyy-mm-dd'), 'yyyymmdd')


		)t3  ON t.dt=t3.dt and t.渠道=t3.渠道
-- --(3)活跃用户
left join (

	SELECT
		 to_char(to_date(substr(obj.addTime,1,10),'yyyy-mm-dd'),'yyyymmdd') as dt
		 ,'所有渠道' 渠道
		 ,count(DISTINCT user_id) 活跃用户数
	FROM
		 edw.tlsc_sunyardmall_user_dynamic obj
	WHERE dt <= '@@{yyyyMMdd}'
	and     dt >= '20200701'
	AND user_id IN (
		 SELECT
			  id
		 FROM
			  edw.tlsc_sunyardmall_user
		 WHERE
			  deleteStatus = 0 and dt='@@{yyyyMMdd}'
	)
	AND tenant_code = 'tlcard'
	and channel in ('wxbank','chaogui','mobilebank')
	group by to_char(to_date(substr(obj.addTime,1,10),'yyyy-mm-dd'),'yyyymmdd')

		)t4  ON t.dt=t4.dt and t.渠道=t4.渠道

-- --(3)本月累计活跃用户数
left join (
    select t.dt, t.渠道,count(DISTINCT t2.user_id) 本月累计活跃用户数
	from lab_bigdata_dev.all_channel_choose_basic t --筛选维度表
	left join (
					SELECT distinct
						 to_char(to_date(substr(obj.addTime,1,10),'yyyy-mm-dd'),'yyyymmdd') as dt
						 , '所有渠道' 渠道
						 , user_id
					FROM
						 edw.tlsc_sunyardmall_user_dynamic obj
					WHERE dt <= '@@{yyyyMMdd}'
					and     dt >= '20200701'
					AND user_id IN (
						 SELECT
							  id
						 FROM
							  edw.tlsc_sunyardmall_user
						 WHERE
							  deleteStatus = 0 and dt='@@{yyyyMMdd}'
					)
					AND tenant_code = 'tlcard'
					and channel in ('wxbank','chaogui','mobilebank')
				)t2 --足迹表
		on substr(t.dt,1,6)=substr(t2.dt,1,6) and t2.dt<=t.dt and t.渠道=t2.渠道
		group by t.dt, t.渠道
		)t42  ON t.dt=t42.dt and t.渠道=t42.渠道

--(4)下单用户数 已付款订单数
left join (
			SELECT to_char(to_date(substr(a.addTime,1,10),'yyyy-mm-dd'), 'yyyymmdd') AS dt,
				  '所有渠道' 渠道,
				  --count(DISTINCT case when a.tenant_code ='tlcard' then a.user_id end) AS 下单用户数
				  count(DISTINCT case when a.payTime IS NOT NULL then a.user_id end) AS 下单用户数
				  , count(DISTINCT  case when a.tenant_code ='tlcard' then a.order_id end) as 订单笔数
				  , count(DISTINCT  case when a.tenant_code ='tlcard' AND a.payTime IS NOT NULL then a.order_id end) as 已付款订单数 --0 订单取消, 10 已提交待付款,15 线下付款提交申请(已经取消该付款方式),16 货到付款,20 已付款待发货,30 已发货待收货
				 ,sum(case when a.tenant_code ='tlcard'  AND a.payTime IS NOT NULL then a.totalPrice + a.integral_all * 0.01 end) as 商城交易金额
				 ,sum(case when a.tenant_code ='tljincheng' AND a.payTime IS NOT NULL then a.totalPrice + a.integral_all * 0.01 end) as 黄金交易金额
				 ,sum(case when a.tenant_code in ('tlcard','tljincheng') AND a.payTime IS NOT NULL then a.totalPrice + a.integral_all * 0.01 end) as 总计交易金额
			 FROM  edw.tlsc_sunyardmall_orderform AS a
			 WHERE a.deleteStatus ='0'

			 and a.dt<='@@{yyyyMMdd}'
			 AND  a.channel in (  'mobilebank','wxbank','chaogui',' pad'  )

			 GROUP BY
				 to_char(to_date(substr(a.addTime,1,10),'yyyy-mm-dd'), 'yyyymmdd')

		)t5  ON t.dt=t5.dt and t.渠道=t5.渠道



;

--14	商品兑换件数	统计泰隆商城商品兑换件数

drop table if EXISTS lab_bigdata_dev.all_channel_mall_order_list ;
create table lab_bigdata_dev.all_channel_mall_order_list as
select  t1.order_id
		,t2.openid as cst_id
		, '所有渠道' 渠道
		,to_char(to_date(substr(t1.addTime,1,10),'yyyy-mm-dd'), 'yyyymmdd') AS dt
		,t1.goods_info  --商品列表
		,t1.return_goods_info --退货商品列表
from edw.tlsc_sunyardmall_orderform t1 --商城订单
left join edw.tlsc_sunyardmall_user t2 --商城用户贴源 SELECT id,openid FROM edw.tlsc_sunyardmall_user  where  dt='20211106' and id in ('59580','17810');
on      t2.id = t1.USER_ID
and     t2.dt = '@@{yyyyMMdd}'
where   t1.dt <= '@@{yyyyMMdd}'
AND t1.tenant_code ='tlcard'  AND t1.deleteStatus ='0' AND  t1.channel in (  'mobilebank','wxbank','chaogui',' pad'  )
and     t1.paytime is not null                               -- 支付事件不为空，只查询已支付的
--and 	t1.ORDER_STATUS not in ('0','10')  --0 订单取消, 10 已提交待付款,15 线下付款提交申请(已经取消该付款方式),16 货到付款,20 已付款待发货,30 已发货待收货
;

--一个订单如果有多个商品，转为多行
--购买商品数量
drop table if EXISTS lab_bigdata_dev.all_channel_mall_buy_count ;
create table lab_bigdata_dev.all_channel_mall_buy_count  as
select t.order_id,sum(goods_count) 商品兑换件数
from (select order_id
		,keyvalue(replace(replace(replace(goods_info,'&quot;',''),'{',''),'[',''),',',':',&quot;goods_id&quot;) as goods_id
		,keyvalue(replace(replace(replace(goods_info,'&quot;',''),'{',''),'[',''),',',':',&quot;goods_name&quot;) as goods_name
		,keyvalue(replace(replace(replace(goods_info,'&quot;',''),'{',''),'[',''),',',':',&quot;goods_count&quot;) as goods_count
from
	(
	select TRANS_ARRAY(1,&quot;},&quot;,order_id,goods_info) as (order_id,goods_info)
	from lab_bigdata_dev.all_channel_mall_order_list
	)a
--where order_id='26750020210830095402911244'
)t
group by t.order_id
;
--基础指标合并
drop table if EXISTS lab_bigdata_dev.all_channel_mall_total_basic;
create table lab_bigdata_dev.all_channel_mall_total_basic  as
select  t.dt,t.渠道,t.新增注册用户数
		,t.新增注册下单用户数
	    ,t.新增注册用户订单笔数
		,t.新增注册用户交易金额
		,t.活跃用户数
		,t.本月累计活跃用户数
		,t.下单用户数
		,t.订单笔数
		,t.已付款订单数
		,t.商城交易金额
		,t.黄金交易金额
		,t.总计交易金额,t2.商品兑换件数,t3.累计注册用户数,t4.累计交易用户数,t5.累计交易金额
from lab_bigdata_dev.all_channel_mall_cnt_amt t

--商品兑换件数
left join (
			select a.dt,a.渠道,sum(b.商品兑换件数) 商品兑换件数
			from lab_bigdata_dev.all_channel_mall_order_list a
			left join lab_bigdata_dev.all_channel_mall_buy_count b
			on a.order_id=b.order_id
			group by a.dt,a.渠道
)t2 on t.dt=t2.dt and t.渠道=t2.渠道

--累计数
left join (
			select a.dt,a.渠道
				,sum(b.新增注册用户数) 累计注册用户数

			from lab_bigdata_dev.all_channel_mall_cnt_amt a
			left join lab_bigdata_dev.all_channel_mall_cnt_amt b
			on a.渠道=b.渠道 and b.dt<=a.dt
			group by a.dt,a.渠道
			)t3 on t.dt=t3.dt and t.渠道=t3.渠道
--累计交易用户数
left join (

		SELECT  t.dt
				,t.渠道
				,count(DISTINCT t2.user_id) AS 累计交易用户数
				,sum(交易金额 ) as 累计交易金额
		FROM    lab_bigdata_dev.all_channel_choose_basic t --筛选维度表
		LEFT JOIN    (
						 SELECT  to_char(to_date(substr(a.addTime, 1, 10), 'yyyy-mm-dd'), 'yyyymmdd') AS dt
								 ,'所有渠道' 渠道
								 ,a.user_id
								 ,a.totalPrice + a.integral_all * 0.01  as 交易金额
						 FROM    edw.tlsc_sunyardmall_orderform AS a
						 WHERE   a.order_cat = 0
						AND a.tenant_code = 'tlcard'
						AND a.payTime IS NOT NULL
						 AND     a.dt <= '@@{yyyyMMdd}'

					 ) t2
		ON      t.渠道 = t2.渠道
		AND     t2.dt <= t.dt
		GROUP BY t.dt , t.渠道
		)t4 on t.dt=t4.dt and t.渠道=t4.渠道
--累计交易金额
left join (

		SELECT  t.dt
				,t.渠道

				,sum(交易金额 ) as 累计交易金额
		FROM    lab_bigdata_dev.all_channel_choose_basic t --筛选维度表
		LEFT JOIN    (
						 SELECT  to_char(to_date(substr(a.addTime, 1, 10), 'yyyy-mm-dd'), 'yyyymmdd') AS dt
								 ,'所有渠道' 渠道

								 ,a.totalPrice + a.integral_all * 0.01  as 交易金额
						 FROM    edw.tlsc_sunyardmall_orderform AS a
						 WHERE   a.order_cat = 0
						AND a.tenant_code in( 'tlcard','tljincheng')
						AND a.payTime IS NOT NULL
						 AND     a.dt <= '@@{yyyyMMdd}'

					 ) t2
		ON      t.渠道 = t2.渠道
		AND     t2.dt <= t.dt
		GROUP BY t.dt , t.渠道
		)t5 on t.dt=t5.dt and t.渠道=t5.渠道
;
------------****以上所有渠道结束-----------------

--将三个渠道和所有渠道合并，加上日期
drop table if EXISTS lab_bigdata_dev.mall_channel;
create table lab_bigdata_dev.mall_channel  as
select a.*,t1.last_day ,substr(t1.last_mon_end,1,6) last_month  --上个月202111
     ,t1.cur_mon_bgn  --本月初20211201
	 ,t1.last_mon_end --上月末
from (
          select *
          from lab_bigdata_dev.mall_total_basic
          union
          select *
          from lab_bigdata_dev.all_channel_mall_total_basic
     )a
left join  edw.dim_bus_com_date_st t1
on a.dt=t1.dt
and t1.dt<='@@{yyyyMMdd}'
;

--上月平均数
drop table if EXISTS lab_bigdata_dev.mall_channel_month;
create table lab_bigdata_dev.mall_channel_month  as
select substr(dt,1,6) mth,渠道
		,case when sum(t.订单笔数)>0 then round(sum(t.已付款订单数)/sum(t.订单笔数),3) end as 订单交易转化率
from   lab_bigdata_dev.mall_channel t
group by substr(dt,1,6),渠道;


--除法指标
truncate table lab_bigdata_dev.mall_summary;
insert into lab_bigdata_dev.mall_summary
select t.dt,t.渠道,t.累计注册用户数
		,case when t5.累计注册用户数>0 then round((coalesce(t.累计注册用户数,0)-coalesce(t5.累计注册用户数,0))/coalesce(t5.累计注册用户数,0),3) end as 累计注册用户较上月末涨幅
		,t.累计交易用户数
		,coalesce(t.累计交易用户数,0)-coalesce(t2.累计交易用户数,0) as 累计交易用户数较昨日增量
		,case when t5.累计交易用户数>0 then round((coalesce(t.累计交易用户数,0)-coalesce(t5.累计交易用户数,0))/coalesce(t5.累计交易用户数,0),3) end as 累计交易用户数较上月末涨幅
		,t.累计交易金额
		,coalesce(t.累计交易金额,0)-coalesce(t2.累计交易金额,0) as 累计交易金额较昨日增量
		,case when t5.累计交易金额>0 then round((coalesce(t.累计交易金额,0)-coalesce(t5.累计交易金额,0))/coalesce(t5.累计交易金额,0),3) end as 累计交易金额较上月末涨幅
		,t.新增注册用户数
		,coalesce(t.新增注册用户数,0)-coalesce(t2.新增注册用户数,0) as 新增注册用户较昨日增量
		,case when t2.新增注册用户数>0 then round((coalesce(t.新增注册用户数,0)-coalesce(t2.新增注册用户数,0))/coalesce(t2.新增注册用户数,0),3) end as 新增注册用户较昨日涨幅
		,t.新增注册下单用户数
		,coalesce(t.新增注册下单用户数,0)-coalesce(t2.新增注册下单用户数,0) as 新增注册下单用户较昨日增量
		,case when t2.新增注册下单用户数>0 then round((coalesce(t.新增注册下单用户数,0)-coalesce(t2.新增注册下单用户数,0))/coalesce(t2.新增注册下单用户数,0),3) end as 新增注册下单用户较昨日涨幅
		,case when t.新增注册用户数>0 then round(t.新增注册下单用户数/t.新增注册用户数,3) end as 新用户订单转化率
		,case when t.新增注册用户数>0 and t2.新增注册用户数>0 then round(t.新增注册下单用户数/t.新增注册用户数,3)-round(t2.新增注册下单用户数/t2.新增注册用户数,3) end as 新用户交易转化率较昨日增量
		,t.新增注册用户订单笔数,t.新增注册用户交易金额
		,coalesce(t.新增注册用户交易金额,0)-coalesce(t2.新增注册用户交易金额,0) as 新增注册用户交易金额较昨日增量
		,case when t2.新增注册用户交易金额>0 then round((coalesce(t.新增注册用户交易金额,0)-coalesce(t2.新增注册用户交易金额,0))/coalesce(t2.新增注册用户交易金额,0),3) end as 新增注册用户交易金额较昨日涨幅
		,case when t.新增注册下单用户数>0 then round(t.新增注册用户订单笔数/t.新增注册下单用户数,3) end as 新用户人均订单笔数
		,case when t.新增注册下单用户数>0 and t2.新增注册下单用户数>0 then round(t.新增注册用户订单笔数/t.新增注册下单用户数,3)-round(t2.新增注册用户订单笔数/t2.新增注册下单用户数,3) end as 新用户人均订单笔数较昨日增量
		,case when t.新增注册下单用户数>0 then round(t.新增注册用户交易金额/t.新增注册下单用户数,3) end as 新用户人均客单价
		,case when t.新增注册下单用户数>0 and t2.新增注册下单用户数>0 then round(t.新增注册用户交易金额/t.新增注册下单用户数,3)-round(t2.新增注册用户交易金额/t2.新增注册下单用户数,3) end as 新用户人均客单价较昨日增量
		,case when t.新增注册下单用户数>0 and t2.新增注册下单用户数>0 and t2.新增注册用户交易金额>0 then round((t.新增注册用户交易金额/t.新增注册下单用户数-t2.新增注册用户交易金额/t2.新增注册下单用户数)/(t2.新增注册用户交易金额/t2.新增注册下单用户数),3) end as 新用户人均客单价较昨日涨幅
		,t.活跃用户数
		,coalesce(t.活跃用户数,0)-coalesce(t2.活跃用户数,0) as 活跃用户较昨日增量
		,case when t2.活跃用户数>0 then round((coalesce(t.活跃用户数,0)-coalesce(t2.活跃用户数,0))/coalesce(t2.活跃用户数,0),3) end as 活跃用户数较昨日涨幅
		,t.下单用户数
		,coalesce(t.下单用户数,0)-coalesce(t2.下单用户数,0) as 商城下单用户较昨日增量
		,case when t2.下单用户数>0 then round((coalesce(t.下单用户数,0)-coalesce(t2.下单用户数,0))/coalesce(t2.下单用户数,0),3) end as 商城下单用户较昨日涨幅
		,case when t.活跃用户数>0 then round(t.下单用户数/t.活跃用户数,3) end as 用户交易转化率
		,case when t.活跃用户数>0 and t2.活跃用户数>0 then round(t.下单用户数/t.活跃用户数,3)-round(t2.下单用户数/t2.活跃用户数,3) end as 用户交易转化率较昨日增量
		,t.订单笔数
		,coalesce(t.订单笔数,0)-coalesce(t2.订单笔数,0) as 订单笔数较昨日增量
		,case when t2.订单笔数>0 then round((coalesce(t.订单笔数,0)-coalesce(t2.订单笔数,0))/coalesce(t2.订单笔数,0),3) end as 订单笔数较昨日涨幅
		,t.已付款订单数
		,coalesce(t.已付款订单数,0)-coalesce(t2.已付款订单数,0) as 已付款订单数较昨日增量
		,case when t2.已付款订单数>0 then round((coalesce(t.已付款订单数,0)-coalesce(t2.已付款订单数,0))/coalesce(t2.已付款订单数,0),3) end as 已付款订单数较昨日涨幅
		,case when t.订单笔数>0 then round(t.已付款订单数/t.订单笔数,3) end as 订单交易转化率
		,case when t.订单笔数>0 and t2.订单笔数>0 then round(t.已付款订单数/t.订单笔数,3)-round(t2.已付款订单数/t2.订单笔数,3) end as 订单交易转化率较昨日增量
		,case when t.订单笔数>0 and t4.订单交易转化率>0 then round(t.已付款订单数/t.订单笔数,3)-t4.订单交易转化率 end as  订单交易转化率较上月日均值增量
		,t.商品兑换件数
		,coalesce(t.商品兑换件数,0)-coalesce(t2.商品兑换件数,0) as 商品兑换件数较昨日增量
		,case when t2.商品兑换件数>0 then round((coalesce(t.商品兑换件数,0)-coalesce(t2.商品兑换件数,0))/coalesce(t2.商品兑换件数,0),3) end as 商品兑换件数较昨日涨幅
		,t.商城交易金额
		,coalesce(t.商城交易金额,0)-coalesce(t2.商城交易金额,0) as 商城交易金额较昨日增量
		,case when t2.商城交易金额>0 then round((coalesce(t.商城交易金额,0)-coalesce(t2.商城交易金额,0))/coalesce(t2.商城交易金额,0),3) end as 商城交易金额较昨日涨幅
		,t.黄金交易金额
		,coalesce(t.黄金交易金额,0)-coalesce(t2.黄金交易金额,0) as 黄金交易金额较昨日增量
		,case when t2.黄金交易金额>0 then round((coalesce(t.黄金交易金额,0)-coalesce(t2.黄金交易金额,0))/coalesce(t2.黄金交易金额,0),3) end as 黄金交易金额较昨日涨幅
		,t.总计交易金额
		,coalesce(t.总计交易金额,0)-coalesce(t2.总计交易金额,0) as 总计交易金额较昨日增量
		,case when t2.总计交易金额>0 then round((coalesce(t.总计交易金额,0)-coalesce(t2.总计交易金额,0))/coalesce(t2.总计交易金额,0),3) end as 总计交易金额较昨日涨幅
		,case when t.下单用户数>0 then round(t.订单笔数/t.下单用户数,2) end as 人均订单笔数
		,case when t.下单用户数>0 and t2.下单用户数>0 then round(t.订单笔数/t.下单用户数,3)-round(t2.订单笔数/t2.下单用户数,3) end as 人均订单笔数较昨日增量
		,case when t.下单用户数>0 and t2.下单用户数>0 and t2.订单笔数>0 then round((t.订单笔数/t.下单用户数-t2.订单笔数/t2.下单用户数)/(t2.订单笔数/t2.下单用户数),3) end as 人均订单笔数较昨日涨幅
		,case when t.下单用户数>0 then round(t.商城交易金额/t.下单用户数) end as 人均客单价
		,case when t.下单用户数>0 and t2.下单用户数>0 then round(t.商城交易金额/t.下单用户数,3)-round(t2.商城交易金额/t2.下单用户数,3) end as 人均客单价较昨日增量
		,case when t.下单用户数>0 and t2.下单用户数>0 and t2.商城交易金额>0 then round((t.商城交易金额/t.下单用户数-t2.商城交易金额/t2.下单用户数)/(t2.商城交易金额/t2.下单用户数),3)
		end as 人均客单价较昨日涨幅
		,t.本月累计活跃用户数
from lab_bigdata_dev.mall_channel t
left join lab_bigdata_dev.mall_channel t2 --昨日
on t.last_day=t2.dt and t.渠道=t2.渠道
left join lab_bigdata_dev.mall_channel t3 --月初
on t.last_day=t3.dt and t.渠道=t3.渠道
left join lab_bigdata_dev.mall_channel_month t4 --上月平均
on t.last_month=t4.mth and t.渠道=t4.渠道
left join lab_bigdata_dev.mall_channel t5 --上月末
on t.last_mon_end=t5.dt and t.渠道=t5.渠道


;
**跑批发布_积分第2张表超柜0323.sql
--edw.tlsc_sunyardmall_orderform 订单表 edw.dwd_bus_cmpn_pnt_mall_ord_srl_dd
--edw.tlsc_sunyardmall_user 用户表  edw.dim_bus_cmpn_pnt_mall_usr_inf_dd
--edw.aubs_events_tlsc 用户行为分析
--sunyardmall_user_dynamic活跃用户数
--参数'@@{yyyyMMdd}' @@{yyyyMMdd}'
--01订单表
--sselect count(*),count(distinct id ),count(distinct case when customer_manager_zbranch is not null then id end)
--,count(distinct cst_id),count(distinct user_id) from lab_bigdata_dev.order_chaogui_basic;; 198441	198441	61470	88704

drop table if exists lab_bigdata_dev.order_chaogui_basic;
CREATE TABLE lab_bigdata_dev.order_chaogui_basic AS
 SELECT

     to_char(to_date(substr(obj.addTime,1,10),'yyyy-mm-dd'), 'yyyymmdd') AS dt
     ,obj.order_id,obj.goods_info,obj.user_id,obj.mail_type,obj.verification_time,obj.totalPrice,obj.integral_all,obj.tenant_code
     ,obj.payTime,obj.customer_manager_zbranch
     ,user.userName,
     user.openid cst_id
FROM
     (
          SELECT
            order_id,goods_info,user_id,mail_type,verification_time,totalPrice,integral_all,tenant_code,payTime,addTime,customer_manager_zbranch,shipTime,order_cat,channel
          FROM
               edw.tlsc_sunyardmall_orderform obj
          WHERE
              dt<='@@{yyyyMMdd}'
              and deleteStatus ='0'
             -- AND a.tenant_code = 'tlcard' AND a.payTime IS NOT NULL
          and 	ORDER_STATUS not in ('0','10')  --0 订单取消, 10 已提交待付款,15 线下付款提交申请(已经取消该付款方式),16 货到付款,20 已付款待发货,30 已发货待收货
     ) obj
LEFT JOIN edw.tlsc_sunyardmall_user user
ON obj.user_id =user.id and  user.dt='@@{yyyyMMdd}'
LEFT JOIN edw.tlsc_sunyardmall_goods goods ON substring_index(
     substring_index(
          obj.goods_info,
          'goods_id&quot;:',
          - 1
     ),
     ',',
     1
) = goods.id and goods.dt='@@{yyyyMMdd}'
WHERE
     1 = 1
AND obj.order_cat = 0
and obj.channel  = 'chaogui'
AND obj.tenant_code = 'tlcard'

;
--select * from lab_bigdata_dev.order_chaogui_basic where cst_id='1612686431';
--02筛选维度，月份	日期	分行名称	支行名称

drop table if exists lab_bigdata_dev.date_chaogui_basic;
CREATE TABLE lab_bigdata_dev.date_chaogui_basic AS
select t1.dt ,t1.month
--, t2.fh_id
                 , t2.fh_nm
				-- ,t2.zh_id
                 , t2.zh_nm
				 ,t1.last_day
				 ,t1.last_mon_end last_month
from (select dt,1 as flag ,t1.last_day ,substr(dt,1,6) month,last_mon_end
			--,substr(t1.last_mon_end,1,6) last_month,t1.cur_mon_bgn
		from edw.dim_bus_com_date_st t1
		where t1.dt>'20200701'
		 and t1.dt<='@@{yyyyMMdd}'
	)t1
left  join (select distinct 1 as flag
				 ,f.sum_org_id fh_id  --分行ID
                 ,f.sum_org_nm fh_nm  --分行名称
                 ,z.sum_org_id zh_id  --支行Id
                 ,z.sum_org_nm zh_nm  --支行名称
			FROM    edw.dim_hr_org_sum_org_rel_dd f
			left join edw.dim_hr_org_sum_org_rel_dd z
			on f.unt_org_id=z.unt_org_id and z.dt= '@@{yyyyMMdd}' and z.SUM_ORG_LVL = 'Z' AND z.ORG_RLTN_DIM_CD = 'WD3' AND  z.SUM_TYP_CD = '1'
			WHERE   f.dt = '@@{yyyyMMdd}'
			AND     f.SUM_ORG_LVL = 'F'
			AND     f.ORG_RLTN_DIM_CD = 'WD3'
			AND     f.SUM_TYP_CD = '1'  --分行
			and    z.sum_org_id is not null
			and    substr(f.sum_org_id ,1,4) in ('3101','3202','3301','3302','3303','3305','3306','3307','3308','3309','3310','3311','3312')  --分行不含支行
			--and    (z.sum_org_nm like '%支行%' or z.sum_org_nm like '%营业%' )
			)t2
on t1.flag=t2.flag
;

--03	商品兑换件数
--一个订单如果有多个商品，转为多行
--购买商品数量
drop table if EXISTS lab_bigdata_dev.mall_chaogui_buy_count ;
create table lab_bigdata_dev.mall_chaogui_buy_count  as
select t.order_id,sum(goods_count) 商品兑换件数
from (select order_id
		,keyvalue(replace(replace(replace(goods_info,'&quot;',''),'{',''),'[',''),',',':',&quot;goods_id&quot;) as goods_id
		,keyvalue(replace(replace(replace(goods_info,'&quot;',''),'{',''),'[',''),',',':',&quot;goods_name&quot;) as goods_name
		,keyvalue(replace(replace(replace(goods_info,'&quot;',''),'{',''),'[',''),',',':',&quot;goods_count&quot;) as goods_count
from
	(
	select TRANS_ARRAY(1,&quot;},&quot;,order_id,goods_info) as (order_id,goods_info)
	from lab_bigdata_dev.order_chaogui_basic
	)a
--where order_id='26750020210830095402911244'
)t
group by t.order_id
;

--04当月累计交易用户数	月累计订单笔数	月累计在线邮寄订单	月累计自提订单	月累计核销订单数	月累计交易金额
--下单用户数	商品兑换量	订单笔数	在线邮寄订单数	自提订单数	核销订单笔数	交易金额	配备超柜数	交易用户数	核销商品件数
drop table if EXISTS lab_bigdata_dev.mall_chaogui_order_stas;  --订单统计
create table lab_bigdata_dev.mall_chaogui_order_stas  as
select t1.dt
	 ,t1.month
	 ,t1.last_day
	 ,t1.last_month
	 , t1.fh_nm
		, t1.zh_nm
	 ,count(DISTINCT t2.user_id) AS 当月累计交易用户数
	 ,count(DISTINCT t2.order_id) as 月累计订单笔数
	 ,count(DISTINCT  case when   t2.mail_type='0' then t2.order_id end) as 月累计在线邮寄订单
	 ,count(DISTINCT  case when   t2.mail_type='1' then t2.order_id end) as 月累计自提订单
	 ,count(DISTINCT  case when   t2.mail_type='1' and verification_time is not null then t2.order_id end) as 月累计核销订单数
	 ,round(sum( t2.totalPrice + t2.integral_all * 0.01 ),2) as 月累计交易金额
	 ,count(DISTINCT case when t2.dt=t1.dt then t2.user_id end ) AS 下单用户数
	 ,sum(			 case when t2.dt=t1.dt then t3.商品兑换件数 end) as  商品兑换量
	 ,count(DISTINCT case when t2.dt=t1.dt then t2.order_id end) as 订单笔数
	 ,count(DISTINCT case when t2.dt=t1.dt and t2.mail_type='0' then t2.order_id end) as 在线邮寄订单数
	 ,count(DISTINCT case when t2.dt=t1.dt and t2.mail_type='1' then t2.order_id end) as 自提订单数
	 ,count(DISTINCT case when t2.dt=t1.dt and t2.mail_type='1' and verification_time is not null then t2.order_id end) as 核销订单笔数
	 ,round(sum(			 case when t2.dt=t1.dt then t2.totalPrice + t2.integral_all * 0.01 end),2) as 交易金额
	 ,count(DISTINCT case when t2.dt=t1.dt then t2.user_id end ) AS 交易用户数
	 ,sum(			 case when t2.dt=t1.dt and t2.mail_type='1' and verification_time is not null then t3.商品兑换件数 end) as  核销商品件数
from lab_bigdata_dev.date_chaogui_basic t1  --支行、日期筛选基础表

--订单表
left join  lab_bigdata_dev.order_chaogui_basic t2  --订单表
on t2.dt<=t1.dt and substr(t2.dt,1,6)=t1.month  --订单选取月累计
and t2.customer_manager_zbranch=t1.zh_nm  --支行名称相同
and t2.tenant_code ='tlcard'
and  t2.payTime IS NOT NULL

--商品兑换件数表
left join lab_bigdata_dev.mall_chaogui_buy_count t3 ----商品兑换件数表
on t2.order_id=t3.order_id

group by  t1.dt
	 ,t1.month,t1.last_day
	 ,t1.last_month, t1.fh_nm , t1.zh_nm
order by t1.dt,t1.zh_nm
;



--05累计注册用户总数	新增用户数	活跃用户数
drop table if EXISTS lab_bigdata_dev.mall_chaogui_cst_stas;  --订单统计
create table lab_bigdata_dev.mall_chaogui_cst_stas  as
select t1.dt
		,t1.month
		,t1.last_day
		,t1.last_month
		, t1.fh_nm
		, t1.zh_nm
		,count(distinct id) AS 累计注册用户总数
		,count(distinct case when t2.dt=t1.dt then id end ) AS 新增用户数
		,count(DISTINCT user_id) 活跃用户数
from lab_bigdata_dev.date_chaogui_basic t1  --支行、日期筛选基础表

--注册用户
left join (
			SELECT t1.id
					,t1.openid
					,t5.sum_org_nm 主管户分行名称
					,t6.sum_org_nm 主管户支行名称
					,to_char(to_date(substr(addTime,1,10),'yyyy-mm-dd'), 'yyyymmdd') AS dt

			FROM edw.tlsc_sunyardmall_user t1
			left join edw.dws_cst_mng_prm_inf_dd t4 on t1.openid=t4.cst_id and t4.dt='@@{yyyyMMdd}'
			left join edw.dim_hr_org_sum_org_rel_dd t5 on t4.prm_org_id=t5.UNT_ORG_ID and t5.dt='@@{yyyyMMdd}' and t5.SUM_ORG_LVL='F' AND t5.ORG_RLTN_DIM_CD='WD3' AND t5.SUM_TYP_CD='1'  --分行
			left join edw.dim_hr_org_sum_org_rel_dd t6 on t4.prm_org_id=t6.UNT_ORG_ID and t6.dt='@@{yyyyMMdd}' and t6.SUM_ORG_LVL='Z' AND t6.ORG_RLTN_DIM_CD='WD3' AND t6.SUM_TYP_CD='1' --支行

			WHERE  t1.dt='@@{yyyyMMdd}'
			and t1.userRole = 'BUYER' --用户角色:买家
			AND t1.deleteStatus <>'-1'  --用户状态代码:-1删除
			AND (   t1.lastLoginDate IS NOT NULL OR t1.loginDate IS NOT NULL )
			AND t1.tenant_code ='tlcard'
			AND  t1.channel in (  'chaogui' )
		)t2
on t2.dt<=t1.dt and t2.主管户支行名称=t1.zh_nm  --支行名称相同

--活跃用户数
left join (
			SELECT
				 to_char(to_date(substr(obj.addTime,1,10),'yyyy-mm-dd'),'yyyymmdd') as dt
				 ,obj.user_id
				 ,t2.openid
				 ,t5.sum_org_nm 主管户分行名称
				 ,t6.sum_org_nm 主管户支行名称
			FROM edw.tlsc_sunyardmall_user_dynamic obj

			--用户表
			inner join  edw.tlsc_sunyardmall_user t2  --用户表
			on obj.user_id=t2.id  and t2.dt='@@{yyyyMMdd}' and t2.deleteStatus = 0

			--管护支行
			left join edw.dws_cst_mng_prm_inf_dd t4 on t2.openid=t4.cst_id and t4.dt='@@{yyyyMMdd}'
			left join edw.dim_hr_org_sum_org_rel_dd t5 on t4.prm_org_id=t5.UNT_ORG_ID and t5.dt='@@{yyyyMMdd}' and t5.SUM_ORG_LVL='F' AND t5.ORG_RLTN_DIM_CD='WD3' AND t5.SUM_TYP_CD='1'  --分行
			left join edw.dim_hr_org_sum_org_rel_dd t6 on t4.prm_org_id=t6.UNT_ORG_ID and t6.dt='@@{yyyyMMdd}' and t6.SUM_ORG_LVL='Z' AND t6.ORG_RLTN_DIM_CD='WD3' AND t6.SUM_TYP_CD='1' --支行

			WHERE obj.dt <= '@@{yyyyMMdd}'
			and   obj.dt >= '20200701'
			AND obj.tenant_code = 'tlcard'
			and obj.channel in ('chaogui')

		)t3
on t3.dt=t1.dt and t3.主管户支行名称=t1.zh_nm  --支行名称相同
GROUP BY t1.dt
		,t1.month
		,t1.last_day
		,t1.last_month
		, t1.fh_nm
		, t1.zh_nm
;

--支行综合积分客户数
drop table if EXISTS lab_bigdata_dev.sirs_all;  --支行综合积分客户数
create table lab_bigdata_dev.sirs_all  as
select distinct t1.dt,t1.CUSTOMERSID

		,COALESCE(T1.POINTSBALANCE, 0)                                                                            AS PNT_BAL --积分余额
FROM    edw.SIRS_POINTSACCOUNTINFO T1
WHERE   T1.DT <= '@@{yyyyMMdd}'
and t1.dt >= '20200701'
and REPLACE(REPLACE(REPLACE(COALESCE(TRIM(T1.POINTSTYPENO), ''), CHR(13), ''), CHR(10), ''), '&quot;', '')='0001'  --综合积分
and T1.POINTSBALANCE>0
;

drop table if EXISTS lab_bigdata_dev.sirs_cts_cnt_zh_detail;  --支行综合积分客户数
create table lab_bigdata_dev.sirs_cts_cnt_zh_detail  as
SELECT  t1.dt
		,REPLACE(REPLACE(REPLACE(COALESCE(TRIM(t.HOSTCUSTNO), ''), CHR(13), ''), CHR(10), ''), '&quot;', '')          AS CST_ID --客户号
		,T1.PNT_BAL --积分余额
		,t6.sum_org_id 主管户支行机构号
	  ,t6.sum_org_nm 主管户支行名称
FROM    lab_bigdata_dev.sirs_all T1
LEFT JOIN    edw.SIRS_CUSTOMERS t
ON          t.CUSTOMERSID = T1.CUSTOMERSID
and      t.DT = '@@{yyyyMMdd}'
left join edw.dws_cst_mng_prm_inf_dd t4 on t.HOSTCUSTNO=t4.cst_id and t4.dt='@@{yyyyMMdd}'
left join edw.dim_hr_org_sum_org_rel_dd t6 on t4.prm_org_id=t6.UNT_ORG_ID and t6.dt='@@{yyyyMMdd}'
											 and t6.SUM_ORG_LVL='Z' AND t6.ORG_RLTN_DIM_CD='WD3' AND t6.SUM_TYP_CD='1' --支行
;


drop table if EXISTS lab_bigdata_dev.sirs_cts_cnt_zh;  --支行综合积分客户数
create table lab_bigdata_dev.sirs_cts_cnt_zh  as
select a.dt,a.主管户支行名称,count(distinct cst_id) 综合积分客户数
from lab_bigdata_dev.sirs_cts_cnt_zh_detail a
group by a.dt,a.主管户支行名称
;


--大数据部去钱塘支行调研6214808810000021193 总行差旅报销单(不关联动支单)

--06合并
--月份	日期	分行名称	支行名称
--当月累计交易用户数	上月同期当月累计交易用户数	昨日当月累计交易用户数	月累计订单笔数	上月同期月累计订单笔数	昨日月累计订单笔数
--月累计在线邮寄订单	上月同期月累计在线邮寄订单	昨日月累计在线邮寄订单	月累计自提订单	上月同期月累计自提订单	昨日月累计自提订单
--月累计核销订单数	上月同期月累计核销订单数	昨日月累计核销订单数	月累计交易金额	上月同期月累计交易金额	昨日月累计交易金额
--累计注册用户总数	新增用户数	昨天新增用户数	活跃用户数	昨日活跃用户数	下单用户数	昨日下单用户数	商品兑换量	昨日商品兑换量	订单笔数	昨日订单笔数
--在线邮寄订单数	昨日在线邮寄订单数	自提订单数	昨日自提订单数	核销订单笔数	昨日核销订单笔数	交易金额	昨天交易金额 交易用户数	核销商品件数
--drop table if EXISTS lab_bigdata_dev.mall_chaogui_2nd;  --订单统计
--create table lab_bigdata_dev.mall_chaogui_2nd  as
truncate table lab_bigdata_dev.mall_chaogui_2nd;
insert into lab_bigdata_dev.mall_chaogui_2nd
select t1.dt  日期
	,t1.month 月份
     ,t1.fh_nm 分行名称
     ,t1.zh_nm 支行名称
	,t1.last_day 昨日
	,t1.last_month 上月末
	,t2.当月累计交易用户数
	,t5.当月累计交易用户数 as 上月同期当月累计交易用户数
	,t6.当月累计交易用户数 as 昨日当月累计交易用户数
	,t2.月累计订单笔数
	,t5.月累计订单笔数 as 上月同期月累计订单笔数
	,t6.月累计订单笔数 as 昨日月累计订单笔数
	,t2.月累计在线邮寄订单
	,t5.月累计在线邮寄订单 as 上月同期月累计在线邮寄订单
	,t6.月累计在线邮寄订单 as 昨日月累计在线邮寄订单
	,t2.月累计自提订单
	,t5.月累计自提订单 as 上月同期月累计自提订单
	,t6.月累计自提订单 as 昨日月累计自提订单

	,t2.月累计核销订单数
	,t5.月累计核销订单数 as 上月同期月累计核销订单数
	,t6.月累计核销订单数 as 昨日月累计核销订单数
	,t2.月累计交易金额
	,t5.月累计交易金额 as 上月同期月累计交易金额
	,t6.月累计交易金额 as 昨日月累计交易金额
	,t3.累计注册用户总数
	,t3.新增用户数
	,t7.新增用户数 as 昨天新增用户数
	,t3.活跃用户数
	,t7.活跃用户数 as 昨日活跃用户数
	,t2.下单用户数
	,t6.下单用户数 as 昨日下单用户数
	,t2.商品兑换量
	,t6.商品兑换量 as 昨日商品兑换量
	,t2.订单笔数
	,t6.订单笔数 as 昨日订单笔数
	,t2.在线邮寄订单数
	,t6.在线邮寄订单数 as 昨日在线邮寄订单数
	,t2.自提订单数
	,t6.自提订单数 as 昨日自提订单数
	,t2.核销订单笔数
	,t6.核销订单笔数 as 昨日核销订单笔数
	,t2.交易金额
	,t6.交易金额 as 昨天交易金额
	,t4.配备超柜数
	,case when t4.配备超柜数>0 then 1 else 0 end as 是否配备超柜
	,t2.交易用户数
	,t2.核销商品件数
	,t8.综合积分客户数 支行综合积分客户数
	,case when t2.订单笔数>0  then 1 else 0 end as 今日支行是否有订单
	,case when t6.订单笔数>0  then 1 else 0 end as 昨日支行是否有订单
from lab_bigdata_dev.date_chaogui_basic t1  --支行、日期筛选基础表
left join lab_bigdata_dev.mall_chaogui_order_stas t2 on t2.dt=t1.dt and t2.zh_nm=t1.zh_nm  --交易订单
left join lab_bigdata_dev.mall_chaogui_cst_stas t3  on t3.dt=t1.dt and t3.zh_nm=t1.zh_nm  --注册客户数
left join (
			select 所属机构
					,count(distinct 设备终端号) 配备超柜数
			from lab_bigdata_dev.mall_chaogui_zh
			group by 所属机构
		  ) t4 on t4.所属机构=t1.zh_nm --超柜设备

left join lab_bigdata_dev.mall_chaogui_order_stas t5 on t5.dt=t1.last_month and t5.zh_nm=t1.zh_nm  --交易订单上月同期，其实是上月末
left join lab_bigdata_dev.mall_chaogui_order_stas t6 on t6.dt=t1.last_day and t6.zh_nm=t1.zh_nm  --交易订单昨日

left join lab_bigdata_dev.mall_chaogui_cst_stas t7  on t7.dt=t1.last_day and t7.zh_nm=t1.zh_nm  --注册客户数昨日
left join lab_bigdata_dev.sirs_cts_cnt_zh t8 on t8.dt=t1.dt and t8.主管户支行名称=t1.zh_nm
;
**跑批发布_积分第3张表分渠道0328.sql
SELECT * FROM lab_bigdata_dev.mall_channel_3rd WHERE 日期='20220331'
**跑批发布_立英指标3.sql
select distinct cst_id from LAB_BIGDATA_DEV.XQY_GUANXISHU_BATCH_1_ACCT_DETAIL_CST_SELF  --存款新开立

union

select distinct cst_id from LAB_BIGDATA_DEV.XQY_GUANXISHU_BATCH_1_LOAN_DETAIL_NON_CHENGDUI_CST_SELF --承兑新开立

union

select distinct cst_id from LAB_BIGDATA_DEV.XQY_GUANXISHU_BATCH_1_LOAN_DETAIL_CHENGDUI_CST_SELF --贷款新开立





select distinct cst_id from XQY_GEDAIKEHUZHUYINGQIYEKAIHU_B2_ACCT_DETAIL_CST_SELF    --存款新开立

union

select distinct cst_id from LAB_BIGDATA_DEV.LAB_BIGDATA_DEV.XQY_GEDAIKEHUZHUYINGQIYEKAIHU_B2_LOAN_DETAIL_NON_CHENGDUI_CST_SELF --承兑新开立

union

select distinct cst_id from LAB_BIGDATA_DEV.LAB_BIGDATA_DEV.XQY_GEDAIKEHUZHUYINGQIYEKAIHU_B2_LOAN_DETAIL_CHENGDUI_CST_SELF --贷款新开立
**追溯.sql


--------------------------------------------------------------------- 新增企业团办合同信息表

--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_new purge;

--

--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_new

--(

--    ent_cst_id              STRING  COMMENT '企业客户号'

--    ,ent_cst_nm             STRING  COMMENT '企业客户名'

--    ,prm_mgr_id             STRING  COMMENT '主管户客户经理工号'

--    ,prm_mgr_nm             STRING  COMMENT '主管户客户经理名称'

--    ,tem_org_id             STRING  COMMENT '团队机构号'

--    ,tem_org_nm             STRING  COMMENT '团队机构名称'

--    ,sbr_org_nm             STRING  COMMENT '支行名称'

--    ,brc_org_nm             STRING  COMMENT '分行名称'

--    ,cst_id                 STRING  COMMENT '个人客户号'

--    ,busi_ctr_id            STRING  COMMENT '合同号'

--    ,pd_cd                  STRING  COMMENT '产品代码'

--    ,pd_nm                  STRING  COMMENT '产品名称'

--    ,ctr_amt                DECIMAL COMMENT '合同金额'

--    ,ctr_bal                DECIMAL COMMENT '合同余额'

--    ,CCY_CD                 STRING  COMMENT '币种代码'

--    ,apnt_start_dt          STRING  COMMENT '约定开始日期'

--    ,apnt_mtu_dt            STRING  COMMENT '约定到期日期'

--    ,actl_start_use_crd_lmt DECIMAL COMMENT '启用额度'

--    --,hpn_dt                 STRING  COMMENT '发生日期'

--    ,end_dt                 STRING  COMMENT '终结日期'

--    ,count_dbil_id          DECIMAL COMMENT '累计发放借据数'

--    ,sum_amt                DECIMAL COMMENT '累计发放金额'

--    ,mon_acm_prcp_bal_acml  DECIMAL COMMENT '本月本金余额月日均'

--    ,intr_rat               DECIMAL COMMENT '合同利率'

--    ,duration               bigint COMMENT  '期限'

--    ,if_shoubi              bigint COMMENT  '是否首笔'

--    ,dbil_fenzi             DECIMAL COMMENT '用信金额加权利率分子'

--    ,dbil_fenmu             DECIMAL COMMENT '用信金额加权利率分母'

--)

--COMMENT

--'企业团办新增消费性贷款合同信息表'

--PARTITIONED BY

--(

--    DT STRING COMMENT '日期分区'

--);





INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_new PARTITION (DT = '20250331')

SELECT  coalesce(T9.cst_id, '-') ent_cst_id   --企业客户号

        ,coalesce(T8.job_unt_nm, '-') ent_cst_nm    --企业客户名

        ,coalesce(T10.prm_mgr_id, '-') prm_mgr_id   --主管户客户经理工号

        ,coalesce(T10.prm_mgr_nm, '-') prm_mgr_nm   --主管户客户经理名称

        ,coalesce(T11.tem_org_id, '-') tem_org_id   --团队机构号

        ,coalesce(T11.tem_org_nm, '-') tem_org_nm   --团队名称

        ,coalesce(T11.sbr_org_nm, '-') sbr_org_nm   --支行名称

        ,coalesce(T11.brc_org_nm, '-') brc_org_nm   --分行名称

        ,T1.cst_id        --客户号

        ,T1.CTR_SERNO     --合同号

        ,T1.PRD_NO        --产品代码

        ,T17.pd_nm        --产品名称

        ,T1.ctr_amt       --合同金额

        ,T1.ctr_bal       --合同余额

        ,T1.BSN_CCY_CD    --币种代码

        ,T1.CTR_BGN_DT    --约定开始日期

        ,T1.CTR_MTU_DT    --约定到期日期

		--,COALESCE(T7.BIND_LMT,T13.SEG_LMT,T1.ctr_amt,0) * T18.AVG_PRC / T18.QUO_UNT AS CYC_REALSUM -- 实际启用金额折人民币  新信贷改造删除T9.RESERVESUM

		,CASE

          WHEN T7.BUS_CTR_ID IS NOT NULL                                        THEN T7.BIND_LMT

           WHEN T1.RVLG_TYP_CD <> '1' THEN T1.CTR_AMT    --非循环贷款，取合同金额

           ELSE T1.STRT_USE_AMT     --启用金额

         END   as   ACTL_START_USE_CRD_LMT --启用额度

        ,T1.TMT_DT     --合同终结日期

        ,COALESCE(T14.COUNT_DBIL_ID, 0) COUNT_DBIL_ID   --累计发放借据数

        ,COALESCE(T14.SUM_AMT, 0) SUM_AMT    --累计发放金额

        ,COALESCE(T14.mon_acm_prcp_bal_acml, 0) mon_acm_prcp_bal_acml   --本月本金余额月日均

        ,T1.EXEC_INTR_RAT   --合同利率

        ,CASE

           WHEN T1.TMT_DT = '18991231' THEN DATEDIFF(TO_DATE(T1.CTR_MTU_DT, 'yyyyMMdd'), TO_DATE(T1.CTR_BGN_DT, 'yyyyMMdd'), 'dd') + 1

           ELSE DATEDIFF(TO_DATE(T1.TMT_DT, 'yyyyMMdd'), TO_DATE(T1.CTR_BGN_DT, 'yyyyMMdd'), 'dd') + 1

         END AS duration    --期限

        ,CASE

           WHEN T1.HPN_TYP_CD = '010' THEN 1

           ELSE 0

         END if_shoubi      --是否首笔

        ,T14.dbil_fenzi

        ,T14.dbil_fenmu

FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD T1    --合同基础信息

LEFT JOIN    edw.dim_cst_bas_inf_dd  T2        --客户基本信息

ON      T1.cst_id = T2.cst_id

AND     T2.dt = '20250331'

LEFT JOIN    EDW.DWD_BUS_LOAN_FNC_CRD_LMT_INF_DD T7 ----随贷通授信额度信息

ON      T7.BUS_CTR_ID = t1.CTR_SERNO

AND     T7.LOAN_USG_CD = '2' --随贷通消费性贷款

AND     T7.DT = '20250331'

LEFT JOIN    edw.dim_cst_idv_bas_inf_dd   T8   --个人客户基本信息

ON      T1.cst_id = T8.cst_id

and     T8.dt = '20250331'

LEFT JOIN    edw.dim_cst_entp_bas_inf_dd T9    --企业客户基本信息

ON      T8.job_unt_nm = T9.cst_nm

AND     T9.dt = '20250331'

LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd T10   --客户主管户信息

ON      T9.cst_id = T10.cst_id

AND     T10.dt = '20250331'

LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd T11   --机构树

ON      T10.prm_org_id = T11.org_id

AND     T11.dt = '20250331'

LEFT JOIN    (

                 SELECT  BUS_CTR_ID

                         ,COUNT(DBIL_ID) COUNT_DBIL_ID

                         ,SUM(AMT) SUM_AMT

                         ,SUM(mon_acm_prcp_bal_acml) / '@@{dd}' AS mon_acm_prcp_bal_acml

                         ,SUM(AMT * exe_intr_rat * CASE

                                                     WHEN end_dt = '18991231' THEN DATEDIFF(TO_DATE(apnt_mtu_day, 'yyyyMMdd'), TO_DATE(dtrb_dt, 'yyyyMMdd'), 'dd') + 1

                                                     ELSE DATEDIFF(TO_DATE(end_dt, 'yyyyMMdd'), TO_DATE(dtrb_dt, 'yyyyMMdd'), 'dd') + 1

                                                   END)         AS dbil_fenzi

                         ,SUM(AMT * CASE

                                      WHEN end_dt = '18991231' THEN DATEDIFF(TO_DATE(apnt_mtu_day, 'yyyyMMdd'), TO_DATE(dtrb_dt, 'yyyyMMdd'), 'dd') + 1

                                      ELSE DATEDIFF(TO_DATE(end_dt, 'yyyyMMdd'), TO_DATE(dtrb_dt, 'yyyyMMdd'), 'dd') + 1

                                    END)                        AS dbil_fenmu

                 FROM    EDW.DWS_BUS_LOAN_DBIL_INF_DD --贷款借据信息汇总     还在使用中

                 WHERE   DT = '20250331'

                 GROUP BY BUS_CTR_ID

             ) T14

ON      T1.CTR_SERNO = T14.BUS_CTR_ID

LEFT JOIN    (

                 SELECT  A1.CTR_SERNO

                 FROM    EDW.DIM_BUS_LOAN_CTR_BSE_INF_DD A1 -- 合同基础信息

                 INNER JOIN    EDW.DWD_BUS_LOAN_PRPS_REL_DD A2 --方案关联

                 ON      A1.CTR_SERNO = A2.REL_ID

                 AND     A2.DT = '20250331'

                 INNER JOIN    EDW.DWD_BUS_LOAN_ZXT_LOAN_PRPS_APL_DD A3 --助兴通贷款方案申请

                 ON      A2.PRPS_ID = A3.PRPS_ID -- 找到重组的方案号

                 AND     A3.DT = '20250331'

                 WHERE   A1.DT = '20250331'

                 GROUP BY A1.CTR_SERNO

             ) T16 --助兴通合同

ON      T1.CTR_SERNO = T16.CTR_SERNO

LEFT JOIN    edw.DIM_BUS_LOAN_PRD_FRML_DD T17 --信贷产品信息

ON      T1.PRD_NO = T17.PRD_NO

AND     T17.dt = '20250331'

WHERE   T1.dt = '20250331'

AND     ( ( T1.PRD_NO like '200101%'   --个人消费性贷款

and     T1.PRD_NO <> '2001010101003'   --剔除 随贷通（消费）

AND     T1.TMT_DT = '18991231'

AND     T1.CTR_MTU_DT > '20250331' )

    OR ( T1.PRD_NO = '2001010101003'    --随贷通（消费）

AND     T7.lmt_sts_cd IN ( '0' , '3' , '4' ) ) ) --个人消费性贷款未到期未终结；随贷通-消费 额度状态已激活

AND     T2.LOAN_CST_TYP_CD in ( '04','08','09')  --工薪族

AND     T1.CTR_BGN_DT >= '20230701' --活动期间

AND    t1.BSN_MARK_CD NOT IN ( '01' ) --剔除员工贷款      --新码值

AND     ( T1.BSN_MARK_CD <> '04'

AND     T16.CTR_SERNO IS NULL )  --剔除重组贷款

AND     LENGTH(t8.job_unt_nm) > 3

AND     T1.CTR_STS_CD not in ( '1','3','5')  --剔除1：未生效，3	终止，5	作废

--AND     t8.OWN_EMP_ID = ''  --剔除本行员工号

;





--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_all_new purge;

--

--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_all_new

--(

--    ent_cst_id              STRING  COMMENT '企业客户号'

--    ,ent_cst_nm             STRING  COMMENT '企业客户名'

--    ,prm_mgr_id             STRING  COMMENT '主管户客户经理工号'

--    ,prm_mgr_nm             STRING  COMMENT '主管户客户经理名称'

--    ,tem_org_id             STRING  COMMENT '团队机构号'

--    ,tem_org_nm             STRING  COMMENT '团队机构名称'

--    ,sbr_org_nm             STRING  COMMENT '支行名称'

--    ,brc_org_nm             STRING  COMMENT '分行名称'

--    ,cst_id                 STRING  COMMENT '个人客户号'

--    ,busi_ctr_id            STRING  COMMENT '合同号'

--    ,pd_cd                  STRING  COMMENT '产品代码'

--    ,pd_nm                  STRING  COMMENT '产品名称'

--    ,ctr_amt                DECIMAL COMMENT '合同金额'

--    ,ctr_bal                DECIMAL COMMENT '合同余额'

--    ,CCY_CD                 STRING  COMMENT '币种代码'

--    ,apnt_start_dt          STRING  COMMENT '约定开始日期'

--    ,apnt_mtu_dt            STRING  COMMENT '约定到期日期'

--    ,actl_start_use_crd_lmt DECIMAL COMMENT '启用额度'

--    --,hpn_dt                 STRING  COMMENT '发生日期'

--    ,end_dt                 STRING  COMMENT '终结日期'

--    ,count_dbil_id          DECIMAL COMMENT '累计发放借据数'

--    ,sum_amt                DECIMAL COMMENT '累计发放金额'

--    ,mon_acm_prcp_bal_acml  DECIMAL COMMENT '本月本金余额月日均'

--    ,efe_cst_ind            STRING  COMMENT '有效户标识'

--    ,efe_crd_cst_ind        STRING  COMMENT '有效信用卡标识'

--    ,pd_hld_qty             DECIMAL COMMENT '产品持有数'

--    ,chm_bal                DECIMAL COMMENT '理财余额'

--    ,dep_bal                DECIMAL COMMENT '存款余额'

--    ,cprh_contri_cur_year   DECIMAL COMMENT '当年客户价值'

--    ,cst_val_grd            STRING  COMMENT '客户价值等级'

--    ,if_ctr_efe             STRING  COMMENT '是否消费性贷款在贷合同'

--    ,frz_sts_ind            STRING  COMMENT '是否授信状态为空'

--    ,forml_cst_ind          STRING  COMMENT '正式客户标识'

--)

--COMMENT

--'企业团办综合产效底表'

--PARTITIONED BY

--(

--    DT STRING COMMENT '日期分区'

--);



INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_all_new PARTITION (DT = '20250331')

SELECT  T0.ent_cst_id --企业客户号

        ,T0.ent_cst_nm --企业客户名称

        ,T0.prm_mgr_id --主管户客户经理工号

        ,T0.prm_mgr_nm --主管户客户经理名称

        ,T0.tem_org_id --团队机构号

        ,T0.tem_org_nm --团队名称

        ,T0.sbr_org_nm --支行名称

        ,T0.brc_org_nm --分行名称

        ,T8.cst_id --客户号

        ,T1.CTR_SERNO --合同号

        ,T1.PRD_NO --产品代码

        ,T20.PD_NM --产品名称

        ,T1.ctr_amt --合同金额

        ,T1.ctr_bal --合同余额

        ,T1.BSN_CCY_CD --币种代码

        ,T1.CTR_BGN_DT --约定开始日期

        ,T1.CTR_MTU_DT --约定到期日期

	  --  ,COALESCE(T7.BIND_LMT,T13.SEG_LMT,T1.ctr_amt,0) * T23.AVG_PRC / T23.QUO_UNT AS CYC_REALSUM -- 实际启用金额折人民币  新信贷改造删除T9.RESERVESUM

	    ,CASE

          WHEN T7.BUS_CTR_ID IS NOT NULL                                        THEN T7.BIND_LMT

           WHEN T1.RVLG_TYP_CD <> '1' THEN T1.CTR_AMT    --非循环贷款，取合同金额

           ELSE T1.STRT_USE_AMT     --启用金额

         END   as   ACTL_START_USE_CRD_LMT --启用额度

        ,T1.TMT_DT --合同终结日期

        ,COALESCE(T14.COUNT_DBIL_ID, 0) COUNT_DBIL_ID --累计发放借据数

        ,COALESCE(T14.SUM_AMT, 0) SUM_AMT --累计发放金额

        ,COALESCE(T14.mon_acm_prcp_bal_acml, 0) mon_acm_prcp_bal_acml --本月本金余额月日均

        ,decode(T15.efe_cst_ind,'1',1,'',0) efe_cst_ind --有效户标识

        ,CASE

           WHEN T21.cst_id IS NOT NULL THEN '1'

           ELSE '0'

         END efe_crd_cst_ind --有效信用卡户

        ,decode(T15.efe_dep_cst_ind, '1', 1, '', 0) + decode(T15.efe_chm_cst_ind, '1', 1, '', 0) + decode(T15.efe_insu_cst_ind, '1', 1, '', 0) + decode(T15.efe_fnd_cst_ind, '1', 1, '', 0) + decode(T15.efe_nob_met_cst_ind, '1', 1, '', 0) AS pd_hld_qty

        ,T16.chm_bal --理财余额

        ,T17.dep_bal --存款余额

        ,T18.cprh_contri_cur_year --当年客户价值

        ,T18.cst_val_grd --客户价值等级

        ,CASE

           WHEN ( T1.PRD_NO  like '200101%' and   T1.PRD_NO <> '2001010101003'  AND T1.TMT_DT = '18991231' AND T1.CTR_MTU_DT > '20250331' AND T1.CTR_STS_CD not in ( '1','3','5') ) OR ( T1.PRD_NO = '2001010101003'  AND T7.lmt_sts_cd IN ( '0' , '3' , '4' ) AND T1.CTR_STS_CD not in ( '1','3','5') ) THEN '1'

           ELSE '0'

         END if_ctr_efe --是否消费性贷款在贷合同

        ,CASE

           WHEN T1.CTR_STS_CD IS NOT NULL AND T1.CTR_STS_CD  in ( '1','3','5') THEN '1'

           WHEN T1.CTR_STS_CD IS NOT NULL AND T1.CTR_STS_CD not in ( '1','3','5') THEN '0'

         END frz_sts_ind  --授信状态是否为空

        ,decode(T19.forml_cst_ind, '1', 1, '', 0) forml_cst_ind --正式客户标识

FROM    (

            SELECT  DISTINCT ent_cst_id

                             ,ent_cst_nm

                             ,prm_mgr_id

                             ,prm_mgr_nm

                             ,tem_org_id

                             ,tem_org_nm

                             ,sbr_org_nm

                             ,brc_org_nm

            FROM    LAB_BIGDATA_DEV.phjrb_ys_qytb_bus_loan_ctr_inf_new --企业团办合同信息表

            WHERE   dt = '20250331'

        ) T0

LEFT JOIN   edw.dim_cst_idv_bas_inf_dd   T8   --个人客户基本信息

ON      t0.ent_cst_nm = t8.job_unt_nm

and     T8.dt = '20250331'

LEFT JOIN    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD T1 --合同基础信息

ON      T8.cst_id = T1.cst_id

AND     T1.dt = '20250331'

LEFT JOIN    edw.dim_cst_bas_inf_dd T2 --客户基本信息

ON      T8.cst_id = T2.cst_id

AND     T2.dt = '20250331'

LEFT JOIN    EDW.DWD_BUS_LOAN_FNC_CRD_LMT_INF_DD T7 ----随贷通授信额度信息

ON      T7.BUS_CTR_ID = t1.CTR_SERNO

AND     T7.LOAN_USG_CD = '2' --随贷通消费性贷款

AND     T7.DT = '20250331'

LEFT JOIN    (

                 SELECT  BUS_CTR_ID

                         ,COUNT(DBIL_ID) COUNT_DBIL_ID

                         ,SUM(AMT) SUM_AMT

                         ,SUM(mon_acm_prcp_bal_acml) / '@@{dd}' AS mon_acm_prcp_bal_acml

                 FROM    EDW.dws_bus_loan_dbil_inf_dd --贷款借据信息汇总

                 WHERE   DT = '20250331'

                 GROUP BY BUS_CTR_ID

             ) T14

ON      T1.CTR_SERNO = T14.BUS_CTR_ID

LEFT JOIN    adm_pub.adm_csm_cbas_ind_inf_dd T15 --客户集市-基础信息-客户基础标识信息

ON      T1.cst_id = T15.cst_id

AND     T15.dt = '20250331'

LEFT JOIN    adm_pub.adm_csm_cbus_chm_inf_dd T16 --客户集市-业务信息-客户理财业务信息表

ON      T1.cst_id = T16.cst_id

AND     T16.dt = '20250331'

LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd T17 --客户集市-业务信息-客户存款业务信息表

ON      T1.cst_id = T17.cst_id

AND     T17.dt = '20250331'

LEFT JOIN    adm_pub.adm_csm_cbus_cst_val_der_ind_inf_dd T18 --客户集市-业务信息-客户价值信息-客户价值衍生指标信息

ON      T1.cst_id = T18.cst_id

AND     T18.dt = '@@{yyyyMMdd-1d}'

LEFT JOIN    adm_pub.adm_csm_cbas_mng_inf_dd T19 --客户集市-客户基础-客户管户信息

ON      T1.cst_id = T19.cst_id

AND     T19.dt = '20250331'

LEFT JOIN    edw.DIM_BUS_LOAN_PRD_FRML_DD T20 --信贷产品信息

ON      T1.PRD_NO = T20.PRD_NO

AND     T20.dt = '20250331'

LEFT JOIN    (

                 SELECT  DISTINCT cst_id

                 FROM    edw.dim_bus_crd_cr_crd_inf_dd --信用卡卡片信息

                 WHERE   dt = '20250331'

                 AND     card_sts_cd = '' --卡片状态正常

                 AND     TO_DATE(CONCAT('20', MTU_DAY, '01'), 'yyyyMMdd') >= TO_DATE(CONCAT('@@{yyyyMM}', '01'), 'yyyyMMdd')

             ) T21

ON      T1.cst_id = T21.cst_id

LEFT JOIN    (

                 SELECT  A1.CTR_SERNO

                 FROM    EDW.DIM_BUS_LOAN_CTR_BSE_INF_DD A1 -- 合同基础信息

                 INNER JOIN    EDW.DWD_BUS_LOAN_PRPS_REL_DD A2 --方案关联  还在使用中

                 ON      A1.CTR_SERNO = A2.REL_ID

                 AND     A2.DT = '20250331'

                 INNER JOIN    EDW.DWD_BUS_LOAN_ZXT_LOAN_PRPS_APL_DD A3 --助兴通贷款方案申请   还在使用中

                 ON      A2.PRPS_ID = A3.PRPS_ID -- 找到重组的方案号

                 AND     A3.DT = '20250331'

                 WHERE   A1.DT = '20250331'

                 GROUP BY A1.CTR_SERNO

             ) T22 --助兴通合同

ON      T1.CTR_SERNO = T22.CTR_SERNO

WHERE   T2.LOAN_CST_TYP_CD in ( '04','08','09') --工薪族

--剔除员工贷款、重组贷款或者包含没有合同

AND     ( (  t1.BSN_MARK_CD NOT IN ( '01' )

AND     ( T1.BSN_MARK_CD <> '04'

AND     T22.CTR_SERNO IS NULL ) )   --剔除重组贷款

    OR T1.cst_id IS NULL );





----- SHEET2 企业团办-客户清单

--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_cst_info_crd_tmp_new purge;

--

--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_cst_info_crd_tmp_new

--(

--    ent_cst_id               STRING  COMMENT '企业客户号'

--    ,ent_cst_nm              STRING  COMMENT '企业客户名'

--    ,prm_mgr_id_ent          STRING  COMMENT '企业主管户客户经理工号'

--    ,prm_mgr_nm_ent          STRING  COMMENT '企业主管户客户经理名称'

--    ,tem_org_id_ent          STRING  COMMENT '企业主管团队机构号'

--    ,tem_org_nm_ent          STRING  COMMENT '企业主管团队机构名称'

--    ,sbr_org_nm_ent          STRING  COMMENT '企业主管支行名称'

--    ,brc_org_nm_ent          STRING  COMMENT '企业主管分行名称'

--    ,cst_id                  STRING  COMMENT '个人客户号'

--    ,cst_nm                  STRING  COMMENT '个人客户名'

--    ,prm_mgr_id              STRING  COMMENT '主管户客户经理工号'

--    ,prm_mgr_nm              STRING  COMMENT '主管户客户经理名称'

--    ,tem_org_id              STRING  COMMENT '团队机构号'

--    ,tem_org_nm              STRING  COMMENT '团队机构名称'

--    ,sbr_org_nm              STRING  COMMENT '支行名称'

--    ,brc_org_nm              STRING  COMMENT '分行名称'

--    ,efe_cst_ind             STRING  COMMENT '有效户标识'

--    ,efe_crd_cst_ind         STRING  COMMENT '有效信用卡户'

--    ,efe_dep_cst_ind         STRING  COMMENT '有效存款户'

--    ,efe_chm_cst_ind         STRING  COMMENT '有效理财户'

--    ,efe_insu_cst_ind        STRING  COMMENT '有效保险户'

--    ,efe_fnd_cst_ind         STRING  COMMENT '有效基金户'

--    ,efe_nob_met_cst_ind     STRING  COMMENT '有效贵金属户'

--    ,chm_bal                 DECIMAL COMMENT '理财余额'

--	  ,chm_mon_avg             DECIMAL COMMENT '理财月日均'

--    ,dep_bal                 DECIMAL COMMENT '存款余额'

--	  ,dep_bal_mon_avg         DECIMAL COMMENT '存款余额月日均'

--	  ,insu_frs_bus_amt        DECIMAL COMMENT '保险首单保费金额'

--	  ,avg_ncr_fnd_amt_cur_mon DECIMAL COMMENT '非货币公募基金金额当月日均保有量'

--	  ,nob_met_bal_1y          DECIMAL COMMENT '近一年贵金属余额'

--    ,aum_bal                 DECIMAL COMMENT 'aum余额' --20231123

--    ,chm_bal0630             DECIMAL COMMENT '理财余额230630'

--    ,dep_bal0630             DECIMAL COMMENT '存款余额230630'

--    ,aum_bal0630             DECIMAL COMMENT 'aum余额230630' --20231123

--    ,cprh_contri_cur_year    DECIMAL COMMENT '当年客户价值'

--    ,cst_val_grd             STRING  COMMENT '客户价值等级'

--    ,forml_cst_ind           STRING  COMMENT '正式客户标识'

--    ,brc_org_id               STRING  COMMENT '分行层级机构编号'

--    ,sbr_org_id               STRING  COMMENT '支行层级机构编号'

--)

--COMMENT

--'企业团办新增信用卡客户信息表'

--PARTITIONED BY

--(

--    DT STRING COMMENT '日期分区'

--);









-----新增表字段

-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_cst_info_crd_tmp_new add  columns

--(grp_org_id               STRING  COMMENT '集团机构编号'

--,cpy_org_id               STRING  COMMENT '法人机构编号'

--);





-----新增表字段

-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_cst_info_crd_tmp_new add  columns

--(card_cnt               BIGINT  COMMENT '新增信用卡户数'

--);





INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_cst_info_crd_tmp_new  PARTITION (DT = '20250331')



SELECT  DISTINCT coalesce(T9.cst_id,'-') ent_cst_id --企业客户号

                 ,coalesce(T8.job_unt_nm,'-') ent_cst_nm --企业客户名称

                 ,coalesce(T10.prm_mgr_id,'-') prm_mgr_id_ent --企业主管户客户经理工号

                 ,coalesce(T10.prm_mgr_nm,'-') prm_mgr_nm_ent --企业主管户客户经理名称

                 ,coalesce(T11.tem_org_id,'-') tem_org_id_ent --企业团队机构号

                 ,coalesce(T11.tem_org_nm,'-') tem_org_nm_ent --企业团队名称

                 ,coalesce(T11.sbr_org_nm,'-') sbr_org_nm_ent --企业支行名称

                 ,coalesce(T11.brc_org_nm,'-') brc_org_nm_ent --企业分行名称

                 ,coalesce(T1.cst_id,'-') cst_id --客户号

                 ,coalesce(T1.cst_nm,'-') cst_nm --客户名称

                 ,coalesce(T20.prm_mgr_id,'-') prm_mgr_id --个人主管户客户经理工号

                 ,coalesce(T20.prm_mgr_nm,'-') prm_mgr_nm --个人主管户客户经理名称

                 ,coalesce(T21.tem_org_id,'-') tem_org_id --个人团队机构号

                 ,coalesce(T21.tem_org_nm,'-') tem_org_nm --个人团队名称

                 ,coalesce(T21.sbr_org_nm,'-') sbr_org_nm --个人支行名称

                 ,coalesce(T21.brc_org_nm,'-') brc_org_nm --个人分行名称

                 ,decode(T15.efe_cst_ind,'1',1,'',0) efe_cst_ind --有效户标识

                 ,'1' efe_crd_cst_ind --有效信用卡户

                 ,decode(T15.efe_dep_cst_ind, '1', 1, '', 0) efe_dep_cst_ind --有效存款户

                 ,decode(T15.efe_chm_cst_ind, '1', 1, '', 0) efe_chm_cst_ind --有效理财户

                 ,decode(T15.efe_insu_cst_ind, '1', 1, '', 0) efe_insu_cst_ind --有效保险户

                 ,decode(T15.efe_fnd_cst_ind, '1', 1, '', 0) efe_fnd_cst_ind --有效基金户

                 ,decode(T15.efe_nob_met_cst_ind, '1', 1, '', 0) efe_nob_met_cst_ind --有效贵金属户

                 ,T16.chm_bal           --理财余额

				 ,T16.chm_mon_avg       --理财月日均                                     --新增字段

                 ,T17.dep_bal           --存款余额

				 ,t17.dep_bal_mon_avg   --存款余额月日均                                 --新增字段

				 ,t28.insu_frs_bus_amt  --保险首单保费金额                               --新增字段

				 ,t29.avg_ncr_fnd_amt_cur_mon   --非货币公募基金金额当月日均保有量       --新增字段

                 ,t30.nob_met_bal_1y            --近一年贵金属余额                       --新增字段

                 ,T27.aum_bal --aum余额

                 --,T24.chm_bal chm_bal0630 --理财余额230630

                 --,T25.dep_bal dep_bal0630 --存款余额230630

                 --,T26.aum_bal aum_bal0630 --aum余额230630

				 ,T24.chm_bal_before    --消费贷合同之前理财余额    修改字段

                 ,T24.dep_bal_before    --消费贷合同之前存款余额    修改字段

                 ,T24.aum_bal_before    --消费贷合同之前aum余额     修改字段

                 ,T18.cprh_contri_cur_year --当年客户价值 年累计FTP

                 ,T18.cst_val_grd --客户价值等级

                 ,T19.forml_cst_ind --正式客户标识

				 ,coalesce(T21.brc_org_id,'-') brc_org_id   --个人分行编号

                 ,coalesce(T21.sbr_org_id,'-') sbr_org_id   --个人支行编号

				 ,coalesce(T21.grp_org_id,'-') grp_org_id

				 ,coalesce(T21.cpy_org_id,'-') cpy_org_id

                 ,t24.card_cnt          --新增信用卡户数            修改字段

FROM    (

            SELECT  DISTINCT cst_id

                             ,cst_nm

            FROM    edw.dim_bus_crd_cr_crd_inf_dd --信用卡卡片信息

            WHERE   dt = '20250331'

            AND     card_sts_cd = '' --卡片状态正常

            AND     TO_DATE(CONCAT('20', MTU_DAY, '01'), 'yyyyMMdd') >= TO_DATE(CONCAT('@@{yyyyMM}', '01'), 'yyyyMMdd')

            AND     isu_dt >= '20230701'

        ) T1

LEFT JOIN    edw.dim_cst_bas_inf_dd T2 --客户基本信息

ON      T1.cst_id = T2.cst_id

AND     T2.dt = '20250331'

LEFT JOIN    edw.dim_cst_idv_bas_inf_dd   T8   --个人客户基本信息

ON      T1.cst_id = T8.cst_id

and     T8.dt = '20250331'

LEFT JOIN    edw.dim_cst_entp_bas_inf_dd T9 --企业客户基本信息

ON      T8.job_unt_nm = T9.cst_nm

AND     T9.dt = '20250331'

--企业管户

LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd T10 --客户主管户信息

ON      T9.cst_id = T10.cst_id

AND     T10.dt = '20250331'

LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd T11 --机构树

ON      T10.prm_org_id = T11.org_id

AND     T11.dt = '20250331'

--个人管户

LEFT JOIN    adm_pub.adm_csm_cbas_ind_inf_dd T15 --客户集市-基础信息-客户基础标识信息

ON      T1.cst_id = T15.cst_id

AND     T15.dt = '20250331'

LEFT JOIN    adm_pub.adm_csm_cbus_chm_inf_dd T16 --客户集市-业务信息-客户理财业务信息表

ON      T1.cst_id = T16.cst_id

AND     T16.dt = '20250331'

LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd T17 --客户集市-业务信息-客户存款业务信息表

ON      T1.cst_id = T17.cst_id

AND     T17.dt = '20250331'

LEFT JOIN    adm_pub.adm_csm_cbus_cst_val_der_ind_inf_dd T18 --客户集市-业务信息-客户价值信息-客户价值衍生指标信息

ON      T1.cst_id = T18.cst_id

AND     T18.dt = '@@{yyyyMMdd-1d}'

LEFT JOIN    adm_pub.adm_csm_cbas_mng_inf_dd T19 --客户集市-客户基础-客户管户信息

ON      T1.cst_id = T19.cst_id

AND     T19.dt = '20250331'

LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd T20 --客户主管户信息

ON      T8.cst_id = T20.cst_id

AND     T20.dt = '20250331'

LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd T21 --机构树

ON      T20.prm_org_id = T21.org_id

AND     T21.dt = '20250331'

--LEFT JOIN    adm_pub.adm_csm_cbus_chm_inf_dd T24 --客户集市-业务信息-客户理财业务信息表

--ON      T1.cst_id = T24.cst_id

--AND     T24.dt = '20230630'

--LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd T25 --客户集市-业务信息-客户存款业务信息表

--ON      T1.cst_id = T25.cst_id

--AND     T25.dt = '20230630'

--LEFT JOIN    adm_pub.adm_csm_cbus_cst_fin_ast_inf_dd T26 --客户集市-业务信息-客户金融资产信息表

--ON      T1.cst_id = T26.cst_id

--AND     T26.dt = '20230630'

--LEFT JOIN    adm_pub.adm_csm_cbus_chm_inf_dd T24 --客户集市-业务信息-客户理财业务信息表

--ON      T1.cst_id = T24.cst_id

--AND     T24.dt = '20230630'

--LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd T25 --客户集市-业务信息-客户存款业务信息表

--ON      T1.cst_id = T25.cst_id

--AND     T25.dt = '20230630'

--LEFT JOIN    adm_pub.adm_csm_cbus_cst_fin_ast_inf_dd T26 --客户集市-业务信息-客户金融资产信息表

--ON      T1.cst_id = T26.cst_id

--AND     T26.dt = '20230630'

LEFT JOIN    (select   t1.cst_id

,t2.chm_bal    chm_bal_before    --消费贷合同之前理财余额

,T3.dep_bal    dep_bal_before    --消费贷合同之前存款余额

,T4.aum_bal    aum_bal_before    --消费贷合同之前aum余额

,count(distinct t5.cr_crd_card_nbr)    card_cnt  --消费贷合同之后开卡的客户数

from  (select cst_id

,min(APNT_START_DT)    min_APNT_START_DT

from  lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_new

where dt = '20250331'

group by cst_id )     t1

left  join   adm_pub.adm_csm_cbus_chm_inf_dd  T2    --客户集市-业务信息-客户理财业务信息表

ON      T1.cst_id = T2.cst_id

and   t2.dt >= '20230630'

and   t2.dt =  to_char(dateadd(to_date(t1.min_APNT_START_DT,'yyyymmdd'),-1,'dd'),'yyyymmdd')

LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd  T3 --客户集市-业务信息-客户存款业务信息表

ON      T1.cst_id = T3.cst_id

AND     T3.dt >= '20230630'

and     t3.dt =  to_char(dateadd(to_date(t1.min_APNT_START_DT,'yyyymmdd'),-1,'dd'),'yyyymmdd')

LEFT JOIN    adm_pub.adm_csm_cbus_cst_fin_ast_inf_dd T4 --客户集市-业务信息-客户金融资产信息表

ON      T1.cst_id = T4.cst_id

AND     T4.dt >= '20230630'

and     t4.dt =  to_char(dateadd(to_date(t1.min_APNT_START_DT,'yyyymmdd'),-1,'dd'),'yyyymmdd')

left  join    edw.dim_bus_crd_cr_crd_inf_dd    t5   --信用卡卡片信息

on      T1.cst_id = T5.cst_id

and     t5.dt = '20250331'

AND     t5.card_sts_cd = '' --卡片状态正常

AND     TO_DATE(CONCAT('20', t5.MTU_DAY, '01'), 'yyyyMMdd') >= TO_DATE(CONCAT('@@{yyyyMM}', '01'), 'yyyyMMdd')

AND     t5.isu_dt >= to_char(dateadd(to_date(t1.min_APNT_START_DT,'yyyymmdd'),-1,'dd'),'yyyymmdd')

group by  t1.cst_id

,t2.chm_bal

,T3.dep_bal

,T4.aum_bal  )   t24

on   T1.cst_id = T24.cst_id

LEFT JOIN    adm_pub.adm_csm_cbus_cst_fin_ast_inf_dd T27 --客户集市-业务信息-客户金融资产信息表

ON      T1.cst_id = T27.cst_id

AND     T27.dt = '20250331'

left join adm_pub.adm_csm_cbus_wlth_insu_bus_inf_dd   t28 --客户集市-业务信息-财富-保险-业务信息

on      t1.cst_id=t28.cst_id

and     t28.dt='20250331'

left join adm_pub.adm_csm_cbus_fnd_bal_inf_dd  t29    --客户集市-业务信息-财富-基金-业务信息

on       t1.cst_id=t29.cst_id

and      t29.dt='20250331'

left join adm_pub.adm_csm_cbus_wlth_nob_met_bus_inf_dd   t30  --客户集市-业务信息-财富-贵金属-业务信息

on       t1.cst_id=t30.cst_id

and      t30.dt='20250331'

WHERE   LENGTH(t8.job_unt_nm) > 3

AND     T1.cst_id <> ''

--AND     T8.own_emp_id = ''

--AND     T2.loan_cst_typ_cd = '04'

AND     T2.loan_cst_typ_cd in ( '04','08','09');





----- 企业团办新增消费贷款客户信息表



--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_cst_info_tmp_new purge;

--

--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_cst_info_tmp_new

--(

--    ent_cst_id               STRING  COMMENT '企业客户号'

--    ,ent_cst_nm              STRING  COMMENT '企业客户名'

--    ,prm_mgr_id_ent          STRING  COMMENT '企业主管户客户经理工号'

--    ,prm_mgr_nm_ent          STRING  COMMENT '企业主管户客户经理名称'

--    ,tem_org_id_ent          STRING  COMMENT '企业主管团队机构号'

--    ,tem_org_nm_ent          STRING  COMMENT '企业主管团队机构名称'

--    ,sbr_org_nm_ent          STRING  COMMENT '企业主管支行名称'

--    ,brc_org_nm_ent          STRING  COMMENT '企业主管分行名称'

--    ,cst_id                  STRING  COMMENT '个人客户号'

--    ,cst_nm                  STRING  COMMENT '个人客户名'

--    ,prm_mgr_id              STRING  COMMENT '主管户客户经理工号'

--    ,prm_mgr_nm              STRING  COMMENT '主管户客户经理名称'

--    ,tem_org_id              STRING  COMMENT '团队机构号'

--    ,tem_org_nm              STRING  COMMENT '团队机构名称'

--    ,sbr_org_nm              STRING  COMMENT '支行名称'

--    ,brc_org_nm              STRING  COMMENT '分行名称'

--    ,efe_cst_ind             STRING  COMMENT '有效户标识'

--    ,efe_crd_cst_ind         STRING  COMMENT '有效信用卡户'

--    ,efe_dep_cst_ind         STRING  COMMENT '有效存款户'

--    ,efe_chm_cst_ind         STRING  COMMENT '有效理财户'

--    ,efe_insu_cst_ind        STRING  COMMENT '有效保险户'

--    ,efe_fnd_cst_ind         STRING  COMMENT '有效基金户'

--    ,efe_nob_met_cst_ind     STRING  COMMENT '有效贵金属户'

--    ,chm_bal                 DECIMAL COMMENT '理财余额'

--	,chm_mon_avg             DECIMAL COMMENT '理财月日均'                    --新增

--    ,dep_bal                 DECIMAL COMMENT '存款余额'

--	,dep_bal_mon_avg         DECIMAL COMMENT '存款余额月日均'

--	,insu_frs_bus_amt        DECIMAL COMMENT '保险首单保费金额'

--	,avg_ncr_fnd_amt_cur_mon DECIMAL COMMENT '非货币公募基金金额当月日均保有量'

--	,nob_met_bal_1y          DECIMAL COMMENT '近一年贵金属余额'

--    ,aum_bal                 DECIMAL COMMENT 'aum余额' --20231123

--    ,chm_bal0630             DECIMAL COMMENT '理财余额230630'

--    ,dep_bal0630             DECIMAL COMMENT '存款余额230630'

--    ,aum_bal0630             DECIMAL COMMENT 'aum余额230630' --20231123

--    ,cprh_contri_cur_year    DECIMAL COMMENT '当年客户价值'

--    ,cst_val_grd             STRING  COMMENT '客户价值等级'

--    ,forml_cst_ind           STRING  COMMENT '正式客户标识'

--    ,brc_org_id               STRING  COMMENT '分行层级机构编号'

--    ,sbr_org_id               STRING  COMMENT '支行层级机构编号'

--)

--COMMENT

--'企业团办新增消费贷款客户信息表'

--PARTITIONED BY

--(

--    DT STRING COMMENT '日期分区'

--);



-----新增表字段

-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_cst_info_tmp_new add  columns

--(grp_org_id               STRING  COMMENT '集团机构编号'

--,cpy_org_id               STRING  COMMENT '法人机构编号'

--);



-----新增表字段

-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_cst_info_tmp_new add  columns

--(card_cnt               BIGINT  COMMENT '新增信用卡户数'

--);



INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_cst_info_tmp_new   PARTITION (DT = '20250331')



SELECT  DISTINCT coalesce(T9.cst_id,'-') ent_cst_id --企业客户号

                 ,coalesce(T8.job_unt_nm,'-') ent_cst_nm --企业客户名称

                 ,coalesce(T10.prm_mgr_id,'-') prm_mgr_id_ent --企业主管户客户经理工号

                 ,coalesce(T10.prm_mgr_nm,'-') prm_mgr_nm_ent --企业主管户客户经理名称

                 ,coalesce(T11.tem_org_id,'-') tem_org_id_ent --企业团队机构号

                 ,coalesce(T11.tem_org_nm,'-') tem_org_nm_ent --企业团队名称

                 ,coalesce(T11.sbr_org_nm,'-') sbr_org_nm_ent --企业支行名称

                 ,coalesce(T11.brc_org_nm,'-') brc_org_nm_ent --企业分行名称

                 ,coalesce(T1.cst_id,'-') cst_id --客户号

                 ,coalesce(T1.cst_nm,'-') cst_nm --客户名称

                 ,coalesce(T20.prm_mgr_id,'-') prm_mgr_id --个人主管户客户经理工号

                 ,coalesce(T20.prm_mgr_nm,'-') prm_mgr_nm --个人主管户客户经理名称

                 ,coalesce(T21.tem_org_id,'-') tem_org_id --个人团队机构号

                 ,coalesce(T21.tem_org_nm,'-') tem_org_nm --个人团队名称

                 ,coalesce(T21.sbr_org_nm,'-') sbr_org_nm --个人支行名称

                 ,coalesce(T21.brc_org_nm,'-') brc_org_nm --个人分行名称

                 ,decode(T15.efe_cst_ind,'1',1,'',0) efe_cst_ind --有效户标识

                 ,CASE

                    WHEN T23.cst_id is not null THEN '1'

                    ELSE '0'

                  END efe_crd_cst_ind --有效信用卡户

                 ,decode(T15.efe_dep_cst_ind, '1', 1, '', 0) efe_dep_cst_ind --有效存款户

                 ,decode(T15.efe_chm_cst_ind, '1', 1, '', 0) efe_chm_cst_ind --有效理财户

                 ,decode(T15.efe_insu_cst_ind, '1', 1, '', 0) efe_insu_cst_ind --有效保险户

                 ,decode(T15.efe_fnd_cst_ind, '1', 1, '', 0) efe_fnd_cst_ind --有效基金户

                 ,decode(T15.efe_nob_met_cst_ind, '1', 1, '', 0) efe_nob_met_cst_ind --有效贵金属户

                 ,T16.chm_bal --理财余额

				 ,T16.chm_mon_avg  --理财月日均                                         --新增字段

                 ,T17.dep_bal --存款余额

				 ,t17.dep_bal_mon_avg  --存款余额月日均                                 --新增字段

				 ,t28.insu_frs_bus_amt  --保险首单保费金额                              --新增字段

				 ,t29.avg_ncr_fnd_amt_cur_mon   --非货币公募基金金额当月日均保有量      --新增字段

                 ,t30.nob_met_bal_1y    --近一年贵金属余额                              --新增字段

                 ,T27.aum_bal --aum余额

                 ---,T24.chm_bal chm_bal0630 --理财余额230630

                 ---,T25.dep_bal dep_bal0630 --存款余额230630

                 ---,T26.aum_bal aum_bal0630 --aum余额230630

				 ,T24.chm_bal_before    --消费贷合同之前理财余额    修改字段

                 ,T24.dep_bal_before    --消费贷合同之前存款余额    修改字段

                 ,T24.aum_bal_before    --消费贷合同之前aum余额     修改字段

                 ,T18.cprh_contri_cur_year --当年客户价值 年累计FTP

                 ,T18.cst_val_grd --客户价值等级

                 ,T19.forml_cst_ind --正式客户标识

				 ,coalesce(T21.brc_org_id,'-') brc_org_id   --个人分行编号

                 ,coalesce(T21.sbr_org_id,'-') sbr_org_id   --个人支行编号

				 ,coalesce(T21.grp_org_id,'-') grp_org_id

				 ,coalesce(T21.cpy_org_id,'-') cpy_org_id

				 ,t24.card_cnt          --新增信用卡户数            修改字段

FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD T1 --合同基础信息

LEFT JOIN    edw.dim_cst_bas_inf_dd T2 --客户基本信息

ON      T1.cst_id = T2.cst_id

AND     T2.dt = '20250331'

LEFT JOIN    EDW.DWD_BUS_LOAN_FNC_CRD_LMT_INF_DD T7 ----随贷通授信额度信息

ON      T7.BUS_CTR_ID = T1.CTR_SERNO

AND     T7.LOAN_USG_CD = '2' --随贷通消费性贷款

AND     T7.DT = '20250331'

LEFT JOIN    edw.dim_cst_idv_bas_inf_dd   T8   --个人客户基本信息

ON      T1.cst_id = T8.cst_id

and     T8.dt = '20250331'

LEFT JOIN    edw.dim_cst_entp_bas_inf_dd T9 --企业客户基本信息

ON      T8.job_unt_nm = T9.cst_nm

AND     T9.dt = '20250331'

LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd T10 --客户主管户信息

ON      T9.cst_id = T10.cst_id

AND     T10.dt = '20250331'

LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd T11 --机构树

ON      T10.prm_org_id = T11.org_id

AND     T11.dt = '20250331'

LEFT JOIN    adm_pub.adm_csm_cbas_ind_inf_dd T15 --客户集市-基础信息-客户基础标识信息

ON      T1.cst_id = T15.cst_id

AND     T15.dt = '20250331'

LEFT JOIN    adm_pub.adm_csm_cbus_chm_inf_dd T16 --客户集市-业务信息-客户理财业务信息表

ON      T1.cst_id = T16.cst_id

AND     T16.dt = '20250331'

LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd T17 --客户集市-业务信息-客户存款业务信息表

ON      T1.cst_id = T17.cst_id

AND     T17.dt = '20250331'

LEFT JOIN    adm_pub.adm_csm_cbus_cst_val_der_ind_inf_dd T18 --客户集市-业务信息-客户价值信息-客户价值衍生指标信息

ON      T1.cst_id = T18.cst_id

AND     T18.dt = '@@{yyyyMMdd-1d}'

LEFT JOIN    adm_pub.adm_csm_cbas_mng_inf_dd T19 --客户集市-客户基础-客户管户信息

ON      T1.cst_id = T19.cst_id

AND     T19.dt = '20250331'

LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd T20 --客户主管户信息

ON      T1.cst_id = T20.cst_id

AND     T20.dt = '20250331'

LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd T21 --机构树

ON      T20.prm_org_id = T21.org_id

AND     T21.dt = '20250331'

LEFT JOIN    (

                 SELECT  A1.CTR_SERNO

                 FROM    EDW.DIM_BUS_LOAN_CTR_BSE_INF_DD A1 -- 合同基础信息

                 INNER JOIN    EDW.DWD_BUS_LOAN_PRPS_REL_DD A2 --方案关联

                 ON      A1.CTR_SERNO = A2.REL_ID

                 AND     A2.DT = '20250331'

                 INNER JOIN    EDW.DWD_BUS_LOAN_ZXT_LOAN_PRPS_APL_DD A3 --助兴通贷款方案申请

                 ON      A2.PRPS_ID = A3.PRPS_ID -- 找到重组的方案号

                 AND     A3.DT = '20250331'

                 WHERE   A1.DT = '20250331'

                 GROUP BY A1.CTR_SERNO

             )   T22   --助兴通合同

ON      T1.CTR_SERNO = T22.CTR_SERNO

LEFT JOIN    (

                 SELECT  DISTINCT cst_id

                 FROM    edw.dim_bus_crd_cr_crd_inf_dd --信用卡卡片信息

                 WHERE   dt = '20250331'

                 AND     card_sts_cd = '' --卡片状态正常

                 AND     TO_DATE(CONCAT('20', MTU_DAY, '01'), 'yyyyMMdd') >= TO_DATE(CONCAT('@@{yyyyMM}', '01'), 'yyyyMMdd') --未到期

             ) T23

ON      T1.cst_id = T23.cst_id

--LEFT JOIN    adm_pub.adm_csm_cbus_chm_inf_dd T24 --客户集市-业务信息-客户理财业务信息表

--ON      T1.cst_id = T24.cst_id

--AND     T24.dt = '20230630'

--LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd T25 --客户集市-业务信息-客户存款业务信息表

--ON      T1.cst_id = T25.cst_id

--AND     T25.dt = '20230630'

--LEFT JOIN    adm_pub.adm_csm_cbus_cst_fin_ast_inf_dd T26 --客户集市-业务信息-客户金融资产信息表

--ON      T1.cst_id = T26.cst_id

--AND     T26.dt = '20230630'

LEFT JOIN    (select   t1.cst_id

,t2.chm_bal    chm_bal_before    --消费贷合同之前理财余额

,T3.dep_bal    dep_bal_before    --消费贷合同之前存款余额

,T4.aum_bal    aum_bal_before    --消费贷合同之前aum余额

,count(distinct t5.cr_crd_card_nbr)    card_cnt  --消费贷合同之后开卡的客户数

from  (select cst_id

,min(APNT_START_DT)    min_APNT_START_DT

from  lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_new

where dt = '20250331'

group by cst_id )     t1

left  join   adm_pub.adm_csm_cbus_chm_inf_dd  T2    --客户集市-业务信息-客户理财业务信息表

ON      T1.cst_id = T2.cst_id

and   t2.dt >= '20230630'

and   t2.dt =  to_char(dateadd(to_date(t1.min_APNT_START_DT,'yyyymmdd'),-1,'dd'),'yyyymmdd')

LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd  T3 --客户集市-业务信息-客户存款业务信息表

ON      T1.cst_id = T3.cst_id

AND     T3.dt >= '20230630'

and     t3.dt =  to_char(dateadd(to_date(t1.min_APNT_START_DT,'yyyymmdd'),-1,'dd'),'yyyymmdd')

LEFT JOIN    adm_pub.adm_csm_cbus_cst_fin_ast_inf_dd T4 --客户集市-业务信息-客户金融资产信息表

ON      T1.cst_id = T4.cst_id

AND     T4.dt >= '20230630'

and     t4.dt =  to_char(dateadd(to_date(t1.min_APNT_START_DT,'yyyymmdd'),-1,'dd'),'yyyymmdd')

left  join    edw.dim_bus_crd_cr_crd_inf_dd    t5   --信用卡卡片信息

on      T1.cst_id = T5.cst_id

and     t5.dt = '20250331'

AND     t5.card_sts_cd = '' --卡片状态正常

AND     TO_DATE(CONCAT('20', t5.MTU_DAY, '01'), 'yyyyMMdd') >= TO_DATE(CONCAT('@@{yyyyMM}', '01'), 'yyyyMMdd')

AND     t5.isu_dt >= to_char(dateadd(to_date(t1.min_APNT_START_DT,'yyyymmdd'),-1,'dd'),'yyyymmdd')

group by  t1.cst_id

,t2.chm_bal

,T3.dep_bal

,T4.aum_bal  )   t24

on   T1.cst_id = T24.cst_id

LEFT JOIN    adm_pub.adm_csm_cbus_cst_fin_ast_inf_dd T27 --客户集市-业务信息-客户金融资产信息表

ON      T1.cst_id = T27.cst_id

AND     T27.dt = '20250331'

left join adm_pub.adm_csm_cbus_wlth_insu_bus_inf_dd   t28 --客户集市-业务信息-财富-保险-业务信息

on      t1.cst_id=t28.cst_id

and     t28.dt='20250331'

left join adm_pub.adm_csm_cbus_fnd_bal_inf_dd  t29    --客户集市-业务信息-财富-基金-业务信息

on       t1.cst_id=t29.cst_id

and      t29.dt='20250331'

left join adm_pub.adm_csm_cbus_wlth_nob_met_bus_inf_dd   t30  --客户集市-业务信息-财富-贵金属-业务信息

on       t1.cst_id=t30.cst_id

and      t30.dt='20250331'

WHERE   T1.dt = '20250331'

AND     ( ( T1.PRD_NO like '200101%'   --个人消费性贷款

and     T1.PRD_NO <> '2001010101003'   --剔除 随贷通（消费）

AND     T1.TMT_DT = '18991231'

AND     T1.CTR_MTU_DT > '20250331' )

    OR ( T1.PRD_NO = '2001010101003'    --随贷通（消费）

--AND     T1.CPT_USG_CD LIKE '02%'  --贷款用途

AND     T7.lmt_sts_cd IN ( '0' , '3' , '4' ) ) ) --个人消费性贷款未到期未终结；随贷通-消费 额度状态已激活

AND     T2.LOAN_CST_TYP_CD in ( '04','08','09')   --工薪族

AND     T1.CTR_BGN_DT >= '20230701' --活动期间

AND     T1.BSN_MARK_CD NOT IN ( '01' )  --剔除员工贷款

AND     ( T1.BSN_MARK_CD <> '04'

AND     T22.CTR_SERNO IS NULL ) --剔除重组贷款

AND     LENGTH(t8.job_unt_nm) > 3

AND     T1.CTR_STS_CD not in ( '1','3','5')  --剔除1：未生效，3	终止，5	作废

--AND     t8.OWN_EMP_ID = ''   --剔除本行员工号

;





----2024年

--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_2024_new purge;

--

--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_2024_new

--(

--    ent_cst_id              STRING  COMMENT '企业客户号'

--    ,ent_cst_nm             STRING  COMMENT '企业客户名'

--    ,prm_mgr_id             STRING  COMMENT '主管户客户经理工号'

--    ,prm_mgr_nm             STRING  COMMENT '主管户客户经理名称'

--    ,tem_org_id             STRING  COMMENT '团队机构号'

--    ,tem_org_nm             STRING  COMMENT '团队机构名称'

--    ,sbr_org_nm             STRING  COMMENT '支行名称'

--    ,brc_org_nm             STRING  COMMENT '分行名称'

--    ,cst_id                 STRING  COMMENT '个人客户号'

--    ,busi_ctr_id            STRING  COMMENT '合同号'

--    ,pd_cd                  STRING  COMMENT '产品代码'

--    ,pd_nm                  STRING  COMMENT '产品名称'

--    ,ctr_amt                DECIMAL COMMENT '合同金额'

--    ,ctr_bal                DECIMAL COMMENT '合同余额'

--    ,CCY_CD                 STRING  COMMENT '币种代码'

--    ,apnt_start_dt          STRING  COMMENT '约定开始日期'

--    ,apnt_mtu_dt            STRING  COMMENT '约定到期日期'

--    ,actl_start_use_crd_lmt DECIMAL COMMENT '启用额度'

--    --,hpn_dt                 STRING  COMMENT '发生日期'

--    ,end_dt                 STRING  COMMENT '终结日期'

--    ,count_dbil_id          DECIMAL COMMENT '累计发放借据数'

--    ,sum_amt                DECIMAL COMMENT '累计发放金额'

--    ,mon_acm_prcp_bal_acml  DECIMAL COMMENT '本月本金余额月日均'

--    ,intr_rat               DECIMAL COMMENT '合同利率'

--    ,duration               DECIMAL COMMENT '期限'

--    ,if_shoubi              DECIMAL COMMENT '是否首笔'

--    ,dbil_fenzi             DECIMAL COMMENT '用信金额加权利率分子'

--    ,dbil_fenmu             DECIMAL COMMENT '用信金额加权利率分母'

--)

--COMMENT

--'企业团办新增消费性贷款合同信息表_2024'

--PARTITIONED BY

--(

--    DT STRING COMMENT '日期分区'

--);





INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_2024_new PARTITION (DT = '20250331')

SELECT  coalesce(T9.cst_id, '-') ent_cst_id --企业客户号

        ,coalesce(T8.job_unt_nm, '-') ent_cst_nm --企业客户名

        ,coalesce(T10.prm_mgr_id, '-') prm_mgr_id --主管户客户经理工号

        ,coalesce(T10.prm_mgr_nm, '-') prm_mgr_nm --主管户客户经理名称

        ,coalesce(T11.tem_org_id, '-') tem_org_id --团队机构号

        ,coalesce(T11.tem_org_nm, '-') tem_org_nm --团队名称

        ,coalesce(T11.sbr_org_nm, '-') sbr_org_nm --支行名称

        ,coalesce(T11.brc_org_nm, '-') brc_org_nm --分行名称

        ,T1.cst_id --客户号

        ,t1.CTR_SERNO --合同号

        ,T1.PRD_NO --产品代码

        ,T17.PD_NM --产品名称

        ,T1.ctr_amt --合同金额

        ,T1.ctr_bal --合同余额

        ,T1.BSN_CCY_CD --币种代码

        ,T1.CTR_BGN_DT --约定开始日期

        ,T1.CTR_MTU_DT --约定到期日期

		 --,COALESCE(T7.BIND_LMT,T13.SEG_LMT,T1.ctr_amt,0) * T18.AVG_PRC / T18.QUO_UNT AS CYC_REALSUM -- 实际启用金额折人民币  新信贷改造删除T9.RESERVESUM

		,CASE

          WHEN T7.BUS_CTR_ID IS NOT NULL                                        THEN T7.BIND_LMT

           WHEN T1.RVLG_TYP_CD <> '1' THEN T1.CTR_AMT    --非循环贷款，取合同金额

           ELSE T1.STRT_USE_AMT     --启用金额

         END   as   ACTL_START_USE_CRD_LMT --启用额度

        ,T1.TMT_DT --合同终结日期

        ,COALESCE(T14.COUNT_DBIL_ID, 0) COUNT_DBIL_ID --累计发放借据数

        ,COALESCE(T14.SUM_AMT, 0) SUM_AMT --累计发放金额

        ,COALESCE(T14.mon_acm_prcp_bal_acml, 0) mon_acm_prcp_bal_acml --本月本金余额月日均

        ,T1.EXEC_INTR_RAT --合同利率

        ,CASE

           WHEN T1.TMT_DT = '18991231' THEN DATEDIFF(TO_DATE(T1.CTR_MTU_DT, 'yyyyMMdd'), TO_DATE(T1.CTR_BGN_DT, 'yyyyMMdd'), 'dd') + 1

           ELSE DATEDIFF(TO_DATE(T1.TMT_DT, 'yyyyMMdd'), TO_DATE(T1.CTR_BGN_DT, 'yyyyMMdd'), 'dd') + 1

         END AS duration --期限

        ,CASE

           WHEN T1.HPN_TYP_CD = '010' THEN 1

           ELSE 0

         END if_shoubi  --是否首笔

        ,T14.dbil_fenzi

        ,T14.dbil_fenmu

FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD T1 --合同基础信息

LEFT JOIN    edw.dim_cst_bas_inf_dd T2 --客户基本信息

ON      T1.cst_id = T2.cst_id

AND     T2.dt = '20250331'

LEFT JOIN    EDW.DWD_BUS_LOAN_FNC_CRD_LMT_INF_DD T7 ----随贷通授信额度信息

ON      T7.BUS_CTR_ID = t1.CTR_SERNO

AND     T7.LOAN_USG_CD = '2' --随贷通消费性贷款

AND     T7.DT = '20250331'

LEFT JOIN    edw.dim_cst_idv_bas_inf_dd   T8   --个人客户基本信息

ON      T1.cst_id = T8.cst_id

and     T8.dt = '20250331'

LEFT JOIN    edw.dim_cst_entp_bas_inf_dd T9 --企业客户基本信息

ON      T8.job_unt_nm = T9.cst_nm

AND     T9.dt = '20250331'

LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd T10 --客户主管户信息

ON      T9.cst_id = T10.cst_id

AND     T10.dt = '20250331'

LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd T11 --机构树

ON      T10.prm_org_id = T11.org_id

AND     T11.dt = '20250331'

LEFT JOIN    (

                 SELECT  BUS_CTR_ID

                         ,COUNT(DBIL_ID) COUNT_DBIL_ID

                         ,SUM(AMT) SUM_AMT

                         ,SUM(mon_acm_prcp_bal_acml) / '@@{dd}' AS mon_acm_prcp_bal_acml

                         ,SUM(AMT * exe_intr_rat * CASE

                                                     WHEN end_dt = '18991231' THEN DATEDIFF(TO_DATE(apnt_mtu_day, 'yyyyMMdd'), TO_DATE(dtrb_dt, 'yyyyMMdd'), 'dd') + 1

                                                     ELSE DATEDIFF(TO_DATE(end_dt, 'yyyyMMdd'), TO_DATE(dtrb_dt, 'yyyyMMdd'), 'dd') + 1

                                                   END)         AS dbil_fenzi

                         ,SUM(AMT * CASE

                                      WHEN end_dt = '18991231' THEN DATEDIFF(TO_DATE(apnt_mtu_day, 'yyyyMMdd'), TO_DATE(dtrb_dt, 'yyyyMMdd'), 'dd') + 1

                                      ELSE DATEDIFF(TO_DATE(end_dt, 'yyyyMMdd'), TO_DATE(dtrb_dt, 'yyyyMMdd'), 'dd') + 1

                                    END)                        AS dbil_fenmu

                 FROM    EDW.dws_bus_loan_dbil_inf_dd --贷款借据信息汇总

                 WHERE   DT = '20250331'

                 GROUP BY BUS_CTR_ID

             ) T14

ON      t1.CTR_SERNO = T14.BUS_CTR_ID

LEFT JOIN    (

                 SELECT  A1.CTR_SERNO

                 FROM    EDW.DIM_BUS_LOAN_CTR_BSE_INF_DD A1 -- 合同基础信息

                 INNER JOIN    EDW.DWD_BUS_LOAN_PRPS_REL_DD A2 --方案关联

                 ON      A1.CTR_SERNO = A2.REL_ID

                 AND     A2.DT = '20250331'

                 INNER JOIN    EDW.DWD_BUS_LOAN_ZXT_LOAN_PRPS_APL_DD A3 --助兴通贷款方案申请

                 ON      A2.PRPS_ID = A3.PRPS_ID -- 找到重组的方案号

                 AND     A3.DT = '20250331'

                 WHERE   A1.DT = '20250331'

                 GROUP BY A1.CTR_SERNO

             ) T16 --助兴通合同

ON      t1.CTR_SERNO = T16.CTR_SERNO

LEFT JOIN    edw.DIM_BUS_LOAN_PRD_FRML_DD T17 --信贷产品信息

ON      T1.PRD_NO = T17.PRD_NO

AND     T17.dt = '20250331'

WHERE   T1.dt = '20250331'

AND     ( ( T1.PRD_NO like '200101%'   --个人消费性贷款

and     T1.PRD_NO <> '2001010101003'   --剔除 随贷通（消费）

AND     T1.TMT_DT = '18991231'

AND     T1.CTR_MTU_DT > '20250331' )

    OR ( T1.PRD_NO = '2001010101003'    --随贷通（消费）

--AND     T1.CPT_USG_CD LIKE '02%'  --贷款用途

AND     T7.lmt_sts_cd IN ( '0' , '3' , '4' ) ) ) --个人消费性贷款未到期未终结；随贷通-消费 额度状态已激活   0:正常,3:未激活,4:止付

AND    T2.LOAN_CST_TYP_CD in ( '04','08','09')   --工薪族

AND     T1.CTR_BGN_DT >= '20240101'   --活动期间

AND     T1.BSN_MARK_CD NOT IN ( '01' ) --剔除员工贷款

AND     ( T1.BSN_MARK_CD <> '04'    --04:重组业务

AND     T16.CTR_SERNO IS NULL ) --剔除重组贷款

AND     LENGTH(t8.job_unt_nm) > 3

AND     T1.CTR_STS_CD not in ( '1','3','5');  --剔除1：未生效，3	终止，5	作废





----- 2024年新增的消费贷款客户信息表



--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_cst_info_tmp_2024_new purge;

--

--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_cst_info_tmp_2024_new

--(

--    ent_cst_id               STRING  COMMENT '企业客户号'

--    ,ent_cst_nm              STRING  COMMENT '企业客户名'

--    ,prm_mgr_id_ent          STRING  COMMENT '企业主管户客户经理工号'

--    ,prm_mgr_nm_ent          STRING  COMMENT '企业主管户客户经理名称'

--    ,tem_org_id_ent          STRING  COMMENT '企业主管团队机构号'

--    ,tem_org_nm_ent          STRING  COMMENT '企业主管团队机构名称'

--    ,sbr_org_nm_ent          STRING  COMMENT '企业主管支行名称'

--    ,brc_org_nm_ent          STRING  COMMENT '企业主管分行名称'

--    ,cst_id                  STRING  COMMENT '个人客户号'

--    ,cst_nm                  STRING  COMMENT '个人客户名'

--    ,prm_mgr_id              STRING  COMMENT '主管户客户经理工号'

--    ,prm_mgr_nm              STRING  COMMENT '主管户客户经理名称'

--    ,tem_org_id              STRING  COMMENT '团队机构号'

--    ,tem_org_nm              STRING  COMMENT '团队机构名称'

--    ,sbr_org_nm              STRING  COMMENT '支行名称'

--    ,brc_org_nm              STRING  COMMENT '分行名称'

--    ,efe_cst_ind             STRING  COMMENT '有效户标识'

--    ,efe_crd_cst_ind         STRING  COMMENT '有效信用卡户'

--    ,efe_dep_cst_ind         STRING  COMMENT '有效存款户'

--    ,efe_chm_cst_ind         STRING  COMMENT '有效理财户'

--    ,efe_insu_cst_ind        STRING  COMMENT '有效保险户'

--    ,efe_fnd_cst_ind         STRING  COMMENT '有效基金户'

--    ,efe_nob_met_cst_ind     STRING  COMMENT '有效贵金属户'

--    ,chm_bal                 DECIMAL COMMENT '理财余额'

--    ,dep_bal                 DECIMAL COMMENT '存款余额'

--    ,aum_bal                 DECIMAL COMMENT 'aum余额' --20231123

--    ,chm_bal0630             DECIMAL COMMENT '理财余额230630'

--    ,dep_bal0630             DECIMAL COMMENT '存款余额230630'

--    ,aum_bal0630             DECIMAL COMMENT 'aum余额230630' --20231123

--    ,cprh_contri_cur_year    DECIMAL COMMENT '当年客户价值'

--    ,cst_val_grd             STRING  COMMENT '客户价值等级'

--    ,forml_cst_ind           STRING  COMMENT '正式客户标识'

--    ,brc_org_id               STRING  COMMENT '分行层级机构编号'

--    ,sbr_org_id               STRING  COMMENT '支行层级机构编号'

--)

--COMMENT

--'企业团办新增消费贷款客户信息表_2024'

--PARTITIONED BY

--(

--    DT STRING COMMENT '日期分区'

--);



-----新增表字段

-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_cst_info_tmp_2024_new add  columns

--(grp_org_id               STRING  COMMENT '集团机构编号'

--,cpy_org_id               STRING  COMMENT '法人机构编号'

--);







INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_cst_info_tmp_2024_new   PARTITION (DT = '20250331')



SELECT  DISTINCT coalesce(T9.cst_id,'-') ent_cst_id --企业客户号

                 ,coalesce(T8.job_unt_nm,'-') ent_cst_nm --企业客户名称

                 ,coalesce(T10.prm_mgr_id,'-') prm_mgr_id_ent --企业主管户客户经理工号

                 ,coalesce(T10.prm_mgr_nm,'-') prm_mgr_nm_ent --企业主管户客户经理名称

                 ,coalesce(T11.tem_org_id,'-') tem_org_id_ent --企业团队机构号

                 ,coalesce(T11.tem_org_nm,'-') tem_org_nm_ent --企业团队名称

                 ,coalesce(T11.sbr_org_nm,'-') sbr_org_nm_ent --企业支行名称

                 ,coalesce(T11.brc_org_nm,'-') brc_org_nm_ent --企业分行名称

                 ,coalesce(T1.cst_id,'-') cst_id --客户号

                 ,coalesce(T1.cst_nm,'-') cst_nm --客户名称

                 ,coalesce(T20.prm_mgr_id,'-') prm_mgr_id --个人主管户客户经理工号

                 ,coalesce(T20.prm_mgr_nm,'-') prm_mgr_nm --个人主管户客户经理名称

                 ,coalesce(T21.tem_org_id,'-') tem_org_id --个人团队机构号

                 ,coalesce(T21.tem_org_nm,'-') tem_org_nm --个人团队名称

                 ,coalesce(T21.sbr_org_nm,'-') sbr_org_nm --个人支行名称

                 ,coalesce(T21.brc_org_nm,'-') brc_org_nm --个人分行名称

                 ,decode(T15.efe_cst_ind,'1',1,'',0) efe_cst_ind --有效户标识

                 ,CASE

                    WHEN T23.cst_id is not null THEN '1'

                    ELSE '0'

                  END efe_crd_cst_ind --有效信用卡户

                 ,decode(T15.efe_dep_cst_ind, '1', 1, '', 0) efe_dep_cst_ind --有效存款户

                 ,decode(T15.efe_chm_cst_ind, '1', 1, '', 0) efe_chm_cst_ind --有效理财户

                 ,decode(T15.efe_insu_cst_ind, '1', 1, '', 0) efe_insu_cst_ind --有效保险户

                 ,decode(T15.efe_fnd_cst_ind, '1', 1, '', 0) efe_fnd_cst_ind --有效基金户

                 ,decode(T15.efe_nob_met_cst_ind, '1', 1, '', 0) efe_nob_met_cst_ind --有效贵金属户

                 ,T16.chm_bal --理财余额

                 ,T17.dep_bal --存款余额

                 ,T27.aum_bal --aum余额

                 --,T24.chm_bal chm_bal0630 --理财余额230630

                 --,T25.dep_bal dep_bal0630 --存款余额230630

                 --,T26.aum_bal aum_bal0630 --aum余额230630

				 ,T24.chm_bal_before    --消费贷合同之前理财余额    修改字段

                 ,T24.dep_bal_before    --消费贷合同之前存款余额    修改字段

                 ,T24.aum_bal_before    --消费贷合同之前aum余额     修改字段

                 ,T18.cprh_contri_cur_year --当年客户价值 年累计FTP

                 ,T18.cst_val_grd --客户价值等级

                 ,T19.forml_cst_ind --正式客户标识

				 ,coalesce(T21.brc_org_id,'-') brc_org_id   --个人分行编号

                 ,coalesce(T21.sbr_org_id,'-') sbr_org_id   --个人支行编号

				 ,coalesce(T21.grp_org_id,'-') grp_org_id

				 ,coalesce(T21.cpy_org_id,'-') cpy_org_id

				 --,t24.card_cnt          --新增信用卡户数            修改字段

FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD T1 --合同基础信息

LEFT JOIN    edw.dim_cst_bas_inf_dd T2 --客户基本信息

ON      T1.cst_id = T2.cst_id

AND     T2.dt = '20250331'

LEFT JOIN    EDW.DWD_BUS_LOAN_FNC_CRD_LMT_INF_DD T7 ----随贷通授信额度信息

ON      T7.BUS_CTR_ID = T1.CTR_SERNO

AND     T7.LOAN_USG_CD = '2' --随贷通消费性贷款

AND     T7.DT = '20250331'

LEFT JOIN    edw.dim_cst_idv_bas_inf_dd   T8   --个人客户基本信息

ON      T1.cst_id = T8.cst_id

and     T8.dt = '20250331'

LEFT JOIN    edw.dim_cst_entp_bas_inf_dd T9 --企业客户基本信息

ON      T8.job_unt_nm = T9.cst_nm

AND     T9.dt = '20250331'

LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd T10 --客户主管户信息

ON      T9.cst_id = T10.cst_id

AND     T10.dt = '20250331'

LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd T11 --机构树

ON      T10.prm_org_id = T11.org_id

AND     T11.dt = '20250331'

LEFT JOIN    adm_pub.adm_csm_cbas_ind_inf_dd T15 --客户集市-基础信息-客户基础标识信息

ON      T1.cst_id = T15.cst_id

AND     T15.dt = '20250331'

LEFT JOIN    adm_pub.adm_csm_cbus_chm_inf_dd T16 --客户集市-业务信息-客户理财业务信息表

ON      T1.cst_id = T16.cst_id

AND     T16.dt = '20250331'

LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd T17 --客户集市-业务信息-客户存款业务信息表

ON      T1.cst_id = T17.cst_id

AND     T17.dt = '20250331'

LEFT JOIN    adm_pub.adm_csm_cbus_cst_val_der_ind_inf_dd T18 --客户集市-业务信息-客户价值信息-客户价值衍生指标信息

ON      T1.cst_id = T18.cst_id

AND     T18.dt = '@@{yyyyMMdd-1d}'

LEFT JOIN    adm_pub.adm_csm_cbas_mng_inf_dd T19 --客户集市-客户基础-客户管户信息

ON      T1.cst_id = T19.cst_id

AND     T19.dt = '20250331'

LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd T20 --客户主管户信息

ON      T1.cst_id = T20.cst_id

AND     T20.dt = '20250331'

LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd T21 --机构树

ON      T20.prm_org_id = T21.org_id

AND     T21.dt = '20250331'

LEFT JOIN    (

                 SELECT  A1.CTR_SERNO

                 FROM    EDW.DIM_BUS_LOAN_CTR_BSE_INF_DD A1 -- 合同基础信息

                 INNER JOIN    EDW.DWD_BUS_LOAN_PRPS_REL_DD A2 --方案关联

                 ON      A1.CTR_SERNO = A2.REL_ID

                 AND     A2.DT = '20250331'

                 INNER JOIN    EDW.DWD_BUS_LOAN_ZXT_LOAN_PRPS_APL_DD A3 --助兴通贷款方案申请

                 ON      A2.PRPS_ID = A3.PRPS_ID -- 找到重组的方案号

                 AND     A3.DT = '20250331'

                 WHERE   A1.DT = '20250331'

                 GROUP BY A1.CTR_SERNO

             ) T22 --助兴通合同

ON      T1.CTR_SERNO = T22.CTR_SERNO

LEFT JOIN    (

                 SELECT  DISTINCT cst_id

                 FROM    edw.dim_bus_crd_cr_crd_inf_dd --信用卡卡片信息

                 WHERE   dt = '20250331'

                 AND     card_sts_cd = '' --卡片状态正常

                 AND     TO_DATE(CONCAT('20', MTU_DAY, '01'), 'yyyyMMdd') >= TO_DATE(CONCAT('@@{yyyyMM}', '01'), 'yyyyMMdd') --未到期

             ) T23

ON      T1.cst_id = T23.cst_id

--LEFT JOIN    adm_pub.adm_csm_cbus_chm_inf_dd T24 --客户集市-业务信息-客户理财业务信息表

--ON      T1.cst_id = T24.cst_id

--AND     T24.dt = '20230630'

--LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd T25 --客户集市-业务信息-客户存款业务信息表

--ON      T1.cst_id = T25.cst_id

--AND     T25.dt = '20230630'

--LEFT JOIN    adm_pub.adm_csm_cbus_cst_fin_ast_inf_dd T26 --客户集市-业务信息-客户金融资产信息表

--ON      T1.cst_id = T26.cst_id

--AND     T26.dt = '20230630'

LEFT JOIN    (select   t1.cst_id

,t2.chm_bal    chm_bal_before    --消费贷合同之前理财余额

,T3.dep_bal    dep_bal_before    --消费贷合同之前存款余额

,T4.aum_bal    aum_bal_before    --消费贷合同之前aum余额

--,count(distinct t5.cr_crd_card_nbr)    card_cnt  --消费贷合同之后开卡的客户数

from  (select cst_id

,min(APNT_START_DT)    min_APNT_START_DT

from  lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_2024_new

where dt = '20250331'

group by cst_id )     t1

left  join   adm_pub.adm_csm_cbus_chm_inf_dd  T2    --客户集市-业务信息-客户理财业务信息表

ON      T1.cst_id = T2.cst_id

and   t2.dt >= '20230630'

and   t2.dt =  to_char(dateadd(to_date(t1.min_APNT_START_DT,'yyyymmdd'),-1,'dd'),'yyyymmdd')

LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd  T3 --客户集市-业务信息-客户存款业务信息表

ON      T1.cst_id = T3.cst_id

AND     T3.dt >= '20230630'

and     t3.dt =  to_char(dateadd(to_date(t1.min_APNT_START_DT,'yyyymmdd'),-1,'dd'),'yyyymmdd')

LEFT JOIN    adm_pub.adm_csm_cbus_cst_fin_ast_inf_dd T4 --客户集市-业务信息-客户金融资产信息表

ON      T1.cst_id = T4.cst_id

AND     T4.dt >= '20230630'

and     t4.dt =  to_char(dateadd(to_date(t1.min_APNT_START_DT,'yyyymmdd'),-1,'dd'),'yyyymmdd')

--left  join    edw.dim_bus_crd_cr_crd_inf_dd    t5   --信用卡卡片信息

--on      T1.cst_id = T5.cst_id

--and     t5.dt = '20250331'

--AND     t5.card_sts_cd = '' --卡片状态正常

--AND     TO_DATE(CONCAT('20', t5.MTU_DAY, '01'), 'yyyyMMdd') >= TO_DATE(CONCAT('@@{yyyyMM}', '01'), 'yyyyMMdd')

--AND     t5.isu_dt >= to_char(dateadd(to_date(t1.min_APNT_START_DT,'yyyymmdd'),-1,'dd'),'yyyymmdd')

group by  t1.cst_id

,t2.chm_bal

,T3.dep_bal

,T4.aum_bal  )   t24

on   T1.cst_id = T24.cst_id

LEFT JOIN    adm_pub.adm_csm_cbus_cst_fin_ast_inf_dd T27 --客户集市-业务信息-客户金融资产信息表

ON      T1.cst_id = T27.cst_id

AND     T27.dt = '20250331'

WHERE   T1.dt = '20250331'

AND     ( ( T1.PRD_NO like '200101%'   --个人消费性贷款

and     T1.PRD_NO <> '2001010101003'   --剔除 随贷通（消费）

AND     T1.TMT_DT = '18991231'

AND     T1.CTR_MTU_DT > '20250331' )

    OR ( T1.PRD_NO = '2001010101003'    --随贷通（消费）

--AND     T1.CPT_USG_CD LIKE '02%'  --贷款用途

AND     T7.lmt_sts_cd IN ( '0' , '3' , '4' ) ) ) --个人消费性贷款未到期未终结；随贷通-消费 额度状态已激活

AND     T2.LOAN_CST_TYP_CD in ( '04','08','09')  --工薪族

AND     T1.CTR_BGN_DT >= '20240101' --活动期间

AND     T1.BSN_MARK_CD NOT IN ( '01' )  --剔除员工贷款

AND     ( T1.BSN_MARK_CD <> '04'

AND     T22.CTR_SERNO IS NULL ) --剔除重组贷款

AND     LENGTH(t8.job_unt_nm) > 3

AND     T1.CTR_STS_CD not in ( '1','3','5')    --剔除1：未生效，3	终止，5	作废

--AND     t8.OWN_EMP_ID = ''   --剔除本行员工号

;



----20230701-20231231新增的消费贷客户，不管是否到期，结清



DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_cst_20230701_20231231 purge;



CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_cst_20230701_20231231  as



SELECT  DISTINCT  coalesce(T1.cst_id,'-') cst_id --客户号

                 ,coalesce(T1.cst_nm,'-') cst_nm --客户名称

FROM    edw.dim_bus_loan_ctr_inf_dd T1 --信贷合同信息

LEFT JOIN    edw.DIM_CST_BAS_INF_DD T2 --客户基本信息

ON      T1.cst_id = T2.cst_id

AND     T2.dt = '20231231'

LEFT JOIN    EDW.DWD_BUS_LOAN_REL_APL_INF_DD T3 -- 信贷业务关联申请信息

ON      T3.APL_SRL_NBR = T1.BUSI_APL_ID -- 申请流水号

AND     T3.REL_OBJ_TYP = 'EntryForm' -- 关联类型为进件

AND     T3.DT = '20231231'

LEFT JOIN    EDW.DWD_BUS_LOAN_ENTR_FORM_DD T4 -- 信贷业务进件单信息

ON      T4.APL_SRL_NBR = T3.REL_OBJ_ID -- 进件流水号

AND     T4.DT = '20231231'

LEFT JOIN    edw.dwd_bus_loan_apl_rel_dd T5 --进件单关联信息

ON      T4.apl_srl_nbr = T5.xudai_lst_srl_nbr

AND     T5.OBJ_TYP = 'OnlineBusiness'

AND     T5.DT = '20231231'

LEFT JOIN    edw.loan_entryform_business T6 --个税贷进件业务信息表

ON      T5.OBJ_ID = T6.serialno

AND     T6.DT = '20231231'

LEFT JOIN    EDW.DWD_BUS_LOAN_FNC_CRD_LMT_INF_DD T7 ----随贷通授信额度信息

ON      T7.BUS_CTR_ID = T1.BUSI_CTR_ID

AND     T7.LOAN_USG_CD = '2' --随贷通消费性贷款

AND     T7.DT = '20231231'

LEFT JOIN    edw.dim_cst_idv_bas_inf_dd   T8   --个人客户基本信息

ON      T1.cst_id = T8.cst_id

and     T8.dt = '20250331'

LEFT JOIN    (

                 SELECT  A1.BUSI_CTR_ID

                 FROM    EDW.DIM_BUS_LOAN_CTR_INF_DD A1 -- 信贷合同信息

                 INNER JOIN    EDW.DWD_BUS_LOAN_PRPS_REL_DD A2 --方案关联

                 ON      A1.BUSI_CTR_ID = A2.REL_ID

                 AND     A2.DT = '20231231'

                 INNER JOIN    EDW.DWD_BUS_LOAN_ZXT_LOAN_PRPS_APL_DD A3 --助兴通贷款方案申请

                 ON      A2.PRPS_ID = A3.PRPS_ID -- 找到重组的方案号

                 AND     A3.DT = '20231231'

                 WHERE   A1.DT = '20231231'

                 GROUP BY A1.BUSI_CTR_ID

             ) T22 --助兴通合同

ON      T1.BUSI_CTR_ID = T22.BUSI_CTR_ID

WHERE   T1.dt = '20231231'

AND     (  T1.pd_cd LIKE '201050101%'

    OR ( T1.pd_cd LIKE '2010503%'

AND     T1.loan_usg_cd LIKE '02%' ) ) --个人消费性贷款未到期未终结；随贷通-消费 额度状态已激活

AND     ( ( T2.LOAN_CST_TYP_CD in ( '04','08','09')

AND     T6.qrcodetype IN ( '1' , '4' ,'5' ) )

    OR ( T2.LOAN_CST_TYP_CD in ( '04','08','09')

AND     T6.qrcodetype IS NULL ) ) --工薪族

AND     T1.apnt_start_dt >= '20230701' --活动期间

and     T1.apnt_start_dt <= '20231231'

AND     T1.bus_cd NOT IN ( 'A' , 'B' , 'H' , 'I' , 'O' , 'P' ) --剔除员工贷款

AND     ( T1.bus_cd <> 'J'

AND     T22.BUSI_CTR_ID IS NULL ) --剔除重组贷款

AND     LENGTH(t8.job_unt_nm) > 3

AND     T1.frz_sts_cd <> '';







--SHEET2-客户清单

--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet2 PURGE;



--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet2

--(

--     cst_id                 STRING  COMMENT '个人客户号'

--    ,cst_nm                 STRING  COMMENT '个人客户名'

--    ,prm_mgr_id             STRING  COMMENT '主管户客户经理工号'

--    ,prm_mgr_nm             STRING  COMMENT '主管户客户经理名称'

--    ,tem_org_id             STRING  COMMENT '团队机构号'

--    ,tem_org_nm             STRING  COMMENT '团队机构名称'

--    ,sbr_org_nm             STRING  COMMENT '支行名称'

--    ,brc_org_nm             STRING  COMMENT '分行名称'

--    ,ent_cst_id             STRING  COMMENT '企业客户号'

--    ,ent_cst_nm             STRING  COMMENT '企业客户名'

--    ,prm_mgr_id_ent         STRING  COMMENT '企业主管户客户经理工号'

--    ,prm_mgr_nm_ent         STRING  COMMENT '企业主管户客户经理名称'

--    ,tem_org_id_ent         STRING  COMMENT '企业主管团队机构号'

--    ,tem_org_nm_ent         STRING  COMMENT '企业主管团队机构名称'

--    ,sbr_org_nm_ent         STRING  COMMENT '企业主管支行名称'

--    ,brc_org_nm_ent         STRING  COMMENT '企业主管分行名称'

--    ,ctr_amt                DECIMAL COMMENT '新增消费贷款合同金额合计'

--    ,actl_start_use_crd_lmt DECIMAL COMMENT '新增消费贷款启用额度合计'

--    ,ctr_bal                DECIMAL COMMENT '新增消费贷款合同余额合计'

--    ,mon_acm_prcp_bal_acml  DECIMAL COMMENT '本金余额月日均'

--    ,if_loan_xf             STRING  COMMENT '是否持有消费贷款'

--    ,efe_crd_cst_ind        STRING  COMMENT '是否有效信用卡户'

--    ,efe_dep_cst_ind        STRING  COMMENT '是否有效存款户'

--    ,efe_chm_cst_ind        STRING  COMMENT '是否有效理财户'

--    ,efe_insu_cst_ind       STRING  COMMENT '是否有效保险户'

--    ,efe_fnd_cst_ind        STRING  COMMENT '是否有效基金户'

--    ,efe_nob_met_cst_ind    STRING  COMMENT '是否有效贵金属户'

--    ,ctr_bal_all            DECIMAL COMMENT '消费贷款合同余额总计'

--    ,dep_bal                DECIMAL COMMENT '存款余额'

--    ,chm_bal                DECIMAL COMMENT '理财余额'

--    ,dep_bal_add            DECIMAL COMMENT '新增存款余额'

--    ,chm_bal_add            DECIMAL COMMENT '新增理财余额'

--    ,cst_val_grd            STRING  COMMENT '客户价值等级'

--    ,cprh_contri_cur_year   DECIMAL COMMENT '当年客户价值'

--    ,loan_start_dt          STRING  COMMENT '最早消费贷款开始日期'

--    ,crd_isu_dt             STRING  COMMENT '最早信用卡发卡日期'

--    ,dep_opn_dt             STRING  COMMENT '最早存款开户日期'

--    ,chm_trx_dt             STRING  COMMENT '最早购买理财日期'

--    ,insu_dt                STRING  COMMENT '最早保险投保日期'

--    ,fund_dt                STRING  COMMENT '最早购买基金日期'

--    ,nob_dt                 STRING  COMMENT '最早购买贵金属日期'

--    ,if_shoudaihu          DECIMAL  COMMENT '是否首贷户'

--    ,ctr_fenzi             DECIMAL  COMMENT '授信金额加权利率分子'

--    ,ctr_fenmu             DECIMAL  COMMENT '授信金额加权利率分母'

--    ,dbil_fenzi            DECIMAL  COMMENT '用信金额加权利率分子'

--    ,dbil_fenmu            DECIMAL  COMMENT '用信金额加权利率分母'

--    ,aum_bal               DECIMAL  COMMENT 'aum余额'

--    ,aum_bal_add           DECIMAL  COMMENT '新增aum余额'

--    ,max_apnt_start_dt     STRING  COMMENT '最新一笔消费贷合同开始日期'

--    ,is_cur_year_new_cst   STRING  COMMENT '是否本年新增客户'

--    ,brc_org_id            STRING  COMMENT '分行层级机构编号'

--    ,sbr_org_id            STRING  COMMENT '支行层级机构编号'

--)

--COMMENT

--'企业团办_SHEET2-客户清单'

--PARTITIONED BY

--(

--    DT STRING COMMENT '日期分区'

--);







-----新增表字段

-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet2 add  columns

--(grp_org_id               STRING  COMMENT '集团机构编号'

--,cpy_org_id               STRING  COMMENT '法人机构编号'

--);



-----新增表字段

-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet2 add  columns

--(card_cnt               BIGINT  COMMENT '新增信用卡户数'

--);



INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet2 PARTITION (DT = '20250331')

SELECT  DISTINCT T1.cst_id

        ,T1.cst_nm

        ,T1.prm_mgr_id

        ,T1.prm_mgr_nm

        ,T1.tem_org_id

        ,T1.tem_org_nm

        ,T1.sbr_org_nm

        ,T1.brc_org_nm

        ,T1.ent_cst_id

        ,T1.ent_cst_nm

        ,T1.prm_mgr_id_ent

        ,T1.prm_mgr_nm_ent

        ,T1.tem_org_id_ent

        ,T1.tem_org_nm_ent

        ,T1.sbr_org_nm_ent

        ,T1.brc_org_nm_ent

        ,T2.ctr_amt

        ,T2.actl_start_use_crd_lmt

        ,T2.ctr_bal

        ,T2.mon_acm_prcp_bal_acml

        ,CASE WHEN T3.cst_id is not null then '1' else '0' end if_loan_xf

        ,T1.efe_crd_cst_ind

        ,T1.efe_dep_cst_ind

        ,T1.efe_chm_cst_ind

        ,T1.efe_insu_cst_ind

        ,T1.efe_fnd_cst_ind

        ,T1.efe_nob_met_cst_ind

        ,T3.ctr_bal ctr_bal_all

        ,T1.dep_bal

        ,T1.chm_bal

        ,coalesce(T1.dep_bal, 0) - coalesce(T1.dep_bal0630, 0) dep_bal_add

        ,coalesce(T1.chm_bal, 0) - coalesce(T1.chm_bal0630, 0) chm_bal_add

        ,T1.cst_val_grd

        ,T1.cprh_contri_cur_year

        ,'' loan_start_dt

        ,'' crd_isu_dt

        ,'' dep_opn_dt

        ,'' chm_trx_dt

        ,'' insu_dt

        ,'' fund_dt

        ,'' nob_dt

        ,CASE

                    WHEN coalesce(T2.if_shoubi, 0) > 0 THEN '1'

                    ELSE '0'

                  END if_shoudaihu

        ,T2.ctr_fenzi

        ,T2.ctr_fenmu

        ,T2.dbil_fenzi

        ,T2.dbil_fenmu

        ,T1.aum_bal

        ,coalesce(T1.aum_bal, 0) - coalesce(T1.aum_bal0630, 0) aum_bal_add

		,t2.max_apnt_start_dt    --最新一笔消费贷合同开始日期   --修改 新增

		,case when  t4.cst_id  is not null  then '是'  else  '否'  end  as  is_cur_year_new_cst     --是否本年新增客户

		,t1.brc_org_id               --分行层级机构编号

        ,t1.sbr_org_id               --支行层级机构编号

		,t1.grp_org_id

		,t1.cpy_org_id

		,t1.card_cnt

FROM    (

            SELECT     a.*

            FROM    lab_bigdata_dev.phjrb_ys_qytb_cst_info_tmp_new a     --企业团办新增消费贷款客户信息表

			where  dt = '20250331'

            UNION

            SELECT     b.*

            FROM    lab_bigdata_dev.phjrb_ys_qytb_cst_info_crd_tmp_new b   --企业团办新增信用卡客户信息表

			where  dt = '20250331'

        ) T1

LEFT JOIN    (

                 SELECT  cst_id

                         ,sum(ctr_amt) ctr_amt

                         ,sum(actl_start_use_crd_lmt) actl_start_use_crd_lmt

                         ,round(sum(ctr_bal), 2) ctr_bal

                         ,round(sum(mon_acm_prcp_bal_acml), 2) mon_acm_prcp_bal_acml

                         ,sum(ctr_amt * intr_rat * duration) ctr_fenzi

                         ,sum(ctr_amt * duration) ctr_fenmu

                         ,sum(dbil_fenzi) dbil_fenzi

                         ,sum(dbil_fenmu) dbil_fenmu

                         ,sum(if_shoubi) if_shoubi

						 ,max(apnt_start_dt)    max_apnt_start_dt    --最新一笔消费贷合同开始日期   --修改 新增

                 FROM    lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_new    --企业团办新增消费性贷款合同信息表

                 WHERE   dt = '20250331'

                 GROUP BY cst_id

             ) T2

ON      T1.cst_id = T2.cst_id

LEFT JOIN    (

                 SELECT  cst_id

                         ,sum(ctr_bal) ctr_bal

                 FROM    lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_all_new   --企业团办综合产效底表

                 WHERE   dt = '20250331'

                 AND     if_ctr_efe = '1' --消费性贷款在贷合同

                 AND     frz_sts_ind = '0' --授信状态不为空

                 GROUP BY cst_id

             ) T3

ON      T1.cst_id = T3.cst_id

left join (select   distinct  t1.cst_id

from lab_bigdata_dev.phjrb_ys_qytb_cst_info_tmp_2024_new   t1    ----2024年新增的消费贷款客户

left join lab_bigdata_dev.phjrb_ys_qytb_bus_loan_cst_20230701_20231231    t2     ----20230701-20231231新增的消费贷客户

on  t1.cst_id = t2.cst_id

where  t1.dt = '20250331'

and  t2.cst_id is null )    t4   --筛选出所有2024年新增的客户

on   t1.cst_id = t4.cst_id

where     t1.ent_cst_nm  not in (select distinct   ent_cst_nm

from   (

            SELECT     a.*

            FROM    lab_bigdata_dev.phjrb_ys_qytb_cst_info_tmp_new a     --企业团办新增消费贷款客户信息表

			where  dt = '20250331'

            UNION

            SELECT     b.*

            FROM    lab_bigdata_dev.phjrb_ys_qytb_cst_info_crd_tmp_new b   --企业团办新增信用卡客户信息表

			where  dt = '20250331'

        ) T1

where  ( length(ent_cst_nm) < 4   --小于4个字符

or  (ent_cst_nm REGEXP '[^0-9.]') = false   --为纯数字

or  ent_cst_nm  rlike '个体|退休|在家|单位|自由职业|家庭主妇|人人可贷|泰隆'   --企业名称包含这些

or  ent_cst_nm is null

or  ent_cst_nm = '')  )   --剔除企业名称不规范的客户

 ;







--SHEET4 企业清单和客户清单合并



--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4 PURGE;

--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4

--(

--    cst_id                          STRING  COMMENT '个人客户号'

--    ,cst_nm                         STRING  COMMENT '个人客户名'

--    ,prm_mgr_id                     STRING  COMMENT '主管户客户经理工号'

--    ,prm_mgr_nm                     STRING  COMMENT '主管户客户经理名称'

--    ,tem_org_id                     STRING  COMMENT '团队机构号'

--    ,tem_org_nm                     STRING  COMMENT '团队机构名称'

--    ,sbr_org_nm                     STRING  COMMENT '支行名称'

--    ,brc_org_nm                     STRING  COMMENT '分行名称'

--    ,ent_cst_id                     STRING  COMMENT '企业客户号'

--    ,ent_cst_nm                     STRING  COMMENT '企业客户名'

--    ,prm_mgr_id_ent                 STRING  COMMENT '企业主管户客户经理工号'

--    ,prm_mgr_nm_ent                 STRING  COMMENT '企业主管户客户经理名称'

--    ,tem_org_id_ent                 STRING  COMMENT '企业主管团队机构号'

--   ,tem_org_nm_ent                 STRING  COMMENT '企业主管团队机构名称'

--    ,sbr_org_nm_ent                 STRING  COMMENT '企业主管支行名称'

--    ,brc_org_nm_ent                 STRING  COMMENT '企业主管分行名称'

--    ,ctr_amt                        DECIMAL COMMENT '新增消费贷款合同金额合计'

--    ,actl_start_use_crd_lmt         DECIMAL COMMENT '新增消费贷款启用额度合计'

--    ,ctr_bal                        DECIMAL COMMENT '新增消费贷款合同余额合计'

--    ,mon_acm_prcp_bal_acml          DECIMAL COMMENT '本金余额月日均'

--    ,if_loan_xf                     STRING  COMMENT '是否持有消费贷款'

--    ,efe_crd_cst_ind                STRING  COMMENT '是否有效信用卡户'

--    ,efe_dep_cst_ind                STRING  COMMENT '是否有效存款户'

--    ,efe_chm_cst_ind                STRING  COMMENT '是否有效理财户'

--    ,efe_insu_cst_ind               STRING  COMMENT '是否有效保险户'

--    ,efe_fnd_cst_ind                STRING  COMMENT '是否有效基金户'

--    ,efe_nob_met_cst_ind            STRING  COMMENT '是否有效贵金属户'

--    ,ctr_bal_all                    DECIMAL COMMENT '消费贷款合同余额总计'

--    ,dep_bal                        DECIMAL COMMENT '存款余额'

--    ,chm_bal                        DECIMAL COMMENT '理财余额'

--    ,dep_bal_add                    DECIMAL COMMENT '新增存款余额'

--    ,chm_bal_add                    DECIMAL COMMENT '新增理财余额'

--    ,cst_val_grd                    DECIMAL COMMENT '客户价值等级'

--    ,cprh_contri_cur_year           DECIMAL COMMENT '当年客户价值'

--    ,loan_start_dt                  STRING  COMMENT '最早消费贷款开始日期'

--    ,crd_isu_dt                     STRING  COMMENT '最早信用卡发卡日期'

--    ,dep_opn_dt                     STRING  COMMENT '最早存款开户日期'

--    ,chm_trx_dt                     STRING  COMMENT '最早购买理财日期'

--    ,insu_dt                        STRING  COMMENT '最早保险投保日期'

--    ,fund_dt                        STRING  COMMENT '最早购买基金日期'

--    ,nob_dt                         STRING  COMMENT '最早购买贵金属日期'

--    ,brc_grp_cst_num                DECIMAL COMMENT '分行_企业授信客户数统计'

--    ,brc_grp_mon_acm_prcp_bal_acml  DECIMAL COMMENT '分行_企业本金余额月日均'

--   ,brc_grp_actl_start_use_crd_lmt DECIMAL COMMENT '分行_企业本金启用额度'

--    ,rn_brc_grp                     STRING  COMMENT '排序_分行_企业'

--    ,pd_hld_qty_sum_brc             STRING  COMMENT '汇总产品持有数_分行'

--    ,sbr_grp_cst_num                DECIMAL COMMENT '支行_企业授信客户数统计'

--    ,sbr_grp_mon_acm_prcp_bal_acml  DECIMAL COMMENT '支行_企业本金余额月日均'

--    ,sbr_grp_actl_start_use_crd_lmt DECIMAL COMMENT '支行_企业本金启用额度'

--    ,rn_sbr_grp                     STRING  COMMENT '排序_支行_企业'

--    ,pd_hld_qty_sum_sbr             STRING  COMMENT '汇总产品持有数_支行'

--    ,tem_grp_cst_num                DECIMAL COMMENT '团队_企业授信客户数统计'

--    ,tem_grp_mon_acm_prcp_bal_acml  DECIMAL COMMENT '团队_企业本金余额月日均'

--    ,tem_grp_actl_start_use_crd_lmt DECIMAL COMMENT '团队_企业本金启用额度'

--    ,rn_tem_grp                     STRING  COMMENT '排序_团队_企业'

--    ,pd_hld_qty_sum_tem             STRING  COMMENT '汇总产品持有数_团队'

--    ,mgr_grp_cst_num                DECIMAL COMMENT '客户经理_企业授信客户数统计'

--    ,mgr_grp_mon_acm_prcp_bal_acml  DECIMAL COMMENT '客户经理_企业本金余额月日均'

--    ,mgr_grp_actl_start_use_crd_lmt DECIMAL COMMENT '客户经理_企业本金启用额度'

--    ,rn_mgr_grp                     STRING  COMMENT '排序_客户经理_企业'

--    ,pd_hld_qty_sum_mgr             STRING  COMMENT '汇总产品持有数_客户经理'

--    ,brc_grp_cst_num2               DECIMAL COMMENT '分行_企业新增授信客户数统计含信用卡'

--    ,sbr_grp_cst_num2               DECIMAL COMMENT '支行_企业新增授信客户数统计含信用卡'

--    ,tem_grp_cst_num2               DECIMAL COMMENT '团队_企业新增授信客户数统计含信用卡'

--    ,mgr_grp_cst_num2               DECIMAL COMMENT '客户经理_企业新增授信客户数统计含信用卡'

--    ,brc_grp_card_cst_num           DECIMAL COMMENT '分行_企业新增信用卡客户数统计'

--    ,sbr_grp_card_cst_num           DECIMAL COMMENT '支行_企业新增信用卡客户数统计'

--    ,tem_grp_card_cst_num           DECIMAL COMMENT '团队_企业新增信用卡客户数统计'

--    ,mgr_grp_card_cst_num           DECIMAL COMMENT '客户经理_企业新增信用卡客户数统计'

--    ,brc_grp_pure_card_cst_num      DECIMAL COMMENT '分行_企业新增纯信用卡客户数统计'

--    ,sbr_grp_pure_card_cst_num      DECIMAL COMMENT '支行_企业新增纯信用卡客户数统计'

--    ,tem_grp_pure_card_cst_num      DECIMAL COMMENT '团队_企业新增纯信用卡客户数统计'

--    ,mgr_grp_pure_card_cst_num      DECIMAL COMMENT '客户经理_企业新增纯信用卡客户数统计'

--    ,brc_grp_ctr_bal                DECIMAL COMMENT '分行_企业新增消费贷款余额'

--    ,sbr_grp_ctr_bal                DECIMAL COMMENT '支行_企业新增消费贷款余额'

--    ,tem_grp_ctr_bal                DECIMAL COMMENT '团队_企业新增消费贷款余额'

--    ,mgr_grp_ctr_bal                DECIMAL COMMENT '客户经理_企业新增消费贷款余额'

--    ,yongxin_rate_mth_avg_brc       DECIMAL COMMENT '月日均用信率_分行'

--    ,pd_hld_qty_avg_brc             DECIMAL COMMENT '客均产品持有数_分行'

--    ,pltbxm_jl_brc                  DECIMAL COMMENT '批量团办项目奖励_分行'

--    ,pd_hld_qty_avg_jcxs_brc        DECIMAL COMMENT '平均产品持有数加成系数_分行'

--    ,yongxin_rate_mth_avg_sbr       DECIMAL COMMENT '月日均用信率_支行'

--    ,pd_hld_qty_avg_sbr             DECIMAL COMMENT '客均产品持有数_支行'

--    ,pltbxm_jl_sbr                  DECIMAL COMMENT '批量团办项目奖励_支行'

--    ,pd_hld_qty_avg_jcxs_sbr        DECIMAL COMMENT '平均产品持有数加成系数_支行'

--    ,yongxin_rate_mth_avg_tem       DECIMAL COMMENT '月日均用信率_团队'

--    ,pd_hld_qty_avg_tem             DECIMAL COMMENT '客均产品持有数_团队'

--    ,pltbxm_jl_tem                  DECIMAL COMMENT '批量团办项目奖励_团队'

--    ,pd_hld_qty_avg_jcxs_tem        DECIMAL COMMENT '平均产品持有数加成系数_团队'

--    ,yongxin_rate_mth_avg_mgr       DECIMAL COMMENT '月日均用信率_客户经理'

--    ,pd_hld_qty_avg_mgr             DECIMAL COMMENT '客均产品持有数_客户经理'

--    ,pltbxm_jl_mgr                  DECIMAL COMMENT '批量团办项目奖励_客户经理'

--    ,pd_hld_qty_avg_jcxs_mgr        DECIMAL COMMENT '平均产品持有数加成系数_客户经理'

--    ,brc_ctr_fenzi                  DECIMAL COMMENT '分行_企业授信金额加权利率分子'

--    ,brc_ctr_fenmu                  DECIMAL COMMENT '分行_企业授信金额加权利率分母'

--    ,sbr_ctr_fenzi                  DECIMAL COMMENT '支行_企业授信金额加权利率分子'

--    ,sbr_ctr_fenmu                  DECIMAL COMMENT '支行_企业授信金额加权利率分母'

--    ,tem_ctr_fenzi                  DECIMAL COMMENT '团队_企业授信金额加权利率分子'

--    ,tem_ctr_fenmu                  DECIMAL COMMENT '团队_企业授信金额加权利率分母'

--    ,mgr_ctr_fenzi                  DECIMAL COMMENT '客户经理_企业授信金额加权利率分子'

--    ,mgr_ctr_fenmu                  DECIMAL COMMENT '客户经理_企业授信金额加权利率分母'

--    ,brc_dbil_fenzi                 DECIMAL COMMENT '分行_企业用信金额加权利率分子'

--    ,brc_dbil_fenmu                 DECIMAL COMMENT '分行_企业用信金额加权利率分母'

--    ,sbr_dbil_fenzi                 DECIMAL COMMENT '支行_企业用信金额加权利率分子'

--    ,sbr_dbil_fenmu                 DECIMAL COMMENT '支行_企业用信金额加权利率分母'

--    ,tem_dbil_fenzi                 DECIMAL COMMENT '团队_企业用信金额加权利率分子'

--    ,tem_dbil_fenmu                 DECIMAL COMMENT '团队_企业用信金额加权利率分母'

--    ,mgr_dbil_fenzi                 DECIMAL COMMENT '客户经理_企业用信金额加权利率分子'

--    ,mgr_dbil_fenmu                 DECIMAL COMMENT '客户经理_企业用信金额加权利率分母'

--    ,brc_aum                        DECIMAL COMMENT '分行_企业aum'

--    ,brc_aum_add                    DECIMAL COMMENT '分行_企业aum_add'

--    ,sbr_aum                        DECIMAL COMMENT '支行_企业aum'

--    ,sbr_aum_add                    DECIMAL COMMENT '支行_企业aum_add'

--    ,tem_aum                        DECIMAL COMMENT '团队_企业aum'

--    ,tem_aum_add                    DECIMAL COMMENT '团队_企业aum_add'

--    ,mgr_aum                        DECIMAL COMMENT '客户经理_企业aum'

--    ,mgr_aum_add                    DECIMAL COMMENT '客户经理_企业aum_add'

--    ,if_jiandang                    STRING  COMMENT '是否建档'

--    ,forml_cst_ind                  STRING  COMMENT '正式客户标识'

--    ,brc_grp_ctr_amt                DECIMAL COMMENT '分行_企业新增消费贷款金额'

--    ,sbr_grp_ctr_amt                DECIMAL COMMENT '支行_企业新增消费贷款金额'

--    ,tem_grp_ctr_amt                DECIMAL COMMENT '团队_企业新增消费贷款金额'

--    ,mgr_grp_ctr_amt                DECIMAL COMMENT '客户经理_企业新增消费贷款金额'

--    ,brc_org_id               STRING  COMMENT '分行层级机构编号'

--    ,sbr_org_id               STRING  COMMENT '支行层级机构编号'

--)

--COMMENT

--'企业团办_SHEET4-企业清单2'

--PARTITIONED BY

--(

--    DT STRING COMMENT '日期分区'

--);



-----新增表字段

-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet4 add  columns

--(grp_org_id               STRING  COMMENT '集团机构编号'

--,cpy_org_id               STRING  COMMENT '法人机构编号'

--);



-----新增表字段

-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet4 add  columns

--(brc_grp_card_cnt               STRING  COMMENT '分行_企业新增信用卡户数'

--,sbr_grp_card_cnt               STRING  COMMENT '支行_企业新增信用卡户数'

--,tem_grp_card_cnt               STRING  COMMENT '团队_企业新增信用卡户数'

--,mgr_grp_card_cnt               STRING  COMMENT '客户经理_企业新增信用卡户数'

--);







INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4 PARTITION (DT = '20250331')

SELECT  distinct  cst_id

        ,cst_nm

        ,prm_mgr_id

        ,prm_mgr_nm

        ,tem_org_id

        ,tem_org_nm

        ,sbr_org_nm

        ,brc_org_nm

        ,ent_cst_id

        ,ent_cst_nm

        ,prm_mgr_id_ent

        ,prm_mgr_nm_ent

        ,tem_org_id_ent

        ,tem_org_nm_ent

        ,sbr_org_nm_ent

        ,brc_org_nm_ent

        ,ctr_amt

        ,actl_start_use_crd_lmt

        ,ctr_bal

        ,mon_acm_prcp_bal_acml

        ,if_loan_xf

        ,efe_crd_cst_ind

        ,efe_dep_cst_ind

        ,efe_chm_cst_ind

        ,efe_insu_cst_ind

        ,efe_fnd_cst_ind

        ,efe_nob_met_cst_ind

        ,ctr_bal ctr_bal_all

        ,dep_bal

        ,chm_bal

        ,dep_bal_add

        ,chm_bal_add

        ,cst_val_grd

        ,cprh_contri_cur_year

        ,loan_start_dt

        ,crd_isu_dt

        ,dep_opn_dt

        ,chm_trx_dt

        ,insu_dt

        ,fund_dt

        ,nob_dt

        ,brc_grp_cst_num

        ,brc_grp_mon_acm_prcp_bal_acml

        ,brc_grp_actl_start_use_crd_lmt

        ,rn_brc_grp

        ,pd_hld_qty_sum_brc

        ,sbr_grp_cst_num                       --支行_企业授信客户数统计

        ,sbr_grp_mon_acm_prcp_bal_acml         --支行_企业本金余额月日均

        ,sbr_grp_actl_start_use_crd_lmt        --支行_企业本金启用额度

        ,rn_sbr_grp                            --排序_支行_企业

        ,pd_hld_qty_sum_sbr                    --汇总产品持有数_支行

        ,tem_grp_cst_num                       --团队_企业授信客户数统计

        ,tem_grp_mon_acm_prcp_bal_acml         --团队_企业本金余额月日均

        ,tem_grp_actl_start_use_crd_lmt        --团队_企业本金启用额度

        ,rn_tem_grp                            --排序_团队_企业

        ,pd_hld_qty_sum_tem                    --汇总产品持有数_团队

        ,mgr_grp_cst_num                       --客户经理_企业授信客户数统计

        ,mgr_grp_mon_acm_prcp_bal_acml         --客户经理_企业本金余额月日均

        ,mgr_grp_actl_start_use_crd_lmt        --客户经理_企业本金启用额度

        ,rn_mgr_grp --排序_客户经理_企业

        ,pd_hld_qty_sum_mgr --汇总产品持有数_客户经理

        ,brc_grp_cst_num2 --分行_企业新增授信客户数统计含信用卡

        ,sbr_grp_cst_num2 --支行_企业新增授信客户数统计含信用卡

        ,tem_grp_cst_num2 --团队_企业新增授信客户数统计含信用卡

        ,mgr_grp_cst_num2 --客户经理_企业新增授信客户数统计含信用卡

        ,brc_grp_card_cst_num --分行_企业新增信用卡客户数统计

        ,sbr_grp_card_cst_num --支行_企业新增信用卡客户数统计

        ,tem_grp_card_cst_num --团队_企业新增信用卡客户数统计

        ,mgr_grp_card_cst_num --客户经理_企业新增信用卡客户数统计

        ,brc_grp_pure_card_cst_num --分行_企业新增纯信用卡客户数统计

        ,sbr_grp_pure_card_cst_num --支行_企业新增纯信用卡客户数统计

        ,tem_grp_pure_card_cst_num --团队_企业新增纯信用卡客户数统计

        ,mgr_grp_pure_card_cst_num --客户经理_企业新增纯信用卡客户数统计

        ,brc_grp_ctr_bal --分行_企业新增消费贷款余额

        ,sbr_grp_ctr_bal --支行_企业新增消费贷款余额

        ,tem_grp_ctr_bal --团队_企业新增消费贷款余额

        ,mgr_grp_ctr_bal --客户经理_企业新增消费贷款余额

        ,CASE

           WHEN a.brc_grp_actl_start_use_crd_lmt > 0 THEN a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt

           ELSE 0

         END yongxin_rate_mth_avg_brc

        ,CASE

           WHEN a.brc_grp_cst_num > 0 THEN a.pd_hld_qty_sum_brc / a.brc_grp_cst_num

           ELSE 0

         END pd_hld_qty_avg_brc

        ,CASE

           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt = 0     THEN 200

           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt < 0.10  THEN 500

           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt < 0.30  THEN 800

           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt < 0.50  THEN 1000

           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1    THEN 1200

           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt = 0    THEN 300

           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt < 0.10 THEN 600

           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt < 0.30 THEN 1500

           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt < 0.50 THEN 2000 --1011update

           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1   THEN 2400 --1011update

           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt = 0    THEN 400

           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt < 0.10 THEN 800

           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt < 0.30 THEN 2000

           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt < 0.50 THEN 4000 --1011update

           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1   THEN 4500 --1011update

           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt = 0                               THEN 500

           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt < 0.10                            THEN 1000

           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt < 0.30                            THEN 3000

           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt < 0.50                            THEN 6000 --1011update

           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1                              THEN 7000 --1011update

           ELSE 0

         END pltbxm_jl_brc --批量团办项目奖励_分行

        ,CASE

           WHEN a.brc_grp_cst_num > 0 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num >= 1 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num < 1.2   THEN 1

           WHEN a.brc_grp_cst_num > 0 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num >= 1.2 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num < 1.5 THEN 1.2

           WHEN a.brc_grp_cst_num > 0 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num >= 1.5 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num < 2   THEN 1.5

           WHEN a.brc_grp_cst_num > 0 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num >= 2                                                      THEN 1.8

           ELSE 0

         END pd_hld_qty_avg_jcxs_brc --平均产品持有数加成系数_分行

        ,CASE

           WHEN a.sbr_grp_actl_start_use_crd_lmt > 0 THEN a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt

           ELSE 0

         END yongxin_rate_mth_avg_sbr

        ,CASE

           WHEN a.sbr_grp_cst_num > 0 THEN a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num

           ELSE 0

         END pd_hld_qty_avg_sbr

        ,CASE

           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt = 0     THEN 200

           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt < 0.10  THEN 500

           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt < 0.30  THEN 800

           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt < 0.50  THEN 1000

           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1    THEN 1200

           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt = 0    THEN 300

           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt < 0.10 THEN 600

           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt < 0.30 THEN 1500

           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt < 0.50 THEN 2000

           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1   THEN 2400

           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt = 0    THEN 400

           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt < 0.10 THEN 800

           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt < 0.30 THEN 2000

           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt < 0.50 THEN 4000

           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1   THEN 4500

           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt = 0                               THEN 500

           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt < 0.10                            THEN 1000

           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt < 0.30                            THEN 3000

           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt < 0.50                            THEN 6000

           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1                              THEN 7000

           ELSE 0

         END pltbxm_jl_sbr --批量团办项目奖励_支行

        ,CASE

           WHEN a.sbr_grp_cst_num > 0 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num >= 1 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num < 1.2   THEN 1

           WHEN a.sbr_grp_cst_num > 0 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num >= 1.2 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num < 1.5 THEN 1.2

           WHEN a.sbr_grp_cst_num > 0 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num >= 1.5 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num < 2   THEN 1.5

           WHEN a.sbr_grp_cst_num > 0 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num >= 2                                                      THEN 1.8

           ELSE 0

         END pd_hld_qty_avg_jcxs_sbr --平均产品持有数加成系数_支行

        ,CASE

           WHEN a.tem_grp_actl_start_use_crd_lmt > 0 THEN a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt

           ELSE 0

         END yongxin_rate_mth_avg_tem

        ,CASE

           WHEN a.tem_grp_cst_num > 0 THEN a.pd_hld_qty_sum_tem / a.tem_grp_cst_num

           ELSE 0

         END pd_hld_qty_avg_tem

        ,CASE

           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt = 0     THEN 200

           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt < 0.10  THEN 500

           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt < 0.30  THEN 800

           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt < 0.50  THEN 1000

           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1    THEN 1200

           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt = 0    THEN 300

           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt < 0.10 THEN 600

           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt < 0.30 THEN 1500

           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt < 0.50 THEN 2000

           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1   THEN 2400

           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt = 0    THEN 400

           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt < 0.10 THEN 800

           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt < 0.30 THEN 2000

           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt < 0.50 THEN 4000

           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1   THEN 4500

           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt = 0                               THEN 500

           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt < 0.10                            THEN 1000

           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt < 0.30                            THEN 3000

           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt < 0.50                            THEN 6000

           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1                              THEN 7000

           ELSE 0

         END pltbxm_jl_tem --批量团办项目奖励_团队

        ,CASE

           WHEN a.tem_grp_cst_num > 0 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num >= 1 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num < 1.2   THEN 1

           WHEN a.tem_grp_cst_num > 0 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num >= 1.2 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num < 1.5 THEN 1.2

           WHEN a.tem_grp_cst_num > 0 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num >= 1.5 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num < 2   THEN 1.5

           WHEN a.tem_grp_cst_num > 0 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num >= 2                                                      THEN 1.8

           ELSE 0

         END pd_hld_qty_avg_jcxs_tem --平均产品持有数加成系数_团队

        ,CASE

           WHEN a.mgr_grp_actl_start_use_crd_lmt > 0 THEN a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt

           ELSE 0

         END yongxin_rate_mth_avg_mgr

        ,CASE

           WHEN a.mgr_grp_cst_num > 0 THEN a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num

           ELSE 0

         END pd_hld_qty_avg_mgr

        ,CASE

           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt = 0     THEN 200

           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt < 0.10  THEN 500

           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt < 0.30  THEN 800

           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt < 0.50  THEN 1000

           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1    THEN 1200

           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt = 0    THEN 300

           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt < 0.10 THEN 600

           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt < 0.30 THEN 1500

           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt < 0.50 THEN 2000

           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1   THEN 2400

           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt = 0    THEN 400

           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt < 0.10 THEN 800

           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt < 0.30 THEN 2000

           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt < 0.50 THEN 4000

           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1   THEN 4500

           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt = 0                               THEN 500

           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt < 0.10                            THEN 1000

           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt < 0.30                            THEN 3000

           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt < 0.50                            THEN 6000

           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1                              THEN 7000

           ELSE 0

         END pltbxm_jl_mgr --批量团办项目奖励_客户经理

        ,CASE

           WHEN a.mgr_grp_cst_num > 0 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num >= 1 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num < 1.2   THEN 1

           WHEN a.mgr_grp_cst_num > 0 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num >= 1.2 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num < 1.5 THEN 1.2

           WHEN a.mgr_grp_cst_num > 0 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num >= 1.5 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num < 2   THEN 1.5

           WHEN a.mgr_grp_cst_num > 0 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num >= 2                                                      THEN 1.8

           ELSE 0

         END pd_hld_qty_avg_jcxs_mgr --平均产品持有数加成系数_客户经理

        ,brc_ctr_fenzi --分行_企业授信金额加权利率分子

        ,brc_ctr_fenmu --分行_企业授信金额加权利率分母

        ,sbr_ctr_fenzi --支行_企业授信金额加权利率分子

        ,sbr_ctr_fenmu --支行_企业授信金额加权利率分母

        ,tem_ctr_fenzi --团队_企业授信金额加权利率分子

        ,tem_ctr_fenmu --团队_企业授信金额加权利率分母

        ,mgr_ctr_fenzi --客户经理_企业授信金额加权利率分子

        ,mgr_ctr_fenmu --客户经理_企业授信金额加权利率分母

        ,brc_dbil_fenzi --分行_企业用信金额加权利率分子

        ,brc_dbil_fenmu --分行_企业用信金额加权利率分母

        ,sbr_dbil_fenzi --支行_企业用信金额加权利率分子

        ,sbr_dbil_fenmu --支行_企业用信金额加权利率分母

        ,tem_dbil_fenzi --团队_企业用信金额加权利率分子

        ,tem_dbil_fenmu --团队_企业用信金额加权利率分母

        ,mgr_dbil_fenzi --客户经理_企业用信金额加权利率分子

        ,mgr_dbil_fenmu --客户经理_企业用信金额加权利率分母

        ,brc_aum --分行_企业aum

        ,brc_aum_add --分行_企业aum_add

        ,sbr_aum --支行_企业aum

        ,sbr_aum_add --支行_企业aum_add

        ,tem_aum --团队_企业aum

        ,tem_aum_add --团队_企业aum_add

        ,mgr_aum --客户经理_企业aum

        ,mgr_aum_add --客户经理_企业aum_add

        ,if_jiandang

        ,forml_cst_ind

        ,brc_grp_ctr_amt

        ,sbr_grp_ctr_amt

        ,tem_grp_ctr_amt

        ,mgr_grp_ctr_amt

		,brc_org_id               --分行层级机构编号

        ,sbr_org_id               --支行层级机构编号

		,grp_org_id               --集团机构编号

		,cpy_org_id               --法人机构编号

		,brc_grp_card_cnt         --分行_企业新增信用卡户数

		,sbr_grp_card_cnt         --支行_企业新增信用卡户数

		,tem_grp_card_cnt         --团队_企业新增信用卡户数

		,mgr_grp_card_cnt         --客户经理_企业新增信用卡户数

FROM    (

            SELECT  T1.cst_id

                    ,T1.cst_nm

                    ,T1.prm_mgr_id

                    ,T1.prm_mgr_nm

                    ,T1.tem_org_id

                    ,T1.tem_org_nm

                    ,T1.sbr_org_nm

                    ,T1.brc_org_nm

				          	,T1.brc_org_id               --分行层级机构编号

                    ,T1.sbr_org_id               --支行层级机构编号

				            ,T1.grp_org_id               --集团机构编号

		                ,T1.cpy_org_id               --法人机构编号

                    ,T1.ent_cst_id

                    ,T1.ent_cst_nm

                    ,T1.prm_mgr_id_ent

                    ,T1.prm_mgr_nm_ent

                    ,T1.tem_org_id_ent

                    ,T1.tem_org_nm_ent

                    ,T1.sbr_org_nm_ent

                    ,T1.brc_org_nm_ent

                    ,T1.ctr_amt

                    ,T1.actl_start_use_crd_lmt

                    ,T1.ctr_bal

                    ,T1.mon_acm_prcp_bal_acml

                    ,T1.if_loan_xf

                    ,T1.efe_crd_cst_ind

                    ,T1.efe_dep_cst_ind

                    ,T1.efe_chm_cst_ind

                    ,T1.efe_insu_cst_ind

                    ,T1.efe_fnd_cst_ind

                    ,T1.efe_nob_met_cst_ind

                    ,T1.ctr_bal ctr_bal_all

                    ,T1.dep_bal

                    ,T1.chm_bal

                    ,T1.dep_bal_add

                    ,T1.chm_bal_add

                    ,T1.cst_val_grd

                    ,T1.cprh_contri_cur_year

                    ,T1.loan_start_dt

                    ,T1.crd_isu_dt

                    ,T1.dep_opn_dt

                    ,T1.chm_trx_dt

                    ,T1.insu_dt

                    ,T1.fund_dt

                    ,T1.nob_dt

                    ,count(DISTINCT CASE

                                      WHEN t1.ctr_amt > 0 THEN t1.cst_id

                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) brc_grp_cst_num --分行_企业授信客户数统计

                    ,coalesce(sum(t1.mon_acm_prcp_bal_acml) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_mon_acm_prcp_bal_acml --分行_企业本金余额月日均

                    ,coalesce(sum(t1.actl_start_use_crd_lmt) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_actl_start_use_crd_lmt --分行_企业本金启用额度

                    ,row_number() OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) rn_brc_grp --排序_分行_企业

                    ,sum(CASE

                           WHEN coalesce(t1.ctr_amt, 0) > 0 THEN 1 + T1.efe_crd_cst_ind + T1.efe_dep_cst_ind + T1.efe_chm_cst_ind + T1.efe_insu_cst_ind + T1.efe_fnd_cst_ind + T1.efe_nob_met_cst_ind

                           ELSE 0

                         END) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) pd_hld_qty_sum_brc --汇总产品持有数_分行

                    ,count(DISTINCT CASE

                                      WHEN t1.ctr_amt > 0 THEN t1.cst_id

                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) sbr_grp_cst_num --支行_企业授信客户数统计

                    ,coalesce(sum(t1.mon_acm_prcp_bal_acml) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_mon_acm_prcp_bal_acml --支行_企业本金余额月日均

                    ,coalesce(sum(t1.actl_start_use_crd_lmt) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_actl_start_use_crd_lmt --支行_企业本金启用额度

                    ,row_number() OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) rn_sbr_grp --排序_支行_企业

                    ,sum(CASE

                           WHEN coalesce(t1.ctr_amt, 0) > 0 THEN 1 + T1.efe_crd_cst_ind + T1.efe_dep_cst_ind + T1.efe_chm_cst_ind + T1.efe_insu_cst_ind + T1.efe_fnd_cst_ind + T1.efe_nob_met_cst_ind

                           ELSE 0

                         END) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) pd_hld_qty_sum_sbr --汇总产品持有数_支行

                    ,count(DISTINCT CASE

                                      WHEN t1.ctr_amt > 0 THEN t1.cst_id

                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) tem_grp_cst_num --团队_企业授信客户数统计

                    ,coalesce(sum(t1.mon_acm_prcp_bal_acml) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_mon_acm_prcp_bal_acml --团队_企业本金余额月日均

                    ,coalesce(sum(t1.actl_start_use_crd_lmt) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_actl_start_use_crd_lmt --团队_企业本金启用额度

                    ,row_number() OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) rn_tem_grp --排序_团队_企业

                    ,sum(CASE

                           WHEN coalesce(t1.ctr_amt, 0) > 0 THEN 1 + T1.efe_crd_cst_ind + T1.efe_dep_cst_ind + T1.efe_chm_cst_ind + T1.efe_insu_cst_ind + T1.efe_fnd_cst_ind + T1.efe_nob_met_cst_ind

                           ELSE 0

                         END) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) pd_hld_qty_sum_tem --汇总产品持有数_团队

                    ,count(DISTINCT CASE

                                      WHEN t1.ctr_amt > 0 THEN t1.cst_id

                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) mgr_grp_cst_num --客户经理_企业授信客户数统计

                    ,coalesce(sum(t1.mon_acm_prcp_bal_acml) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_mon_acm_prcp_bal_acml --客户经理_企业本金余额月日均

                    ,coalesce(sum(t1.actl_start_use_crd_lmt) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_actl_start_use_crd_lmt --客户经理_企业本金启用额度

                    ,row_number() OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) rn_mgr_grp --排序_客户经理_企业

                    ,sum(CASE

                           WHEN coalesce(t1.ctr_amt, 0) > 0 THEN 1 + T1.efe_crd_cst_ind + T1.efe_dep_cst_ind + T1.efe_chm_cst_ind + T1.efe_insu_cst_ind + T1.efe_fnd_cst_ind + T1.efe_nob_met_cst_ind

                           ELSE 0

                         END) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) pd_hld_qty_sum_mgr --汇总产品持有数_客户经理

                    ,count(DISTINCT t1.cst_id) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) brc_grp_cst_num2 --分行_企业新增授信客户数统计含信用卡

                    ,count(DISTINCT t1.cst_id) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) sbr_grp_cst_num2 --支行_企业新增授信客户数统计含信用卡

                    ,count(DISTINCT t1.cst_id) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) tem_grp_cst_num2 --团队_企业新增授信客户数统计含信用卡

                    ,count(DISTINCT t1.cst_id) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) mgr_grp_cst_num2 --客户经理_企业新增授信客户数统计含信用卡

                    ,coalesce(t2.brc_grp_card_cst_num, 0) brc_grp_card_cst_num --分行_企业新增信用卡客户数统计

                    ,coalesce(t2.sbr_grp_card_cst_num, 0) sbr_grp_card_cst_num --支行_企业新增信用卡客户数统计

                    ,coalesce(t2.tem_grp_card_cst_num, 0) tem_grp_card_cst_num --团队_企业新增信用卡客户数统计

                    ,coalesce(t2.mgr_grp_card_cst_num, 0) mgr_grp_card_cst_num --客户经理_企业新增信用卡客户数统计

                    ,count(DISTINCT CASE

                                      WHEN coalesce(t1.ctr_amt, 0) = 0 AND t1.efe_crd_cst_ind = '1' THEN t1.cst_id

                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) brc_grp_pure_card_cst_num --分行_企业新增纯信用卡客户数统计

                    ,count(DISTINCT CASE

                                      WHEN coalesce(t1.ctr_amt, 0) = 0 AND t1.efe_crd_cst_ind = '1' THEN t1.cst_id

                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) sbr_grp_pure_card_cst_num --支行_企业新增纯信用卡客户数统计

                    ,count(DISTINCT CASE

                                      WHEN coalesce(t1.ctr_amt, 0) = 0 AND t1.efe_crd_cst_ind = '1' THEN t1.cst_id

                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) tem_grp_pure_card_cst_num --团队_企业新增纯信用卡客户数统计

                    ,count(DISTINCT CASE

                                      WHEN coalesce(t1.ctr_amt, 0) = 0 AND t1.efe_crd_cst_ind = '1' THEN t1.cst_id

                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) mgr_grp_pure_card_cst_num --客户经理_企业新增纯信用卡客户数统计

                    ,coalesce(sum(t1.ctr_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_ctr_bal --分行_企业新增消费贷款余额

                    ,coalesce(sum(t1.ctr_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_ctr_bal --支行_企业新增消费贷款余额

                    ,coalesce(sum(t1.ctr_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_ctr_bal --团队_企业新增消费贷款余额

                    ,coalesce(sum(t1.ctr_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_ctr_bal  --客户经理_企业新增消费贷款余额

                    --20231211update

                    ,coalesce(sum(t1.ctr_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_ctr_fenzi --分行_企业授信金额加权利率分子

                    ,coalesce(sum(t1.ctr_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_ctr_fenmu --分行_企业授信金额加权利率分母

                    ,coalesce(sum(t1.ctr_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_ctr_fenzi --支行_企业授信金额加权利率分子

                    ,coalesce(sum(t1.ctr_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_ctr_fenmu --支行_企业授信金额加权利率分母

                    ,coalesce(sum(t1.ctr_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_ctr_fenzi --团队_企业授信金额加权利率分子

                    ,coalesce(sum(t1.ctr_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_ctr_fenmu --团队_企业授信金额加权利率分母

                    ,coalesce(sum(t1.ctr_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_ctr_fenzi --客户经理_企业授信金额加权利率分子

                    ,coalesce(sum(t1.ctr_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_ctr_fenmu --客户经理_企业授信金额加权利率分母

                    ,coalesce(sum(t1.dbil_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_dbil_fenzi --分行_企业用信金额加权利率分子

                    ,coalesce(sum(t1.dbil_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_dbil_fenmu --分行_企业用信金额加权利率分母

                    ,coalesce(sum(t1.dbil_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_dbil_fenzi --支行_企业用信金额加权利率分子

                    ,coalesce(sum(t1.dbil_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_dbil_fenmu --支行_企业用信金额加权利率分母

                    ,coalesce(sum(t1.dbil_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_dbil_fenzi --团队_企业用信金额加权利率分子

                    ,coalesce(sum(t1.dbil_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_dbil_fenmu --团队_企业用信金额加权利率分母

                    ,coalesce(sum(t1.dbil_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_dbil_fenzi --客户经理_企业用信金额加权利率分子

                    ,coalesce(sum(t1.dbil_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_dbil_fenmu --客户经理_企业用信金额加权利率分母

                    ,coalesce(sum(t1.aum_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_aum --分行_企业aum

                    ,coalesce(sum(t1.aum_bal_add) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_aum_add --分行_企业aum_add

                    ,coalesce(sum(t1.aum_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_aum --支行_企业aum

                    ,coalesce(sum(t1.aum_bal_add) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_aum_add --支行_企业aum_add

                    ,coalesce(sum(t1.aum_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_aum --团队_企业aum

                    ,coalesce(sum(t1.aum_bal_add) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_aum_add --团队_企业aum_add

                    ,coalesce(sum(t1.aum_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_aum --客户经理_企业aum

                    ,coalesce(sum(t1.aum_bal_add) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_aum_add --客户经理_企业aum_add

                    , CASE WHEN t1 . ent_cst_id <> '-' THEN '1'

                    ELSE '0'

                    END as if_jiandang

                    , CASE WHEN t1 . ent_cst_id = '-'  THEN '0'

                    ELSE decode ( t3 . forml_cst_ind , '1' , 1 , '' , 0 )

                    END as forml_cst_ind --是否正式客户标识

                    ,coalesce(sum(t1.ctr_amt) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_ctr_amt --分行_企业新增消费贷款金额

                    ,coalesce(sum(t1.ctr_amt) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_ctr_amt --支行_企业新增消费贷款金额

                    ,coalesce(sum(t1.ctr_amt) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_ctr_amt --团队_企业新增消费贷款金额

                    ,coalesce(sum(t1.ctr_amt) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_ctr_amt --客户经理_企业新增消费贷款金额

					,coalesce(sum(t1.card_cnt) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_card_cnt --分行_企业新增信用卡户数

                    ,coalesce(sum(t1.card_cnt) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_card_cnt --支行_企业新增信用卡户数

                    ,coalesce(sum(t1.card_cnt) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_card_cnt --团队_企业新增信用卡户数

                    ,coalesce(sum(t1.card_cnt) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_card_cnt --客户经理_企业新增信用卡户数

            FROM    lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet2 t1

            LEFT JOIN    (

                             SELECT  cst_id

                                     ,ent_cst_nm

                                     ,brc_org_nm

                                     ,sbr_org_nm

                                     ,tem_org_nm

                                     ,count(DISTINCT cst_id) OVER ( PARTITION BY ent_cst_nm , brc_org_nm ) brc_grp_card_cst_num --分行_企业新增信用卡客户数统计

                                     ,count(DISTINCT cst_id) OVER ( PARTITION BY ent_cst_nm , sbr_org_nm ) sbr_grp_card_cst_num --支行_企业新增信用卡客户数统计

                                     ,count(DISTINCT cst_id) OVER ( PARTITION BY ent_cst_nm , tem_org_nm ) tem_grp_card_cst_num --团队_企业新增信用卡客户数统计

                                     ,count(DISTINCT cst_id) OVER ( PARTITION BY ent_cst_nm , prm_mgr_id ) mgr_grp_card_cst_num --客户经理_企业新增信用卡客户数统计

                             FROM    lab_bigdata_dev.phjrb_ys_qytb_cst_info_crd_tmp_new   --新增信用卡客户信息表

							 where  dt = '20250331'

                         ) t2

            ON      t1.cst_id = t2.cst_id

            AND     t1.brc_org_nm = t2.brc_org_nm

            AND     t1.sbr_org_nm = t2.sbr_org_nm

            AND     t1.tem_org_nm = t2.tem_org_nm

            LEFT JOIN    adm_pub.adm_csm_cbas_mng_inf_dd t3 --客户集市-客户基础-客户管户信息

            ON      t1.ent_cst_id = t3.cst_id

            AND     t3.dt = '20250331'

            WHERE   t1.dt = '20250331'

        ) a;





--SHEET4 企业清单和客户清单合并&mdash;&mdash;修改



--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp PURGE;

--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp

--(

--    cst_id                               STRING  COMMENT '个人客户号'

--    ,cst_nm                              STRING  COMMENT '个人客户名'

--    ,prm_mgr_id                          STRING  COMMENT '主管户客户经理工号'

--    ,prm_mgr_nm                          STRING  COMMENT '主管户客户经理名称'

--    ,tem_org_id                          STRING  COMMENT '团队机构号'

--    ,tem_org_nm                          STRING  COMMENT '团队机构名称'

--    ,sbr_org_nm                          STRING  COMMENT '支行名称'

--    ,brc_org_nm                          STRING  COMMENT '分行名称'

--    ,ent_cst_id                          STRING  COMMENT '企业客户号'

--    ,ent_cst_nm                          STRING  COMMENT '企业客户名'

--    ,prm_mgr_id_ent                      STRING  COMMENT '企业主管户客户经理工号'

--    ,prm_mgr_nm_ent                      STRING  COMMENT '企业主管户客户经理名称'

--    ,tem_org_id_ent                      STRING  COMMENT '企业主管团队机构号'

--    ,tem_org_nm_ent                      STRING  COMMENT '企业主管团队机构名称'

--    ,sbr_org_nm_ent                      STRING  COMMENT '企业主管支行名称'

--    ,brc_org_nm_ent                      STRING  COMMENT '企业主管分行名称'

--    ,ctr_amt                             DECIMAL COMMENT '新增消费贷款合同金额合计'

--    ,actl_start_use_crd_lmt              DECIMAL COMMENT '新增消费贷款启用额度合计'

--    ,ctr_bal                             DECIMAL COMMENT '新增消费贷款合同余额合计'

--    ,mon_acm_prcp_bal_acml               DECIMAL COMMENT '本金余额月日均'

--    ,if_loan_xf                          STRING  COMMENT '是否持有消费贷款'

--    ,efe_crd_cst_ind                     STRING  COMMENT '是否有效信用卡户'

--    ,efe_dep_cst_ind                     STRING  COMMENT '是否有效存款户'

--    ,efe_chm_cst_ind                     STRING  COMMENT '是否有效理财户'

--    ,efe_insu_cst_ind                    STRING  COMMENT '是否有效保险户'

--    ,efe_fnd_cst_ind                     STRING  COMMENT '是否有效基金户'

--    ,efe_nob_met_cst_ind                 STRING  COMMENT '是否有效贵金属户'

--    ,ctr_bal_all                         DECIMAL COMMENT '消费贷款合同余额总计'

--    ,dep_bal                             DECIMAL COMMENT '存款余额'

--    ,chm_bal                             DECIMAL COMMENT '理财余额'

--    ,dep_bal_add                         DECIMAL COMMENT '新增存款余额'

--    ,chm_bal_add                         DECIMAL COMMENT '新增理财余额'

--    ,cst_val_grd                         DECIMAL COMMENT '客户价值等级'

--    ,cprh_contri_cur_year                DECIMAL COMMENT '当年客户价值'

--    ,loan_start_dt                       STRING  COMMENT '最早消费贷款开始日期'

--    ,crd_isu_dt                          STRING  COMMENT '最早信用卡发卡日期'

--    ,dep_opn_dt                          STRING  COMMENT '最早存款开户日期'

--    ,chm_trx_dt                          STRING  COMMENT '最早购买理财日期'

--    ,insu_dt                             STRING  COMMENT '最早保险投保日期'

--    ,fund_dt                             STRING  COMMENT '最早购买基金日期'

--    ,nob_dt                              STRING  COMMENT '最早购买贵金属日期'

--    ,brc_grp_cst_num                     DECIMAL COMMENT '分行_企业授信客户数统计'

--    ,brc_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '分行_企业本金余额月日均'

--    ,brc_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '分行_企业本金启用额度'

--    ,rn_brc_grp                          STRING  COMMENT '排序_分行_企业'

--    ,pd_hld_qty_sum_brc                  STRING  COMMENT '汇总产品持有数_分行'

--    ,sbr_grp_cst_num                     DECIMAL COMMENT '支行_企业授信客户数统计'

--    ,sbr_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '支行_企业本金余额月日均'

--    ,sbr_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '支行_企业本金启用额度'

--    ,rn_sbr_grp                          STRING  COMMENT '排序_支行_企业'

--    ,pd_hld_qty_sum_sbr                  STRING  COMMENT '汇总产品持有数_支行'

--    ,tem_grp_cst_num                     DECIMAL COMMENT '团队_企业授信客户数统计'

--    ,tem_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '团队_企业本金余额月日均'

--    ,tem_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '团队_企业本金启用额度'

--    ,rn_tem_grp                          STRING  COMMENT '排序_团队_企业'

--    ,pd_hld_qty_sum_tem                  STRING  COMMENT '汇总产品持有数_团队'

--    ,mgr_grp_cst_num                     DECIMAL COMMENT '客户经理_企业授信客户数统计'

--    ,mgr_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '客户经理_企业本金余额月日均'

--    ,mgr_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '客户经理_企业本金启用额度'

--    ,rn_mgr_grp                          STRING  COMMENT '排序_客户经理_企业'

--    ,pd_hld_qty_sum_mgr                  STRING  COMMENT '汇总产品持有数_客户经理'

--    ,brc_grp_cst_num2                    DECIMAL COMMENT '分行_企业新增授信客户数统计含信用卡'

--    ,sbr_grp_cst_num2                    DECIMAL COMMENT '支行_企业新增授信客户数统计含信用卡'

--    ,tem_grp_cst_num2                    DECIMAL COMMENT '团队_企业新增授信客户数统计含信用卡'

--    ,mgr_grp_cst_num2                    DECIMAL COMMENT '客户经理_企业新增授信客户数统计含信用卡'

--    ,brc_grp_card_cst_num                DECIMAL COMMENT '分行_企业新增信用卡客户数统计'

--    ,sbr_grp_card_cst_num                DECIMAL COMMENT '支行_企业新增信用卡客户数统计'

--    ,tem_grp_card_cst_num                DECIMAL COMMENT '团队_企业新增信用卡客户数统计'

--    ,mgr_grp_card_cst_num                DECIMAL COMMENT '客户经理_企业新增信用卡客户数统计'

--    ,brc_grp_pure_card_cst_num           DECIMAL COMMENT '分行_企业新增纯信用卡客户数统计'

--    ,sbr_grp_pure_card_cst_num           DECIMAL COMMENT '支行_企业新增纯信用卡客户数统计'

--    ,tem_grp_pure_card_cst_num           DECIMAL COMMENT '团队_企业新增纯信用卡客户数统计'

--    ,mgr_grp_pure_card_cst_num           DECIMAL COMMENT '客户经理_企业新增纯信用卡客户数统计'

--    ,brc_grp_ctr_bal                     DECIMAL COMMENT '分行_企业新增消费贷款余额'

--    ,sbr_grp_ctr_bal                     DECIMAL COMMENT '支行_企业新增消费贷款余额'

--    ,tem_grp_ctr_bal                     DECIMAL COMMENT '团队_企业新增消费贷款余额'

--    ,mgr_grp_ctr_bal                     DECIMAL COMMENT '客户经理_企业新增消费贷款余额'

--    ,yongxin_rate_mth_avg_brc            DECIMAL COMMENT '月日均用信率_分行'

--    ,pd_hld_qty_avg_brc                  DECIMAL COMMENT '客均产品持有数_分行'

--    ,pltbxm_jl_brc                       DECIMAL COMMENT '批量团办项目奖励_分行'

--    ,pd_hld_qty_avg_jcxs_brc             DECIMAL COMMENT '平均产品持有数加成系数_分行'

--    ,yongxin_rate_mth_avg_sbr            DECIMAL COMMENT '月日均用信率_支行'

--    ,pd_hld_qty_avg_sbr                  DECIMAL COMMENT '客均产品持有数_支行'

--    ,pltbxm_jl_sbr                       DECIMAL COMMENT '批量团办项目奖励_支行'

--    ,pd_hld_qty_avg_jcxs_sbr             DECIMAL COMMENT '平均产品持有数加成系数_支行'

--    ,yongxin_rate_mth_avg_tem            DECIMAL COMMENT '月日均用信率_团队'

--    ,pd_hld_qty_avg_tem                  DECIMAL COMMENT '客均产品持有数_团队'

--    ,pltbxm_jl_tem                       DECIMAL COMMENT '批量团办项目奖励_团队'

--    ,pd_hld_qty_avg_jcxs_tem             DECIMAL COMMENT '平均产品持有数加成系数_团队'

--    ,yongxin_rate_mth_avg_mgr            DECIMAL COMMENT '月日均用信率_客户经理'

--    ,pd_hld_qty_avg_mgr                  DECIMAL COMMENT '客均产品持有数_客户经理'

--    ,pltbxm_jl_mgr                       DECIMAL COMMENT '批量团办项目奖励_客户经理'

--    ,pd_hld_qty_avg_jcxs_mgr             DECIMAL COMMENT '平均产品持有数加成系数_客户经理'

--    ,brc_ctr_fenzi                       DECIMAL COMMENT '分行_企业授信金额加权利率分子'

--    ,brc_ctr_fenmu                       DECIMAL COMMENT '分行_企业授信金额加权利率分母'

--    ,sbr_ctr_fenzi                       DECIMAL COMMENT '支行_企业授信金额加权利率分子'

--    ,sbr_ctr_fenmu                       DECIMAL COMMENT '支行_企业授信金额加权利率分母'

--    ,tem_ctr_fenzi                       DECIMAL COMMENT '团队_企业授信金额加权利率分子'

--    ,tem_ctr_fenmu                       DECIMAL COMMENT '团队_企业授信金额加权利率分母'

--    ,mgr_ctr_fenzi                       DECIMAL COMMENT '客户经理_企业授信金额加权利率分子'

--    ,mgr_ctr_fenmu                       DECIMAL COMMENT '客户经理_企业授信金额加权利率分母'

--    ,brc_dbil_fenzi                      DECIMAL COMMENT '分行_企业用信金额加权利率分子'

--    ,brc_dbil_fenmu                      DECIMAL COMMENT '分行_企业用信金额加权利率分母'

--    ,sbr_dbil_fenzi                      DECIMAL COMMENT '支行_企业用信金额加权利率分子'

--    ,sbr_dbil_fenmu                      DECIMAL COMMENT '支行_企业用信金额加权利率分母'

--    ,tem_dbil_fenzi                      DECIMAL COMMENT '团队_企业用信金额加权利率分子'

--    ,tem_dbil_fenmu                      DECIMAL COMMENT '团队_企业用信金额加权利率分母'

--    ,mgr_dbil_fenzi                      DECIMAL COMMENT '客户经理_企业用信金额加权利率分子'

--    ,mgr_dbil_fenmu                      DECIMAL COMMENT '客户经理_企业用信金额加权利率分母'

--    ,brc_aum                             DECIMAL COMMENT '分行_企业aum'

--    ,brc_aum_add                         DECIMAL COMMENT '分行_企业aum_add'

--    ,sbr_aum                             DECIMAL COMMENT '支行_企业aum'

--    ,sbr_aum_add                         DECIMAL COMMENT '支行_企业aum_add'

--    ,tem_aum                             DECIMAL COMMENT '团队_企业aum'

--    ,tem_aum_add                         DECIMAL COMMENT '团队_企业aum_add'

--    ,mgr_aum                             DECIMAL COMMENT '客户经理_企业aum'

--    ,mgr_aum_add                         DECIMAL COMMENT '客户经理_企业aum_add'

--    ,if_jiandang                         STRING  COMMENT '是否建档'

--    ,forml_cst_ind                       STRING  COMMENT '正式客户标识'

--    ,brc_grp_ctr_amt                     DECIMAL COMMENT '分行_企业新增消费贷款金额'

--    ,sbr_grp_ctr_amt                     DECIMAL COMMENT '支行_企业新增消费贷款金额'

--    ,tem_grp_ctr_amt                     DECIMAL COMMENT '团队_企业新增消费贷款金额'

--    ,mgr_grp_ctr_amt                     DECIMAL COMMENT '客户经理_企业新增消费贷款金额'

--    ,brc_grp_loan_dep_cst_num            DECIMAL COMMENT '分行_企业新增信贷客户中存款客户数统计'

--    ,sbr_grp_loan_dep_cst_num            DECIMAL COMMENT '支行_企业新增信贷客户中存款客户数统计'

--    ,tem_grp_loan_dep_cst_num            DECIMAL COMMENT '团队_企业新增信贷客户中存款客户数统计'

--    ,mgr_grp_loan_dep_cst_num            DECIMAL COMMENT '客户经理_企业新增信贷客户中存款客户数统计'

--    ,brc_grp_loan_chm_cst_num            DECIMAL COMMENT '分行_企业新增信贷客户中理财客户数统计'

--    ,sbr_grp_loan_chm_cst_num            DECIMAL COMMENT '支行_企业新增信贷客户中理财客户数统计'

--    ,tem_grp_loan_chm_cst_num            DECIMAL COMMENT '团队_企业新增信贷客户中理财客户数统计'

--    ,mgr_grp_loan_chm_cst_num            DECIMAL COMMENT '客户经理_企业新增信贷客户中理财客户数统计'

--    ,brc_grp_loan_insu_cst_num           DECIMAL COMMENT '分行_企业新增信贷客户中保险客户数统计'

--    ,sbr_grp_loan_insu_cst_num           DECIMAL COMMENT '支行_企业新增信贷客户中保险客户数统计'

--    ,tem_grp_loan_insu_cst_num           DECIMAL COMMENT '团队_企业新增信贷客户中保险客户数统计'

--    ,mgr_grp_loan_insu_cst_num           DECIMAL COMMENT '客户经理_企业新增信贷客户中保险客户数统计'

--    ,brc_grp_loan_fnd_cst_num            DECIMAL COMMENT '分行_企业新增信贷客户中基金客户数统计'

--    ,sbr_grp_loan_fnd_cst_num            DECIMAL COMMENT '支行_企业新增信贷客户中基金客户数统计'

--    ,tem_grp_loan_fnd_cst_num            DECIMAL COMMENT '团队_企业新增信贷客户中基金客户数统计'

--    ,mgr_grp_loan_fnd_cst_num            DECIMAL COMMENT '客户经理_企业新增信贷客户中基金客户数统计'

--    ,brc_grp_loan_nob_met_cst_num        DECIMAL COMMENT '分行_企业新增信贷客户中贵金属客户数统计'

--    ,sbr_grp_loan_nob_met_cst_num        DECIMAL COMMENT '支行_企业新增信贷客户中贵金属客户数统计'

--    ,tem_grp_loan_nob_met_cst_num        DECIMAL COMMENT '团队_企业新增信贷客户中贵金属客户数统计'

--    ,mgr_grp_loan_nob_met_cst_num        DECIMAL COMMENT '客户经理_企业新增信贷客户中贵金属客户数统计'

--    ,brc_org_id                          STRING  COMMENT '分行层级机构编号'

--    ,sbr_org_id                          STRING  COMMENT '支行层级机构编号'

--)

--COMMENT

--'企业团办_SHEET4-企业清单2'

--PARTITIONED BY

--(

--    DT STRING COMMENT '日期分区'

--);





-----新增表字段

-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet4_tmp add  columns

--(grp_org_id               STRING  COMMENT '集团机构编号'

--,cpy_org_id               STRING  COMMENT '法人机构编号'

--);





-----新增表字段

-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet4_tmp add  columns

--(brc_grp_card_cnt               STRING  COMMENT '分行_企业新增信用卡户数'

--,sbr_grp_card_cnt               STRING  COMMENT '支行_企业新增信用卡户数'

--,tem_grp_card_cnt               STRING  COMMENT '团队_企业新增信用卡户数'

--,mgr_grp_card_cnt               STRING  COMMENT '客户经理_企业新增信用卡户数'

--);





INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp PARTITION (DT = '20250331')

SELECT  cst_id

        ,cst_nm

        ,prm_mgr_id

        ,prm_mgr_nm

        ,tem_org_id

        ,tem_org_nm

        ,sbr_org_nm

        ,brc_org_nm

        ,ent_cst_id

        ,ent_cst_nm

        ,prm_mgr_id_ent

        ,prm_mgr_nm_ent

        ,tem_org_id_ent

        ,tem_org_nm_ent

        ,sbr_org_nm_ent

        ,brc_org_nm_ent

        ,ctr_amt

        ,actl_start_use_crd_lmt

        ,ctr_bal

        ,mon_acm_prcp_bal_acml

        ,if_loan_xf

        ,efe_crd_cst_ind

        ,efe_dep_cst_ind

        ,efe_chm_cst_ind

        ,efe_insu_cst_ind

        ,efe_fnd_cst_ind

        ,efe_nob_met_cst_ind

        ,ctr_bal_all

        ,dep_bal

        ,chm_bal

        ,dep_bal_add

        ,chm_bal_add

        ,cst_val_grd

        ,cprh_contri_cur_year

        ,loan_start_dt

        ,crd_isu_dt

        ,dep_opn_dt

        ,chm_trx_dt

        ,insu_dt

        ,fund_dt

        ,nob_dt

        ,brc_grp_cst_num

        ,brc_grp_mon_acm_prcp_bal_acml

        ,brc_grp_actl_start_use_crd_lmt

        ,rn_brc_grp

        ,pd_hld_qty_sum_brc

        ,sbr_grp_cst_num                 --支行_企业授信客户数统计

        ,sbr_grp_mon_acm_prcp_bal_acml   --支行_企业本金余额月日均

        ,sbr_grp_actl_start_use_crd_lmt  --支行_企业本金启用额度

        ,rn_sbr_grp                      --排序_支行_企业

        ,pd_hld_qty_sum_sbr              --汇总产品持有数_支行

        ,tem_grp_cst_num                 --团队_企业授信客户数统计

        ,tem_grp_mon_acm_prcp_bal_acml   --团队_企业本金余额月日均

        ,tem_grp_actl_start_use_crd_lmt  --团队_企业本金启用额度

        ,rn_tem_grp                      --排序_团队_企业

        ,pd_hld_qty_sum_tem              --汇总产品持有数_团队

        ,mgr_grp_cst_num                 --客户经理_企业授信客户数统计

        ,mgr_grp_mon_acm_prcp_bal_acml   --客户经理_企业本金余额月日均

        ,mgr_grp_actl_start_use_crd_lmt  --客户经理_企业本金启用额度

        ,rn_mgr_grp                      --排序_客户经理_企业

        ,pd_hld_qty_sum_mgr              --汇总产品持有数_客户经理

        ,brc_grp_cst_num2                --分行_企业新增授信客户数统计含信用卡

        ,sbr_grp_cst_num2                --支行_企业新增授信客户数统计含信用卡

        ,tem_grp_cst_num2                --团队_企业新增授信客户数统计含信用卡

        ,mgr_grp_cst_num2                --客户经理_企业新增授信客户数统计含信用卡

        ,brc_grp_card_cst_num            --分行_企业新增信用卡客户数统计

        ,sbr_grp_card_cst_num            --支行_企业新增信用卡客户数统计

        ,tem_grp_card_cst_num            --团队_企业新增信用卡客户数统计

        ,mgr_grp_card_cst_num            --客户经理_企业新增信用卡客户数统计

        ,brc_grp_pure_card_cst_num       --分行_企业新增纯信用卡客户数统计

        ,sbr_grp_pure_card_cst_num       --支行_企业新增纯信用卡客户数统计

        ,tem_grp_pure_card_cst_num       --团队_企业新增纯信用卡客户数统计

        ,mgr_grp_pure_card_cst_num       --客户经理_企业新增纯信用卡客户数统计

        ,brc_grp_ctr_bal                 --分行_企业新增消费贷款余额

        ,sbr_grp_ctr_bal                 --支行_企业新增消费贷款余额

        ,tem_grp_ctr_bal                 --团队_企业新增消费贷款余额

        ,mgr_grp_ctr_bal                 --客户经理_企业新增消费贷款余额

        ,CASE

           WHEN a.brc_grp_actl_start_use_crd_lmt > 0 THEN a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt

           ELSE 0

         END yongxin_rate_mth_avg_brc    --月日均用信率_分行

        ,CASE

           WHEN a.brc_grp_cst_num > 0 THEN a.pd_hld_qty_sum_brc / a.brc_grp_cst_num

           ELSE 0

         END pd_hld_qty_avg_brc          --客均产品持有数_分行

        ,CASE

		   WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml < 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1  THEN 200

           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.10  THEN 500

           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.30  THEN 800

           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.50  THEN 1000

           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1    THEN 1200



		   WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml < 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1    THEN 400

           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.10 THEN 800

           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.30 THEN 1500

           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.50 THEN 2000 --1011update

           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1   THEN 2400 --1011update



		   WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml < 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1 THEN 600

           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.10 THEN 1500

           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.30 THEN 2500

           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.50 THEN 4000 --1011update

           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1   THEN 4500 --1011update



		   WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml < 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1                               THEN 800

           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.10                            THEN 1800

           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.30                            THEN 3500

           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.50                            THEN 6000 --1011update

           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 AND  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1                              THEN 7000 --1011update

           ELSE 0

         END  pltbxm_jl_brc --批量团办项目奖励_分行

        ,CASE

           WHEN a.brc_grp_cst_num > 0 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num >= 1 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num < 1.2   THEN 1

           WHEN a.brc_grp_cst_num > 0 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num >= 1.2 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num < 1.5 THEN 1.2

           WHEN a.brc_grp_cst_num > 0 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num >= 1.5 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num < 2   THEN 1.6

           WHEN a.brc_grp_cst_num > 0 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num >= 2                                                      THEN 2

           ELSE 0

         END pd_hld_qty_avg_jcxs_brc  --平均产品持有数加成系数_分行

        ,CASE

           WHEN a.sbr_grp_actl_start_use_crd_lmt > 0 THEN a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt

           ELSE 0

         END  yongxin_rate_mth_avg_sbr   --月日均用信率_支行

        ,CASE

           WHEN a.sbr_grp_cst_num > 0 THEN a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num

           ELSE 0

         END pd_hld_qty_avg_sbr      --客均产品持有数_支行

        ,CASE

		   WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml < 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1  THEN 200

           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.10  THEN 500

           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.30  THEN 800

           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.50  THEN 1000

           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1    THEN 1200



		   WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml < 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1 THEN 400

           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.10 THEN 800

           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.30 THEN 1500

           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.50 THEN 2000

           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1   THEN 2400



		   WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml < 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1 THEN 600

           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.10 THEN 1500

           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.30 THEN 2500

           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.50 THEN 4000

           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1   THEN 4500



		   WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml < 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1                            THEN 800

           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.10                            THEN 1800

           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.30                            THEN 3500

           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.50                            THEN 6000

           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1                              THEN 7000

           ELSE 0

         END pltbxm_jl_sbr            --批量团办项目奖励_支行

        ,CASE

           WHEN a.sbr_grp_cst_num > 0 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num >= 1 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num < 1.2   THEN 1

           WHEN a.sbr_grp_cst_num > 0 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num >= 1.2 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num < 1.5 THEN 1.2

           WHEN a.sbr_grp_cst_num > 0 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num >= 1.5 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num < 2   THEN 1.6

           WHEN a.sbr_grp_cst_num > 0 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num >= 2                                                      THEN 2

           ELSE 0

         END pd_hld_qty_avg_jcxs_sbr  --平均产品持有数加成系数_支行

        ,CASE

           WHEN a.tem_grp_actl_start_use_crd_lmt > 0 THEN a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt

           ELSE 0

         END yongxin_rate_mth_avg_tem    --月日均用信率_团队

        ,CASE

           WHEN a.tem_grp_cst_num > 0 THEN a.pd_hld_qty_sum_tem / a.tem_grp_cst_num

           ELSE 0

         END pd_hld_qty_avg_tem          --客均产品持有数_团队

        ,CASE

		   WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml < 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1  THEN 200

           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.10  THEN 500

           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.30  THEN 800

           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.50  THEN 1000

           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1    THEN 1200



           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml < 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1    THEN 400

           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.10 THEN 800

           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.30 THEN 1500

           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.50 THEN 2000

           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1   THEN 2400



           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml < 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1    THEN 600

           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.10 THEN 1500

           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.30 THEN 2500

           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.50 THEN 4000

           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1   THEN 4500

           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml < 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1                               THEN 800

           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.10                            THEN 1800

           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.30                            THEN 3500

           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.50                            THEN 6000

           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and  a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1                              THEN 7000

           ELSE 0

         END pltbxm_jl_tem        --批量团办项目奖励_团队

        ,CASE

           WHEN a.tem_grp_cst_num > 0 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num >= 1 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num < 1.2   THEN 1

           WHEN a.tem_grp_cst_num > 0 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num >= 1.2 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num < 1.5 THEN 1.2

           WHEN a.tem_grp_cst_num > 0 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num >= 1.5 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num < 2   THEN 1.6

           WHEN a.tem_grp_cst_num > 0 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num >= 2                                                      THEN 2

           ELSE 0

         END pd_hld_qty_avg_jcxs_tem --平均产品持有数加成系数_团队

        ,CASE

           WHEN a.mgr_grp_actl_start_use_crd_lmt > 0 THEN a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt

           ELSE 0

         END yongxin_rate_mth_avg_mgr    --月日均用信率_客户经理

        ,CASE

           WHEN a.mgr_grp_cst_num > 0 THEN a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num

           ELSE 0

         END pd_hld_qty_avg_mgr      --客均产品持有数_客户经理

        ,CASE

           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml < 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1     THEN 200

           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.10  THEN 500

           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.30  THEN 800

           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.50  THEN 1000

           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1    THEN 1200



           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml < 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1    THEN 400

           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.10 THEN 800

           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.30 THEN 1500

           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.50 THEN 2000

           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1   THEN 2400



           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml < 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1    THEN 600

           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.10 THEN 1500

           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.30 THEN 2500

           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.50 THEN 4000

           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1   THEN 4500



           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml < 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1                               THEN 800

           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.10                            THEN 1800

           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.30                            THEN 3500

           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.50                            THEN 6000

           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1                               THEN 7000

           ELSE 0

         END pltbxm_jl_mgr --批量团办项目奖励_客户经理

        ,CASE

           WHEN a.mgr_grp_cst_num > 0 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num >= 1 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num < 1.2   THEN 1

           WHEN a.mgr_grp_cst_num > 0 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num >= 1.2 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num < 1.5 THEN 1.2

           WHEN a.mgr_grp_cst_num > 0 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num >= 1.5 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num < 2   THEN 1.6

           WHEN a.mgr_grp_cst_num > 0 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num >= 2                                                      THEN 2

           ELSE 0

         END pd_hld_qty_avg_jcxs_mgr --平均产品持有数加成系数_客户经理

        ,brc_ctr_fenzi --分行_企业授信金额加权利率分子

        ,brc_ctr_fenmu --分行_企业授信金额加权利率分母

        ,sbr_ctr_fenzi --支行_企业授信金额加权利率分子

        ,sbr_ctr_fenmu --支行_企业授信金额加权利率分母

        ,tem_ctr_fenzi --团队_企业授信金额加权利率分子

        ,tem_ctr_fenmu --团队_企业授信金额加权利率分母

        ,mgr_ctr_fenzi --客户经理_企业授信金额加权利率分子

        ,mgr_ctr_fenmu --客户经理_企业授信金额加权利率分母

        ,brc_dbil_fenzi --分行_企业用信金额加权利率分子

        ,brc_dbil_fenmu --分行_企业用信金额加权利率分母

        ,sbr_dbil_fenzi --支行_企业用信金额加权利率分子

        ,sbr_dbil_fenmu --支行_企业用信金额加权利率分母

        ,tem_dbil_fenzi --团队_企业用信金额加权利率分子

        ,tem_dbil_fenmu --团队_企业用信金额加权利率分母

        ,mgr_dbil_fenzi --客户经理_企业用信金额加权利率分子

        ,mgr_dbil_fenmu --客户经理_企业用信金额加权利率分母

        ,brc_aum --分行_企业aum

        ,brc_aum_add --分行_企业aum_add

        ,sbr_aum --支行_企业aum

        ,sbr_aum_add --支行_企业aum_add

        ,tem_aum --团队_企业aum

        ,tem_aum_add --团队_企业aum_add

        ,mgr_aum --客户经理_企业aum

        ,mgr_aum_add --客户经理_企业aum_add

        ,if_jiandang    --是否建档客户

        ,forml_cst_ind  --是否正式客户标识

        ,brc_grp_ctr_amt                            --分行_企业新增消费贷款金额

        ,sbr_grp_ctr_amt                            --支行_企业新增消费贷款金额

        ,tem_grp_ctr_amt                            --团队_企业新增消费贷款金额

        ,mgr_grp_ctr_amt                            --客户经理_企业新增消费贷款金额

		,brc_grp_loan_dep_cst_num                   --分行_企业新增信贷客户中存款客户数统计

		,sbr_grp_loan_dep_cst_num                   --支行_企业新增信贷客户中存款客户数统计

		,tem_grp_loan_dep_cst_num                   --团队_企业新增信贷客户中存款客户数统计

		,mgr_grp_loan_dep_cst_num                   --客户经理_企业新增信贷客户中存款客户数统计

		,brc_grp_loan_chm_cst_num                   --分行_企业新增信贷客户中理财客户数统计

		,sbr_grp_loan_chm_cst_num                   --支行_企业新增信贷客户中理财客户数统计

		,tem_grp_loan_chm_cst_num                   --团队_企业新增信贷客户中理财客户数统计

		,mgr_grp_loan_chm_cst_num                   --客户经理_企业新增信贷客户中理财客户数统计

		,brc_grp_loan_insu_cst_num                  --分行_企业新增信贷客户中保险客户数统计

		,sbr_grp_loan_insu_cst_num                  --支行_企业新增信贷客户中保险客户数统计

		,tem_grp_loan_insu_cst_num                  --团队_企业新增信贷客户中保险客户数统计

		,mgr_grp_loan_insu_cst_num                  --客户经理_企业新增信贷客户中保险客户数统计

		,brc_grp_loan_fnd_cst_num                   --分行_企业新增信贷客户中基金客户数统计

		,sbr_grp_loan_fnd_cst_num                   --支行_企业新增信贷客户中基金客户数统计

		,tem_grp_loan_fnd_cst_num                   --团队_企业新增信贷客户中基金客户数统计

		,mgr_grp_loan_fnd_cst_num                   --客户经理_企业新增信贷客户中基金客户数统计

		,brc_grp_loan_nob_met_cst_num               --分行_企业新增信贷客户中贵金属客户数统计

		,sbr_grp_loan_nob_met_cst_num               --支行_企业新增信贷客户中贵金属客户数统计

		,tem_grp_loan_nob_met_cst_num               --团队_企业新增信贷客户中贵金属客户数统计

		,mgr_grp_loan_nob_met_cst_num               --客户经理_企业新增信贷客户中贵金属客户数统计

		,brc_org_id               --分行层级机构编号

        ,sbr_org_id               --支行层级机构编号

		,grp_org_id               --集团机构编号

		,cpy_org_id               --法人机构编号

		,brc_grp_card_cnt         --分行_企业新增信用卡户数

		,sbr_grp_card_cnt         --支行_企业新增信用卡户数

		,tem_grp_card_cnt         --团队_企业新增信用卡户数

		,mgr_grp_card_cnt         --客户经理_企业新增信用卡户数

FROM    (

            SELECT  T1.cst_id

                    ,T1.cst_nm

                    ,T1.prm_mgr_id

                    ,T1.prm_mgr_nm

                    ,T1.tem_org_id

                    ,T1.tem_org_nm

                    ,T1.sbr_org_nm

                    ,T1.brc_org_nm

					,T1.brc_org_id               --分行层级机构编号

                    ,T1.sbr_org_id               --支行层级机构编号

					,T1.grp_org_id               --集团机构编号

		            ,T1.cpy_org_id               --法人机构编号

                    ,T1.ent_cst_id

                    ,T1.ent_cst_nm

                    ,T1.prm_mgr_id_ent

                    ,T1.prm_mgr_nm_ent

                    ,T1.tem_org_id_ent

                    ,T1.tem_org_nm_ent

                    ,T1.sbr_org_nm_ent

                    ,T1.brc_org_nm_ent

                    ,T1.ctr_amt

                    ,T1.actl_start_use_crd_lmt

                    ,T1.ctr_bal

                    ,T1.mon_acm_prcp_bal_acml

                    ,T1.if_loan_xf

                    ,T1.efe_crd_cst_ind

                    ,T1.efe_dep_cst_ind

                    ,T1.efe_chm_cst_ind

                    ,T1.efe_insu_cst_ind

                    ,T1.efe_fnd_cst_ind

                    ,T1.efe_nob_met_cst_ind

                    ,T1.ctr_bal_all

                    ,T1.dep_bal

                    ,T1.chm_bal

                    ,T1.dep_bal_add

                    ,T1.chm_bal_add

                    ,T1.cst_val_grd

                    ,T1.cprh_contri_cur_year

                    ,T1.loan_start_dt

                    ,T1.crd_isu_dt

                    ,T1.dep_opn_dt

                    ,T1.chm_trx_dt

                    ,T1.insu_dt

                    ,T1.fund_dt

                    ,T1.nob_dt

                    ,count(DISTINCT CASE

                                      WHEN t1.ctr_amt > 0 THEN t1.cst_id

                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) brc_grp_cst_num --分行_企业授信客户数统计

                    ,coalesce(sum(t1.mon_acm_prcp_bal_acml) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_mon_acm_prcp_bal_acml --分行_企业本金余额月日均

                    ,coalesce(sum(t1.actl_start_use_crd_lmt) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_actl_start_use_crd_lmt --分行_企业本金启用额度

                    ,row_number() OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) rn_brc_grp --排序_分行_企业

                    ,sum(CASE

                           WHEN coalesce(t1.ctr_amt, 0) > 0 THEN 1 + T1.efe_crd_cst_ind + T1.efe_dep_cst_ind + T1.efe_chm_cst_ind + T1.efe_insu_cst_ind + T1.efe_fnd_cst_ind + T1.efe_nob_met_cst_ind

                           ELSE 0

                         END) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) pd_hld_qty_sum_brc --汇总产品持有数_分行

                    ,count(DISTINCT CASE

                                      WHEN t1.ctr_amt > 0 THEN t1.cst_id

                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) sbr_grp_cst_num --支行_企业授信客户数统计

                    ,coalesce(sum(t1.mon_acm_prcp_bal_acml) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_mon_acm_prcp_bal_acml --支行_企业本金余额月日均

                    ,coalesce(sum(t1.actl_start_use_crd_lmt) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_actl_start_use_crd_lmt --支行_企业本金启用额度

                    ,row_number() OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) rn_sbr_grp --排序_支行_企业

                    ,sum(CASE

                           WHEN coalesce(t1.ctr_amt, 0) > 0 THEN 1 + T1.efe_crd_cst_ind + T1.efe_dep_cst_ind + T1.efe_chm_cst_ind + T1.efe_insu_cst_ind + T1.efe_fnd_cst_ind + T1.efe_nob_met_cst_ind

                           ELSE 0

                         END) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) pd_hld_qty_sum_sbr --汇总产品持有数_支行

                    ,count(DISTINCT CASE

                                      WHEN t1.ctr_amt > 0 THEN t1.cst_id

                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) tem_grp_cst_num --团队_企业授信客户数统计

                    ,coalesce(sum(t1.mon_acm_prcp_bal_acml) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_mon_acm_prcp_bal_acml --团队_企业本金余额月日均

                    ,coalesce(sum(t1.actl_start_use_crd_lmt) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_actl_start_use_crd_lmt --团队_企业本金启用额度

                    ,row_number() OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) rn_tem_grp --排序_团队_企业

                    ,sum(CASE

                           WHEN coalesce(t1.ctr_amt, 0) > 0 THEN 1 + T1.efe_crd_cst_ind + T1.efe_dep_cst_ind + T1.efe_chm_cst_ind + T1.efe_insu_cst_ind + T1.efe_fnd_cst_ind + T1.efe_nob_met_cst_ind

                           ELSE 0

                         END) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) pd_hld_qty_sum_tem --汇总产品持有数_团队

                    ,count(DISTINCT CASE

                                      WHEN t1.ctr_amt > 0 THEN t1.cst_id

                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) mgr_grp_cst_num --客户经理_企业授信客户数统计

                    ,coalesce(sum(t1.mon_acm_prcp_bal_acml) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_mon_acm_prcp_bal_acml --客户经理_企业本金余额月日均

                    ,coalesce(sum(t1.actl_start_use_crd_lmt) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_actl_start_use_crd_lmt --客户经理_企业本金启用额度

                    ,row_number() OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) rn_mgr_grp --排序_客户经理_企业

                    ,sum(CASE

                           WHEN coalesce(t1.ctr_amt, 0) > 0 THEN 1 + T1.efe_crd_cst_ind + T1.efe_dep_cst_ind + T1.efe_chm_cst_ind + T1.efe_insu_cst_ind + T1.efe_fnd_cst_ind + T1.efe_nob_met_cst_ind

                           ELSE 0

                         END) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) pd_hld_qty_sum_mgr --汇总产品持有数_客户经理

                    ,count(DISTINCT t1.cst_id) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) brc_grp_cst_num2 --分行_企业新增授信客户数统计含信用卡

                    ,count(DISTINCT t1.cst_id) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) sbr_grp_cst_num2 --支行_企业新增授信客户数统计含信用卡

                    ,count(DISTINCT t1.cst_id) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) tem_grp_cst_num2 --团队_企业新增授信客户数统计含信用卡

                    ,count(DISTINCT t1.cst_id) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) mgr_grp_cst_num2 --客户经理_企业新增授信客户数统计含信用卡

                    ,coalesce(t2.brc_grp_card_cst_num, 0) brc_grp_card_cst_num --分行_企业新增信用卡客户数统计

                    ,coalesce(t2.sbr_grp_card_cst_num, 0) sbr_grp_card_cst_num --支行_企业新增信用卡客户数统计

                    ,coalesce(t2.tem_grp_card_cst_num, 0) tem_grp_card_cst_num --团队_企业新增信用卡客户数统计

                    ,coalesce(t2.mgr_grp_card_cst_num, 0) mgr_grp_card_cst_num --客户经理_企业新增信用卡客户数统计

                    ,count(DISTINCT CASE

                                      WHEN coalesce(t1.ctr_amt, 0) = 0 AND t1.efe_crd_cst_ind = '1' THEN t1.cst_id

                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) brc_grp_pure_card_cst_num --分行_企业新增纯信用卡客户数统计

                    ,count(DISTINCT CASE

                                      WHEN coalesce(t1.ctr_amt, 0) = 0 AND t1.efe_crd_cst_ind = '1' THEN t1.cst_id

                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) sbr_grp_pure_card_cst_num --支行_企业新增纯信用卡客户数统计

                    ,count(DISTINCT CASE

                                      WHEN coalesce(t1.ctr_amt, 0) = 0 AND t1.efe_crd_cst_ind = '1' THEN t1.cst_id

                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) tem_grp_pure_card_cst_num --团队_企业新增纯信用卡客户数统计

                    ,count(DISTINCT CASE

                                      WHEN coalesce(t1.ctr_amt, 0) = 0 AND t1.efe_crd_cst_ind = '1' THEN t1.cst_id

                                    END) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) mgr_grp_pure_card_cst_num --客户经理_企业新增纯信用卡客户数统计

                    ,coalesce(sum(t1.ctr_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_ctr_bal  --分行_企业新增消费贷款余额

                    ,coalesce(sum(t1.ctr_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_ctr_bal  --支行_企业新增消费贷款余额

                    ,coalesce(sum(t1.ctr_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_ctr_bal  --团队_企业新增消费贷款余额

                    ,coalesce(sum(t1.ctr_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_ctr_bal  --客户经理_企业新增消费贷款余额

                    --20231211update

                    ,coalesce(sum(t1.ctr_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_ctr_fenzi --分行_企业授信金额加权利率分子

                    ,coalesce(sum(t1.ctr_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_ctr_fenmu --分行_企业授信金额加权利率分母

                    ,coalesce(sum(t1.ctr_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_ctr_fenzi --支行_企业授信金额加权利率分子

                    ,coalesce(sum(t1.ctr_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_ctr_fenmu --支行_企业授信金额加权利率分母

                    ,coalesce(sum(t1.ctr_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_ctr_fenzi --团队_企业授信金额加权利率分子

                    ,coalesce(sum(t1.ctr_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_ctr_fenmu --团队_企业授信金额加权利率分母

                    ,coalesce(sum(t1.ctr_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_ctr_fenzi --客户经理_企业授信金额加权利率分子

                    ,coalesce(sum(t1.ctr_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_ctr_fenmu --客户经理_企业授信金额加权利率分母

                    ,coalesce(sum(t1.dbil_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_dbil_fenzi --分行_企业用信金额加权利率分子

                    ,coalesce(sum(t1.dbil_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_dbil_fenmu --分行_企业用信金额加权利率分母

                    ,coalesce(sum(t1.dbil_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_dbil_fenzi --支行_企业用信金额加权利率分子

                    ,coalesce(sum(t1.dbil_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_dbil_fenmu --支行_企业用信金额加权利率分母

                    ,coalesce(sum(t1.dbil_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_dbil_fenzi --团队_企业用信金额加权利率分子

                    ,coalesce(sum(t1.dbil_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_dbil_fenmu --团队_企业用信金额加权利率分母

                    ,coalesce(sum(t1.dbil_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_dbil_fenzi --客户经理_企业用信金额加权利率分子

                    ,coalesce(sum(t1.dbil_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_dbil_fenmu --客户经理_企业用信金额加权利率分母

                    ,coalesce(sum(t1.aum_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0)     brc_aum     --分行_企业aum

                    ,coalesce(sum(t1.aum_bal_add) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_aum_add --分行_企业aum_add

                    ,coalesce(sum(t1.aum_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0)     sbr_aum     --支行_企业aum

                    ,coalesce(sum(t1.aum_bal_add) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_aum_add --支行_企业aum_add

                    ,coalesce(sum(t1.aum_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0)     tem_aum     --团队_企业aum

                    ,coalesce(sum(t1.aum_bal_add) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_aum_add --团队_企业aum_add

                    ,coalesce(sum(t1.aum_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0)     mgr_aum     --客户经理_企业aum

                    ,coalesce(sum(t1.aum_bal_add) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_aum_add --客户经理_企业aum_add

                    ,CASE

                       WHEN t1.ent_cst_id <> '-' THEN '1'

                       ELSE '0'

                     END if_jiandang --是否建档客户

                    ,CASE

                       WHEN t1.ent_cst_id = '-' THEN '0'

                       ELSE decode(t3.forml_cst_ind, '1', 1, '', 0)

                     END forml_cst_ind  --是否正式客户标识

                    --20231226update

                    ,coalesce(sum(t1.ctr_amt) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_ctr_amt --分行_企业新增消费贷款金额

                    ,coalesce(sum(t1.ctr_amt) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_ctr_amt --支行_企业新增消费贷款金额

                    ,coalesce(sum(t1.ctr_amt) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_ctr_amt --团队_企业新增消费贷款金额

                    ,coalesce(sum(t1.ctr_amt) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_ctr_amt --客户经理_企业新增消费贷款金额

					,coalesce(sum(t1.card_cnt) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_card_cnt --分行_企业新增信用卡户数

                    ,coalesce(sum(t1.card_cnt) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_card_cnt --支行_企业新增信用卡户数

                    ,coalesce(sum(t1.card_cnt) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_card_cnt --团队_企业新增信用卡户数

                    ,coalesce(sum(t1.card_cnt) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_card_cnt --客户经理_企业新增信用卡户数

					,coalesce(t4.brc_grp_loan_dep_cst_num,0)         brc_grp_loan_dep_cst_num                --分行_企业新增信贷客户中存款客户数统计

					,coalesce(t4.sbr_grp_loan_dep_cst_num,0)         sbr_grp_loan_dep_cst_num                --支行_企业新增信贷客户中存款客户数统计

					,coalesce(t4.tem_grp_loan_dep_cst_num,0)         tem_grp_loan_dep_cst_num                --团队_企业新增信贷客户中存款客户数统计

					,coalesce(t4.mgr_grp_loan_dep_cst_num,0)         mgr_grp_loan_dep_cst_num                --客户经理_企业新增信贷客户中存款客户数统计

					,coalesce(t4.brc_grp_loan_chm_cst_num,0)         brc_grp_loan_chm_cst_num                --分行_企业新增信贷客户中理财客户数统计

					,coalesce(t4.sbr_grp_loan_chm_cst_num,0)         sbr_grp_loan_chm_cst_num                --支行_企业新增信贷客户中理财客户数统计

					,coalesce(t4.tem_grp_loan_chm_cst_num,0)         tem_grp_loan_chm_cst_num                --团队_企业新增信贷客户中理财客户数统计

					,coalesce(t4.mgr_grp_loan_chm_cst_num,0)         mgr_grp_loan_chm_cst_num                --客户经理_企业新增信贷客户中理财客户数统计

					,coalesce(t4.brc_grp_loan_insu_cst_num,0)        brc_grp_loan_insu_cst_num               --分行_企业新增信贷客户中保险客户数统计

					,coalesce(t4.sbr_grp_loan_insu_cst_num,0)        sbr_grp_loan_insu_cst_num               --支行_企业新增信贷客户中保险客户数统计

					,coalesce(t4.tem_grp_loan_insu_cst_num,0)        tem_grp_loan_insu_cst_num               --团队_企业新增信贷客户中保险客户数统计

					,coalesce(t4.mgr_grp_loan_insu_cst_num,0)        mgr_grp_loan_insu_cst_num               --客户经理_企业新增信贷客户中保险客户数统计

					,coalesce(t4.brc_grp_loan_fnd_cst_num,0)         brc_grp_loan_fnd_cst_num                --分行_企业新增信贷客户中基金客户数统计

					,coalesce(t4.sbr_grp_loan_fnd_cst_num,0)         sbr_grp_loan_fnd_cst_num                --支行_企业新增信贷客户中基金客户数统计

					,coalesce(t4.tem_grp_loan_fnd_cst_num,0)         tem_grp_loan_fnd_cst_num                --团队_企业新增信贷客户中基金客户数统计

					,coalesce(t4.mgr_grp_loan_fnd_cst_num,0)         mgr_grp_loan_fnd_cst_num                --客户经理_企业新增信贷客户中基金客户数统计

					,coalesce(t4.brc_grp_loan_nob_met_cst_num,0)     brc_grp_loan_nob_met_cst_num            --分行_企业新增信贷客户中贵金属客户数统计

					,coalesce(t4.sbr_grp_loan_nob_met_cst_num,0)     sbr_grp_loan_nob_met_cst_num            --支行_企业新增信贷客户中贵金属客户数统计

					,coalesce(t4.tem_grp_loan_nob_met_cst_num,0)     tem_grp_loan_nob_met_cst_num            --团队_企业新增信贷客户中贵金属客户数统计

					,coalesce(t4.mgr_grp_loan_nob_met_cst_num,0)     mgr_grp_loan_nob_met_cst_num            --客户经理_企业新增信贷客户中贵金属客户数统计

FROM    lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet2 t1

LEFT JOIN     (SELECT  DISTINCT T1.*

FROM  (

                             SELECT  cst_id

                                     ,ent_cst_nm

                                     ,brc_org_nm

                                     ,sbr_org_nm

                                     ,tem_org_nm

									 ,prm_mgr_id

                                     ,count(DISTINCT cst_id) OVER ( PARTITION BY ent_cst_nm , brc_org_nm ) brc_grp_card_cst_num --分行_企业新增信用卡客户数统计

                                     ,count(DISTINCT cst_id) OVER ( PARTITION BY ent_cst_nm , sbr_org_nm ) sbr_grp_card_cst_num --支行_企业新增信用卡客户数统计

                                     ,count(DISTINCT cst_id) OVER ( PARTITION BY ent_cst_nm , tem_org_nm ) tem_grp_card_cst_num --团队_企业新增信用卡客户数统计

                                     ,count(DISTINCT cst_id) OVER ( PARTITION BY ent_cst_nm , prm_mgr_id ) mgr_grp_card_cst_num --客户经理_企业新增信用卡客户数统计

                             FROM    lab_bigdata_dev.phjrb_ys_qytb_cst_info_crd_tmp_new --新增信用卡客户信息表

							 where   dt = '20250331'

                         ) t1 )  T2

            ON      t1.cst_id = t2.cst_id

			AND     T1.ent_cst_nm = T2.ent_cst_nm

            AND     t1.brc_org_nm = t2.brc_org_nm

            AND     t1.sbr_org_nm = t2.sbr_org_nm

            AND     t1.tem_org_nm = t2.tem_org_nm

			and     t1.prm_mgr_id = t2.prm_mgr_id

            LEFT JOIN    adm_pub.adm_csm_cbas_mng_inf_dd t3 --客户集市-客户基础-客户管户信息

            ON      t1.ent_cst_id = t3.cst_id

            AND     t3.dt = '20250331'

			left  join   (select distinct t1.*

		from 	( SELECT  cst_id

,ent_cst_id

,ent_cst_nm

,brc_org_nm

,sbr_org_nm

,tem_org_nm

,prm_mgr_id

,prm_mgr_nm

,count(distinct case when dep_bal_mon_avg >='5000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , brc_org_nm ) brc_grp_loan_dep_cst_num --分行_企业新增信贷客户中存款客户数统计

,count(distinct case when dep_bal_mon_avg >='5000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , sbr_org_nm ) sbr_grp_loan_dep_cst_num  --支行_企业新增信贷客户中存款客户数统计

,count(distinct case when dep_bal_mon_avg >='5000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , tem_org_nm ) tem_grp_loan_dep_cst_num --团队_企业新增信贷客户中存款客户数统计

,count(distinct case when dep_bal_mon_avg >='5000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , prm_mgr_id ) mgr_grp_loan_dep_cst_num --客户经理_企业新增信贷客户中存款客户数统计

,count(distinct case when chm_mon_avg>='5000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , brc_org_nm ) brc_grp_loan_chm_cst_num --分行_企业新增信贷客户中理财客户数统计

,count(distinct case when chm_mon_avg>='5000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , sbr_org_nm ) sbr_grp_loan_chm_cst_num  --支行_企业新增信贷客户中理财客户数统计

,count(distinct case when chm_mon_avg>='5000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , tem_org_nm ) tem_grp_loan_chm_cst_num --团队_企业新增信贷客户中理财客户数统计

,count(distinct case when chm_mon_avg>='5000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , prm_mgr_id ) mgr_grp_loan_chm_cst_num --客户经理_企业新增信贷客户中理财客户数统计

,count(distinct case when insu_frs_bus_amt>='5000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , brc_org_nm ) brc_grp_loan_insu_cst_num --分行_企业新增信贷客户中保险客户数统计

,count(distinct case when insu_frs_bus_amt>='5000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , sbr_org_nm ) sbr_grp_loan_insu_cst_num  --支行_企业新增信贷客户中保险客户数统计

,count(distinct case when insu_frs_bus_amt>='5000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , tem_org_nm ) tem_grp_loan_insu_cst_num --团队_企业新增信贷客户中保险客户数统计

,count(distinct case when insu_frs_bus_amt>='5000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , prm_mgr_id ) mgr_grp_loan_insu_cst_num --客户经理_企业新增信贷客户中保险客户数统计

,count(distinct case when avg_ncr_fnd_amt_cur_mon>='1000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , brc_org_nm ) brc_grp_loan_fnd_cst_num --分行_企业新增信贷客户中基金客户数统计

,count(distinct case when avg_ncr_fnd_amt_cur_mon>='1000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , sbr_org_nm ) sbr_grp_loan_fnd_cst_num  --支行_企业新增信贷客户中基金客户数统计

,count(distinct case when avg_ncr_fnd_amt_cur_mon>='1000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , tem_org_nm ) tem_grp_loan_fnd_cst_num --团队_企业新增信贷客户中基金客户数统计

,count(distinct case when avg_ncr_fnd_amt_cur_mon>='1000' then cst_id end) OVER ( PARTITION BY ent_cst_nm , prm_mgr_id ) mgr_grp_loan_fnd_cst_num --客户经理_企业新增信贷客户中基金客户数统计

,count(distinct case when nob_met_bal_1y>='500' then cst_id end) OVER ( PARTITION BY ent_cst_nm , brc_org_nm ) brc_grp_loan_nob_met_cst_num --分行_企业新增信贷客户中贵金属客户数统计

,count(distinct case when nob_met_bal_1y>='500' then cst_id end) OVER ( PARTITION BY ent_cst_nm , sbr_org_nm ) sbr_grp_loan_nob_met_cst_num  --支行_企业新增信贷客户中贵金属客户数统计

,count(distinct case when nob_met_bal_1y>='500' then cst_id end) OVER ( PARTITION BY ent_cst_nm , tem_org_nm ) tem_grp_loan_nob_met_cst_num --团队_企业新增信贷客户中贵金属客户数统计

,count(distinct case when nob_met_bal_1y>='500' then cst_id end) OVER ( PARTITION BY ent_cst_nm , prm_mgr_id ) mgr_grp_loan_nob_met_cst_num --客户经理_企业新增信贷客户中贵金属客户数统计

FROM    lab_bigdata_dev.phjrb_ys_qytb_cst_info_tmp_new     --企业团办新增消费贷款客户信息表

where  dt = '20250331'

)  t1

)  T4

ON      t1.cst_id = t4.cst_id

AND     T1.ent_cst_nm = T4.ent_cst_nm

AND     t1.brc_org_nm = t4.brc_org_nm

AND     t1.sbr_org_nm = t4.sbr_org_nm

AND     t1.tem_org_nm = t4.tem_org_nm

and     t1.prm_mgr_id = t4.prm_mgr_id

WHERE   t1.dt = '20250331'

	      ) a;







----汇总

--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_01 PURGE;

--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_01

--(

--    cst_id                               STRING  COMMENT '个人客户号'

--    ,cst_nm                              STRING  COMMENT '个人客户名'

--    ,prm_mgr_id                          STRING  COMMENT '主管户客户经理工号'

--    ,prm_mgr_nm                          STRING  COMMENT '主管户客户经理名称'

--    ,tem_org_id                          STRING  COMMENT '团队机构号'

--    ,tem_org_nm                          STRING  COMMENT '团队机构名称'

--    ,sbr_org_nm                          STRING  COMMENT '支行名称'

--    ,brc_org_nm                          STRING  COMMENT '分行名称'

--    ,ent_cst_id                          STRING  COMMENT '企业客户号'

--    ,ent_cst_nm                          STRING  COMMENT '企业客户名'

--    ,prm_mgr_id_ent                      STRING  COMMENT '企业主管户客户经理工号'

--    ,prm_mgr_nm_ent                      STRING  COMMENT '企业主管户客户经理名称'

--    ,tem_org_id_ent                      STRING  COMMENT '企业主管团队机构号'

--    ,tem_org_nm_ent                      STRING  COMMENT '企业主管团队机构名称'

--    ,sbr_org_nm_ent                      STRING  COMMENT '企业主管支行名称'

--    ,brc_org_nm_ent                      STRING  COMMENT '企业主管分行名称'

--    ,ctr_amt                             DECIMAL COMMENT '新增消费贷款合同金额合计'

--    ,actl_start_use_crd_lmt              DECIMAL COMMENT '新增消费贷款启用额度合计'

--    ,ctr_bal                             DECIMAL COMMENT '新增消费贷款合同余额合计'

--    ,mon_acm_prcp_bal_acml               DECIMAL COMMENT '本金余额月日均'

--    ,if_loan_xf                          STRING  COMMENT '是否持有消费贷款'

--    ,efe_crd_cst_ind                     STRING  COMMENT '是否有效信用卡户'

--    ,efe_dep_cst_ind                     STRING  COMMENT '是否有效存款户'

--    ,efe_chm_cst_ind                     STRING  COMMENT '是否有效理财户'

--    ,efe_insu_cst_ind                    STRING  COMMENT '是否有效保险户'

--    ,efe_fnd_cst_ind                     STRING  COMMENT '是否有效基金户'

--    ,efe_nob_met_cst_ind                 STRING  COMMENT '是否有效贵金属户'

--    ,ctr_bal_all                         DECIMAL COMMENT '消费贷款合同余额总计'

--    ,dep_bal                             DECIMAL COMMENT '存款余额'

--    ,chm_bal                             DECIMAL COMMENT '理财余额'

--    ,dep_bal_add                         DECIMAL COMMENT '新增存款余额'

--    ,chm_bal_add                         DECIMAL COMMENT '新增理财余额'

--    ,cst_val_grd                         DECIMAL COMMENT '客户价值等级'

--    ,cprh_contri_cur_year                DECIMAL COMMENT '当年客户价值'

--    ,loan_start_dt                       STRING  COMMENT '最早消费贷款开始日期'

--    ,crd_isu_dt                          STRING  COMMENT '最早信用卡发卡日期'

--    ,dep_opn_dt                          STRING  COMMENT '最早存款开户日期'

--    ,chm_trx_dt                          STRING  COMMENT '最早购买理财日期'

--    ,insu_dt                             STRING  COMMENT '最早保险投保日期'

--    ,fund_dt                             STRING  COMMENT '最早购买基金日期'

--    ,nob_dt                              STRING  COMMENT '最早购买贵金属日期'

--    ,brc_grp_cst_num                     DECIMAL COMMENT '分行_企业授信客户数统计'

--    ,brc_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '分行_企业本金余额月日均'

--    ,brc_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '分行_企业本金启用额度'

--    ,rn_brc_grp                          STRING  COMMENT '排序_分行_企业'

--    ,pd_hld_qty_sum_brc                  STRING  COMMENT '汇总产品持有数_分行'

--    ,sbr_grp_cst_num                     DECIMAL COMMENT '支行_企业授信客户数统计'

--    ,sbr_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '支行_企业本金余额月日均'

--    ,sbr_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '支行_企业本金启用额度'

--    ,rn_sbr_grp                          STRING  COMMENT '排序_支行_企业'

--    ,pd_hld_qty_sum_sbr                  STRING  COMMENT '汇总产品持有数_支行'

--    ,tem_grp_cst_num                     DECIMAL COMMENT '团队_企业授信客户数统计'

--    ,tem_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '团队_企业本金余额月日均'

--    ,tem_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '团队_企业本金启用额度'

--    ,rn_tem_grp                          STRING  COMMENT '排序_团队_企业'

--    ,pd_hld_qty_sum_tem                  STRING  COMMENT '汇总产品持有数_团队'

--    ,mgr_grp_cst_num                     DECIMAL COMMENT '客户经理_企业授信客户数统计'

--    ,mgr_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '客户经理_企业本金余额月日均'

--    ,mgr_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '客户经理_企业本金启用额度'

--    ,rn_mgr_grp                          STRING  COMMENT '排序_客户经理_企业'

--    ,pd_hld_qty_sum_mgr                  STRING  COMMENT '汇总产品持有数_客户经理'

--    ,brc_grp_cst_num2                    DECIMAL COMMENT '分行_企业新增授信客户数统计含信用卡'

--    ,sbr_grp_cst_num2                    DECIMAL COMMENT '支行_企业新增授信客户数统计含信用卡'

--    ,tem_grp_cst_num2                    DECIMAL COMMENT '团队_企业新增授信客户数统计含信用卡'

--    ,mgr_grp_cst_num2                    DECIMAL COMMENT '客户经理_企业新增授信客户数统计含信用卡'

--    ,brc_grp_card_cst_num                DECIMAL COMMENT '分行_企业新增信用卡客户数统计'

--    ,sbr_grp_card_cst_num                DECIMAL COMMENT '支行_企业新增信用卡客户数统计'

--    ,tem_grp_card_cst_num                DECIMAL COMMENT '团队_企业新增信用卡客户数统计'

--    ,mgr_grp_card_cst_num                DECIMAL COMMENT '客户经理_企业新增信用卡客户数统计'

--    ,brc_grp_pure_card_cst_num           DECIMAL COMMENT '分行_企业新增纯信用卡客户数统计'

--    ,sbr_grp_pure_card_cst_num           DECIMAL COMMENT '支行_企业新增纯信用卡客户数统计'

--    ,tem_grp_pure_card_cst_num           DECIMAL COMMENT '团队_企业新增纯信用卡客户数统计'

--    ,mgr_grp_pure_card_cst_num           DECIMAL COMMENT '客户经理_企业新增纯信用卡客户数统计'

--    ,brc_grp_ctr_bal                     DECIMAL COMMENT '分行_企业新增消费贷款余额'

--    ,sbr_grp_ctr_bal                     DECIMAL COMMENT '支行_企业新增消费贷款余额'

--    ,tem_grp_ctr_bal                     DECIMAL COMMENT '团队_企业新增消费贷款余额'

--    ,mgr_grp_ctr_bal                     DECIMAL COMMENT '客户经理_企业新增消费贷款余额'

--    ,yongxin_rate_mth_avg_brc            DECIMAL COMMENT '月日均用信率_分行'

--    ,pd_hld_qty_avg_brc                  DECIMAL COMMENT '客均产品持有数_分行'

--    ,pltbxm_jl_brc                       DECIMAL COMMENT '批量团办项目奖励_分行'

--    ,pd_hld_qty_avg_jcxs_brc             DECIMAL COMMENT '平均产品持有数加成系数_分行'

--    ,yongxin_rate_mth_avg_sbr            DECIMAL COMMENT '月日均用信率_支行'

--    ,pd_hld_qty_avg_sbr                  DECIMAL COMMENT '客均产品持有数_支行'

--    ,pltbxm_jl_sbr                       DECIMAL COMMENT '批量团办项目奖励_支行'

--    ,pd_hld_qty_avg_jcxs_sbr             DECIMAL COMMENT '平均产品持有数加成系数_支行'

--    ,yongxin_rate_mth_avg_tem            DECIMAL COMMENT '月日均用信率_团队'

--    ,pd_hld_qty_avg_tem                  DECIMAL COMMENT '客均产品持有数_团队'

--    ,pltbxm_jl_tem                       DECIMAL COMMENT '批量团办项目奖励_团队'

--    ,pd_hld_qty_avg_jcxs_tem             DECIMAL COMMENT '平均产品持有数加成系数_团队'

--    ,yongxin_rate_mth_avg_mgr            DECIMAL COMMENT '月日均用信率_客户经理'

--    ,pd_hld_qty_avg_mgr                  DECIMAL COMMENT '客均产品持有数_客户经理'

--    ,pltbxm_jl_mgr                       DECIMAL COMMENT '批量团办项目奖励_客户经理'

--    ,pd_hld_qty_avg_jcxs_mgr             DECIMAL COMMENT '平均产品持有数加成系数_客户经理'

--    ,brc_ctr_fenzi                       DECIMAL COMMENT '分行_企业授信金额加权利率分子'

--    ,brc_ctr_fenmu                       DECIMAL COMMENT '分行_企业授信金额加权利率分母'

--    ,sbr_ctr_fenzi                       DECIMAL COMMENT '支行_企业授信金额加权利率分子'

--    ,sbr_ctr_fenmu                       DECIMAL COMMENT '支行_企业授信金额加权利率分母'

--    ,tem_ctr_fenzi                       DECIMAL COMMENT '团队_企业授信金额加权利率分子'

--    ,tem_ctr_fenmu                       DECIMAL COMMENT '团队_企业授信金额加权利率分母'

--    ,mgr_ctr_fenzi                       DECIMAL COMMENT '客户经理_企业授信金额加权利率分子'

--    ,mgr_ctr_fenmu                       DECIMAL COMMENT '客户经理_企业授信金额加权利率分母'

--    ,brc_dbil_fenzi                      DECIMAL COMMENT '分行_企业用信金额加权利率分子'

--    ,brc_dbil_fenmu                      DECIMAL COMMENT '分行_企业用信金额加权利率分母'

--    ,sbr_dbil_fenzi                      DECIMAL COMMENT '支行_企业用信金额加权利率分子'

--    ,sbr_dbil_fenmu                      DECIMAL COMMENT '支行_企业用信金额加权利率分母'

--    ,tem_dbil_fenzi                      DECIMAL COMMENT '团队_企业用信金额加权利率分子'

--    ,tem_dbil_fenmu                      DECIMAL COMMENT '团队_企业用信金额加权利率分母'

--    ,mgr_dbil_fenzi                      DECIMAL COMMENT '客户经理_企业用信金额加权利率分子'

--    ,mgr_dbil_fenmu                      DECIMAL COMMENT '客户经理_企业用信金额加权利率分母'

--    ,brc_aum                             DECIMAL COMMENT '分行_企业aum'

--    ,brc_aum_add                         DECIMAL COMMENT '分行_企业aum_add'

--    ,sbr_aum                             DECIMAL COMMENT '支行_企业aum'

--    ,sbr_aum_add                         DECIMAL COMMENT '支行_企业aum_add'

--    ,tem_aum                             DECIMAL COMMENT '团队_企业aum'

--    ,tem_aum_add                         DECIMAL COMMENT '团队_企业aum_add'

--    ,mgr_aum                             DECIMAL COMMENT '客户经理_企业aum'

--    ,mgr_aum_add                         DECIMAL COMMENT '客户经理_企业aum_add'

--    ,if_jiandang                         STRING  COMMENT '是否建档'

--    ,forml_cst_ind                       STRING  COMMENT '正式客户标识'

--    ,brc_grp_ctr_amt                     DECIMAL COMMENT '分行_企业新增消费贷款金额'

--    ,sbr_grp_ctr_amt                     DECIMAL COMMENT '支行_企业新增消费贷款金额'

--    ,tem_grp_ctr_amt                     DECIMAL COMMENT '团队_企业新增消费贷款金额'

--    ,mgr_grp_ctr_amt                     DECIMAL COMMENT '客户经理_企业新增消费贷款金额'

--    ,brc_grp_loan_dep_cst_num            DECIMAL COMMENT '分行_企业新增信贷客户中存款客户数统计'

--    ,sbr_grp_loan_dep_cst_num            DECIMAL COMMENT '支行_企业新增信贷客户中存款客户数统计'

--    ,tem_grp_loan_dep_cst_num            DECIMAL COMMENT '团队_企业新增信贷客户中存款客户数统计'

--    ,mgr_grp_loan_dep_cst_num            DECIMAL COMMENT '客户经理_企业新增信贷客户中存款客户数统计'

--    ,brc_grp_loan_chm_cst_num            DECIMAL COMMENT '分行_企业新增信贷客户中理财客户数统计'

--    ,sbr_grp_loan_chm_cst_num            DECIMAL COMMENT '支行_企业新增信贷客户中理财客户数统计'

--    ,tem_grp_loan_chm_cst_num            DECIMAL COMMENT '团队_企业新增信贷客户中理财客户数统计'

--    ,mgr_grp_loan_chm_cst_num            DECIMAL COMMENT '客户经理_企业新增信贷客户中理财客户数统计'

--    ,brc_grp_loan_insu_cst_num           DECIMAL COMMENT '分行_企业新增信贷客户中保险客户数统计'

--    ,sbr_grp_loan_insu_cst_num           DECIMAL COMMENT '支行_企业新增信贷客户中保险客户数统计'

--    ,tem_grp_loan_insu_cst_num           DECIMAL COMMENT '团队_企业新增信贷客户中保险客户数统计'

--    ,mgr_grp_loan_insu_cst_num           DECIMAL COMMENT '客户经理_企业新增信贷客户中保险客户数统计'

--    ,brc_grp_loan_fnd_cst_num            DECIMAL COMMENT '分行_企业新增信贷客户中基金客户数统计'

--    ,sbr_grp_loan_fnd_cst_num            DECIMAL COMMENT '支行_企业新增信贷客户中基金客户数统计'

--    ,tem_grp_loan_fnd_cst_num            DECIMAL COMMENT '团队_企业新增信贷客户中基金客户数统计'

--    ,mgr_grp_loan_fnd_cst_num            DECIMAL COMMENT '客户经理_企业新增信贷客户中基金客户数统计'

--    ,brc_grp_loan_nob_met_cst_num        DECIMAL COMMENT '分行_企业新增信贷客户中贵金属客户数统计'

--    ,sbr_grp_loan_nob_met_cst_num        DECIMAL COMMENT '支行_企业新增信贷客户中贵金属客户数统计'

--    ,tem_grp_loan_nob_met_cst_num        DECIMAL COMMENT '团队_企业新增信贷客户中贵金属客户数统计'

--    ,mgr_grp_loan_nob_met_cst_num        DECIMAL COMMENT '客户经理_企业新增信贷客户中贵金属客户数统计'

--    ,mgr_dbil_rate                       DECIMAL COMMENT '客户经理加权平均用信利率'

--    ,mgr_ctr_rate                        DECIMAL COMMENT '客户经理加权平均授信利率'

--    ,zhesuanhou_mgr_grp_cst_num          DECIMAL COMMENT '折算后_客户经理_企业新增授信客户数统计'

--    ,mgr_grp_project_num                 DECIMAL COMMENT '客户经理_企业新增项目数(5比1折算后)'

--    ,mgr_tbxmjj                          DECIMAL COMMENT '团办项目奖金_客户经理'

--    ,tem_dbil_rate                       DECIMAL COMMENT '团队加权平均用信利率'

--    ,tem_ctr_rate                        DECIMAL COMMENT '团队加权平均授信利率'

--    ,zhesuanhou_tem_grp_cst_num          DECIMAL COMMENT '折算后_团队_企业新增授信客户数统计'

--    ,tem_grp_project_num                 DECIMAL COMMENT '团队_企业新增项目数(5比1折算后)'

--    ,tem_tbxmjj                          DECIMAL COMMENT '团办项目奖金_团队'

--    ,sbr_dbil_rate                       DECIMAL COMMENT '支行加权平均用信利率'

--    ,sbr_ctr_rate                        DECIMAL COMMENT '支行加权平均授信利率'

--    ,zhesuanhou_sbr_grp_cst_num          DECIMAL COMMENT '折算后_支行_企业新增授信客户数统计 '

--    ,sbr_grp_project_num                 DECIMAL COMMENT '支行_企业新增项目数(5比1折算后)'

--    ,sbr_tbxmjj                          DECIMAL COMMENT '团办项目奖金_支行'

--    ,brc_dbil_rate                       DECIMAL COMMENT '分行加权平均用信利率'

--    ,brc_ctr_rate                        DECIMAL COMMENT '分行加权平均授信利率'

--    ,zhesuanhou_brc_grp_cst_num          DECIMAL COMMENT '折算后_分行_企业新增授信客户数统计'

--    ,brc_grp_project_num                 DECIMAL COMMENT '分行_企业新增项目数(5比1折算后)'

--    ,brc_tbxmjj                          DECIMAL COMMENT '团办项目奖金_分行'

--    ,brc_org_id               STRING  COMMENT '分行层级机构编号'

--    ,sbr_org_id               STRING  COMMENT '支行层级机构编号'

--)

-- COMMENT

-- '企业团办_SHEET4-企业清单2_汇总01'

-- PARTITIONED BY

-- (

--     DT STRING COMMENT '日期分区'

-- );







-----新增表字段

-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_01 add  columns

--(grp_org_id               STRING  COMMENT '集团机构编号'

--,cpy_org_id               STRING  COMMENT '法人机构编号'

--);



-----新增表字段

-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_01 add  columns

--(brc_grp_card_cnt               STRING  COMMENT '分行_企业新增信用卡户数'

--,sbr_grp_card_cnt               STRING  COMMENT '支行_企业新增信用卡户数'

--,tem_grp_card_cnt               STRING  COMMENT '团队_企业新增信用卡户数'

--,mgr_grp_card_cnt               STRING  COMMENT '客户经理_企业新增信用卡户数'

--);



INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_01 PARTITION (DT = '20250331')

select  t1.cst_id                           	 --个人客户号

 ,t1.cst_nm                                      --个人客户名

 ,t1.prm_mgr_id                                  --主管户客户经理工号

 ,t1.prm_mgr_nm                                  --主管户客户经理名称

 ,t1.tem_org_id                                  --团队机构号

 ,t1.tem_org_nm                                  --团队机构名称

 ,t1.sbr_org_nm                                  --支行名称

 ,t1.brc_org_nm                                  --分行名称

 ,t1.ent_cst_id                                  --企业客户号

 ,t1.ent_cst_nm                                  --企业客户名

 ,t1.prm_mgr_id_ent                              --企业主管户客户经理工号

 ,t1.prm_mgr_nm_ent                              --企业主管户客户经理名称

 ,t1.tem_org_id_ent                              --企业主管团队机构号

 ,t1.tem_org_nm_ent                              --企业主管团队机构名称

 ,t1.sbr_org_nm_ent                              --企业主管支行名称

 ,t1.brc_org_nm_ent                              --企业主管分行名称

 ,t1.ctr_amt                                     --新增消费贷款合同金额合计

 ,t1.actl_start_use_crd_lmt                      --新增消费贷款启用额度合计

 ,t1.ctr_bal                                     --新增消费贷款合同余额合计

 ,t1.mon_acm_prcp_bal_acml                       --本金余额月日均

 ,t1.if_loan_xf                                  --是否持有消费贷款

 ,t1.efe_crd_cst_ind                             --是否有效信用卡户

 ,t1.efe_dep_cst_ind                             --是否有效存款户

 ,t1.efe_chm_cst_ind                             --是否有效理财户

 ,t1.efe_insu_cst_ind                            --是否有效保险户

 ,t1.efe_fnd_cst_ind                             --是否有效基金户

 ,t1.efe_nob_met_cst_ind                         --是否有效贵金属户

 ,t1.ctr_bal_all                                 --消费贷款合同余额总计

 ,t1.dep_bal                                     --存款余额

 ,t1.chm_bal                                     --理财余额

 ,t1.dep_bal_add                                 --新增存款余额

 ,t1.chm_bal_add                                 --新增理财余额

 ,t1.cst_val_grd                                 --客户价值等级

 ,t1.cprh_contri_cur_year                        --当年客户价值

 ,t1.loan_start_dt                               --最早消费贷款开始日期

 ,t1.crd_isu_dt                                  --最早信用卡发卡日期

 ,t1.dep_opn_dt                                  --最早存款开户日期

 ,t1.chm_trx_dt                                  --最早购买理财日期

 ,t1.insu_dt                                     --最早保险投保日期

 ,t1.fund_dt                                     --最早购买基金日期

 ,t1.nob_dt                                      --最早购买贵金属日期

 ,t1.brc_grp_cst_num                             --分行_企业授信客户数统计

 ,t1.brc_grp_mon_acm_prcp_bal_acml               --分行_企业本金余额月日均

 ,t1.brc_grp_actl_start_use_crd_lmt              --分行_企业本金启用额度

 ,t1.rn_brc_grp                                  --排序_分行_企业

 ,t1.pd_hld_qty_sum_brc                          --汇总产品持有数_分行

 ,t1.sbr_grp_cst_num                             --支行_企业授信客户数统计

 ,t1.sbr_grp_mon_acm_prcp_bal_acml               --支行_企业本金余额月日均

 ,t1.sbr_grp_actl_start_use_crd_lmt              --支行_企业本金启用额度

 ,t1.rn_sbr_grp                                  --排序_支行_企业

 ,t1.pd_hld_qty_sum_sbr                          --汇总产品持有数_支行

 ,t1.tem_grp_cst_num                             --团队_企业授信客户数统计

 ,t1.tem_grp_mon_acm_prcp_bal_acml               --团队_企业本金余额月日均

 ,t1.tem_grp_actl_start_use_crd_lmt              --团队_企业本金启用额度

 ,t1.rn_tem_grp                                  --排序_团队_企业

 ,t1.pd_hld_qty_sum_tem                          --汇总产品持有数_团队

 ,t1.mgr_grp_cst_num                             --客户经理_企业授信客户数统计

 ,t1.mgr_grp_mon_acm_prcp_bal_acml               --客户经理_企业本金余额月日均

 ,t1.mgr_grp_actl_start_use_crd_lmt              --客户经理_企业本金启用额度

 ,t1.rn_mgr_grp                                  --排序_客户经理_企业

 ,t1.pd_hld_qty_sum_mgr                          --汇总产品持有数_客户经理

 ,t1.brc_grp_cst_num2                            --分行_企业新增授信客户数统计含信用卡

 ,t1.sbr_grp_cst_num2                            --支行_企业新增授信客户数统计含信用卡

 ,t1.tem_grp_cst_num2                            --团队_企业新增授信客户数统计含信用卡

 ,t1.mgr_grp_cst_num2                            --客户经理_企业新增授信客户数统计含信用卡

 ,t1.brc_grp_card_cst_num                        --分行_企业新增信用卡客户数统计

 ,t1.sbr_grp_card_cst_num                        --支行_企业新增信用卡客户数统计

 ,t1.tem_grp_card_cst_num                        --团队_企业新增信用卡客户数统计

 ,t1.mgr_grp_card_cst_num                        --客户经理_企业新增信用卡客户数统计

 ,t1.brc_grp_pure_card_cst_num                   --分行_企业新增纯信用卡客户数统计

 ,t1.sbr_grp_pure_card_cst_num                   --支行_企业新增纯信用卡客户数统计

 ,t1.tem_grp_pure_card_cst_num                   --团队_企业新增纯信用卡客户数统计

 ,t1.mgr_grp_pure_card_cst_num                   --客户经理_企业新增纯信用卡客户数统计

 ,t1.brc_grp_ctr_bal                             --分行_企业新增消费贷款余额

 ,t1.sbr_grp_ctr_bal                             --支行_企业新增消费贷款余额

 ,t1.tem_grp_ctr_bal                             --团队_企业新增消费贷款余额

 ,t1.mgr_grp_ctr_bal                             --客户经理_企业新增消费贷款余额

 ,t1.yongxin_rate_mth_avg_brc                    --月日均用信率_分行

 ,t1.pd_hld_qty_avg_brc                          --客均产品持有数_分行

 ,t1.pltbxm_jl_brc                               --批量团办项目奖励_分行

 ,t1.pd_hld_qty_avg_jcxs_brc                     --平均产品持有数加成系数_分行

 ,t1.yongxin_rate_mth_avg_sbr                    --月日均用信率_支行

 ,t1.pd_hld_qty_avg_sbr                          --客均产品持有数_支行

 ,t1.pltbxm_jl_sbr                               --批量团办项目奖励_支行

 ,t1.pd_hld_qty_avg_jcxs_sbr                     --平均产品持有数加成系数_支行

 ,t1.yongxin_rate_mth_avg_tem                    --月日均用信率_团队

 ,t1.pd_hld_qty_avg_tem                          --客均产品持有数_团队

 ,t1.pltbxm_jl_tem                               --批量团办项目奖励_团队

 ,t1.pd_hld_qty_avg_jcxs_tem                     --平均产品持有数加成系数_团队

 ,t1.yongxin_rate_mth_avg_mgr                    --月日均用信率_客户经理

 ,t1.pd_hld_qty_avg_mgr                          --客均产品持有数_客户经理

 ,t1.pltbxm_jl_mgr                               --批量团办项目奖励_客户经理

 ,t1.pd_hld_qty_avg_jcxs_mgr                     --平均产品持有数加成系数_客户经理

 ,t1.brc_ctr_fenzi                               --分行_企业授信金额加权利率分子

 ,t1.brc_ctr_fenmu                               --分行_企业授信金额加权利率分母

 ,t1.sbr_ctr_fenzi                               --支行_企业授信金额加权利率分子

 ,t1.sbr_ctr_fenmu                               --支行_企业授信金额加权利率分母

 ,t1.tem_ctr_fenzi                               --团队_企业授信金额加权利率分子

 ,t1.tem_ctr_fenmu                               --团队_企业授信金额加权利率分母

 ,t1.mgr_ctr_fenzi                               --客户经理_企业授信金额加权利率分子

 ,t1.mgr_ctr_fenmu                               --客户经理_企业授信金额加权利率分母

 ,t1.brc_dbil_fenzi                              --分行_企业用信金额加权利率分子

 ,t1.brc_dbil_fenmu                              --分行_企业用信金额加权利率分母

 ,t1.sbr_dbil_fenzi                              --支行_企业用信金额加权利率分子

 ,t1.sbr_dbil_fenmu                              --支行_企业用信金额加权利率分母

 ,t1.tem_dbil_fenzi                              --团队_企业用信金额加权利率分子

 ,t1.tem_dbil_fenmu                              --团队_企业用信金额加权利率分母

 ,t1.mgr_dbil_fenzi                              --客户经理_企业用信金额加权利率分子

 ,t1.mgr_dbil_fenmu                              --客户经理_企业用信金额加权利率分母

 ,t1.brc_aum                                     --分行_企业aum

 ,t1.brc_aum_add                                 --分行_企业aum_add

 ,t1.sbr_aum                                     --支行_企业aum

 ,t1.sbr_aum_add                                 --支行_企业aum_add

 ,t1.tem_aum                                     --团队_企业aum

 ,t1.tem_aum_add                                 --团队_企业aum_add

 ,t1.mgr_aum                                     --客户经理_企业aum

 ,t1.mgr_aum_add                                 --客户经理_企业aum_add

 ,t1.if_jiandang                                 --是否建档

 ,t1.forml_cst_ind                               --正式客户标识

 ,t1.brc_grp_ctr_amt                             --分行_企业新增消费贷款金额

 ,t1.sbr_grp_ctr_amt                             --支行_企业新增消费贷款金额

 ,t1.tem_grp_ctr_amt                             --团队_企业新增消费贷款金额

 ,t1.mgr_grp_ctr_amt                             --客户经理_企业新增消费贷款金额

,t1.brc_grp_loan_dep_cst_num                     --分行_企业新增信贷客户中存款客户数统计

,t1.sbr_grp_loan_dep_cst_num                     --支行_企业新增信贷客户中存款客户数统计

,t1.tem_grp_loan_dep_cst_num                     --团队_企业新增信贷客户中存款客户数统计

,t1.mgr_grp_loan_dep_cst_num                     --客户经理_企业新增信贷客户中存款客户数统计

,t1.brc_grp_loan_chm_cst_num                     --分行_企业新增信贷客户中理财客户数统计

,t1.sbr_grp_loan_chm_cst_num                     --支行_企业新增信贷客户中理财客户数统计

,t1.tem_grp_loan_chm_cst_num                     --团队_企业新增信贷客户中理财客户数统计

,t1.mgr_grp_loan_chm_cst_num                     --客户经理_企业新增信贷客户中理财客户数统计

,t1.brc_grp_loan_insu_cst_num                    --分行_企业新增信贷客户中保险客户数统计

,t1.sbr_grp_loan_insu_cst_num                    --支行_企业新增信贷客户中保险客户数统计

,t1.tem_grp_loan_insu_cst_num                    --团队_企业新增信贷客户中保险客户数统计

,t1.mgr_grp_loan_insu_cst_num                    --客户经理_企业新增信贷客户中保险客户数统计

,t1.brc_grp_loan_fnd_cst_num                     --分行_企业新增信贷客户中基金客户数统计

,t1.sbr_grp_loan_fnd_cst_num                     --支行_企业新增信贷客户中基金客户数统计

,t1.tem_grp_loan_fnd_cst_num                     --团队_企业新增信贷客户中基金客户数统计

,t1.mgr_grp_loan_fnd_cst_num                     --客户经理_企业新增信贷客户中基金客户数统计

,t1.brc_grp_loan_nob_met_cst_num                 --分行_企业新增信贷客户中贵金属客户数统计

,t1.sbr_grp_loan_nob_met_cst_num                 --支行_企业新增信贷客户中贵金属客户数统计

,t1.tem_grp_loan_nob_met_cst_num                 --团队_企业新增信贷客户中贵金属客户数统计

,t1.mgr_grp_loan_nob_met_cst_num                 --客户经理_企业新增信贷客户中贵金属客户数统计

------客户经理

,case when t1.mgr_dbil_fenmu > 0 then t1.mgr_dbil_fenzi/t1.mgr_dbil_fenmu  else '' end   as  mgr_dbil_rate                      --客户经理加权平均用信利率

,case when t1.mgr_ctr_fenmu > 0 then t1.mgr_ctr_fenzi/t1.mgr_ctr_fenmu else ''     end   as  mgr_ctr_rate                       --客户经理加权平均授信利率

,case when t1.mgr_grp_cst_num2 > 0 and t1.mgr_grp_pure_card_cst_num/t1.mgr_grp_cst_num2 > 0.3 then  t1.mgr_grp_cst_num2-t1.mgr_grp_pure_card_cst_num + round(t1.mgr_grp_cst_num2*0.3) else t1.mgr_grp_cst_num2 end   as  zhesuanhou_mgr_grp_cst_num                                                                                                  --折算后_客户经理_企业新增授信客户数统计

,case when  (case when t1.mgr_grp_cst_num2 > 0 and t1.mgr_grp_pure_card_cst_num/t1.mgr_grp_cst_num2 > 0.3 then  t1.mgr_grp_cst_num2-t1.mgr_grp_pure_card_cst_num + round(t1.mgr_grp_cst_num2*0.3) else t1.mgr_grp_cst_num2 end) >= 10 then floor(case when t1.mgr_grp_cst_num2 > 0 and t1.mgr_grp_pure_card_cst_num/t1.mgr_grp_cst_num2 > 0.3 then  t1.mgr_grp_cst_num2-t1.mgr_grp_pure_card_cst_num + round(t1.mgr_grp_cst_num2*0.3) else t1.mgr_grp_cst_num2 end /5)       when (case when t1.mgr_grp_cst_num2 > 0 and t1.mgr_grp_pure_card_cst_num/t1.mgr_grp_cst_num2 > 0.3 then  t1.mgr_grp_cst_num2-t1.mgr_grp_pure_card_cst_num + round(t1.mgr_grp_cst_num2*0.3) else t1.mgr_grp_cst_num2 end) >=3 then 1  ELSE 0 END	  as  mgr_grp_project_num    --客户经理_企业新增项目数(5比1折算后)

,t1.pltbxm_jl_mgr*t1.pd_hld_qty_avg_jcxs_mgr    as    mgr_tbxmjj                                                                 --团办项目奖金_客户经理



------团队

,case when t1.tem_dbil_fenmu > 0 then t1.tem_dbil_fenzi/t1.tem_dbil_fenmu  else '' end   as  tem_dbil_rate                      --团队加权平均用信利率

,case when t1.tem_ctr_fenmu > 0 then t1.tem_ctr_fenzi/t1.tem_ctr_fenmu else ''     end   as  tem_ctr_rate                       --团队加权平均授信利率

,case when t1.tem_grp_cst_num2 > 0 and  t1.tem_grp_pure_card_cst_num/t1.tem_grp_cst_num2 > 0.3 then  t1.tem_grp_cst_num2-t1.tem_grp_pure_card_cst_num + round(t1.tem_grp_cst_num2*0.3)  else t1.tem_grp_cst_num2 end     as     zhesuanhou_tem_grp_cst_num       --折算后_团队_企业新增授信客户数统计

,case when  (case when t1.tem_grp_cst_num2 > 0 and t1.tem_grp_pure_card_cst_num/t1.tem_grp_cst_num2 > 0.3 then  t1.tem_grp_cst_num2-t1.tem_grp_pure_card_cst_num + round(t1.tem_grp_cst_num2*0.3) else t1.tem_grp_cst_num2 end) >= 10 then floor(case when t1.tem_grp_cst_num2 > 0 and t1.tem_grp_pure_card_cst_num/t1.tem_grp_cst_num2 > 0.3 then  t1.tem_grp_cst_num2-t1.tem_grp_pure_card_cst_num + round(t1.tem_grp_cst_num2*0.3) else t1.tem_grp_cst_num2 end /5)       when (case when t1.tem_grp_cst_num2 > 0 and t1.tem_grp_pure_card_cst_num/t1.tem_grp_cst_num2 > 0.3 then  t1.tem_grp_cst_num2-t1.tem_grp_pure_card_cst_num + round(t1.tem_grp_cst_num2*0.3) else t1.tem_grp_cst_num2 end) >=3 then 1  ELSE 0 END  as  tem_grp_project_num    --团队_企业新增项目数(5比1折算后)

,t1.pltbxm_jl_tem*t1.pd_hld_qty_avg_jcxs_tem    as   tem_tbxmjj                                                                 --团办项目奖金_团队



------支行

,case when t1.sbr_dbil_fenmu > 0 then t1.sbr_dbil_fenzi/t1.sbr_dbil_fenmu  else '' end   as  sbr_dbil_rate                      --支行加权平均用信利率

,case when t1.sbr_ctr_fenmu > 0 then t1.sbr_ctr_fenzi/t1.sbr_ctr_fenmu else ''     end   as  sbr_ctr_rate                       --支行加权平均授信利率

,case when t1.sbr_grp_cst_num2 > 0 and  t1.sbr_grp_pure_card_cst_num/t1.sbr_grp_cst_num2 > 0.3 then  t1.sbr_grp_cst_num2-t1.sbr_grp_pure_card_cst_num + round(t1.sbr_grp_cst_num2*0.3)  else t1.sbr_grp_cst_num2 end     as     zhesuanhou_sbr_grp_cst_num       --折算后_支行_企业新增授信客户数统计

,case when  (case when t1.sbr_grp_cst_num2 > 0 and t1.sbr_grp_pure_card_cst_num/t1.sbr_grp_cst_num2 > 0.3 then  t1.sbr_grp_cst_num2-t1.sbr_grp_pure_card_cst_num + round(t1.sbr_grp_cst_num2*0.3) else t1.sbr_grp_cst_num2 end) >= 10 then floor(case when t1.sbr_grp_cst_num2 > 0 and t1.sbr_grp_pure_card_cst_num/t1.sbr_grp_cst_num2 > 0.3 then  t1.sbr_grp_cst_num2-t1.sbr_grp_pure_card_cst_num + round(t1.sbr_grp_cst_num2*0.3) else t1.sbr_grp_cst_num2 end /5)       when (case when t1.sbr_grp_cst_num2 > 0 and t1.sbr_grp_pure_card_cst_num/t1.sbr_grp_cst_num2 > 0.3 then  t1.sbr_grp_cst_num2-t1.sbr_grp_pure_card_cst_num + round(t1.sbr_grp_cst_num2*0.3) else t1.sbr_grp_cst_num2 end) >=3 then 1  ELSE 0 END  as  sbr_grp_project_num    --支行_企业新增项目数(5比1折算后)

,t1.pltbxm_jl_sbr*t1.pd_hld_qty_avg_jcxs_sbr    as   sbr_tbxmjj     --团办项目奖金_支行



------分行

,case when t1.brc_dbil_fenmu > 0 then t1.brc_dbil_fenzi/t1.brc_dbil_fenmu  else '' end   as  brc_dbil_rate                      --分行加权平均用信利率

,case when t1.brc_ctr_fenmu > 0 then t1.brc_ctr_fenzi/t1.brc_ctr_fenmu else ''     end   as  brc_ctr_rate                       --分行加权平均授信利率

,case when t1.brc_grp_cst_num2 > 0 and  t1.brc_grp_pure_card_cst_num/t1.brc_grp_cst_num2 > 0.3 then  t1.brc_grp_cst_num2-t1.brc_grp_pure_card_cst_num + round(t1.brc_grp_cst_num2*0.3)  else t1.brc_grp_cst_num2 end     as     zhesuanhou_brc_grp_cst_num       --折算后_分行_企业新增授信客户数统计

,case when  (case when t1.brc_grp_cst_num2 > 0 and t1.brc_grp_pure_card_cst_num/t1.brc_grp_cst_num2 > 0.3 then  t1.brc_grp_cst_num2-t1.brc_grp_pure_card_cst_num + round(t1.brc_grp_cst_num2*0.3) else t1.brc_grp_cst_num2 end) >= 10 then floor(case when t1.brc_grp_cst_num2 > 0 and t1.brc_grp_pure_card_cst_num/t1.brc_grp_cst_num2 > 0.3 then  t1.brc_grp_cst_num2-t1.brc_grp_pure_card_cst_num + round(t1.brc_grp_cst_num2*0.3) else t1.brc_grp_cst_num2 end /5)       when (case when t1.brc_grp_cst_num2 > 0 and t1.brc_grp_pure_card_cst_num/t1.brc_grp_cst_num2 > 0.3 then  t1.brc_grp_cst_num2-t1.brc_grp_pure_card_cst_num + round(t1.brc_grp_cst_num2*0.3) else t1.brc_grp_cst_num2 end) >=3 then 1  ELSE 0 END  as  brc_grp_project_num    --分行_企业新增项目数(5比1折算后)

,t1.pltbxm_jl_brc*t1.pd_hld_qty_avg_jcxs_brc    as   brc_tbxmjj     --团办项目奖金_分行

,t1.brc_org_id               --分行层级机构编号

,t1.sbr_org_id               --支行层级机构编号

,t1.grp_org_id               --集团机构编号

,t1.cpy_org_id               --法人机构编号

,t1.brc_grp_card_cnt         --分行_企业新增信用卡户数

,t1.sbr_grp_card_cnt         --支行_企业新增信用卡户数

,t1.tem_grp_card_cnt         --团队_企业新增信用卡户数

,t1.mgr_grp_card_cnt         --客户经理_企业新增信用卡户数

from   lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp     t1

where   t1.dt = '20250331'

;







----2023年修改版&mdash;&mdash;最终结果汇总

--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_02  PURGE;

--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_02

--(   cst_id                               STRING  COMMENT '个人客户号'

--    ,cst_nm                              STRING  COMMENT '个人客户名'

--    ,ent_cst_nm                          STRING  COMMENT '企业客户名'

--    ,brc_org_nm                          STRING  COMMENT '分行名称'

--    ,rn_brc_grp                          STRING  COMMENT '排序_分行_企业'

--    ,brc_tbxmjj_last_jidu                DECIMAL COMMENT '分行_累计已发放奖励'

--    ,brc_tbxmjj_diff                     DECIMAL COMMENT '分行_本季待发放奖励'

--    ,if_jiandang                         STRING  COMMENT '是否建档'

--    ,forml_cst_ind                       STRING  COMMENT '正式客户标识'

--    ,brc_grp_cst_num                     DECIMAL COMMENT '分行_企业授信客户数统计'

--    ,brc_grp_ctr_amt                     DECIMAL COMMENT '分行_企业新增消费贷款金额'

--    ,brc_grp_ctr_bal                     DECIMAL COMMENT '分行_企业新增消费贷款余额'

--    ,brc_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '分行_企业本金余额月日均'

--    ,brc_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '分行_企业本金启用额度'

--    ,yongxin_rate_mth_avg_brc            DECIMAL COMMENT '月日均用信率_分行'

--    ,pd_hld_qty_avg_brc                  DECIMAL COMMENT '客均产品持有数_分行'

--    ,pltbxm_jl_brc                       DECIMAL COMMENT '批量团办项目奖励_分行'

--    ,pd_hld_qty_avg_jcxs_brc             DECIMAL COMMENT '平均产品持有数加成系数_分行'

--    ,brc_tbxmjj                          DECIMAL COMMENT '团办项目奖金_分行'

--    ,zhesuanhou_brc_grp_cst_num          DECIMAL COMMENT '折算后_分行_企业新增授信客户数统计'

--    ,brc_grp_project_num                 DECIMAL COMMENT '分行_企业新增项目数(5比1折算后)'

--    ,brc_ctr_rate                        DECIMAL COMMENT '分行加权平均授信利率'

--    ,brc_dbil_rate                       DECIMAL COMMENT '分行加权平均用信利率'

--    ,brc_aum                             DECIMAL COMMENT '分行_企业aum'

--    ,brc_aum_add                         DECIMAL COMMENT '分行_企业aum_add'

--    ,brc_grp_loan_dep_cst_num            DECIMAL COMMENT '分行_企业新增信贷客户中存款客户数统计'

--    ,brc_grp_loan_chm_cst_num            DECIMAL COMMENT '分行_企业新增信贷客户中理财客户数统计'

--    ,brc_grp_loan_insu_cst_num           DECIMAL COMMENT '分行_企业新增信贷客户中保险客户数统计'

--    ,brc_grp_loan_fnd_cst_num            DECIMAL COMMENT '分行_企业新增信贷客户中基金客户数统计'

--    ,brc_grp_loan_nob_met_cst_num        DECIMAL COMMENT '分行_企业新增信贷客户中贵金属客户数统计'

--    ,sbr_org_nm                          STRING  COMMENT '支行名称'

--    ,rn_sbr_grp                          STRING  COMMENT '排序_支行_企业'

--    ,sbr_tbxmjj_last_jidu                DECIMAL COMMENT '支行_累计已发放奖励'

--    ,sbr_tbxmjj_diff                     DECIMAL COMMENT '支行_本季待发放奖励'

--    ,sbr_grp_cst_num                     DECIMAL COMMENT '支行_企业授信客户数统计'

--    ,sbr_grp_ctr_amt                     DECIMAL COMMENT '支行_企业新增消费贷款金额'

--    ,sbr_grp_ctr_bal                     DECIMAL COMMENT '支行_企业新增消费贷款余额'

--    ,sbr_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '支行_企业本金余额月日均'

--    ,sbr_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '支行_企业本金启用额度'

--    ,yongxin_rate_mth_avg_sbr            DECIMAL COMMENT '月日均用信率_支行'

--    ,pd_hld_qty_avg_sbr                  DECIMAL COMMENT '客均产品持有数_支行'

--    ,pltbxm_jl_sbr                       DECIMAL COMMENT '批量团办项目奖励_支行'

--    ,pd_hld_qty_avg_jcxs_sbr             DECIMAL COMMENT '平均产品持有数加成系数_支行'

--    ,sbr_tbxmjj                          DECIMAL COMMENT '团办项目奖金_支行'

--    ,zhesuanhou_sbr_grp_cst_num          DECIMAL COMMENT '折算后_支行_企业新增授信客户数统计 '

--    ,sbr_grp_project_num                 DECIMAL COMMENT '支行_企业新增项目数(5比1折算后)'

--    ,sbr_ctr_rate                        DECIMAL COMMENT '支行加权平均授信利率'

--    ,sbr_dbil_rate                       DECIMAL COMMENT '支行加权平均用信利率'

--    ,sbr_aum                             DECIMAL COMMENT '支行_企业aum'

--    ,sbr_aum_add                         DECIMAL COMMENT '支行_企业aum_add'

--    ,sbr_grp_loan_dep_cst_num            DECIMAL COMMENT '支行_企业新增信贷客户中存款客户数统计'

--    ,sbr_grp_loan_chm_cst_num            DECIMAL COMMENT '支行_企业新增信贷客户中理财客户数统计'

--    ,sbr_grp_loan_insu_cst_num           DECIMAL COMMENT '支行_企业新增信贷客户中保险客户数统计'

--    ,sbr_grp_loan_fnd_cst_num            DECIMAL COMMENT '支行_企业新增信贷客户中基金客户数统计'

--    ,sbr_grp_loan_nob_met_cst_num        DECIMAL COMMENT '支行_企业新增信贷客户中贵金属客户数统计'

--    ,tem_org_id                          STRING  COMMENT '团队机构号'

--    ,tem_org_nm                          STRING  COMMENT '团队机构名称'

--    ,rn_tem_grp                          STRING  COMMENT '排序_团队_企业'

--    ,tem_tbxmjj_last_jidu                DECIMAL COMMENT '团队_累计已发放奖励'

--    ,tem_tbxmjj_diff                     DECIMAL COMMENT '团队_本季待发放奖励'

--    ,tem_grp_cst_num                     DECIMAL COMMENT '团队_企业授信客户数统计'

--    ,tem_grp_ctr_amt                     DECIMAL COMMENT '团队_企业新增消费贷款金额'

--    ,tem_grp_ctr_bal                     DECIMAL COMMENT '团队_企业新增消费贷款余额'

--    ,tem_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '团队_企业本金余额月日均'

--    ,tem_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '团队_企业本金启用额度'

--    ,yongxin_rate_mth_avg_tem            DECIMAL COMMENT '月日均用信率_团队'

--    ,pd_hld_qty_avg_tem                  DECIMAL COMMENT '客均产品持有数_团队'

--    ,pltbxm_jl_tem                       DECIMAL COMMENT '批量团办项目奖励_团队'

--    ,pd_hld_qty_avg_jcxs_tem             DECIMAL COMMENT '平均产品持有数加成系数_团队'

--    ,tem_tbxmjj                          DECIMAL COMMENT '团办项目奖金_团队'

--    ,zhesuanhou_tem_grp_cst_num          DECIMAL COMMENT '折算后_团队_企业新增授信客户数统计'

--    ,tem_grp_project_num                 DECIMAL COMMENT '团队_企业新增项目数(5比1折算后)'

--    ,tem_ctr_rate                        DECIMAL COMMENT '团队加权平均授信利率'

--    ,tem_dbil_rate                       DECIMAL COMMENT '团队加权平均用信利率'

--    ,tem_aum                             DECIMAL COMMENT '团队_企业aum'

--    ,tem_aum_add                         DECIMAL COMMENT '团队_企业aum_add'

--    ,tem_grp_loan_dep_cst_num            DECIMAL COMMENT '团队_企业新增信贷客户中存款客户数统计'

--    ,tem_grp_loan_chm_cst_num            DECIMAL COMMENT '团队_企业新增信贷客户中理财客户数统计'

--    ,tem_grp_loan_insu_cst_num           DECIMAL COMMENT '团队_企业新增信贷客户中保险客户数统计'

--    ,tem_grp_loan_fnd_cst_num            DECIMAL COMMENT '团队_企业新增信贷客户中基金客户数统计'

--    ,tem_grp_loan_nob_met_cst_num        DECIMAL COMMENT '团队_企业新增信贷客户中贵金属客户数统计'

--    ,prm_mgr_id                          STRING  COMMENT '主管户客户经理工号'

--    ,prm_mgr_nm                          STRING  COMMENT '主管户客户经理名称'

--    ,rn_mgr_grp                          STRING  COMMENT '排序_客户经理_企业'

--    ,mgr_tbxmjj_last_jidu                DECIMAL COMMENT '客户经理_累计已发放奖励'

--    ,mgr_tbxmjj_diff                     DECIMAL COMMENT '客户经理_本季待发放奖励'

--    ,mgr_grp_cst_num                     DECIMAL COMMENT '客户经理_企业授信客户数统计'

--    ,mgr_grp_ctr_amt                     DECIMAL COMMENT '客户经理_企业新增消费贷款金额'

--    ,mgr_grp_ctr_bal                     DECIMAL COMMENT '客户经理_企业新增消费贷款余额'

--    ,mgr_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '客户经理_企业本金余额月日均'

--    ,mgr_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '客户经理_企业本金启用额度'

--    ,yongxin_rate_mth_avg_mgr            DECIMAL COMMENT '月日均用信率_客户经理'

--    ,pd_hld_qty_avg_mgr                  DECIMAL COMMENT '客均产品持有数_客户经理'

--    ,pltbxm_jl_mgr                       DECIMAL COMMENT '批量团办项目奖励_客户经理'

--    ,pd_hld_qty_avg_jcxs_mgr             DECIMAL COMMENT '平均产品持有数加成系数_客户经理'

--    ,mgr_tbxmjj                          DECIMAL COMMENT '团办项目奖金_客户经理'

--    ,zhesuanhou_mgr_grp_cst_num          DECIMAL COMMENT '折算后_客户经理_企业新增授信客户数统计'

--    ,mgr_grp_project_num                 DECIMAL COMMENT '客户经理_企业新增项目数(5比1折算后)'

--    ,mgr_ctr_rate                        DECIMAL COMMENT '客户经理加权平均授信利率'

--    ,mgr_dbil_rate                       DECIMAL COMMENT '客户经理加权平均用信利率'

--    ,mgr_aum                             DECIMAL COMMENT '客户经理_企业aum'

--    ,mgr_aum_add                         DECIMAL COMMENT '客户经理_企业aum_add'

--    ,mgr_grp_loan_dep_cst_num            DECIMAL COMMENT '客户经理_企业新增信贷客户中存款客户数统计'

--    ,mgr_grp_loan_chm_cst_num            DECIMAL COMMENT '客户经理_企业新增信贷客户中理财客户数统计'

--    ,mgr_grp_loan_insu_cst_num           DECIMAL COMMENT '客户经理_企业新增信贷客户中保险客户数统计'

--    ,mgr_grp_loan_fnd_cst_num            DECIMAL COMMENT '客户经理_企业新增信贷客户中基金客户数统计'

--    ,mgr_grp_loan_nob_met_cst_num        DECIMAL COMMENT '客户经理_企业新增信贷客户中贵金属客户数统计'

--    ,brc_org_id                          STRING  COMMENT '分行层级机构编号'

--    ,sbr_org_id                          STRING  COMMENT '支行层级机构编号'

--)

-- COMMENT

-- '企业团办_SHEET4-企业清单2_汇总02'

-- PARTITIONED BY

-- (

--     DT STRING COMMENT '日期分区'

-- );



-----新增表字段

-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_02 add  columns

--(grp_org_id               STRING  COMMENT '集团机构编号'

--,cpy_org_id               STRING  COMMENT '法人机构编号'

--);





-----新增表字段

-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_02 add  columns

--(brc_grp_card_cnt               STRING  COMMENT '分行_企业新增信用卡户数'

--,sbr_grp_card_cnt               STRING  COMMENT '支行_企业新增信用卡户数'

--,tem_grp_card_cnt               STRING  COMMENT '团队_企业新增信用卡户数'

--,mgr_grp_card_cnt               STRING  COMMENT '客户经理_企业新增信用卡户数'

--);



INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_02 PARTITION (DT = '20250331')

select distinct  t1.cst_id                            --个人客户号

,t1.cst_nm                             --个人客户名

,t1.ent_cst_nm                         -- 企业客户名

,t1.brc_org_nm                         --分行名称

,t1.rn_brc_grp                         --排序_分行_企业

,nvl(t2.brc_tbxmjj,0)   as    brc_tbxmjj_last_jidu                -- 分行_累计已发放奖励

,case when   nvl(t1.brc_tbxmjj,0) > nvl(t2.brc_tbxmjj,0)  and (nvl(t1.brc_grp_cst_num,0) > nvl(t2.brc_grp_cst_num,0) or nvl(t1.yongxin_rate_mth_avg_brc,0) > nvl(t2.yongxin_rate_mth_avg_brc,0)  or nvl(t1.pd_hld_qty_avg_brc,0) > nvl(t2.pd_hld_qty_avg_brc,0))  then  round((nvl(t1.brc_tbxmjj,0) - nvl(t2.brc_tbxmjj,0)),0)  else  0  end  as   brc_tbxmjj_diff                      -- 分行_本季待发放奖励

,t1.if_jiandang                        -- 是否建档

,t1.forml_cst_ind                      -- 正式客户标识

,t1.brc_grp_cst_num                    -- 分行_企业授信客户数统计

,t1.brc_grp_ctr_amt                    -- 分行_企业新增消费贷款金额

,t1.brc_grp_ctr_bal                    -- 分行_企业新增消费贷款余额

,t1.brc_grp_mon_acm_prcp_bal_acml      -- 分行_企业本金余额月日均

,t1.brc_grp_actl_start_use_crd_lmt     -- 分行_企业本金启用额度

,t1.yongxin_rate_mth_avg_brc           -- 月日均用信率_分行

,t1.pd_hld_qty_avg_brc                 -- 客均产品持有数_分行

,t1.pltbxm_jl_brc                      -- 批量团办项目奖励_分行

,t1.pd_hld_qty_avg_jcxs_brc            -- 平均产品持有数加成系数_分行

,t1.brc_tbxmjj                         -- 团办项目奖金_分行

,t1.zhesuanhou_brc_grp_cst_num         -- 折算后_分行_企业新增授信客户数统计

,t1.brc_grp_project_num                -- 分行_企业新增项目数(5比1折算后)

,t1.brc_ctr_rate                       -- 分行加权平均授信利率

,t1.brc_dbil_rate                      -- 分行加权平均用信利率

,t1.brc_aum                            -- 分行_企业aum

,t1.brc_aum_add                        -- 分行_企业aum_add

,t1.brc_grp_loan_dep_cst_num           --分行_企业新增信贷客户中存款客户数统计

,t1.brc_grp_loan_chm_cst_num           --分行_企业新增信贷客户中理财客户数统计

,t1.brc_grp_loan_insu_cst_num          --分行_企业新增信贷客户中保险客户数统计

,t1.brc_grp_loan_fnd_cst_num           --分行_企业新增信贷客户中基金客户数统计

,t1.brc_grp_loan_nob_met_cst_num       --分行_企业新增信贷客户中贵金属客户数统计

,t1.sbr_org_nm                          --支行名称

,t1.rn_sbr_grp                          --排序_支行_企业

,nvl(t3.sbr_tbxmjj,0)   as    sbr_tbxmjj_last_jidu     --20231231已发放奖金_支行

,case when   nvl(t1.sbr_tbxmjj,0) > nvl(t3.sbr_tbxmjj,0)  and (nvl(t1.sbr_grp_cst_num,0) > nvl(t3.sbr_grp_cst_num,0) or nvl(t1.yongxin_rate_mth_avg_sbr,0) > nvl(t3.yongxin_rate_mth_avg_sbr,0)  or nvl(t1.pd_hld_qty_avg_sbr,0) > nvl(t3.pd_hld_qty_avg_sbr,0))  then  round((nvl(t1.sbr_tbxmjj,0) - nvl(t3.sbr_tbxmjj,0)),0)  else  0  end  as   sbr_tbxmjj_diff      --本季待发放奖励_支行

,t1.sbr_grp_cst_num                     --支行_企业授信客户数统计

,t1.sbr_grp_ctr_amt                     --支行_企业新增消费贷款金额

,t1.sbr_grp_ctr_bal                     --支行_企业新增消费贷款余额

,t1.sbr_grp_mon_acm_prcp_bal_acml       --支行_企业本金余额月日均

,t1.sbr_grp_actl_start_use_crd_lmt      --支行_企业本金启用额度

,t1.yongxin_rate_mth_avg_sbr            --月日均用信率_支行

,t1.pd_hld_qty_avg_sbr                  --客均产品持有数_支行

,t1.pltbxm_jl_sbr                       --批量团办项目奖励_支行

,t1.pd_hld_qty_avg_jcxs_sbr             --平均产品持有数加成系数_支行

,t1.sbr_tbxmjj                          --团办项目奖金_支行

,t1.zhesuanhou_sbr_grp_cst_num          --折算后_支行_企业新增授信客户数统计

,t1.sbr_grp_project_num                 --支行_企业新增项目数(5比1折算后)

,t1.sbr_ctr_rate                        --支行加权平均授信利率

,t1.sbr_dbil_rate                       --支行加权平均用信利率

,t1.sbr_aum                             --支行_企业aum

,t1.sbr_aum_add                         --支行_企业aum_add

,t1.sbr_grp_loan_dep_cst_num            --支行_企业新增信贷客户中存款客户数统计

,t1.sbr_grp_loan_chm_cst_num            --支行_企业新增信贷客户中理财客户数统计

,t1.sbr_grp_loan_insu_cst_num           --支行_企业新增信贷客户中保险客户数统计

,t1.sbr_grp_loan_fnd_cst_num            --支行_企业新增信贷客户中基金客户数统计

,t1.sbr_grp_loan_nob_met_cst_num        --支行_企业新增信贷客户中贵金属客户数统计

,t1.tem_org_id                          --团队机构号

,t1.tem_org_nm                          --团队机构名称

,rn_tem_grp                             --排序_团队_企业

,nvl(t4.tem_tbxmjj,0)   as    tem_tbxmjj_last_jidu     --20231231已发放奖金_团队

,case when   nvl(t1.tem_tbxmjj,0) > nvl(t4.tem_tbxmjj,0)  and (nvl(t1.tem_grp_cst_num,0) > nvl(t4.tem_grp_cst_num,0) or nvl(t1.yongxin_rate_mth_avg_tem,0) > nvl(t4.yongxin_rate_mth_avg_tem,0)  or nvl(t1.pd_hld_qty_avg_tem,0) > nvl(t4.pd_hld_qty_avg_tem,0))  then  round((nvl(t1.tem_tbxmjj,0) - nvl(t4.tem_tbxmjj,0)),0)  else  0  end  as   tem_tbxmjj_diff      --本季待发放奖励_团队

,t1.tem_grp_cst_num                     --团队_企业授信客户数统计

,t1.tem_grp_ctr_amt                     --团队_企业新增消费贷款金额

,t1.tem_grp_ctr_bal                     --团队_企业新增消费贷款余额

,t1.tem_grp_mon_acm_prcp_bal_acml       --团队_企业本金余额月日均

,t1.tem_grp_actl_start_use_crd_lmt      --团队_企业本金启用额度

,t1.yongxin_rate_mth_avg_tem            --月日均用信率_团队

,t1.pd_hld_qty_avg_tem                  --客均产品持有数_团队

,t1.pltbxm_jl_tem                       --批量团办项目奖励_团队

,t1.pd_hld_qty_avg_jcxs_tem             --平均产品持有数加成系数_团队

,t1.tem_tbxmjj                          --团办项目奖金_团队

,t1.zhesuanhou_tem_grp_cst_num          --折算后_团队_企业新增授信客户数统计

,t1.tem_grp_project_num                 --团队_企业新增项目数(5比1折算后)

,t1.tem_ctr_rate                        --团队加权平均授信利率

,t1.tem_dbil_rate                       --团队加权平均用信利率

,t1.tem_aum                             --团队_企业aum

,t1.tem_aum_add                         --团队_企业aum_add

,t1.tem_grp_loan_dep_cst_num            --团队_企业新增信贷客户中存款客户数统计

,t1.tem_grp_loan_chm_cst_num            --团队_企业新增信贷客户中理财客户数统计

,t1.tem_grp_loan_insu_cst_num           --团队_企业新增信贷客户中保险客户数统计

,t1.tem_grp_loan_fnd_cst_num            --团队_企业新增信贷客户中基金客户数统计

,t1.tem_grp_loan_nob_met_cst_num        --团队_企业新增信贷客户中贵金属客户数统计

,t1.prm_mgr_id                          --主管户客户经理工号

,t1.prm_mgr_nm                            --主管户客户经理名称

,t1.rn_mgr_grp                            --排序_客户经理_企业

,nvl(t5.mgr_tbxmjj,0)   as    mgr_tbxmjj_last_jidu    --20231231已发放奖金_客户经理

,case when   nvl(t1.mgr_tbxmjj,0) > nvl(t5.mgr_tbxmjj,0)  and (nvl(t1.mgr_grp_cst_num,0) > nvl(t5.mgr_grp_cst_num,0) or nvl(t1.yongxin_rate_mth_avg_mgr,0) > nvl(t5.yongxin_rate_mth_avg_mgr,0)  or nvl(t1.pd_hld_qty_avg_mgr,0) > nvl(t5.pd_hld_qty_avg_mgr,0))  then  round((nvl(t1.mgr_tbxmjj,0) - nvl(t5.mgr_tbxmjj,0)),0)  else  0  end  as   mgr_tbxmjj_diff      --本季待发放奖励_客户经理

,t1.mgr_grp_cst_num                     --客户经理_企业授信客户数统计

,t1.mgr_grp_ctr_amt                     --客户经理_企业新增消费贷款金额

,t1.mgr_grp_ctr_bal                     --客户经理_企业新增消费贷款余额

,t1.mgr_grp_mon_acm_prcp_bal_acml       --客户经理_企业本金余额月日均

,t1.mgr_grp_actl_start_use_crd_lmt      --客户经理_企业本金启用额度

,t1.yongxin_rate_mth_avg_mgr            --月日均用信率_客户经理

,t1.pd_hld_qty_avg_mgr                  --客均产品持有数_客户经理

,t1.pltbxm_jl_mgr                       --批量团办项目奖励_客户经理

,t1.pd_hld_qty_avg_jcxs_mgr             --平均产品持有数加成系数_客户经理

,t1.mgr_tbxmjj                          --团办项目奖金_客户经理

,t1.zhesuanhou_mgr_grp_cst_num          --折算后_客户经理_企业新增授信客户数统计

,t1.mgr_grp_project_num                 --客户经理_企业新增项目数(5比1折算后)

,t1.mgr_ctr_rate                        --客户经理加权平均授信利率

,t1.mgr_dbil_rate                       --客户经理加权平均用信利率

,t1.mgr_aum                             --客户经理_企业aum

,t1.mgr_aum_add                         --客户经理_企业aum_add

,t1.mgr_grp_loan_dep_cst_num            --客户经理_企业新增信贷客户中存款客户数统计

,t1.mgr_grp_loan_chm_cst_num            --客户经理_企业新增信贷客户中理财客户数统计

,t1.mgr_grp_loan_insu_cst_num           --客户经理_企业新增信贷客户中保险客户数统计

,t1.mgr_grp_loan_fnd_cst_num            --客户经理_企业新增信贷客户中基金客户数统计

,t1.mgr_grp_loan_nob_met_cst_num        --客户经理_企业新增信贷客户中贵金属客户数统计

,t1.brc_org_id                          --分行层级机构编号

,t1.sbr_org_id                          --支行层级机构编号

,t1.grp_org_id                          --集团机构编号

,t1.cpy_org_id                          --法人机构编号

,t1.brc_grp_card_cnt                    --分行_企业新增信用卡户数

,t1.sbr_grp_card_cnt                    --支行_企业新增信用卡户数

,t1.tem_grp_card_cnt                    --团队_企业新增信用卡户数

,t1.mgr_grp_card_cnt                    --客户经理_企业新增信用卡户数

from  lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_01  t1

left join (select  distinct  ent_cst_nm                     --企业客户名

        ,brc_org_nm                                  --分行名称

		,brc_tbxmjj                     -- 团办项目奖金_分行

		,brc_grp_cst_num                -- 分行_企业授信客户数统计

		,yongxin_rate_mth_avg_brc       -- 月日均用信率_分行

		,pd_hld_qty_avg_brc             -- 客均产品持有数_分行

from   lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_01

where  dt = to_char(dateadd(DATETRUNC(TO_DATE('20250331', 'yyyymmdd'), 'Q'), -1,'dd'),'yyyymmdd')    --上季度最后一天

)  t2

ON      t1.ent_cst_nm = t2.ent_cst_nm

AND     t1.brc_org_nm = t2.brc_org_nm

left join (select  distinct  ent_cst_nm                     --企业客户名

        ,sbr_org_nm                                  --支行名称

		,sbr_tbxmjj                     -- 团办项目奖金_支行

		,sbr_grp_cst_num                -- 支行_企业授信客户数统计

		,yongxin_rate_mth_avg_sbr       -- 月日均用信率_支行

		,pd_hld_qty_avg_sbr             -- 客均产品持有数_支行

from   lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_01

where  dt = to_char(dateadd(DATETRUNC(TO_DATE('20250331', 'yyyymmdd'), 'Q'), -1,'dd'),'yyyymmdd')    --上季度最后一天

)  t3

ON      t1.ent_cst_nm = t3.ent_cst_nm

AND     t1.sbr_org_nm = t3.sbr_org_nm

left join (select  distinct  ent_cst_nm                     --企业客户名

        ,tem_org_nm                                  --团队机构名称

        ,tem_org_id                                  --团队机构号

		,tem_tbxmjj                       --团办项目奖金_团队

		,tem_grp_cst_num                  --团队_企业授信客户数统计

		,yongxin_rate_mth_avg_tem         --月日均用信率_团队

		,pd_hld_qty_avg_tem               --客均产品持有数_团队

from   lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_01

where  dt = to_char(dateadd(DATETRUNC(TO_DATE('20250331', 'yyyymmdd'), 'Q'), -1,'dd'),'yyyymmdd')    --上季度最后一天

)  t4

ON      t1.ent_cst_nm = t4.ent_cst_nm

AND     t1.tem_org_nm = t4.tem_org_nm

left join (select  distinct  ent_cst_nm                     --企业客户名

        ,prm_mgr_nm                                  --主管户客户经理名称

 		,prm_mgr_id                                  --主管户客户经理工号

		,mgr_tbxmjj                       --团办项目奖金_客户经理

		,mgr_grp_cst_num                  --客户经理_企业授信客户数统计

		,yongxin_rate_mth_avg_mgr         --月日均用信率_客户经理

		,pd_hld_qty_avg_mgr               --客均产品持有数_客户经理

from   lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_01

where  dt = to_char(dateadd(DATETRUNC(TO_DATE('20250331', 'yyyymmdd'), 'Q'), -1,'dd'),'yyyymmdd')    --上季度最后一天

)  t5

ON      t1.ent_cst_nm = t5.ent_cst_nm

AND     t1.prm_mgr_nm = t5.prm_mgr_nm

where  t1.dt = '20250331'

;









--20230701-20231231新增的截止到最新日期未到期未结清的消费贷款客户'  更新后：31636，更新前：36024

DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_wdq_wjq_20231231 purge;



CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_wdq_wjq_20231231    as

SELECT  DISTINCT coalesce(T9.cst_id,'-') ent_cst_id --企业客户号

                 ,coalesce(T8.job_unt_nm,'-') ent_cst_nm --企业客户名称

                 ,coalesce(T1.cst_id,'-') cst_id --客户号

                 ,coalesce(T1.cst_nm,'-') cst_nm --客户名称

                 ,coalesce(T20.prm_mgr_id,'-') prm_mgr_id --个人主管户客户经理工号

                 ,coalesce(T20.prm_mgr_nm,'-') prm_mgr_nm --个人主管户客户经理名称

                 ,coalesce(T21.tem_org_id,'-') tem_org_id --个人团队机构号

                 ,coalesce(T21.tem_org_nm,'-') tem_org_nm --个人团队名称

                 ,coalesce(T21.sbr_org_nm,'-') sbr_org_nm --个人支行名称

                 ,coalesce(T21.brc_org_nm,'-') brc_org_nm --个人分行名称

FROM    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD T1 --合同基础信息

LEFT JOIN    edw.dim_cst_bas_inf_dd T2 --客户基本信息

ON      T1.cst_id = T2.cst_id

AND     T2.dt = '20250331'

LEFT JOIN    EDW.DWD_BUS_LOAN_FNC_CRD_LMT_INF_DD T7 ----随贷通授信额度信息

ON      T7.BUS_CTR_ID = T1.CTR_SERNO

AND     T7.LOAN_USG_CD = '2' --随贷通消费性贷款

AND     T7.DT = '20250331'

LEFT JOIN    edw.dim_cst_idv_bas_inf_dd   T8   --个人客户基本信息

ON      T1.cst_id = T8.cst_id

and     T8.dt = '20250331'

LEFT JOIN    edw.dim_cst_entp_bas_inf_dd T9 --企业客户基本信息

ON      T8.job_unt_nm = T9.cst_nm

AND     T9.dt = '20250331'

LEFT JOIN    adm_pub_app.adm_pblc_cst_prm_mng_inf_dd T20 --客户主管户信息

ON      T1.cst_id = T20.cst_id

AND     T20.dt = '20250331'

LEFT JOIN    edw.dim_hr_org_mng_org_tree_dd T21 --机构树

ON      T20.prm_org_id = T21.org_id

AND     T21.dt = '20250331'

LEFT JOIN    (

                 SELECT  A1.CTR_SERNO

                 FROM    EDW.DIM_BUS_LOAN_CTR_BSE_INF_DD A1 -- 合同基础信息

                 INNER JOIN    EDW.DWD_BUS_LOAN_PRPS_REL_DD A2 --方案关联

                 ON      A1.CTR_SERNO = A2.REL_ID

                 AND     A2.DT = '20250331'

                 INNER JOIN    EDW.DWD_BUS_LOAN_ZXT_LOAN_PRPS_APL_DD A3 --助兴通贷款方案申请

                 ON      A2.PRPS_ID = A3.PRPS_ID -- 找到重组的方案号

                 AND     A3.DT = '20250331'

                 WHERE   A1.DT = '20250331'

                 GROUP BY A1.CTR_SERNO

             ) T22 --助兴通合同

ON      T1.CTR_SERNO = T22.CTR_SERNO

WHERE   T1.dt = '20250331'

AND     ( ( T1.PRD_NO like '200101%'   --个人消费性贷款

and     T1.PRD_NO <> '2001010101003'   --剔除 随贷通（消费）

AND     T1.TMT_DT = '18991231'

AND     T1.CTR_MTU_DT > '20250331' )

    OR ( T1.PRD_NO = '2001010101003'    --随贷通（消费）

AND     T7.lmt_sts_cd IN ( '0' , '3' , '4' ) ) ) --个人消费性贷款未到期未终结；随贷通-消费 额度状态已激活

AND     T2.LOAN_CST_TYP_CD in ( '04','08','09')  --工薪族

AND     T1.CTR_BGN_DT >= '20230701'

and     T1.CTR_BGN_DT <= '20231231'  --活动期间

AND     T1.BSN_MARK_CD NOT IN ( '01' )  --剔除员工贷款

AND     ( T1.BSN_MARK_CD <> '04'

AND     T22.CTR_SERNO IS NULL ) --剔除重组贷款

AND     LENGTH(t8.job_unt_nm) > 3

AND     T1.CTR_STS_CD not in ( '1','3','5')    --剔除1：未生效，3	终止，5	作废

;





--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_cst_cnt_wdq_wjq_20231231 purge;



--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_cst_cnt_wdq_wjq_20231231

--(

--    ent_cst_id              STRING  COMMENT '企业客户号'

--    ,ent_cst_nm             STRING  COMMENT '企业客户名'

--    ,prm_mgr_id             STRING  COMMENT '个人主管户客户经理工号'

--    ,prm_mgr_nm             STRING  COMMENT '个人主管户客户经理名称'

--    ,tem_org_id             STRING  COMMENT '个人团队机构号'

--    ,tem_org_nm             STRING  COMMENT '个人团队名称'

--    ,sbr_org_nm             STRING  COMMENT '个人支行名称'

--    ,brc_org_nm             STRING  COMMENT '个人分行名称'

--    ,brc_grp_cst_num        BIGINT  COMMENT '分行_企业授信客户数统计'

--    ,sbr_grp_cst_num        BIGINT  COMMENT '支行_企业授信客户数统计'

--    ,tem_grp_cst_num        BIGINT  COMMENT '团队_企业授信客户数统计'

--    ,mgr_grp_cst_num        BIGINT  COMMENT '客户经理_企业授信客户数统计'

--)

--COMMENT

--'各层级截止20231231新增到当前日期未到期未终结消费贷款客户数'

--;



INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bus_loan_cst_cnt_wdq_wjq_20231231

 select  distinct  t2.ent_cst_id --企业客户号

        ,t2.ent_cst_nm --企业客户名

	    	,t2.prm_mgr_id --主管户客户经理工号

        ,t2.prm_mgr_nm --主管户客户经理名称

        ,t2.tem_org_id --团队机构号

        ,t2.tem_org_nm --团队名称

        ,t2.sbr_org_nm --支行名称

        ,t2.brc_org_nm --分行名称

		,t2.brc_grp_cst_num       --分行_企业授信客户数统计

		,t2.sbr_grp_cst_num       --支行_企业授信客户数统计

		,t2.tem_grp_cst_num       --团队_企业授信客户数统计

		,t2.mgr_grp_cst_num       --客户经理_企业授信客户数统计

from  (select   t1.ent_cst_id --企业客户号

        ,t1.ent_cst_nm --企业客户名

        ,t1.prm_mgr_id --主管户客户经理工号

        ,t1.prm_mgr_nm --主管户客户经理名称

        ,t1.tem_org_id --团队机构号

        ,t1.tem_org_nm --团队名称

        ,t1.sbr_org_nm --支行名称

        ,t1.brc_org_nm --分行名称

        ,T1.cst_id  --客户号

        ,t1.cst_nm  --客户名称

,count(DISTINCT  t1.cst_id)  OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) brc_grp_cst_num --分行_企业授信客户数统计

,count(DISTINCT  t1.cst_id)  OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) sbr_grp_cst_num --支行_企业授信客户数统计

,count(DISTINCT  t1.cst_id)  OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) tem_grp_cst_num --团队_企业授信客户数统计

,count(DISTINCT  t1.cst_id)  OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) mgr_grp_cst_num --客户经理_企业授信客户数统计

from   lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_wdq_wjq_20231231		t1

 )  t2

 ;







------2024年企业团办综合产效底表

--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_all_2024_new purge;

--

--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_all_2024_new

--(

--    ent_cst_id              STRING  COMMENT '企业客户号'

--    ,ent_cst_nm             STRING  COMMENT '企业客户名'

--    ,prm_mgr_id             STRING  COMMENT '主管户客户经理工号'

--    ,prm_mgr_nm             STRING  COMMENT '主管户客户经理名称'

--    ,tem_org_id             STRING  COMMENT '团队机构号'

--    ,tem_org_nm             STRING  COMMENT '团队机构名称'

--    ,sbr_org_nm             STRING  COMMENT '支行名称'

--    ,brc_org_nm             STRING  COMMENT '分行名称'

--    ,cst_id                 STRING  COMMENT '个人客户号'

--    ,busi_ctr_id            STRING  COMMENT '合同号'

--    ,pd_cd                  STRING  COMMENT '产品代码'

--    ,pd_nm                  STRING  COMMENT '产品名称'

--    ,ctr_amt                DECIMAL COMMENT '合同金额'

--    ,ctr_bal                DECIMAL COMMENT '合同余额'

--    ,CCY_CD                 STRING  COMMENT '币种代码'

--    ,apnt_start_dt          STRING  COMMENT '约定开始日期'

--    ,apnt_mtu_dt            STRING  COMMENT '约定到期日期'

--    ,actl_start_use_crd_lmt DECIMAL COMMENT '启用额度'

--    --,hpn_dt                 STRING  COMMENT '发生日期'

--    ,end_dt                 STRING  COMMENT '终结日期'

--    ,count_dbil_id          DECIMAL COMMENT '累计发放借据数'

--    ,sum_amt                DECIMAL COMMENT '累计发放金额'

--    ,mon_acm_prcp_bal_acml  DECIMAL COMMENT '本月本金余额月日均'

--    ,efe_cst_ind            STRING  COMMENT '有效户标识'

--    ,efe_crd_cst_ind        STRING  COMMENT '有效信用卡标识'

--    ,pd_hld_qty             DECIMAL COMMENT '产品持有数'

--    ,chm_bal                DECIMAL COMMENT '理财余额'

--    ,dep_bal                DECIMAL COMMENT '存款余额'

--    ,cprh_contri_cur_year   DECIMAL COMMENT '当年客户价值'

--    ,cst_val_grd            STRING  COMMENT '客户价值等级'

--    ,if_ctr_efe             STRING  COMMENT '是否消费性贷款在贷合同'

--    ,frz_sts_ind            STRING  COMMENT '是否授信状态为空'

--    ,forml_cst_ind          STRING  COMMENT '正式客户标识'

--)

--COMMENT

--'2024_企业团办综合产效底表'

--PARTITIONED BY

--(

--    DT STRING COMMENT '日期分区'

--);







INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_all_2024_new PARTITION (DT = '20250331')

SELECT  T0.ent_cst_id --企业客户号

        ,T0.ent_cst_nm --企业客户名称

        ,T0.prm_mgr_id --主管户客户经理工号

        ,T0.prm_mgr_nm --主管户客户经理名称

        ,T0.tem_org_id --团队机构号

        ,T0.tem_org_nm --团队名称

        ,T0.sbr_org_nm --支行名称

        ,T0.brc_org_nm --分行名称

        ,T8.cst_id --客户号

        ,t1.CTR_SERNO --合同号

        ,T1.PRD_NO --产品代码

        ,T20.PD_NM --产品名称

        ,T1.ctr_amt --合同金额

        ,T1.ctr_bal --合同余额

        ,T1.BSN_CCY_CD --币种代码

        ,T1.CTR_BGN_DT --约定开始日期

        ,T1.CTR_MTU_DT --约定到期日期

		--,COALESCE(T7.BIND_LMT,T13.SEG_LMT,T1.ctr_amt,0) * T23.AVG_PRC / T23.QUO_UNT AS CYC_REALSUM -- 实际启用金额折人民币  新信贷改造

       ,CASE

          WHEN T7.BUS_CTR_ID IS NOT NULL                                        THEN T7.BIND_LMT

           WHEN T1.RVLG_TYP_CD <> '1' THEN T1.CTR_AMT    --非循环贷款，取合同金额

           ELSE T1.STRT_USE_AMT     --启用金额

         END   as   ACTL_START_USE_CRD_LMT --启用额度

        ,T1.TMT_DT --合同终结日期

        ,COALESCE(T14.COUNT_DBIL_ID, 0) COUNT_DBIL_ID --累计发放借据数

        ,COALESCE(T14.SUM_AMT, 0) SUM_AMT --累计发放金额

        ,COALESCE(T14.mon_acm_prcp_bal_acml, 0) mon_acm_prcp_bal_acml --本月本金余额月日均

        --,T15.efe_cst_ind --有效户标识

        ,decode(T15.efe_cst_ind,'1',1,'',0) efe_cst_ind --有效户标识

        ,CASE

           WHEN T21.cst_id IS NOT NULL THEN '1'

           ELSE '0'

         END efe_crd_cst_ind --有效信用卡户

        ,decode(T15.efe_dep_cst_ind, '1', 1, '', 0) + decode(T15.efe_chm_cst_ind, '1', 1, '', 0) + decode(T15.efe_insu_cst_ind, '1', 1, '', 0) + decode(T15.efe_fnd_cst_ind, '1', 1, '', 0) + decode(T15.efe_nob_met_cst_ind, '1', 1, '', 0) AS pd_hld_qty

        ,T16.chm_bal --理财余额

        ,T17.dep_bal --存款余额

        ,T18.cprh_contri_cur_year  --当年客户价值

        ,T18.cst_val_grd  --客户价值等级

	   ,CASE

           WHEN ( T1.PRD_NO  like '200101%' and   T1.PRD_NO <> '2001010101003'  AND T1.TMT_DT = '18991231' AND T1.CTR_MTU_DT > '20250331' AND T1.CTR_STS_CD not in ( '1','3','5') ) OR ( T1.PRD_NO = '2001010101003'  AND T7.lmt_sts_cd IN ( '0' , '3' , '4' ) AND T1.CTR_STS_CD not in ( '1','3','5') ) THEN '1'

           ELSE '0'

         END if_ctr_efe --是否消费性贷款在贷合同

        ,CASE

           WHEN T1.CTR_STS_CD IS NOT NULL AND T1.CTR_STS_CD  in ( '1','3','5') THEN '1'

           WHEN T1.CTR_STS_CD IS NOT NULL AND T1.CTR_STS_CD not in ( '1','3','5') THEN '0'

         END frz_sts_ind --授信状态是否为空

        ,decode(T19.forml_cst_ind, '1', 1, '', 0) forml_cst_ind --正式客户标识

FROM    (

            SELECT  DISTINCT ent_cst_id

                             ,ent_cst_nm

                             ,prm_mgr_id

                             ,prm_mgr_nm

                             ,tem_org_id

                             ,tem_org_nm

                             ,sbr_org_nm

                             ,brc_org_nm

            FROM    LAB_BIGDATA_DEV.phjrb_ys_qytb_bus_loan_ctr_inf_2024_new --企业团办合同信息表

            WHERE   dt = '20250331'

        ) T0

LEFT JOIN    edw.dim_cst_idv_bas_inf_dd   T8   --个人客户基本信息

ON      T0.ent_cst_nm = T8.job_unt_nm

and     T8.dt = '20250331'

LEFT JOIN    edw.DIM_BUS_LOAN_CTR_BSE_INF_DD T1 --合同基础信息

ON      T8.cst_id = T1.cst_id

AND     T1.dt = '20250331'

LEFT JOIN    edw.dim_cst_bas_inf_dd T2 --客户基本信息

ON      T8.cst_id = T2.cst_id

AND     T2.dt = '20250331'

LEFT JOIN    EDW.DWD_BUS_LOAN_FNC_CRD_LMT_INF_DD T7 ----随贷通授信额度信息

ON      T7.BUS_CTR_ID = t1.CTR_SERNO

AND     T7.LOAN_USG_CD = '2' --随贷通消费性贷款

AND     T7.DT = '20250331'

LEFT JOIN    (

                 SELECT  BUS_CTR_ID

                         ,COUNT(DBIL_ID) COUNT_DBIL_ID

                         ,SUM(AMT) SUM_AMT

                         ,SUM(mon_acm_prcp_bal_acml) / '@@{dd}' AS mon_acm_prcp_bal_acml

                 FROM    EDW.dws_bus_loan_dbil_inf_dd --贷款借据信息汇总

                 WHERE   DT = '20250331'

                 GROUP BY BUS_CTR_ID

             ) T14

ON      t1.CTR_SERNO = T14.BUS_CTR_ID

LEFT JOIN    adm_pub.adm_csm_cbas_ind_inf_dd T15 --客户集市-基础信息-客户基础标识信息

ON      T1.cst_id = T15.cst_id

AND     T15.dt = '20250331'

LEFT JOIN    adm_pub.adm_csm_cbus_chm_inf_dd T16 --客户集市-业务信息-客户理财业务信息表

ON      T1.cst_id = T16.cst_id

AND     T16.dt = '20250331'

LEFT JOIN    adm_pub.adm_csm_cbus_dep_inf_dd T17 --客户集市-业务信息-客户存款业务信息表

ON      T1.cst_id = T17.cst_id

AND     T17.dt = '20250331'

LEFT JOIN    adm_pub.adm_csm_cbus_cst_val_der_ind_inf_dd T18 --客户集市-业务信息-客户价值信息-客户价值衍生指标信息

ON      T1.cst_id = T18.cst_id

AND     T18.dt = '@@{yyyyMMdd-1d}'

LEFT JOIN    adm_pub.adm_csm_cbas_mng_inf_dd T19 --客户集市-客户基础-客户管户信息

ON      T1.cst_id = T19.cst_id

AND     T19.dt = '20250331'

LEFT JOIN    edw.DIM_BUS_LOAN_PRD_FRML_DD T20 --信贷产品信息

ON      T1.PRD_NO = T20.PRD_NO

AND     T20.dt = '20250331'

LEFT JOIN    (

                 SELECT  DISTINCT cst_id

                 FROM    edw.dim_bus_crd_cr_crd_inf_dd --信用卡卡片信息

                 WHERE   dt = '20250331'

                 AND     card_sts_cd = '' --卡片状态正常

                 AND     TO_DATE(CONCAT('20', MTU_DAY, '01'), 'yyyyMMdd') >= TO_DATE(CONCAT('@@{yyyyMM}', '01'), 'yyyyMMdd')

             ) T21

ON      T1.cst_id = T21.cst_id

LEFT JOIN    (

                 SELECT  A1.CTR_SERNO

                 FROM    EDW.DIM_BUS_LOAN_CTR_BSE_INF_DD A1 -- 合同基础信息

                 INNER JOIN    EDW.DWD_BUS_LOAN_PRPS_REL_DD A2 --方案关联

                 ON      A1.CTR_SERNO = A2.REL_ID

                 AND     A2.DT = '20250331'

                 INNER JOIN    EDW.DWD_BUS_LOAN_ZXT_LOAN_PRPS_APL_DD A3 --助兴通贷款方案申请

                 ON      A2.PRPS_ID = A3.PRPS_ID -- 找到重组的方案号

                 AND     A3.DT = '20250331'

                 WHERE   A1.DT = '20250331'

                 GROUP BY A1.CTR_SERNO

             ) T22 --助兴通合同

ON      t1.CTR_SERNO = T22.CTR_SERNO

WHERE    T2.LOAN_CST_TYP_CD in ( '04','08','09')   --工薪族

--剔除员工贷款、重组贷款或者包含没有合同

AND     ( ( T1.BSN_MARK_CD NOT IN ( '01' )   --剔除员工贷款

AND     ( T1.BSN_MARK_CD <> '04'

AND     T22.CTR_SERNO IS NULL ) )  --剔除重组贷款

    OR T1.cst_id IS NULL );





--SHEET2-2024年客户清单

--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet2_2024 PURGE;



--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet2_2024

--(

--    cst_id                  STRING  COMMENT '个人客户号'

--    ,cst_nm                 STRING  COMMENT '个人客户名'

--    ,prm_mgr_id             STRING  COMMENT '主管户客户经理工号'

--    ,prm_mgr_nm             STRING  COMMENT '主管户客户经理名称'

--    ,tem_org_id             STRING  COMMENT '团队机构号'

--    ,tem_org_nm             STRING  COMMENT '团队机构名称'

--    ,sbr_org_nm             STRING  COMMENT '支行名称'

--    ,brc_org_nm             STRING  COMMENT '分行名称'

--    ,ent_cst_id             STRING  COMMENT '企业客户号'

--    ,ent_cst_nm             STRING  COMMENT '企业客户名'

--    ,prm_mgr_id_ent         STRING  COMMENT '企业主管户客户经理工号'

--    ,prm_mgr_nm_ent         STRING  COMMENT '企业主管户客户经理名称'

--    ,tem_org_id_ent         STRING  COMMENT '企业主管团队机构号'

--    ,tem_org_nm_ent         STRING  COMMENT '企业主管团队机构名称'

--    ,sbr_org_nm_ent         STRING  COMMENT '企业主管支行名称'

--    ,brc_org_nm_ent         STRING  COMMENT '企业主管分行名称'

--    ,ctr_amt                DECIMAL COMMENT '新增消费贷款合同金额合计'

--    ,actl_start_use_crd_lmt DECIMAL COMMENT '新增消费贷款启用额度合计'

--    ,ctr_bal                DECIMAL COMMENT '新增消费贷款合同余额合计'

--    ,mon_acm_prcp_bal_acml  DECIMAL COMMENT '本金余额月日均'

--    ,if_loan_xf             STRING  COMMENT '是否持有消费贷款'

--    ,efe_crd_cst_ind        STRING  COMMENT '是否有效信用卡户'

--    ,efe_dep_cst_ind        STRING  COMMENT '是否有效存款户'

--    ,efe_chm_cst_ind        STRING  COMMENT '是否有效理财户'

--    ,efe_insu_cst_ind       STRING  COMMENT '是否有效保险户'

--    ,efe_fnd_cst_ind        STRING  COMMENT '是否有效基金户'

--    ,efe_nob_met_cst_ind    STRING  COMMENT '是否有效贵金属户'

--    ,ctr_bal_all            DECIMAL COMMENT '消费贷款合同余额总计'

--    ,dep_bal                DECIMAL COMMENT '存款余额'

--    ,chm_bal                DECIMAL COMMENT '理财余额'

--    ,dep_bal_add            DECIMAL COMMENT '新增存款余额'

--    ,chm_bal_add            DECIMAL COMMENT '新增理财余额'

--    ,cst_val_grd            STRING  COMMENT '客户价值等级'

--    ,cprh_contri_cur_year   DECIMAL COMMENT '当年客户价值'

--    ,loan_start_dt          STRING  COMMENT '最早消费贷款开始日期'

--    ,crd_isu_dt             STRING  COMMENT '最早信用卡发卡日期'

--    ,dep_opn_dt             STRING  COMMENT '最早存款开户日期'

--    ,chm_trx_dt             STRING  COMMENT '最早购买理财日期'

--    ,insu_dt                STRING  COMMENT '最早保险投保日期'

--    ,fund_dt                STRING  COMMENT '最早购买基金日期'

--    ,nob_dt                 STRING  COMMENT '最早购买贵金属日期'

--    ,if_shoubi              DECIMAL COMMENT '是否首笔'

--    ,ctr_fenzi              DECIMAL COMMENT '授信金额加权利率分子'

--    ,ctr_fenmu              DECIMAL COMMENT '授信金额加权利率分母'

--    ,dbil_fenzi             DECIMAL COMMENT '用信金额加权利率分子'

--    ,dbil_fenmu             DECIMAL COMMENT '用信金额加权利率分母'

--    ,aum_bal                DECIMAL COMMENT 'aum余额'

--    ,aum_bal_add            DECIMAL COMMENT '新增aum余额'

--    ,brc_org_id               STRING  COMMENT '分行层级机构编号'

--    ,sbr_org_id               STRING  COMMENT '支行层级机构编号'

--)

--COMMENT

--'企业团办_SHEET2-客户清单_2024'

--PARTITIONED BY

--(

--    DT STRING COMMENT '日期分区'

--);



-----新增表字段

-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet2_2024 add  columns

--(	grp_org_id               STRING  COMMENT '集团机构编号'

-- ,cpy_org_id               STRING  COMMENT '法人机构编号'

--);









INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet2_2024 PARTITION (DT = '20250331')

SELECT  DISTINCT T1.cst_id

        ,T1.cst_nm

        ,T1.prm_mgr_id

        ,T1.prm_mgr_nm

        ,T1.tem_org_id

        ,T1.tem_org_nm

        ,T1.sbr_org_nm

        ,T1.brc_org_nm

        ,T1.ent_cst_id

        ,T1.ent_cst_nm

        ,T1.prm_mgr_id_ent

        ,T1.prm_mgr_nm_ent

        ,T1.tem_org_id_ent

        ,T1.tem_org_nm_ent

        ,T1.sbr_org_nm_ent

        ,T1.brc_org_nm_ent

        ,T2.ctr_amt

        ,T2.actl_start_use_crd_lmt

        ,T2.ctr_bal

        ,T2.mon_acm_prcp_bal_acml

        ,CASE WHEN T3.cst_id is not null then '1' else '0' end if_loan_xf

        ,T1.efe_crd_cst_ind

        ,T1.efe_dep_cst_ind

        ,T1.efe_chm_cst_ind

        ,T1.efe_insu_cst_ind

        ,T1.efe_fnd_cst_ind

        ,T1.efe_nob_met_cst_ind

        ,T3.ctr_bal ctr_bal_all

        ,T1.dep_bal

        ,T1.chm_bal

        ,coalesce(T1.dep_bal, 0) - coalesce(T1.dep_bal0630, 0) dep_bal_add

        ,coalesce(T1.chm_bal, 0) - coalesce(T1.chm_bal0630, 0) chm_bal_add

        ,T1.cst_val_grd

        ,T1.cprh_contri_cur_year

        ,'' loan_start_dt

        ,'' crd_isu_dt

        ,'' dep_opn_dt

        ,'' chm_trx_dt

        ,'' insu_dt

        ,'' fund_dt

        ,'' nob_dt

        ,CASE

                    WHEN coalesce(T2.if_shoubi, 0) > 0 THEN '1'

                    ELSE '0'

                  END if_shoudaihu

        ,T2.ctr_fenzi

        ,T2.ctr_fenmu

        ,T2.dbil_fenzi

        ,T2.dbil_fenmu

        ,T1.aum_bal

        ,coalesce(T1.aum_bal, 0) - coalesce(T1.aum_bal0630, 0) aum_bal_add

		,t1.brc_org_id               --分行层级机构编号

        ,t1.sbr_org_id               --支行层级机构编号

		,t1.grp_org_id               --集团机构编号

		,t1.cpy_org_id               --法人机构编号

		--,t1.card_cnt                 --新增信用卡户数

FROM   lab_bigdata_dev.phjrb_ys_qytb_cst_info_tmp_2024_new   T1     --企业团办新增消费贷款客户信息表

LEFT JOIN    (

                 SELECT  cst_id

                         ,sum(ctr_amt) ctr_amt

                         ,sum(actl_start_use_crd_lmt) actl_start_use_crd_lmt

                         ,round(sum(ctr_bal), 2) ctr_bal

                         ,round(sum(mon_acm_prcp_bal_acml), 2) mon_acm_prcp_bal_acml

                         ,sum(ctr_amt * intr_rat * duration) ctr_fenzi

                         ,sum(ctr_amt * duration) ctr_fenmu

                         ,sum(dbil_fenzi) dbil_fenzi

                         ,sum(dbil_fenmu) dbil_fenmu

                         ,sum(if_shoubi) if_shoubi

                 FROM    lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_2024_new    --企业团办新增消费性贷款合同信息表

                 WHERE   dt = '20250331'

                 GROUP BY cst_id

             ) T2

ON      T1.cst_id = T2.cst_id

LEFT JOIN    (

                 SELECT  cst_id

                         ,sum(ctr_bal) ctr_bal

                 FROM    lab_bigdata_dev.phjrb_ys_qytb_bus_loan_ctr_inf_all_2024_new   --企业团办综合产效底表

                 WHERE   dt = '20250331'

                 AND     if_ctr_efe = '1' --消费性贷款在贷合同

                 AND     frz_sts_ind = '0' --授信状态不为空

                 GROUP BY cst_id

             ) T3

ON      T1.cst_id = T3.cst_id

left join lab_bigdata_dev.phjrb_ys_qytb_bus_loan_cst_20230701_20231231    t4     ----20230701-20231231新增的消费贷客户

on  t1.cst_id = t4.cst_id

where  t1.dt = '20250331'

and   t1.ent_cst_nm not in (select  ent_cst_nm

from  lab_bigdata_dev.phjrb_ys_qytb_cst_info_tmp_2024_new

where  dt = '20250331'

and ( length(ent_cst_nm) < 4   --小于4个字符

or  (ent_cst_nm REGEXP '[^0-9.]') = false   --为纯数字

or  ent_cst_nm  rlike '个体|退休|在家|单位|自由职业|家庭主妇|人人可贷|泰隆'   --企业名称包含这些

or  ent_cst_nm is null

or  ent_cst_nm = '')  )

and   t4.cst_id is  null    --剔除20230701-20231231新增的消费贷客户

;





----SHEET4 2024年企业清单和客户清单合并



--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_2024 PURGE;

--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_2024

--(

--    cst_id                               STRING  COMMENT '个人客户号'

--    ,cst_nm                              STRING  COMMENT '个人客户名'

--    ,prm_mgr_id                          STRING  COMMENT '主管户客户经理工号'

--    ,prm_mgr_nm                          STRING  COMMENT '主管户客户经理名称'

--    ,tem_org_id                          STRING  COMMENT '团队机构号'

--    ,tem_org_nm                          STRING  COMMENT '团队机构名称'

--    ,sbr_org_nm                          STRING  COMMENT '支行名称'

--    ,brc_org_nm                          STRING  COMMENT '分行名称'

--    ,ent_cst_id                          STRING  COMMENT '企业客户号'

--    ,ent_cst_nm                          STRING  COMMENT '企业客户名'

--    ,prm_mgr_id_ent                      STRING  COMMENT '企业主管户客户经理工号'

--    ,prm_mgr_nm_ent                      STRING  COMMENT '企业主管户客户经理名称'

--    ,tem_org_id_ent                      STRING  COMMENT '企业主管团队机构号'

--    ,tem_org_nm_ent                      STRING  COMMENT '企业主管团队机构名称'

--    ,sbr_org_nm_ent                      STRING  COMMENT '企业主管支行名称'

--    ,brc_org_nm_ent                      STRING  COMMENT '企业主管分行名称'

--    ,ctr_amt                             DECIMAL COMMENT '新增消费贷款合同金额合计'

--    ,actl_start_use_crd_lmt              DECIMAL COMMENT '新增消费贷款启用额度合计'

--    ,ctr_bal                             DECIMAL COMMENT '新增消费贷款合同余额合计'

--    ,mon_acm_prcp_bal_acml               DECIMAL COMMENT '本金余额月日均'

--    ,if_loan_xf                          STRING  COMMENT '是否持有消费贷款'

--    ,efe_crd_cst_ind                     STRING  COMMENT '是否有效信用卡户'

--    ,efe_dep_cst_ind                     STRING  COMMENT '是否有效存款户'

--    ,efe_chm_cst_ind                     STRING  COMMENT '是否有效理财户'

--    ,efe_insu_cst_ind                    STRING  COMMENT '是否有效保险户'

--    ,efe_fnd_cst_ind                     STRING  COMMENT '是否有效基金户'

--    ,efe_nob_met_cst_ind                 STRING  COMMENT '是否有效贵金属户'

--    ,ctr_bal_all                         DECIMAL COMMENT '消费贷款合同余额总计'

--    ,dep_bal                             DECIMAL COMMENT '存款余额'

--    ,chm_bal                             DECIMAL COMMENT '理财余额'

--    ,dep_bal_add                         DECIMAL COMMENT '新增存款余额'

--    ,chm_bal_add                         DECIMAL COMMENT '新增理财余额'

--    ,cst_val_grd                         DECIMAL COMMENT '客户价值等级'

--    ,cprh_contri_cur_year                DECIMAL COMMENT '当年客户价值'

--    ,loan_start_dt                       STRING  COMMENT '最早消费贷款开始日期'

--    ,crd_isu_dt                          STRING  COMMENT '最早信用卡发卡日期'

--    ,dep_opn_dt                          STRING  COMMENT '最早存款开户日期'

--    ,chm_trx_dt                          STRING  COMMENT '最早购买理财日期'

--    ,insu_dt                             STRING  COMMENT '最早保险投保日期'

--    ,fund_dt                             STRING  COMMENT '最早购买基金日期'

--    ,nob_dt                              STRING  COMMENT '最早购买贵金属日期'

--    ,brc_grp_cst_num                     DECIMAL COMMENT '分行_企业授信客户数统计'

--    ,brc_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '分行_企业本金余额月日均'

--    ,brc_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '分行_企业本金启用额度'

--    ,rn_brc_grp                          STRING  COMMENT '排序_分行_企业'

--    ,pd_hld_qty_sum_brc                  STRING  COMMENT '汇总产品持有数_分行'

--    ,sbr_grp_cst_num                     DECIMAL COMMENT '支行_企业授信客户数统计'

--    ,sbr_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '支行_企业本金余额月日均'

--    ,sbr_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '支行_企业本金启用额度'

--    ,rn_sbr_grp                          STRING  COMMENT '排序_支行_企业'

--    ,pd_hld_qty_sum_sbr                  STRING  COMMENT '汇总产品持有数_支行'

--    ,tem_grp_cst_num                     DECIMAL COMMENT '团队_企业授信客户数统计'

--    ,tem_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '团队_企业本金余额月日均'

--    ,tem_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '团队_企业本金启用额度'

--    ,rn_tem_grp                          STRING  COMMENT '排序_团队_企业'

--    ,pd_hld_qty_sum_tem                  STRING  COMMENT '汇总产品持有数_团队'

--    ,mgr_grp_cst_num                     DECIMAL COMMENT '客户经理_企业授信客户数统计'

--    ,mgr_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '客户经理_企业本金余额月日均'

--    ,mgr_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '客户经理_企业本金启用额度'

--    ,rn_mgr_grp                          STRING  COMMENT '排序_客户经理_企业'

--    ,pd_hld_qty_sum_mgr                  STRING  COMMENT '汇总产品持有数_客户经理'

--    ,brc_grp_ctr_bal                     DECIMAL COMMENT '分行_企业新增消费贷款余额'

--    ,sbr_grp_ctr_bal                     DECIMAL COMMENT '支行_企业新增消费贷款余额'

--    ,tem_grp_ctr_bal                     DECIMAL COMMENT '团队_企业新增消费贷款余额'

--    ,mgr_grp_ctr_bal                     DECIMAL COMMENT '客户经理_企业新增消费贷款余额'

--    ,yongxin_rate_mth_avg_brc            DECIMAL COMMENT '月日均用信率_分行'

--    ,pd_hld_qty_avg_brc                  DECIMAL COMMENT '客均产品持有数_分行'

--    ,pltbxm_jl_brc                       DECIMAL COMMENT '批量团办项目奖励_分行'

--    ,pd_hld_qty_avg_jcxs_brc             DECIMAL COMMENT '平均产品持有数加成系数_分行'

--    ,yongxin_rate_mth_avg_sbr            DECIMAL COMMENT '月日均用信率_支行'

--    ,pd_hld_qty_avg_sbr                  DECIMAL COMMENT '客均产品持有数_支行'

--    ,pltbxm_jl_sbr                       DECIMAL COMMENT '批量团办项目奖励_支行'

--    ,pd_hld_qty_avg_jcxs_sbr             DECIMAL COMMENT '平均产品持有数加成系数_支行'

--    ,yongxin_rate_mth_avg_tem            DECIMAL COMMENT '月日均用信率_团队'

--    ,pd_hld_qty_avg_tem                  DECIMAL COMMENT '客均产品持有数_团队'

--    ,pltbxm_jl_tem                       DECIMAL COMMENT '批量团办项目奖励_团队'

--    ,pd_hld_qty_avg_jcxs_tem             DECIMAL COMMENT '平均产品持有数加成系数_团队'

--    ,yongxin_rate_mth_avg_mgr            DECIMAL COMMENT '月日均用信率_客户经理'

--    ,pd_hld_qty_avg_mgr                  DECIMAL COMMENT '客均产品持有数_客户经理'

--    ,pltbxm_jl_mgr                       DECIMAL COMMENT '批量团办项目奖励_客户经理'

--    ,pd_hld_qty_avg_jcxs_mgr             DECIMAL COMMENT '平均产品持有数加成系数_客户经理'

--    ,brc_ctr_fenzi                       DECIMAL COMMENT '分行_企业授信金额加权利率分子'

--    ,brc_ctr_fenmu                       DECIMAL COMMENT '分行_企业授信金额加权利率分母'

--    ,sbr_ctr_fenzi                       DECIMAL COMMENT '支行_企业授信金额加权利率分子'

--    ,sbr_ctr_fenmu                       DECIMAL COMMENT '支行_企业授信金额加权利率分母'

--    ,tem_ctr_fenzi                       DECIMAL COMMENT '团队_企业授信金额加权利率分子'

--    ,tem_ctr_fenmu                       DECIMAL COMMENT '团队_企业授信金额加权利率分母'

--    ,mgr_ctr_fenzi                       DECIMAL COMMENT '客户经理_企业授信金额加权利率分子'

--    ,mgr_ctr_fenmu                       DECIMAL COMMENT '客户经理_企业授信金额加权利率分母'

--    ,brc_dbil_fenzi                      DECIMAL COMMENT '分行_企业用信金额加权利率分子'

--    ,brc_dbil_fenmu                      DECIMAL COMMENT '分行_企业用信金额加权利率分母'

--    ,sbr_dbil_fenzi                      DECIMAL COMMENT '支行_企业用信金额加权利率分子'

--    ,sbr_dbil_fenmu                      DECIMAL COMMENT '支行_企业用信金额加权利率分母'

--    ,tem_dbil_fenzi                      DECIMAL COMMENT '团队_企业用信金额加权利率分子'

--    ,tem_dbil_fenmu                      DECIMAL COMMENT '团队_企业用信金额加权利率分母'

--    ,mgr_dbil_fenzi                      DECIMAL COMMENT '客户经理_企业用信金额加权利率分子'

--    ,mgr_dbil_fenmu                      DECIMAL COMMENT '客户经理_企业用信金额加权利率分母'

--    ,brc_aum                             DECIMAL COMMENT '分行_企业aum'

--    ,brc_aum_add                         DECIMAL COMMENT '分行_企业aum_add'

--    ,sbr_aum                             DECIMAL COMMENT '支行_企业aum'

--    ,sbr_aum_add                         DECIMAL COMMENT '支行_企业aum_add'

--    ,tem_aum                             DECIMAL COMMENT '团队_企业aum'

--    ,tem_aum_add                         DECIMAL COMMENT '团队_企业aum_add'

--    ,mgr_aum                             DECIMAL COMMENT '客户经理_企业aum'

--    ,mgr_aum_add                         DECIMAL COMMENT '客户经理_企业aum_add'

--    ,if_jiandang                         STRING  COMMENT '是否建档'

--    ,forml_cst_ind                       STRING  COMMENT '正式客户标识'

--    ,brc_grp_ctr_amt                     DECIMAL COMMENT '分行_企业新增消费贷款金额'

--    ,sbr_grp_ctr_amt                     DECIMAL COMMENT '支行_企业新增消费贷款金额'

--    ,tem_grp_ctr_amt                     DECIMAL COMMENT '团队_企业新增消费贷款金额'

--    ,mgr_grp_ctr_amt                     DECIMAL COMMENT '客户经理_企业新增消费贷款金额'

--    ,brc_org_id                          STRING  COMMENT '分行层级机构编号'

--    ,sbr_org_id                          STRING  COMMENT '支行层级机构编号'

--)

--COMMENT

--'企业团办_SHEET4-企业清单2-2024'

--PARTITIONED BY

--(

--    DT STRING COMMENT '日期分区'

--);



-----新增表字段

-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet4_tmp_2024 add  columns

--(	grp_org_id               STRING  COMMENT '集团机构编号'

-- ,cpy_org_id               STRING  COMMENT '法人机构编号'

--);







INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_2024 PARTITION (DT = '20250331')

SELECT  cst_id

        ,cst_nm

        ,prm_mgr_id

        ,prm_mgr_nm

        ,tem_org_id

        ,tem_org_nm

        ,sbr_org_nm

        ,brc_org_nm

        ,ent_cst_id

        ,ent_cst_nm

        ,prm_mgr_id_ent

        ,prm_mgr_nm_ent

        ,tem_org_id_ent

        ,tem_org_nm_ent

        ,sbr_org_nm_ent

        ,brc_org_nm_ent

        ,ctr_amt

        ,actl_start_use_crd_lmt

        ,ctr_bal

        ,mon_acm_prcp_bal_acml

        ,if_loan_xf

        ,efe_crd_cst_ind

        ,efe_dep_cst_ind

        ,efe_chm_cst_ind

        ,efe_insu_cst_ind

        ,efe_fnd_cst_ind

        ,efe_nob_met_cst_ind

        ,ctr_bal_all

        ,dep_bal

        ,chm_bal

        ,dep_bal_add

        ,chm_bal_add

        ,cst_val_grd

        ,cprh_contri_cur_year

        ,loan_start_dt

        ,crd_isu_dt

        ,dep_opn_dt

        ,chm_trx_dt

        ,insu_dt

        ,fund_dt

        ,nob_dt

        ,brc_grp_cst_num

        ,brc_grp_mon_acm_prcp_bal_acml

        ,brc_grp_actl_start_use_crd_lmt

        ,rn_brc_grp

        ,pd_hld_qty_sum_brc

        ,sbr_grp_cst_num                 --支行_企业授信客户数统计

        ,sbr_grp_mon_acm_prcp_bal_acml   --支行_企业本金余额月日均

        ,sbr_grp_actl_start_use_crd_lmt  --支行_企业本金启用额度

        ,rn_sbr_grp                      --排序_支行_企业

        ,pd_hld_qty_sum_sbr              --汇总产品持有数_支行

        ,tem_grp_cst_num                 --团队_企业授信客户数统计

        ,tem_grp_mon_acm_prcp_bal_acml   --团队_企业本金余额月日均

        ,tem_grp_actl_start_use_crd_lmt  --团队_企业本金启用额度

        ,rn_tem_grp                      --排序_团队_企业

        ,pd_hld_qty_sum_tem              --汇总产品持有数_团队

        ,mgr_grp_cst_num                 --客户经理_企业授信客户数统计

        ,mgr_grp_mon_acm_prcp_bal_acml   --客户经理_企业本金余额月日均

        ,mgr_grp_actl_start_use_crd_lmt  --客户经理_企业本金启用额度

        ,rn_mgr_grp                      --排序_客户经理_企业

        ,pd_hld_qty_sum_mgr              --汇总产品持有数_客户经理

        ,brc_grp_ctr_bal                 --分行_企业新增消费贷款余额

        ,sbr_grp_ctr_bal                 --支行_企业新增消费贷款余额

        ,tem_grp_ctr_bal                 --团队_企业新增消费贷款余额

        ,mgr_grp_ctr_bal                 --客户经理_企业新增消费贷款余额

        ,CASE

           WHEN a.brc_grp_actl_start_use_crd_lmt > 0 THEN a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt

           ELSE 0

         END yongxin_rate_mth_avg_brc    --月日均用信率_分行

        ,CASE

           WHEN a.brc_grp_cst_num > 0 THEN a.pd_hld_qty_sum_brc / a.brc_grp_cst_num

           ELSE 0

         END pd_hld_qty_avg_brc          --客均产品持有数_分行

        ,CASE

           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml < 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1     THEN 200

           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.10  THEN 500

           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.30  THEN 800

           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.50  THEN 1000

           WHEN a.brc_grp_cst_num >= 5 AND a.brc_grp_cst_num < 10 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1    THEN 1200

           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml < 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1    THEN 400

           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.10 THEN 800

           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.30 THEN 1500

           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.50 THEN 2000 --1011update

           WHEN a.brc_grp_cst_num >= 10 AND a.brc_grp_cst_num < 20 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1   THEN 2400 --1011update

           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml < 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1    THEN 600

           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.10 THEN 1500

           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.30 THEN 2500

           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.50 THEN 4000 --1011update

           WHEN a.brc_grp_cst_num >= 20 AND a.brc_grp_cst_num < 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1   THEN 4500 --1011update

           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml < 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1                               THEN 800

           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.10                            THEN 1800

           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.30                            THEN 3500

           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 0.50                            THEN 6000 --1011update

           WHEN a.brc_grp_cst_num >= 30 AND a.brc_grp_actl_start_use_crd_lmt > 0 AND a.brc_grp_mon_acm_prcp_bal_acml >= 10000 and  a.brc_grp_mon_acm_prcp_bal_acml / a.brc_grp_actl_start_use_crd_lmt <= 1                              THEN 7000 --1011update

           ELSE 0

         END  pltbxm_jl_brc --批量团办项目奖励_分行

        ,CASE

           WHEN a.brc_grp_cst_num > 0 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num >= 1 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num < 1.2   THEN 1

           WHEN a.brc_grp_cst_num > 0 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num >= 1.2 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num < 1.5 THEN 1.2

           WHEN a.brc_grp_cst_num > 0 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num >= 1.5 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num < 2   THEN 1.6

           WHEN a.brc_grp_cst_num > 0 AND a.pd_hld_qty_sum_brc / a.brc_grp_cst_num >= 2                                                      THEN 2

           ELSE 0

         END pd_hld_qty_avg_jcxs_brc  --平均产品持有数加成系数_分行

        ,CASE

           WHEN a.sbr_grp_actl_start_use_crd_lmt > 0 THEN a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt

           ELSE 0

         END  yongxin_rate_mth_avg_sbr   --月日均用信率_支行

        ,CASE

           WHEN a.sbr_grp_cst_num > 0 THEN a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num

           ELSE 0

         END pd_hld_qty_avg_sbr      --客均产品持有数_支行

        ,CASE

           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml < 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1     THEN 200

           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.10  THEN 500

           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.30  THEN 800

           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.50  THEN 1000

           WHEN a.sbr_grp_cst_num >= 5 AND a.sbr_grp_cst_num < 10 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1    THEN 1200



           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml < 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1    THEN 400

           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.10 THEN 800

           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.30 THEN 1500

           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.50 THEN 2000

           WHEN a.sbr_grp_cst_num >= 10 AND a.sbr_grp_cst_num < 20 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1   THEN 2400



           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml < 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1    THEN 600

           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.10 THEN 1500

           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.30 THEN 2500

           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.50 THEN 4000

           WHEN a.sbr_grp_cst_num >= 20 AND a.sbr_grp_cst_num < 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1   THEN 4500



           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml < 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1                               THEN 800

           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.10                            THEN 1800

           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.30                            THEN 3500

           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 0.50                            THEN 6000

           WHEN a.sbr_grp_cst_num >= 30 AND a.sbr_grp_actl_start_use_crd_lmt > 0 AND a.sbr_grp_mon_acm_prcp_bal_acml >= 10000 and  a.sbr_grp_mon_acm_prcp_bal_acml / a.sbr_grp_actl_start_use_crd_lmt <= 1                              THEN 7000

           ELSE 0

         END pltbxm_jl_sbr            --批量团办项目奖励_支行

        ,CASE

           WHEN a.sbr_grp_cst_num > 0 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num >= 1 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num < 1.2   THEN 1

           WHEN a.sbr_grp_cst_num > 0 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num >= 1.2 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num < 1.5 THEN 1.2

           WHEN a.sbr_grp_cst_num > 0 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num >= 1.5 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num < 2   THEN 1.6

           WHEN a.sbr_grp_cst_num > 0 AND a.pd_hld_qty_sum_sbr / a.sbr_grp_cst_num >= 2                                                      THEN 2

           ELSE 0

         END pd_hld_qty_avg_jcxs_sbr  --平均产品持有数加成系数_支行

        ,CASE

           WHEN a.tem_grp_actl_start_use_crd_lmt > 0 THEN a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt

           ELSE 0

         END yongxin_rate_mth_avg_tem    --月日均用信率_团队

        ,CASE

           WHEN a.tem_grp_cst_num > 0 THEN a.pd_hld_qty_sum_tem / a.tem_grp_cst_num

           ELSE 0

         END pd_hld_qty_avg_tem          --客均产品持有数_团队

        ,CASE

           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml < 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1     THEN 200

           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.10  THEN 500

           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.30  THEN 800

           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.50  THEN 1000

           WHEN a.tem_grp_cst_num >= 5 AND a.tem_grp_cst_num < 10 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1    THEN 1200



           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml < 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1    THEN 400

           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.10 THEN 800

           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.30 THEN 1500

           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.50 THEN 2000

           WHEN a.tem_grp_cst_num >= 10 AND a.tem_grp_cst_num < 20 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1   THEN 2400



           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml < 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1    THEN 600

           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.10 THEN 1500

           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.30 THEN 2500

           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.50 THEN 4000

           WHEN a.tem_grp_cst_num >= 20 AND a.tem_grp_cst_num < 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1   THEN 4500

           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml < 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1                               THEN 800

           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.10                            THEN 1800

           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.30                            THEN 3500

           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 0.50                            THEN 6000

           WHEN a.tem_grp_cst_num >= 30 AND a.tem_grp_actl_start_use_crd_lmt > 0 AND a.tem_grp_mon_acm_prcp_bal_acml >= 10000 and a.tem_grp_mon_acm_prcp_bal_acml / a.tem_grp_actl_start_use_crd_lmt <= 1                              THEN 7000

           ELSE 0

         END pltbxm_jl_tem        --批量团办项目奖励_团队

        ,CASE

           WHEN a.tem_grp_cst_num > 0 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num >= 1 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num < 1.2   THEN 1

           WHEN a.tem_grp_cst_num > 0 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num >= 1.2 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num < 1.5 THEN 1.2

           WHEN a.tem_grp_cst_num > 0 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num >= 1.5 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num < 2   THEN 1.6

           WHEN a.tem_grp_cst_num > 0 AND a.pd_hld_qty_sum_tem / a.tem_grp_cst_num >= 2                                                      THEN 2

           ELSE 0

         END pd_hld_qty_avg_jcxs_tem --平均产品持有数加成系数_团队

        ,CASE

           WHEN a.mgr_grp_actl_start_use_crd_lmt > 0 THEN a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt

           ELSE 0

         END yongxin_rate_mth_avg_mgr    --月日均用信率_客户经理

        ,CASE

           WHEN a.mgr_grp_cst_num > 0 THEN a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num

           ELSE 0

         END pd_hld_qty_avg_mgr      --客均产品持有数_客户经理

        ,CASE

           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml < 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1     THEN 200

           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.10  THEN 500

           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.30  THEN 800

           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.50  THEN 1000

           WHEN a.mgr_grp_cst_num >= 5 AND a.mgr_grp_cst_num < 10 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1    THEN 1200



           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml < 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1    THEN 400

           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.10 THEN 800

           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.30 THEN 1500

           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.50 THEN 2000

           WHEN a.mgr_grp_cst_num >= 10 AND a.mgr_grp_cst_num < 20 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1   THEN 2400



           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml < 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1    THEN 600

           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.10 THEN 1500

           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.30 THEN 2500

           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.50 THEN 4000

           WHEN a.mgr_grp_cst_num >= 20 AND a.mgr_grp_cst_num < 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1   THEN 4500



           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml < 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1                               THEN 800

           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.10                            THEN 1800

           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.30                            THEN 3500

           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 0.50                            THEN 6000

           WHEN a.mgr_grp_cst_num >= 30 AND a.mgr_grp_actl_start_use_crd_lmt > 0 AND a.mgr_grp_mon_acm_prcp_bal_acml >= 10000 and a.mgr_grp_mon_acm_prcp_bal_acml / a.mgr_grp_actl_start_use_crd_lmt <= 1                              THEN 7000

           ELSE 0

         END pltbxm_jl_mgr --批量团办项目奖励_客户经理

        ,CASE

           WHEN a.mgr_grp_cst_num > 0 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num >= 1 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num < 1.2   THEN 1

           WHEN a.mgr_grp_cst_num > 0 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num >= 1.2 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num < 1.5 THEN 1.2

           WHEN a.mgr_grp_cst_num > 0 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num >= 1.5 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num < 2   THEN 1.6

           WHEN a.mgr_grp_cst_num > 0 AND a.pd_hld_qty_sum_mgr / a.mgr_grp_cst_num >= 2                                                      THEN 2

           ELSE  0

         END pd_hld_qty_avg_jcxs_mgr --平均产品持有数加成系数_客户经理

        ,brc_ctr_fenzi --分行_企业授信金额加权利率分子

        ,brc_ctr_fenmu --分行_企业授信金额加权利率分母

        ,sbr_ctr_fenzi --支行_企业授信金额加权利率分子

        ,sbr_ctr_fenmu --支行_企业授信金额加权利率分母

        ,tem_ctr_fenzi --团队_企业授信金额加权利率分子

        ,tem_ctr_fenmu --团队_企业授信金额加权利率分母

        ,mgr_ctr_fenzi --客户经理_企业授信金额加权利率分子

        ,mgr_ctr_fenmu --客户经理_企业授信金额加权利率分母

        ,brc_dbil_fenzi --分行_企业用信金额加权利率分子

        ,brc_dbil_fenmu --分行_企业用信金额加权利率分母

        ,sbr_dbil_fenzi --支行_企业用信金额加权利率分子

        ,sbr_dbil_fenmu --支行_企业用信金额加权利率分母

        ,tem_dbil_fenzi --团队_企业用信金额加权利率分子

        ,tem_dbil_fenmu --团队_企业用信金额加权利率分母

        ,mgr_dbil_fenzi --客户经理_企业用信金额加权利率分子

        ,mgr_dbil_fenmu --客户经理_企业用信金额加权利率分母

        ,brc_aum --分行_企业aum

        ,brc_aum_add --分行_企业aum_add

        ,sbr_aum --支行_企业aum

        ,sbr_aum_add --支行_企业aum_add

        ,tem_aum --团队_企业aum

        ,tem_aum_add --团队_企业aum_add

        ,mgr_aum --客户经理_企业aum

        ,mgr_aum_add --客户经理_企业aum_add

        ,if_jiandang    --是否建档客户

        ,forml_cst_ind  --是否正式客户标识

        ,brc_grp_ctr_amt                            --分行_企业新增消费贷款金额

        ,sbr_grp_ctr_amt                            --支行_企业新增消费贷款金额

        ,tem_grp_ctr_amt                            --团队_企业新增消费贷款金额

        ,mgr_grp_ctr_amt                            --客户经理_企业新增消费贷款金额

		,brc_org_id               --分行层级机构编号

        ,sbr_org_id               --支行层级机构编号

		,grp_org_id               --集团机构编号

		,cpy_org_id               --法人机构编号

		--,brc_grp_card_cnt

		--,sbr_grp_card_cnt

		--,tem_grp_card_cnt

		--,mgr_grp_card_cnt

FROM    (

            SELECT  T1.cst_id

                    ,T1.cst_nm

                    ,T1.prm_mgr_id

                    ,T1.prm_mgr_nm

                    ,T1.tem_org_id

                    ,T1.tem_org_nm

                    ,T1.sbr_org_nm

                    ,T1.brc_org_nm

					,T1.brc_org_id               --分行层级机构编号

                    ,T1.sbr_org_id               --支行层级机构编号

                    ,T1.grp_org_id               --集团机构编号

		            ,T1.cpy_org_id               --法人机构编号

                    ,T1.ent_cst_id

                    ,T1.ent_cst_nm

                    ,T1.prm_mgr_id_ent

                    ,T1.prm_mgr_nm_ent

                    ,T1.tem_org_id_ent

                    ,T1.tem_org_nm_ent

                    ,T1.sbr_org_nm_ent

                    ,T1.brc_org_nm_ent

                    ,T1.ctr_amt

                    ,T1.actl_start_use_crd_lmt

                    ,T1.ctr_bal

                    ,T1.mon_acm_prcp_bal_acml

                    ,T1.if_loan_xf

                    ,T1.efe_crd_cst_ind

                    ,T1.efe_dep_cst_ind

                    ,T1.efe_chm_cst_ind

                    ,T1.efe_insu_cst_ind

                    ,T1.efe_fnd_cst_ind

                    ,T1.efe_nob_met_cst_ind

                    ,T1.ctr_bal_all   --这里之前写的是ctr_bal    ctr_bal_all

                    ,T1.dep_bal

                    ,T1.chm_bal

                    ,T1.dep_bal_add

                    ,T1.chm_bal_add

                    ,T1.cst_val_grd

                    ,T1.cprh_contri_cur_year

                    ,T1.loan_start_dt

                    ,T1.crd_isu_dt

                    ,T1.dep_opn_dt

                    ,T1.chm_trx_dt

                    ,T1.insu_dt

                    ,T1.fund_dt

                    ,T1.nob_dt

                    ,count(DISTINCT  t1.cst_id)  OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) brc_grp_cst_num --分行_企业授信客户数统计

                    ,coalesce(sum(t1.mon_acm_prcp_bal_acml) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_mon_acm_prcp_bal_acml --分行_企业本金余额月日均

                    ,coalesce(sum(t1.actl_start_use_crd_lmt) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_actl_start_use_crd_lmt --分行_企业本金启用额度

                    ,row_number() OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) rn_brc_grp --排序_分行_企业

                    ,sum(CASE

                           WHEN coalesce(t1.ctr_amt, 0) > 0 THEN 1 + T1.efe_crd_cst_ind + T1.efe_dep_cst_ind + T1.efe_chm_cst_ind + T1.efe_insu_cst_ind + T1.efe_fnd_cst_ind + T1.efe_nob_met_cst_ind

                           ELSE 0

                         END) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ) pd_hld_qty_sum_brc --汇总产品持有数_分行

                    ,count(DISTINCT  t1.cst_id)  OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) sbr_grp_cst_num --支行_企业授信客户数统计

                    ,coalesce(sum(t1.mon_acm_prcp_bal_acml) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_mon_acm_prcp_bal_acml --支行_企业本金余额月日均

                    ,coalesce(sum(t1.actl_start_use_crd_lmt) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_actl_start_use_crd_lmt --支行_企业本金启用额度

                    ,row_number() OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) rn_sbr_grp --排序_支行_企业

                    ,sum(CASE

                           WHEN coalesce(t1.ctr_amt, 0) > 0 THEN 1 + T1.efe_crd_cst_ind + T1.efe_dep_cst_ind + T1.efe_chm_cst_ind + T1.efe_insu_cst_ind + T1.efe_fnd_cst_ind + T1.efe_nob_met_cst_ind

                           ELSE 0

                         END) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ) pd_hld_qty_sum_sbr --汇总产品持有数_支行

                    ,count(DISTINCT  t1.cst_id)  OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) tem_grp_cst_num --团队_企业授信客户数统计

                    ,coalesce(sum(t1.mon_acm_prcp_bal_acml) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_mon_acm_prcp_bal_acml --团队_企业本金余额月日均

                    ,coalesce(sum(t1.actl_start_use_crd_lmt) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_actl_start_use_crd_lmt --团队_企业本金启用额度

                    ,row_number() OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) rn_tem_grp --排序_团队_企业

                    ,sum(CASE

                           WHEN coalesce(t1.ctr_amt, 0) > 0 THEN 1 + T1.efe_crd_cst_ind + T1.efe_dep_cst_ind + T1.efe_chm_cst_ind + T1.efe_insu_cst_ind + T1.efe_fnd_cst_ind + T1.efe_nob_met_cst_ind

                           ELSE 0

                         END) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ) pd_hld_qty_sum_tem --汇总产品持有数_团队

                    ,count(DISTINCT  t1.cst_id)  OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) mgr_grp_cst_num --客户经理_企业授信客户数统计

                    ,coalesce(sum(t1.mon_acm_prcp_bal_acml) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_mon_acm_prcp_bal_acml --客户经理_企业本金余额月日均

                    ,coalesce(sum(t1.actl_start_use_crd_lmt) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_actl_start_use_crd_lmt --客户经理_企业本金启用额度

                    ,row_number() OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) rn_mgr_grp --排序_客户经理_企业

                    ,sum(CASE

                           WHEN coalesce(t1.ctr_amt, 0) > 0 THEN 1 + T1.efe_crd_cst_ind + T1.efe_dep_cst_ind + T1.efe_chm_cst_ind + T1.efe_insu_cst_ind + T1.efe_fnd_cst_ind + T1.efe_nob_met_cst_ind

                           ELSE 0

                         END) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ) pd_hld_qty_sum_mgr --汇总产品持有数_客户经理

                    ,coalesce(sum(t1.ctr_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_ctr_bal  --分行_企业新增消费贷款余额

                    ,coalesce(sum(t1.ctr_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_ctr_bal  --支行_企业新增消费贷款余额

                    ,coalesce(sum(t1.ctr_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_ctr_bal  --团队_企业新增消费贷款余额

                    ,coalesce(sum(t1.ctr_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_ctr_bal  --客户经理_企业新增消费贷款余额

                    --20231211update

                    ,coalesce(sum(t1.ctr_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_ctr_fenzi --分行_企业授信金额加权利率分子

                    ,coalesce(sum(t1.ctr_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_ctr_fenmu --分行_企业授信金额加权利率分母

                    ,coalesce(sum(t1.ctr_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_ctr_fenzi --支行_企业授信金额加权利率分子

                    ,coalesce(sum(t1.ctr_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_ctr_fenmu --支行_企业授信金额加权利率分母

                    ,coalesce(sum(t1.ctr_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_ctr_fenzi --团队_企业授信金额加权利率分子

                    ,coalesce(sum(t1.ctr_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_ctr_fenmu --团队_企业授信金额加权利率分母

                    ,coalesce(sum(t1.ctr_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_ctr_fenzi --客户经理_企业授信金额加权利率分子

                    ,coalesce(sum(t1.ctr_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_ctr_fenmu --客户经理_企业授信金额加权利率分母

                    ,coalesce(sum(t1.dbil_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_dbil_fenzi --分行_企业用信金额加权利率分子

                    ,coalesce(sum(t1.dbil_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_dbil_fenmu --分行_企业用信金额加权利率分母

                    ,coalesce(sum(t1.dbil_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_dbil_fenzi --支行_企业用信金额加权利率分子

                    ,coalesce(sum(t1.dbil_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_dbil_fenmu --支行_企业用信金额加权利率分母

                    ,coalesce(sum(t1.dbil_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_dbil_fenzi --团队_企业用信金额加权利率分子

                    ,coalesce(sum(t1.dbil_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_dbil_fenmu --团队_企业用信金额加权利率分母

                    ,coalesce(sum(t1.dbil_fenzi) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_dbil_fenzi --客户经理_企业用信金额加权利率分子

                    ,coalesce(sum(t1.dbil_fenmu) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_dbil_fenmu --客户经理_企业用信金额加权利率分母

                    ,coalesce(sum(t1.aum_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0)     brc_aum     --分行_企业aum

                    ,coalesce(sum(t1.aum_bal_add) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_aum_add --分行_企业aum_add

                    ,coalesce(sum(t1.aum_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0)     sbr_aum     --支行_企业aum

                    ,coalesce(sum(t1.aum_bal_add) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_aum_add --支行_企业aum_add

                    ,coalesce(sum(t1.aum_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0)     tem_aum     --团队_企业aum

                    ,coalesce(sum(t1.aum_bal_add) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_aum_add --团队_企业aum_add

                    ,coalesce(sum(t1.aum_bal) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0)     mgr_aum     --客户经理_企业aum

                    ,coalesce(sum(t1.aum_bal_add) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_aum_add --客户经理_企业aum_add

                    ,CASE

                       WHEN t1.ent_cst_id <> '-' THEN '1'

                       ELSE '0'

                     END if_jiandang --是否建档客户

                    ,CASE

                       WHEN t1.ent_cst_id = '-' THEN '0'

                       ELSE decode(t3.forml_cst_ind, '1', 1, '', 0)

                     END forml_cst_ind  --是否正式客户标识

                    --20231226update

                    ,coalesce(sum(t1.ctr_amt) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_ctr_amt --分行_企业新增消费贷款金额

                    ,coalesce(sum(t1.ctr_amt) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_ctr_amt --支行_企业新增消费贷款金额

                    ,coalesce(sum(t1.ctr_amt) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_ctr_amt --团队_企业新增消费贷款金额

                    ,coalesce(sum(t1.ctr_amt) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_ctr_amt --客户经理_企业新增消费贷款金额

					--,coalesce(sum(t1.card_cnt) OVER ( PARTITION BY T1.ent_cst_nm , T1.brc_org_nm ), 0) brc_grp_card_cnt --分行_企业新增信用卡户数

                    --,coalesce(sum(t1.card_cnt) OVER ( PARTITION BY T1.ent_cst_nm , T1.sbr_org_nm ), 0) sbr_grp_card_cnt --支行_企业新增信用卡户数

                    --,coalesce(sum(t1.card_cnt) OVER ( PARTITION BY T1.ent_cst_nm , T1.tem_org_nm ), 0) tem_grp_card_cnt --团队_企业新增信用卡户数

                    --,coalesce(sum(t1.card_cnt) OVER ( PARTITION BY T1.ent_cst_nm , T1.prm_mgr_id ), 0) mgr_grp_card_cnt --客户经理_企业新增信用卡户数

FROM    lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet2_2024 t1

LEFT JOIN    adm_pub.adm_csm_cbas_mng_inf_dd t3 --客户集市-客户基础-客户管户信息

ON      t1.ent_cst_id = t3.cst_id

AND     t3.dt = '20250331'

WHERE   t1.dt = '20250331'

)  a

;





---2024年汇总

--DROP TABLE IF EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_2024 PURGE;

--CREATE TABLE IF NOT EXISTS lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_2024

--(    cst_id                              STRING  COMMENT '个人客户号'

--    ,cst_nm                              STRING  COMMENT '个人客户名'

--    ,ent_cst_nm                          STRING  COMMENT '企业客户名'

--    ,brc_org_nm                          STRING  COMMENT '分行名称'

--    ,rn_brc_grp                          STRING  COMMENT '排序_分行_企业'

--    ,if_jiandang                         STRING  COMMENT '是否建档'

--    ,forml_cst_ind                       STRING  COMMENT '正式客户标识'

--    ,brc_grp_cst_num_20231231            DECIMAL COMMENT '2023年末分行_企业新增授信客户数统计'

--    ,brc_grp_cst_num                     DECIMAL COMMENT '分行_企业2024年新增授信客户数统计'

--    , brc_grp_project_num                DECIMAL COMMENT '分行_企业新增项目数(3比1折算后)'

--    ,brc_grp_ctr_amt                     DECIMAL COMMENT '分行_企业新增消费贷款金额'

--    ,brc_grp_ctr_bal                     DECIMAL COMMENT '分行_企业新增消费贷款余额'

--    ,brc_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '分行_企业本金余额月日均'

--    ,brc_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '分行_企业本金启用额度'

--    ,yongxin_rate_mth_avg_brc            DECIMAL COMMENT '月日均用信率_分行'

--    ,brc_ctr_rate                        DECIMAL COMMENT '分行加权平均授信利率'

--    ,brc_dbil_rate                       DECIMAL COMMENT '分行加权平均用信利率'

--    ,sbr_org_nm                          STRING  COMMENT '支行名称'

--    ,rn_sbr_grp                          STRING  COMMENT '排序_支行_企业'

--    ,sbr_grp_cst_num_20231231            DECIMAL COMMENT '2023年末支行_企业新增授信客户数统计'

--    ,sbr_grp_cst_num                     DECIMAL COMMENT '支行_企业2024年新增授信客户数统计'

--    ,sbr_grp_project_num                 DECIMAL COMMENT '支行_企业新增项目数(3比1折算后)'

--    ,sbr_grp_ctr_amt                     DECIMAL COMMENT '支行_企业新增消费贷款金额'

--    ,sbr_grp_ctr_bal                     DECIMAL COMMENT '支行_企业新增消费贷款余额'

--    ,sbr_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '支行_企业本金余额月日均'

--    ,sbr_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '支行_企业本金启用额度'

--    ,yongxin_rate_mth_avg_sbr            DECIMAL COMMENT '月日均用信率_支行'

--    ,sbr_ctr_rate                        DECIMAL COMMENT '支行加权平均授信利率'

--    ,sbr_dbil_rate                       DECIMAL COMMENT '支行加权平均用信利率'

--    ,tem_org_id                          STRING  COMMENT '团队机构号'

--    ,tem_org_nm                          STRING  COMMENT '团队机构名称'

--    ,rn_tem_grp                          STRING  COMMENT '排序_团队_企业'

--    ,tem_grp_cst_num_20231231            DECIMAL COMMENT '2023年末团队_企业新增授信客户数统计'

--    ,tem_grp_cst_num                     DECIMAL COMMENT '团队_企业2024年新增授信客户数统计'

--    ,tem_grp_project_num                 DECIMAL COMMENT '团队_企业新增项目数(3比1折算后)'

--    ,tem_grp_ctr_amt                     DECIMAL COMMENT '团队_企业新增消费贷款金额'

--    ,tem_grp_ctr_bal                     DECIMAL COMMENT '团队_企业新增消费贷款余额'

--    ,tem_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '团队_企业本金余额月日均'

--    ,tem_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '团队_企业本金启用额度'

--    ,yongxin_rate_mth_avg_tem            DECIMAL COMMENT '月日均用信率_团队'

--    ,tem_ctr_rate                        DECIMAL COMMENT '团队加权平均授信利率'

--    ,tem_dbil_rate                       DECIMAL COMMENT '团队加权平均用信利率'

--    ,prm_mgr_id                          STRING  COMMENT '主管户客户经理工号'

--    ,prm_mgr_nm                          STRING  COMMENT '主管户客户经理名称'

--    ,rn_mgr_grp                          STRING  COMMENT '排序_客户经理_企业'

--    ,mgr_grp_cst_num_20231231            DECIMAL COMMENT '2023年末客户经理_企业新增授信客户数统计'

--    ,mgr_grp_cst_num                     DECIMAL COMMENT '客户经理_企业2024年新增授信客户数统计'

--    ,mgr_grp_project_num                 DECIMAL COMMENT '客户经理_企业新增项目数(3比1折算后)'

--    ,mgr_grp_ctr_amt                     DECIMAL COMMENT '客户经理_企业新增消费贷款金额'

--    ,mgr_grp_ctr_bal                     DECIMAL COMMENT '客户经理_企业新增消费贷款余额'

--    ,mgr_grp_mon_acm_prcp_bal_acml       DECIMAL COMMENT '客户经理_企业本金余额月日均'

--    ,mgr_grp_actl_start_use_crd_lmt      DECIMAL COMMENT '客户经理_企业本金启用额度'

--    ,yongxin_rate_mth_avg_mgr            DECIMAL COMMENT '月日均用信率_客户经理'

--    ,mgr_dbil_rate                       DECIMAL COMMENT '客户经理加权平均用信利率'

--    ,mgr_ctr_rate                        DECIMAL COMMENT '客户经理加权平均授信利率'

--    ,brc_org_id                          STRING  COMMENT '分行层级机构编号'

--    ,sbr_org_id                          STRING  COMMENT '支行层级机构编号'

--)

-- COMMENT

-- '企业团办_SHEET4-企业清单2_汇总_2024'

-- PARTITIONED BY

-- (

--     DT STRING COMMENT '日期分区'

-- );



-----新增表字段

-- alter table LAB_BIGDATA_DEV.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_2024 add  columns

--(grp_org_id               STRING  COMMENT '集团机构编号'

--,cpy_org_id               STRING  COMMENT '法人机构编号'

--);









INSERT OVERWRITE TABLE lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_huizong_2024 PARTITION (DT = '20250331')

select distinct   t1.cst_id                             --个人客户号

,t1.cst_nm                                --个人客户名

,t1.ent_cst_nm                          --企业客户名

,t1.brc_org_nm                          --分行名称

,t1.rn_brc_grp                          --排序_分行_企业

,t1.if_jiandang                         --是否建档

,t1.forml_cst_ind                       --正式客户标识

,t2.brc_grp_cst_num as brc_grp_cst_num_20231231            --2023年末分行_企业新增授信客户数统计

,t1.brc_grp_cst_num                     --分行_企业2024年新增授信客户数统计

,floor((case when nvl(t1.brc_grp_cst_num,0) <= 2  and  nvl(t2.brc_grp_cst_num,0) <= 2 then  (nvl(t1.brc_grp_cst_num,0) + nvl(t2.brc_grp_cst_num,0))

       when nvl(t1.brc_grp_cst_num,0) >= 3  then   nvl(t1.brc_grp_cst_num,0)  else 0 end)/3)  as   brc_grp_project_num               --分行_企业新增项目数(3比1折算后)

,t1.brc_grp_ctr_amt                     --分行_企业新增消费贷款金额

,t1.brc_grp_ctr_bal                     --分行_企业新增消费贷款余额

,t1.brc_grp_mon_acm_prcp_bal_acml       --分行_企业本金余额月日均

,t1.brc_grp_actl_start_use_crd_lmt      --分行_企业本金启用额度

,t1.yongxin_rate_mth_avg_brc            --月日均用信率_分行

,case when t1.brc_ctr_fenmu > 0 then t1.brc_ctr_fenzi/t1.brc_ctr_fenmu else ''     end   as  brc_ctr_rate                           --分行加权平均授信利率

,case when t1.brc_dbil_fenmu > 0 then t1.brc_dbil_fenzi/t1.brc_dbil_fenmu  else '' end   as  brc_dbil_rate                        --分行加权平均用信利率

,t1.sbr_org_nm                         --支行名称

,t1.rn_sbr_grp                            --排序_支行_企业

,t3.sbr_grp_cst_num   as  sbr_grp_cst_num_20231231           --2023年末支行_企业新增授信客户数统计

,t1.sbr_grp_cst_num                    --支行_企业2024年新增授信客户数统计

,floor((case when nvl(t1.sbr_grp_cst_num,0) <= 2  and  nvl(t3.sbr_grp_cst_num,0) <= 2 then  nvl(t1.sbr_grp_cst_num,0) + nvl(t3.sbr_grp_cst_num,0)

       when nvl(t1.sbr_grp_cst_num,0) >= 3  then   nvl(t1.sbr_grp_cst_num,0)  else 0 end)/3)  as      sbr_grp_project_num                 --支行_企业新增项目数(3比1折算后)

,t1.sbr_grp_ctr_amt                    --支行_企业新增消费贷款金额

,t1.sbr_grp_ctr_bal                    --支行_企业新增消费贷款余额

,t1.sbr_grp_mon_acm_prcp_bal_acml      --支行_企业本金余额月日均

,t1.sbr_grp_actl_start_use_crd_lmt     --支行_企业本金启用额度

,t1.yongxin_rate_mth_avg_sbr           --月日均用信率_支行

,case when t1.sbr_ctr_fenmu > 0 then t1.sbr_ctr_fenzi/t1.sbr_ctr_fenmu else ''     end   as  sbr_ctr_rate                       --支行加权平均授信利率

,case when t1.sbr_dbil_fenmu > 0 then t1.sbr_dbil_fenzi/t1.sbr_dbil_fenmu  else '' end   as  sbr_dbil_rate                      --支行加权平均用信利率

,t1.tem_org_id                          --团队机构号

,t1.tem_org_nm                          --团队机构名称

,t1.rn_tem_grp                          --排序_团队_企业

,t4.tem_grp_cst_num  as  tem_grp_cst_num_20231231            --2023年末团队_企业新增授信客户数统计

,t1.tem_grp_cst_num                     --团队_企业2024年新增授信客户数统计

,floor((case when nvl(t1.tem_grp_cst_num,0) <= 2  and  nvl(t4.tem_grp_cst_num,0) <= 2 then  (nvl(t1.tem_grp_cst_num,0) + nvl(t4.tem_grp_cst_num ,0))

       when nvl(t1.tem_grp_cst_num,0) >= 3  then   nvl(t1.tem_grp_cst_num,0)  else 0 end)/3)  as     tem_grp_project_num                  --团队_企业新增项目数(3比1折算后)

,t1.tem_grp_ctr_amt                     --团队_企业新增消费贷款金额

,t1.tem_grp_ctr_bal                     --团队_企业新增消费贷款余额

,t1.tem_grp_mon_acm_prcp_bal_acml       --团队_企业本金余额月日均

,t1.tem_grp_actl_start_use_crd_lmt      --团队_企业本金启用额度

,t1.yongxin_rate_mth_avg_tem            --月日均用信率_团队

,case when t1.tem_ctr_fenmu > 0 then t1.tem_ctr_fenzi/t1.tem_ctr_fenmu else ''     end   as  tem_ctr_rate                         --团队加权平均授信利率

,case when t1.tem_dbil_fenmu > 0 then t1.tem_dbil_fenzi/t1.tem_dbil_fenmu  else '' end   as  tem_dbil_rate                       --团队加权平均用信利率

,t1.prm_mgr_id                          --主管户客户经理工号

,t1.prm_mgr_nm                          --主管户客户经理名称

,t1.rn_mgr_grp                          --排序_客户经理_企业

,t5.mgr_grp_cst_num as  mgr_grp_cst_num_20231231            --2023年末客户经理_企业新增授信客户数统计

,t1.mgr_grp_cst_num                     --客户经理_企业2024年新增授信客户数统计

,floor((case when nvl(t1.mgr_grp_cst_num,0) <= 2  and  nvl(t5.mgr_grp_cst_num,0) <=2  then  (nvl(t1.mgr_grp_cst_num,0) + nvl(t5.mgr_grp_cst_num,0))

       when nvl(t1.mgr_grp_cst_num,0) >= 3  then   nvl(t1.mgr_grp_cst_num,0) else 0 end)/3)  as      mgr_grp_project_num                   --客户经理_企业新增项目数(3比1折算后)

,t1.mgr_grp_ctr_amt                     --客户经理_企业新增消费贷款金额

,t1.mgr_grp_ctr_bal                     --客户经理_企业新增消费贷款余额

,t1.mgr_grp_mon_acm_prcp_bal_acml       --客户经理_企业本金余额月日均

,t1.mgr_grp_actl_start_use_crd_lmt      --客户经理_企业本金启用额度

,t1.yongxin_rate_mth_avg_mgr            --月日均用信率_客户经理

,case when t1.mgr_dbil_fenmu > 0 then t1.mgr_dbil_fenzi/t1.mgr_dbil_fenmu  else '' end   as  mgr_dbil_rate                       --客户经理加权平均用信利率

,case when t1.mgr_ctr_fenmu > 0 then t1.mgr_ctr_fenzi/t1.mgr_ctr_fenmu else ''     end   as  mgr_ctr_rate                       --客户经理加权平均授信利率

,t1.brc_org_id               --分行层级机构编号

,t1.sbr_org_id               --支行层级机构编号

,t1.grp_org_id               --集团机构编号

,t1.cpy_org_id               --法人机构编号

from   lab_bigdata_dev.phjrb_ys_qytb_bi_data_sheet4_tmp_2024     t1

left  join  (select  distinct  t2.ent_cst_nm            --企业客户名

		,t2.brc_org_nm            --分行名称

		,t2.brc_grp_cst_num       --分行_企业授信客户数统计

from   lab_bigdata_dev.phjrb_ys_qytb_bus_loan_cst_cnt_wdq_wjq_20231231   t2		 )   t2

ON      t1.ent_cst_nm = t2.ent_cst_nm

AND     t1.brc_org_nm = t2.brc_org_nm

left  join  (select  distinct  t2.ent_cst_nm            --企业客户名

		,t2.sbr_org_nm            --支行名称

		,t2.sbr_grp_cst_num       --支行_企业授信客户数统计

from   lab_bigdata_dev.phjrb_ys_qytb_bus_loan_cst_cnt_wdq_wjq_20231231   t2		 )   t3

ON      t1.ent_cst_nm = t3.ent_cst_nm

AND     t1.sbr_org_nm = t3.sbr_org_nm

left  join  (select  distinct  t2.ent_cst_nm            --企业客户名

		,t2.tem_org_nm            --团队机构名称

		,t2.tem_grp_cst_num       --团队_企业授信客户数统计

from   lab_bigdata_dev.phjrb_ys_qytb_bus_loan_cst_cnt_wdq_wjq_20231231   t2		 )   t4

ON      t1.ent_cst_nm = t4.ent_cst_nm

AND     t1.tem_org_nm = t4.tem_org_nm

left  join  (select  distinct  t2.ent_cst_nm            --企业客户名

		,t2.prm_mgr_nm            --主管户客户经理名称

		,t2.mgr_grp_cst_num       --客户经理_企业授信客户数统计

from   lab_bigdata_dev.phjrb_ys_qytb_bus_loan_cst_cnt_wdq_wjq_20231231   t2		 )   t5

ON      t1.ent_cst_nm = t5.ent_cst_nm

AND     t1.prm_mgr_nm = t5.prm_mgr_nm

where t1.dt = '20250331'

;
**麦肯锡信用卡.sql
drop table if exists lab_risk_dev.dream_card_apl_test;

CREATE TABLE lab_risk_dev.dream_card_apl_test as

	SELECT s.cst_id,s.date_now,s.kind

	    ,ba.apl_id

	    ,ba.apl_dt

	    ,ba.pd_id --产品代码

	    ,datediff(to_date(apl_dt,'yyyymmdd'),to_date(date_now,'yyyymmdd'),'dd') as diff_days

	    FROM

	    lab_risk_dev.sample_send_card20210318 s                        --样本表：下发的名单

	LEFT JOIN

	    edw.dwd_bus_loan_apl_inf_dd ba --申请表

	    ON s.cst_id=ba.cst_id

        and ba.pd_id like '2010502%'

	    and ba.dt='@@{yyyyMMdd}'

;

	SELECT * FROM lab_risk_dev.dream_card_apl_test where apl_dt>=date_now;

	SELECT * FROM lab_risk_dev.dream_card_apl_test where apl_dt>='20210330';





	CREATE TABLE lab_risk_dev.tmp_test11 AS

SELECT  DISTINCT cst_id

FROM    edw.dim_bus_loan_ctr_inf_dd t

WHERE   t.BUS_CD = 'J'

AND     t.dt = '20201008';